26.10 17:00:08 TIMER: Check auto-disconnect...
26.10 17:00:09 STATS: vdl.0 cache, locks:0
26.10 17:01:08 TIMER: Check auto-disconnect...
26.10 17:01:09 STATS: vdl.0 cache, locks:0
26.10 17:02:08 TIMER: Check auto-disconnect...
26.10 17:02:09 STATS: vdl.0 cache, locks:0
26.10 17:03:08 TIMER: Check auto-disconnect...
26.10 17:03:09 STATS: vdl.0 cache, locks:0
26.10 17:04:08 TIMER: Check auto-disconnect...
26.10 17:04:09 STATS: vdl.0 cache, locks:0
26.10 17:05:08 TIMER: Check auto-disconnect...
26.10 17:05:09 STATS: vdl.0 cache, locks:0
26.10 17:06:08 TIMER: Check auto-disconnect...
26.10 17:06:09 STATS: vdl.0 cache, locks:0
26.10 17:07:08 TIMER: Check auto-disconnect...
26.10 17:07:09 STATS: vdl.0 cache, locks:0
26.10 17:08:08 TIMER: Check auto-disconnect...
26.10 17:08:09 STATS: vdl.0 cache, locks:0
26.10 17:09:08 TIMER: Check auto-disconnect...
26.10 17:09:09 STATS: vdl.0 cache, locks:0
26.10 17:10:08 TIMER: Check auto-disconnect...
26.10 17:10:09 STATS: vdl.0 cache, locks:0
26.10 17:11:08 TIMER: Check auto-disconnect...
26.10 17:11:09 STATS: vdl.0 cache, locks:0
26.10 17:12:08 TIMER: Check auto-disconnect...
26.10 17:12:09 STATS: vdl.0 cache, locks:0
26.10 17:13:08 TIMER: Check auto-disconnect...
26.10 17:13:09 STATS: vdl.0 cache, locks:0
26.10 17:14:08 TIMER: Check auto-disconnect...
26.10 17:14:09 STATS: vdl.0 cache, locks:0
26.10 17:15:08 TIMER: Check auto-disconnect...
26.10 17:15:09 STATS: vdl.0 cache, locks:0
26.10 17:16:08 TIMER: Check auto-disconnect...
26.10 17:16:09 STATS: vdl.0 cache, locks:0
26.10 17:17:08 TIMER: Check auto-disconnect...
26.10 17:17:09 STATS: vdl.0 cache, locks:0
26.10 17:18:08 TIMER: Check auto-disconnect...
26.10 17:18:09 STATS: vdl.0 cache, locks:0
26.10 17:19:08 TIMER: Check auto-disconnect...
26.10 17:19:09 STATS: vdl.0 cache, locks:0
26.10 17:20:08 TIMER: Check auto-disconnect...
26.10 17:20:09 STATS: vdl.0 cache, locks:0
26.10 17:21:08 TIMER: Check auto-disconnect...
26.10 17:21:09 STATS: vdl.0 cache, locks:0
26.10 17:22:08 TIMER: Check auto-disconnect...
26.10 17:22:09 STATS: vdl.0 cache, locks:0
26.10 17:23:08 TIMER: Check auto-disconnect...
26.10 17:23:09 STATS: vdl.0 cache, locks:0
26.10 17:24:08 TIMER: Check auto-disconnect...
26.10 17:25:44 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 17:25:44 -<<-: server.login ok
26.10 17:25:44 DB: SELECT * FROM LocalizationStrings
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 TIMER: Starting timer...
26.10 17:25:44 TIMER: Timer running...
26.10 17:25:44 DB: SELECT * FROM GameVars
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
26.10 17:25:44 -<<-: core/quest.getDaily ok
26.10 17:25:44 DB: SELECT * FROM UserAttributeTypes
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM UserVariableTypes
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 17:25:44 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM ItemGroups
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM Bundles ORDER BY ID
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 SHOP: loading items...
26.10 17:25:44 ->>-: core/shop.getList { _type => core/shop.getList }
26.10 17:25:44 -<<-: core/shop.getList ok
26.10 17:25:44 SHOP: 0 items loaded (0 sec)
26.10 17:25:44 DB: SELECT * FROM EffectAttributeTypes
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT * FROM Effects
26.10 17:25:44 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 17:25:44 -<<-: core/server.query ok
26.10 17:25:44 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(