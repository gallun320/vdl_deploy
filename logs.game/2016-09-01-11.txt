01.09 11:55:11 ->>-: core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 11:55:11 -<<-: server.login ok
01.09 11:55:11 DB: SELECT * FROM LocalizationStrings
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 TIMER: Starting timer...
01.09 11:55:11 TIMER: Timer running...
01.09 11:55:11 DB: SELECT * FROM GameVars
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
01.09 11:55:11 -<<-: core/quest.getDaily ok
01.09 11:55:11 DB: SELECT * FROM UserAttributeTypes
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM UserVariableTypes
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 11:55:11 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM ItemGroups
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM Bundles ORDER BY ID
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 SHOP: loading items...
01.09 11:55:11 ->>-: core/shop.getList { _type => core/shop.getList }
01.09 11:55:11 -<<-: core/shop.getList ok
01.09 11:55:11 SHOP: 0 items loaded (0.001 sec)
01.09 11:55:11 DB: SELECT * FROM EffectAttributeTypes
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM Effects
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 11:55:11 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 11:55:11 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:55:11 DB: SELECT * FROM Badges
01.09 11:55:11 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 11:55:11 -<<-: core/server.query ok
01.09 11:57:17 ->>-: core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 11:57:17 -<<-: server.login ok
01.09 11:57:17 DB: SELECT * FROM LocalizationStrings
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 TIMER: Starting timer...
01.09 11:57:17 TIMER: Timer running...
01.09 11:57:17 DB: SELECT * FROM GameVars
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
01.09 11:57:17 -<<-: core/quest.getDaily ok
01.09 11:57:17 DB: SELECT * FROM UserAttributeTypes
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM UserVariableTypes
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 11:57:17 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM ItemGroups
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM Bundles ORDER BY ID
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 SHOP: loading items...
01.09 11:57:17 ->>-: core/shop.getList { _type => core/shop.getList }
01.09 11:57:17 -<<-: core/shop.getList ok
01.09 11:57:17 SHOP: 0 items loaded (0 sec)
01.09 11:57:17 DB: SELECT * FROM EffectAttributeTypes
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT * FROM Effects
01.09 11:57:17 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 11:57:17 -<<-: core/server.query ok
01.09 11:57:17 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(01.09 11:58:24 ->>-: core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 11:58:24 -<<-: server.login ok
01.09 11:58:24 DB: SELECT * FROM LocalizationStrings
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 TIMER: Starting timer...
01.09 11:58:24 TIMER: Timer running...
01.09 11:58:24 DB: SELECT * FROM GameVars
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
01.09 11:58:24 -<<-: core/quest.getDaily ok
01.09 11:58:24 DB: SELECT * FROM UserAttributeTypes
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM UserVariableTypes
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 11:58:24 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM ItemGroups
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM Bundles ORDER BY ID
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 SHOP: loading items...
01.09 11:58:24 ->>-: core/shop.getList { _type => core/shop.getList }
01.09 11:58:24 -<<-: core/shop.getList ok
01.09 11:58:24 SHOP: 0 items loaded (0 sec)
01.09 11:58:24 DB: SELECT * FROM EffectAttributeTypes
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM Effects
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 11:58:24 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 11:58:24 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:24 DB: SELECT * FROM Badges
01.09 11:58:24 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 11:58:24 -<<-: core/server.query ok
01.09 11:58:32 NET: Client (conid:15410246) connected to vdl.0 (clients:1)
01.09 11:59:03 NET: Client (name:null conid:15410246 TCP) disconnected from vdl.0 (clients:0)
01.09 11:59:15 NET: Client (conid:50735639) connected to vdl.0 (clients:1)
01.09 11:59:24 TIMER: Check auto-disconnect...
01.09 11:59:25 STATS: vdl.0 cache, locks:0
