19.11 12:00:15 STATS: vdl.0 cache, locks:2
19.11 12:00:29 TIMER: Check auto-disconnect...
19.11 12:01:15 STATS: vdl.0 cache, locks:2
19.11 12:01:29 TIMER: Check auto-disconnect...
19.11 12:02:15 STATS: vdl.0 cache, locks:2
19.11 12:02:29 TIMER: Check auto-disconnect...
19.11 12:03:15 STATS: vdl.0 cache, locks:2
19.11 12:03:29 TIMER: Check auto-disconnect...
19.11 12:04:15 STATS: vdl.0 cache, locks:2
19.11 12:04:29 TIMER: Check auto-disconnect...
19.11 12:05:15 STATS: vdl.0 cache, locks:2
19.11 12:05:29 TIMER: Check auto-disconnect...
19.11 12:06:09 NET: Client (conid:51908980) connected to vdl.0 (clients:1)
19.11 12:06:10 ++ NET: null req: user.register { messageType => user.register }
19.11 12:06:11 DB: SELECT * FROM users
19.11 12:06:11 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {{ city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-10 11:48:59.9391+00, language =>   , id => 1, deleted => false }, { city => , password => uid16, name => uid16, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479544800,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-19 08:37:10.286209+00, language => en, id => 16, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478779175,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, language => en, id => 2, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:08:05.144895+00, language =>   , id => 3, deleted => false }, { city => , password => uid4, name => uid4, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:24:23.638304+00, language =>   , id => 4, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:28:38.741567+00, language =>   , id => 5, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479119901,"lastLoginDate":319,"lastLoadDate":1115},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, language => en, id => 6, deleted => false }, { city => , password => uid13, name => uid13, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-16 11:16:26.870358+00, language =>   , id => 13, deleted => false }, { city => , password => uid14, name => uid14, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-16 11:17:20.119377+00, language =>   , id => 14, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 13:32:51.765479+00, language =>   , id => 7, deleted => false }, { city => , password => uid11, name => uid11, year => null, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479067417,"lastLoginDate":319,"lastLoadDate":1115},"effects":{"list":[]}}, networktype =>   , email => null, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, language => en, id => 11, deleted => false }, { city => , password => uid12, name => uid12, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479299358,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, language => en, id => 12, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479405440,"lastLoginDate":322,"lastLoadDate":1118},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 15:37:47.142701+00, language => en, id => 8, deleted => false }, { city => , password => uid10, name => uid10, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478975056,"lastLoginDate":318,"lastLoadDate":1114},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-11 16:44:40.114978+00, language => en, id => 10, deleted => false }, { city => , password => uid9, name => uid9, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479481494,"lastLoginDate":323,"lastLoadDate":1119},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-11 07:57:55.30687+00, language => en, id => 9, deleted => false }, { city => , password => uid15, name => uid15, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-18 15:18:55.183965+00, language =>   , id => 15, deleted => false }}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 STATS: vdl.0 cache connection, 2118 calls, total 1.50098061561584 sec spent, avg 0.71 ms
19.11 12:06:11 DB: SELECT ID FROM Users WHERE Name = 'uid17'
19.11 12:06:11 == NET: null ret: user.auth { type => user.auth, token => dWlkMTc= }
19.11 12:06:11 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid17', _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 DB: SELECT nextval('Users_id_seq') AS id
19.11 12:06:11 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {{ id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 ->>-: core/user.register { password => uid17, name => uid17, fullParams => { password => uid17, name => uid17, networkid => , networktype => , messageType => user.register, id => 17 }, networkid => , connectionID => 51908980, networktype => , email => , id => 17, _type => core/user.register }
19.11 12:06:11 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
19.11 12:06:11 -<<-: core/user.registerResponse { password => uid17, name => uid17, _isNotify => true, fullParams => { password => uid17, name => uid17, networkid => , networktype => , messageType => user.register, id => 17 }, networkid => , connectionID => 51908980, networktype => , email => , id => 17, _type => core/user.registerResponse }
19.11 12:06:11 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:06:11 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:06:11 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:06:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:06:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:06:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:06:11 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:06:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => 1, language =>   , region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, hints => 15 }, effects => { list => [] } }}, version => 19, id => 17 } }
19.11 12:06:11 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:06:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 17 } }
19.11 12:06:11 NET: Client login (conid:51908980, id:17, name:uid17)
19.11 12:06:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:06:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:06:11 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:06:11 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 DB: SELECT ID FROM TempUserLogins WHERE UserID = 17 AND Date = 'today'::timestamp
19.11 12:06:11 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 17 AND Date = 'today'::timestamp, _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (17, 'today'::timestamp)
19.11 12:06:11 ++ NET: uid17 req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:06:11 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:06:11 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:06:11 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:06:11 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (17, 'today'::timestamp), _type => core/server.pending }} }
19.11 12:06:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:06:11 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:06:11 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:06:11 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
19.11 12:06:11 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479557171, lastLoginDate => 324, lastLoadDate => 1120 } }}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:06:11 -<<-: core/cache.update { errorCode => ok, version => 20, _type => core/cache.update }
19.11 12:06:11 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:06:11 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:06:11 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:06:11 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:06:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:06:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:06:11 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:06:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:06:11 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:06:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1479557171, lastLoginDate => 324, lastLoadDate => 1120, hints => 15 }, effects => { list => [] } }}, version => 20, id => 17 } }
19.11 12:06:11 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:06:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 17 } }
19.11 12:06:11 NET: Client login (conid:51908980, id:17, name:uid17)
19.11 12:06:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:06:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:06:11 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:06:11 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:06:11 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:06:15 STATS: vdl.0 cache, locks:4
19.11 12:06:18 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:06:18 TIME: user.ping 0.17 ms
19.11 12:06:20 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:06:20 -<<-: core/cache.update { errorCode => ok, version => 21, _type => core/cache.update }
19.11 12:06:21 NET: Client (name:uid17 conid:51908980 TCP) disconnected from vdl.0 (clients:0)
19.11 12:06:21 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:06:21 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:06:21 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:06:21 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:06:21 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:06:21 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:06:21 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
19.11 12:06:21 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:06:21 -<<-: core/cache.update { errorCode => ok, version => 22, _type => core/cache.update }
19.11 12:06:21 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:06:21 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:06:21 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:06:21 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:06:21 NET: Client (conid:84033597) connected to vdl.0 (clients:1)
19.11 12:06:21 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:06:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:06:21 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:06:21 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:06:21 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:06:21 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:06:21 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:06:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1479557171, lastLoginDate => 324, lastLoadDate => 1120, hints => 15 }, effects => { list => [] } }}, version => 22, id => 17 } }
19.11 12:06:21 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:06:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 17 } }
19.11 12:06:21 NET: Client login (conid:84033597, id:17, name:uid17)
19.11 12:06:21 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:06:21 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:06:21 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:06:21 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:06:21 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:06:21 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:06:21 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:06:29 TIMER: Check auto-disconnect...
19.11 12:06:30 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:06:30 -<<-: core/cache.update { errorCode => ok, version => 23, _type => core/cache.update }
19.11 12:07:15 STATS: vdl.0 cache, locks:4
19.11 12:07:19 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:07:19 TIME: user.ping 0.19 ms
19.11 12:07:19 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:07:29 TIMER: Check auto-disconnect...
19.11 12:07:40 ++ NET: uid17 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:07:40 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 17 }, _type => vdl/cache.battle.findRandom }
19.11 12:07:40 -<<-: vdl/cache.battle.findRandom { errorCode => _requestException, _type => vdl/cache.battle.findRandom }
19.11 12:07:40 STATS: vdl.0 cache connection, 2154 calls, total 1.53315734863281 sec spent, avg 0.71 ms
19.11 12:07:40 TRACE: battle.find : cacheRequest exception { user => { time => 60, player => 17 }, _type => vdl/cache.battle.findRandom }
19.11 12:07:40 TRACE: battle.find : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 221
Called from modules/VDLBattleModule.hx line 170
Called from modules/VDLBattleModule.hx line 58
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1225
19.11 12:07:43 NET: Client (name:uid17 conid:84033597 TCP) disconnected from vdl.0 (clients:0)
19.11 12:07:43 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:07:43 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:07:43 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:07:43 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:07:43 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:07:43 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:07:43 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
19.11 12:07:43 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:07:43 -<<-: core/cache.update { errorCode => ok, version => 24, _type => core/cache.update }
19.11 12:07:43 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:07:43 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.11 12:07:43 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:07:43 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:07:43 NET: Client (conid:71261756) connected to vdl.0 (clients:1)
19.11 12:07:43 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:07:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:07:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:07:43 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:07:43 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:07:43 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:07:43 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:07:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1479557171, lastLoginDate => 324, lastLoadDate => 1120, hints => 15 }, effects => { list => [] } }}, version => 24, id => 17 } }
19.11 12:07:43 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:07:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 3, id => 17 } }
19.11 12:07:43 NET: Client login (conid:71261756, id:17, name:uid17)
19.11 12:07:43 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:07:43 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:07:43 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:07:43 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:07:43 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:07:43 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:07:43 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:07:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:07:50 -<<-: core/cache.update { errorCode => ok, version => 25, _type => core/cache.update }
19.11 12:08:14 ++ NET: uid17 req: battle.end { type => closeGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 0 }
19.11 12:08:14 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:08:14 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:08:14 TRACE: battle.end : cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:08:14 TRACE: battle.end : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 84
Called from modules/VDLBattleModule.hx line 50
Called from snipe/slave/Server.hx line 1225
19.11 12:08:15 STATS: vdl.0 cache, locks:4
19.11 12:08:17 NET: Client (name:uid17 conid:71261756 TCP) disconnected from vdl.0 (clients:0)
19.11 12:08:17 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:08:17 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:08:17 -<<-: core/server.query { list => {{ id => 15 }}, errorCode => ok, _type => core/server.query }
19.11 12:08:17 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
19.11 12:08:17 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:08:17 ->>-: vdl/cache.battle.deleteRoom { roomId => 15, _type => vdl/cache.battle.deleteRoom }
19.11 12:08:17 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 12:08:17 ->>-: vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
19.11 12:08:17 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 12:08:17 ->>-: core/user.sendTo { id => 19, _type => core/user.sendTo, msg => { _type => battle.leave } }
19.11 12:08:17 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
19.11 12:08:17 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:08:17 -<<-: core/cache.update { errorCode => ok, version => 26, _type => core/cache.update }
19.11 12:08:17 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:08:17 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
19.11 12:08:17 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:08:17 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:08:17 NET: Client (conid:62673960) connected to vdl.0 (clients:1)
19.11 12:08:17 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:08:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:08:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:08:17 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:08:17 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:08:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:08:17 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:08:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1479557171, lastLoginDate => 324, lastLoadDate => 1120, hints => 15 }, effects => { list => [] } }}, version => 26, id => 17 } }
19.11 12:08:17 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:08:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 4, id => 17 } }
19.11 12:08:17 NET: Client login (conid:62673960, id:17, name:uid17)
19.11 12:08:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:08:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:08:17 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:08:17 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:08:17 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:08:17 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:08:17 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:08:25 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:08:25 -<<-: core/cache.update { errorCode => ok, version => 27, _type => core/cache.update }
19.11 12:08:29 TIMER: Check auto-disconnect...
19.11 12:08:29 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:08:29 TIME: user.ping 0.11 ms
19.11 12:08:29 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:09:15 STATS: vdl.0 cache, locks:4
19.11 12:09:29 TIMER: Check auto-disconnect...
19.11 12:09:30 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:09:30 TIME: user.ping 0.14 ms
19.11 12:09:30 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:10:09 NET: Client (name:uid17 conid:62673960 TCP) disconnected from vdl.0 (clients:0)
19.11 12:10:09 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:10:09 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:10:09 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:10:09 STATS: vdl.0 cache connection, 2183 calls, total 1.54800033569336 sec spent, avg 0.71 ms
19.11 12:10:09 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:10:09 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:10:09 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:10:09 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
19.11 12:10:09 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:10:09 -<<-: core/cache.update { errorCode => ok, version => 28, _type => core/cache.update }
19.11 12:10:09 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:10:09 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
19.11 12:10:09 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:10:09 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:10:15 STATS: vdl.0 cache, locks:2
19.11 12:10:21 NET: Client (conid:63334665) connected to vdl.0 (clients:1)
19.11 12:10:23 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:10:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:10:23 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:10:23 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:10:23 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:10:23 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:10:23 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:10:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, year => , email => mail, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => , language =>   , networkid => , params => {}}, version => 0, id => 17 } }
19.11 12:10:23 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:10:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 17 } }
19.11 12:10:23 NET: Client login (conid:63334665, id:17, name:uid17)
19.11 12:10:23 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:10:23 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:10:23 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:10:23 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:10:23 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:10:23 DB: SELECT ID FROM TempUserLogins WHERE UserID = 17 AND Date = 'today'::timestamp
19.11 12:10:23 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 17 AND Date = 'today'::timestamp, _type => core/server.query }
19.11 12:10:23 -<<-: core/server.query { list => {{ id => 148 }}, errorCode => ok, _type => core/server.query }
19.11 12:10:23 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:10:23 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:10:29 TIMER: Check auto-disconnect...
19.11 12:10:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479557423, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:10:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:10:32 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:10:32 TIME: user.ping 0.12 ms
19.11 12:10:32 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:11:15 STATS: vdl.0 cache, locks:4
19.11 12:11:27 ++ NET: uid17 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:11:27 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 17 }, _type => vdl/cache.battle.findRandom }
19.11 12:11:27 -<<-: vdl/cache.battle.findRandom { errorCode => _requestException, _type => vdl/cache.battle.findRandom }
19.11 12:11:27 STATS: vdl.0 cache connection, 2196 calls, total 1.5626335144043 sec spent, avg 0.71 ms
19.11 12:11:27 TRACE: battle.find : cacheRequest exception { user => { time => 60, player => 17 }, _type => vdl/cache.battle.findRandom }
19.11 12:11:27 TRACE: battle.find : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 221
Called from modules/VDLBattleModule.hx line 170
Called from modules/VDLBattleModule.hx line 58
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1225
19.11 12:11:29 TIMER: Check auto-disconnect...
19.11 12:11:30 NET: Client (name:uid17 conid:63334665 TCP) disconnected from vdl.0 (clients:0)
19.11 12:11:30 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:11:30 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:11:30 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:11:30 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:11:30 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:11:30 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:11:30 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
19.11 12:11:30 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:11:30 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:11:30 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:11:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:11:30 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:11:30 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:11:30 NET: Client (conid:63551212) connected to vdl.0 (clients:1)
19.11 12:11:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:11:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:11:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:11:30 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:11:30 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:11:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:11:30 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:11:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, year => , email => mail, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479557423, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 2, id => 17 } }
19.11 12:11:30 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:11:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 17 } }
19.11 12:11:30 NET: Client login (conid:63551212, id:17, name:uid17)
19.11 12:11:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:11:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:11:30 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:11:30 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:11:30 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:11:30 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:11:30 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:11:35 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:11:35 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.11 12:11:38 ++ NET: uid17 req: battle.end { type => closeGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 0 }
19.11 12:11:38 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:11:38 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:11:38 TRACE: battle.end : cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:11:38 TRACE: battle.end : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 84
Called from modules/VDLBattleModule.hx line 50
Called from snipe/slave/Server.hx line 1225
19.11 12:11:39 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:11:39 TIME: user.ping 0.15 ms
19.11 12:11:39 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:12:15 STATS: vdl.0 cache, locks:4
19.11 12:12:29 TIMER: Check auto-disconnect...
19.11 12:12:40 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:12:40 TIME: user.ping 0.15 ms
19.11 12:12:40 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:13:15 STATS: vdl.0 cache, locks:4
19.11 12:13:29 TIMER: Check auto-disconnect...
19.11 12:13:40 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:13:40 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:13:40 TIME: user.ping 0.15 ms
19.11 12:14:15 STATS: vdl.0 cache, locks:4
19.11 12:14:22 NET: Client (name:uid17 conid:63551212 TCP) disconnected from vdl.0 (clients:0)
19.11 12:14:22 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:14:22 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:14:22 -<<-: core/server.query { list => {{ id => 16 }}, errorCode => ok, _type => core/server.query }
19.11 12:14:22 STATS: vdl.0 cache connection, 2210 calls, total 1.57154583930969 sec spent, avg 0.71 ms
19.11 12:14:22 ->>-: vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
19.11 12:14:22 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:14:22 ->>-: vdl/cache.battle.deleteRoom { roomId => 16, _type => vdl/cache.battle.deleteRoom }
19.11 12:14:22 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 12:14:22 ->>-: vdl/cache.battle.finishRoom { roomId => 16, _type => vdl/cache.battle.finishRoom }
19.11 12:14:22 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 12:14:22 ->>-: core/user.sendTo { id => 19, _type => core/user.sendTo, msg => { _type => battle.leave } }
19.11 12:14:22 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
19.11 12:14:22 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:14:22 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
19.11 12:14:22 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:14:22 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:14:22 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:14:22 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:14:29 TIMER: Check auto-disconnect...
19.11 12:14:36 NET: Client (conid:45923889) connected to vdl.0 (clients:1)
19.11 12:14:38 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:14:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:14:38 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:14:38 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:14:38 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:14:38 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:14:38 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:14:38 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, year => , email => mail, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479557423, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 17 } }
19.11 12:14:38 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:14:38 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 17 } }
19.11 12:14:38 NET: Client login (conid:45923889, id:17, name:uid17)
19.11 12:14:38 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:14:38 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:14:38 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:14:38 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:14:38 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:14:38 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:14:38 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:14:45 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:14:45 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:14:48 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:14:48 TIME: user.ping 0.14 ms
19.11 12:14:48 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:14:59 ++ NET: uid17 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:14:59 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 17 }, _type => vdl/cache.battle.findRandom }
19.11 12:14:59 -<<-: vdl/cache.battle.findRandom { errorCode => _requestException, _type => vdl/cache.battle.findRandom }
19.11 12:14:59 TRACE: battle.find : cacheRequest exception { user => { time => 60, player => 17 }, _type => vdl/cache.battle.findRandom }
19.11 12:14:59 TRACE: battle.find : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 221
Called from modules/VDLBattleModule.hx line 170
Called from modules/VDLBattleModule.hx line 58
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1225
19.11 12:15:02 NET: Client (name:uid17 conid:45923889 TCP) disconnected from vdl.0 (clients:0)
19.11 12:15:02 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:15:02 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:15:02 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:15:02 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:15:02 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:15:02 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:15:02 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
19.11 12:15:02 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:15:02 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:15:02 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:15:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:15:02 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:15:02 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:15:02 NET: Client (conid:81674504) connected to vdl.0 (clients:1)
19.11 12:15:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:15:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:15:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:15:02 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:15:02 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:15:02 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:15:02 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:15:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, year => , email => mail, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479557423, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 2, id => 17 } }
19.11 12:15:02 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:15:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 17 } }
19.11 12:15:02 NET: Client login (conid:81674504, id:17, name:uid17)
19.11 12:15:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:15:02 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:15:02 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:15:02 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:15:02 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:15:02 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:15:02 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:15:10 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:15:10 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.11 12:15:15 STATS: vdl.0 cache, locks:4
19.11 12:15:29 TIMER: Check auto-disconnect...
19.11 12:15:55 ++ NET: uid17 req: battle.end { type => closeGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 0 }
19.11 12:15:55 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:15:55 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:15:55 STATS: vdl.0 cache connection, 2238 calls, total 1.59289288520813 sec spent, avg 0.71 ms
19.11 12:15:55 TRACE: battle.end : cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:15:55 TRACE: battle.end : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 84
Called from modules/VDLBattleModule.hx line 50
Called from snipe/slave/Server.hx line 1225
19.11 12:15:58 NET: Client (name:uid17 conid:81674504 TCP) disconnected from vdl.0 (clients:0)
19.11 12:15:58 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:15:58 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:15:58 -<<-: core/server.query { list => {{ id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:15:58 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
19.11 12:15:58 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:15:58 ->>-: vdl/cache.battle.deleteRoom { roomId => 17, _type => vdl/cache.battle.deleteRoom }
19.11 12:15:58 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 12:15:58 ->>-: vdl/cache.battle.finishRoom { roomId => 17, _type => vdl/cache.battle.finishRoom }
19.11 12:15:58 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 12:15:58 ->>-: core/user.sendTo { id => 19, _type => core/user.sendTo, msg => { _type => battle.leave } }
19.11 12:15:58 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
19.11 12:15:58 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:15:58 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
19.11 12:15:58 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:15:58 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:15:58 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:15:58 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:15:58 NET: Client (conid:70471606) connected to vdl.0 (clients:1)
19.11 12:15:58 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:15:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:15:58 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:15:58 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:15:58 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:15:58 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:15:58 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:15:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, year => , email => mail, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479557423, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 4, id => 17 } }
19.11 12:15:58 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:15:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 17 } }
19.11 12:15:58 NET: Client login (conid:70471606, id:17, name:uid17)
19.11 12:15:58 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:15:58 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:15:58 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:15:58 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:15:58 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:15:58 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:15:58 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:21:15 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
19.11 12:21:15 -<<-: server.login ok
19.11 12:21:15 DB: SELECT * FROM LocalizationStrings
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 TIMER: Starting timer...
19.11 12:21:15 DB: SELECT * FROM GameVars
19.11 12:21:15 TIMER: Timer running...
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 12:21:15 -<<-: core/quest.getDaily ok
19.11 12:21:15 DB: SELECT * FROM UserAttributeTypes
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM UserVariableTypes
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 12:21:15 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM ItemGroups
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM Bundles ORDER BY ID
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 SHOP: loading items...
19.11 12:21:15 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 12:21:15 -<<-: core/shop.getList ok
19.11 12:21:15 SHOP: 0 items loaded (0 sec)
19.11 12:21:15 DB: SELECT * FROM EffectAttributeTypes
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM Effects
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 12:21:15 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 12:21:15 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 DB: SELECT * FROM Badges
19.11 12:21:15 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 12:21:15 -<<-: core/server.query ok
19.11 12:21:15 TIMER: Check auto-disconnect...
19.11 12:21:15 STATS: vdl.0 cache, locks:0
19.11 12:21:15 TIMER: Check auto-disconnect...
19.11 12:21:15 STATS: vdl.0 cache, locks:0
19.11 12:23:58 NET: Client (conid:68687780) connected to vdl.0 (clients:1)
19.11 12:23:59 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
19.11 12:23:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
19.11 12:23:59 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
19.11 12:23:59 -<<-: core/server.query ok
19.11 12:23:59 STATS: vdl.0 cache connection, 21 calls, total 0.0153031349182129 sec spent, avg 0.73 ms
19.11 12:23:59 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
19.11 12:24:01 NET: Client (name:null conid:68687780 TCP) disconnected from vdl.0 (clients:0)
19.11 12:24:01 NET: Client (conid:29428213) connected to vdl.0 (clients:1)
19.11 12:24:01 ++ NET: null req: user.register { messageType => user.register }
19.11 12:24:01 DB: SELECT * FROM users
19.11 12:24:01 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query ok
19.11 12:24:01 DB: SELECT ID FROM Users WHERE Name = 'uid18'
19.11 12:24:01 == NET: null ret: user.auth { type => user.auth, token => dWlkMTg= }
19.11 12:24:01 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid18', _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query ok
19.11 12:24:01 DB: SELECT nextval('Users_id_seq') AS id
19.11 12:24:01 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query ok
19.11 12:24:01 ->>-: core/user.register { password => uid18, name => uid18, fullParams => { password => uid18, name => uid18, networkid => , networktype => , messageType => user.register, id => 18 }, networkid => , connectionID => 29428213, networktype => , email => , id => 18, _type => core/user.register }
19.11 12:24:01 -<<-: core/user.register ok
19.11 12:24:01 -<<-: core/user.registerResponse { password => uid18, name => uid18, _isNotify => true, fullParams => { password => uid18, name => uid18, networkid => , networktype => , messageType => user.register, id => 18 }, networkid => , connectionID => 29428213, networktype => , email => , id => 18, _type => core/user.registerResponse }
19.11 12:24:01 DB: SELECT token FROM tokens WHERE userid = 18
19.11 12:24:01 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 18, _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query { list => {{ token => e271cd02e35429208ac2b35708c7d005 }, { token => e0b42228febcff21b05d186dd08d506f }}, errorCode => ok, _type => core/server.query }
19.11 12:24:01 == NET: null ret: user.register { type => user.register, errorCode => ok, token => e271cd02e35429208ac2b35708c7d005 }
19.11 12:24:01 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 12:24:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18'
19.11 12:24:01 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18', _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query { list => {{ name => uid18, networkid => , isbanned => false, id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 12:24:01 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 12:24:01 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:24:01 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 12:24:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid18, deleted => false, year => null, email => null, networktype =>   , password => uid18, isbanned => false, regdate => 2016-11-19 12:24:01.448243+00, city => , language =>   , networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 4, id => 18 } }
19.11 12:24:01 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 12:24:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 18 } }
19.11 12:24:01 NET: Client login (conid:29428213, id:18, name:uid18)
19.11 12:24:01 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:24:01 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:24:01 DB: SELECT token FROM tokens WHERE userid = 18
19.11 12:24:01 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 18, _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query { list => {{ token => e271cd02e35429208ac2b35708c7d005 }, { token => e0b42228febcff21b05d186dd08d506f }}, errorCode => ok, _type => core/server.query }
19.11 12:24:01 DB: SELECT ID FROM TempUserLogins WHERE UserID = 18 AND Date = 'today'::timestamp
19.11 12:24:01 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 18 AND Date = 'today'::timestamp, _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:24:01 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (18, 'today'::timestamp)
19.11 12:24:01 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18, token => e271cd02e35429208ac2b35708c7d005 }
19.11 12:24:01 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 12:24:01 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (18, 'today'::timestamp), _type => core/server.pending }} }
19.11 12:24:01 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
19.11 12:24:01 ++ NET: uid18 req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 12:24:01 DB: SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true
19.11 12:24:01 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true, _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:24:01 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:24:01 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:24:01 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:24:01 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 1009
19.11 12:24:01 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479558241, lastLoginDate => 324, lastLoadDate => 1120 } }}, type => user, unlock => true, id => 18, _type => core/cache.update }
19.11 12:24:01 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
19.11 12:24:01 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 18, _type => core/cache.update }
19.11 12:24:01 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:24:01 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 18, _type => core/user.logoutPost }
19.11 12:24:01 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:24:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18'
19.11 12:24:01 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18', _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query { list => {{ name => uid18, networkid => , isbanned => false, id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 12:24:01 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 12:24:01 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:24:01 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 12:24:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid18, deleted => false, year => null, email => null, networktype =>   , password => uid18, isbanned => false, regdate => 2016-11-19 12:24:01.448243+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479558241, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 5, id => 18 } }
19.11 12:24:01 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 12:24:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 18 } }
19.11 12:24:01 NET: Client login (conid:29428213, id:18, name:uid18)
19.11 12:24:01 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:24:01 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:24:01 DB: SELECT token FROM tokens WHERE userid = 18
19.11 12:24:01 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 18, _type => core/server.query }
19.11 12:24:01 -<<-: core/server.query { list => {{ token => e271cd02e35429208ac2b35708c7d005 }, { token => e0b42228febcff21b05d186dd08d506f }}, errorCode => ok, _type => core/server.query }
19.11 12:24:02 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:24:02 TIME: user.ping 0.1 ms
19.11 12:24:05 NET: Client (name:uid18 conid:29428213 TCP) disconnected from vdl.0 (clients:0)
19.11 12:24:05 DB: SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true
19.11 12:24:05 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true, _type => core/server.query }
19.11 12:24:05 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:24:05 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:24:05 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:24:05 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:24:05 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 1009
19.11 12:24:05 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 18, _type => core/cache.update }
19.11 12:24:05 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
19.11 12:24:05 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 18, _type => core/cache.update }
19.11 12:24:05 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:24:05 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 18, _type => core/user.logoutPost }
19.11 12:24:05 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:24:05 NET: Client (conid:9301838) connected to vdl.0 (clients:1)
19.11 12:24:06 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 12:24:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18'
19.11 12:24:06 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18', _type => core/server.query }
19.11 12:24:06 -<<-: core/server.query { list => {{ name => uid18, networkid => , isbanned => false, id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 12:24:06 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 12:24:06 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:24:06 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 12:24:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid18, deleted => false, year => null, email => null, networktype =>   , password => uid18, isbanned => false, regdate => 2016-11-19 12:24:01.448243+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479558241, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 6, id => 18 } }
19.11 12:24:06 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 12:24:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 18 } }
19.11 12:24:06 NET: Client login (conid:9301838, id:18, name:uid18)
19.11 12:24:06 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:24:06 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:24:06 DB: SELECT token FROM tokens WHERE userid = 18
19.11 12:24:06 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 18, _type => core/server.query }
19.11 12:24:06 -<<-: core/server.query { list => {{ token => e271cd02e35429208ac2b35708c7d005 }, { token => e0b42228febcff21b05d186dd08d506f }}, errorCode => ok, _type => core/server.query }
19.11 12:24:06 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18, token => e271cd02e35429208ac2b35708c7d005 }
19.11 12:24:06 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 12:24:15 TIMER: Check auto-disconnect...
19.11 12:24:15 STATS: vdl.0 cache, locks:2
19.11 12:24:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 12:24:15 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
19.11 12:24:24 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:24:24 TIME: user.ping 0.14 ms
19.11 12:24:24 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:24:27 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:24:27 TIME: battle.find 0.06 ms
19.11 12:24:27 == NET: uid18 ret: battle.find { type => battle.find, errorCode => FindBattle }
19.11 12:24:45 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:24:45 TIME: user.ping 0.11 ms
19.11 12:24:45 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:25:05 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:25:05 TIME: user.ping 0.1 ms
19.11 12:25:05 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:25:15 TIMER: Check auto-disconnect...
19.11 12:25:15 STATS: vdl.0 cache, locks:2
19.11 12:25:26 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:25:26 TIME: user.ping 0.13 ms
19.11 12:25:26 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:26:07 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
19.11 12:26:07 -<<-: server.login ok
19.11 12:26:07 DB: SELECT * FROM LocalizationStrings
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 TIMER: Starting timer...
19.11 12:26:07 DB: SELECT * FROM GameVars
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 TIMER: Timer running...
19.11 12:26:07 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 12:26:07 -<<-: core/quest.getDaily ok
19.11 12:26:07 DB: SELECT * FROM UserAttributeTypes
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT * FROM UserVariableTypes
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 12:26:07 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT * FROM ItemGroups
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT * FROM Bundles ORDER BY ID
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 SHOP: loading items...
19.11 12:26:07 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 12:26:07 -<<-: core/shop.getList ok
19.11 12:26:07 SHOP: 0 items loaded (0 sec)
19.11 12:26:07 DB: SELECT * FROM EffectAttributeTypes
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT * FROM Effects
19.11 12:26:07 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 12:26:07 -<<-: core/server.query ok
19.11 12:26:07 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_p19.11 12:27:49 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
19.11 12:27:49 -<<-: server.login ok
19.11 12:27:49 DB: SELECT * FROM LocalizationStrings
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 TIMER: Starting timer...
19.11 12:27:49 DB: SELECT * FROM GameVars
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 12:27:49 TIMER: Timer running...
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 12:27:49 -<<-: core/quest.getDaily ok
19.11 12:27:49 DB: SELECT * FROM UserAttributeTypes
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM UserVariableTypes
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 12:27:49 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM ItemGroups
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM Bundles ORDER BY ID
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 SHOP: loading items...
19.11 12:27:49 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 12:27:49 -<<-: core/shop.getList ok
19.11 12:27:49 SHOP: 0 items loaded (0 sec)
19.11 12:27:49 DB: SELECT * FROM EffectAttributeTypes
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM Effects
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 12:27:49 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 12:27:49 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:49 DB: SELECT * FROM Badges
19.11 12:27:49 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 12:27:49 -<<-: core/server.query ok
19.11 12:27:50 NET: Client (conid:54326576) connected to vdl.0 (clients:1)
19.11 12:27:50 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 12:27:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18'
19.11 12:27:50 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18', _type => core/server.query }
19.11 12:27:50 -<<-: core/server.query ok
19.11 12:27:50 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 12:27:50 -<<-: core/user.isOnlineID ok
19.11 12:27:50 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 12:27:50 -<<-: core/cache.get ok
19.11 12:27:50 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 12:27:50 -<<-: core/cache.get ok
19.11 12:27:50 NET: Client login (conid:54326576, id:18, name:uid18)
19.11 12:27:50 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:27:50 -<<-: core/user.loginPost null
19.11 12:27:50 DB: SELECT token FROM tokens WHERE userid = 18
19.11 12:27:50 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 18, _type => core/server.query }
19.11 12:27:50 -<<-: core/server.query { list => {{ token => e271cd02e35429208ac2b35708c7d005 }, { token => e0b42228febcff21b05d186dd08d506f }}, errorCode => ok, _type => core/server.query }
19.11 12:27:50 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18, token => e271cd02e35429208ac2b35708c7d005 }
19.11 12:27:50 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 12:27:52 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:27:52 TIME: user.ping 0.21 ms
19.11 12:27:52 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:27:56 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:27:56 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 18 }, _type => vdl/cache.battle.findRandom }
19.11 12:27:56 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 12:27:56 TIME: battle.find 0.26 ms
19.11 12:27:56 == NET: uid18 ret: battle.find { type => battle.find, errorCode => ok }
19.11 12:28:00 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 12:28:00 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:28:10 ++ NET: uid18 req: battle.end { type => closeGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 0 }
19.11 12:28:10 ->>-: vdl/cache.battle.closeFind { userId => 18, _type => vdl/cache.battle.closeFind }
19.11 12:28:10 -<<-: vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
19.11 12:28:10 == NET: uid18 ret: battle.end { type => battle.end, errorCode => ok }
19.11 12:28:10 TIME: battle.end 0.4 ms
19.11 12:28:12 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:28:12 TIME: user.ping 0.1 ms
19.11 12:28:12 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:28:19 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:28:19 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 18 }, _type => vdl/cache.battle.findRandom }
19.11 12:28:19 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 12:28:19 TIME: battle.find 0.29 ms
19.11 12:28:19 == NET: uid18 ret: battle.find { type => battle.find, errorCode => ok }
19.11 12:28:27 ++ NET: uid18 req: battle.end { type => closeGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 0 }
19.11 12:28:27 ->>-: vdl/cache.battle.closeFind { userId => 18, _type => vdl/cache.battle.closeFind }
19.11 12:28:27 -<<-: vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
19.11 12:28:27 TIME: battle.end 0.28 ms
19.11 12:28:27 == NET: uid18 ret: battle.end { type => battle.end, errorCode => ok }
19.11 12:28:32 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:28:32 TIME: user.ping 0.27 ms
19.11 12:28:32 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:28:49 TIMER: Check auto-disconnect...
19.11 12:28:50 STATS: vdl.0 cache, locks:2
19.11 12:29:49 TIMER: Check auto-disconnect...
19.11 12:29:50 STATS: vdl.0 cache, locks:2
19.11 12:30:49 TIMER: Check auto-disconnect...
19.11 12:30:50 STATS: vdl.0 cache, locks:2
19.11 12:30:51 NET: Client (name:uid18 conid:54326576 TCP) disconnected from vdl.0 (clients:0)
19.11 12:30:51 DB: SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true
19.11 12:30:51 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true, _type => core/server.query }
19.11 12:30:51 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:30:51 STATS: vdl.0 cache connection, 32 calls, total 0.0319511890411377 sec spent, avg 1 ms
19.11 12:30:51 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:30:51 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:30:51 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:30:51 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 1009
19.11 12:30:51 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 18, _type => core/cache.update }
19.11 12:30:51 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:30:51 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 18, _type => core/cache.update }
19.11 12:30:51 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:30:51 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 18, _type => core/user.logoutPost }
19.11 12:30:51 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:30:57 NET: Client (conid:11838817) connected to vdl.0 (clients:1)
19.11 12:31:00 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTc= }
19.11 12:31:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17'
19.11 12:31:00 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid17' AND Password = 'uid17', _type => core/server.query }
19.11 12:31:00 -<<-: core/server.query { list => {{ name => uid17, networkid => , isbanned => false, id => 17 }}, errorCode => ok, _type => core/server.query }
19.11 12:31:00 ->>-: core/user.isOnlineID { id => 17, _type => core/user.isOnlineID }
19.11 12:31:00 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:31:00 ->>-: core/cache.get { type => user, v => -1, id => 17, _type => core/cache.get }
19.11 12:31:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid17, deleted => false, year => , email => mail, networktype =>   , password => uid17, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479557423, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 17 } }
19.11 12:31:00 ->>-: core/cache.get { type => questdata, v => -1, id => 17, _type => core/cache.get }
19.11 12:31:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 17 } }
19.11 12:31:00 NET: Client login (conid:11838817, id:17, name:uid17)
19.11 12:31:00 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 17, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:31:00 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:31:00 DB: SELECT token FROM tokens WHERE userid = 17
19.11 12:31:00 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 17, _type => core/server.query }
19.11 12:31:00 -<<-: core/server.query { list => {{ token => 7a2e35b97b324e830fab40c93c495a53 }, { token => 4f68e8de0df9f2f76b23d42afb6a10e3 }}, errorCode => ok, _type => core/server.query }
19.11 12:31:00 == NET: uid17 ret: user.login { name => uid17, type => user.login, errorCode => ok, id => 17, token => 7a2e35b97b324e830fab40c93c495a53 }
19.11 12:31:00 == NET: uid17 ret: user.join { name => uid17, type => user.join }
19.11 12:31:04 NET: Client (conid:23695322) connected to vdl.0 (clients:2)
19.11 12:31:05 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 12:31:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18'
19.11 12:31:05 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid18' AND Password = 'uid18', _type => core/server.query }
19.11 12:31:05 -<<-: core/server.query { list => {{ name => uid18, networkid => , isbanned => false, id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 12:31:05 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 12:31:05 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:31:05 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 12:31:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid18, deleted => false, year => null, email => null, networktype =>   , password => uid18, isbanned => false, regdate => 2016-11-19 12:24:01.448243+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479558241, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 18 } }
19.11 12:31:05 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 12:31:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 18 } }
19.11 12:31:05 NET: Client login (conid:23695322, id:18, name:uid18)
19.11 12:31:05 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:31:05 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:31:05 DB: SELECT token FROM tokens WHERE userid = 18
19.11 12:31:05 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 18, _type => core/server.query }
19.11 12:31:05 -<<-: core/server.query { list => {{ token => e271cd02e35429208ac2b35708c7d005 }, { token => e0b42228febcff21b05d186dd08d506f }}, errorCode => ok, _type => core/server.query }
19.11 12:31:05 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18, token => e271cd02e35429208ac2b35708c7d005 }
19.11 12:31:05 == NET: uid18 ret: user.join { name => uid17, type => user.join }
19.11 12:31:05 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 12:31:05 == NET: uid17 ret: user.join { name => uid18, type => user.join }
19.11 12:31:08 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:31:08 TIME: user.ping 0.12 ms
19.11 12:31:08 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:31:10 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 17, _type => core/cache.update }
19.11 12:31:10 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:31:11 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:31:11 TIME: user.ping 0.14 ms
19.11 12:31:11 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:31:12 ++ NET: uid17 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:31:12 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 17 }, _type => vdl/cache.battle.findRandom }
19.11 12:31:12 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 12:31:12 TIME: battle.find 0.38 ms
19.11 12:31:12 == NET: uid17 ret: battle.find { type => battle.find, errorCode => ok }
19.11 12:31:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 12:31:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:31:23 ++ NET: uid17 req: battle.end { type => closeGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 0 }
19.11 12:31:23 ->>-: vdl/cache.battle.closeFind { userId => 17, _type => vdl/cache.battle.closeFind }
19.11 12:31:23 -<<-: vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
19.11 12:31:23 TIME: battle.end 0.32 ms
19.11 12:31:23 == NET: uid17 ret: battle.end { type => battle.end, errorCode => ok }
19.11 12:31:30 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:31:30 TIME: user.ping 0.13 ms
19.11 12:31:30 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:31:36 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:31:36 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 18 }, _type => vdl/cache.battle.findRandom }
19.11 12:31:36 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 12:31:36 TIME: battle.find 0.23 ms
19.11 12:31:36 == NET: uid18 ret: battle.find { type => battle.find, errorCode => ok }
19.11 12:31:43 ++ NET: uid17 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 12:31:43 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 17 }, _type => vdl/cache.battle.findRandom }
19.11 12:31:43 -<<-: battle.enemyEvent { data => { name => uid17, enemy.id => 18, enemy.name => uid18, id => 17, enemy.num => 2, battleId => 18, player => 1 }, _isNotify => true, id => 17, _type => battle.enemyEvent }
19.11 12:31:43 -<<-: battle.enemyEvent { data => { name => uid18, enemy.id => 17, enemy.name => uid17, id => 18, enemy.num => 1, battleId => 18, player => 2 }, _isNotify => true, id => 18, _type => battle.enemyEvent }
19.11 12:31:43 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 12:31:43 TIME: battle.find 8.04 ms
19.11 12:31:43 == NET: uid17 ret: battle.find { type => battle.find, errorCode => ok }
19.11 12:31:43 == NET: uid17 ret: battle.enemy { data => { name => uid17, enemy.id => 18, enemy.name => uid18, id => 17, enemy.num => 2, battleId => 18, player => 1 }, type => battle.enemy }
19.11 12:31:43 == NET: uid18 ret: battle.enemy { data => { name => uid18, enemy.id => 17, enemy.name => uid17, id => 18, enemy.num => 1, battleId => 18, player => 2 }, type => battle.enemy }
19.11 12:31:49 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:31:49 TIME: user.ping 0.12 ms
19.11 12:31:49 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:31:49 TIMER: Check auto-disconnect...
19.11 12:31:50 STATS: vdl.0 cache, locks:4
19.11 12:31:50 ++ NET: uid17 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:31:50 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:31:50 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:31:50 == NET: uid17 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,2,3,5,4,5], errorCode => ok, _type => battle.task }
19.11 12:31:50 TIME: battle.sendtask 0.31 ms
19.11 12:31:50 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [0,2,3,5,4,5], errorCode => ok }
19.11 12:31:50 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:32:04 ++ NET: uid17 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 18 }
19.11 12:32:04 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:32:04 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:32:04 STATS: vdl.0 cache connection, 56 calls, total 0.0561106204986572 sec spent, avg 1 ms
19.11 12:32:04 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 17, player2 => 18, battleId => 18 }
19.11 12:32:04 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 12:32:04 TIME: battle.sendtask 1.99 ms
19.11 12:32:04 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:32:04 == NET: uid18 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [0,2,3,4,5], messageType => battle.sendtask, to => [8,3], battleId => 18 }
19.11 12:32:05 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:32:05 TIME: user.ping 0.11 ms
19.11 12:32:05 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:32:10 ++ NET: uid17 req: battle.sendtask { dice => 5, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 18 }
19.11 12:32:10 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:32:10 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:32:10 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 17, player2 => 18, battleId => 18 }
19.11 12:32:10 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 12:32:10 TIME: battle.sendtask 1 ms
19.11 12:32:10 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:32:10 == NET: uid18 ret: battle.task { dice => 5, from => [8,3], name => swap, side => 2, type => battle.task, dices => [0,2,3,4], messageType => battle.sendtask, to => [9,3], battleId => 18 }
19.11 12:32:21 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:32:21 TIME: user.ping 0.13 ms
19.11 12:32:21 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:32:31 ++ NET: uid17 req: battle.sendtask { dice => 3, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 18 }
19.11 12:32:31 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:32:31 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:32:31 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 17, player2 => 18, battleId => 18 }
19.11 12:32:31 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 12:32:31 TIME: battle.sendtask 1.64 ms
19.11 12:32:31 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:32:31 == NET: uid18 ret: battle.task { dice => 3, from => [7,4], name => swap, side => 2, type => battle.task, dices => [0,2,4], messageType => battle.sendtask, to => [8,4], battleId => 18 }
19.11 12:32:33 ++ NET: uid17 req: battle.sendtask { dice => 2, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 18 }
19.11 12:32:33 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:32:33 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:32:33 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 17, player2 => 18, battleId => 18 }
19.11 12:32:33 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 12:32:33 TIME: battle.sendtask 1.18 ms
19.11 12:32:33 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:32:33 == NET: uid18 ret: battle.task { dice => 2, from => [7,4], name => swap, side => 2, type => battle.task, dices => [0,4], messageType => battle.sendtask, to => [8,4], battleId => 18 }
19.11 12:32:35 ++ NET: uid17 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:32:35 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:32:35 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:32:35 ->>-: vdl/cache.battle.makeTurn { userId => 17, roomId => 18, _type => vdl/cache.battle.makeTurn }
19.11 12:32:35 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 17 }
19.11 12:32:35 TIME: battle.sendtask 0.57 ms
19.11 12:32:35 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:32:35 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:32:38 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:32:38 TIME: user.ping 0.11 ms
19.11 12:32:38 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:32:39 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:32:39 TIME: user.ping 0.13 ms
19.11 12:32:39 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:32:43 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:32:43 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:32:43 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 12:32:43 TIME: battle.sendtask 0.38 ms
19.11 12:32:43 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,1,2,0,1,4], errorCode => ok, _type => null }
19.11 12:32:43 == NET: uid17 ret: battle.task { name => throw, type => battle.task, dices => [5,1,2,0,1,4], errorCode => ok }
19.11 12:32:43 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:32:49 TIMER: Check auto-disconnect...
19.11 12:32:50 STATS: vdl.0 cache, locks:4
19.11 12:32:55 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:32:55 TIME: user.ping 0.15 ms
19.11 12:32:55 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:33:12 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:33:12 TIME: user.ping 0.13 ms
19.11 12:33:12 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:33:29 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:33:29 TIME: user.ping 0.13 ms
19.11 12:33:29 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:33:45 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:33:45 TIME: user.ping 0.12 ms
19.11 12:33:45 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:33:49 ++ NET: uid17 req: battle.sendtask { dice => 5, from => [8,4], name => swap, side => 1, messageType => battle.sendtask, to => [9,4], battleId => 18 }
19.11 12:33:49 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:33:49 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 12:33:49 STATS: vdl.0 cache connection, 67 calls, total 0.0598957538604736 sec spent, avg 0.89 ms
19.11 12:33:49 TIME: battle.sendtask 1.16 ms
19.11 12:33:49 == NET: uid17 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,0,0,5,5,10,0,0],[0,0,0,0,5,0,0,0,0,0],[0,0,0,5,0,0,0,0,0,0]], type => battle.sendtask, dices => [0,4], errorCode => cannotSwap }
19.11 12:33:49 TIMER: Check auto-disconnect...
19.11 12:33:50 STATS: vdl.0 cache, locks:4
19.11 12:34:02 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:34:02 TIME: user.ping 0.14 ms
19.11 12:34:02 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:34:07 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:34:07 TIME: user.ping 0.15 ms
19.11 12:34:07 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:34:19 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:34:19 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:34:19 TIME: user.ping 0.24 ms
19.11 12:34:35 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:34:35 TIME: user.ping 0.2 ms
19.11 12:34:35 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:34:39 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:34:39 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:34:39 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 12:34:39 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 18, _type => vdl/cache.battle.makeTurn }
19.11 12:34:39 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 17 }
19.11 12:34:39 TIME: battle.sendtask 1.2 ms
19.11 12:34:39 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:34:39 == NET: uid17 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:34:49 TIMER: Check auto-disconnect...
19.11 12:34:50 STATS: vdl.0 cache, locks:4
19.11 12:34:52 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:34:52 TIME: user.ping 0.12 ms
19.11 12:34:52 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:35:06 ++ NET: uid17 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:35:06 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:35:06 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:35:06 STATS: vdl.0 cache connection, 70 calls, total 0.0619120597839355 sec spent, avg 0.88 ms
19.11 12:35:06 TIME: battle.sendtask 1.07 ms
19.11 12:35:06 == NET: uid17 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [4,4,2,2,5,0], errorCode => ok, _type => battle.task }
19.11 12:35:06 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [4,4,2,2,5,0], errorCode => ok }
19.11 12:35:06 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:35:09 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:35:09 TIME: user.ping 0.13 ms
19.11 12:35:09 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:35:17 ++ NET: uid17 req: battle.sendtask { dice => 5, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 18 }
19.11 12:35:17 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:35:17 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:35:17 ->>-: vdl/cache.battle.setScores { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 17, player2 => 18, battleId => 18 }
19.11 12:35:17 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 12:35:17 TIME: battle.sendtask 1.03 ms
19.11 12:35:17 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:35:17 == NET: uid18 ret: battle.task { dice => 5, from => [8,4], name => swap, side => 2, type => battle.task, dices => [4,4,2,2,0], messageType => battle.sendtask, to => [9,4], battleId => 18 }
19.11 12:35:26 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:35:26 TIME: user.ping 0.15 ms
19.11 12:35:26 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:35:36 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:35:36 TIME: user.ping 0.1 ms
19.11 12:35:36 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:35:43 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:35:43 TIME: user.ping 0.13 ms
19.11 12:35:43 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:35:49 TIMER: Check auto-disconnect...
19.11 12:35:50 STATS: vdl.0 cache, locks:4
19.11 12:35:59 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:35:59 TIME: user.ping 0.3 ms
19.11 12:35:59 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:36:15 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:36:15 TIME: user.ping 0.13 ms
19.11 12:36:15 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:36:31 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:36:31 TIME: user.ping 0.15 ms
19.11 12:36:31 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:36:43 ++ NET: uid17 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:36:43 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:36:43 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:36:43 STATS: vdl.0 cache connection, 73 calls, total 0.0633199214935303 sec spent, avg 0.87 ms
19.11 12:36:43 ->>-: vdl/cache.battle.makeTurn { userId => 17, roomId => 18, _type => vdl/cache.battle.makeTurn }
19.11 12:36:43 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 17 }
19.11 12:36:43 TIME: battle.sendtask 1.23 ms
19.11 12:36:43 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:36:43 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:36:47 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:36:47 TIME: user.ping 0.12 ms
19.11 12:36:47 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:36:49 TIMER: Check auto-disconnect...
19.11 12:36:50 STATS: vdl.0 cache, locks:4
19.11 12:37:03 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:37:03 TIME: user.ping 0.17 ms
19.11 12:37:03 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:37:03 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:37:03 TIME: user.ping 0.11 ms
19.11 12:37:03 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:37:14 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:37:14 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:37:14 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 12:37:14 TIME: battle.sendtask 0.99 ms
19.11 12:37:14 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,1,2,2,5,5], errorCode => ok, _type => battle.task }
19.11 12:37:14 == NET: uid17 ret: battle.task { name => throw, type => battle.task, dices => [2,1,2,2,5,5], errorCode => ok }
19.11 12:37:14 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:37:20 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:37:20 TIME: user.ping 0.12 ms
19.11 12:37:20 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:37:25 ++ NET: uid17 req: battle.sendtask { dice => 5, from => [7,5], name => swap, side => 1, messageType => battle.sendtask, to => [8,5], battleId => 18 }
19.11 12:37:25 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:37:25 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 12:37:25 TIME: battle.sendtask 1.56 ms
19.11 12:37:25 == NET: uid17 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,0,0,5,5,10,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,5,5,0,0,0,0,0]], type => battle.sendtask, dices => [4,4,2,2,0], errorCode => cannotSwap }
19.11 12:37:38 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:37:38 TIME: user.ping 0.22 ms
19.11 12:37:38 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:37:49 TIMER: Check auto-disconnect...
19.11 12:37:50 STATS: vdl.0 cache, locks:4
19.11 12:37:55 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:37:55 TIME: user.ping 0.13 ms
19.11 12:37:55 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:38:12 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:38:12 TIME: user.ping 0.13 ms
19.11 12:38:12 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:38:28 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:38:28 TIME: user.ping 0.16 ms
19.11 12:38:28 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:38:30 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:38:30 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:38:30 TIME: user.ping 0.24 ms
19.11 12:38:47 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:38:47 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:38:47 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 12:38:47 STATS: vdl.0 cache connection, 77 calls, total 0.0663061141967773 sec spent, avg 0.86 ms
19.11 12:38:47 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 18, _type => vdl/cache.battle.makeTurn }
19.11 12:38:47 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 17 }
19.11 12:38:47 TIME: battle.sendtask 1.33 ms
19.11 12:38:47 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:38:47 == NET: uid17 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:38:47 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:38:47 TIME: user.ping 0.12 ms
19.11 12:38:47 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:38:49 TIMER: Check auto-disconnect...
19.11 12:38:50 STATS: vdl.0 cache, locks:4
19.11 12:39:00 ++ NET: uid17 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:39:00 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:39:00 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:39:00 TIME: battle.sendtask 0.34 ms
19.11 12:39:00 == NET: uid17 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,0,0,0,5,2], errorCode => ok, _type => battle.task }
19.11 12:39:00 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [0,0,0,0,5,2], errorCode => ok }
19.11 12:39:00 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:39:05 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:39:05 TIME: user.ping 0.16 ms
19.11 12:39:05 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:39:22 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:39:22 TIME: user.ping 0.11 ms
19.11 12:39:22 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:39:39 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:39:39 TIME: user.ping 0.13 ms
19.11 12:39:39 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:39:49 TIMER: Check auto-disconnect...
19.11 12:39:50 STATS: vdl.0 cache, locks:4
19.11 12:39:55 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:39:55 TIME: user.ping 0.13 ms
19.11 12:39:55 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:39:57 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:39:57 TIME: user.ping 0.12 ms
19.11 12:39:57 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:40:12 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:40:12 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:40:12 TIME: user.ping 0.11 ms
19.11 12:40:28 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:40:28 TIME: user.ping 0.3 ms
19.11 12:40:28 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:40:44 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:40:44 TIME: user.ping 0.12 ms
19.11 12:40:44 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:40:49 TIMER: Check auto-disconnect...
19.11 12:40:50 STATS: vdl.0 cache, locks:4
19.11 12:40:51 ++ NET: uid17 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:40:51 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:40:51 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 17 }
19.11 12:40:51 STATS: vdl.0 cache connection, 80 calls, total 0.0676989555358887 sec spent, avg 0.85 ms
19.11 12:40:51 ->>-: vdl/cache.battle.makeTurn { userId => 17, roomId => 18, _type => vdl/cache.battle.makeTurn }
19.11 12:40:51 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 17 }
19.11 12:40:51 TIME: battle.sendtask 1.4 ms
19.11 12:40:51 == NET: uid17 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 12:40:51 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 18 }
19.11 12:41:00 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:41:00 TIME: user.ping 0.1 ms
19.11 12:41:00 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:41:16 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:41:16 TIME: user.ping 0.13 ms
19.11 12:41:16 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:41:28 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:41:28 TIME: user.ping 0.11 ms
19.11 12:41:28 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:41:33 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:41:33 TIME: user.ping 0.15 ms
19.11 12:41:33 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:41:49 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:41:49 TIME: user.ping 0.18 ms
19.11 12:41:49 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:41:49 TIMER: Check auto-disconnect...
19.11 12:41:50 STATS: vdl.0 cache, locks:4
19.11 12:42:05 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:42:05 TIME: user.ping 0.12 ms
19.11 12:42:05 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:42:21 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:42:21 TIME: user.ping 0.15 ms
19.11 12:42:21 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:42:37 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:42:37 TIME: user.ping 0.13 ms
19.11 12:42:37 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:42:49 TIMER: Check auto-disconnect...
19.11 12:42:50 STATS: vdl.0 cache, locks:4
19.11 12:42:53 ++ NET: uid17 req: battle.end { type => leaveGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 18 }
19.11 12:42:53 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:42:53 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 12:42:53 STATS: vdl.0 cache connection, 82 calls, total 0.0689830780029297 sec spent, avg 0.84 ms
19.11 12:42:53 ->>-: vdl/cache.battle.finishRoom { roomId => 18, _type => vdl/cache.battle.finishRoom }
19.11 12:42:53 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 12:42:53 TIME: battle.end 1.38 ms
19.11 12:42:53 == NET: uid17 ret: battle.end { type => battle.end, errorCode => ok }
19.11 12:42:53 == NET: uid18 ret: battle.leave { type => battle.leave }
19.11 12:42:54 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:42:54 TIME: user.ping 0.16 ms
19.11 12:42:54 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:42:56 ++ NET: uid17 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:42:56 TIME: user.ping 0.12 ms
19.11 12:42:56 == NET: uid17 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:43:15 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:43:15 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:43:15 TIME: user.ping 0.28 ms
19.11 12:43:30 NET: Client (name:uid17 conid:11838817 TCP) disconnected from vdl.0 (clients:1)
19.11 12:43:30 DB: SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true
19.11 12:43:30 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=17 OR secondid=17 AND finished <> true, _type => core/server.query }
19.11 12:43:30 -<<-: core/server.query { list => {{ id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 12:43:30 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
19.11 12:43:30 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 17, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 12:43:30 ->>-: vdl/cache.battle.deleteRoom { roomId => 18, _type => vdl/cache.battle.deleteRoom }
19.11 12:43:30 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 12:43:30 ->>-: vdl/cache.battle.finishRoom { roomId => 18, _type => vdl/cache.battle.finishRoom }
19.11 12:43:30 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 12:43:30 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 17, _type => core/cache.update }
19.11 12:43:30 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:43:30 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 17, _type => core/cache.update }
19.11 12:43:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:43:30 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 17, _type => core/user.logoutPost }
19.11 12:43:30 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:43:30 == NET: uid18 ret: battle.leave { type => battle.leave }
19.11 12:43:31 NET: Client (conid:31599188) connected to vdl.0 (clients:2)
19.11 12:43:31 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
19.11 12:43:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
19.11 12:43:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
19.11 12:43:31 NET: Client (name:null conid:31599188 TCP) disconnected from vdl.0 (clients:1)
19.11 12:43:31 NET: Client (conid:72100814) connected to vdl.0 (clients:2)
19.11 12:43:31 ++ NET: null req: user.register { messageType => user.register }
19.11 12:43:31 DB: SELECT * FROM users
19.11 12:43:31 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {{ city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-10 11:48:59.9391+00, language =>   , id => 1, deleted => false }, { city => , password => uid16, name => uid16, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479544800,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-19 08:37:10.286209+00, language => en, id => 16, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478779175,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, language => en, id => 2, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:08:05.144895+00, language =>   , id => 3, deleted => false }, { city => , password => uid4, name => uid4, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:24:23.638304+00, language =>   , id => 4, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:28:38.741567+00, language =>   , id => 5, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479119901,"lastLoginDate":319,"lastLoadDate":1115},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, language => en, id => 6, deleted => false }, { city => , password => uid13, name => uid13, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-16 11:16:26.870358+00, language =>   , id => 13, deleted => false }, { city => , password => uid14, name => uid14, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-16 11:17:20.119377+00, language =>   , id => 14, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 13:32:51.765479+00, language =>   , id => 7, deleted => false }, { city => , password => uid11, name => uid11, year => null, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479067417,"lastLoginDate":319,"lastLoadDate":1115},"effects":{"list":[]}}, networktype =>   , email => null, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, language => en, id => 11, deleted => false }, { city => , password => uid18, name => uid18, year => null, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479558241,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => null, isbanned => false, regdate => 2016-11-19 12:24:01.448243+00, language => en, id => 18, deleted => false }, { city => , password => uid17, name => uid17, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479557423,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-19 12:06:11.008729+00, language => en, id => 17, deleted => false }, { city => , password => uid12, name => uid12, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479299358,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, language => en, id => 12, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479405440,"lastLoginDate":322,"lastLoadDate":1118},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 15:37:47.142701+00, language => en, id => 8, deleted => false }, { city => , password => uid10, name => uid10, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478975056,"lastLoginDate":318,"lastLoadDate":1114},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-11 16:44:40.114978+00, language => en, id => 10, deleted => false }, { city => , password => uid9, name => uid9, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479481494,"lastLoginDate":323,"lastLoadDate":1119},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-11 07:57:55.30687+00, language => en, id => 9, deleted => false }, { city => , password => uid15, name => uid15, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-18 15:18:55.183965+00, language =>   , id => 15, deleted => false }}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 == NET: null ret: user.auth { type => user.auth, token => dWlkMTk= }
19.11 12:43:31 DB: SELECT ID FROM Users WHERE Name = 'uid19'
19.11 12:43:31 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid19', _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 DB: SELECT nextval('Users_id_seq') AS id
19.11 12:43:31 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {{ id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 ->>-: core/user.register { password => uid19, name => uid19, fullParams => { password => uid19, name => uid19, networkid => , networktype => , messageType => user.register, id => 19 }, networkid => , connectionID => 72100814, networktype => , email => , id => 19, _type => core/user.register }
19.11 12:43:31 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
19.11 12:43:31 -<<-: core/user.registerResponse { password => uid19, name => uid19, _isNotify => true, fullParams => { password => uid19, name => uid19, networkid => , networktype => , messageType => user.register, id => 19 }, networkid => , connectionID => 72100814, networktype => , email => , id => 19, _type => core/user.registerResponse }
19.11 12:43:31 DB: SELECT token FROM tokens WHERE userid = 19
19.11 12:43:31 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 19, _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {{ token => 25a8edacc55e981ba327cc55f0a49e31 }, { token => 1b37920d2c91f93a55ca231b3d43f733 }}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 25a8edacc55e981ba327cc55f0a49e31 }
19.11 12:43:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 12:43:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
19.11 12:43:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 12:43:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:43:31 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 12:43:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid19, isbanned => false, regdate => 2016-11-19 12:43:31.432703+00, city => 1, language =>   , region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, hints => 15 }, effects => { list => [] } }}, version => 19, id => 19 } }
19.11 12:43:31 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 12:43:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 12:43:31 NET: Client login (conid:72100814, id:19, name:uid19)
19.11 12:43:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:43:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:43:31 DB: SELECT token FROM tokens WHERE userid = 19
19.11 12:43:31 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 19, _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {{ token => 25a8edacc55e981ba327cc55f0a49e31 }, { token => 1b37920d2c91f93a55ca231b3d43f733 }}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 DB: SELECT ID FROM TempUserLogins WHERE UserID = 19 AND Date = 'today'::timestamp
19.11 12:43:31 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 19 AND Date = 'today'::timestamp, _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (19, 'today'::timestamp)
19.11 12:43:31 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19, token => 25a8edacc55e981ba327cc55f0a49e31 }
19.11 12:43:31 ++ NET: uid19 req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 12:43:31 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 12:43:31 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 12:43:31 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 12:43:31 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 12:43:31 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (19, 'today'::timestamp), _type => core/server.pending }} }
19.11 12:43:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:43:31 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:43:31 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:43:31 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 1009
19.11 12:43:31 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479559411, lastLoginDate => 324, lastLoadDate => 1120 } }}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 12:43:31 -<<-: core/cache.update { errorCode => ok, version => 20, _type => core/cache.update }
19.11 12:43:31 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 12:43:31 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:43:31 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 12:43:31 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:43:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
19.11 12:43:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 12:43:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:43:31 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 12:43:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid19, isbanned => false, regdate => 2016-11-19 12:43:31.432703+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1479559411, lastLoginDate => 324, lastLoadDate => 1120, hints => 15 }, effects => { list => [] } }}, version => 20, id => 19 } }
19.11 12:43:31 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 12:43:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 19 } }
19.11 12:43:31 NET: Client login (conid:72100814, id:19, name:uid19)
19.11 12:43:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:43:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:43:31 DB: SELECT token FROM tokens WHERE userid = 19
19.11 12:43:31 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 19, _type => core/server.query }
19.11 12:43:31 -<<-: core/server.query { list => {{ token => 25a8edacc55e981ba327cc55f0a49e31 }, { token => 1b37920d2c91f93a55ca231b3d43f733 }}, errorCode => ok, _type => core/server.query }
19.11 12:43:31 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 12:43:36 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:43:36 TIME: user.ping 0.11 ms
19.11 12:43:36 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:43:40 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 12:43:40 -<<-: core/cache.update { errorCode => ok, version => 21, _type => core/cache.update }
19.11 12:43:49 TIMER: Check auto-disconnect...
19.11 12:43:50 STATS: vdl.0 cache, locks:4
19.11 12:43:57 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:43:57 TIME: user.ping 0.12 ms
19.11 12:43:58 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:43:58 TIME: user.ping 0.17 ms
19.11 12:43:58 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:44:00 NET: Client (name:uid19 conid:72100814 TCP) disconnected from vdl.0 (clients:1)
19.11 12:44:00 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 12:44:00 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
19.11 12:44:00 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:44:00 STATS: vdl.0 cache connection, 116 calls, total 0.0981590747833252 sec spent, avg 0.85 ms
19.11 12:44:00 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:44:00 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:44:00 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:44:00 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 1009
19.11 12:44:00 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 12:44:00 -<<-: core/cache.update { errorCode => ok, version => 22, _type => core/cache.update }
19.11 12:44:00 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 12:44:00 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:44:00 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 12:44:00 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:44:00 NET: Client (conid:35723987) connected to vdl.0 (clients:2)
19.11 12:44:00 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 12:44:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
19.11 12:44:00 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
19.11 12:44:00 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 12:44:00 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 12:44:00 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 12:44:00 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 12:44:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid19, isbanned => false, regdate => 2016-11-19 12:43:31.432703+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1479559411, lastLoginDate => 324, lastLoadDate => 1120, hints => 15 }, effects => { list => [] } }}, version => 22, id => 19 } }
19.11 12:44:00 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 12:44:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 19 } }
19.11 12:44:00 NET: Client login (conid:35723987, id:19, name:uid19)
19.11 12:44:00 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
19.11 12:44:00 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 12:44:00 DB: SELECT token FROM tokens WHERE userid = 19
19.11 12:44:00 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 19, _type => core/server.query }
19.11 12:44:00 -<<-: core/server.query { list => {{ token => 25a8edacc55e981ba327cc55f0a49e31 }, { token => 1b37920d2c91f93a55ca231b3d43f733 }}, errorCode => ok, _type => core/server.query }
19.11 12:44:00 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 12:44:00 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19, token => 25a8edacc55e981ba327cc55f0a49e31 }
19.11 12:44:00 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 12:44:00 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 12:44:10 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 12:44:10 -<<-: core/cache.update { errorCode => ok, version => 23, _type => core/cache.update }
19.11 12:44:19 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:44:19 TIME: user.ping 0.11 ms
19.11 12:44:19 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:44:41 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:44:41 TIME: user.ping 0.12 ms
19.11 12:44:41 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:44:49 TIMER: Check auto-disconnect...
19.11 12:44:50 STATS: vdl.0 cache, locks:4
19.11 12:45:02 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:45:02 TIME: user.ping 0.17 ms
19.11 12:45:02 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:45:06 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:45:06 TIME: user.ping 0.13 ms
19.11 12:45:06 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:45:24 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:45:24 TIME: user.ping 0.16 ms
19.11 12:45:24 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:45:46 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:45:46 TIME: user.ping 0.13 ms
19.11 12:45:46 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:45:49 TIMER: Check auto-disconnect...
19.11 12:45:50 STATS: vdl.0 cache, locks:4
19.11 12:46:06 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:46:06 TIME: user.ping 0.2 ms
19.11 12:46:06 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:46:07 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:46:07 TIME: user.ping 0.14 ms
19.11 12:46:07 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:46:29 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:46:29 TIME: user.ping 0.13 ms
19.11 12:46:29 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:46:49 TIMER: Check auto-disconnect...
19.11 12:46:50 STATS: vdl.0 cache, locks:4
19.11 12:46:50 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:46:50 TIME: user.ping 0.15 ms
19.11 12:46:50 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:47:07 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:47:07 TIME: user.ping 0.17 ms
19.11 12:47:07 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:47:12 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:47:12 TIME: user.ping 0.11 ms
19.11 12:47:12 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:47:34 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:47:34 TIME: user.ping 0.12 ms
19.11 12:47:34 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:47:49 TIMER: Check auto-disconnect...
19.11 12:47:50 STATS: vdl.0 cache, locks:4
19.11 12:47:55 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:47:55 TIME: user.ping 0.14 ms
19.11 12:47:55 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:48:07 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:48:07 TIME: user.ping 0.13 ms
19.11 12:48:07 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:48:17 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:48:17 TIME: user.ping 0.26 ms
19.11 12:48:17 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:48:38 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:48:38 TIME: user.ping 0.17 ms
19.11 12:48:38 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:48:49 TIMER: Check auto-disconnect...
19.11 12:48:50 STATS: vdl.0 cache, locks:4
19.11 12:49:00 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:49:00 TIME: user.ping 0.11 ms
19.11 12:49:00 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:49:08 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:49:08 TIME: user.ping 0.13 ms
19.11 12:49:08 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:49:21 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:49:21 TIME: user.ping 0.14 ms
19.11 12:49:21 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:49:43 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:49:43 TIME: user.ping 0.15 ms
19.11 12:49:43 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:49:49 TIMER: Check auto-disconnect...
19.11 12:49:50 STATS: vdl.0 cache, locks:4
19.11 12:50:05 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:50:05 TIME: user.ping 0.12 ms
19.11 12:50:05 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:50:08 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:50:08 TIME: user.ping 0.15 ms
19.11 12:50:08 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:50:26 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:50:26 TIME: user.ping 0.13 ms
19.11 12:50:26 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:50:48 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:50:48 TIME: user.ping 0.13 ms
19.11 12:50:48 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:50:49 TIMER: Check auto-disconnect...
19.11 12:50:50 STATS: vdl.0 cache, locks:4
19.11 12:51:09 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:51:09 TIME: user.ping 0.14 ms
19.11 12:51:09 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:51:09 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:51:09 TIME: user.ping 0.18 ms
19.11 12:51:09 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:51:31 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:51:31 TIME: user.ping 0.12 ms
19.11 12:51:31 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:51:49 TIMER: Check auto-disconnect...
19.11 12:51:50 STATS: vdl.0 cache, locks:4
19.11 12:51:52 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:51:52 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:51:52 TIME: user.ping 0.14 ms
19.11 12:52:10 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:52:10 TIME: user.ping 0.14 ms
19.11 12:52:10 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:52:14 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:52:14 TIME: user.ping 0.12 ms
19.11 12:52:14 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:52:36 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:52:36 TIME: user.ping 0.14 ms
19.11 12:52:36 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:52:49 TIMER: Check auto-disconnect...
19.11 12:52:50 STATS: vdl.0 cache, locks:4
19.11 12:52:57 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:52:57 TIME: user.ping 0.11 ms
19.11 12:52:57 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:53:10 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:53:10 TIME: user.ping 0.14 ms
19.11 12:53:10 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:53:19 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:53:19 TIME: user.ping 0.12 ms
19.11 12:53:19 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:53:40 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:53:40 TIME: user.ping 0.11 ms
19.11 12:53:40 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:53:49 TIMER: Check auto-disconnect...
19.11 12:53:50 STATS: vdl.0 cache, locks:4
19.11 12:54:02 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:54:02 TIME: user.ping 0.13 ms
19.11 12:54:02 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:54:11 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:54:11 TIME: user.ping 0.12 ms
19.11 12:54:11 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:54:24 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:54:24 TIME: user.ping 0.11 ms
19.11 12:54:24 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:54:45 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:54:45 TIME: user.ping 0.16 ms
19.11 12:54:45 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:54:49 TIMER: Check auto-disconnect...
19.11 12:54:50 STATS: vdl.0 cache, locks:4
19.11 12:55:07 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:55:07 TIME: user.ping 0.12 ms
19.11 12:55:07 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:55:28 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 12:55:28 TIME: user.ping 0.13 ms
19.11 12:55:28 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 12:55:49 TIMER: Check auto-disconnect...
19.11 12:55:50 STATS: vdl.0 cache, locks:4
19.11 12:56:49 TIMER: Check auto-disconnect...
19.11 12:56:50 STATS: vdl.0 cache, locks:4
19.11 12:57:40 NET: Client (name:uid19 conid:35723987 TCP) disconnected from vdl.0 (clients:1)
19.11 12:57:40 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 12:57:40 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
19.11 12:57:40 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:57:40 STATS: vdl.0 cache connection, 128 calls, total 0.104404926300049 sec spent, avg 0.82 ms
19.11 12:57:40 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:57:40 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:57:40 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:57:40 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 1009
19.11 12:57:40 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 12:57:40 -<<-: core/cache.update { errorCode => ok, version => 24, _type => core/cache.update }
19.11 12:57:40 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 12:57:40 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.11 12:57:40 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 12:57:40 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:57:49 NET: Client (name:uid18 conid:23695322 TCP) disconnected from vdl.0 (clients:0)
19.11 12:57:49 DB: SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true
19.11 12:57:49 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true, _type => core/server.query }
19.11 12:57:49 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 12:57:49 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:57:49 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 12:57:49 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 12:57:49 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 1009
19.11 12:57:49 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 18, _type => core/cache.update }
19.11 12:57:49 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 12:57:49 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 18, _type => core/cache.update }
19.11 12:57:49 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 12:57:49 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 18, _type => core/user.logoutPost }
19.11 12:57:49 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 12:57:49 TIMER: Check auto-disconnect...
19.11 12:57:50 STATS: vdl.0 cache, locks:0
19.11 12:58:49 TIMER: Check auto-disconnect...
19.11 12:58:50 STATS: vdl.0 cache, locks:0
19.11 12:59:49 TIMER: Check auto-disconnect...
19.11 12:59:50 STATS: vdl.0 cache, locks:0
