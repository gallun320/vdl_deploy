15.02 07:00:06 STATS: vdl.0 cache, locks:2
15.02 07:00:48 TIMER: Check auto-disconnect...
15.02 07:01:06 STATS: vdl.0 cache, locks:2
15.02 07:01:48 TIMER: Check auto-disconnect...
15.02 07:02:07 STATS: vdl.0 cache, locks:2
15.02 07:02:48 TIMER: Check auto-disconnect...
15.02 07:03:07 STATS: vdl.0 cache, locks:2
15.02 07:03:48 TIMER: Check auto-disconnect...
15.02 07:04:07 STATS: vdl.0 cache, locks:2
15.02 07:04:48 TIMER: Check auto-disconnect...
15.02 07:05:07 STATS: vdl.0 cache, locks:2
15.02 07:05:48 TIMER: Check auto-disconnect...
15.02 07:06:07 STATS: vdl.0 cache, locks:2
15.02 07:06:20 NET: Client (conid:73439731) connected to vdl.0 (clients:1)
15.02 07:06:21 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
15.02 07:06:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
15.02 07:06:21 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
15.02 07:06:21 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
15.02 07:06:21 STATS: vdl.0 cache connection, 1260 calls, total 0.871149301528931 sec spent, avg 0.69 ms
15.02 07:06:21 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
15.02 07:06:21 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
15.02 07:06:21 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
15.02 07:06:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487069442, lastLoginDate => 45, lastLoadDate => 215 }, effects => { list => [] } }}, version => 0, id => 60 } }
15.02 07:06:21 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
15.02 07:06:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
15.02 07:06:21 NET: Client login (conid:73439731, id:60, name:uid60)
15.02 07:06:21 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
15.02 07:06:21 -<<-: core/user.loginPost { _type => core/user.loginPost }
15.02 07:06:21 DB: SELECT ID FROM TempUserLogins WHERE UserID = 60 AND Date = 'today'::timestamp
15.02 07:06:21 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 60 AND Date = 'today'::timestamp, _type => core/server.query }
15.02 07:06:21 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
15.02 07:06:21 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (60, 'today'::timestamp)
15.02 07:06:21 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
15.02 07:06:21 == NET: uid60 ret: user.join { name => uid60, type => user.join }
15.02 07:06:21 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (60, 'today'::timestamp), _type => core/server.pending }} }
15.02 07:06:21 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
15.02 07:06:24 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 07:06:24 TIME: user.ping 0.15 ms
15.02 07:06:24 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 07:06:27 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1487160381, lastLoginDate => 46, lastLoadDate => 216 } }}, type => user, unlock => false, id => 60, _type => core/cache.update }
15.02 07:06:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
15.02 07:06:48 TIMER: Check auto-disconnect...
15.02 07:07:07 STATS: vdl.0 cache, locks:4
15.02 07:07:48 TIMER: Check auto-disconnect...
15.02 07:08:07 STATS: vdl.0 cache, locks:4
15.02 07:08:48 TIMER: Check auto-disconnect...
15.02 07:09:07 STATS: vdl.0 cache, locks:4
15.02 07:09:48 TIMER: Check auto-disconnect...
15.02 07:09:48 NET: Client (name:uid60 conid:73439731 TCP) disconnected from vdl.0 (clients:0)
15.02 07:09:48 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
15.02 07:09:48 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
15.02 07:09:48 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
15.02 07:09:48 STATS: vdl.0 cache connection, 1268 calls, total 0.87669825553894 sec spent, avg 0.69 ms
15.02 07:09:48 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
15.02 07:09:48 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
15.02 07:09:48 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
15.02 07:09:48 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
15.02 07:09:48 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
15.02 07:09:48 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
15.02 07:09:48 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
15.02 07:09:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
15.02 07:09:48 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
15.02 07:09:48 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
15.02 07:10:07 STATS: vdl.0 cache, locks:2
15.02 07:10:48 TIMER: Check auto-disconnect...
15.02 07:11:07 STATS: vdl.0 cache, locks:2
15.02 07:11:48 TIMER: Check auto-disconnect...
15.02 07:12:07 STATS: vdl.0 cache, locks:2
15.02 07:12:48 TIMER: Check auto-disconnect...
15.02 07:13:07 STATS: vdl.0 cache, locks:2
15.02 07:13:48 TIMER: Check auto-disconnect...
15.02 07:14:07 STATS: vdl.0 cache, locks:2
15.02 07:14:48 TIMER: Check auto-disconnect...
15.02 07:15:07 STATS: vdl.0 cache, locks:2
15.02 07:15:48 TIMER: Check auto-disconnect...
15.02 07:16:07 STATS: vdl.0 cache, locks:2
15.02 07:16:48 TIMER: Check auto-disconnect...
15.02 07:17:07 STATS: vdl.0 cache, locks:2
15.02 07:17:48 TIMER: Check auto-disconnect...
15.02 07:18:07 STATS: vdl.0 cache, locks:2
15.02 07:18:48 TIMER: Check auto-disconnect...
15.02 07:19:07 STATS: vdl.0 cache, locks:2
15.02 07:19:48 TIMER: Check auto-disconnect...
15.02 07:20:07 STATS: vdl.0 cache, locks:2
15.02 07:20:48 TIMER: Check auto-disconnect...
15.02 07:21:07 STATS: vdl.0 cache, locks:2
15.02 07:21:48 TIMER: Check auto-disconnect...
15.02 07:22:07 STATS: vdl.0 cache, locks:2
15.02 07:22:48 TIMER: Check auto-disconnect...
15.02 07:23:07 STATS: vdl.0 cache, locks:2
15.02 07:23:48 TIMER: Check auto-disconnect...
15.02 07:24:07 STATS: vdl.0 cache, locks:2
15.02 07:24:48 TIMER: Check auto-disconnect...
15.02 07:25:07 STATS: vdl.0 cache, locks:2
15.02 07:25:48 TIMER: Check auto-disconnect...
15.02 07:26:07 STATS: vdl.0 cache, locks:2
15.02 07:26:48 TIMER: Check auto-disconnect...
15.02 07:27:07 STATS: vdl.0 cache, locks:2
15.02 07:27:48 TIMER: Check auto-disconnect...
15.02 07:28:07 STATS: vdl.0 cache, locks:2
15.02 07:28:48 TIMER: Check auto-disconnect...
15.02 07:29:07 STATS: vdl.0 cache, locks:2
15.02 07:29:48 TIMER: Check auto-disconnect...
15.02 07:30:07 STATS: vdl.0 cache, locks:2
15.02 07:30:48 TIMER: Check auto-disconnect...
15.02 07:31:07 STATS: vdl.0 cache, locks:2
15.02 07:31:48 TIMER: Check auto-disconnect...
15.02 07:32:07 STATS: vdl.0 cache, locks:2
15.02 07:32:48 TIMER: Check auto-disconnect...
15.02 07:33:07 STATS: vdl.0 cache, locks:2
15.02 07:33:48 TIMER: Check auto-disconnect...
15.02 07:34:07 STATS: vdl.0 cache, locks:2
15.02 07:34:48 TIMER: Check auto-disconnect...
15.02 07:35:07 STATS: vdl.0 cache, locks:2
15.02 07:35:48 TIMER: Check auto-disconnect...
15.02 07:36:07 STATS: vdl.0 cache, locks:2
15.02 07:36:48 TIMER: Check auto-disconnect...
15.02 07:37:07 STATS: vdl.0 cache, locks:2
15.02 07:37:48 TIMER: Check auto-disconnect...
15.02 07:38:07 STATS: vdl.0 cache, locks:2
15.02 07:38:48 TIMER: Check auto-disconnect...
15.02 07:39:07 STATS: vdl.0 cache, locks:2
15.02 07:39:48 TIMER: Check auto-disconnect...
15.02 07:40:07 STATS: vdl.0 cache, locks:2
15.02 07:40:48 TIMER: Check auto-disconnect...
15.02 07:41:07 STATS: vdl.0 cache, locks:2
15.02 07:41:48 TIMER: Check auto-disconnect...
15.02 07:42:07 STATS: vdl.0 cache, locks:2
15.02 07:42:48 TIMER: Check auto-disconnect...
15.02 07:43:07 STATS: vdl.0 cache, locks:2
15.02 07:43:48 TIMER: Check auto-disconnect...
15.02 07:44:07 STATS: vdl.0 cache, locks:2
15.02 07:44:48 TIMER: Check auto-disconnect...
15.02 07:45:07 STATS: vdl.0 cache, locks:2
15.02 07:45:48 TIMER: Check auto-disconnect...
15.02 07:46:07 STATS: vdl.0 cache, locks:2
15.02 07:46:48 TIMER: Check auto-disconnect...
15.02 07:47:07 STATS: vdl.0 cache, locks:2
15.02 07:47:48 TIMER: Check auto-disconnect...
15.02 07:48:07 STATS: vdl.0 cache, locks:2
15.02 07:48:48 TIMER: Check auto-disconnect...
15.02 07:49:07 STATS: vdl.0 cache, locks:2
15.02 07:49:48 TIMER: Check auto-disconnect...
15.02 07:50:07 STATS: vdl.0 cache, locks:2
15.02 07:50:48 TIMER: Check auto-disconnect...
15.02 07:51:07 STATS: vdl.0 cache, locks:2
15.02 07:51:48 TIMER: Check auto-disconnect...
15.02 07:52:07 STATS: vdl.0 cache, locks:2
15.02 07:52:48 TIMER: Check auto-disconnect...
15.02 07:53:07 STATS: vdl.0 cache, locks:2
15.02 07:53:48 TIMER: Check auto-disconnect...
15.02 07:54:07 STATS: vdl.0 cache, locks:2
15.02 07:54:48 TIMER: Check auto-disconnect...
15.02 07:55:07 STATS: vdl.0 cache, locks:2
15.02 07:55:48 TIMER: Check auto-disconnect...
15.02 07:56:01 NET: Client (conid:2851442) connected to vdl.0 (clients:1)
15.02 07:56:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
15.02 07:56:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
15.02 07:56:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
15.02 07:56:02 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
15.02 07:56:02 STATS: vdl.0 cache connection, 1273 calls, total 0.885346174240112 sec spent, avg 0.7 ms
15.02 07:56:02 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
15.02 07:56:02 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
15.02 07:56:02 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
15.02 07:56:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487160381, lastLoginDate => 46, lastLoadDate => 216 }, effects => { list => [] } }}, version => 0, id => 60 } }
15.02 07:56:02 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
15.02 07:56:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
15.02 07:56:02 NET: Client login (conid:2851442, id:60, name:uid60)
15.02 07:56:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
15.02 07:56:02 -<<-: core/user.loginPost { _type => core/user.loginPost }
15.02 07:56:02 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
15.02 07:56:02 == NET: uid60 ret: user.join { name => uid60, type => user.join }
15.02 07:56:06 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 07:56:06 TIME: user.ping 0.11 ms
15.02 07:56:06 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 07:56:07 STATS: vdl.0 cache, locks:4
15.02 07:56:07 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
15.02 07:56:07 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
15.02 07:56:48 TIMER: Check auto-disconnect...
15.02 07:57:07 STATS: vdl.0 cache, locks:4
15.02 07:57:48 TIMER: Check auto-disconnect...
15.02 07:58:07 STATS: vdl.0 cache, locks:4
15.02 07:58:48 TIMER: Check auto-disconnect...
15.02 07:59:07 STATS: vdl.0 cache, locks:4
15.02 07:59:48 TIMER: Check auto-disconnect...
15.02 07:59:48 NET: Client (name:uid60 conid:2851442 TCP) disconnected from vdl.0 (clients:0)
15.02 07:59:48 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
15.02 07:59:48 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
15.02 07:59:48 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
15.02 07:59:48 STATS: vdl.0 cache connection, 1279 calls, total 0.888574361801147 sec spent, avg 0.69 ms
15.02 07:59:48 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
15.02 07:59:48 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
15.02 07:59:48 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
15.02 07:59:48 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
15.02 07:59:48 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
15.02 07:59:48 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
15.02 07:59:48 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
15.02 07:59:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
15.02 07:59:48 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
15.02 07:59:48 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
