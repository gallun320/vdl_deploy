18.10 18:00:38 TIMER: Check auto-disconnect...
18.10 18:00:39 STATS: vdl.0 cache, locks:0
18.10 18:01:38 TIMER: Check auto-disconnect...
18.10 18:01:39 STATS: vdl.0 cache, locks:0
18.10 18:02:38 TIMER: Check auto-disconnect...
18.10 18:02:39 STATS: vdl.0 cache, locks:0
18.10 18:03:38 TIMER: Check auto-disconnect...
18.10 18:03:39 STATS: vdl.0 cache, locks:0
18.10 18:04:38 TIMER: Check auto-disconnect...
18.10 18:04:39 STATS: vdl.0 cache, locks:0
18.10 18:05:38 TIMER: Check auto-disconnect...
18.10 18:05:39 STATS: vdl.0 cache, locks:0
18.10 18:06:38 TIMER: Check auto-disconnect...
18.10 18:06:39 STATS: vdl.0 cache, locks:0
18.10 18:07:38 TIMER: Check auto-disconnect...
18.10 18:07:39 STATS: vdl.0 cache, locks:0
18.10 18:08:38 TIMER: Check auto-disconnect...
18.10 18:08:39 STATS: vdl.0 cache, locks:0
18.10 18:09:38 TIMER: Check auto-disconnect...
18.10 18:09:39 STATS: vdl.0 cache, locks:0
18.10 18:10:02 NET: Client (conid:97176616) connected to vdl.0 (clients:1)
18.10 18:10:03 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
18.10 18:10:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:10:03 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:10:03 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:10:03 STATS: vdl.0 cache connection, 56 calls, total 0.0791511535644531 sec spent, avg 1.41 ms
18.10 18:10:03 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:10:03 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:10:03 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:10:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:10:03 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:10:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:10:03 NET: Client login (conid:97176616, id:2, name:test1)
18.10 18:10:03 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:10:03 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.10 18:10:03 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
18.10 18:10:03 == NET: test1 ret: user.join { name => test1, type => user.join }
18.10 18:10:07 ++ NET: test1 req: user.logout { messageType => user.logout }
18.10 18:10:07 TIME: user.logout 0.09 ms
18.10 18:10:07 == NET: test1 ret: user.logout { type => user.logout, errorCode => ok }
18.10 18:10:07 NET: Client (name:test1 conid:97176616 TCP) disconnected from vdl.0 (clients:0)
18.10 18:10:07 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:10:07 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:10:07 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:10:07 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:10:07 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:10:07 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:10:07 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
18.10 18:10:07 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:10:07 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:10:07 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:10:07 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:10:07 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:10:07 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:10:21 NET: Client (conid:80887560) connected to vdl.0 (clients:1)
18.10 18:10:22 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
18.10 18:10:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:10:22 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:10:22 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:10:22 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:10:22 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:10:22 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:10:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:10:22 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:10:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:10:22 NET: Client login (conid:80887560, id:2, name:test1)
18.10 18:10:22 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:10:22 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.10 18:10:22 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
18.10 18:10:22 == NET: test1 ret: user.join { name => test1, type => user.join }
18.10 18:10:29 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
18.10 18:10:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:10:29 ++ NET: test1 req: user.logout { messageType => user.logout }
18.10 18:10:29 TIME: user.logout 0.09 ms
18.10 18:10:29 == NET: test1 ret: user.logout { type => user.logout, errorCode => ok }
18.10 18:10:29 NET: Client (name:test1 conid:80887560 TCP) disconnected from vdl.0 (clients:0)
18.10 18:10:29 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:10:29 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:10:29 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:10:29 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:10:29 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:10:29 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:10:29 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
18.10 18:10:29 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:10:29 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.10 18:10:29 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:10:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:10:29 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:10:29 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:10:38 TIMER: Check auto-disconnect...
18.10 18:10:39 STATS: vdl.0 cache, locks:0
18.10 18:11:38 TIMER: Check auto-disconnect...
18.10 18:11:39 STATS: vdl.0 cache, locks:0
18.10 18:12:38 TIMER: Check auto-disconnect...
18.10 18:12:39 STATS: vdl.0 cache, locks:0
18.10 18:13:38 TIMER: Check auto-disconnect...
18.10 18:13:39 STATS: vdl.0 cache, locks:0
18.10 18:14:38 TIMER: Check auto-disconnect...
18.10 18:14:39 STATS: vdl.0 cache, locks:0
18.10 18:15:38 TIMER: Check auto-disconnect...
18.10 18:15:39 STATS: vdl.0 cache, locks:0
18.10 18:16:38 TIMER: Check auto-disconnect...
18.10 18:16:39 STATS: vdl.0 cache, locks:0
18.10 18:17:38 TIMER: Check auto-disconnect...
18.10 18:17:39 STATS: vdl.0 cache, locks:0
18.10 18:18:04 NET: Client (conid:73657219) connected to vdl.0 (clients:1)
18.10 18:18:05 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
18.10 18:18:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:18:05 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:18:05 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:18:05 STATS: vdl.0 cache connection, 77 calls, total 0.0981154441833496 sec spent, avg 1.27 ms
18.10 18:18:05 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:18:05 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:18:05 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:18:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:18:05 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:18:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:18:05 NET: Client login (conid:73657219, id:2, name:test1)
18.10 18:18:05 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:18:05 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.10 18:18:05 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
18.10 18:18:05 == NET: test1 ret: user.join { name => test1, type => user.join }
18.10 18:18:14 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
18.10 18:18:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:18:15 ++ NET: test1 req: user.logout { messageType => user.logout }
18.10 18:18:15 TIME: user.logout 0.1 ms
18.10 18:18:15 == NET: test1 ret: user.logout { type => user.logout, errorCode => ok }
18.10 18:18:15 NET: Client (name:test1 conid:73657219 TCP) disconnected from vdl.0 (clients:0)
18.10 18:18:15 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:18:15 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:18:15 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:18:15 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:18:15 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:18:15 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:18:15 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
18.10 18:18:15 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:18:15 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.10 18:18:15 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:18:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:18:15 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:18:15 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:18:38 TIMER: Check auto-disconnect...
18.10 18:18:39 STATS: vdl.0 cache, locks:0
18.10 18:19:38 TIMER: Check auto-disconnect...
18.10 18:19:39 STATS: vdl.0 cache, locks:0
18.10 18:20:38 TIMER: Check auto-disconnect...
18.10 18:20:39 STATS: vdl.0 cache, locks:0
18.10 18:21:38 TIMER: Check auto-disconnect...
18.10 18:21:39 STATS: vdl.0 cache, locks:0
18.10 18:22:38 TIMER: Check auto-disconnect...
18.10 18:23:06 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
18.10 18:23:06 -<<-: server.login ok
18.10 18:23:06 DB: SELECT * FROM LocalizationStrings
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 TIMER: Starting timer...
18.10 18:23:06 DB: SELECT * FROM GameVars
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
18.10 18:23:06 TIMER: Timer running...
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
18.10 18:23:06 -<<-: core/quest.getDaily ok
18.10 18:23:06 DB: SELECT * FROM UserAttributeTypes
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM UserVariableTypes
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
18.10 18:23:06 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM ItemGroups
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM Bundles ORDER BY ID
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM BundleItems ORDER BY ID
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 SHOP: loading items...
18.10 18:23:06 ->>-: core/shop.getList { _type => core/shop.getList }
18.10 18:23:06 -<<-: core/shop.getList ok
18.10 18:23:06 SHOP: 0 items loaded (0.001 sec)
18.10 18:23:06 DB: SELECT * FROM EffectAttributeTypes
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM Effects
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.10 18:23:06 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.10 18:23:06 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 DB: SELECT * FROM Badges
18.10 18:23:06 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
18.10 18:23:06 -<<-: core/server.query ok
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:23:06 TIMER: Check auto-disconnect...
18.10 18:23:06 STATS: vdl.0 cache, locks:0
18.10 18:32:25 NET: Client (conid:9043741) connected to vdl.0 (clients:1)
18.10 18:32:26 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
18.10 18:32:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:32:26 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:32:26 -<<-: core/server.query ok
18.10 18:32:26 STATS: vdl.0 cache connection, 21 calls, total 0.0539355278015137 sec spent, avg 2.57 ms
18.10 18:32:26 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:32:26 -<<-: core/user.isOnlineID ok
18.10 18:32:26 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:32:26 -<<-: core/cache.get ok
18.10 18:32:26 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:32:26 -<<-: core/cache.get ok
18.10 18:32:26 NET: Client login (conid:9043741, id:2, name:test1)
18.10 18:32:26 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:32:26 -<<-: core/user.loginPost null
18.10 18:32:26 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
18.10 18:32:26 == NET: test1 ret: user.join { name => test1, type => user.join }
18.10 18:32:31 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
18.10 18:32:31 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:32:33 ++ NET: test1 req: user.logout { messageType => user.logout }
18.10 18:32:33 == NET: test1 ret: user.logout { type => user.logout, errorCode => ok }
18.10 18:32:33 TIME: user.logout 0.13 ms
18.10 18:32:33 NET: Client (name:test1 conid:9043741 TCP) disconnected from vdl.0 (clients:0)
18.10 18:32:33 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:32:33 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:32:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:32:33 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:32:33 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:32:33 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:32:33 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
18.10 18:32:33 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:32:33 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.10 18:32:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:32:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:32:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:32:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:33:06 TIMER: Check auto-disconnect...
18.10 18:33:06 STATS: vdl.0 cache, locks:0
18.10 18:33:06 TIMER: Check auto-disconnect...
18.10 18:33:06 STATS: vdl.0 cache, locks:0
18.10 18:33:06 TIMER: Check auto-disconnect...
18.10 18:33:06 STATS: vdl.0 cache, locks:0
18.10 18:33:06 TIMER: Check auto-disconnect...
18.10 18:33:06 STATS: vdl.0 cache, locks:0
18.10 18:36:36 NET: Client (conid:73497164) connected to vdl.0 (clients:1)
18.10 18:36:37 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
18.10 18:36:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:36:37 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:36:37 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:36:37 STATS: vdl.0 cache connection, 32 calls, total 0.0673317909240723 sec spent, avg 2.1 ms
18.10 18:36:37 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:36:37 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:36:37 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:36:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:36:37 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:36:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:36:37 NET: Client login (conid:73497164, id:2, name:test1)
18.10 18:36:37 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:36:37 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.10 18:36:37 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
18.10 18:36:37 == NET: test1 ret: user.join { name => test1, type => user.join }
18.10 18:36:46 ++ NET: test1 req: user.logout { messageType => user.logout }
18.10 18:36:46 TIME: user.logout 0.12 ms
18.10 18:36:46 == NET: test1 ret: user.logout { type => user.logout, errorCode => ok }
18.10 18:36:46 NET: Client (name:test1 conid:73497164 TCP) disconnected from vdl.0 (clients:0)
18.10 18:36:46 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:36:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:36:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:36:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:36:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:36:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:36:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
18.10 18:36:46 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:36:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:36:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:36:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:36:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:36:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:37:06 TIMER: Check auto-disconnect...
18.10 18:37:06 STATS: vdl.0 cache, locks:0
18.10 18:37:06 TIMER: Check auto-disconnect...
18.10 18:37:06 STATS: vdl.0 cache, locks:0
18.10 18:37:06 TIMER: Check auto-disconnect...
18.10 18:37:06 STATS: vdl.0 cache, locks:0
18.10 18:37:06 TIMER: Check auto-disconnect...
18.10 18:37:06 STATS: vdl.0 cache, locks:0
18.10 18:40:33 NET: Client (conid:60450295) connected to vdl.0 (clients:1)
18.10 18:40:34 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
18.10 18:40:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:40:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:40:34 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:40:34 STATS: vdl.0 cache connection, 42 calls, total 0.0785837173461914 sec spent, avg 1.87 ms
18.10 18:40:34 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:40:34 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:40:34 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:40:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:40:34 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:40:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:40:34 NET: Client login (conid:60450295, id:2, name:test1)
18.10 18:40:34 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:40:34 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.10 18:40:34 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
18.10 18:40:34 == NET: test1 ret: user.join { name => test1, type => user.join }
18.10 18:40:41 ++ NET: test1 req: user.logout { messageType => user.logout }
18.10 18:40:41 == NET: test1 ret: user.logout { type => user.logout, errorCode => ok }
18.10 18:40:41 TIME: user.logout 0.12 ms
18.10 18:40:41 NET: Client (name:test1 conid:60450295 TCP) disconnected from vdl.0 (clients:0)
18.10 18:40:41 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:40:41 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:40:41 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:40:41 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:40:41 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:40:41 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:40:41 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
18.10 18:40:41 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:40:41 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:40:41 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:40:41 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:40:41 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:40:41 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:40:54 NET: Client (conid:80188955) connected to vdl.0 (clients:1)
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 NET: Client (name:null conid:80188955 TCP) disconnected from vdl.0 (clients:0)
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:41:06 STATS: vdl.0 cache, locks:0
18.10 18:41:06 TIMER: Check auto-disconnect...
18.10 18:51:07 STATS: vdl.0 cache, locks:0
18.10 18:52:06 TIMER: Check auto-disconnect...
18.10 18:52:07 STATS: vdl.0 cache, locks:0
18.10 18:53:06 TIMER: Check auto-disconnect...
18.10 18:53:07 STATS: vdl.0 cache, locks:0
18.10 18:54:06 TIMER: Check auto-disconnect...
18.10 18:54:07 STATS: vdl.0 cache, locks:0
18.10 18:55:06 TIMER: Check auto-disconnect...
18.10 18:55:07 STATS: vdl.0 cache, locks:0
18.10 18:56:06 TIMER: Check auto-disconnect...
18.10 18:56:07 STATS: vdl.0 cache, locks:0
18.10 18:57:06 TIMER: Check auto-disconnect...
18.10 18:57:07 STATS: vdl.0 cache, locks:0
18.10 18:58:06 TIMER: Check auto-disconnect...
18.10 18:58:07 STATS: vdl.0 cache, locks:0
18.10 18:59:06 TIMER: Check auto-disconnect...
18.10 18:59:07 STATS: vdl.0 cache, locks:0
