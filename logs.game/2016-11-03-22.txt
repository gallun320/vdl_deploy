03.11 22:00:04 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:04 TIME: user.ping 0.21 ms
03.11 22:00:04 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:07 TIME: user.ping 0.15 ms
03.11 22:00:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:11 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:11 TIME: user.ping 0.18 ms
03.11 22:00:11 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:18 TIME: user.ping 0.19 ms
03.11 22:00:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:19 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:19 TIME: user.ping 0.13 ms
03.11 22:00:19 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:19 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:19 TIME: user.ping 0.12 ms
03.11 22:00:19 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:27 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:27 TIME: user.ping 0.14 ms
03.11 22:00:27 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:29 TIME: user.ping 0.16 ms
03.11 22:00:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:34 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:34 TIME: user.ping 0.14 ms
03.11 22:00:34 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:42 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:42 TIME: user.ping 0.16 ms
03.11 22:00:42 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:45 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:45 TIME: user.ping 0.15 ms
03.11 22:00:45 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:51 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:00:51 TIME: user.ping 0.15 ms
03.11 22:00:51 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:00:53 TIMER: Check auto-disconnect...
03.11 22:00:53 STATS: vdl.0 cache, locks:6
03.11 22:01:00 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:00 TIME: user.ping 0.16 ms
03.11 22:01:00 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:02 TIME: user.ping 0.18 ms
03.11 22:01:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:12 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:12 TIME: user.ping 0.16 ms
03.11 22:01:12 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:13 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:13 TIME: user.ping 0.24 ms
03.11 22:01:13 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:20 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:20 TIME: user.ping 0.14 ms
03.11 22:01:20 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:22 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:22 TIME: user.ping 0.15 ms
03.11 22:01:22 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:33 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:33 TIME: user.ping 0.14 ms
03.11 22:01:33 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:39 TIME: user.ping 0.17 ms
03.11 22:01:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:41 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:41 TIME: user.ping 0.17 ms
03.11 22:01:41 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:49 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:01:49 TIME: user.ping 0.15 ms
03.11 22:01:49 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:01:53 TIMER: Check auto-disconnect...
03.11 22:01:53 STATS: vdl.0 cache, locks:6
03.11 22:01:55 NET: Client (name:uid114 conid:57168920 TCP) disconnected from vdl.0 (clients:2)
03.11 22:01:55 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:01:55 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:01:55 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:01:55 STATS: vdl.0 cache connection, 66 calls, total 0.153018951416016 sec spent, avg 2.32 ms
03.11 22:01:55 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:01:55 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:01:55 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:01:55 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:01:55 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:01:55 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
03.11 22:01:55 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:01:55 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 22:01:55 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:01:55 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:02:05 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:02:05 TIME: user.ping 0.18 ms
03.11 22:02:05 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:02:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:02:15 TIME: user.ping 0.16 ms
03.11 22:02:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:02:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:02:27 TIME: user.ping 0.19 ms
03.11 22:02:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:02:32 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:02:32 TIME: user.ping 0.19 ms
03.11 22:02:32 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:02:38 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:02:38 TIME: user.ping 0.14 ms
03.11 22:02:38 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:02:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:02:50 TIME: user.ping 0.19 ms
03.11 22:02:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:02:53 TIMER: Check auto-disconnect...
03.11 22:02:53 STATS: vdl.0 cache, locks:4
03.11 22:02:58 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:02:58 TIME: user.ping 0.19 ms
03.11 22:02:58 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:03:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:03:19 TIME: user.ping 0.2 ms
03.11 22:03:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:03:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:03:25 TIME: user.ping 0.15 ms
03.11 22:03:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:03:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:03:30 TIME: user.ping 0.22 ms
03.11 22:03:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:03:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:03:42 TIME: user.ping 0.18 ms
03.11 22:03:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:03:51 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:03:51 TIME: user.ping 0.19 ms
03.11 22:03:51 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:03:53 TIMER: Check auto-disconnect...
03.11 22:03:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:03:53 TIME: user.ping 0.17 ms
03.11 22:03:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:03:53 STATS: vdl.0 cache, locks:4
03.11 22:04:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:04:05 TIME: user.ping 0.19 ms
03.11 22:04:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:04:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:04:16 TIME: user.ping 0.17 ms
03.11 22:04:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:04:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:04:17 TIME: user.ping 0.16 ms
03.11 22:04:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:04:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:04:28 TIME: user.ping 0.15 ms
03.11 22:04:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:04:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:04:44 TIME: user.ping 0.18 ms
03.11 22:04:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:04:53 TIMER: Check auto-disconnect...
03.11 22:04:53 STATS: vdl.0 cache, locks:4
03.11 22:05:10 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:05:10 TIME: user.ping 0.17 ms
03.11 22:05:10 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:05:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:05:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:05:37 TIME: user.ping 0.18 ms
03.11 22:05:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:05:44 TIME: user.ping 0.19 ms
03.11 22:05:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:05:53 TIMER: Check auto-disconnect...
03.11 22:05:53 STATS: vdl.0 cache, locks:4
03.11 22:05:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:05:55 TIME: user.ping 0.14 ms
03.11 22:05:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:03 TIME: user.ping 0.2 ms
03.11 22:06:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:07 TIME: user.ping 0.17 ms
03.11 22:06:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:18 TIME: user.ping 0.14 ms
03.11 22:06:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:29 NET: Client (conid:84126926) connected to vdl.0 (clients:3)
03.11 22:06:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:30 TIME: user.ping 0.22 ms
03.11 22:06:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:06:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:06:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:06:30 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:06:30 STATS: vdl.0 cache connection, 71 calls, total 0.158501863479614 sec spent, avg 2.23 ms
03.11 22:06:30 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:06:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:06:30 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:06:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:06:30 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:06:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:06:30 NET: Client login (conid:84126926, id:114, name:uid114)
03.11 22:06:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:06:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:06:30 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:06:30 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:06:30 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:30 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 22:06:30 TIME: user.ping 0.16 ms
03.11 22:06:30 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 22:06:30 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:06:30 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:06:30 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:34 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:34 TIME: user.ping 0.18 ms
03.11 22:06:34 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:38 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:06:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:06:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:41 TIME: user.ping 0.3 ms
03.11 22:06:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:47 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:47 TIME: user.ping 0.19 ms
03.11 22:06:47 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:53 TIME: user.ping 0.18 ms
03.11 22:06:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:53 TIMER: Check auto-disconnect...
03.11 22:06:53 STATS: vdl.0 cache, locks:6
03.11 22:06:55 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:55 TIME: user.ping 0.14 ms
03.11 22:06:55 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:06:57 TIME: user.ping 0.13 ms
03.11 22:06:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:06:58 NET: Client (name:uid114 conid:84126926 TCP) disconnected from vdl.0 (clients:2)
03.11 22:06:58 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:06:58 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:06:58 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:06:58 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:06:58 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:06:58 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:06:58 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:06:58 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:06:58 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:06:58 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:06:58 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:06:58 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:06:58 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:07:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:07:04 TIME: user.ping 0.19 ms
03.11 22:07:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:07:06 NET: Client (conid:247664) connected to vdl.0 (clients:3)
03.11 22:07:07 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:07:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:07:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:07:07 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:07:07 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:07:07 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:07:07 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:07:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 114 } }
03.11 22:07:07 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:07:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 114 } }
03.11 22:07:07 NET: Client login (conid:247664, id:114, name:uid114)
03.11 22:07:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:07:07 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:07:07 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:07:07 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:07:07 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:07:07 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 22:07:07 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:07:07 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 22:07:11 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:07:11 TIME: user.ping 0.15 ms
03.11 22:07:11 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:07:13 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:07:13 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 22:07:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:07:16 TIME: user.ping 0.22 ms
03.11 22:07:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:07:22 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:07:22 TIME: user.ping 0.16 ms
03.11 22:07:22 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:07:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:07:23 TIME: user.ping 0.16 ms
03.11 22:07:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:07:26 NET: Client (name:uid114 conid:247664 TCP) disconnected from vdl.0 (clients:2)
03.11 22:07:26 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:07:26 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:07:26 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:07:26 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:07:26 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:07:26 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:07:26 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:07:26 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:07:26 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 22:07:26 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:07:26 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:07:26 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:07:26 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:07:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:07:27 TIME: user.ping 0.15 ms
03.11 22:07:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:07:50 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:07:50 TIME: user.ping 0.19 ms
03.11 22:07:50 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:07:53 TIMER: Check auto-disconnect...
03.11 22:07:53 STATS: vdl.0 cache, locks:4
03.11 22:08:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:08:16 TIME: user.ping 0.2 ms
03.11 22:08:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:08:43 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:08:43 TIME: user.ping 0.13 ms
03.11 22:08:43 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:08:53 TIMER: Check auto-disconnect...
03.11 22:08:53 STATS: vdl.0 cache, locks:4
03.11 22:08:54 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:08:54 TIME: user.ping 0.16 ms
03.11 22:08:54 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:09:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:09:05 TIME: user.ping 0.18 ms
03.11 22:09:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:09:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:09:09 TIME: user.ping 0.14 ms
03.11 22:09:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:09:12 NET: Client (conid:24392035) connected to vdl.0 (clients:3)
03.11 22:09:13 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:09:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:09:13 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:09:13 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:09:13 STATS: vdl.0 cache connection, 93 calls, total 0.177094221115112 sec spent, avg 1.9 ms
03.11 22:09:13 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:09:13 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:09:13 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:09:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:09:13 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:09:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:09:13 NET: Client login (conid:24392035, id:114, name:uid114)
03.11 22:09:13 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:09:13 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:09:13 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:09:13 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:09:13 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:09:13 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 22:09:13 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 22:09:13 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:09:17 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:09:17 TIME: user.ping 0.17 ms
03.11 22:09:17 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:09:21 NET: Client (name:uid114 conid:24392035 TCP) disconnected from vdl.0 (clients:2)
03.11 22:09:21 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:09:21 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:09:21 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:09:21 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:09:21 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:09:21 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:09:21 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:09:21 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:09:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:09:21 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:09:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:09:21 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:09:21 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:09:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:09:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:09:36 TIME: user.ping 0.26 ms
03.11 22:09:53 TIMER: Check auto-disconnect...
03.11 22:09:53 STATS: vdl.0 cache, locks:4
03.11 22:10:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:10:03 TIME: user.ping 0.18 ms
03.11 22:10:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:10:29 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:10:29 TIME: user.ping 0.16 ms
03.11 22:10:29 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:10:53 TIMER: Check auto-disconnect...
03.11 22:10:53 STATS: vdl.0 cache, locks:4
03.11 22:10:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:10:56 TIME: user.ping 0.17 ms
03.11 22:10:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:11:22 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:11:22 TIME: user.ping 0.17 ms
03.11 22:11:22 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:11:26 NET: Client (conid:6318122) connected to vdl.0 (clients:3)
03.11 22:11:27 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:11:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:11:27 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:11:27 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:11:27 STATS: vdl.0 cache connection, 103 calls, total 0.187292337417603 sec spent, avg 1.82 ms
03.11 22:11:27 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:11:27 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:11:27 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:11:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:11:27 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:11:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:11:27 NET: Client login (conid:6318122, id:114, name:uid114)
03.11 22:11:27 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:11:27 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:11:27 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:11:27 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:11:27 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:11:27 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 22:11:27 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 22:11:27 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:11:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:11:31 TIME: user.ping 0.18 ms
03.11 22:11:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:11:33 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:11:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:11:40 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:11:40 TIME: user.ping 0.15 ms
03.11 22:11:40 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:11:49 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:11:49 TIME: user.ping 0.17 ms
03.11 22:11:49 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:11:51 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:11:51 TIME: user.ping 0.17 ms
03.11 22:11:51 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:11:53 TIMER: Check auto-disconnect...
03.11 22:11:53 STATS: vdl.0 cache, locks:6
03.11 22:12:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:12:01 TIME: user.ping 0.17 ms
03.11 22:12:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:12:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:12:08 TIME: user.ping 0.15 ms
03.11 22:12:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:12:11 NET: Client (name:uid114 conid:6318122 TCP) disconnected from vdl.0 (clients:2)
03.11 22:12:11 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:12:11 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:12:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:12:11 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:12:11 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:12:11 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:12:11 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:12:11 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:12:11 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:12:11 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:12:11 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:12:11 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:12:11 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:12:15 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:12:15 TIME: user.ping 0.15 ms
03.11 22:12:15 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:12:42 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:12:42 TIME: user.ping 0.19 ms
03.11 22:12:42 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:12:48 NET: Client (conid:1357401) connected to vdl.0 (clients:3)
03.11 22:12:49 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:12:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:12:49 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:12:49 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:12:49 STATS: vdl.0 cache connection, 114 calls, total 0.197715759277344 sec spent, avg 1.73 ms
03.11 22:12:49 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:12:49 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:12:49 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:12:49 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:12:49 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:12:49 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:12:49 NET: Client login (conid:1357401, id:114, name:uid114)
03.11 22:12:49 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:12:49 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:12:49 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:12:49 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 22:12:49 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:12:49 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:12:49 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 22:12:49 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:12:52 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:12:52 TIME: user.ping 0.13 ms
03.11 22:12:52 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:12:53 TIMER: Check auto-disconnect...
03.11 22:12:53 NET: Client (name:uid107 conid:27153226 TCP) disconnected from vdl.0 (clients:2)
03.11 22:12:53 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:12:53 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:12:53 -<<-: core/server.query { list => {{ id => 9 }, { id => 10 }, { id => 11 }}, errorCode => ok, _type => core/server.query }
03.11 22:12:53 ->>-: vdl/cache.battle.infoRoom { roomId => 11, _type => vdl/cache.battle.infoRoom }
03.11 22:12:53 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:12:53 ->>-: vdl/cache.battle.finishRoom { roomId => 11, _type => vdl/cache.battle.finishRoom }
03.11 22:12:53 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:12:53 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:12:53 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:12:53 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:12:53 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:12:53 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:12:53 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:12:53 == NET: uid116 ret: battle.end { type => battle.end }
03.11 22:12:53 STATS: vdl.0 cache, locks:4
03.11 22:12:58 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:12:58 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:13:00 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:13:00 TIME: user.ping 0.12 ms
03.11 22:13:00 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:13:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:13:09 TIME: user.ping 0.15 ms
03.11 22:13:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:13:12 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:13:12 TIME: user.ping 0.14 ms
03.11 22:13:12 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:13:14 NET: Client (name:uid114 conid:1357401 TCP) disconnected from vdl.0 (clients:1)
03.11 22:13:14 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:13:14 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:13:14 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:13:14 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:13:14 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:13:14 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:13:14 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:13:14 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:13:14 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:13:14 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:13:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:13:14 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:13:14 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:13:35 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:13:35 TIME: user.ping 0.17 ms
03.11 22:13:35 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:13:53 TIMER: Check auto-disconnect...
03.11 22:13:53 STATS: vdl.0 cache, locks:2
03.11 22:14:02 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:14:02 TIME: user.ping 0.17 ms
03.11 22:14:02 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:14:28 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:14:28 TIME: user.ping 0.15 ms
03.11 22:14:28 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:14:53 TIMER: Check auto-disconnect...
03.11 22:14:53 STATS: vdl.0 cache, locks:2
03.11 22:14:55 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:14:55 TIME: user.ping 0.16 ms
03.11 22:14:55 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:15:22 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:15:22 TIME: user.ping 0.17 ms
03.11 22:15:22 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:15:42 NET: Client (conid:81091659) connected to vdl.0 (clients:2)
03.11 22:15:43 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:15:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:15:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:15:43 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:15:43 STATS: vdl.0 cache connection, 131 calls, total 0.217394351959229 sec spent, avg 1.66 ms
03.11 22:15:43 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:15:43 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:15:43 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:15:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:15:43 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:15:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:15:43 NET: Client login (conid:81091659, id:114, name:uid114)
03.11 22:15:43 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:15:43 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:15:43 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:15:43 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:15:43 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:15:43 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:15:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:15:46 TIME: user.ping 0.13 ms
03.11 22:15:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:15:48 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:15:48 TIME: user.ping 0.19 ms
03.11 22:15:48 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:15:48 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:15:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:15:53 TIMER: Check auto-disconnect...
03.11 22:15:53 STATS: vdl.0 cache, locks:4
03.11 22:15:58 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:15:58 TIME: user.ping 0.17 ms
03.11 22:15:58 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:16:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:16:09 TIME: user.ping 0.18 ms
03.11 22:16:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:16:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:16:14 TIME: user.ping 0.18 ms
03.11 22:16:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:16:17 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:16:17 TIME: user.ping 0.14 ms
03.11 22:16:17 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:16:19 NET: Client (name:uid114 conid:81091659 TCP) disconnected from vdl.0 (clients:1)
03.11 22:16:19 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:16:19 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:16:19 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:16:19 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:16:19 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:16:19 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:16:19 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:16:19 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:16:19 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:16:19 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:16:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:16:19 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:16:19 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:16:41 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:16:41 TIME: user.ping 0.15 ms
03.11 22:16:41 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:16:53 TIMER: Check auto-disconnect...
03.11 22:16:53 STATS: vdl.0 cache, locks:2
03.11 22:17:07 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:17:07 TIME: user.ping 0.17 ms
03.11 22:17:07 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:17:14 NET: Client (conid:58559062) connected to vdl.0 (clients:2)
03.11 22:17:15 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:17:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:17:15 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:17:15 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:17:15 STATS: vdl.0 cache connection, 142 calls, total 0.228870391845703 sec spent, avg 1.61 ms
03.11 22:17:15 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:17:15 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:17:15 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:17:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:17:15 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:17:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:17:15 NET: Client login (conid:58559062, id:114, name:uid114)
03.11 22:17:15 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:17:15 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:17:15 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:17:15 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:17:15 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:17:15 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:17:18 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:17:18 TIME: user.ping 0.18 ms
03.11 22:17:18 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:17:23 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:17:23 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:17:26 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:17:26 TIME: user.ping 0.13 ms
03.11 22:17:26 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:17:28 NET: Client (name:uid114 conid:58559062 TCP) disconnected from vdl.0 (clients:1)
03.11 22:17:28 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:17:28 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:17:28 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:17:28 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:17:28 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:17:28 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:17:28 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:17:28 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:17:28 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:17:28 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:17:28 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:17:28 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:17:28 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:17:34 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:17:34 TIME: user.ping 0.14 ms
03.11 22:17:34 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:17:53 TIMER: Check auto-disconnect...
03.11 22:17:53 STATS: vdl.0 cache, locks:2
03.11 22:18:00 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:18:00 TIME: user.ping 0.17 ms
03.11 22:18:00 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:18:04 NET: Client (conid:26337514) connected to vdl.0 (clients:2)
03.11 22:18:05 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:18:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:18:05 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:18:05 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:18:05 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:18:05 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:18:05 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:18:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:18:05 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:18:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:18:05 NET: Client login (conid:26337514, id:114, name:uid114)
03.11 22:18:05 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:18:05 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:18:05 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:18:05 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:18:05 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:18:05 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:18:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:18:09 TIME: user.ping 0.16 ms
03.11 22:18:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:18:13 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:18:13 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:18:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:18:16 TIME: user.ping 0.14 ms
03.11 22:18:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:18:24 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:18:24 TIME: user.ping 0.15 ms
03.11 22:18:24 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:18:27 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:18:27 TIME: user.ping 0.21 ms
03.11 22:18:27 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:18:27 NET: Client (name:uid114 conid:26337514 TCP) disconnected from vdl.0 (clients:1)
03.11 22:18:27 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:18:27 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:18:27 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:18:27 STATS: vdl.0 cache connection, 159 calls, total 0.246355295181274 sec spent, avg 1.55 ms
03.11 22:18:27 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:18:27 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:18:27 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:18:27 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:18:27 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:18:27 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:18:27 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:18:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:18:27 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:18:27 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:18:53 TIMER: Check auto-disconnect...
03.11 22:18:53 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:18:53 TIME: user.ping 0.14 ms
03.11 22:18:53 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:18:53 STATS: vdl.0 cache, locks:2
03.11 22:19:20 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:19:20 TIME: user.ping 0.15 ms
03.11 22:19:20 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:19:29 NET: Client (conid:77628653) connected to vdl.0 (clients:2)
03.11 22:19:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:19:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:19:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:19:30 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:19:30 STATS: vdl.0 cache connection, 164 calls, total 0.251064777374268 sec spent, avg 1.53 ms
03.11 22:19:30 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:19:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:19:30 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:19:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:19:30 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:19:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:19:30 NET: Client login (conid:77628653, id:114, name:uid114)
03.11 22:19:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:19:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:19:30 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:19:30 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:19:30 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:19:30 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:19:33 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:19:33 TIME: user.ping 0.16 ms
03.11 22:19:33 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:19:38 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:19:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:19:41 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:19:41 TIME: user.ping 0.15 ms
03.11 22:19:41 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:19:46 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:19:46 TIME: user.ping 0.15 ms
03.11 22:19:46 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:19:46 NET: Client (name:uid114 conid:77628653 TCP) disconnected from vdl.0 (clients:1)
03.11 22:19:46 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:19:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:19:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:19:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:19:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:19:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:19:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:19:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:19:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:19:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:19:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:19:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:19:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:19:53 TIMER: Check auto-disconnect...
03.11 22:19:53 STATS: vdl.0 cache, locks:2
03.11 22:20:02 NET: Client (conid:97102466) connected to vdl.0 (clients:2)
03.11 22:20:03 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:20:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:20:03 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:20:03 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:20:03 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:20:03 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:20:03 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:20:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:20:03 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:20:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:20:03 NET: Client login (conid:97102466, id:114, name:uid114)
03.11 22:20:03 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:20:03 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:20:03 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:20:03 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:20:03 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:20:03 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:20:07 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:20:07 TIME: user.ping 0.15 ms
03.11 22:20:07 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:20:08 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:20:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:20:13 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:20:13 TIME: user.ping 0.14 ms
03.11 22:20:13 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:20:14 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:20:14 TIME: user.ping 0.15 ms
03.11 22:20:14 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:20:15 NET: Client (name:uid114 conid:97102466 TCP) disconnected from vdl.0 (clients:1)
03.11 22:20:15 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:20:15 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:20:15 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:20:15 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:20:15 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:20:15 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:20:15 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:20:15 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:20:15 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:20:15 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:20:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:20:15 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:20:15 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:20:29 NET: Client (conid:74336304) connected to vdl.0 (clients:2)
03.11 22:20:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:20:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:20:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:20:30 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:20:30 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:20:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:20:30 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:20:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:20:30 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:20:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:20:30 STATS: vdl.0 cache connection, 189 calls, total 0.28390645980835 sec spent, avg 1.5 ms
03.11 22:20:30 NET: Client login (conid:74336304, id:114, name:uid114)
03.11 22:20:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:20:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:20:30 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:20:30 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:20:30 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:20:30 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:20:33 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:20:33 TIME: user.ping 0.17 ms
03.11 22:20:33 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:20:38 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:20:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:20:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:20:39 TIME: user.ping 0.14 ms
03.11 22:20:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:20:41 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:20:41 TIME: user.ping 0.12 ms
03.11 22:20:41 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:20:48 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:20:48 TIME: user.ping 0.17 ms
03.11 22:20:48 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:20:53 TIMER: Check auto-disconnect...
03.11 22:20:53 STATS: vdl.0 cache, locks:4
03.11 22:20:56 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:20:56 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:20:56 TIME: user.ping 0.14 ms
03.11 22:20:56 NET: Client (name:uid114 conid:74336304 TCP) disconnected from vdl.0 (clients:1)
03.11 22:20:56 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:20:56 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:20:56 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:20:56 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:20:56 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:20:56 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:20:56 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 22:20:56 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:20:56 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:20:56 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:20:56 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:20:56 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:20:56 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:21:06 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:06 TIME: user.ping 0.15 ms
03.11 22:21:06 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:21:11 NET: Client (conid:873131) connected to vdl.0 (clients:2)
03.11 22:21:12 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 22:21:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:21:12 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:21:12 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:21:12 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:21:12 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:21:12 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:21:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:21:12 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:21:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:21:12 NET: Client login (conid:873131, id:114, name:uid114)
03.11 22:21:12 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:21:12 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:21:12 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 22:21:12 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:21:12 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:21:12 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 22:21:15 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:15 TIME: user.ping 0.18 ms
03.11 22:21:15 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:21:18 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:21:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:21:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:23 TIME: user.ping 0.11 ms
03.11 22:21:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:21:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:31 TIME: user.ping 0.14 ms
03.11 22:21:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:21:32 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:32 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:21:32 TIME: user.ping 0.13 ms
03.11 22:21:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:38 TIME: user.ping 0.14 ms
03.11 22:21:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:21:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:46 TIME: user.ping 0.15 ms
03.11 22:21:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:21:53 TIMER: Check auto-disconnect...
03.11 22:21:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:53 TIME: user.ping 0.19 ms
03.11 22:21:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:21:53 STATS: vdl.0 cache, locks:4
03.11 22:21:58 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:21:58 TIME: user.ping 0.13 ms
03.11 22:21:58 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:01 TIME: user.ping 0.2 ms
03.11 22:22:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:08 TIME: user.ping 0.16 ms
03.11 22:22:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:16 TIME: user.ping 0.15 ms
03.11 22:22:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:23 TIME: user.ping 0.22 ms
03.11 22:22:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:25 TIME: user.ping 0.17 ms
03.11 22:22:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:31 TIME: user.ping 0.18 ms
03.11 22:22:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:38 TIME: user.ping 0.16 ms
03.11 22:22:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:46 TIME: user.ping 0.13 ms
03.11 22:22:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:51 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:51 TIME: user.ping 0.17 ms
03.11 22:22:51 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:53 TIMER: Check auto-disconnect...
03.11 22:22:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:22:53 TIME: user.ping 0.16 ms
03.11 22:22:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:22:53 STATS: vdl.0 cache, locks:4
03.11 22:23:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:01 TIME: user.ping 0.14 ms
03.11 22:23:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:08 TIME: user.ping 0.14 ms
03.11 22:23:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:16 TIME: user.ping 0.17 ms
03.11 22:23:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:18 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:18 TIME: user.ping 0.16 ms
03.11 22:23:18 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:23 TIME: user.ping 0.14 ms
03.11 22:23:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:31 TIME: user.ping 0.17 ms
03.11 22:23:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:38 TIME: user.ping 0.16 ms
03.11 22:23:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:44 TIME: user.ping 0.16 ms
03.11 22:23:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:46 TIME: user.ping 0.17 ms
03.11 22:23:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:53 TIMER: Check auto-disconnect...
03.11 22:23:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:23:53 TIME: user.ping 0.16 ms
03.11 22:23:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:23:53 STATS: vdl.0 cache, locks:4
03.11 22:24:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:01 TIME: user.ping 0.15 ms
03.11 22:24:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:08 TIME: user.ping 0.16 ms
03.11 22:24:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:11 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:11 TIME: user.ping 0.16 ms
03.11 22:24:11 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:16 TIME: user.ping 0.14 ms
03.11 22:24:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:23 TIME: user.ping 0.13 ms
03.11 22:24:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:31 TIME: user.ping 0.17 ms
03.11 22:24:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:37 TIME: user.ping 0.13 ms
03.11 22:24:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:38 TIME: user.ping 0.11 ms
03.11 22:24:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:46 TIME: user.ping 0.17 ms
03.11 22:24:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:24:53 TIMER: Check auto-disconnect...
03.11 22:24:53 STATS: vdl.0 cache, locks:4
03.11 22:24:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:24:53 TIME: user.ping 0.15 ms
03.11 22:24:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:01 TIME: user.ping 0.14 ms
03.11 22:25:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:04 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:04 TIME: user.ping 0.18 ms
03.11 22:25:04 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:08 TIME: user.ping 0.17 ms
03.11 22:25:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:16 TIME: user.ping 0.12 ms
03.11 22:25:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:23 TIME: user.ping 0.17 ms
03.11 22:25:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:30 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:30 TIME: user.ping 0.16 ms
03.11 22:25:30 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:31 TIME: user.ping 0.14 ms
03.11 22:25:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:38 TIME: user.ping 0.15 ms
03.11 22:25:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:46 TIME: user.ping 0.18 ms
03.11 22:25:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:53 TIMER: Check auto-disconnect...
03.11 22:25:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:53 TIME: user.ping 0.14 ms
03.11 22:25:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:25:53 STATS: vdl.0 cache, locks:4
03.11 22:25:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:25:57 TIME: user.ping 0.21 ms
03.11 22:25:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:01 TIME: user.ping 0.17 ms
03.11 22:26:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:08 TIME: user.ping 0.15 ms
03.11 22:26:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:16 TIME: user.ping 0.14 ms
03.11 22:26:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:23 TIME: user.ping 0.22 ms
03.11 22:26:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:23 TIME: user.ping 0.14 ms
03.11 22:26:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:31 TIME: user.ping 0.18 ms
03.11 22:26:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:38 TIME: user.ping 0.15 ms
03.11 22:26:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:46 TIME: user.ping 0.17 ms
03.11 22:26:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:50 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:50 TIME: user.ping 0.12 ms
03.11 22:26:50 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:53 TIMER: Check auto-disconnect...
03.11 22:26:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:26:53 TIME: user.ping 0.14 ms
03.11 22:26:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:26:53 STATS: vdl.0 cache, locks:4
03.11 22:27:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:01 TIME: user.ping 0.17 ms
03.11 22:27:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:08 TIME: user.ping 0.2 ms
03.11 22:27:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:16 TIME: user.ping 0.12 ms
03.11 22:27:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:16 TIME: user.ping 0.14 ms
03.11 22:27:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:24 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:24 TIME: user.ping 0.16 ms
03.11 22:27:24 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:31 TIME: user.ping 0.18 ms
03.11 22:27:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:39 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:39 TIME: user.ping 0.16 ms
03.11 22:27:39 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:43 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:43 TIME: user.ping 0.2 ms
03.11 22:27:43 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:46 TIME: user.ping 0.15 ms
03.11 22:27:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:27:53 TIMER: Check auto-disconnect...
03.11 22:27:53 STATS: vdl.0 cache, locks:4
03.11 22:27:54 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:27:54 TIME: user.ping 0.15 ms
03.11 22:27:54 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:01 TIME: user.ping 0.15 ms
03.11 22:28:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:09 TIME: user.ping 0.17 ms
03.11 22:28:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:09 TIME: user.ping 0.17 ms
03.11 22:28:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:16 TIME: user.ping 0.16 ms
03.11 22:28:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:23 TIME: user.ping 0.14 ms
03.11 22:28:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:31 TIME: user.ping 0.14 ms
03.11 22:28:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:35 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:35 TIME: user.ping 0.22 ms
03.11 22:28:35 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:38 TIME: user.ping 0.22 ms
03.11 22:28:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:46 TIME: user.ping 0.15 ms
03.11 22:28:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:53 TIMER: Check auto-disconnect...
03.11 22:28:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:28:53 TIME: user.ping 0.15 ms
03.11 22:28:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:28:53 STATS: vdl.0 cache, locks:4
03.11 22:29:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:01 TIME: user.ping 0.16 ms
03.11 22:29:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:02 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:02 TIME: user.ping 0.16 ms
03.11 22:29:02 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:09 TIME: user.ping 0.16 ms
03.11 22:29:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:16 TIME: user.ping 0.17 ms
03.11 22:29:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:24 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:24 TIME: user.ping 0.17 ms
03.11 22:29:24 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:28 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:28 TIME: user.ping 0.17 ms
03.11 22:29:28 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:31 TIME: user.ping 0.19 ms
03.11 22:29:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:39 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:39 TIME: user.ping 0.13 ms
03.11 22:29:39 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:46 TIME: user.ping 0.14 ms
03.11 22:29:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:53 TIMER: Check auto-disconnect...
03.11 22:29:53 STATS: vdl.0 cache, locks:4
03.11 22:29:54 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:54 TIME: user.ping 0.13 ms
03.11 22:29:54 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:29:54 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:29:54 TIME: user.ping 0.21 ms
03.11 22:29:54 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:01 TIME: user.ping 0.16 ms
03.11 22:30:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:09 TIME: user.ping 0.13 ms
03.11 22:30:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:16 TIME: user.ping 0.17 ms
03.11 22:30:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:21 TIME: user.ping 0.14 ms
03.11 22:30:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:24 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:24 TIME: user.ping 0.17 ms
03.11 22:30:24 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:31 TIME: user.ping 0.15 ms
03.11 22:30:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:38 TIME: user.ping 0.17 ms
03.11 22:30:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:42 NET: Client (name:uid116 conid:68681875 TCP) disconnected from vdl.0 (clients:1)
03.11 22:30:42 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
03.11 22:30:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
03.11 22:30:42 -<<-: core/server.query { list => {{ id => 10 }}, errorCode => ok, _type => core/server.query }
03.11 22:30:42 STATS: vdl.0 cache connection, 203 calls, total 0.299559831619263 sec spent, avg 1.48 ms
03.11 22:30:42 ->>-: vdl/cache.battle.infoRoom { roomId => 10, _type => vdl/cache.battle.infoRoom }
03.11 22:30:42 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:30:42 ->>-: vdl/cache.battle.finishRoom { roomId => 10, _type => vdl/cache.battle.finishRoom }
03.11 22:30:42 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:30:42 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 22:30:42 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 22:30:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
03.11 22:30:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:30:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 22:30:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:30:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 22:30:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:30:42 NET: Client (conid:23000970) connected to vdl.0 (clients:2)
03.11 22:30:43 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 22:30:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:30:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:30:43 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:30:43 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:30:43 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:30:43 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:30:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 22:30:43 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:30:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 22:30:43 NET: Client login (conid:23000970, id:107, name:uid107)
03.11 22:30:43 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:30:43 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:30:43 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 22:30:43 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 22:30:43 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 22:30:43 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 22:30:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:46 TIME: user.ping 0.18 ms
03.11 22:30:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:47 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:47 TIME: user.ping 0.21 ms
03.11 22:30:47 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:48 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:30:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:30:52 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:30:52 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:30:52 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:30:52 TIME: battle.find 0.43 ms
03.11 22:30:52 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:30:53 TIMER: Check auto-disconnect...
03.11 22:30:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:53 TIME: user.ping 0.16 ms
03.11 22:30:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:30:53 STATS: vdl.0 cache, locks:4
03.11 22:30:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:30:56 TIME: user.ping 0.12 ms
03.11 22:30:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:01 TIME: user.ping 0.16 ms
03.11 22:31:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:06 NET: Client (conid:59023305) connected to vdl.0 (clients:3)
03.11 22:31:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:07 TIME: user.ping 0.2 ms
03.11 22:31:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:09 TIME: user.ping 0.16 ms
03.11 22:31:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:09 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
03.11 22:31:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:31:09 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:31:09 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:31:09 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:31:09 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:31:09 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:31:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:31:09 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:31:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:31:09 NET: Client login (conid:59023305, id:116, name:uid116)
03.11 22:31:09 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:31:09 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:31:09 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
03.11 22:31:09 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 22:31:09 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 22:31:09 == NET: uid116 ret: user.join { name => uid116, type => user.join }
03.11 22:31:09 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 22:31:09 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 22:31:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:16 TIME: user.ping 0.14 ms
03.11 22:31:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:18 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:31:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:31:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:23 TIME: user.ping 0.2 ms
03.11 22:31:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:24 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:24 TIME: user.ping 0.17 ms
03.11 22:31:24 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:31 TIME: user.ping 0.17 ms
03.11 22:31:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:39 TIME: user.ping 0.14 ms
03.11 22:31:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:39 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:39 TIME: user.ping 0.18 ms
03.11 22:31:39 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:43 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:43 TIME: user.ping 0.16 ms
03.11 22:31:43 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:45 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:31:45 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:31:45 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 12, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:31:45 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 12, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:31:45 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:31:45 STATS: vdl.0 cache connection, 223 calls, total 0.355470895767212 sec spent, avg 1.59 ms
03.11 22:31:45 TIME: battle.find 33.21 ms
03.11 22:31:45 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:31:45 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 12, player => 1 }, type => battle.enemy }
03.11 22:31:45 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 12, player => 2 }, type => battle.enemy }
03.11 22:31:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:46 TIME: user.ping 0.17 ms
03.11 22:31:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:50 TIME: user.ping 0.13 ms
03.11 22:31:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:31:53 TIMER: Check auto-disconnect...
03.11 22:31:53 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 12 }
03.11 22:31:53 ->>-: vdl/cache.battle.infoRoom { roomId => 12, _type => vdl/cache.battle.infoRoom }
03.11 22:31:53 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:31:53 TIME: battle.sendtask 0.75 ms
03.11 22:31:53 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [1,5,4,1,4,0], errorCode => ok, _type => battle.task }
03.11 22:31:53 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [1,5,4,1,4,0], errorCode => ok }
03.11 22:31:53 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 22:31:53 STATS: vdl.0 cache, locks:6
03.11 22:31:54 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:31:54 TIME: user.ping 0.16 ms
03.11 22:31:54 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:01 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:01 TIME: user.ping 0.19 ms
03.11 22:32:01 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:01 TIME: user.ping 0.21 ms
03.11 22:32:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:08 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:08 TIME: user.ping 0.14 ms
03.11 22:32:08 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:09 TIME: user.ping 0.18 ms
03.11 22:32:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:12 TIME: user.ping 0.16 ms
03.11 22:32:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:16 TIME: user.ping 0.15 ms
03.11 22:32:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:24 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:24 TIME: user.ping 0.13 ms
03.11 22:32:24 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:31 TIME: user.ping 0.16 ms
03.11 22:32:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:33 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:33 TIME: user.ping 0.16 ms
03.11 22:32:33 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:39 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:39 TIME: user.ping 0.13 ms
03.11 22:32:39 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:46 TIME: user.ping 0.15 ms
03.11 22:32:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:48 TIME: user.ping 0.17 ms
03.11 22:32:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:53 TIMER: Check auto-disconnect...
03.11 22:32:53 STATS: vdl.0 cache, locks:6
03.11 22:32:54 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:54 TIME: user.ping 0.45 ms
03.11 22:32:54 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:57 TIME: user.ping 0.15 ms
03.11 22:32:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:32:59 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:32:59 TIME: user.ping 0.15 ms
03.11 22:32:59 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:01 TIME: user.ping 0.19 ms
03.11 22:33:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:09 TIME: user.ping 0.23 ms
03.11 22:33:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:10 TIME: user.ping 0.15 ms
03.11 22:33:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:16 TIME: user.ping 0.17 ms
03.11 22:33:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:22 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:22 TIME: user.ping 0.2 ms
03.11 22:33:22 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:23 TIME: user.ping 0.13 ms
03.11 22:33:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:31 TIME: user.ping 0.18 ms
03.11 22:33:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:38 TIME: user.ping 0.15 ms
03.11 22:33:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:46 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:46 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:46 TIME: user.ping 0.17 ms
03.11 22:33:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:46 TIME: user.ping 0.14 ms
03.11 22:33:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:33:52 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 12 }
03.11 22:33:52 ->>-: vdl/cache.battle.infoRoom { roomId => 12, _type => vdl/cache.battle.infoRoom }
03.11 22:33:52 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:33:52 STATS: vdl.0 cache connection, 225 calls, total 0.358409881591797 sec spent, avg 1.59 ms
03.11 22:33:52 TIME: battle.sendtask 3.06 ms
03.11 22:33:52 == NET: uid116 ret: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [0,0], battleId => 12 }
03.11 22:33:53 TIMER: Check auto-disconnect...
03.11 22:33:53 STATS: vdl.0 cache, locks:6
03.11 22:33:54 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:33:54 TIME: user.ping 0.13 ms
03.11 22:33:54 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:34:14 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 22:34:14 -<<-: server.login ok
03.11 22:34:14 DB: SELECT * FROM LocalizationStrings
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 TIMER: Starting timer...
03.11 22:34:14 TIMER: Timer running...
03.11 22:34:14 DB: SELECT * FROM GameVars
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
03.11 22:34:14 -<<-: core/quest.getDaily ok
03.11 22:34:14 DB: SELECT * FROM UserAttributeTypes
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM UserVariableTypes
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 22:34:14 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM ItemGroups
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM Bundles ORDER BY ID
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 SHOP: loading items...
03.11 22:34:14 ->>-: core/shop.getList { _type => core/shop.getList }
03.11 22:34:14 -<<-: core/shop.getList ok
03.11 22:34:14 SHOP: 0 items loaded (0 sec)
03.11 22:34:14 DB: SELECT * FROM EffectAttributeTypes
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM Effects
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 22:34:14 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 22:34:14 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:14 DB: SELECT * FROM Badges
03.11 22:34:14 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 22:34:14 -<<-: core/server.query ok
03.11 22:34:24 NET: Client (conid:37097439) connected to vdl.0 (clients:1)
03.11 22:34:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:34:25 TRACE: User not logon yet.
03.11 22:34:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:34:33 TRACE: User not logon yet.
03.11 22:34:33 NET: Client (conid:12271502) connected to vdl.0 (clients:2)
03.11 22:34:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:34:39 TRACE: User not logon yet.
03.11 22:34:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:34:40 TRACE: User not logon yet.
03.11 22:34:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:34:48 TRACE: User not logon yet.
03.11 22:34:52 NET: Client (conid:32504117) connected to vdl.0 (clients:3)
03.11 22:34:53 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 22:34:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:34:53 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:34:53 -<<-: core/server.query ok
03.11 22:34:53 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:34:53 -<<-: core/user.isOnlineID ok
03.11 22:34:53 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:34:53 -<<-: core/cache.get ok
03.11 22:34:53 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:34:53 -<<-: core/cache.get ok
03.11 22:34:53 NET: Client login (conid:32504117, id:107, name:uid107)
03.11 22:34:53 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:34:53 -<<-: core/user.loginPost null
03.11 22:34:53 == NET: null ret: user.join { name => uid107, type => user.join }
03.11 22:34:53 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 22:34:53 == NET: null ret: user.join { name => uid107, type => user.join }
03.11 22:34:53 == NET: uid107 ret: user.join { name => null, type => user.join }
03.11 22:34:53 == NET: uid107 ret: user.join { name => null, type => user.join }
03.11 22:34:53 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 22:34:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:34:56 TRACE: User not logon yet.
03.11 22:34:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:34:57 TIME: user.ping 0.17 ms
03.11 22:34:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:34:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:34:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:35:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:03 TRACE: User not logon yet.
03.11 22:35:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:03 TRACE: User not logon yet.
03.11 22:35:04 ++ NET: null req: battle.end { type => leaveGame, typeBattle => random, tournamentId => 0, messageType => battle.end, battleId => 12 }
03.11 22:35:04 TRACE: User not logon yet.
03.11 22:35:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:04 TIME: user.ping 0.17 ms
03.11 22:35:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:35:09 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:35:09 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:35:09 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:35:09 TIME: battle.find 0.66 ms
03.11 22:35:09 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:35:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:11 TRACE: User not logon yet.
03.11 22:35:14 TIMER: Check auto-disconnect...
03.11 22:35:14 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:14 TIME: user.ping 0.17 ms
03.11 22:35:14 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:35:14 STATS: vdl.0 cache, locks:2
03.11 22:35:15 ++ NET: null req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:35:15 TRACE: User not logon yet.
03.11 22:35:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:18 TRACE: User not logon yet.
03.11 22:35:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:25 TIME: user.ping 0.18 ms
03.11 22:35:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:35:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:26 TRACE: User not logon yet.
03.11 22:35:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:33 TRACE: User not logon yet.
03.11 22:35:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:34 TRACE: User not logon yet.
03.11 22:35:37 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:37 TIME: user.ping 0.19 ms
03.11 22:35:37 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:35:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:40 TRACE: User not logon yet.
03.11 22:35:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:48 TRACE: User not logon yet.
03.11 22:35:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:48 TIME: user.ping 0.16 ms
03.11 22:35:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:35:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:35:55 TRACE: User not logon yet.
03.11 22:36:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:00 TIME: user.ping 0.18 ms
03.11 22:36:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:36:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:03 TRACE: User not logon yet.
03.11 22:36:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:10 TRACE: User not logon yet.
03.11 22:36:14 TIMER: Check auto-disconnect...
03.11 22:36:14 STATS: vdl.0 cache, locks:2
03.11 22:36:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:16 TRACE: User not logon yet.
03.11 22:36:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:18 TRACE: User not logon yet.
03.11 22:36:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:25 TRACE: User not logon yet.
03.11 22:36:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:33 TRACE: User not logon yet.
03.11 22:36:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:40 TRACE: User not logon yet.
03.11 22:36:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:48 TRACE: User not logon yet.
03.11 22:36:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:55 TRACE: User not logon yet.
03.11 22:36:59 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:36:59 TRACE: User not logon yet.
03.11 22:37:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:37:03 TRACE: User not logon yet.
03.11 22:37:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:37:10 TRACE: User not logon yet.
03.11 22:37:14 TIMER: Check auto-disconnect...
03.11 22:37:14 STATS: vdl.0 cache, locks:2
03.11 22:37:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:37:18 TRACE: User not logon yet.
03.11 22:37:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:37:25 TRACE: User not logon yet.
03.11 22:37:31 NET: Client (name:null conid:12271502 TCP) disconnected from vdl.0 (clients:2)
03.11 22:37:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:37:33 TRACE: User not logon yet.
03.11 22:37:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:37:41 TRACE: User not logon yet.
03.11 22:37:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:37:48 TRACE: User not logon yet.
03.11 22:37:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:37:56 TRACE: User not logon yet.
03.11 22:37:57 NET: Client (conid:45352665) connected to vdl.0 (clients:3)
03.11 22:38:00 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
03.11 22:38:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:38:00 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:38:00 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:38:00 STATS: vdl.0 cache connection, 28 calls, total 0.0589828491210938 sec spent, avg 2.11 ms
03.11 22:38:00 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:38:00 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:38:00 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:38:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:38:00 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:38:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:38:00 NET: Client login (conid:45352665, id:116, name:uid116)
03.11 22:38:00 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:38:00 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:38:00 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 22:38:00 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
03.11 22:38:00 == NET: null ret: user.join { name => uid116, type => user.join }
03.11 22:38:00 == NET: uid116 ret: user.join { name => null, type => user.join }
03.11 22:38:00 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 22:38:00 == NET: uid116 ret: user.join { name => uid116, type => user.join }
03.11 22:38:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:04 TRACE: User not logon yet.
03.11 22:38:09 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:38:09 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:38:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:11 TRACE: User not logon yet.
03.11 22:38:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:14 TIME: user.ping 0.18 ms
03.11 22:38:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:38:14 TIMER: Check auto-disconnect...
03.11 22:38:14 STATS: vdl.0 cache, locks:4
03.11 22:38:15 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:38:15 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:38:15 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 13, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:38:15 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 13, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:38:15 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:38:15 TIME: battle.find 41.69 ms
03.11 22:38:15 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:38:15 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 13, player => 1 }, type => battle.enemy }
03.11 22:38:15 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 13, player => 2 }, type => battle.enemy }
03.11 22:38:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:18 TRACE: User not logon yet.
03.11 22:38:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:26 TRACE: User not logon yet.
03.11 22:38:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:29 TIME: user.ping 0.3 ms
03.11 22:38:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:38:30 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 13 }
03.11 22:38:30 ->>-: vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
03.11 22:38:30 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:38:30 TIME: battle.sendtask 0.77 ms
03.11 22:38:30 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.task, dices => [0,3,4,0,2,5], errorCode => ok }
03.11 22:38:30 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 22:38:30 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [0,3,4,0,2,5], errorCode => ok }
03.11 22:38:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:33 TRACE: User not logon yet.
03.11 22:38:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:39 TIME: user.ping 0.17 ms
03.11 22:38:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:38:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:40 TIME: user.ping 0.16 ms
03.11 22:38:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:38:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:41 TRACE: User not logon yet.
03.11 22:38:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:48 TRACE: User not logon yet.
03.11 22:38:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:52 TIME: user.ping 0.17 ms
03.11 22:38:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:38:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:38:56 TRACE: User not logon yet.
03.11 22:39:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:03 TRACE: User not logon yet.
03.11 22:39:04 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:04 TIME: user.ping 0.21 ms
03.11 22:39:04 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:39:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:11 TRACE: User not logon yet.
03.11 22:39:14 TIMER: Check auto-disconnect...
03.11 22:39:14 STATS: vdl.0 cache, locks:4
03.11 22:39:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:18 TRACE: User not logon yet.
03.11 22:39:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:26 TRACE: User not logon yet.
03.11 22:39:28 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:28 TIME: user.ping 0.14 ms
03.11 22:39:28 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:39:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:34 TRACE: User not logon yet.
03.11 22:39:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:41 TRACE: User not logon yet.
03.11 22:39:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:44 TIME: user.ping 0.15 ms
03.11 22:39:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:39:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:49 TRACE: User not logon yet.
03.11 22:39:53 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:53 TIME: user.ping 0.19 ms
03.11 22:39:53 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:39:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:39:56 TIME: user.ping 0.15 ms
03.11 22:39:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:39:56 TRACE: User not logon yet.
03.11 22:40:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:04 TRACE: User not logon yet.
03.11 22:40:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:07 TIME: user.ping 0.14 ms
03.11 22:40:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:40:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:11 TRACE: User not logon yet.
03.11 22:40:14 TIMER: Check auto-disconnect...
03.11 22:40:14 STATS: vdl.0 cache, locks:4
03.11 22:40:18 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:18 TIME: user.ping 0.2 ms
03.11 22:40:18 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:40:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:18 TRACE: User not logon yet.
03.11 22:40:20 NET: Client (name:uid107 conid:32504117 TCP) disconnected from vdl.0 (clients:2)
03.11 22:40:20 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:40:20 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:40:20 -<<-: core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 13 }}, errorCode => ok, _type => core/server.query }
03.11 22:40:20 STATS: vdl.0 cache connection, 36 calls, total 0.111967325210571 sec spent, avg 3.11 ms
03.11 22:40:20 ->>-: vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
03.11 22:40:20 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:40:20 ->>-: vdl/cache.battle.finishRoom { roomId => 13, _type => vdl/cache.battle.finishRoom }
03.11 22:40:20 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:40:20 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:40:20 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:40:20 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:40:20 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:40:20 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:40:20 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:40:20 == NET: uid116 ret: battle.end { type => battle.end }
03.11 22:40:22 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 13 }
03.11 22:40:22 ->>-: vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
03.11 22:40:22 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:40:22 TIME: battle.sendtask 0.96 ms
03.11 22:40:22 == NET: uid116 ret: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [0,0], battleId => 13 }
03.11 22:40:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:26 TRACE: User not logon yet.
03.11 22:40:26 NET: Client (conid:59740448) connected to vdl.0 (clients:3)
03.11 22:40:27 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 22:40:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:40:27 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:40:27 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:40:27 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:40:27 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:40:27 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:40:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 107 } }
03.11 22:40:27 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:40:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 107 } }
03.11 22:40:27 NET: Client login (conid:59740448, id:107, name:uid107)
03.11 22:40:27 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:40:27 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:40:27 == NET: null ret: user.join { name => uid107, type => user.join }
03.11 22:40:27 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 22:40:27 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 22:40:27 == NET: uid107 ret: user.join { name => null, type => user.join }
03.11 22:40:27 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 22:40:27 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 22:40:31 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:31 TIME: user.ping 0.17 ms
03.11 22:40:31 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:40:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:34 TRACE: User not logon yet.
03.11 22:40:34 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:40:34 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 22:40:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:39 TIME: user.ping 0.14 ms
03.11 22:40:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:40:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:41 TRACE: User not logon yet.
03.11 22:40:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:44 TIME: user.ping 0.2 ms
03.11 22:40:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:40:47 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:47 TIME: user.ping 0.14 ms
03.11 22:40:47 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:40:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:49 TRACE: User not logon yet.
03.11 22:40:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:55 TIME: user.ping 0.18 ms
03.11 22:40:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:40:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:40:56 TRACE: User not logon yet.
03.11 22:41:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:03 TIME: user.ping 0.19 ms
03.11 22:41:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:41:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:04 TRACE: User not logon yet.
03.11 22:41:07 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:07 TIME: user.ping 0.14 ms
03.11 22:41:07 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:41:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:11 TIME: user.ping 0.15 ms
03.11 22:41:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:41:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:11 TRACE: User not logon yet.
03.11 22:41:14 TIMER: Check auto-disconnect...
03.11 22:41:14 STATS: vdl.0 cache, locks:4
03.11 22:41:19 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:19 TRACE: User not logon yet.
03.11 22:41:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:19 TIME: user.ping 0.18 ms
03.11 22:41:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:41:23 NET: Client (name:uid116 conid:45352665 TCP) disconnected from vdl.0 (clients:2)
03.11 22:41:23 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
03.11 22:41:23 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
03.11 22:41:23 -<<-: core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }}, errorCode => ok, _type => core/server.query }
03.11 22:41:23 STATS: vdl.0 cache connection, 49 calls, total 0.124516487121582 sec spent, avg 2.54 ms
03.11 22:41:23 ->>-: vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
03.11 22:41:23 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:41:23 ->>-: vdl/cache.battle.finishRoom { roomId => 13, _type => vdl/cache.battle.finishRoom }
03.11 22:41:23 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:41:23 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
03.11 22:41:23 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:41:23 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 22:41:23 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:41:23 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 22:41:23 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:41:23 == NET: uid107 ret: battle.end { type => battle.end }
03.11 22:41:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:27 TRACE: User not logon yet.
03.11 22:41:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:27 TIME: user.ping 0.19 ms
03.11 22:41:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:41:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:34 TRACE: User not logon yet.
03.11 22:41:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:35 TIME: user.ping 0.16 ms
03.11 22:41:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:41:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:41 TRACE: User not logon yet.
03.11 22:41:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:44 TIME: user.ping 0.16 ms
03.11 22:41:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:41:47 NET: Client (conid:35663141) connected to vdl.0 (clients:3)
03.11 22:41:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:49 TRACE: User not logon yet.
03.11 22:41:51 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
03.11 22:41:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:41:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:41:51 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:41:51 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:41:51 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:41:51 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:41:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:41:51 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:41:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:41:51 NET: Client login (conid:35663141, id:116, name:uid116)
03.11 22:41:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:41:51 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:41:51 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
03.11 22:41:51 == NET: null ret: user.join { name => uid116, type => user.join }
03.11 22:41:51 == NET: uid116 ret: user.join { name => null, type => user.join }
03.11 22:41:51 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 22:41:51 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 22:41:51 == NET: uid116 ret: user.join { name => uid116, type => user.join }
03.11 22:41:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:52 TIME: user.ping 0.22 ms
03.11 22:41:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:41:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:41:56 TRACE: User not logon yet.
03.11 22:41:57 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:41:57 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:41:57 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:41:57 TIME: battle.find 0.56 ms
03.11 22:41:57 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:41:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:41:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:42:01 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:01 TIME: user.ping 0.22 ms
03.11 22:42:01 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:42:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:03 TRACE: User not logon yet.
03.11 22:42:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:42:03 TIME: user.ping 0.15 ms
03.11 22:42:05 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:42:05 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:42:05 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 14, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:42:05 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 14, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:42:05 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:42:05 TIME: battle.find 33.73 ms
03.11 22:42:05 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:42:05 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 14, player => 1 }, type => battle.enemy }
03.11 22:42:05 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 14, player => 2 }, type => battle.enemy }
03.11 22:42:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:11 TRACE: User not logon yet.
03.11 22:42:14 TIMER: Check auto-disconnect...
03.11 22:42:14 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:14 TIME: user.ping 0.21 ms
03.11 22:42:14 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:42:14 STATS: vdl.0 cache, locks:4
03.11 22:42:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:18 TRACE: User not logon yet.
03.11 22:42:20 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 14 }
03.11 22:42:20 ->>-: vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
03.11 22:42:20 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:42:20 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [3,2,3,1,4,3], errorCode => ok, _type => battle.task }
03.11 22:42:20 TIME: battle.sendtask 4.61 ms
03.11 22:42:20 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 22:42:20 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [3,2,3,1,4,3], errorCode => ok }
03.11 22:42:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:26 TRACE: User not logon yet.
03.11 22:42:26 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:26 TIME: user.ping 0.16 ms
03.11 22:42:26 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:42:29 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:29 TIME: user.ping 0.18 ms
03.11 22:42:29 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:42:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:33 TRACE: User not logon yet.
03.11 22:42:38 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:38 TIME: user.ping 0.25 ms
03.11 22:42:38 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:42:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:40 TRACE: User not logon yet.
03.11 22:42:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:48 TRACE: User not logon yet.
03.11 22:42:53 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:53 TIME: user.ping 0.14 ms
03.11 22:42:53 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:42:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:42:55 TRACE: User not logon yet.
03.11 22:43:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:02 TRACE: User not logon yet.
03.11 22:43:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:09 TIME: user.ping 0.15 ms
03.11 22:43:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:43:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:10 TRACE: User not logon yet.
03.11 22:43:14 TIMER: Check auto-disconnect...
03.11 22:43:14 STATS: vdl.0 cache, locks:4
03.11 22:43:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:17 TRACE: User not logon yet.
03.11 22:43:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:17 TIME: user.ping 0.15 ms
03.11 22:43:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:43:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:21 TIME: user.ping 0.18 ms
03.11 22:43:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:43:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:25 TRACE: User not logon yet.
03.11 22:43:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:32 TRACE: User not logon yet.
03.11 22:43:33 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:33 TIME: user.ping 0.16 ms
03.11 22:43:33 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:43:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:40 TRACE: User not logon yet.
03.11 22:43:42 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:42 TIME: user.ping 0.17 ms
03.11 22:43:42 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:43:44 NET: Client (name:uid107 conid:59740448 TCP) disconnected from vdl.0 (clients:2)
03.11 22:43:44 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:43:44 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:43:44 -<<-: core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 14 }}, errorCode => ok, _type => core/server.query }
03.11 22:43:44 STATS: vdl.0 cache connection, 64 calls, total 0.171060800552368 sec spent, avg 2.67 ms
03.11 22:43:44 ->>-: vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
03.11 22:43:44 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:43:44 ->>-: vdl/cache.battle.finishRoom { roomId => 14, _type => vdl/cache.battle.finishRoom }
03.11 22:43:44 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:43:44 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:43:44 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 22:43:44 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:43:44 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:43:44 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:43:44 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:43:44 == NET: uid116 ret: battle.end { type => battle.end }
03.11 22:43:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:47 TRACE: User not logon yet.
03.11 22:43:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:43:55 TRACE: User not logon yet.
03.11 22:44:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:02 TRACE: User not logon yet.
03.11 22:44:07 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:07 TIME: user.ping 0.19 ms
03.11 22:44:07 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:44:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:09 TRACE: User not logon yet.
03.11 22:44:12 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 14 }
03.11 22:44:12 ->>-: vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
03.11 22:44:12 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:44:12 TIME: battle.sendtask 1.98 ms
03.11 22:44:12 == NET: uid116 ret: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [0,0], battleId => 14 }
03.11 22:44:14 TIMER: Check auto-disconnect...
03.11 22:44:14 STATS: vdl.0 cache, locks:2
03.11 22:44:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:17 TRACE: User not logon yet.
03.11 22:44:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:24 TRACE: User not logon yet.
03.11 22:44:31 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:31 TIME: user.ping 0.25 ms
03.11 22:44:31 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:44:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:32 TRACE: User not logon yet.
03.11 22:44:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:39 TRACE: User not logon yet.
03.11 22:44:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:46 TRACE: User not logon yet.
03.11 22:44:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:54 TRACE: User not logon yet.
03.11 22:44:55 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:44:55 TIME: user.ping 0.17 ms
03.11 22:44:55 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:45:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:01 TRACE: User not logon yet.
03.11 22:45:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:09 TRACE: User not logon yet.
03.11 22:45:14 TIMER: Check auto-disconnect...
03.11 22:45:14 STATS: vdl.0 cache, locks:2
03.11 22:45:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:16 TRACE: User not logon yet.
03.11 22:45:19 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:19 TIME: user.ping 0.13 ms
03.11 22:45:19 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:45:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:24 TRACE: User not logon yet.
03.11 22:45:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:31 TRACE: User not logon yet.
03.11 22:45:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:39 TRACE: User not logon yet.
03.11 22:45:43 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:43 TIME: user.ping 0.09 ms
03.11 22:45:43 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:45:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:46 TRACE: User not logon yet.
03.11 22:45:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:45:54 TRACE: User not logon yet.
03.11 22:46:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:01 TRACE: User not logon yet.
03.11 22:46:06 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:06 TIME: user.ping 0.22 ms
03.11 22:46:06 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:46:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:09 TRACE: User not logon yet.
03.11 22:46:14 TIMER: Check auto-disconnect...
03.11 22:46:14 STATS: vdl.0 cache, locks:2
03.11 22:46:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:16 TRACE: User not logon yet.
03.11 22:46:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:24 TRACE: User not logon yet.
03.11 22:46:30 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:30 TIME: user.ping 0.19 ms
03.11 22:46:30 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:46:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:31 TRACE: User not logon yet.
03.11 22:46:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:39 TRACE: User not logon yet.
03.11 22:46:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:46 TRACE: User not logon yet.
03.11 22:46:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:53 TRACE: User not logon yet.
03.11 22:46:54 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:46:54 TIME: user.ping 0.26 ms
03.11 22:46:54 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:47:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:01 TRACE: User not logon yet.
03.11 22:47:08 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:08 TRACE: User not logon yet.
03.11 22:47:14 TIMER: Check auto-disconnect...
03.11 22:47:14 STATS: vdl.0 cache, locks:2
03.11 22:47:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:16 TRACE: User not logon yet.
03.11 22:47:18 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:18 TIME: user.ping 0.09 ms
03.11 22:47:18 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:47:22 NET: Client (name:uid116 conid:35663141 TCP) disconnected from vdl.0 (clients:1)
03.11 22:47:22 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
03.11 22:47:22 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
03.11 22:47:22 -<<-: core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }}, errorCode => ok, _type => core/server.query }
03.11 22:47:22 STATS: vdl.0 cache connection, 71 calls, total 0.177067518234253 sec spent, avg 2.49 ms
03.11 22:47:22 ->>-: vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
03.11 22:47:22 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:47:22 ->>-: vdl/cache.battle.finishRoom { roomId => 14, _type => vdl/cache.battle.finishRoom }
03.11 22:47:22 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:47:22 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 22:47:22 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 22:47:22 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
03.11 22:47:22 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:47:22 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 22:47:22 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:47:22 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 22:47:22 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:47:23 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:23 TRACE: User not logon yet.
03.11 22:47:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:31 TRACE: User not logon yet.
03.11 22:47:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:38 TRACE: User not logon yet.
03.11 22:47:42 NET: Client (conid:25232888) connected to vdl.0 (clients:2)
03.11 22:47:43 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 22:47:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:47:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:47:43 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:47:43 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:47:43 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:47:43 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:47:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 22:47:43 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:47:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 22:47:43 NET: Client login (conid:25232888, id:107, name:uid107)
03.11 22:47:43 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:47:43 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:47:43 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 22:47:43 == NET: null ret: user.join { name => uid107, type => user.join }
03.11 22:47:43 == NET: uid107 ret: user.join { name => null, type => user.join }
03.11 22:47:43 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 22:47:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:45 TRACE: User not logon yet.
03.11 22:47:47 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:47 TIME: user.ping 0.17 ms
03.11 22:47:47 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:47:48 NET: Client (conid:99044587) connected to vdl.0 (clients:3)
03.11 22:47:49 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:47:49 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:47:52 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
03.11 22:47:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:47:52 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:47:52 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:47:52 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:47:52 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:47:52 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:47:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:47:52 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:47:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:47:52 NET: Client login (conid:99044587, id:116, name:uid116)
03.11 22:47:52 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:47:52 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:47:52 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
03.11 22:47:52 == NET: null ret: user.join { name => uid116, type => user.join }
03.11 22:47:52 == NET: uid116 ret: user.join { name => null, type => user.join }
03.11 22:47:52 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 22:47:52 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 22:47:52 == NET: uid116 ret: user.join { name => uid116, type => user.join }
03.11 22:47:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:53 TRACE: User not logon yet.
03.11 22:47:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:47:55 TIME: user.ping 0.19 ms
03.11 22:47:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:47:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:47:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:48:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:00 TRACE: User not logon yet.
03.11 22:48:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:03 TIME: user.ping 0.11 ms
03.11 22:48:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:48:05 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:05 TIME: user.ping 0.1 ms
03.11 22:48:05 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:48:08 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:08 TRACE: User not logon yet.
03.11 22:48:14 TIMER: Check auto-disconnect...
03.11 22:48:14 STATS: vdl.0 cache, locks:4
03.11 22:48:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:15 TRACE: User not logon yet.
03.11 22:48:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:22 TRACE: User not logon yet.
03.11 22:48:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:25 TIME: user.ping 0.1 ms
03.11 22:48:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:48:30 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:30 TRACE: User not logon yet.
03.11 22:48:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:37 TRACE: User not logon yet.
03.11 22:48:38 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:48:38 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:48:38 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:48:38 STATS: vdl.0 cache connection, 90 calls, total 0.194707870483398 sec spent, avg 2.16 ms
03.11 22:48:38 TIME: battle.find 0.36 ms
03.11 22:48:38 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:48:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:41 TIME: user.ping 0.18 ms
03.11 22:48:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:48:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:45 TRACE: User not logon yet.
03.11 22:48:48 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:48:48 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:48:48 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 15, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:48:48 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 15, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:48:48 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:48:48 TIME: battle.find 28.49 ms
03.11 22:48:48 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:48:48 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 15, player => 1 }, type => battle.enemy }
03.11 22:48:48 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 15, player => 2 }, type => battle.enemy }
03.11 22:48:50 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:50 TIME: user.ping 0.22 ms
03.11 22:48:50 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:48:51 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:51 TIME: user.ping 0.18 ms
03.11 22:48:51 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:48:52 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:52 TRACE: User not logon yet.
03.11 22:48:56 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 15 }
03.11 22:48:56 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:48:56 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:48:56 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [3,2,3,5,3,0], errorCode => ok, _type => battle.task }
03.11 22:48:56 TIME: battle.sendtask 0.72 ms
03.11 22:48:56 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [3,2,3,5,3,0], errorCode => ok }
03.11 22:48:56 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 22:48:59 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:48:59 TRACE: User not logon yet.
03.11 22:49:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:03 TIME: user.ping 0.16 ms
03.11 22:49:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:49:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:07 TRACE: User not logon yet.
03.11 22:49:14 TIMER: Check auto-disconnect...
03.11 22:49:14 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:14 TRACE: User not logon yet.
03.11 22:49:14 STATS: vdl.0 cache, locks:4
03.11 22:49:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:14 TIME: user.ping 0.1 ms
03.11 22:49:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:49:15 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 15 }
03.11 22:49:15 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:49:15 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:49:15 TIME: battle.sendtask 2.03 ms
03.11 22:49:15 == NET: uid107 ret: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [8,3], battleId => 15 }
03.11 22:49:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:16 TIME: user.ping 0.17 ms
03.11 22:49:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:49:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:22 TRACE: User not logon yet.
03.11 22:49:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:28 TIME: user.ping 0.12 ms
03.11 22:49:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:49:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:29 TRACE: User not logon yet.
03.11 22:49:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:36 TRACE: User not logon yet.
03.11 22:49:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:39 TIME: user.ping 0.16 ms
03.11 22:49:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:49:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:40 TIME: user.ping 0.21 ms
03.11 22:49:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:49:44 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:44 TRACE: User not logon yet.
03.11 22:49:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:51 TRACE: User not logon yet.
03.11 22:49:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:52 TIME: user.ping 0.21 ms
03.11 22:49:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:49:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:49:58 TRACE: User not logon yet.
03.11 22:50:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:03 TIME: user.ping 0.2 ms
03.11 22:50:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:50:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:04 TIME: user.ping 0.1 ms
03.11 22:50:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:50:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:06 TRACE: User not logon yet.
03.11 22:50:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:13 TRACE: User not logon yet.
03.11 22:50:14 TIMER: Check auto-disconnect...
03.11 22:50:14 STATS: vdl.0 cache, locks:4
03.11 22:50:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:16 TIME: user.ping 0.12 ms
03.11 22:50:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:50:21 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:21 TRACE: User not logon yet.
03.11 22:50:28 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:28 TIME: user.ping 0.17 ms
03.11 22:50:28 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:50:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:28 TIME: user.ping 0.16 ms
03.11 22:50:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:50:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:28 TRACE: User not logon yet.
03.11 22:50:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:36 TRACE: User not logon yet.
03.11 22:50:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:40 TIME: user.ping 0.12 ms
03.11 22:50:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:50:43 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:43 TRACE: User not logon yet.
03.11 22:50:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:51 TRACE: User not logon yet.
03.11 22:50:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:52 TIME: user.ping 0.15 ms
03.11 22:50:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:50:52 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:52 TIME: user.ping 0.11 ms
03.11 22:50:52 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:50:54 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 15 }
03.11 22:50:54 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:50:54 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:50:54 STATS: vdl.0 cache connection, 94 calls, total 0.227035045623779 sec spent, avg 2.42 ms
03.11 22:50:54 TIME: battle.sendtask 2.85 ms
03.11 22:50:54 == NET: uid107 ret: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [0,0], battleId => 15 }
03.11 22:50:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:50:58 TRACE: User not logon yet.
03.11 22:51:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:04 TIME: user.ping 0.2 ms
03.11 22:51:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:51:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:06 TRACE: User not logon yet.
03.11 22:51:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:13 TRACE: User not logon yet.
03.11 22:51:14 TIMER: Check auto-disconnect...
03.11 22:51:14 STATS: vdl.0 cache, locks:4
03.11 22:51:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:16 TIME: user.ping 0.23 ms
03.11 22:51:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:51:18 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:18 TIME: user.ping 0.1 ms
03.11 22:51:18 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:51:21 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:21 TRACE: User not logon yet.
03.11 22:51:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:28 TRACE: User not logon yet.
03.11 22:51:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:51:28 TIME: user.ping 0.13 ms
03.11 22:51:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:35 TRACE: User not logon yet.
03.11 22:51:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:40 TIME: user.ping 0.18 ms
03.11 22:51:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:51:43 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:43 TRACE: User not logon yet.
03.11 22:51:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:44 TIME: user.ping 0.2 ms
03.11 22:51:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:51:50 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:50 TRACE: User not logon yet.
03.11 22:51:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:52 TIME: user.ping 0.1 ms
03.11 22:51:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:51:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:51:58 TRACE: User not logon yet.
03.11 22:52:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:52:04 TIME: user.ping 0.18 ms
03.11 22:52:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:05 TRACE: User not logon yet.
03.11 22:52:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:09 TIME: user.ping 0.09 ms
03.11 22:52:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:52:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:13 TRACE: User not logon yet.
03.11 22:52:14 TIMER: Check auto-disconnect...
03.11 22:52:14 STATS: vdl.0 cache, locks:4
03.11 22:52:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:16 TIME: user.ping 0.19 ms
03.11 22:52:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:52:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:20 TRACE: User not logon yet.
03.11 22:52:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:27 TRACE: User not logon yet.
03.11 22:52:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:28 TIME: user.ping 0.13 ms
03.11 22:52:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:52:34 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:34 TIME: user.ping 0.15 ms
03.11 22:52:34 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:52:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:35 TRACE: User not logon yet.
03.11 22:52:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:40 TIME: user.ping 0.1 ms
03.11 22:52:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:52:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:42 TRACE: User not logon yet.
03.11 22:52:50 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:50 TRACE: User not logon yet.
03.11 22:52:51 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:51 TIME: user.ping 0.09 ms
03.11 22:52:51 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:52:57 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:57 TRACE: User not logon yet.
03.11 22:52:58 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:52:58 TIME: user.ping 0.1 ms
03.11 22:52:58 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:53:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:03 TIME: user.ping 0.07 ms
03.11 22:53:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:53:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:04 TRACE: User not logon yet.
03.11 22:53:12 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:12 TRACE: User not logon yet.
03.11 22:53:14 TIMER: Check auto-disconnect...
03.11 22:53:14 STATS: vdl.0 cache, locks:4
03.11 22:53:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:15 TIME: user.ping 0.21 ms
03.11 22:53:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:53:19 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:19 TRACE: User not logon yet.
03.11 22:53:24 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:24 TIME: user.ping 0.24 ms
03.11 22:53:24 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:53:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:27 TRACE: User not logon yet.
03.11 22:53:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:27 TIME: user.ping 0.27 ms
03.11 22:53:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:53:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:34 TRACE: User not logon yet.
03.11 22:53:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:39 TIME: user.ping 0.2 ms
03.11 22:53:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:53:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:41 TRACE: User not logon yet.
03.11 22:53:48 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:48 TIME: user.ping 0.17 ms
03.11 22:53:48 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:53:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:49 TRACE: User not logon yet.
03.11 22:53:51 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:51 TIME: user.ping 0.11 ms
03.11 22:53:51 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:53:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:53:56 TRACE: User not logon yet.
03.11 22:54:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:03 TIME: user.ping 0.14 ms
03.11 22:54:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:54:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:03 TRACE: User not logon yet.
03.11 22:54:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:11 TRACE: User not logon yet.
03.11 22:54:13 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:13 TIME: user.ping 0.1 ms
03.11 22:54:13 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:54:14 TIMER: Check auto-disconnect...
03.11 22:54:14 STATS: vdl.0 cache, locks:4
03.11 22:54:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:15 TIME: user.ping 0.08 ms
03.11 22:54:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:54:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:18 TRACE: User not logon yet.
03.11 22:54:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:26 TRACE: User not logon yet.
03.11 22:54:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:27 TIME: user.ping 0.15 ms
03.11 22:54:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:54:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:33 TRACE: User not logon yet.
03.11 22:54:38 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:38 TIME: user.ping 0.11 ms
03.11 22:54:38 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:54:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:39 TIME: user.ping 0.1 ms
03.11 22:54:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:54:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:41 TRACE: User not logon yet.
03.11 22:54:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:48 TRACE: User not logon yet.
03.11 22:54:51 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:51 TIME: user.ping 0.09 ms
03.11 22:54:51 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:54:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:54:56 TRACE: User not logon yet.
03.11 22:55:02 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:02 TIME: user.ping 0.23 ms
03.11 22:55:02 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:55:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:03 TRACE: User not logon yet.
03.11 22:55:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:03 TIME: user.ping 0.18 ms
03.11 22:55:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:55:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:10 TRACE: User not logon yet.
03.11 22:55:12 ++ NET: uid107 req: battle.end { type => leaveGame, typeBattle => random, tournamentId => 0, messageType => battle.end, battleId => 15 }
03.11 22:55:12 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:55:12 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:55:12 STATS: vdl.0 cache connection, 95 calls, total 0.229045152664185 sec spent, avg 2.41 ms
03.11 22:55:12 TIME: battle.end 2.25 ms
03.11 22:55:12 == NET: uid107 ret: battle.end { type => battle.end, errorCode => ok }
03.11 22:55:12 == NET: uid116 ret: battle.leave { type => battle.leave }
03.11 22:55:14 TIMER: Check auto-disconnect...
03.11 22:55:14 STATS: vdl.0 cache, locks:4
03.11 22:55:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:55:15 TIME: user.ping 0.18 ms
03.11 22:55:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:18 TRACE: User not logon yet.
03.11 22:55:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:23 TIME: user.ping 0.09 ms
03.11 22:55:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:55:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:25 TRACE: User not logon yet.
03.11 22:55:28 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:55:28 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:55:28 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:55:28 TIME: battle.find 0.3 ms
03.11 22:55:28 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:55:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:55:32 TIME: user.ping 0.09 ms
03.11 22:55:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:33 TRACE: User not logon yet.
03.11 22:55:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:36 TIME: user.ping 0.26 ms
03.11 22:55:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:55:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:40 TRACE: User not logon yet.
03.11 22:55:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:44 TIME: user.ping 0.15 ms
03.11 22:55:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:55:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:48 TRACE: User not logon yet.
03.11 22:55:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:55 TRACE: User not logon yet.
03.11 22:55:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:55:55 TIME: user.ping 0.23 ms
03.11 22:55:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:56:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:02 TRACE: User not logon yet.
03.11 22:56:03 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:56:03 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:56:03 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:56:03 TIME: battle.find 1.96 ms
03.11 22:56:03 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:56:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:10 TRACE: User not logon yet.
03.11 22:56:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:10 TIME: user.ping 0.17 ms
03.11 22:56:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:56:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:14 TIME: user.ping 0.21 ms
03.11 22:56:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:56:14 TIMER: Check auto-disconnect...
03.11 22:56:14 STATS: vdl.0 cache, locks:4
03.11 22:56:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:17 TRACE: User not logon yet.
03.11 22:56:22 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:22 TIME: user.ping 0.12 ms
03.11 22:56:22 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:56:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:25 TRACE: User not logon yet.
03.11 22:56:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:32 TRACE: User not logon yet.
03.11 22:56:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:35 TIME: user.ping 0.12 ms
03.11 22:56:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:56:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:39 TRACE: User not logon yet.
03.11 22:56:42 NET: Client (name:uid107 conid:25232888 TCP) disconnected from vdl.0 (clients:2)
03.11 22:56:42 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:56:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:56:42 -<<-: core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }}, errorCode => ok, _type => core/server.query }
03.11 22:56:42 STATS: vdl.0 cache connection, 98 calls, total 0.231838226318359 sec spent, avg 2.37 ms
03.11 22:56:42 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:56:42 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:56:42 ->>-: vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
03.11 22:56:42 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:56:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:56:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:56:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:56:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:56:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:56:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:56:42 == NET: uid116 ret: battle.end { type => battle.end }
03.11 22:56:46 NET: Client (conid:53254689) connected to vdl.0 (clients:3)
03.11 22:56:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:47 TRACE: User not logon yet.
03.11 22:56:47 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 22:56:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:56:47 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:56:47 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:56:47 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:56:47 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:56:47 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:56:47 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 107 } }
03.11 22:56:47 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:56:47 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 107 } }
03.11 22:56:47 NET: Client login (conid:53254689, id:107, name:uid107)
03.11 22:56:47 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:56:47 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:56:47 == NET: null ret: user.join { name => uid107, type => user.join }
03.11 22:56:47 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 22:56:47 == NET: uid107 ret: user.join { name => null, type => user.join }
03.11 22:56:47 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 22:56:47 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 22:56:47 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 22:56:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:52 TIME: user.ping 0.09 ms
03.11 22:56:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:56:52 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:52 TIME: user.ping 0.17 ms
03.11 22:56:52 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:56:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:56:54 TRACE: User not logon yet.
03.11 22:56:54 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:56:54 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 22:56:55 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:56:55 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:56:55 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 16, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:56:55 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 16, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:56:55 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:56:55 TIME: battle.find 21.54 ms
03.11 22:56:55 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:56:55 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 16, player => 1 }, type => battle.enemy }
03.11 22:56:55 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 16, player => 2 }, type => battle.enemy }
03.11 22:57:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:00 TIME: user.ping 0.08 ms
03.11 22:57:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:57:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:02 TRACE: User not logon yet.
03.11 22:57:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:09 TRACE: User not logon yet.
03.11 22:57:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:09 TIME: user.ping 0.2 ms
03.11 22:57:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:57:14 TIMER: Check auto-disconnect...
03.11 22:57:14 STATS: vdl.0 cache, locks:4
03.11 22:57:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:16 TRACE: User not logon yet.
03.11 22:57:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:18 TIME: user.ping 0.1 ms
03.11 22:57:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:57:19 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:19 TIME: user.ping 0.13 ms
03.11 22:57:19 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:57:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:24 TRACE: User not logon yet.
03.11 22:57:24 ++ NET: uid116 req: battle.end { type => leaveGame, typeBattle => random, tournamentId => 0, messageType => battle.end, battleId => 16 }
03.11 22:57:24 ->>-: vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
03.11 22:57:24 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:57:24 TIME: battle.end 0.9 ms
03.11 22:57:24 == NET: uid116 ret: battle.end { type => battle.end, errorCode => ok }
03.11 22:57:24 == NET: uid107 ret: battle.leave { type => battle.leave }
03.11 22:57:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:27 TIME: user.ping 0.12 ms
03.11 22:57:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:57:27 NET: Client (name:uid116 conid:99044587 TCP) disconnected from vdl.0 (clients:2)
03.11 22:57:27 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
03.11 22:57:27 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
03.11 22:57:27 -<<-: core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }}, errorCode => ok, _type => core/server.query }
03.11 22:57:27 ->>-: vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
03.11 22:57:27 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:57:27 ->>-: vdl/cache.battle.finishRoom { roomId => 16, _type => vdl/cache.battle.finishRoom }
03.11 22:57:27 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:57:27 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
03.11 22:57:27 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:57:27 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 22:57:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:57:27 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 22:57:27 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:57:27 == NET: uid107 ret: battle.end { type => battle.end }
03.11 22:57:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:31 TRACE: User not logon yet.
03.11 22:57:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:36 TIME: user.ping 0.07 ms
03.11 22:57:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:57:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:38 TRACE: User not logon yet.
03.11 22:57:42 NET: Client (name:uid107 conid:53254689 TCP) disconnected from vdl.0 (clients:1)
03.11 22:57:42 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:57:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:57:42 -<<-: core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }}, errorCode => ok, _type => core/server.query }
03.11 22:57:42 STATS: vdl.0 cache connection, 118 calls, total 0.264057874679565 sec spent, avg 2.24 ms
03.11 22:57:42 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:57:42 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:57:42 ->>-: vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
03.11 22:57:42 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:57:42 ->>-: core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 22:57:42 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 22:57:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:57:42 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 22:57:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:57:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:57:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:57:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:57:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:46 TRACE: User not logon yet.
03.11 22:57:47 NET: Client (conid:22988860) connected to vdl.0 (clients:2)
03.11 22:57:47 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 22:57:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:57:47 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:57:47 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:57:47 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:57:47 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:57:47 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:57:47 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 4, id => 107 } }
03.11 22:57:47 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:57:47 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 107 } }
03.11 22:57:47 NET: Client login (conid:22988860, id:107, name:uid107)
03.11 22:57:47 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:57:47 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:57:47 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 22:57:47 == NET: uid107 ret: user.join { name => null, type => user.join }
03.11 22:57:47 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 22:57:47 == NET: null ret: user.join { name => uid107, type => user.join }
03.11 22:57:49 NET: Client (conid:51012736) connected to vdl.0 (clients:3)
03.11 22:57:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:52 TIME: user.ping 0.14 ms
03.11 22:57:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:57:52 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
03.11 22:57:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:57:52 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:57:52 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:57:52 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:57:52 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:57:52 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:57:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:57:52 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:57:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:57:52 NET: Client login (conid:51012736, id:116, name:uid116)
03.11 22:57:52 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:57:52 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 22:57:52 == NET: null ret: user.join { name => uid116, type => user.join }
03.11 22:57:52 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 22:57:52 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
03.11 22:57:52 == NET: uid116 ret: user.join { name => null, type => user.join }
03.11 22:57:52 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 22:57:52 == NET: uid116 ret: user.join { name => uid116, type => user.join }
03.11 22:57:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:57:53 TRACE: User not logon yet.
03.11 22:57:54 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:57:54 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
03.11 22:57:56 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:57:56 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:57:56 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:57:56 TIME: battle.find 0.21 ms
03.11 22:57:56 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:57:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:57:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:58:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:01 TRACE: User not logon yet.
03.11 22:58:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:04 TIME: user.ping 0.1 ms
03.11 22:58:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:58:05 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:05 TIME: user.ping 0.19 ms
03.11 22:58:05 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:58:07 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 22:58:07 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:58:07 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 17, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:58:07 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 17, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:58:07 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:58:07 TIME: battle.find 29.26 ms
03.11 22:58:07 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
03.11 22:58:07 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 17, player => 1 }, type => battle.enemy }
03.11 22:58:07 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 17, player => 2 }, type => battle.enemy }
03.11 22:58:08 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:08 TRACE: User not logon yet.
03.11 22:58:13 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 17 }
03.11 22:58:13 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
03.11 22:58:13 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:58:13 TIME: battle.sendtask 0.84 ms
03.11 22:58:13 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.task, dices => [1,0,5,4,1,1], errorCode => ok }
03.11 22:58:13 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [1,0,5,4,1,1], errorCode => ok }
03.11 22:58:13 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 22:58:14 TIMER: Check auto-disconnect...
03.11 22:58:14 STATS: vdl.0 cache, locks:4
03.11 22:58:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:15 TRACE: User not logon yet.
03.11 22:58:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:19 TIME: user.ping 0.09 ms
03.11 22:58:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:58:23 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:23 TRACE: User not logon yet.
03.11 22:58:24 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 17 }
03.11 22:58:24 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
03.11 22:58:24 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:58:24 TIME: battle.sendtask 1.73 ms
03.11 22:58:24 == NET: uid116 ret: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [8,4], battleId => 17 }
03.11 22:58:30 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:30 TRACE: User not logon yet.
03.11 22:58:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:32 TIME: user.ping 0.13 ms
03.11 22:58:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:58:32 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:32 TIME: user.ping 0.14 ms
03.11 22:58:32 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:58:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:38 TRACE: User not logon yet.
03.11 22:58:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:44 TIME: user.ping 0.08 ms
03.11 22:58:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:58:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:45 TRACE: User not logon yet.
03.11 22:58:52 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:52 TRACE: User not logon yet.
03.11 22:58:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:57 TIME: user.ping 0.21 ms
03.11 22:58:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:58:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:58:57 TIME: user.ping 0.19 ms
03.11 22:58:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:59:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:00 TRACE: User not logon yet.
03.11 22:59:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:07 TRACE: User not logon yet.
03.11 22:59:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:09 TIME: user.ping 0.13 ms
03.11 22:59:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:59:14 TIMER: Check auto-disconnect...
03.11 22:59:14 STATS: vdl.0 cache, locks:4
03.11 22:59:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:15 TRACE: User not logon yet.
03.11 22:59:22 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:22 TIME: user.ping 0.13 ms
03.11 22:59:22 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:59:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:22 TRACE: User not logon yet.
03.11 22:59:22 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:22 TIME: user.ping 3.49 ms
03.11 22:59:22 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:59:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:29 TRACE: User not logon yet.
03.11 22:59:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:35 TIME: user.ping 0.23 ms
03.11 22:59:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:59:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:37 TRACE: User not logon yet.
03.11 22:59:44 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:44 TRACE: User not logon yet.
03.11 22:59:46 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:46 TIME: user.ping 0.22 ms
03.11 22:59:46 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:59:47 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:47 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 22:59:47 TIME: user.ping 0.09 ms
03.11 22:59:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:51 TRACE: User not logon yet.
03.11 22:59:59 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 22:59:59 TRACE: User not logon yet.
