22.11 14:00:43 TIMER: Check auto-disconnect...
22.11 14:00:59 STATS: vdl.0 cache, locks:0
22.11 14:01:43 TIMER: Check auto-disconnect...
22.11 14:01:59 STATS: vdl.0 cache, locks:0
22.11 14:02:43 TIMER: Check auto-disconnect...
22.11 14:02:59 STATS: vdl.0 cache, locks:0
22.11 14:03:43 TIMER: Check auto-disconnect...
22.11 14:03:59 STATS: vdl.0 cache, locks:0
22.11 14:04:43 TIMER: Check auto-disconnect...
22.11 14:04:59 STATS: vdl.0 cache, locks:0
22.11 14:05:43 TIMER: Check auto-disconnect...
22.11 14:05:59 STATS: vdl.0 cache, locks:0
22.11 14:06:43 TIMER: Check auto-disconnect...
22.11 14:06:59 STATS: vdl.0 cache, locks:0
22.11 14:07:43 TIMER: Check auto-disconnect...
22.11 14:07:59 STATS: vdl.0 cache, locks:0
22.11 14:08:43 TIMER: Check auto-disconnect...
22.11 14:08:59 STATS: vdl.0 cache, locks:0
22.11 14:09:43 TIMER: Check auto-disconnect...
22.11 14:09:59 STATS: vdl.0 cache, locks:0
22.11 14:10:43 TIMER: Check auto-disconnect...
22.11 14:10:59 STATS: vdl.0 cache, locks:0
22.11 14:11:43 TIMER: Check auto-disconnect...
22.11 14:11:59 STATS: vdl.0 cache, locks:0
22.11 14:12:43 TIMER: Check auto-disconnect...
22.11 14:12:59 STATS: vdl.0 cache, locks:0
22.11 14:13:43 TIMER: Check auto-disconnect...
22.11 14:13:59 STATS: vdl.0 cache, locks:0
22.11 14:14:43 TIMER: Check auto-disconnect...
22.11 14:14:59 STATS: vdl.0 cache, locks:0
22.11 14:15:43 TIMER: Check auto-disconnect...
22.11 14:15:59 STATS: vdl.0 cache, locks:0
22.11 14:16:43 TIMER: Check auto-disconnect...
22.11 14:16:59 STATS: vdl.0 cache, locks:0
22.11 14:17:43 TIMER: Check auto-disconnect...
22.11 14:17:59 STATS: vdl.0 cache, locks:0
22.11 14:18:43 TIMER: Check auto-disconnect...
22.11 14:18:59 STATS: vdl.0 cache, locks:0
22.11 14:19:43 TIMER: Check auto-disconnect...
22.11 14:19:59 STATS: vdl.0 cache, locks:0
22.11 14:20:43 TIMER: Check auto-disconnect...
22.11 14:20:59 STATS: vdl.0 cache, locks:0
22.11 14:21:43 TIMER: Check auto-disconnect...
22.11 14:21:59 STATS: vdl.0 cache, locks:0
22.11 14:22:43 TIMER: Check auto-disconnect...
22.11 14:22:59 STATS: vdl.0 cache, locks:0
22.11 14:23:43 TIMER: Check auto-disconnect...
22.11 14:23:59 STATS: vdl.0 cache, locks:0
22.11 14:24:43 TIMER: Check auto-disconnect...
22.11 14:24:59 STATS: vdl.0 cache, locks:0
22.11 14:25:43 TIMER: Check auto-disconnect...
22.11 14:25:59 STATS: vdl.0 cache, locks:0
22.11 14:26:43 TIMER: Check auto-disconnect...
22.11 14:26:59 STATS: vdl.0 cache, locks:0
22.11 14:27:43 TIMER: Check auto-disconnect...
22.11 14:27:59 STATS: vdl.0 cache, locks:0
22.11 14:28:43 TIMER: Check auto-disconnect...
22.11 14:28:59 STATS: vdl.0 cache, locks:0
22.11 14:29:38 NET: Client (conid:45656288) connected to vdl.0 (clients:1)
22.11 14:29:40 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTMy }
22.11 14:29:40 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid132' AND Password = 'uid132'
22.11 14:29:40 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid132' AND Password = 'uid132', _type => core/server.query }
22.11 14:29:40 -<<-: core/server.query { list => {{ name => uid132, networkid => , isbanned => false, id => 132 }}, errorCode => ok, _type => core/server.query }
22.11 14:29:40 STATS: vdl.0 cache connection, 1780 calls, total 1.17029857635498 sec spent, avg 0.66 ms
22.11 14:29:40 ->>-: core/user.isOnlineID { id => 132, _type => core/user.isOnlineID }
22.11 14:29:40 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
22.11 14:29:40 ->>-: core/cache.get { type => user, v => -1, id => 132, _type => core/cache.get }
22.11 14:29:40 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid132, deleted => false, year => , email => mail, networktype =>   , password => uid132, isbanned => false, regdate => 2016-11-21 13:49:28.012904+00, city => , language =>   , networkid => , params => {}}, version => 0, id => 132 } }
22.11 14:29:40 ->>-: core/cache.get { type => questdata, v => -1, id => 132, _type => core/cache.get }
22.11 14:29:40 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 132 } }
22.11 14:29:40 NET: Client login (conid:45656288, id:132, name:uid132)
22.11 14:29:40 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 132, _type => core/user.loginPost, ipAddr => 95.71.119.159 }
22.11 14:29:40 -<<-: core/user.loginPost { _type => core/user.loginPost }
22.11 14:29:40 DB: SELECT token FROM tokens WHERE userid = 132
22.11 14:29:40 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 132, _type => core/server.query }
22.11 14:29:40 -<<-: core/server.query { list => {{ token => d3910ea62c8dc68b1a244797b2268456 }}, errorCode => ok, _type => core/server.query }
22.11 14:29:40 DB: SELECT ID FROM TempUserLogins WHERE UserID = 132 AND Date = 'today'::timestamp
22.11 14:29:40 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 132 AND Date = 'today'::timestamp, _type => core/server.query }
22.11 14:29:40 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
22.11 14:29:40 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (132, 'today'::timestamp)
22.11 14:29:40 == NET: uid132 ret: user.login { name => uid132, type => user.login, errorCode => ok, id => 132, token => d3910ea62c8dc68b1a244797b2268456 }
22.11 14:29:40 == NET: uid132 ret: user.join { name => uid132, type => user.join }
22.11 14:29:40 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (132, 'today'::timestamp), _type => core/server.pending }} }
22.11 14:29:40 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
22.11 14:29:43 TIMER: Check auto-disconnect...
22.11 14:29:49 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479824980, lastLoginDate => 327, lastLoadDate => 1123 }, effects => { list => [] } }}, type => user, unlock => false, id => 132, _type => core/cache.update }
22.11 14:29:49 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 14:29:50 ++ NET: uid132 req: user.ping { messageType => user.ping, msg => ok }
22.11 14:29:50 TIME: user.ping 0.13 ms
22.11 14:29:50 == NET: uid132 ret: user.ping { type => user.ping, errorCode => ok }
22.11 14:29:54 ++ NET: uid132 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
22.11 14:29:54 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
22.11 14:29:54 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 14:29:54 TIME: tournament.getAvailableTournament 3.75 ms
22.11 14:29:54 == NET: uid132 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 14:29:59 STATS: vdl.0 cache, locks:2
22.11 14:30:11 ++ NET: uid132 req: tournament.addUsers { tournamentId => 5, messageType => tournament.addUsers }
22.11 14:30:11 ->>-: vdl/cache.tournament.getPrice { tournamentId => 5, _type => vdl/cache.tournament.getPrice }
22.11 14:30:11 -<<-: vdl/cache.tournament.getPrice { price => -1, _type => vdl/cache.tournament.getPrice }
22.11 14:30:11 ->>-: vdl/cache.tournament.addUsers { userId => 132, passTournament => null, tournament => 5, _type => vdl/cache.tournament.addUsers }
22.11 14:30:11 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
22.11 14:30:11 TIME: tournament.addUsers 1.51 ms
22.11 14:30:11 == NET: uid132 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
22.11 14:30:12 ++ NET: uid132 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
22.11 14:30:12 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
22.11 14:30:12 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [{ name => uid132, id => 132 }], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 14:30:12 TIME: tournament.getAvailableTournament 3.1 ms
22.11 14:30:12 == NET: uid132 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [{ name => uid132, id => 132 }], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 14:30:19 ->>-: core/cache.update { diff => {params => { attrs => { money => 1 } }}, type => user, unlock => false, id => 132, _type => core/cache.update }
22.11 14:30:19 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
22.11 14:30:21 ++ NET: uid132 req: tournament.grid { tournamentId => 5, round => 1, messageType => tournament.grid }
22.11 14:30:21 ->>-: vdl/cache.tournament.getStatus { tournamentId => 5, _type => vdl/cache.tournament.getStatus }
22.11 14:30:21 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
22.11 14:30:21 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 5, _type => vdl/cache.tournament.getAvailableTournamentUsers }
22.11 14:30:21 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [132] }
22.11 14:30:21 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 132 }], tournamentId => 5, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
22.11 14:30:21 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 132 }], tournamentId => 5, errorCode => ok, _type => vdl/cache.tournament.setGrid }
22.11 14:30:21 TIME: tournament.grid 0.71 ms
22.11 14:30:21 == NET: uid132 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 132 }], type => tournament.grid, tournamentId => 5, errorCode => ok, _type => vdl/cache.tournament.setGrid }
22.11 14:30:43 TIMER: Check auto-disconnect...
22.11 14:30:59 STATS: vdl.0 cache, locks:2
22.11 14:31:43 TIMER: Check auto-disconnect...
22.11 14:31:59 STATS: vdl.0 cache, locks:2
22.11 14:32:43 TIMER: Check auto-disconnect...
22.11 14:32:59 STATS: vdl.0 cache, locks:2
22.11 14:33:43 TIMER: Check auto-disconnect...
22.11 14:33:53 NET: Client (name:uid132 conid:45656288 TCP) disconnected from vdl.0 (clients:0)
22.11 14:33:53 DB: SELECT id FROM battle WHERE firstid=132 OR secondid=132 AND finished <> true
22.11 14:33:53 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=132 OR secondid=132 AND finished <> true, _type => core/server.query }
22.11 14:33:53 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
22.11 14:33:53 STATS: vdl.0 cache connection, 1797 calls, total 1.18326902389526 sec spent, avg 0.66 ms
22.11 14:33:53 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 14:33:53 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
22.11 14:33:53 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 14:33:53 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
22.11 14:33:53 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 132, _type => core/cache.update }
22.11 14:33:53 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
22.11 14:33:53 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 132, _type => core/cache.update }
22.11 14:33:53 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 14:33:53 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 132, _type => core/user.logoutPost }
22.11 14:33:53 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
22.11 14:33:59 STATS: vdl.0 cache, locks:0
22.11 14:34:43 TIMER: Check auto-disconnect...
22.11 14:34:59 STATS: vdl.0 cache, locks:0
22.11 14:35:43 TIMER: Check auto-disconnect...
22.11 14:35:59 STATS: vdl.0 cache, locks:0
22.11 14:36:43 TIMER: Check auto-disconnect...
22.11 14:36:59 STATS: vdl.0 cache, locks:0
22.11 14:37:43 TIMER: Check auto-disconnect...
22.11 14:37:59 STATS: vdl.0 cache, locks:0
22.11 14:38:43 TIMER: Check auto-disconnect...
22.11 14:38:59 STATS: vdl.0 cache, locks:0
22.11 14:39:43 TIMER: Check auto-disconnect...
22.11 14:39:59 STATS: vdl.0 cache, locks:0
22.11 14:40:43 TIMER: Check auto-disconnect...
22.11 14:40:59 STATS: vdl.0 cache, locks:0
22.11 14:41:43 TIMER: Check auto-disconnect...
22.11 14:41:59 STATS: vdl.0 cache, locks:0
22.11 14:42:43 TIMER: Check auto-disconnect...
22.11 14:42:59 STATS: vdl.0 cache, locks:0
22.11 14:43:43 TIMER: Check auto-disconnect...
22.11 14:43:59 STATS: vdl.0 cache, locks:0
22.11 14:44:43 TIMER: Check auto-disconnect...
22.11 14:44:59 STATS: vdl.0 cache, locks:0
22.11 14:45:43 TIMER: Check auto-disconnect...
22.11 14:45:59 STATS: vdl.0 cache, locks:0
22.11 14:46:43 TIMER: Check auto-disconnect...
22.11 14:46:59 STATS: vdl.0 cache, locks:0
22.11 14:47:43 TIMER: Check auto-disconnect...
22.11 14:47:59 STATS: vdl.0 cache, locks:0
22.11 14:48:43 TIMER: Check auto-disconnect...
22.11 14:48:59 STATS: vdl.0 cache, locks:0
22.11 14:49:43 TIMER: Check auto-disconnect...
22.11 14:49:59 STATS: vdl.0 cache, locks:0
22.11 14:50:07 NET: Client (conid:38388427) connected to vdl.0 (clients:1)
22.11 14:50:09 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTMy }
22.11 14:50:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid132' AND Password = 'uid132'
22.11 14:50:09 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid132' AND Password = 'uid132', _type => core/server.query }
22.11 14:50:09 -<<-: core/server.query { list => {{ name => uid132, networkid => , isbanned => false, id => 132 }}, errorCode => ok, _type => core/server.query }
22.11 14:50:09 STATS: vdl.0 cache connection, 1802 calls, total 1.18578338623047 sec spent, avg 0.66 ms
22.11 14:50:09 ->>-: core/user.isOnlineID { id => 132, _type => core/user.isOnlineID }
22.11 14:50:09 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
22.11 14:50:09 ->>-: core/cache.get { type => user, v => -1, id => 132, _type => core/cache.get }
22.11 14:50:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid132, deleted => false, year => , email => mail, networktype =>   , password => uid132, isbanned => false, regdate => 2016-11-21 13:49:28.012904+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479824980, lastLoginDate => 327, money => 1, lastLoadDate => 1123 }, effects => { list => [] } }}, version => 0, id => 132 } }
22.11 14:50:09 ->>-: core/cache.get { type => questdata, v => -1, id => 132, _type => core/cache.get }
22.11 14:50:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 132 } }
22.11 14:50:09 NET: Client login (conid:38388427, id:132, name:uid132)
22.11 14:50:09 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 132, _type => core/user.loginPost, ipAddr => 95.71.119.159 }
22.11 14:50:09 -<<-: core/user.loginPost { _type => core/user.loginPost }
22.11 14:50:09 DB: SELECT token FROM tokens WHERE userid = 132
22.11 14:50:09 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 132, _type => core/server.query }
22.11 14:50:09 -<<-: core/server.query { list => {{ token => d3910ea62c8dc68b1a244797b2268456 }}, errorCode => ok, _type => core/server.query }
22.11 14:50:09 == NET: uid132 ret: user.login { name => uid132, type => user.login, errorCode => ok, id => 132, token => d3910ea62c8dc68b1a244797b2268456 }
22.11 14:50:09 == NET: uid132 ret: user.join { name => uid132, type => user.join }
22.11 14:50:14 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 132, _type => core/cache.update }
22.11 14:50:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 14:50:18 ++ NET: uid132 req: user.ping { messageType => user.ping, msg => ok }
22.11 14:50:18 TIME: user.ping 0.14 ms
22.11 14:50:18 == NET: uid132 ret: user.ping { type => user.ping, errorCode => ok }
22.11 14:50:43 TIMER: Check auto-disconnect...
22.11 14:50:59 STATS: vdl.0 cache, locks:2
22.11 14:51:22 ++ NET: uid132 req: user.ping { messageType => user.ping, msg => ok }
22.11 14:51:22 TIME: user.ping 0.1 ms
22.11 14:51:22 == NET: uid132 ret: user.ping { type => user.ping, errorCode => ok }
22.11 14:51:43 TIMER: Check auto-disconnect...
22.11 14:51:59 STATS: vdl.0 cache, locks:2
22.11 14:52:43 TIMER: Check auto-disconnect...
22.11 14:52:59 STATS: vdl.0 cache, locks:2
22.11 14:53:43 TIMER: Check auto-disconnect...
22.11 14:53:59 STATS: vdl.0 cache, locks:2
22.11 14:54:43 TIMER: Check auto-disconnect...
22.11 14:54:59 STATS: vdl.0 cache, locks:2
22.11 14:55:43 TIMER: Check auto-disconnect...
22.11 14:55:59 STATS: vdl.0 cache, locks:2
22.11 14:56:43 TIMER: Check auto-disconnect...
22.11 14:56:59 STATS: vdl.0 cache, locks:2
22.11 14:57:05 NET: Client (name:uid132 conid:38388427 TCP) disconnected from vdl.0 (clients:0)
22.11 14:57:05 DB: SELECT id FROM battle WHERE firstid=132 OR secondid=132 AND finished <> true
22.11 14:57:05 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=132 OR secondid=132 AND finished <> true, _type => core/server.query }
22.11 14:57:05 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
22.11 14:57:05 STATS: vdl.0 cache connection, 1809 calls, total 1.18890333175659 sec spent, avg 0.66 ms
22.11 14:57:05 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 14:57:05 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
22.11 14:57:05 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 14:57:05 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
22.11 14:57:05 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 132, _type => core/cache.update }
22.11 14:57:05 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
22.11 14:57:05 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 132, _type => core/cache.update }
22.11 14:57:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 14:57:05 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 132, _type => core/user.logoutPost }
22.11 14:57:05 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
22.11 14:57:43 TIMER: Check auto-disconnect...
22.11 14:57:59 STATS: vdl.0 cache, locks:0
22.11 14:58:43 TIMER: Check auto-disconnect...
22.11 14:58:59 STATS: vdl.0 cache, locks:0
22.11 14:59:43 TIMER: Check auto-disconnect...
22.11 14:59:59 STATS: vdl.0 cache, locks:0
