22.11 08:00:43 TIMER: Check auto-disconnect...
22.11 08:00:57 STATS: vdl.0 cache, locks:0
22.11 08:01:43 TIMER: Check auto-disconnect...
22.11 08:01:57 STATS: vdl.0 cache, locks:0
22.11 08:02:43 TIMER: Check auto-disconnect...
22.11 08:02:57 STATS: vdl.0 cache, locks:0
22.11 08:03:43 TIMER: Check auto-disconnect...
22.11 08:03:57 STATS: vdl.0 cache, locks:0
22.11 08:04:43 TIMER: Check auto-disconnect...
22.11 08:04:57 STATS: vdl.0 cache, locks:0
22.11 08:05:43 TIMER: Check auto-disconnect...
22.11 08:05:57 STATS: vdl.0 cache, locks:0
22.11 08:06:43 TIMER: Check auto-disconnect...
22.11 08:06:57 STATS: vdl.0 cache, locks:0
22.11 08:07:43 TIMER: Check auto-disconnect...
22.11 08:07:57 STATS: vdl.0 cache, locks:0
22.11 08:08:43 TIMER: Check auto-disconnect...
22.11 08:08:57 STATS: vdl.0 cache, locks:0
22.11 08:09:43 TIMER: Check auto-disconnect...
22.11 08:09:57 STATS: vdl.0 cache, locks:0
22.11 08:10:43 TIMER: Check auto-disconnect...
22.11 08:10:57 STATS: vdl.0 cache, locks:0
22.11 08:11:43 TIMER: Check auto-disconnect...
22.11 08:11:57 STATS: vdl.0 cache, locks:0
22.11 08:12:43 TIMER: Check auto-disconnect...
22.11 08:12:57 STATS: vdl.0 cache, locks:0
22.11 08:13:43 TIMER: Check auto-disconnect...
22.11 08:13:57 STATS: vdl.0 cache, locks:0
22.11 08:14:43 TIMER: Check auto-disconnect...
22.11 08:14:57 STATS: vdl.0 cache, locks:0
22.11 08:15:43 TIMER: Check auto-disconnect...
22.11 08:15:57 STATS: vdl.0 cache, locks:0
22.11 08:16:43 TIMER: Check auto-disconnect...
22.11 08:16:57 STATS: vdl.0 cache, locks:0
22.11 08:17:43 TIMER: Check auto-disconnect...
22.11 08:17:57 STATS: vdl.0 cache, locks:0
22.11 08:18:43 TIMER: Check auto-disconnect...
22.11 08:18:57 STATS: vdl.0 cache, locks:0
22.11 08:19:43 TIMER: Check auto-disconnect...
22.11 08:19:57 STATS: vdl.0 cache, locks:0
22.11 08:20:43 TIMER: Check auto-disconnect...
22.11 08:20:57 STATS: vdl.0 cache, locks:0
22.11 08:21:43 TIMER: Check auto-disconnect...
22.11 08:21:57 STATS: vdl.0 cache, locks:0
22.11 08:22:43 TIMER: Check auto-disconnect...
22.11 08:22:57 STATS: vdl.0 cache, locks:0
22.11 08:23:43 TIMER: Check auto-disconnect...
22.11 08:23:57 STATS: vdl.0 cache, locks:0
22.11 08:24:43 TIMER: Check auto-disconnect...
22.11 08:24:57 STATS: vdl.0 cache, locks:0
22.11 08:25:43 TIMER: Check auto-disconnect...
22.11 08:25:57 STATS: vdl.0 cache, locks:0
22.11 08:26:43 TIMER: Check auto-disconnect...
22.11 08:26:57 STATS: vdl.0 cache, locks:0
22.11 08:27:43 TIMER: Check auto-disconnect...
22.11 08:27:57 STATS: vdl.0 cache, locks:0
22.11 08:28:43 TIMER: Check auto-disconnect...
22.11 08:28:57 STATS: vdl.0 cache, locks:0
22.11 08:29:43 TIMER: Check auto-disconnect...
22.11 08:29:57 STATS: vdl.0 cache, locks:0
22.11 08:30:43 TIMER: Check auto-disconnect...
22.11 08:30:57 STATS: vdl.0 cache, locks:0
22.11 08:31:43 TIMER: Check auto-disconnect...
22.11 08:31:57 STATS: vdl.0 cache, locks:0
22.11 08:32:43 TIMER: Check auto-disconnect...
22.11 08:32:57 STATS: vdl.0 cache, locks:0
22.11 08:33:43 TIMER: Check auto-disconnect...
22.11 08:33:57 STATS: vdl.0 cache, locks:0
22.11 08:34:43 TIMER: Check auto-disconnect...
22.11 08:34:57 STATS: vdl.0 cache, locks:0
22.11 08:35:43 TIMER: Check auto-disconnect...
22.11 08:35:57 STATS: vdl.0 cache, locks:0
22.11 08:36:43 TIMER: Check auto-disconnect...
22.11 08:36:57 STATS: vdl.0 cache, locks:0
22.11 08:37:43 TIMER: Check auto-disconnect...
22.11 08:37:57 STATS: vdl.0 cache, locks:0
22.11 08:38:17 NET: Client (conid:67707506) connected to vdl.0 (clients:1)
22.11 08:38:17 ++ NET: null req: user.login { password => ukfveh, name => nelli, messageType => user.login }
22.11 08:38:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'nelli' AND Password = 'ukfveh'
22.11 08:38:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'nelli' AND Password = 'ukfveh', _type => core/server.query }
22.11 08:38:17 -<<-: core/server.query { list => {{ name => nelli, networkid => , isbanned => false, id => 124 }}, errorCode => ok, _type => core/server.query }
22.11 08:38:17 STATS: vdl.0 cache connection, 1709 calls, total 1.13013815879822 sec spent, avg 0.66 ms
22.11 08:38:17 ->>-: core/user.isOnlineID { id => 124, _type => core/user.isOnlineID }
22.11 08:38:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
22.11 08:38:17 ->>-: core/cache.get { type => user, v => -1, id => 124, _type => core/cache.get }
22.11 08:38:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => nelli, deleted => false, year => , email => nlabunskaya@mail.ru, networktype =>   , password => ukfveh, isbanned => false, regdate => 2016-11-20 21:37:47.064605+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479726317, lastLoginDate => 326, money => 1, lastLoadDate => 1122 }, effects => { list => [] } }}, version => 0, id => 124 } }
22.11 08:38:17 ->>-: core/cache.get { type => questdata, v => -1, id => 124, _type => core/cache.get }
22.11 08:38:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 124 } }
22.11 08:38:17 NET: Client login (conid:67707506, id:124, name:nelli)
22.11 08:38:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 124, _type => core/user.loginPost, ipAddr => 217.118.93.152 }
22.11 08:38:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
22.11 08:38:17 DB: SELECT token FROM tokens WHERE userid = 124
22.11 08:38:17 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 124, _type => core/server.query }
22.11 08:38:17 -<<-: core/server.query { list => {{ token => ad298cff9fc85abf8cf7c9599dc4302b }}, errorCode => ok, _type => core/server.query }
22.11 08:38:17 DB: SELECT ID FROM TempUserLogins WHERE UserID = 124 AND Date = 'today'::timestamp
22.11 08:38:17 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 124 AND Date = 'today'::timestamp, _type => core/server.query }
22.11 08:38:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
22.11 08:38:17 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (124, 'today'::timestamp)
22.11 08:38:17 == NET: nelli ret: user.login { name => nelli, type => user.login, errorCode => ok, id => 124, token => ad298cff9fc85abf8cf7c9599dc4302b }
22.11 08:38:17 == NET: nelli ret: user.join { name => nelli, type => user.join }
22.11 08:38:18 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (124, 'today'::timestamp), _type => core/server.pending }} }
22.11 08:38:18 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
22.11 08:38:18 ++ NET: nelli req: user.data { messageType => user.data }
22.11 08:38:18 ->>-: vdl/cache.user.getData { userId => 124, _type => vdl/cache.user.getData, money => 1 }
22.11 08:38:18 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 1 }
22.11 08:38:18 TIME: user.data 0.36 ms
22.11 08:38:18 == NET: nelli ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 1 }
22.11 08:38:23 ++ NET: nelli req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
22.11 08:38:23 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
22.11 08:38:23 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 08:38:23 TIME: tournament.getAvailableTournament 3.03 ms
22.11 08:38:23 == NET: nelli ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 08:38:26 ++ NET: nelli req: user.ping { messageType => user.ping, msg => ok }
22.11 08:38:26 TIME: user.ping 0.15 ms
22.11 08:38:26 == NET: nelli ret: user.ping { type => user.ping, errorCode => ok }
22.11 08:38:27 ->>-: core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 327, lastLoadDate => 1123 } }}, type => user, unlock => false, id => 124, _type => core/cache.update }
22.11 08:38:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 08:38:43 TIMER: Check auto-disconnect...
22.11 08:38:57 STATS: vdl.0 cache, locks:2
22.11 08:39:43 TIMER: Check auto-disconnect...
22.11 08:39:57 STATS: vdl.0 cache, locks:2
22.11 08:40:43 TIMER: Check auto-disconnect...
22.11 08:40:57 STATS: vdl.0 cache, locks:2
22.11 08:41:43 TIMER: Check auto-disconnect...
22.11 08:41:57 STATS: vdl.0 cache, locks:2
22.11 08:42:43 TIMER: Check auto-disconnect...
22.11 08:42:57 STATS: vdl.0 cache, locks:2
22.11 08:43:43 TIMER: Check auto-disconnect...
22.11 08:43:57 STATS: vdl.0 cache, locks:2
22.11 08:44:43 TIMER: Check auto-disconnect...
22.11 08:44:57 STATS: vdl.0 cache, locks:2
22.11 08:45:43 TIMER: Check auto-disconnect...
22.11 08:45:57 STATS: vdl.0 cache, locks:2
22.11 08:46:43 TIMER: Check auto-disconnect...
22.11 08:46:57 STATS: vdl.0 cache, locks:2
22.11 08:47:43 TIMER: Check auto-disconnect...
22.11 08:47:57 STATS: vdl.0 cache, locks:2
22.11 08:48:43 TIMER: Check auto-disconnect...
22.11 08:48:57 STATS: vdl.0 cache, locks:2
22.11 08:49:43 TIMER: Check auto-disconnect...
22.11 08:49:57 STATS: vdl.0 cache, locks:2
22.11 08:50:43 TIMER: Check auto-disconnect...
22.11 08:50:57 STATS: vdl.0 cache, locks:2
22.11 08:51:43 TIMER: Check auto-disconnect...
22.11 08:51:57 STATS: vdl.0 cache, locks:2
22.11 08:52:43 TIMER: Check auto-disconnect...
22.11 08:52:57 STATS: vdl.0 cache, locks:2
22.11 08:53:43 TIMER: Check auto-disconnect...
22.11 08:53:57 STATS: vdl.0 cache, locks:2
22.11 08:54:43 TIMER: Check auto-disconnect...
22.11 08:54:44 NET: Client (conid:84848446) connected to vdl.0 (clients:2)
22.11 08:54:46 ++ NET: null req: user.login { password => ukfveh, name => nelli, messageType => user.login }
22.11 08:54:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'nelli' AND Password = 'ukfveh'
22.11 08:54:46 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'nelli' AND Password = 'ukfveh', _type => core/server.query }
22.11 08:54:46 -<<-: core/server.query { list => {{ name => nelli, networkid => , isbanned => false, id => 124 }}, errorCode => ok, _type => core/server.query }
22.11 08:54:46 STATS: vdl.0 cache connection, 1720 calls, total 1.13871932029724 sec spent, avg 0.66 ms
22.11 08:54:46 ->>-: core/user.isOnlineID { id => 124, _type => core/user.isOnlineID }
22.11 08:54:46 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
22.11 08:54:46 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 124 }
22.11 08:54:46 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
22.11 08:54:46 NET: Client (name:nelli conid:67707506 TCP) disconnected from vdl.0 (clients:1)
22.11 08:54:46 DB: SELECT id FROM battle WHERE firstid=124 OR secondid=124 AND finished <> true
22.11 08:54:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=124 OR secondid=124 AND finished <> true, _type => core/server.query }
22.11 08:54:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
22.11 08:54:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 08:54:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
22.11 08:54:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 08:54:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
22.11 08:54:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 124, _type => core/cache.update }
22.11 08:54:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
22.11 08:54:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 124, _type => core/cache.update }
22.11 08:54:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 08:54:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 124, _type => core/user.logoutPost }
22.11 08:54:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
22.11 08:54:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
22.11 08:54:55 TRACE: User not logon yet.
22.11 08:54:57 NET: Client (name:null conid:84848446 TCP) disconnected from vdl.0 (clients:0)
22.11 08:54:57 NET: Client (conid:85754940) connected to vdl.0 (clients:1)
22.11 08:54:57 ++ NET: null req: user.login { password => ukfveh, name => nelli, messageType => user.login }
22.11 08:54:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'nelli' AND Password = 'ukfveh'
22.11 08:54:57 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'nelli' AND Password = 'ukfveh', _type => core/server.query }
22.11 08:54:57 -<<-: core/server.query { list => {{ name => nelli, networkid => , isbanned => false, id => 124 }}, errorCode => ok, _type => core/server.query }
22.11 08:54:57 ->>-: core/user.isOnlineID { id => 124, _type => core/user.isOnlineID }
22.11 08:54:57 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
22.11 08:54:57 ->>-: core/cache.get { type => user, v => -1, id => 124, _type => core/cache.get }
22.11 08:54:57 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => nelli, deleted => false, year => , email => nlabunskaya@mail.ru, networktype =>   , password => ukfveh, isbanned => false, regdate => 2016-11-20 21:37:47.064605+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479726317, lastLoginDate => 327, money => 1, lastLoadDate => 1123 }, effects => { list => [] } }}, version => 0, id => 124 } }
22.11 08:54:57 ->>-: core/cache.get { type => questdata, v => -1, id => 124, _type => core/cache.get }
22.11 08:54:57 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 124 } }
22.11 08:54:57 NET: Client login (conid:85754940, id:124, name:nelli)
22.11 08:54:57 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 124, _type => core/user.loginPost, ipAddr => 217.118.93.152 }
22.11 08:54:57 -<<-: core/user.loginPost { _type => core/user.loginPost }
22.11 08:54:57 DB: SELECT token FROM tokens WHERE userid = 124
22.11 08:54:57 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 124, _type => core/server.query }
22.11 08:54:57 -<<-: core/server.query { list => {{ token => ad298cff9fc85abf8cf7c9599dc4302b }}, errorCode => ok, _type => core/server.query }
22.11 08:54:57 == NET: nelli ret: user.login { name => nelli, type => user.login, errorCode => ok, id => 124, token => ad298cff9fc85abf8cf7c9599dc4302b }
22.11 08:54:57 == NET: nelli ret: user.join { name => nelli, type => user.join }
22.11 08:54:57 STATS: vdl.0 cache, locks:2
22.11 08:54:57 ++ NET: nelli req: user.data { messageType => user.data }
22.11 08:54:57 ->>-: vdl/cache.user.getData { userId => 124, _type => vdl/cache.user.getData, money => 1 }
22.11 08:54:57 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 1 }
22.11 08:54:57 TIME: user.data 0.29 ms
22.11 08:54:57 == NET: nelli ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 1 }
22.11 08:55:02 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 124, _type => core/cache.update }
22.11 08:55:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 08:55:43 TIMER: Check auto-disconnect...
22.11 08:55:56 ++ NET: nelli req: user.ping { messageType => user.ping, msg => ok }
22.11 08:55:56 TIME: user.ping 0.13 ms
22.11 08:55:56 == NET: nelli ret: user.ping { type => user.ping, errorCode => ok }
22.11 08:55:57 STATS: vdl.0 cache, locks:2
22.11 08:56:43 TIMER: Check auto-disconnect...
22.11 08:56:56 ++ NET: nelli req: user.ping { messageType => user.ping, msg => ok }
22.11 08:56:56 TIME: user.ping 0.14 ms
22.11 08:56:56 == NET: nelli ret: user.ping { type => user.ping, errorCode => ok }
22.11 08:56:57 STATS: vdl.0 cache, locks:2
22.11 08:57:43 TIMER: Check auto-disconnect...
22.11 08:57:57 STATS: vdl.0 cache, locks:2
22.11 08:58:43 TIMER: Check auto-disconnect...
22.11 08:58:57 STATS: vdl.0 cache, locks:2
22.11 08:59:43 TIMER: Check auto-disconnect...
22.11 08:59:57 STATS: vdl.0 cache, locks:2
