14.11 12:00:28 TIMER: Check auto-disconnect...
14.11 12:00:30 STATS: vdl.0 cache, locks:2
14.11 12:01:28 TIMER: Check auto-disconnect...
14.11 12:01:30 STATS: vdl.0 cache, locks:2
14.11 12:02:28 TIMER: Check auto-disconnect...
14.11 12:02:30 STATS: vdl.0 cache, locks:2
14.11 12:03:28 TIMER: Check auto-disconnect...
14.11 12:03:30 STATS: vdl.0 cache, locks:2
14.11 12:04:28 TIMER: Check auto-disconnect...
14.11 12:04:30 STATS: vdl.0 cache, locks:2
14.11 12:05:05 NET: Client (conid:76583716) connected to vdl.0 (clients:1)
14.11 12:05:06 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI0 }
14.11 12:05:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid124' AND Password = 'uid124'
14.11 12:05:06 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid124' AND Password = 'uid124', _type => core/server.query }
14.11 12:05:06 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:05:06 STATS: vdl.0 cache connection, 1577 calls, total 1.12381601333618 sec spent, avg 0.71 ms
14.11 12:05:06 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
14.11 12:05:08 NET: Client (name:null conid:76583716 TCP) disconnected from vdl.0 (clients:0)
14.11 12:05:08 NET: Client (conid:95822063) connected to vdl.0 (clients:1)
14.11 12:05:08 ++ NET: null req: user.register { messageType => user.register }
14.11 12:05:08 DB: SELECT * FROM users
14.11 12:05:08 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {{ city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-10 11:48:59.9391+00, language =>   , id => 1, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478779175,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, language => en, id => 2, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:08:05.144895+00, language =>   , id => 3, deleted => false }, { city => , password => uid4, name => uid4, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:24:23.638304+00, language =>   , id => 4, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:28:38.741567+00, language =>   , id => 5, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1479119901,"lastLoginDate":319,"lastLoadDate":1115},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, language => en, id => 6, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 13:32:51.765479+00, language =>   , id => 7, deleted => false }, { city => , password => uid11, name => uid11, year => null, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479067417,"lastLoginDate":319,"lastLoadDate":1115},"effects":{"list":[]}}, networktype =>   , email => null, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, language => en, id => 11, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 15:37:47.142701+00, language =>   , id => 8, deleted => false }, { city => , password => uid9, name => uid9, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-11 07:57:55.30687+00, language =>   , id => 9, deleted => false }, { city => , password => uid10, name => uid10, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478975056,"lastLoginDate":318,"lastLoadDate":1114},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-11 16:44:40.114978+00, language => en, id => 10, deleted => false }}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 == NET: null ret: user.auth { type => user.auth, token => dWlkMTI= }
14.11 12:05:08 DB: SELECT ID FROM Users WHERE Name = 'uid12'
14.11 12:05:08 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid12', _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 DB: SELECT nextval('Users_id_seq') AS id
14.11 12:05:08 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {{ id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 ->>-: core/user.register { password => uid12, name => uid12, fullParams => { password => uid12, name => uid12, networkid => , networktype => , messageType => user.register, id => 12 }, networkid => , connectionID => 95822063, networktype => , email => , id => 12, _type => core/user.register }
14.11 12:05:08 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
14.11 12:05:08 -<<-: core/user.registerResponse { password => uid12, name => uid12, _isNotify => true, fullParams => { password => uid12, name => uid12, networkid => , networktype => , messageType => user.register, id => 12 }, networkid => , connectionID => 95822063, networktype => , email => , id => 12, _type => core/user.registerResponse }
14.11 12:05:08 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:05:08 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 == NET: null ret: user.register { type => user.register, errorCode => ok, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:05:08 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:05:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:05:08 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:05:08 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:05:08 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:05:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => 1, language =>   , region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, hints => 15 }, effects => { list => [] } }}, version => 19, id => 12 } }
14.11 12:05:08 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:05:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 12 } }
14.11 12:05:08 NET: Client login (conid:95822063, id:12, name:uid12)
14.11 12:05:08 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:05:08 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:05:08 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:05:08 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 DB: SELECT ID FROM TempUserLogins WHERE UserID = 12 AND Date = 'today'::timestamp
14.11 12:05:08 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 12 AND Date = 'today'::timestamp, _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (12, 'today'::timestamp)
14.11 12:05:08 ++ NET: uid12 req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:05:08 == NET: uid12 ret: user.login { name => uid12, type => user.login, errorCode => ok, id => 12, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:05:08 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
14.11 12:05:08 == NET: uid12 ret: user.join { name => uid12, type => user.join }
14.11 12:05:08 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (12, 'today'::timestamp), _type => core/server.pending }} }
14.11 12:05:08 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:05:08 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.11 12:05:08 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:05:08 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
14.11 12:05:08 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479125108, lastLoginDate => 319, lastLoadDate => 1115 } }}, type => user, unlock => true, id => 12, _type => core/cache.update }
14.11 12:05:08 -<<-: core/cache.update { errorCode => ok, version => 20, _type => core/cache.update }
14.11 12:05:08 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
14.11 12:05:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.11 12:05:08 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
14.11 12:05:08 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.11 12:05:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:05:08 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:05:08 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:05:08 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:05:08 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:05:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1479125108, lastLoginDate => 319, lastLoadDate => 1115, hints => 15 }, effects => { list => [] } }}, version => 20, id => 12 } }
14.11 12:05:08 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:05:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 12 } }
14.11 12:05:08 NET: Client login (conid:95822063, id:12, name:uid12)
14.11 12:05:08 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:05:08 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:05:08 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:05:08 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:05:08 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:05:10 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:05:10 TIME: user.ping 0.15 ms
14.11 12:05:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
14.11 12:05:15 -<<-: core/cache.update { errorCode => ok, version => 21, _type => core/cache.update }
14.11 12:05:15 NET: Client (name:uid12 conid:95822063 TCP) disconnected from vdl.0 (clients:0)
14.11 12:05:15 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
14.11 12:05:15 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
14.11 12:05:15 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:05:15 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:05:15 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.11 12:05:15 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:05:15 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
14.11 12:05:15 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
14.11 12:05:15 -<<-: core/cache.update { errorCode => ok, version => 22, _type => core/cache.update }
14.11 12:05:15 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
14.11 12:05:15 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.11 12:05:15 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
14.11 12:05:15 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.11 12:05:20 NET: Client (conid:45591233) connected to vdl.0 (clients:1)
14.11 12:05:21 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:05:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:05:21 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:05:21 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:05:21 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:05:21 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:05:21 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:05:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1479125108, lastLoginDate => 319, lastLoadDate => 1115, hints => 15 }, effects => { list => [] } }}, version => 22, id => 12 } }
14.11 12:05:21 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:05:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 12 } }
14.11 12:05:21 NET: Client login (conid:45591233, id:12, name:uid12)
14.11 12:05:21 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:05:21 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:05:21 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:05:21 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:05:21 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:05:21 == NET: uid12 ret: user.login { name => uid12, type => user.login, errorCode => ok, id => 12, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:05:21 == NET: uid12 ret: user.join { name => uid12, type => user.join }
14.11 12:05:25 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:05:25 TIME: user.ping 0.16 ms
14.11 12:05:25 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:05:28 TIMER: Check auto-disconnect...
14.11 12:05:30 STATS: vdl.0 cache, locks:4
14.11 12:05:30 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
14.11 12:05:30 -<<-: core/cache.update { errorCode => ok, version => 23, _type => core/cache.update }
14.11 12:05:32 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:05:32 TIME: user.ping 0.12 ms
14.11 12:05:32 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:05:39 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:05:39 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:05:39 TIME: user.ping 0.17 ms
14.11 12:06:28 TIMER: Check auto-disconnect...
14.11 12:06:30 STATS: vdl.0 cache, locks:4
14.11 12:07:28 TIMER: Check auto-disconnect...
14.11 12:07:30 STATS: vdl.0 cache, locks:4
14.11 12:08:16 NET: Client (name:uid12 conid:45591233 TCP) disconnected from vdl.0 (clients:0)
14.11 12:08:16 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
14.11 12:08:16 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
14.11 12:08:16 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:08:16 STATS: vdl.0 cache connection, 1614 calls, total 1.15007543563843 sec spent, avg 0.71 ms
14.11 12:08:16 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:08:16 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.11 12:08:16 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:08:16 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
14.11 12:08:16 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
14.11 12:08:16 -<<-: core/cache.update { errorCode => ok, version => 24, _type => core/cache.update }
14.11 12:08:16 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
14.11 12:08:16 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.11 12:08:16 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
14.11 12:08:16 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.11 12:08:28 TIMER: Check auto-disconnect...
14.11 12:08:29 NET: Client (conid:94288712) connected to vdl.0 (clients:1)
14.11 12:08:30 STATS: vdl.0 cache, locks:2
14.11 12:08:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:08:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:08:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:08:30 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:08:30 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:08:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:08:30 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:08:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, year => , email => mail, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => , language =>   , networkid => , params => {}}, version => 0, id => 12 } }
14.11 12:08:30 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:08:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 12 } }
14.11 12:08:30 NET: Client login (conid:94288712, id:12, name:uid12)
14.11 12:08:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:08:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:08:30 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:08:30 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:08:30 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:08:30 DB: SELECT ID FROM TempUserLogins WHERE UserID = 12 AND Date = 'today'::timestamp
14.11 12:08:30 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 12 AND Date = 'today'::timestamp, _type => core/server.query }
14.11 12:08:30 -<<-: core/server.query { list => {{ id => 139 }}, errorCode => ok, _type => core/server.query }
14.11 12:08:30 == NET: uid12 ret: user.login { name => uid12, type => user.login, errorCode => ok, id => 12, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:08:30 == NET: uid12 ret: user.join { name => uid12, type => user.join }
14.11 12:08:34 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:08:34 TIME: user.ping 0.12 ms
14.11 12:08:34 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:08:39 NET: Client (name:uid12 conid:94288712 TCP) disconnected from vdl.0 (clients:0)
14.11 12:08:39 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
14.11 12:08:39 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
14.11 12:08:39 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:08:39 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:08:39 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.11 12:08:39 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:08:39 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
14.11 12:08:39 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479125310, lastLoginDate => 319, lastLoadDate => 1115 }, effects => { list => [] } }}, type => user, unlock => true, id => 12, _type => core/cache.update }
14.11 12:08:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.11 12:08:39 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
14.11 12:08:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.11 12:08:39 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
14.11 12:08:39 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.11 12:08:42 NET: Client (conid:85684933) connected to vdl.0 (clients:1)
14.11 12:08:43 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:08:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:08:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:08:43 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:08:43 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:08:43 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:08:43 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:08:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, year => , email => mail, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479125310, lastLoginDate => 319, lastLoadDate => 1115 }, effects => { list => [] } }}, version => 1, id => 12 } }
14.11 12:08:43 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:08:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 12 } }
14.11 12:08:43 NET: Client login (conid:85684933, id:12, name:uid12)
14.11 12:08:43 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:08:43 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:08:43 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:08:43 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:08:43 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:08:43 == NET: uid12 ret: user.login { name => uid12, type => user.login, errorCode => ok, id => 12, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:08:43 == NET: uid12 ret: user.join { name => uid12, type => user.join }
14.11 12:08:47 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:08:47 TIME: user.ping 0.11 ms
14.11 12:08:47 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:08:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
14.11 12:08:50 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.11 12:09:28 TIMER: Check auto-disconnect...
14.11 12:09:30 STATS: vdl.0 cache, locks:4
14.11 12:10:28 TIMER: Check auto-disconnect...
14.11 12:10:30 STATS: vdl.0 cache, locks:4
14.11 12:11:28 TIMER: Check auto-disconnect...
14.11 12:11:30 STATS: vdl.0 cache, locks:4
14.11 12:12:28 TIMER: Check auto-disconnect...
14.11 12:12:30 STATS: vdl.0 cache, locks:4
14.11 12:12:31 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:12:31 TIME: user.ping 0.12 ms
14.11 12:12:31 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:12:38 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:12:38 TIME: user.ping 0.12 ms
14.11 12:12:38 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:13:28 TIMER: Check auto-disconnect...
14.11 12:13:30 STATS: vdl.0 cache, locks:4
14.11 12:13:35 NET: Client (name:uid12 conid:85684933 TCP) disconnected from vdl.0 (clients:0)
14.11 12:13:35 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
14.11 12:13:35 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
14.11 12:13:35 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:13:35 STATS: vdl.0 cache connection, 1638 calls, total 1.16058087348938 sec spent, avg 0.71 ms
14.11 12:13:35 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:13:35 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.11 12:13:35 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:13:35 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
14.11 12:13:35 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
14.11 12:13:35 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.11 12:13:35 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
14.11 12:13:35 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.11 12:13:35 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
14.11 12:13:35 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.11 12:13:38 NET: Client (conid:49077305) connected to vdl.0 (clients:1)
14.11 12:13:39 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:13:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:13:39 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:13:39 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:13:39 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:13:39 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:13:39 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:13:39 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, year => , email => mail, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479125310, lastLoginDate => 319, lastLoadDate => 1115 }, effects => { list => [] } }}, version => 3, id => 12 } }
14.11 12:13:39 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:13:39 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 12 } }
14.11 12:13:39 NET: Client login (conid:49077305, id:12, name:uid12)
14.11 12:13:39 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:13:39 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:13:39 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:13:39 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:13:39 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:13:39 == NET: uid12 ret: user.login { name => uid12, type => user.login, errorCode => ok, id => 12, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:13:39 == NET: uid12 ret: user.join { name => uid12, type => user.join }
14.11 12:13:43 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:13:43 TIME: user.ping 0.17 ms
14.11 12:13:43 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:13:45 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
14.11 12:13:45 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
14.11 12:13:50 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:13:50 TIME: user.ping 0.14 ms
14.11 12:13:50 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:13:57 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:13:57 TIME: user.ping 0.13 ms
14.11 12:13:57 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:14:04 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:14:04 TIME: user.ping 0.14 ms
14.11 12:14:04 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:14:12 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:14:12 TIME: user.ping 0.15 ms
14.11 12:14:12 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:14:19 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:14:19 TIME: user.ping 0.12 ms
14.11 12:14:19 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:14:28 TIMER: Check auto-disconnect...
14.11 12:14:30 STATS: vdl.0 cache, locks:4
14.11 12:15:21 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:15:21 TIME: user.ping 0.16 ms
14.11 12:15:21 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:15:25 NET: Client (name:uid12 conid:49077305 TCP) disconnected from vdl.0 (clients:0)
14.11 12:15:25 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
14.11 12:15:25 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
14.11 12:15:25 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:15:25 STATS: vdl.0 cache connection, 1650 calls, total 1.16634845733643 sec spent, avg 0.71 ms
14.11 12:15:25 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:15:25 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.11 12:15:25 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:15:25 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
14.11 12:15:25 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
14.11 12:15:25 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
14.11 12:15:25 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
14.11 12:15:25 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.11 12:15:25 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
14.11 12:15:25 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.11 12:15:28 TIMER: Check auto-disconnect...
14.11 12:15:28 NET: Client (conid:87233850) connected to vdl.0 (clients:1)
14.11 12:15:29 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:15:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:15:29 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:15:29 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:15:29 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:15:29 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:15:29 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:15:29 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, year => , email => mail, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479125310, lastLoginDate => 319, lastLoadDate => 1115 }, effects => { list => [] } }}, version => 5, id => 12 } }
14.11 12:15:29 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:15:29 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 3, id => 12 } }
14.11 12:15:29 NET: Client login (conid:87233850, id:12, name:uid12)
14.11 12:15:29 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:15:29 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:15:29 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:15:29 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:15:29 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:15:29 == NET: uid12 ret: user.login { name => uid12, type => user.login, errorCode => ok, id => 12, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:15:29 == NET: uid12 ret: user.join { name => uid12, type => user.join }
14.11 12:15:30 STATS: vdl.0 cache, locks:4
14.11 12:15:33 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:15:33 TIME: user.ping 0.13 ms
14.11 12:15:33 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:15:35 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
14.11 12:15:35 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
14.11 12:15:40 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:15:40 TIME: user.ping 0.12 ms
14.11 12:15:40 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:15:48 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:15:48 TIME: user.ping 0.13 ms
14.11 12:15:48 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:16:20 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:16:20 TIME: user.ping 0.13 ms
14.11 12:16:20 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:16:28 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:16:28 TIME: user.ping 0.21 ms
14.11 12:16:28 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:16:28 TIMER: Check auto-disconnect...
14.11 12:16:30 STATS: vdl.0 cache, locks:4
14.11 12:16:35 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:16:35 TIME: user.ping 0.12 ms
14.11 12:16:35 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:17:28 TIMER: Check auto-disconnect...
14.11 12:17:30 STATS: vdl.0 cache, locks:4
14.11 12:18:28 TIMER: Check auto-disconnect...
14.11 12:18:30 STATS: vdl.0 cache, locks:4
14.11 12:19:28 TIMER: Check auto-disconnect...
14.11 12:19:30 STATS: vdl.0 cache, locks:4
14.11 12:20:28 TIMER: Check auto-disconnect...
14.11 12:20:30 STATS: vdl.0 cache, locks:4
14.11 12:21:28 TIMER: Check auto-disconnect...
14.11 12:21:30 STATS: vdl.0 cache, locks:4
14.11 12:22:06 NET: Client (name:uid12 conid:87233850 TCP) disconnected from vdl.0 (clients:0)
14.11 12:22:06 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
14.11 12:22:06 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
14.11 12:22:06 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:22:06 STATS: vdl.0 cache connection, 1662 calls, total 1.17118453979492 sec spent, avg 0.7 ms
14.11 12:22:06 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:22:06 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.11 12:22:06 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:22:06 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
14.11 12:22:06 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
14.11 12:22:06 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
14.11 12:22:06 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
14.11 12:22:06 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
14.11 12:22:06 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
14.11 12:22:06 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.11 12:22:28 TIMER: Check auto-disconnect...
14.11 12:22:30 STATS: vdl.0 cache, locks:2
14.11 12:23:05 NET: Client (conid:82905528) connected to vdl.0 (clients:1)
14.11 12:23:06 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:23:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:23:06 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:23:06 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:23:06 STATS: vdl.0 cache connection, 1667 calls, total 1.17343831062317 sec spent, avg 0.7 ms
14.11 12:23:06 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:23:06 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:23:06 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:23:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, year => , email => mail, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479125310, lastLoginDate => 319, lastLoadDate => 1115 }, effects => { list => [] } }}, version => 0, id => 12 } }
14.11 12:23:06 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:23:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 12 } }
14.11 12:23:06 NET: Client login (conid:82905528, id:12, name:uid12)
14.11 12:23:06 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:23:06 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:23:06 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:23:06 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:23:06 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:23:06 == NET: uid12 ret: user.login { name => uid12, type => user.login, errorCode => ok, id => 12, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:23:06 == NET: uid12 ret: user.join { name => uid12, type => user.join }
14.11 12:23:11 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:23:11 TIME: user.ping 0.12 ms
14.11 12:23:11 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:23:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
14.11 12:23:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.11 12:23:28 TIMER: Check auto-disconnect...
14.11 12:23:30 STATS: vdl.0 cache, locks:4
14.11 12:23:33 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:23:33 TIME: user.ping 0.12 ms
14.11 12:23:33 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:24:23 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:24:23 TIME: user.ping 0.13 ms
14.11 12:24:23 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:24:28 TIMER: Check auto-disconnect...
14.11 12:24:30 STATS: vdl.0 cache, locks:4
14.11 12:25:28 TIMER: Check auto-disconnect...
14.11 12:25:30 STATS: vdl.0 cache, locks:4
14.11 12:26:28 TIMER: Check auto-disconnect...
14.11 12:26:30 STATS: vdl.0 cache, locks:4
14.11 12:27:22 NET: Client (name:uid12 conid:82905528 TCP) disconnected from vdl.0 (clients:0)
14.11 12:27:22 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
14.11 12:27:22 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
14.11 12:27:22 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.11 12:27:22 STATS: vdl.0 cache connection, 1674 calls, total 1.17692232131958 sec spent, avg 0.7 ms
14.11 12:27:22 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:27:22 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.11 12:27:22 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.11 12:27:22 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
14.11 12:27:22 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
14.11 12:27:22 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.11 12:27:22 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
14.11 12:27:22 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.11 12:27:22 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
14.11 12:27:22 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.11 12:27:28 TIMER: Check auto-disconnect...
14.11 12:27:30 STATS: vdl.0 cache, locks:2
14.11 12:28:28 TIMER: Check auto-disconnect...
14.11 12:28:30 STATS: vdl.0 cache, locks:2
14.11 12:29:28 TIMER: Check auto-disconnect...
14.11 12:29:30 STATS: vdl.0 cache, locks:2
14.11 12:30:28 TIMER: Check auto-disconnect...
14.11 12:30:30 STATS: vdl.0 cache, locks:2
14.11 12:31:28 TIMER: Check auto-disconnect...
14.11 12:31:30 STATS: vdl.0 cache, locks:2
14.11 12:32:28 TIMER: Check auto-disconnect...
14.11 12:32:30 STATS: vdl.0 cache, locks:2
14.11 12:33:28 TIMER: Check auto-disconnect...
14.11 12:33:30 STATS: vdl.0 cache, locks:2
14.11 12:34:28 TIMER: Check auto-disconnect...
14.11 12:34:30 STATS: vdl.0 cache, locks:2
14.11 12:35:28 TIMER: Check auto-disconnect...
14.11 12:35:30 STATS: vdl.0 cache, locks:2
14.11 12:36:28 TIMER: Check auto-disconnect...
14.11 12:36:30 STATS: vdl.0 cache, locks:2
14.11 12:37:28 TIMER: Check auto-disconnect...
14.11 12:37:30 STATS: vdl.0 cache, locks:2
14.11 12:38:28 TIMER: Check auto-disconnect...
14.11 12:38:30 STATS: vdl.0 cache, locks:2
14.11 12:39:28 TIMER: Check auto-disconnect...
14.11 12:39:30 STATS: vdl.0 cache, locks:2
14.11 12:40:28 TIMER: Check auto-disconnect...
14.11 12:40:30 STATS: vdl.0 cache, locks:2
14.11 12:41:11 NET: Client (conid:87010924) connected to vdl.0 (clients:1)
14.11 12:41:13 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTI= }
14.11 12:41:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12'
14.11 12:41:13 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid12' AND Password = 'uid12', _type => core/server.query }
14.11 12:41:13 -<<-: core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
14.11 12:41:13 STATS: vdl.0 cache connection, 1679 calls, total 1.18020224571228 sec spent, avg 0.7 ms
14.11 12:41:13 ->>-: core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
14.11 12:41:13 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.11 12:41:13 ->>-: core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
14.11 12:41:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, year => , email => mail, networktype =>   , password => uid12, isbanned => false, regdate => 2016-11-14 12:05:08.368578+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479125310, lastLoginDate => 319, lastLoadDate => 1115 }, effects => { list => [] } }}, version => 0, id => 12 } }
14.11 12:41:13 ->>-: core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
14.11 12:41:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 12 } }
14.11 12:41:13 NET: Client login (conid:87010924, id:12, name:uid12)
14.11 12:41:13 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.11 12:41:13 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.11 12:41:13 DB: SELECT token FROM tokens WHERE userid = 12
14.11 12:41:13 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 12, _type => core/server.query }
14.11 12:41:13 -<<-: core/server.query { list => {{ token => c77fd91fe6aa6da7f891cd46f9c19f76 }, { token => 410a8336ca702fbfc8b0abd7075eb930 }}, errorCode => ok, _type => core/server.query }
14.11 12:41:13 == NET: uid12 ret: user.login { name => uid12, type => user.login, errorCode => ok, id => 12, token => c77fd91fe6aa6da7f891cd46f9c19f76 }
14.11 12:41:13 == NET: uid12 ret: user.join { name => uid12, type => user.join }
14.11 12:41:16 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:41:16 TIME: user.ping 0.14 ms
14.11 12:41:16 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:41:20 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
14.11 12:41:20 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.11 12:41:28 TIMER: Check auto-disconnect...
14.11 12:41:30 STATS: vdl.0 cache, locks:4
14.11 12:41:39 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:41:39 TIME: user.ping 0.14 ms
14.11 12:41:39 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:42:01 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:42:01 TIME: user.ping 0.12 ms
14.11 12:42:01 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:42:23 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:42:23 TIME: user.ping 0.14 ms
14.11 12:42:23 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:42:28 TIMER: Check auto-disconnect...
14.11 12:42:30 STATS: vdl.0 cache, locks:4
14.11 12:42:45 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:42:45 TIME: user.ping 0.14 ms
14.11 12:42:45 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:43:07 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:43:07 TIME: user.ping 0.14 ms
14.11 12:43:07 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:43:28 TIMER: Check auto-disconnect...
14.11 12:43:30 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:43:30 TIME: user.ping 0.13 ms
14.11 12:43:30 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:43:30 STATS: vdl.0 cache, locks:4
14.11 12:43:52 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:43:52 TIME: user.ping 0.16 ms
14.11 12:43:52 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:44:14 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:44:14 TIME: user.ping 0.17 ms
14.11 12:44:14 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:44:28 TIMER: Check auto-disconnect...
14.11 12:44:30 STATS: vdl.0 cache, locks:4
14.11 12:44:36 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:44:36 TIME: user.ping 0.14 ms
14.11 12:44:36 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:44:58 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:44:58 TIME: user.ping 0.1 ms
14.11 12:44:58 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:45:20 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:45:20 TIME: user.ping 0.15 ms
14.11 12:45:20 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:45:28 TIMER: Check auto-disconnect...
14.11 12:45:30 STATS: vdl.0 cache, locks:4
14.11 12:45:42 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:45:42 TIME: user.ping 0.15 ms
14.11 12:45:42 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:46:04 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:46:04 TIME: user.ping 0.13 ms
14.11 12:46:04 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:46:26 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:46:26 TIME: user.ping 0.21 ms
14.11 12:46:26 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:46:28 TIMER: Check auto-disconnect...
14.11 12:46:30 STATS: vdl.0 cache, locks:4
14.11 12:46:49 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:46:49 TIME: user.ping 0.14 ms
14.11 12:46:49 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:47:11 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:47:11 TIME: user.ping 0.12 ms
14.11 12:47:11 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:47:28 TIMER: Check auto-disconnect...
14.11 12:47:30 STATS: vdl.0 cache, locks:4
14.11 12:47:33 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:47:33 TIME: user.ping 0.14 ms
14.11 12:47:33 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:47:55 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:47:55 TIME: user.ping 0.12 ms
14.11 12:47:55 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:48:17 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:48:17 TIME: user.ping 0.13 ms
14.11 12:48:17 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:48:28 TIMER: Check auto-disconnect...
14.11 12:48:30 STATS: vdl.0 cache, locks:4
14.11 12:48:39 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:48:39 TIME: user.ping 0.16 ms
14.11 12:48:39 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:49:01 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:49:01 TIME: user.ping 0.15 ms
14.11 12:49:01 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:49:23 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:49:23 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:49:23 TIME: user.ping 0.14 ms
14.11 12:49:28 TIMER: Check auto-disconnect...
14.11 12:49:30 STATS: vdl.0 cache, locks:4
14.11 12:49:45 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:49:45 TIME: user.ping 0.12 ms
14.11 12:49:45 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:50:07 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:50:07 TIME: user.ping 0.14 ms
14.11 12:50:07 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:50:28 TIMER: Check auto-disconnect...
14.11 12:50:29 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:50:29 TIME: user.ping 0.15 ms
14.11 12:50:29 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:50:30 STATS: vdl.0 cache, locks:4
14.11 12:50:52 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:50:52 TIME: user.ping 0.21 ms
14.11 12:50:52 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:51:13 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:51:13 TIME: user.ping 0.16 ms
14.11 12:51:13 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:51:28 TIMER: Check auto-disconnect...
14.11 12:51:30 STATS: vdl.0 cache, locks:4
14.11 12:51:35 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:51:35 TIME: user.ping 0.15 ms
14.11 12:51:35 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:51:57 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:51:57 TIME: user.ping 0.17 ms
14.11 12:51:57 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:52:19 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:52:19 TIME: user.ping 0.15 ms
14.11 12:52:19 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:52:28 TIMER: Check auto-disconnect...
14.11 12:52:30 STATS: vdl.0 cache, locks:4
14.11 12:52:41 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:52:41 TIME: user.ping 0.13 ms
14.11 12:52:41 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:53:04 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:53:04 TIME: user.ping 0.1 ms
14.11 12:53:04 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:53:26 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:53:26 TIME: user.ping 0.11 ms
14.11 12:53:26 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:53:28 TIMER: Check auto-disconnect...
14.11 12:53:30 STATS: vdl.0 cache, locks:4
14.11 12:53:48 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:53:48 TIME: user.ping 0.17 ms
14.11 12:53:48 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:54:10 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:54:10 TIME: user.ping 0.15 ms
14.11 12:54:10 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:54:28 TIMER: Check auto-disconnect...
14.11 12:54:30 STATS: vdl.0 cache, locks:4
14.11 12:54:31 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:54:31 TIME: user.ping 0.12 ms
14.11 12:54:31 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:54:53 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:54:53 TIME: user.ping 0.13 ms
14.11 12:54:53 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:55:16 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:55:16 TIME: user.ping 0.14 ms
14.11 12:55:16 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:55:28 TIMER: Check auto-disconnect...
14.11 12:55:30 STATS: vdl.0 cache, locks:4
14.11 12:55:38 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:55:38 TIME: user.ping 0.15 ms
14.11 12:55:38 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:56:00 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:56:00 TIME: user.ping 0.12 ms
14.11 12:56:00 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:56:22 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:56:22 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:56:22 TIME: user.ping 0.16 ms
14.11 12:56:28 TIMER: Check auto-disconnect...
14.11 12:56:30 STATS: vdl.0 cache, locks:4
14.11 12:56:44 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:56:44 TIME: user.ping 0.21 ms
14.11 12:56:44 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:57:06 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:57:06 TIME: user.ping 0.13 ms
14.11 12:57:06 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:57:28 TIMER: Check auto-disconnect...
14.11 12:57:28 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:57:28 TIME: user.ping 0.14 ms
14.11 12:57:28 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:57:30 STATS: vdl.0 cache, locks:4
14.11 12:57:50 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:57:50 TIME: user.ping 0.14 ms
14.11 12:57:50 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:58:12 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:58:12 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:58:12 TIME: user.ping 0.17 ms
14.11 12:58:28 TIMER: Check auto-disconnect...
14.11 12:58:30 STATS: vdl.0 cache, locks:4
14.11 12:58:35 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:58:35 TIME: user.ping 0.14 ms
14.11 12:58:35 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:58:57 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:58:57 TIME: user.ping 0.18 ms
14.11 12:58:57 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:59:19 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:59:19 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
14.11 12:59:19 TIME: user.ping 0.14 ms
14.11 12:59:28 TIMER: Check auto-disconnect...
14.11 12:59:30 STATS: vdl.0 cache, locks:4
14.11 12:59:41 ++ NET: uid12 req: user.ping { messageType => user.ping, msg => ok }
14.11 12:59:41 TIME: user.ping 0.12 ms
14.11 12:59:41 == NET: uid12 ret: user.ping { type => user.ping, errorCode => ok }
