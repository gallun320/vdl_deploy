25.11 13:00:25 STATS: vdl.0 cache, locks:0
25.11 13:00:43 TIMER: Check auto-disconnect...
25.11 13:01:25 STATS: vdl.0 cache, locks:0
25.11 13:01:43 TIMER: Check auto-disconnect...
25.11 13:02:25 STATS: vdl.0 cache, locks:0
25.11 13:02:43 TIMER: Check auto-disconnect...
25.11 13:03:25 STATS: vdl.0 cache, locks:0
25.11 13:03:43 TIMER: Check auto-disconnect...
25.11 13:04:25 STATS: vdl.0 cache, locks:0
25.11 13:04:43 TIMER: Check auto-disconnect...
25.11 13:05:25 STATS: vdl.0 cache, locks:0
25.11 13:05:43 TIMER: Check auto-disconnect...
25.11 13:06:25 STATS: vdl.0 cache, locks:0
25.11 13:06:43 TIMER: Check auto-disconnect...
25.11 13:07:25 STATS: vdl.0 cache, locks:0
25.11 13:07:43 TIMER: Check auto-disconnect...
25.11 13:08:25 STATS: vdl.0 cache, locks:0
25.11 13:08:43 TIMER: Check auto-disconnect...
25.11 13:09:25 STATS: vdl.0 cache, locks:0
25.11 13:09:43 TIMER: Check auto-disconnect...
25.11 13:10:25 STATS: vdl.0 cache, locks:0
25.11 13:10:43 TIMER: Check auto-disconnect...
25.11 13:11:25 STATS: vdl.0 cache, locks:0
25.11 13:11:43 TIMER: Check auto-disconnect...
25.11 13:12:25 STATS: vdl.0 cache, locks:0
25.11 13:12:43 TIMER: Check auto-disconnect...
25.11 13:13:25 STATS: vdl.0 cache, locks:0
25.11 13:13:43 TIMER: Check auto-disconnect...
25.11 13:14:25 STATS: vdl.0 cache, locks:0
25.11 13:14:43 TIMER: Check auto-disconnect...
25.11 13:15:25 STATS: vdl.0 cache, locks:0
25.11 13:15:43 TIMER: Check auto-disconnect...
25.11 13:16:25 STATS: vdl.0 cache, locks:0
25.11 13:16:43 TIMER: Check auto-disconnect...
25.11 13:17:25 STATS: vdl.0 cache, locks:0
25.11 13:17:43 TIMER: Check auto-disconnect...
25.11 13:18:25 STATS: vdl.0 cache, locks:0
25.11 13:18:43 TIMER: Check auto-disconnect...
25.11 13:19:25 STATS: vdl.0 cache, locks:0
25.11 13:19:43 TIMER: Check auto-disconnect...
25.11 13:20:25 STATS: vdl.0 cache, locks:0
25.11 13:20:43 TIMER: Check auto-disconnect...
25.11 13:21:25 STATS: vdl.0 cache, locks:0
25.11 13:21:43 TIMER: Check auto-disconnect...
25.11 13:22:25 STATS: vdl.0 cache, locks:0
25.11 13:22:43 TIMER: Check auto-disconnect...
25.11 13:23:25 STATS: vdl.0 cache, locks:0
25.11 13:23:43 TIMER: Check auto-disconnect...
25.11 13:24:25 STATS: vdl.0 cache, locks:0
25.11 13:24:43 TIMER: Check auto-disconnect...
25.11 13:25:25 STATS: vdl.0 cache, locks:0
25.11 13:25:43 TIMER: Check auto-disconnect...
25.11 13:26:25 STATS: vdl.0 cache, locks:0
25.11 13:26:43 TIMER: Check auto-disconnect...
25.11 13:27:25 STATS: vdl.0 cache, locks:0
25.11 13:27:43 TIMER: Check auto-disconnect...
25.11 13:28:25 STATS: vdl.0 cache, locks:0
25.11 13:28:43 TIMER: Check auto-disconnect...
25.11 13:29:25 STATS: vdl.0 cache, locks:0
25.11 13:29:43 TIMER: Check auto-disconnect...
25.11 13:30:25 STATS: vdl.0 cache, locks:0
25.11 13:30:43 TIMER: Check auto-disconnect...
25.11 13:31:25 STATS: vdl.0 cache, locks:0
25.11 13:31:43 TIMER: Check auto-disconnect...
25.11 13:32:25 STATS: vdl.0 cache, locks:0
25.11 13:32:43 TIMER: Check auto-disconnect...
25.11 13:33:25 STATS: vdl.0 cache, locks:0
25.11 13:33:43 TIMER: Check auto-disconnect...
25.11 13:34:25 STATS: vdl.0 cache, locks:0
25.11 13:34:43 TIMER: Check auto-disconnect...
25.11 13:35:25 STATS: vdl.0 cache, locks:0
25.11 13:35:43 TIMER: Check auto-disconnect...
25.11 13:35:51 NET: Client (conid:45381144) connected to vdl.0 (clients:1)
25.11 13:35:53 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
25.11 13:35:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
25.11 13:35:53 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
25.11 13:35:53 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
25.11 13:35:53 STATS: vdl.0 cache connection, 2165 calls, total 1.4500298500061 sec spent, avg 0.67 ms
25.11 13:35:53 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
25.11 13:35:53 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.11 13:35:53 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
25.11 13:35:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language =>   , networkid => , params => {}}, version => 0, id => 112 } }
25.11 13:35:53 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
25.11 13:35:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 112 } }
25.11 13:35:53 NET: Client login (conid:45381144, id:112, name:uid112)
25.11 13:35:53 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.11 13:35:53 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.11 13:35:53 DB: SELECT token FROM tokens WHERE userid = 112
25.11 13:35:53 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
25.11 13:35:53 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
25.11 13:35:53 DB: SELECT ID FROM TempUserLogins WHERE UserID = 112 AND Date = 'today'::timestamp
25.11 13:35:53 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 112 AND Date = 'today'::timestamp, _type => core/server.query }
25.11 13:35:53 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.11 13:35:53 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (112, 'today'::timestamp)
25.11 13:35:53 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
25.11 13:35:53 == NET: uid112 ret: user.join { name => uid112, type => user.join }
25.11 13:35:53 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (112, 'today'::timestamp), _type => core/server.pending }} }
25.11 13:35:53 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
25.11 13:35:58 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:35:58 TIME: user.ping 0.12 ms
25.11 13:35:58 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:36:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1480080953, lastLoginDate => 330, lastLoadDate => 1126 }, effects => { list => [] } }}, type => user, unlock => false, id => 112, _type => core/cache.update }
25.11 13:36:00 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.11 13:36:25 STATS: vdl.0 cache, locks:2
25.11 13:36:28 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:36:28 TIME: user.ping 0.13 ms
25.11 13:36:28 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:36:43 TIMER: Check auto-disconnect...
25.11 13:36:57 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:36:57 TIME: user.ping 0.13 ms
25.11 13:36:57 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:37:25 STATS: vdl.0 cache, locks:2
25.11 13:37:27 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:37:27 TIME: user.ping 0.11 ms
25.11 13:37:27 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:37:43 TIMER: Check auto-disconnect...
25.11 13:37:51 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:37:51 TIME: user.ping 0.12 ms
25.11 13:37:51 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:38:11 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:38:11 TIME: user.ping 0.13 ms
25.11 13:38:11 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:38:25 STATS: vdl.0 cache, locks:2
25.11 13:38:32 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:38:32 TIME: user.ping 0.12 ms
25.11 13:38:32 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:38:43 TIMER: Check auto-disconnect...
25.11 13:38:52 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:38:52 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:38:52 TIME: user.ping 0.14 ms
25.11 13:39:15 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:39:15 TIME: user.ping 0.14 ms
25.11 13:39:15 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:39:25 STATS: vdl.0 cache, locks:2
25.11 13:39:38 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:39:38 TIME: user.ping 0.12 ms
25.11 13:39:38 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:39:43 TIMER: Check auto-disconnect...
25.11 13:40:02 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:40:02 TIME: user.ping 0.11 ms
25.11 13:40:02 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:40:24 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:40:24 TIME: user.ping 0.11 ms
25.11 13:40:24 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:40:25 STATS: vdl.0 cache, locks:2
25.11 13:40:43 TIMER: Check auto-disconnect...
25.11 13:40:55 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:40:55 TIME: user.ping 0.12 ms
25.11 13:40:55 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:41:24 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:41:24 TIME: user.ping 0.12 ms
25.11 13:41:24 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:41:25 STATS: vdl.0 cache, locks:2
25.11 13:41:43 TIMER: Check auto-disconnect...
25.11 13:41:48 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:41:48 TIME: user.ping 0.28 ms
25.11 13:41:48 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:42:12 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:42:12 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:42:12 TIME: user.ping 0.1 ms
25.11 13:42:25 STATS: vdl.0 cache, locks:2
25.11 13:42:39 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:42:39 TIME: user.ping 0.13 ms
25.11 13:42:39 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:42:43 TIMER: Check auto-disconnect...
25.11 13:43:05 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:43:05 TIME: user.ping 0.13 ms
25.11 13:43:05 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:43:25 STATS: vdl.0 cache, locks:2
25.11 13:43:30 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:43:30 TIME: user.ping 0.13 ms
25.11 13:43:30 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:43:43 TIMER: Check auto-disconnect...
25.11 13:43:56 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:43:56 TIME: user.ping 0.12 ms
25.11 13:43:56 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:44:21 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:44:21 TIME: user.ping 0.16 ms
25.11 13:44:21 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:44:25 STATS: vdl.0 cache, locks:2
25.11 13:44:43 TIMER: Check auto-disconnect...
25.11 13:44:51 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:44:51 TIME: user.ping 0.19 ms
25.11 13:44:51 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:45:15 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:45:15 TIME: user.ping 0.13 ms
25.11 13:45:15 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:45:25 STATS: vdl.0 cache, locks:2
25.11 13:45:42 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:45:42 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:45:42 TIME: user.ping 0.14 ms
25.11 13:45:43 TIMER: Check auto-disconnect...
25.11 13:46:14 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:46:14 TIME: user.ping 0.16 ms
25.11 13:46:14 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:46:25 STATS: vdl.0 cache, locks:2
25.11 13:46:37 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:46:37 TIME: user.ping 0.1 ms
25.11 13:46:37 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:46:43 TIMER: Check auto-disconnect...
25.11 13:47:00 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:47:00 TIME: user.ping 0.14 ms
25.11 13:47:00 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:47:23 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:47:23 TIME: user.ping 0.11 ms
25.11 13:47:23 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:47:25 STATS: vdl.0 cache, locks:2
25.11 13:47:43 TIMER: Check auto-disconnect...
25.11 13:47:46 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:47:46 TIME: user.ping 0.13 ms
25.11 13:47:46 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:48:09 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:48:09 TIME: user.ping 0.16 ms
25.11 13:48:09 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:48:25 STATS: vdl.0 cache, locks:2
25.11 13:48:31 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:48:31 TIME: user.ping 0.3 ms
25.11 13:48:31 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:48:43 TIMER: Check auto-disconnect...
25.11 13:48:53 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:48:53 TIME: user.ping 0.11 ms
25.11 13:48:53 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:49:14 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:49:14 TIME: user.ping 0.13 ms
25.11 13:49:14 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:49:25 STATS: vdl.0 cache, locks:2
25.11 13:49:35 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:49:35 TIME: user.ping 0.2 ms
25.11 13:49:35 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:49:43 TIMER: Check auto-disconnect...
25.11 13:49:57 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:49:57 TIME: user.ping 0.12 ms
25.11 13:49:57 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:50:18 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:50:18 TIME: user.ping 0.14 ms
25.11 13:50:18 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:50:25 STATS: vdl.0 cache, locks:2
25.11 13:50:39 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:50:39 TIME: user.ping 0.15 ms
25.11 13:50:39 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:50:43 TIMER: Check auto-disconnect...
25.11 13:50:57 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:50:57 TIME: user.ping 0.11 ms
25.11 13:50:57 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:51:17 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:51:17 TIME: user.ping 0.13 ms
25.11 13:51:17 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:51:25 STATS: vdl.0 cache, locks:2
25.11 13:51:37 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:51:37 TIME: user.ping 0.13 ms
25.11 13:51:37 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:51:43 TIMER: Check auto-disconnect...
25.11 13:51:57 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:51:57 TIME: user.ping 0.17 ms
25.11 13:51:57 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:52:17 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:52:17 TIME: user.ping 0.14 ms
25.11 13:52:17 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:52:25 STATS: vdl.0 cache, locks:2
25.11 13:52:39 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:52:39 TIME: user.ping 0.12 ms
25.11 13:52:39 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:52:43 TIMER: Check auto-disconnect...
25.11 13:53:01 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:53:01 TIME: user.ping 0.13 ms
25.11 13:53:01 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:53:22 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:53:22 TIME: user.ping 0.15 ms
25.11 13:53:22 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:53:25 STATS: vdl.0 cache, locks:2
25.11 13:53:43 TIMER: Check auto-disconnect...
25.11 13:53:44 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
25.11 13:53:44 TIME: user.ping 0.16 ms
25.11 13:53:44 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
25.11 13:54:06 NET: Client (name:uid112 conid:45381144 TCP) disconnected from vdl.0 (clients:0)
25.11 13:54:06 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
25.11 13:54:06 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
25.11 13:54:06 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.11 13:54:06 STATS: vdl.0 cache connection, 2174 calls, total 1.4556131362915 sec spent, avg 0.67 ms
25.11 13:54:06 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.11 13:54:06 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.11 13:54:06 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.11 13:54:06 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.11 13:54:06 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
25.11 13:54:06 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.11 13:54:06 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
25.11 13:54:06 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.11 13:54:06 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
25.11 13:54:06 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.11 13:54:25 STATS: vdl.0 cache, locks:0
25.11 13:54:43 TIMER: Check auto-disconnect...
25.11 13:55:25 STATS: vdl.0 cache, locks:0
25.11 13:55:43 TIMER: Check auto-disconnect...
25.11 13:56:25 STATS: vdl.0 cache, locks:0
25.11 13:56:43 TIMER: Check auto-disconnect...
25.11 13:57:25 STATS: vdl.0 cache, locks:0
25.11 13:57:43 TIMER: Check auto-disconnect...
25.11 13:58:25 STATS: vdl.0 cache, locks:0
25.11 13:58:43 TIMER: Check auto-disconnect...
25.11 13:59:25 STATS: vdl.0 cache, locks:0
25.11 13:59:43 TIMER: Check auto-disconnect...
