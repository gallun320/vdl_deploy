08.11 13:00:27 TIMER: Check auto-disconnect...
08.11 13:00:36 STATS: vdl.0 cache, locks:2
08.11 13:01:27 TIMER: Check auto-disconnect...
08.11 13:01:36 STATS: vdl.0 cache, locks:2
08.11 13:02:27 TIMER: Check auto-disconnect...
08.11 13:02:36 STATS: vdl.0 cache, locks:2
08.11 13:03:27 TIMER: Check auto-disconnect...
08.11 13:03:36 STATS: vdl.0 cache, locks:2
08.11 13:04:27 TIMER: Check auto-disconnect...
08.11 13:04:36 STATS: vdl.0 cache, locks:2
08.11 13:05:27 TIMER: Check auto-disconnect...
08.11 13:05:36 STATS: vdl.0 cache, locks:2
08.11 13:06:27 TIMER: Check auto-disconnect...
08.11 13:06:36 STATS: vdl.0 cache, locks:2
08.11 13:07:27 TIMER: Check auto-disconnect...
08.11 13:07:36 STATS: vdl.0 cache, locks:2
08.11 13:08:27 TIMER: Check auto-disconnect...
08.11 13:08:36 STATS: vdl.0 cache, locks:2
08.11 13:09:27 TIMER: Check auto-disconnect...
08.11 13:09:36 STATS: vdl.0 cache, locks:2
08.11 13:10:27 TIMER: Check auto-disconnect...
08.11 13:10:36 STATS: vdl.0 cache, locks:2
08.11 13:11:27 TIMER: Check auto-disconnect...
08.11 13:11:36 STATS: vdl.0 cache, locks:2
08.11 13:12:27 TIMER: Check auto-disconnect...
08.11 13:12:36 STATS: vdl.0 cache, locks:2
08.11 13:13:27 TIMER: Check auto-disconnect...
08.11 13:13:36 STATS: vdl.0 cache, locks:2
08.11 13:14:27 TIMER: Check auto-disconnect...
08.11 13:14:36 STATS: vdl.0 cache, locks:2
08.11 13:14:43 NET: Client (conid:5826703) connected to vdl.0 (clients:1)
08.11 13:14:43 NET: Client (conid:5826703) switched protocol to WS
08.11 13:14:46 ++ NET: null req: user.register { messageType => user.register }
08.11 13:14:46 DB: SELECT * FROM users
08.11 13:14:46 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {{ city => , password => uid13, name => uid13, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478607328,"lastLoginDate":313,"lastLoadDate":1109},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-08 12:12:04.852124+00, language => en, id => 13, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478241985,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 06:30:28.926728+00, language => en, id => 2, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478242996,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 06:50:49.832936+00, language => en, id => 5, deleted => false }, { city => , password => uid4, name => uid4, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478242307,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 06:43:10.450435+00, language => en, id => 4, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478241272,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 06:32:57.383511+00, language => en, id => 3, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 08:27:06.517881+00, language =>   , id => 6, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478364807,"lastLoginDate":310,"lastLoadDate":1106},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-05 00:45:47.596212+00, language => en, id => 7, deleted => false }, { city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"inventory":{"list":[]},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-01 09:46:34.649034+00, language =>   , id => 1, deleted => false }, { city => , password => uid10, name => uid10, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478530591,"lastLoginDate":312,"lastLoadDate":1108},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-07 14:50:55.832911+00, language => en, id => 10, deleted => false }, { city => , password => uid11, name => uid11, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-07 15:01:58.43834+00, language =>   , id => 11, deleted => false }, { city => , password => uid9, name => uid9, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478530461,"lastLoginDate":312,"lastLoadDate":1108},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-07 14:44:43.112805+00, language => en, id => 9, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478529438,"lastLoginDate":312,"lastLoadDate":1108},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-07 14:33:04.917648+00, language => en, id => 8, deleted => false }, { city => , password => uid12, name => uid12, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478605990,"lastLoginDate":313,"lastLoadDate":1109},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-08 11:41:17.072885+00, language => en, id => 12, deleted => false }}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 STATS: vdl.0 cache connection, 461 calls, total 0.321169853210449 sec spent, avg 0.7 ms
08.11 13:14:46 DB: SELECT ID FROM Users WHERE Name = 'uid14'
08.11 13:14:46 == NET: null ret: user.auth { type => user.auth, token => dWlkMTQ= }
08.11 13:14:46 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid14', _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 DB: SELECT nextval('Users_id_seq') AS id
08.11 13:14:46 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {{ id => 14 }}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 ->>-: core/user.register { password => uid14, name => uid14, fullParams => { password => uid14, name => uid14, networkid => , networktype => , messageType => user.register, id => 14 }, networkid => , connectionID => 5826703, networktype => , email => , id => 14, _type => core/user.register }
08.11 13:14:46 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
08.11 13:14:46 -<<-: core/user.registerResponse { password => uid14, name => uid14, _isNotify => true, fullParams => { password => uid14, name => uid14, networkid => , networktype => , messageType => user.register, id => 14 }, networkid => , connectionID => 5826703, networktype => , email => , id => 14, _type => core/user.registerResponse }
08.11 13:14:46 DB: SELECT token FROM tokens WHERE userid = 14
08.11 13:14:46 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 14, _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {{ token => 12c8c1627a126f138739eb901d9a0365 }}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 12c8c1627a126f138739eb901d9a0365 }
08.11 13:14:46 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQ= }
08.11 13:14:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid14' AND Password = 'uid14'
08.11 13:14:46 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid14' AND Password = 'uid14', _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {{ name => uid14, networkid => , isbanned => false, id => 14 }}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 ->>-: core/user.isOnlineID { id => 14, _type => core/user.isOnlineID }
08.11 13:14:46 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
08.11 13:14:46 ->>-: core/cache.get { type => user, v => -1, id => 14, _type => core/cache.get }
08.11 13:14:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid14, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid14, isbanned => false, regdate => 2016-11-08 13:14:46.345018+00, city => 1, language =>   , region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, hints => 15 }, effects => { list => [] } }}, version => 19, id => 14 } }
08.11 13:14:46 ->>-: core/cache.get { type => questdata, v => -1, id => 14, _type => core/cache.get }
08.11 13:14:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 14 } }
08.11 13:14:46 NET: Client login (conid:5826703, id:14, name:uid14)
08.11 13:14:46 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 14, _type => core/user.loginPost, ipAddr => 91.226.152.104 }
08.11 13:14:46 -<<-: core/user.loginPost { _type => core/user.loginPost }
08.11 13:14:46 DB: SELECT token FROM tokens WHERE userid = 14
08.11 13:14:46 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 14, _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {{ token => 12c8c1627a126f138739eb901d9a0365 }}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 DB: SELECT ID FROM TempUserLogins WHERE UserID = 14 AND Date = 'today'::timestamp
08.11 13:14:46 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 14 AND Date = 'today'::timestamp, _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (14, 'today'::timestamp)
08.11 13:14:46 == NET: uid14 ret: user.login { name => uid14, type => user.login, errorCode => ok, id => 14, token => 12c8c1627a126f138739eb901d9a0365 }
08.11 13:14:46 == NET: uid14 ret: user.join { name => uid14, type => user.join }
08.11 13:14:46 ++ NET: uid14 req: user.login { messageType => user.login, token => dWlkMTQ= }
08.11 13:14:46 DB: SELECT id FROM battle WHERE firstid=14 OR secondid=14 AND finished <> true
08.11 13:14:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=14 OR secondid=14 AND finished <> true, _type => core/server.query, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (14, 'today'::timestamp), _type => core/server.pending }} }
08.11 13:14:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
08.11 13:14:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
08.11 13:14:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
08.11 13:14:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
08.11 13:14:46 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478610886, lastLoginDate => 313, lastLoadDate => 1109 } }}, type => user, unlock => true, id => 14, _type => core/cache.update }
08.11 13:14:46 -<<-: core/cache.update { errorCode => ok, version => 20, _type => core/cache.update }
08.11 13:14:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 14, _type => core/cache.update }
08.11 13:14:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
08.11 13:14:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 14, _type => core/user.logoutPost }
08.11 13:14:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
08.11 13:14:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid14' AND Password = 'uid14'
08.11 13:14:46 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid14' AND Password = 'uid14', _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {{ name => uid14, networkid => , isbanned => false, id => 14 }}, errorCode => ok, _type => core/server.query }
08.11 13:14:46 ->>-: core/user.isOnlineID { id => 14, _type => core/user.isOnlineID }
08.11 13:14:46 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
08.11 13:14:46 ->>-: core/cache.get { type => user, v => -1, id => 14, _type => core/cache.get }
08.11 13:14:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid14, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid14, isbanned => false, regdate => 2016-11-08 13:14:46.345018+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1478610886, lastLoginDate => 313, lastLoadDate => 1109, hints => 15 }, effects => { list => [] } }}, version => 20, id => 14 } }
08.11 13:14:46 ->>-: core/cache.get { type => questdata, v => -1, id => 14, _type => core/cache.get }
08.11 13:14:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 14 } }
08.11 13:14:46 NET: Client login (conid:5826703, id:14, name:uid14)
08.11 13:14:46 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 14, _type => core/user.loginPost, ipAddr => 91.226.152.104 }
08.11 13:14:46 -<<-: core/user.loginPost { _type => core/user.loginPost }
08.11 13:14:46 DB: SELECT token FROM tokens WHERE userid = 14
08.11 13:14:46 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 14, _type => core/server.query }
08.11 13:14:46 -<<-: core/server.query { list => {{ token => 12c8c1627a126f138739eb901d9a0365 }}, errorCode => ok, _type => core/server.query }
08.11 13:14:52 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:14:52 TIME: user.ping 0.16 ms
08.11 13:14:56 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 14, _type => core/cache.update }
08.11 13:14:56 -<<-: core/cache.update { errorCode => ok, version => 21, _type => core/cache.update }
08.11 13:15:12 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:15:12 TIME: user.ping 0.14 ms
08.11 13:15:27 TIMER: Check auto-disconnect...
08.11 13:15:32 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:15:32 TIME: user.ping 0.13 ms
08.11 13:15:36 STATS: vdl.0 cache, locks:4
08.11 13:15:52 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:15:52 TIME: user.ping 0.14 ms
08.11 13:16:13 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:16:13 TIME: user.ping 0.15 ms
08.11 13:16:27 TIMER: Check auto-disconnect...
08.11 13:16:33 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:16:33 TIME: user.ping 0.13 ms
08.11 13:16:36 STATS: vdl.0 cache, locks:4
08.11 13:16:53 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:16:53 TIME: user.ping 0.11 ms
08.11 13:17:13 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:17:13 TIME: user.ping 0.15 ms
08.11 13:17:27 TIMER: Check auto-disconnect...
08.11 13:17:33 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:17:33 TIME: user.ping 0.11 ms
08.11 13:17:36 STATS: vdl.0 cache, locks:4
08.11 13:17:54 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:17:54 TIME: user.ping 0.11 ms
08.11 13:18:14 ++ NET: uid14 req: user.ping { messageType => user.ping, msg => ok }
08.11 13:18:14 TIME: user.ping 0.12 ms
08.11 13:18:27 TIMER: Check auto-disconnect...
08.11 13:18:36 STATS: vdl.0 cache, locks:4
08.11 13:19:27 TIMER: Check auto-disconnect...
08.11 13:19:36 STATS: vdl.0 cache, locks:4
08.11 13:20:27 TIMER: Check auto-disconnect...
08.11 13:20:36 STATS: vdl.0 cache, locks:4
08.11 13:21:27 TIMER: Check auto-disconnect...
08.11 13:21:36 STATS: vdl.0 cache, locks:4
08.11 13:22:27 TIMER: Check auto-disconnect...
08.11 13:22:36 STATS: vdl.0 cache, locks:4
08.11 13:23:18 NET: Client (name:uid14 conid:5826703 WS) disconnected from vdl.0 (clients:0)
08.11 13:23:18 DB: SELECT id FROM battle WHERE firstid=14 OR secondid=14 AND finished <> true
08.11 13:23:18 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=14 OR secondid=14 AND finished <> true, _type => core/server.query }
08.11 13:23:18 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
08.11 13:23:18 STATS: vdl.0 cache connection, 485 calls, total 0.342954158782959 sec spent, avg 0.71 ms
08.11 13:23:18 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
08.11 13:23:18 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
08.11 13:23:18 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
08.11 13:23:18 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
08.11 13:23:18 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 14, _type => core/cache.update }
08.11 13:23:18 -<<-: core/cache.update { errorCode => ok, version => 22, _type => core/cache.update }
08.11 13:23:18 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 14, _type => core/cache.update }
08.11 13:23:18 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
08.11 13:23:18 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 14, _type => core/user.logoutPost }
08.11 13:23:18 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
08.11 13:23:27 TIMER: Check auto-disconnect...
08.11 13:23:36 STATS: vdl.0 cache, locks:2
08.11 13:24:27 TIMER: Check auto-disconnect...
08.11 13:24:36 STATS: vdl.0 cache, locks:2
08.11 13:25:27 TIMER: Check auto-disconnect...
08.11 13:25:36 STATS: vdl.0 cache, locks:2
08.11 13:26:27 TIMER: Check auto-disconnect...
08.11 13:26:36 STATS: vdl.0 cache, locks:2
08.11 13:27:27 TIMER: Check auto-disconnect...
08.11 13:27:36 STATS: vdl.0 cache, locks:2
08.11 13:28:27 TIMER: Check auto-disconnect...
08.11 13:28:36 STATS: vdl.0 cache, locks:2
08.11 13:29:27 TIMER: Check auto-disconnect...
08.11 13:29:36 STATS: vdl.0 cache, locks:2
08.11 13:30:27 TIMER: Check auto-disconnect...
08.11 13:30:36 STATS: vdl.0 cache, locks:2
08.11 13:31:27 TIMER: Check auto-disconnect...
08.11 13:31:36 STATS: vdl.0 cache, locks:2
08.11 13:32:27 TIMER: Check auto-disconnect...
08.11 13:32:36 STATS: vdl.0 cache, locks:2
08.11 13:33:27 TIMER: Check auto-disconnect...
08.11 13:33:36 STATS: vdl.0 cache, locks:2
08.11 13:34:27 TIMER: Check auto-disconnect...
08.11 13:34:36 STATS: vdl.0 cache, locks:2
08.11 13:35:27 TIMER: Check auto-disconnect...
08.11 13:35:36 STATS: vdl.0 cache, locks:2
08.11 13:36:27 TIMER: Check auto-disconnect...
08.11 13:36:36 STATS: vdl.0 cache, locks:2
08.11 13:37:27 TIMER: Check auto-disconnect...
08.11 13:37:36 STATS: vdl.0 cache, locks:2
08.11 13:38:27 TIMER: Check auto-disconnect...
08.11 13:38:36 STATS: vdl.0 cache, locks:2
08.11 13:39:27 TIMER: Check auto-disconnect...
08.11 13:39:36 STATS: vdl.0 cache, locks:2
08.11 13:40:27 TIMER: Check auto-disconnect...
08.11 13:40:36 STATS: vdl.0 cache, locks:2
08.11 13:41:27 TIMER: Check auto-disconnect...
08.11 13:41:36 STATS: vdl.0 cache, locks:2
08.11 13:42:27 TIMER: Check auto-disconnect...
08.11 13:42:36 STATS: vdl.0 cache, locks:2
08.11 13:43:27 TIMER: Check auto-disconnect...
08.11 13:43:36 STATS: vdl.0 cache, locks:2
08.11 13:44:27 TIMER: Check auto-disconnect...
08.11 13:44:36 STATS: vdl.0 cache, locks:2
08.11 13:45:27 TIMER: Check auto-disconnect...
08.11 13:45:36 STATS: vdl.0 cache, locks:2
08.11 13:46:27 TIMER: Check auto-disconnect...
08.11 13:46:36 STATS: vdl.0 cache, locks:2
08.11 13:47:27 TIMER: Check auto-disconnect...
08.11 13:47:36 STATS: vdl.0 cache, locks:2
08.11 13:48:27 TIMER: Check auto-disconnect...
08.11 13:48:36 STATS: vdl.0 cache, locks:2
08.11 13:49:27 TIMER: Check auto-disconnect...
08.11 13:49:36 STATS: vdl.0 cache, locks:2
08.11 13:50:27 TIMER: Check auto-disconnect...
08.11 13:50:36 STATS: vdl.0 cache, locks:2
08.11 13:51:27 TIMER: Check auto-disconnect...
08.11 13:51:36 STATS: vdl.0 cache, locks:2
08.11 13:52:27 TIMER: Check auto-disconnect...
08.11 13:52:36 STATS: vdl.0 cache, locks:2
08.11 13:53:27 TIMER: Check auto-disconnect...
08.11 13:53:36 STATS: vdl.0 cache, locks:2
08.11 13:54:27 TIMER: Check auto-disconnect...
08.11 13:54:36 STATS: vdl.0 cache, locks:2
08.11 13:55:27 TIMER: Check auto-disconnect...
08.11 13:55:36 STATS: vdl.0 cache, locks:2
08.11 13:56:27 TIMER: Check auto-disconnect...
08.11 13:56:36 STATS: vdl.0 cache, locks:2
08.11 13:57:27 TIMER: Check auto-disconnect...
08.11 13:57:36 STATS: vdl.0 cache, locks:2
08.11 13:58:27 TIMER: Check auto-disconnect...
08.11 13:58:36 STATS: vdl.0 cache, locks:2
08.11 13:59:27 TIMER: Check auto-disconnect...
08.11 13:59:36 STATS: vdl.0 cache, locks:2
