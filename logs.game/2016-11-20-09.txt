20.11 09:00:08 TIMER: Check auto-disconnect...
20.11 09:00:13 STATS: vdl.0 cache, locks:2
20.11 09:01:08 TIMER: Check auto-disconnect...
20.11 09:01:13 STATS: vdl.0 cache, locks:2
20.11 09:02:08 TIMER: Check auto-disconnect...
20.11 09:02:13 STATS: vdl.0 cache, locks:2
20.11 09:03:08 TIMER: Check auto-disconnect...
20.11 09:03:13 STATS: vdl.0 cache, locks:2
20.11 09:04:08 TIMER: Check auto-disconnect...
20.11 09:04:13 STATS: vdl.0 cache, locks:2
20.11 09:05:08 TIMER: Check auto-disconnect...
20.11 09:05:13 STATS: vdl.0 cache, locks:2
20.11 09:06:08 TIMER: Check auto-disconnect...
20.11 09:06:13 STATS: vdl.0 cache, locks:2
20.11 09:07:08 TIMER: Check auto-disconnect...
20.11 09:07:13 STATS: vdl.0 cache, locks:2
20.11 09:08:08 TIMER: Check auto-disconnect...
20.11 09:08:13 STATS: vdl.0 cache, locks:2
20.11 09:09:08 TIMER: Check auto-disconnect...
20.11 09:09:13 STATS: vdl.0 cache, locks:2
20.11 09:10:08 TIMER: Check auto-disconnect...
20.11 09:10:13 STATS: vdl.0 cache, locks:2
20.11 09:11:08 TIMER: Check auto-disconnect...
20.11 09:11:13 STATS: vdl.0 cache, locks:2
20.11 09:12:08 TIMER: Check auto-disconnect...
20.11 09:12:13 STATS: vdl.0 cache, locks:2
20.11 09:13:08 TIMER: Check auto-disconnect...
20.11 09:13:13 STATS: vdl.0 cache, locks:2
20.11 09:13:37 NET: Client (conid:34472541) connected to vdl.0 (clients:2)
20.11 09:13:38 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
20.11 09:13:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
20.11 09:13:38 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
20.11 09:13:38 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
20.11 09:13:38 STATS: vdl.0 cache connection, 145 calls, total 0.0826280117034912 sec spent, avg 0.57 ms
20.11 09:13:38 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
20.11 09:13:38 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
20.11 09:13:38 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 11 }
20.11 09:13:38 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
20.11 09:13:38 NET: Client (name:uid11 conid:86758627 TCP) disconnected from vdl.0 (clients:1)
20.11 09:13:38 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
20.11 09:13:38 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
20.11 09:13:38 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 09:13:38 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:13:38 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.11 09:13:38 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:13:38 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.11 09:13:38 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
20.11 09:13:38 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.11 09:13:38 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
20.11 09:13:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.11 09:13:38 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
20.11 09:13:38 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.11 09:13:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
20.11 09:13:42 TRACE: User not logon yet.
20.11 09:13:45 NET: Client (name:null conid:34472541 TCP) disconnected from vdl.0 (clients:0)
20.11 09:13:45 NET: Client (conid:21761358) connected to vdl.0 (clients:1)
20.11 09:13:45 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
20.11 09:13:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
20.11 09:13:45 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
20.11 09:13:45 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
20.11 09:13:45 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
20.11 09:13:45 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.11 09:13:45 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
20.11 09:13:45 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479627940, lastLoginDate => 325, lastLoadDate => 1121 }, effects => { list => [] } }}, version => 2, id => 11 } }
20.11 09:13:45 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
20.11 09:13:45 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 11 } }
20.11 09:13:45 NET: Client login (conid:21761358, id:11, name:uid11)
20.11 09:13:45 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.204.61.159 }
20.11 09:13:45 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.11 09:13:45 DB: SELECT token FROM tokens WHERE userid = 11
20.11 09:13:45 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
20.11 09:13:45 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
20.11 09:13:45 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
20.11 09:13:45 == NET: uid11 ret: user.join { name => uid11, type => user.join }
20.11 09:13:53 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
20.11 09:13:53 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.11 09:14:03 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:14:03 TIME: user.ping 0.14 ms
20.11 09:14:03 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:14:08 TIMER: Check auto-disconnect...
20.11 09:14:13 STATS: vdl.0 cache, locks:2
20.11 09:14:23 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:14:23 TIME: user.ping 0.15 ms
20.11 09:14:23 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:14:44 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:14:44 TIME: user.ping 0.11 ms
20.11 09:14:44 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:14:48 NET: Client (name:uid11 conid:21761358 TCP) disconnected from vdl.0 (clients:0)
20.11 09:14:48 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
20.11 09:14:48 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
20.11 09:14:48 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 09:14:48 STATS: vdl.0 cache connection, 159 calls, total 0.0900173187255859 sec spent, avg 0.57 ms
20.11 09:14:48 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:14:48 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.11 09:14:48 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:14:48 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.11 09:14:48 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
20.11 09:14:48 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.11 09:14:48 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
20.11 09:14:48 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.11 09:14:48 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
20.11 09:14:48 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.11 09:14:50 NET: Client (conid:6338567) connected to vdl.0 (clients:1)
20.11 09:14:51 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
20.11 09:14:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
20.11 09:14:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
20.11 09:14:51 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
20.11 09:14:51 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
20.11 09:14:51 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.11 09:14:51 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
20.11 09:14:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479627940, lastLoginDate => 325, lastLoadDate => 1121 }, effects => { list => [] } }}, version => 4, id => 11 } }
20.11 09:14:51 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
20.11 09:14:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 11 } }
20.11 09:14:51 NET: Client login (conid:6338567, id:11, name:uid11)
20.11 09:14:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.204.61.159 }
20.11 09:14:51 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.11 09:14:51 DB: SELECT token FROM tokens WHERE userid = 11
20.11 09:14:51 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
20.11 09:14:51 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
20.11 09:14:51 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
20.11 09:14:51 == NET: uid11 ret: user.join { name => uid11, type => user.join }
20.11 09:14:55 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:14:55 TIME: user.ping 0.16 ms
20.11 09:14:55 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:14:58 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
20.11 09:14:58 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
20.11 09:15:08 TIMER: Check auto-disconnect...
20.11 09:15:13 STATS: vdl.0 cache, locks:2
20.11 09:15:15 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:15:15 TIME: user.ping 0.17 ms
20.11 09:15:15 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:15:37 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:15:37 TIME: user.ping 0.14 ms
20.11 09:15:37 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:15:57 NET: Client (name:uid11 conid:6338567 TCP) disconnected from vdl.0 (clients:0)
20.11 09:15:57 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
20.11 09:15:57 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
20.11 09:15:57 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 09:15:57 STATS: vdl.0 cache connection, 171 calls, total 0.0961403846740723 sec spent, avg 0.56 ms
20.11 09:15:57 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:15:57 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.11 09:15:57 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:15:57 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.11 09:15:57 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
20.11 09:15:57 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
20.11 09:15:57 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
20.11 09:15:57 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.11 09:15:57 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
20.11 09:15:57 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.11 09:16:08 TIMER: Check auto-disconnect...
20.11 09:16:13 STATS: vdl.0 cache, locks:0
20.11 09:17:08 TIMER: Check auto-disconnect...
20.11 09:17:13 STATS: vdl.0 cache, locks:0
20.11 09:18:08 TIMER: Check auto-disconnect...
20.11 09:18:11 NET: Client (conid:2951796) connected to vdl.0 (clients:1)
20.11 09:18:12 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
20.11 09:18:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
20.11 09:18:12 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
20.11 09:18:12 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
20.11 09:18:12 STATS: vdl.0 cache connection, 176 calls, total 0.0991902351379395 sec spent, avg 0.56 ms
20.11 09:18:12 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
20.11 09:18:12 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.11 09:18:12 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
20.11 09:18:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479627940, lastLoginDate => 325, lastLoadDate => 1121 }, effects => { list => [] } }}, version => 0, id => 11 } }
20.11 09:18:12 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
20.11 09:18:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 11 } }
20.11 09:18:12 NET: Client login (conid:2951796, id:11, name:uid11)
20.11 09:18:12 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.204.61.159 }
20.11 09:18:12 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.11 09:18:12 DB: SELECT token FROM tokens WHERE userid = 11
20.11 09:18:12 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
20.11 09:18:12 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
20.11 09:18:12 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
20.11 09:18:12 == NET: uid11 ret: user.join { name => uid11, type => user.join }
20.11 09:18:13 STATS: vdl.0 cache, locks:2
20.11 09:18:16 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:18:16 TIME: user.ping 0.13 ms
20.11 09:18:16 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:18:18 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
20.11 09:18:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.11 09:18:40 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:18:40 TIME: user.ping 0.13 ms
20.11 09:18:40 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:19:04 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:19:04 TIME: user.ping 0.13 ms
20.11 09:19:04 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:19:08 TIMER: Check auto-disconnect...
20.11 09:19:13 STATS: vdl.0 cache, locks:2
20.11 09:19:28 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:19:28 TIME: user.ping 0.17 ms
20.11 09:19:28 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:19:52 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:19:52 TIME: user.ping 0.12 ms
20.11 09:19:52 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:20:08 TIMER: Check auto-disconnect...
20.11 09:20:13 STATS: vdl.0 cache, locks:2
20.11 09:20:17 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:20:17 TIME: user.ping 0.15 ms
20.11 09:20:17 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:20:40 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:20:40 TIME: user.ping 0.12 ms
20.11 09:20:40 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:21:05 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:21:05 TIME: user.ping 0.12 ms
20.11 09:21:05 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:21:08 TIMER: Check auto-disconnect...
20.11 09:21:13 STATS: vdl.0 cache, locks:2
20.11 09:21:29 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:21:29 TIME: user.ping 0.13 ms
20.11 09:21:29 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:21:53 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:21:53 TIME: user.ping 0.16 ms
20.11 09:21:53 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:22:08 TIMER: Check auto-disconnect...
20.11 09:22:13 STATS: vdl.0 cache, locks:2
20.11 09:22:17 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:22:17 TIME: user.ping 0.14 ms
20.11 09:22:17 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:22:41 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:22:41 TIME: user.ping 0.13 ms
20.11 09:22:41 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:23:05 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:23:05 TIME: user.ping 0.12 ms
20.11 09:23:05 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:23:08 TIMER: Check auto-disconnect...
20.11 09:23:13 STATS: vdl.0 cache, locks:2
20.11 09:23:29 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:23:29 TIME: user.ping 0.19 ms
20.11 09:23:29 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:23:53 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:23:53 TIME: user.ping 0.14 ms
20.11 09:23:53 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:24:08 TIMER: Check auto-disconnect...
20.11 09:24:13 STATS: vdl.0 cache, locks:2
20.11 09:24:15 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:24:15 TIME: user.ping 0.13 ms
20.11 09:24:15 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:24:37 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:24:37 TIME: user.ping 0.19 ms
20.11 09:24:37 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:24:59 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:24:59 TIME: user.ping 0.14 ms
20.11 09:24:59 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:25:08 TIMER: Check auto-disconnect...
20.11 09:25:13 STATS: vdl.0 cache, locks:2
20.11 09:25:21 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:25:21 TIME: user.ping 0.12 ms
20.11 09:25:21 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:25:43 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:25:43 TIME: user.ping 0.12 ms
20.11 09:25:43 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:26:06 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:26:06 TIME: user.ping 0.13 ms
20.11 09:26:06 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:26:08 TIMER: Check auto-disconnect...
20.11 09:26:13 STATS: vdl.0 cache, locks:2
20.11 09:26:28 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:26:28 TIME: user.ping 0.15 ms
20.11 09:26:28 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:26:50 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:26:50 TIME: user.ping 0.11 ms
20.11 09:26:50 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:27:08 TIMER: Check auto-disconnect...
20.11 09:27:13 STATS: vdl.0 cache, locks:2
20.11 09:27:17 NET: Client (name:uid11 conid:2951796 TCP) disconnected from vdl.0 (clients:0)
20.11 09:27:17 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
20.11 09:27:17 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
20.11 09:27:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 09:27:17 STATS: vdl.0 cache connection, 183 calls, total 0.104992389678955 sec spent, avg 0.57 ms
20.11 09:27:17 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:27:17 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.11 09:27:17 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:27:17 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.11 09:27:17 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
20.11 09:27:17 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.11 09:27:17 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
20.11 09:27:17 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.11 09:27:17 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
20.11 09:27:17 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.11 09:28:08 TIMER: Check auto-disconnect...
20.11 09:28:13 STATS: vdl.0 cache, locks:0
20.11 09:29:08 TIMER: Check auto-disconnect...
20.11 09:29:13 STATS: vdl.0 cache, locks:0
20.11 09:30:08 TIMER: Check auto-disconnect...
20.11 09:30:13 STATS: vdl.0 cache, locks:0
20.11 09:31:08 TIMER: Check auto-disconnect...
20.11 09:31:13 STATS: vdl.0 cache, locks:0
20.11 09:32:08 TIMER: Check auto-disconnect...
20.11 09:32:13 STATS: vdl.0 cache, locks:0
20.11 09:33:08 TIMER: Check auto-disconnect...
20.11 09:33:13 STATS: vdl.0 cache, locks:0
20.11 09:34:08 TIMER: Check auto-disconnect...
20.11 09:34:13 STATS: vdl.0 cache, locks:0
20.11 09:34:23 NET: Client (conid:374982) connected to vdl.0 (clients:1)
20.11 09:34:24 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
20.11 09:34:24 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
20.11 09:34:24 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
20.11 09:34:24 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
20.11 09:34:24 STATS: vdl.0 cache connection, 188 calls, total 0.107715606689453 sec spent, avg 0.57 ms
20.11 09:34:24 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
20.11 09:34:24 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.11 09:34:24 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
20.11 09:34:24 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479627940, lastLoginDate => 325, lastLoadDate => 1121 }, effects => { list => [] } }}, version => 0, id => 11 } }
20.11 09:34:24 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
20.11 09:34:24 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 11 } }
20.11 09:34:24 NET: Client login (conid:374982, id:11, name:uid11)
20.11 09:34:24 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.204.61.159 }
20.11 09:34:24 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.11 09:34:24 DB: SELECT token FROM tokens WHERE userid = 11
20.11 09:34:24 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
20.11 09:34:24 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
20.11 09:34:24 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
20.11 09:34:24 == NET: uid11 ret: user.join { name => uid11, type => user.join }
20.11 09:34:27 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:34:27 TIME: user.ping 0.15 ms
20.11 09:34:27 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:34:33 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
20.11 09:34:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.11 09:34:49 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:34:49 TIME: user.ping 0.09 ms
20.11 09:34:49 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:35:08 TIMER: Check auto-disconnect...
20.11 09:35:13 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:35:13 TIME: user.ping 0.16 ms
20.11 09:35:13 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:35:13 STATS: vdl.0 cache, locks:2
20.11 09:35:36 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:35:36 TIME: user.ping 0.14 ms
20.11 09:35:36 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:36:08 TIMER: Check auto-disconnect...
20.11 09:36:13 STATS: vdl.0 cache, locks:2
20.11 09:36:30 NET: Client (name:uid11 conid:374982 TCP) disconnected from vdl.0 (clients:0)
20.11 09:36:30 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
20.11 09:36:30 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
20.11 09:36:30 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 09:36:30 STATS: vdl.0 cache connection, 195 calls, total 0.111425638198853 sec spent, avg 0.57 ms
20.11 09:36:30 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:36:30 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.11 09:36:30 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:36:30 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.11 09:36:30 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
20.11 09:36:30 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.11 09:36:30 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
20.11 09:36:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.11 09:36:30 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
20.11 09:36:30 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.11 09:36:33 NET: Client (conid:9833179) connected to vdl.0 (clients:1)
20.11 09:36:34 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
20.11 09:36:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
20.11 09:36:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
20.11 09:36:34 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
20.11 09:36:34 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
20.11 09:36:34 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.11 09:36:34 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
20.11 09:36:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479627940, lastLoginDate => 325, lastLoadDate => 1121 }, effects => { list => [] } }}, version => 2, id => 11 } }
20.11 09:36:34 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
20.11 09:36:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 11 } }
20.11 09:36:34 NET: Client login (conid:9833179, id:11, name:uid11)
20.11 09:36:34 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.204.61.159 }
20.11 09:36:34 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.11 09:36:34 DB: SELECT token FROM tokens WHERE userid = 11
20.11 09:36:34 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
20.11 09:36:34 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
20.11 09:36:34 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
20.11 09:36:34 == NET: uid11 ret: user.join { name => uid11, type => user.join }
20.11 09:36:37 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:36:37 TIME: user.ping 0.18 ms
20.11 09:36:37 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:36:43 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
20.11 09:36:43 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.11 09:37:01 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:37:01 TIME: user.ping 0.29 ms
20.11 09:37:01 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:37:08 TIMER: Check auto-disconnect...
20.11 09:37:13 STATS: vdl.0 cache, locks:2
20.11 09:37:24 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:37:24 TIME: user.ping 0.12 ms
20.11 09:37:24 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:37:47 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:37:47 TIME: user.ping 0.13 ms
20.11 09:37:47 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:38:08 TIMER: Check auto-disconnect...
20.11 09:38:10 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:38:10 TIME: user.ping 0.12 ms
20.11 09:38:10 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:38:13 STATS: vdl.0 cache, locks:2
20.11 09:38:33 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:38:33 TIME: user.ping 0.13 ms
20.11 09:38:33 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:38:57 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:38:57 TIME: user.ping 0.12 ms
20.11 09:38:57 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:39:08 TIMER: Check auto-disconnect...
20.11 09:39:13 STATS: vdl.0 cache, locks:2
20.11 09:39:20 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:39:20 TIME: user.ping 0.13 ms
20.11 09:39:20 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:39:43 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:39:43 TIME: user.ping 0.14 ms
20.11 09:39:43 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:40:05 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:40:05 TIME: user.ping 0.13 ms
20.11 09:40:05 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:40:08 TIMER: Check auto-disconnect...
20.11 09:40:13 STATS: vdl.0 cache, locks:2
20.11 09:40:27 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
20.11 09:40:27 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
20.11 09:40:27 TIME: user.ping 0.24 ms
20.11 09:40:28 NET: Client (name:uid11 conid:9833179 TCP) disconnected from vdl.0 (clients:0)
20.11 09:40:28 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
20.11 09:40:28 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
20.11 09:40:28 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 09:40:28 STATS: vdl.0 cache connection, 207 calls, total 0.116681337356567 sec spent, avg 0.56 ms
20.11 09:40:28 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:40:28 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.11 09:40:28 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 09:40:28 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.11 09:40:28 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
20.11 09:40:28 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.11 09:40:28 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
20.11 09:40:28 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.11 09:40:28 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
20.11 09:40:28 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.11 09:41:08 TIMER: Check auto-disconnect...
20.11 09:41:13 STATS: vdl.0 cache, locks:0
20.11 09:42:08 TIMER: Check auto-disconnect...
20.11 09:42:13 STATS: vdl.0 cache, locks:0
20.11 09:43:08 TIMER: Check auto-disconnect...
20.11 09:43:13 STATS: vdl.0 cache, locks:0
20.11 09:44:08 TIMER: Check auto-disconnect...
20.11 09:44:13 STATS: vdl.0 cache, locks:0
20.11 09:45:08 TIMER: Check auto-disconnect...
20.11 09:45:13 STATS: vdl.0 cache, locks:0
20.11 09:46:08 TIMER: Check auto-disconnect...
20.11 09:46:13 STATS: vdl.0 cache, locks:0
20.11 09:47:08 TIMER: Check auto-disconnect...
20.11 09:47:13 STATS: vdl.0 cache, locks:0
20.11 09:48:08 TIMER: Check auto-disconnect...
20.11 09:48:13 STATS: vdl.0 cache, locks:0
20.11 09:49:08 TIMER: Check auto-disconnect...
20.11 09:49:13 STATS: vdl.0 cache, locks:0
20.11 09:50:08 TIMER: Check auto-disconnect...
20.11 09:50:13 STATS: vdl.0 cache, locks:0
20.11 09:51:08 TIMER: Check auto-disconnect...
20.11 09:51:13 STATS: vdl.0 cache, locks:0
20.11 09:52:08 TIMER: Check auto-disconnect...
20.11 09:52:13 STATS: vdl.0 cache, locks:0
20.11 09:53:08 TIMER: Check auto-disconnect...
20.11 09:53:13 STATS: vdl.0 cache, locks:0
20.11 09:54:08 TIMER: Check auto-disconnect...
20.11 09:54:13 STATS: vdl.0 cache, locks:0
20.11 09:55:08 TIMER: Check auto-disconnect...
20.11 09:55:13 STATS: vdl.0 cache, locks:0
20.11 09:56:08 TIMER: Check auto-disconnect...
20.11 09:56:13 STATS: vdl.0 cache, locks:0
20.11 09:57:08 TIMER: Check auto-disconnect...
20.11 09:57:13 STATS: vdl.0 cache, locks:0
20.11 09:58:08 TIMER: Check auto-disconnect...
20.11 09:58:13 STATS: vdl.0 cache, locks:0
20.11 09:59:08 TIMER: Check auto-disconnect...
20.11 09:59:13 STATS: vdl.0 cache, locks:0
