09.11 12:00:27 TIMER: Check auto-disconnect...
09.11 12:00:44 STATS: vdl.0 cache, locks:2
09.11 12:01:27 TIMER: Check auto-disconnect...
09.11 12:01:45 STATS: vdl.0 cache, locks:2
09.11 12:02:27 TIMER: Check auto-disconnect...
09.11 12:02:45 STATS: vdl.0 cache, locks:2
09.11 12:03:27 TIMER: Check auto-disconnect...
09.11 12:03:45 STATS: vdl.0 cache, locks:2
09.11 12:04:27 TIMER: Check auto-disconnect...
09.11 12:04:45 STATS: vdl.0 cache, locks:2
09.11 12:05:27 TIMER: Check auto-disconnect...
09.11 12:05:45 STATS: vdl.0 cache, locks:2
09.11 12:06:27 TIMER: Check auto-disconnect...
09.11 12:06:45 STATS: vdl.0 cache, locks:2
09.11 12:07:27 TIMER: Check auto-disconnect...
09.11 12:07:45 STATS: vdl.0 cache, locks:2
09.11 12:08:27 TIMER: Check auto-disconnect...
09.11 12:08:45 STATS: vdl.0 cache, locks:2
09.11 12:09:27 TIMER: Check auto-disconnect...
09.11 12:09:45 STATS: vdl.0 cache, locks:2
09.11 12:10:27 TIMER: Check auto-disconnect...
09.11 12:10:45 STATS: vdl.0 cache, locks:2
09.11 12:11:27 TIMER: Check auto-disconnect...
09.11 12:11:45 STATS: vdl.0 cache, locks:2
09.11 12:12:27 TIMER: Check auto-disconnect...
09.11 12:12:45 STATS: vdl.0 cache, locks:2
09.11 12:13:27 TIMER: Check auto-disconnect...
09.11 12:13:45 STATS: vdl.0 cache, locks:2
09.11 12:14:27 TIMER: Check auto-disconnect...
09.11 12:14:45 STATS: vdl.0 cache, locks:2
09.11 12:15:27 TIMER: Check auto-disconnect...
09.11 12:15:45 STATS: vdl.0 cache, locks:2
09.11 12:16:27 TIMER: Check auto-disconnect...
09.11 12:16:45 STATS: vdl.0 cache, locks:2
09.11 12:17:27 TIMER: Check auto-disconnect...
09.11 12:17:45 STATS: vdl.0 cache, locks:2
09.11 12:18:27 TIMER: Check auto-disconnect...
09.11 12:18:44 NET: Client (conid:63895026) connected to vdl.0 (clients:1)
09.11 12:18:45 STATS: vdl.0 cache, locks:2
09.11 12:18:45 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTY= }
09.11 12:18:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid16' AND Password = 'uid16'
09.11 12:18:45 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid16' AND Password = 'uid16', _type => core/server.query }
09.11 12:18:45 -<<-: core/server.query { list => {{ name => uid16, networkid => , isbanned => false, id => 16 }}, errorCode => ok, _type => core/server.query }
09.11 12:18:45 STATS: vdl.0 cache connection, 551 calls, total 0.389669418334961 sec spent, avg 0.71 ms
09.11 12:18:45 ->>-: core/user.isOnlineID { id => 16, _type => core/user.isOnlineID }
09.11 12:18:45 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
09.11 12:18:45 ->>-: core/cache.get { type => user, v => -1, id => 16, _type => core/cache.get }
09.11 12:18:45 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid16, deleted => false, year => , email => mail, networktype =>   , password => uid16, isbanned => false, regdate => 2016-11-09 10:52:42.770365+00, city => , language =>   , networkid => , params => {}}, version => 0, id => 16 } }
09.11 12:18:45 ->>-: core/cache.get { type => questdata, v => -1, id => 16, _type => core/cache.get }
09.11 12:18:45 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 16 } }
09.11 12:18:45 NET: Client login (conid:63895026, id:16, name:uid16)
09.11 12:18:45 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 16, _type => core/user.loginPost, ipAddr => 217.118.93.169 }
09.11 12:18:45 -<<-: core/user.loginPost { _type => core/user.loginPost }
09.11 12:18:45 DB: SELECT token FROM tokens WHERE userid = 16
09.11 12:18:45 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 16, _type => core/server.query }
09.11 12:18:45 -<<-: core/server.query { list => {{ token => 34f340cf99e35832f2a3463bb0e839de }}, errorCode => ok, _type => core/server.query }
09.11 12:18:45 DB: SELECT ID FROM TempUserLogins WHERE UserID = 16 AND Date = 'today'::timestamp
09.11 12:18:45 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 16 AND Date = 'today'::timestamp, _type => core/server.query }
09.11 12:18:45 -<<-: core/server.query { list => {{ id => 121 }}, errorCode => ok, _type => core/server.query }
09.11 12:18:45 == NET: uid16 ret: user.login { name => uid16, type => user.login, errorCode => ok, id => 16, token => 34f340cf99e35832f2a3463bb0e839de }
09.11 12:18:45 == NET: uid16 ret: user.join { name => uid16, type => user.join }
09.11 12:18:51 ++ NET: uid16 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
09.11 12:18:51 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:18:51 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-09-11 14:00, startdate => 2016-09-11 14:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:18:51 TIME: tournament.getAvailableTournament 1.67 ms
09.11 12:18:51 == NET: uid16 ret: tournament.getAvailableTournament { list => [{ name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-09-11 14:00, startdate => 2016-09-11 14:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:18:54 ++ NET: uid16 req: user.ping { messageType => user.ping, msg => ok }
09.11 12:18:54 TIME: user.ping 0.14 ms
09.11 12:18:54 == NET: uid16 ret: user.ping { type => user.ping, errorCode => ok }
09.11 12:18:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478693925, lastLoginDate => 314, lastLoadDate => 1110 }, effects => { list => [] } }}, type => user, unlock => false, id => 16, _type => core/cache.update }
09.11 12:18:55 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
09.11 12:19:27 TIMER: Check auto-disconnect...
09.11 12:19:45 STATS: vdl.0 cache, locks:4
09.11 12:20:27 TIMER: Check auto-disconnect...
09.11 12:20:45 STATS: vdl.0 cache, locks:4
09.11 12:21:27 TIMER: Check auto-disconnect...
09.11 12:21:45 STATS: vdl.0 cache, locks:4
09.11 12:22:15 NET: Client (name:uid16 conid:63895026 TCP) disconnected from vdl.0 (clients:0)
09.11 12:22:15 DB: SELECT id FROM battle WHERE firstid=16 OR secondid=16 AND finished <> true
09.11 12:22:15 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=16 OR secondid=16 AND finished <> true, _type => core/server.query }
09.11 12:22:15 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
09.11 12:22:15 STATS: vdl.0 cache connection, 560 calls, total 0.395140409469604 sec spent, avg 0.71 ms
09.11 12:22:15 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
09.11 12:22:15 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
09.11 12:22:15 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
09.11 12:22:15 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
09.11 12:22:15 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 16, _type => core/cache.update }
09.11 12:22:15 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
09.11 12:22:15 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 16, _type => core/cache.update }
09.11 12:22:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
09.11 12:22:15 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 16, _type => core/user.logoutPost }
09.11 12:22:15 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
09.11 12:22:27 TIMER: Check auto-disconnect...
09.11 12:22:45 STATS: vdl.0 cache, locks:2
09.11 12:23:27 TIMER: Check auto-disconnect...
09.11 12:23:45 STATS: vdl.0 cache, locks:2
09.11 12:24:27 TIMER: Check auto-disconnect...
09.11 12:24:45 STATS: vdl.0 cache, locks:2
09.11 12:25:15 NET: Client (conid:4253155) connected to vdl.0 (clients:1)
09.11 12:25:17 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTY= }
09.11 12:25:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid16' AND Password = 'uid16'
09.11 12:25:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid16' AND Password = 'uid16', _type => core/server.query }
09.11 12:25:17 -<<-: core/server.query { list => {{ name => uid16, networkid => , isbanned => false, id => 16 }}, errorCode => ok, _type => core/server.query }
09.11 12:25:17 STATS: vdl.0 cache connection, 565 calls, total 0.39803147315979 sec spent, avg 0.7 ms
09.11 12:25:17 ->>-: core/user.isOnlineID { id => 16, _type => core/user.isOnlineID }
09.11 12:25:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
09.11 12:25:17 ->>-: core/cache.get { type => user, v => -1, id => 16, _type => core/cache.get }
09.11 12:25:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid16, deleted => false, year => , email => mail, networktype =>   , password => uid16, isbanned => false, regdate => 2016-11-09 10:52:42.770365+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478693925, lastLoginDate => 314, lastLoadDate => 1110 }, effects => { list => [] } }}, version => 0, id => 16 } }
09.11 12:25:17 ->>-: core/cache.get { type => questdata, v => -1, id => 16, _type => core/cache.get }
09.11 12:25:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 16 } }
09.11 12:25:17 NET: Client login (conid:4253155, id:16, name:uid16)
09.11 12:25:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 16, _type => core/user.loginPost, ipAddr => 217.118.93.169 }
09.11 12:25:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
09.11 12:25:17 DB: SELECT token FROM tokens WHERE userid = 16
09.11 12:25:17 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 16, _type => core/server.query }
09.11 12:25:17 -<<-: core/server.query { list => {{ token => 34f340cf99e35832f2a3463bb0e839de }}, errorCode => ok, _type => core/server.query }
09.11 12:25:17 == NET: uid16 ret: user.login { name => uid16, type => user.login, errorCode => ok, id => 16, token => 34f340cf99e35832f2a3463bb0e839de }
09.11 12:25:17 == NET: uid16 ret: user.join { name => uid16, type => user.join }
09.11 12:25:25 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 16, _type => core/cache.update }
09.11 12:25:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
09.11 12:25:25 ++ NET: uid16 req: user.ping { messageType => user.ping, msg => ok }
09.11 12:25:25 TIME: user.ping 0.13 ms
09.11 12:25:25 == NET: uid16 ret: user.ping { type => user.ping, errorCode => ok }
09.11 12:25:27 TIMER: Check auto-disconnect...
09.11 12:25:28 ++ NET: uid16 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
09.11 12:25:28 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:25:28 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:25:28 TIME: tournament.getAvailableTournament 1.32 ms
09.11 12:25:28 == NET: uid16 ret: tournament.getAvailableTournament { list => [{ name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:25:32 ++ NET: uid16 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
09.11 12:25:32 ->>-: vdl/cache.tournament.addUsers { userId => 16, passTournament => null, tournament => 1, _type => vdl/cache.tournament.addUsers }
09.11 12:25:32 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
09.11 12:25:32 TIME: tournament.addUsers 0.36 ms
09.11 12:25:32 == NET: uid16 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
09.11 12:25:33 ++ NET: uid16 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
09.11 12:25:33 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:25:33 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:25:33 TIME: tournament.getAvailableTournament 1.42 ms
09.11 12:25:33 == NET: uid16 ret: tournament.getAvailableTournament { list => [{ name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
09.11 12:25:45 STATS: vdl.0 cache, locks:4
09.11 12:25:46 ++ NET: uid16 req: user.ping { messageType => user.ping, msg => ok }
09.11 12:25:46 TIME: user.ping 0.17 ms
09.11 12:25:46 == NET: uid16 ret: user.ping { type => user.ping, errorCode => ok }
09.11 12:26:27 TIMER: Check auto-disconnect...
09.11 12:26:45 STATS: vdl.0 cache, locks:4
09.11 12:27:27 TIMER: Check auto-disconnect...
09.11 12:27:45 STATS: vdl.0 cache, locks:4
09.11 12:28:27 TIMER: Check auto-disconnect...
09.11 12:28:45 STATS: vdl.0 cache, locks:4
09.11 12:29:27 TIMER: Check auto-disconnect...
09.11 12:29:45 STATS: vdl.0 cache, locks:4
09.11 12:30:27 TIMER: Check auto-disconnect...
09.11 12:30:45 STATS: vdl.0 cache, locks:4
09.11 12:31:27 TIMER: Check auto-disconnect...
09.11 12:31:45 STATS: vdl.0 cache, locks:4
09.11 12:32:27 TIMER: Check auto-disconnect...
09.11 12:32:45 STATS: vdl.0 cache, locks:4
09.11 12:33:27 TIMER: Check auto-disconnect...
09.11 12:33:45 STATS: vdl.0 cache, locks:4
09.11 12:34:27 TIMER: Check auto-disconnect...
09.11 12:34:45 STATS: vdl.0 cache, locks:4
09.11 12:35:27 TIMER: Check auto-disconnect...
09.11 12:35:45 STATS: vdl.0 cache, locks:4
09.11 12:36:27 TIMER: Check auto-disconnect...
09.11 12:36:45 STATS: vdl.0 cache, locks:4
09.11 12:37:27 TIMER: Check auto-disconnect...
09.11 12:37:45 STATS: vdl.0 cache, locks:4
09.11 12:38:27 TIMER: Check auto-disconnect...
09.11 12:38:45 STATS: vdl.0 cache, locks:4
09.11 12:39:27 TIMER: Check auto-disconnect...
09.11 12:39:45 STATS: vdl.0 cache, locks:4
09.11 12:40:27 TIMER: Check auto-disconnect...
09.11 12:40:45 STATS: vdl.0 cache, locks:4
09.11 12:41:27 TIMER: Check auto-disconnect...
09.11 12:41:45 STATS: vdl.0 cache, locks:4
09.11 12:42:27 TIMER: Check auto-disconnect...
09.11 12:42:45 STATS: vdl.0 cache, locks:4
09.11 12:43:27 TIMER: Check auto-disconnect...
09.11 12:43:45 STATS: vdl.0 cache, locks:4
09.11 12:44:27 TIMER: Check auto-disconnect...
09.11 12:44:45 STATS: vdl.0 cache, locks:4
09.11 12:45:27 TIMER: Check auto-disconnect...
09.11 12:45:45 STATS: vdl.0 cache, locks:4
09.11 12:46:27 TIMER: Check auto-disconnect...
09.11 12:46:45 STATS: vdl.0 cache, locks:4
09.11 12:47:27 TIMER: Check auto-disconnect...
09.11 12:47:45 STATS: vdl.0 cache, locks:4
09.11 12:48:27 TIMER: Check auto-disconnect...
09.11 12:48:45 STATS: vdl.0 cache, locks:4
09.11 12:49:27 TIMER: Check auto-disconnect...
09.11 12:49:45 STATS: vdl.0 cache, locks:4
09.11 12:50:27 TIMER: Check auto-disconnect...
09.11 12:50:45 STATS: vdl.0 cache, locks:4
09.11 12:51:27 TIMER: Check auto-disconnect...
09.11 12:51:45 STATS: vdl.0 cache, locks:4
09.11 12:52:27 TIMER: Check auto-disconnect...
09.11 12:52:45 STATS: vdl.0 cache, locks:4
09.11 12:53:27 TIMER: Check auto-disconnect...
09.11 12:53:45 STATS: vdl.0 cache, locks:4
09.11 12:54:27 TIMER: Check auto-disconnect...
09.11 12:54:45 STATS: vdl.0 cache, locks:4
09.11 12:55:27 TIMER: Check auto-disconnect...
09.11 12:55:45 STATS: vdl.0 cache, locks:4
09.11 12:56:27 TIMER: Check auto-disconnect...
09.11 12:56:27 NET: Client (name:uid16 conid:4253155 TCP) disconnected from vdl.0 (clients:0)
09.11 12:56:27 DB: SELECT id FROM battle WHERE firstid=16 OR secondid=16 AND finished <> true
09.11 12:56:27 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=16 OR secondid=16 AND finished <> true, _type => core/server.query }
09.11 12:56:27 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
09.11 12:56:27 STATS: vdl.0 cache connection, 575 calls, total 0.4042649269104 sec spent, avg 0.7 ms
09.11 12:56:27 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
09.11 12:56:27 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
09.11 12:56:27 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
09.11 12:56:27 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
09.11 12:56:27 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 16, _type => core/cache.update }
09.11 12:56:27 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
09.11 12:56:27 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 16, _type => core/cache.update }
09.11 12:56:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
09.11 12:56:27 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 16, _type => core/user.logoutPost }
09.11 12:56:27 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
09.11 12:56:45 STATS: vdl.0 cache, locks:2
09.11 12:57:27 TIMER: Check auto-disconnect...
09.11 12:57:45 STATS: vdl.0 cache, locks:2
09.11 12:58:27 TIMER: Check auto-disconnect...
09.11 12:58:45 STATS: vdl.0 cache, locks:2
09.11 12:59:27 TIMER: Check auto-disconnect...
09.11 12:59:45 STATS: vdl.0 cache, locks:2
