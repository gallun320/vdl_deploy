25.10 15:33:06 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 15:33:06 -<<-: server.login ok
25.10 15:33:06 DB: SELECT * FROM LocalizationStrings
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 TIMER: Starting timer...
25.10 15:33:06 DB: SELECT * FROM GameVars
25.10 15:33:06 TIMER: Timer running...
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
25.10 15:33:06 -<<-: core/quest.getDaily ok
25.10 15:33:06 DB: SELECT * FROM UserAttributeTypes
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM UserVariableTypes
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 15:33:06 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM ItemGroups
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM Bundles ORDER BY ID
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 SHOP: loading items...
25.10 15:33:06 ->>-: core/shop.getList { _type => core/shop.getList }
25.10 15:33:06 -<<-: core/shop.getList ok
25.10 15:33:06 SHOP: 0 items loaded (0 sec)
25.10 15:33:06 DB: SELECT * FROM EffectAttributeTypes
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM Effects
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 15:33:06 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 15:33:06 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 DB: SELECT * FROM Badges
25.10 15:33:06 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 15:33:06 -<<-: core/server.query ok
25.10 15:33:06 TIMER: Check auto-disconnect...
25.10 15:33:06 STATS: vdl.0 cache, locks:0
25.10 15:33:06 TIMER: Check auto-disconnect...
25.10 15:33:06 STATS: vdl.0 cache, locks:0
25.10 15:33:06 TIMER: Check auto-disconnect...
25.10 15:33:06 STATS: vdl.0 cache, locks:0
25.10 15:33:06 NET: Client (conid:77301279) connected to vdl.0 (clients:1)
25.10 15:33:06 TIMER: Check auto-disconnect...
25.10 15:33:06 STATS: vdl.0 cache, locks:0
25.10 15:37:07 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.10 15:37:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
25.10 15:37:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
25.10 15:37:07 -<<-: core/server.query ok
25.10 15:37:07 STATS: vdl.0 cache connection, 21 calls, total 0.347373962402344 sec spent, avg 16.54 ms
25.10 15:37:07 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
25.10 15:37:07 -<<-: core/user.isOnlineID ok
25.10 15:37:07 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
25.10 15:37:07 -<<-: core/cache.get ok
25.10 15:37:07 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
25.10 15:37:07 -<<-: core/cache.get ok
25.10 15:37:07 NET: Client login (conid:77301279, id:76, name:Aimer)
25.10 15:37:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 15:37:07 -<<-: core/user.loginPost null
25.10 15:37:07 DB: SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp
25.10 15:37:07 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp, _type => core/server.query }
25.10 15:37:07 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 15:37:07 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp)
25.10 15:37:07 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
25.10 15:37:07 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.10 15:37:07 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp), _type => core/server.pending }} }
25.10 15:37:07 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
25.10 15:37:13 ++ NET: Aimer req: user.data { messageType => user.data }
25.10 15:37:13 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
25.10 15:37:13 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
25.10 15:37:13 TIME: user.data 0.64 ms
25.10 15:37:13 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
25.10 15:37:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:37:16 TIME: user.ping 0.19 ms
25.10 15:37:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:37:16 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477399027, lastLoginDate => 299, lastLoadDate => 1026 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
25.10 15:37:16 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 15:37:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:37:24 TIME: user.ping 0.18 ms
25.10 15:37:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:37:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:37:31 TIME: user.ping 0.1 ms
25.10 15:37:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:37:39 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:37:39 TIME: user.ping 0.19 ms
25.10 15:37:39 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:37:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:37:46 TIME: user.ping 0.09 ms
25.10 15:37:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:37:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:37:53 TIME: user.ping 0.14 ms
25.10 15:37:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:38:00 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:38:00 TIME: user.ping 0.17 ms
25.10 15:38:00 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:38:06 TIMER: Check auto-disconnect...
25.10 15:38:06 STATS: vdl.0 cache, locks:2
25.10 15:38:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:38:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:38:07 TIME: user.ping 0.2 ms
25.10 15:38:15 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:38:15 TIME: user.ping 0.1 ms
25.10 15:38:15 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:38:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:38:29 TIME: user.ping 0.18 ms
25.10 15:38:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:38:31 NET: Client (name:Aimer conid:77301279 TCP) disconnected from vdl.0 (clients:0)
25.10 15:38:31 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
25.10 15:38:31 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
25.10 15:38:31 -<<-: core/server.query { list => {{ id => 72 }}, errorCode => ok, _type => core/server.query }
25.10 15:38:31 STATS: vdl.0 cache connection, 30 calls, total 0.554418563842773 sec spent, avg 18.48 ms
25.10 15:38:31 ->>-: vdl/cache.battle.infoRoom { roomId => 72, _type => vdl/cache.battle.infoRoom }
25.10 15:38:31 -<<-: vdl/cache.battle.infoRoom { secondId => 2, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 76 }
25.10 15:38:31 ->>-: vdl/cache.battle.deleteRoom { roomId => 72, _type => vdl/cache.battle.deleteRoom }
25.10 15:38:31 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 15:38:31 ->>-: core/user.sendTo { id => 2, _type => core/user.sendTo, msg => { _type => battle.end } }
25.10 15:38:31 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
25.10 15:38:31 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
25.10 15:38:31 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 15:38:31 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
25.10 15:38:31 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 15:38:31 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
25.10 15:38:31 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 15:38:54 NET: Client (conid:35216974) connected to vdl.0 (clients:1)
25.10 15:38:54 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.10 15:38:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
25.10 15:38:54 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
25.10 15:38:54 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
25.10 15:38:54 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
25.10 15:38:54 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 15:38:54 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
25.10 15:38:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477399027, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 76 } }
25.10 15:38:54 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
25.10 15:38:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
25.10 15:38:54 NET: Client login (conid:35216974, id:76, name:Aimer)
25.10 15:38:54 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 15:38:54 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 15:38:54 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
25.10 15:38:54 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.10 15:38:56 ++ NET: Aimer req: user.data { messageType => user.data }
25.10 15:38:56 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
25.10 15:38:56 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
25.10 15:38:56 TIME: user.data 0.28 ms
25.10 15:38:56 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
25.10 15:38:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 15:38:59 TIME: user.ping 0.27 ms
25.10 15:38:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:39:02 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
25.10 15:39:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 15:39:02 NET: Client (name:Aimer conid:35216974 TCP) disconnected from vdl.0 (clients:0)
25.10 15:39:02 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
25.10 15:39:02 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
25.10 15:39:02 NET: Client (conid:582389) connected to vdl.0 (clients:1)
25.10 15:39:02 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 15:39:02 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 15:39:02 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 15:39:02 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 15:39:02 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 215
Called from modules/VDLBattleModule.hx line 228
Called from snipe/slave/Server.hx line 994
25.10 15:39:02 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
25.10 15:39:02 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 15:39:02 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
25.10 15:39:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 15:39:02 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
25.10 15:39:02 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 15:39:06 TIMER: Check auto-disconnect...
25.10 15:39:07 STATS: vdl.0 cache, locks:0
25.10 15:39:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:39:09 TIME: user.ping 0.1 ms
25.10 15:39:09 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:39:19 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:39:19 TIME: user.ping 0.15 ms
25.10 15:39:19 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:39:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:39:28 TIME: user.ping 0.11 ms
25.10 15:39:28 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:39:29 NET: Client (name:null conid:582389 TCP) disconnected from vdl.0 (clients:0)
25.10 15:39:29 NET: Client (conid:18716441) connected to vdl.0 (clients:1)
25.10 15:39:29 ++ NET: null req: user.register { city => Weqwe, password => qweqwe, name => Acterix, year => 2312, email => eqwe123, messageType => user.register }
25.10 15:39:29 DB: SELECT ID FROM Users WHERE Name = E'Acterix'
25.10 15:39:29 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'Acterix', _type => core/server.query }
25.10 15:39:29 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 15:39:29 DB: SELECT nextval('Users_id_seq') AS id
25.10 15:39:29 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
25.10 15:39:29 -<<-: core/server.query { list => {{ id => 90 }}, errorCode => ok, _type => core/server.query }
25.10 15:39:29 ->>-: core/user.register { password => qweqwe, name => Acterix, fullParams => { city => Weqwe, password => qweqwe, name => Acterix, year => 2312, networkid => , networktype => , email => eqwe123, messageType => user.register, id => 90 }, networkid => , connectionID => 18716441, networktype => , email => , id => 90, _type => core/user.register }
25.10 15:39:29 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
25.10 15:39:29 -<<-: core/user.registerResponse { password => qweqwe, name => Acterix, _isNotify => true, fullParams => { city => Weqwe, password => qweqwe, name => Acterix, year => 2312, networkid => , networktype => , email => eqwe123, messageType => user.register, id => 90 }, networkid => , connectionID => 18716441, networktype => , email => , id => 90, _type => core/user.registerResponse }
25.10 15:39:29 == NET: null ret: user.register { type => user.register, errorCode => ok }
25.10 15:39:37 ++ NET: null req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 15:39:37 TRACE: User not logon yet.
25.10 15:39:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:39:38 TIME: user.ping 0.13 ms
25.10 15:39:38 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:39:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:39:47 TIME: user.ping 0.15 ms
25.10 15:39:47 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:39:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:39:56 TIME: user.ping 0.07 ms
25.10 15:39:56 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:40:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:40:04 TIME: user.ping 0.11 ms
25.10 15:40:04 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:40:06 TIMER: Check auto-disconnect...
25.10 15:40:07 STATS: vdl.0 cache, locks:0
25.10 15:40:14 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:40:14 TIME: user.ping 0.09 ms
25.10 15:40:14 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:40:23 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:40:23 TIME: user.ping 0.12 ms
25.10 15:40:23 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:40:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:40:32 TIME: user.ping 0.12 ms
25.10 15:40:32 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:40:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:40:41 TIME: user.ping 0.12 ms
25.10 15:40:41 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:41:06 TIMER: Check auto-disconnect...
25.10 15:41:07 STATS: vdl.0 cache, locks:0
25.10 15:41:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:41:20 TIME: user.ping 0.16 ms
25.10 15:41:20 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:41:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:41:29 TIME: user.ping 0.08 ms
25.10 15:41:29 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:41:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 15:41:38 TIME: user.ping 0.13 ms
25.10 15:41:38 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:42:06 TIMER: Check auto-disconnect...
25.10 15:42:07 STATS: vdl.0 cache, locks:0
25.10 15:43:06 TIMER: Check auto-disconnect...
25.10 15:43:07 STATS: vdl.0 cache, locks:0
25.10 15:43:09 NET: Client (name:null conid:18716441 TCP) disconnected from vdl.0 (clients:0)
25.10 15:43:31 NET: Client (conid:94694969) connected to vdl.0 (clients:1)
25.10 15:43:32 ++ NET: null req: user.register { messageType => user.register }
25.10 15:43:32 DB: SELECT * FROM users
25.10 15:43:32 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
25.10 15:43:32 -<<-: core/server.query { list => {{ password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid64, name => uid64, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, id => 64, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid67, name => uid67, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476886636,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:17:16.853975+03, language => en, id => 67, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid65, name => uid65, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476879545,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 15:19:05.058893+03, language => en, id => 65, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => qweqwe, name => asdasd, networkid => , params => {"info":{"city":"Dsadasd","year":"1231","email":"asdasdas"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.822508+03, language =>   , id => 69, deleted => false }, { password => uid66, name => uid66, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476882998,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 16:16:38.334095+03, language => en, id => 66, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }, { password => uid73, name => uid73, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889025,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:57:04.529542+03, language => en, id => 73, deleted => false }, { password => uid71, name => uid71, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888930,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:55:29.621522+03, language => en, id => 71, deleted => false }, { password => uid68, name => uid68, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888788,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.78775+03, language => en, id => 68, deleted => false }, { password => 123123, name => 123123, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:54:22.233721+03, language =>   , id => 70, deleted => false }, { password => qweqwe, name => 1qweqwe, networkid => , params => {"info":{"city":"Qweqwe","year":"1231","email":"qweqwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:56:17.221331+03, language =>   , id => 72, deleted => false }, { password => 123123, name => 123qwe, networkid => , params => {"info":{"city":"Wqe","year":"1233","email":"123qwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:59:29.773441+03, language =>   , id => 74, deleted => false }, { password => uid75, name => uid75, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889477,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:04:35.916538+03, language => en, id => 75, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890115,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language => en, id => 44, deleted => false }, { password => uid77, name => uid77, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889607,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:06:46.41184+03, language => en, id => 77, deleted => false }, { password => uid78, name => uid78, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890199,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:16:37.399803+03, language => en, id => 78, deleted => false }, { password => uid83, name => uid83, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961590,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:06:28.765885+03, language => en, id => 83, deleted => false }, { password => uid79, name => uid79, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476959779,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:36:18.869521+03, language => en, id => 79, deleted => false }, { password => uid89, name => uid89, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308423,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-24 14:26:57.401644+03, language => en, id => 89, deleted => false }, { password => uid84, name => uid84, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961768,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:09:27.02443+03, language => en, id => 84, deleted => false }, { password => kO2YJdf, name => Aimer, networkid => , params => {"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399027,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, id => 76, deleted => false }, { password => uid80, name => uid80, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476960874,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:54:32.93048+03, language => en, id => 80, deleted => false }, { password => uid81, name => uid81, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961061,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:57:40.114003+03, language => en, id => 81, deleted => false }, { password => uid85, name => uid85, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476962319,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:18:38.418977+03, language => en, id => 85, deleted => false }, { password => 123123, name => Tester, networkid => , params => {"info":{"city":"Dsda","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:58:49.229528+03, language =>   , id => 86, deleted => false }, { password => qweqwe, name => Acterix, networkid => , params => {"info":{"city":"Weqwe","year":"2312","email":"eqwe123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:39:29.554557+03, language =>   , id => 90, deleted => false }, { password => uid82, name => uid82, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961257,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:00:56.513148+03, language => en, id => 82, deleted => false }, { password => uid87, name => uid87, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, id => 87, deleted => false }, { password => uid88, name => uid88, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477049264,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-21 14:27:43.099186+03, language => en, id => 88, deleted => false }}, errorCode => ok, _type => core/server.query }
25.10 15:43:32 STATS: vdl.0 cache connection, 52 calls, total 0.667781114578247 sec spent, avg 12.84 ms
25.10 15:43:32 == NET: null ret: user.auth { type => user.auth, token => dWlkOTE= }
25.10 15:43:32 DB: SELECT ID FROM Users WHERE Name = E'uid91'
25.10 15:43:32 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid91', _type => core/server.query }
25.10 15:43:32 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 15:43:32 DB: SELECT nextval('Users_id_seq') AS id
25.10 15:43:32 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
25.10 15:43:32 -<<-: core/server.query { list => {{ id => 91 }}, errorCode => ok, _type => core/server.query }
25.10 15:43:32 ->>-: core/user.register { password => uid91, name => uid91, fullParams => { password => uid91, name => uid91, networkid => , networktype => , messageType => user.register, id => 91 }, networkid => , connectionID => 94694969, networktype => , email => , id => 91, _type => core/user.register }
25.10 15:43:32 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
25.10 15:43:32 -<<-: core/user.registerResponse { password => uid91, name => uid91, _isNotify => true, fullParams => { password => uid91, name => uid91, networkid => , networktype => , messageType => user.register, id => 91 }, networkid => , connectionID => 94694969, networktype => , email => , id => 91, _type => core/user.registerResponse }
25.10 15:43:32 == NET: null ret: user.register { type => user.register, errorCode => ok }
25.10 15:43:33 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTE= }
25.10 15:43:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid91' AND Password = E'uid91'
25.10 15:43:33 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid91' AND Password = E'uid91', _type => core/server.query }
25.10 15:43:33 -<<-: core/server.query { list => {{ name => uid91, networkid => , isbanned => false, id => 91 }}, errorCode => ok, _type => core/server.query }
25.10 15:43:33 ->>-: core/user.isOnlineID { id => 91, _type => core/user.isOnlineID }
25.10 15:43:33 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 15:43:33 ->>-: core/cache.get { type => user, v => -1, id => 91, _type => core/cache.get }
25.10 15:43:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid91, deleted => false, email => , networktype =>   , password => uid91, isbanned => false, regdate => 2016-10-25 15:43:32.477232+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 91 } }
25.10 15:43:33 ->>-: core/cache.get { type => questdata, v => -1, id => 91, _type => core/cache.get }
25.10 15:43:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 91 } }
25.10 15:43:33 NET: Client login (conid:94694969, id:91, name:uid91)
25.10 15:43:33 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 91, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 15:43:33 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 15:43:33 DB: SELECT ID FROM TempUserLogins WHERE UserID = 91 AND Date = 'today'::timestamp
25.10 15:43:33 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 91 AND Date = 'today'::timestamp, _type => core/server.query }
25.10 15:43:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 15:43:33 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (91, 'today'::timestamp)
25.10 15:43:33 ++ NET: uid91 req: user.login { messageType => user.login, token => dWlkOTE= }
25.10 15:43:33 TRACE: User already logon.
25.10 15:43:33 == NET: uid91 ret: user.login { name => uid91, type => user.login, errorCode => ok, id => 91 }
25.10 15:43:33 TRACE: 
Called from snipe/slave/Server.hx line 870
Called from snipe/slave/Server.hx line 1124
25.10 15:43:33 == NET: uid91 ret: user.join { name => uid91, type => user.join }
25.10 15:43:33 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477399413, lastLoginDate => 299, lastLoadDate => 1026 } }}, type => user, unlock => true, id => 91, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (91, 'today'::timestamp), _type => core/server.pending }} }
25.10 15:43:33 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 15:43:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 91, _type => core/cache.update }
25.10 15:43:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 15:43:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 91, _type => core/user.logoutPost }
25.10 15:43:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 15:43:33 TRACE: Could not login.
25.10 15:43:33 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
25.10 15:43:36 ++ NET: uid91 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:43:36 TIME: user.ping 0.09 ms
25.10 15:43:36 == NET: uid91 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:43:45 ++ NET: uid91 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:43:45 TIME: user.ping 0.08 ms
25.10 15:43:45 == NET: uid91 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:43:54 ++ NET: uid91 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:43:54 TIME: user.ping 0.19 ms
25.10 15:43:54 == NET: uid91 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:44:03 ++ NET: uid91 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:44:03 TIME: user.ping 0.21 ms
25.10 15:44:03 == NET: uid91 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:44:06 TIMER: Check auto-disconnect...
25.10 15:44:07 STATS: vdl.0 cache, locks:0
25.10 15:44:12 ++ NET: uid91 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:44:12 TIME: user.ping 0.16 ms
25.10 15:44:12 == NET: uid91 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:44:17 NET: Client (name:uid91 conid:94694969 TCP) disconnected from vdl.0 (clients:0)
25.10 15:44:17 DB: SELECT id FROM battle WHERE firstid=91 OR secondid=91 AND finished <> true
25.10 15:44:17 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=91 OR secondid=91 AND finished <> true, _type => core/server.query }
25.10 15:44:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 15:44:17 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 15:44:17 NET: Client (conid:52102066) connected to vdl.0 (clients:1)
25.10 15:44:17 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 15:44:17 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 15:44:17 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 215
Called from modules/VDLBattleModule.hx line 228
Called from snipe/slave/Server.hx line 994
25.10 15:44:17 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 91, _type => core/cache.update }
25.10 15:44:17 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
25.10 15:44:17 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 91, _type => core/cache.update }
25.10 15:44:17 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
25.10 15:44:17 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 91, _type => core/user.logoutPost }
25.10 15:44:17 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 15:44:17 ++ NET: null req: user.register { city => , password => 123456, name => test17, year => , email => asda, messageType => user.register }
25.10 15:44:17 DB: SELECT ID FROM Users WHERE Name = E'test17'
25.10 15:44:17 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'test17', _type => core/server.query }
25.10 15:44:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 15:44:17 DB: SELECT nextval('Users_id_seq') AS id
25.10 15:44:17 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
25.10 15:44:17 -<<-: core/server.query { list => {{ id => 92 }}, errorCode => ok, _type => core/server.query }
25.10 15:44:17 ->>-: core/user.register { password => 123456, name => test17, fullParams => { city => , password => 123456, name => test17, year => , networkid => , networktype => , email => asda, messageType => user.register, id => 92 }, networkid => , connectionID => 52102066, networktype => , email => , id => 92, _type => core/user.register }
25.10 15:44:17 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
25.10 15:44:17 -<<-: core/user.registerResponse { password => 123456, name => test17, _isNotify => true, fullParams => { city => , password => 123456, name => test17, year => , networkid => , networktype => , email => asda, messageType => user.register, id => 92 }, networkid => , connectionID => 52102066, networktype => , email => , id => 92, _type => core/user.registerResponse }
25.10 15:44:17 == NET: null ret: user.register { type => user.register, errorCode => ok }
25.10 15:44:17 ++ NET: null req: user.login { password => 123456, name => test17, messageType => user.login }
25.10 15:44:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test17' AND Password = E'123456'
25.10 15:44:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test17' AND Password = E'123456', _type => core/server.query }
25.10 15:44:17 -<<-: core/server.query { list => {{ name => test17, networkid => , isbanned => false, id => 92 }}, errorCode => ok, _type => core/server.query }
25.10 15:44:17 ->>-: core/user.isOnlineID { id => 92, _type => core/user.isOnlineID }
25.10 15:44:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 15:44:17 ->>-: core/cache.get { type => user, v => -1, id => 92, _type => core/cache.get }
25.10 15:44:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test17, deleted => false, email => , networktype =>   , password => 123456, isbanned => false, regdate => 2016-10-25 15:44:17.274208+03, language =>   , networkid => , params => { info => { city => , year => , email => asda }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 92 } }
25.10 15:44:17 ->>-: core/cache.get { type => questdata, v => -1, id => 92, _type => core/cache.get }
25.10 15:44:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 92 } }
25.10 15:44:17 NET: Client login (conid:52102066, id:92, name:test17)
25.10 15:44:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 92, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 15:44:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 15:44:17 DB: SELECT ID FROM TempUserLogins WHERE UserID = 92 AND Date = 'today'::timestamp
25.10 15:44:17 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 92 AND Date = 'today'::timestamp, _type => core/server.query }
25.10 15:44:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 15:44:17 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (92, 'today'::timestamp)
25.10 15:44:17 == NET: test17 ret: user.login { name => test17, type => user.login, errorCode => ok, id => 92 }
25.10 15:44:17 == NET: test17 ret: user.join { name => test17, type => user.join }
25.10 15:44:17 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (92, 'today'::timestamp), _type => core/server.pending }} }
25.10 15:44:17 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
25.10 15:44:17 ++ NET: test17 req: user.data { messageType => user.data }
25.10 15:44:17 ->>-: vdl/cache.user.getData { userId => 92, _type => vdl/cache.user.getData }
25.10 15:44:17 -<<-: vdl/cache.user.getData { info => { city => , year => , email => asda }, errorCode => ok, _type => vdl/cache.user.getData }
25.10 15:44:17 TIME: user.data 0.48 ms
25.10 15:44:17 == NET: test17 ret: user.data { info => { city => , year => , email => asda }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
25.10 15:44:21 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:44:21 TIME: user.ping 0.2 ms
25.10 15:44:21 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:44:27 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477399457, lastLoginDate => 299, lastLoadDate => 1026 } }}, type => user, unlock => false, id => 92, _type => core/cache.update }
25.10 15:44:27 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 15:44:30 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:44:30 TIME: user.ping 0.13 ms
25.10 15:44:30 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:44:31 ++ NET: test17 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 15:44:31 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 15:44:31 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [69,73], round => 1, id => 1, status => finished, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-24-10 17:40, startdate => 2016-24-10 17:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 15:44:31 TIME: tournament.getAvailableTournament 4.36 ms
25.10 15:44:31 == NET: test17 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [69,73], round => 1, id => 1, status => finished, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-24-10 17:40, startdate => 2016-24-10 17:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 15:44:39 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:44:39 TIME: user.ping 0.14 ms
25.10 15:44:39 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:44:45 ++ NET: test17 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
25.10 15:44:45 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 15:44:45 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76] }
25.10 15:44:45 STATS: vdl.0 cache connection, 83 calls, total 0.707259654998779 sec spent, avg 8.52 ms
25.10 15:44:45 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 15:44:45 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 15:44:45 TIME: tournament.grid 1.49 ms
25.10 15:44:45 == NET: test17 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 15:44:49 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:44:49 TIME: user.ping 0.13 ms
25.10 15:44:49 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:44:57 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:44:57 TIME: user.ping 0.11 ms
25.10 15:44:57 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:45:06 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:45:06 TIME: user.ping 0.12 ms
25.10 15:45:06 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:45:06 TIMER: Check auto-disconnect...
25.10 15:45:07 STATS: vdl.0 cache, locks:2
25.10 15:45:14 ++ NET: test17 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 15:45:14 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 15:45:14 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [69,73], round => 1, id => 1, status => finished, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-24-10 17:40, startdate => 2016-24-10 17:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 15:45:14 TIME: tournament.getAvailableTournament 3.43 ms
25.10 15:45:14 == NET: test17 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [69,73], round => 1, id => 1, status => finished, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-24-10 17:40, startdate => 2016-24-10 17:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 15:45:15 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:45:15 TIME: user.ping 0.06 ms
25.10 15:45:15 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:45:24 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:45:24 TIME: user.ping 0.11 ms
25.10 15:45:24 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:45:33 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:45:33 TIME: user.ping 0.1 ms
25.10 15:45:33 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:45:41 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:45:41 TIME: user.ping 0.17 ms
25.10 15:45:41 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:45:50 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:45:50 TIME: user.ping 0.16 ms
25.10 15:45:50 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:45:59 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:45:59 TIME: user.ping 0.11 ms
25.10 15:45:59 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:46:06 TIMER: Check auto-disconnect...
25.10 15:46:07 STATS: vdl.0 cache, locks:2
25.10 15:46:08 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:46:08 TIME: user.ping 0.08 ms
25.10 15:46:08 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:46:17 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:46:17 TIME: user.ping 0.19 ms
25.10 15:46:17 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:46:25 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:46:25 TIME: user.ping 0.2 ms
25.10 15:46:25 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:46:34 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:46:34 TIME: user.ping 0.17 ms
25.10 15:46:34 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:46:43 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:46:43 TIME: user.ping 0.09 ms
25.10 15:46:43 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:46:52 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:46:52 TIME: user.ping 0.16 ms
25.10 15:46:52 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:47:00 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:47:00 TIME: user.ping 0.18 ms
25.10 15:47:00 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:47:06 TIMER: Check auto-disconnect...
25.10 15:47:07 STATS: vdl.0 cache, locks:2
25.10 15:47:09 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:47:09 TIME: user.ping 0.08 ms
25.10 15:47:09 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:47:18 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:47:18 TIME: user.ping 0.17 ms
25.10 15:47:18 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:47:27 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:47:27 TIME: user.ping 0.12 ms
25.10 15:47:27 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:47:36 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:47:36 TIME: user.ping 0.1 ms
25.10 15:47:36 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:47:44 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:47:44 TIME: user.ping 0.16 ms
25.10 15:47:44 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:47:53 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:47:53 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:47:53 TIME: user.ping 0.08 ms
25.10 15:48:02 ++ NET: test17 req: user.ping { messageType => user.ping, msg => ok }
25.10 15:48:02 TIME: user.ping 0.15 ms
25.10 15:48:02 == NET: test17 ret: user.ping { type => user.ping, errorCode => ok }
25.10 15:48:06 TIMER: Check auto-disconnect...
25.10 15:48:07 STATS: vdl.0 cache, locks:2
