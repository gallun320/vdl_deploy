17.10 18:00:49 NET: Client (conid:90347416) connected to vdl.0 (clients:1)
17.10 18:00:50 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 18:00:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 18:00:50 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 18:00:50 -<<-: core/server.query ok
17.10 18:00:50 STATS: vdl.0 cache connection, 21 calls, total 0.0340614318847656 sec spent, avg 1.62 ms
17.10 18:00:50 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 18:00:50 -<<-: core/user.isOnlineID ok
17.10 18:00:50 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 18:00:50 -<<-: core/cache.get ok
17.10 18:00:50 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 18:00:50 -<<-: core/cache.get ok
17.10 18:00:50 NET: Client login (conid:90347416, id:36, name:uid36)
17.10 18:00:50 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 18:00:50 -<<-: core/user.loginPost null
17.10 18:00:50 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 18:00:50 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 18:00:55 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 18:00:55 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:00:57 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
17.10 18:00:57 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
17.10 18:00:57 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 18:00:57 TIME: tournament.getAvailableTournament 3.81 ms
17.10 18:00:57 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 18:00:59 ++ NET: uid36 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
17.10 18:00:59 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
17.10 18:00:59 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
17.10 18:00:59 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
17.10 18:00:59 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 18:00:59 TIME: tournament.grid 0.96 ms
17.10 18:00:59 == NET: uid36 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 18:01:20 TIMER: Check auto-disconnect...
17.10 18:01:20 STATS: vdl.0 cache, locks:2
17.10 18:01:24 ++ NET: uid36 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
17.10 18:01:24 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
17.10 18:01:24 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
17.10 18:01:24 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
17.10 18:01:24 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 18:01:24 TIME: tournament.grid 1.59 ms
17.10 18:01:24 == NET: uid36 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 18:02:20 TIMER: Check auto-disconnect...
17.10 18:02:20 STATS: vdl.0 cache, locks:2
17.10 18:02:47 ++ NET: uid36 req: user.logout { messageType => user.logout }
17.10 18:02:47 TRACE: user.logout : No such module: user
17.10 18:02:47 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
17.10 18:02:47 NET: Client (name:uid36 conid:90347416 TCP) disconnected from vdl.0 (clients:0)
17.10 18:02:47 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 18:02:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 18:02:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 18:02:47 STATS: vdl.0 cache connection, 32 calls, total 0.0489339828491211 sec spent, avg 1.53 ms
17.10 18:02:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:02:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 18:02:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:02:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 18:02:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 18:02:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 18:02:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 18:02:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:02:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 18:02:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:03:20 STATS: vdl.0 cache, locks:0
17.10 18:03:20 TIMER: Check auto-disconnect...
17.10 18:13:21 STATS: vdl.0 cache, locks:0
17.10 18:14:20 TIMER: Check auto-disconnect...
17.10 18:14:21 STATS: vdl.0 cache, locks:0
17.10 18:15:20 TIMER: Check auto-disconnect...
17.10 18:15:21 STATS: vdl.0 cache, locks:0
17.10 18:16:20 TIMER: Check auto-disconnect...
17.10 18:16:21 STATS: vdl.0 cache, locks:0
17.10 18:17:20 TIMER: Check auto-disconnect...
17.10 18:17:21 STATS: vdl.0 cache, locks:0
17.10 18:18:20 TIMER: Check auto-disconnect...
17.10 18:18:21 STATS: vdl.0 cache, locks:0
17.10 18:19:20 TIMER: Check auto-disconnect...
17.10 18:19:21 STATS: vdl.0 cache, locks:0
17.10 18:20:20 TIMER: Check auto-disconnect...
17.10 18:20:21 STATS: vdl.0 cache, locks:0
17.10 18:21:20 TIMER: Check auto-disconnect...
17.10 18:21:21 STATS: vdl.0 cache, locks:0
17.10 18:22:20 TIMER: Check auto-disconnect...
17.10 18:22:21 STATS: vdl.0 cache, locks:0
17.10 18:23:20 TIMER: Check auto-disconnect...
17.10 18:23:21 STATS: vdl.0 cache, locks:0
17.10 18:24:20 TIMER: Check auto-disconnect...
17.10 18:24:21 STATS: vdl.0 cache, locks:0
17.10 18:24:52 NET: Client (conid:92579017) connected to vdl.0 (clients:1)
17.10 18:24:53 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 18:24:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 18:24:53 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 18:24:53 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 18:24:53 STATS: vdl.0 cache connection, 37 calls, total 0.0553393363952637 sec spent, avg 1.5 ms
17.10 18:24:53 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 18:24:53 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 18:24:53 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 18:24:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 18:24:53 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 18:24:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 18:24:53 NET: Client login (conid:92579017, id:36, name:uid36)
17.10 18:24:53 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 18:24:53 -<<-: core/user.loginPost { _type => core/user.loginPost }
17.10 18:24:53 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 18:24:53 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 18:25:01 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 18:25:01 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:25:20 TIMER: Check auto-disconnect...
17.10 18:25:21 STATS: vdl.0 cache, locks:2
17.10 18:26:20 TIMER: Check auto-disconnect...
17.10 18:26:21 STATS: vdl.0 cache, locks:2
17.10 18:27:20 TIMER: Check auto-disconnect...
17.10 18:27:21 STATS: vdl.0 cache, locks:2
17.10 18:28:03 ++ NET: uid36 req: user.logout { messageType => user.logout }
17.10 18:28:03 TRACE: user.logout : No such module: user
17.10 18:28:03 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
17.10 18:28:04 NET: Client (name:uid36 conid:92579017 TCP) disconnected from vdl.0 (clients:0)
17.10 18:28:04 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 18:28:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 18:28:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 18:28:04 STATS: vdl.0 cache connection, 43 calls, total 0.0608723163604736 sec spent, avg 1.42 ms
17.10 18:28:04 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:28:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 18:28:04 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:28:04 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 18:28:04 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 18:28:04 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 18:28:04 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 18:28:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:28:04 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 18:28:04 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 18:28:12 NET: Client (conid:87543410) connected to vdl.0 (clients:1)
17.10 18:28:13 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 18:28:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 18:28:13 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 18:28:13 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 18:28:13 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 18:28:13 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 18:28:13 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 18:28:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 2, id => 36 } }
17.10 18:28:13 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 18:28:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 36 } }
17.10 18:28:13 NET: Client login (conid:87543410, id:36, name:uid36)
17.10 18:28:13 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 18:28:13 -<<-: core/user.loginPost { _type => core/user.loginPost }
17.10 18:28:13 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 18:28:13 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 18:28:20 TIMER: Check auto-disconnect...
17.10 18:28:21 STATS: vdl.0 cache, locks:2
17.10 18:28:21 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 18:28:21 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
17.10 18:28:55 ++ NET: uid36 req: user.logout { messageType => user.logout }
17.10 18:28:55 NET: Client (name:uid36 conid:87543410 TCP) disconnected from vdl.0 (clients:0)
17.10 18:28:55 TRACE: user.logout : No such module: user
17.10 18:28:55 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
17.10 18:28:55 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 18:28:55 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 18:28:55 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 18:28:55 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:28:55 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 18:28:55 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:28:55 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 18:28:55 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 18:28:55 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
17.10 18:28:55 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 18:28:55 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 18:28:55 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 18:28:55 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 18:29:20 TIMER: Check auto-disconnect...
17.10 18:29:21 STATS: vdl.0 cache, locks:0
17.10 18:30:20 TIMER: Check auto-disconnect...
17.10 18:30:21 STATS: vdl.0 cache, locks:0
17.10 18:31:20 TIMER: Check auto-disconnect...
17.10 18:31:21 STATS: vdl.0 cache, locks:0
17.10 18:32:10 NET: Client (conid:65678750) connected to vdl.0 (clients:1)
17.10 18:32:11 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 18:32:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 18:32:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 18:32:11 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 18:32:11 STATS: vdl.0 cache connection, 59 calls, total 0.0726549625396729 sec spent, avg 1.23 ms
17.10 18:32:11 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 18:32:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 18:32:11 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 18:32:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 18:32:11 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 18:32:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 18:32:11 NET: Client login (conid:65678750, id:36, name:uid36)
17.10 18:32:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 18:32:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
17.10 18:32:11 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 18:32:11 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 18:32:20 TIMER: Check auto-disconnect...
17.10 18:32:21 STATS: vdl.0 cache, locks:2
17.10 18:32:21 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 18:32:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:33:20 TIMER: Check auto-disconnect...
17.10 18:33:21 STATS: vdl.0 cache, locks:2
17.10 18:33:36 ++ NET: uid36 req: user.logout { messageType => user.logout }
17.10 18:33:36 NET: Client (name:uid36 conid:65678750 TCP) disconnected from vdl.0 (clients:0)
17.10 18:33:36 TRACE: user.logout : No such module: user
17.10 18:33:36 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
17.10 18:33:36 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 18:33:36 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 18:33:36 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 18:33:36 STATS: vdl.0 cache connection, 65 calls, total 0.0779635906219482 sec spent, avg 1.2 ms
17.10 18:33:36 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:33:36 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 18:33:36 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 18:33:36 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 18:33:36 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 18:33:36 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 18:33:36 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 18:33:36 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 18:33:36 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 18:33:36 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 18:34:20 TIMER: Check auto-disconnect...
17.10 18:34:21 STATS: vdl.0 cache, locks:0
17.10 18:35:20 TIMER: Check auto-disconnect...
17.10 18:35:21 STATS: vdl.0 cache, locks:0
17.10 18:36:20 TIMER: Check auto-disconnect...
17.10 18:36:21 STATS: vdl.0 cache, locks:0
17.10 18:37:20 TIMER: Check auto-disconnect...
17.10 18:37:21 STATS: vdl.0 cache, locks:0
17.10 18:38:20 TIMER: Check auto-disconnect...
17.10 18:38:21 STATS: vdl.0 cache, locks:0
17.10 18:39:20 TIMER: Check auto-disconnect...
17.10 18:39:21 STATS: vdl.0 cache, locks:0
17.10 18:40:20 TIMER: Check auto-disconnect...
17.10 18:42:29 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
17.10 18:42:29 -<<-: server.login ok
17.10 18:42:29 DB: SELECT * FROM LocalizationStrings
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 TIMER: Starting timer...
17.10 18:42:29 TIMER: Timer running...
17.10 18:42:29 DB: SELECT * FROM GameVars
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
17.10 18:42:29 -<<-: core/quest.getDaily ok
17.10 18:42:29 DB: SELECT * FROM UserAttributeTypes
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM UserVariableTypes
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
17.10 18:42:29 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM ItemGroups
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM Bundles ORDER BY ID
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM BundleItems ORDER BY ID
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 SHOP: loading items...
17.10 18:42:29 ->>-: core/shop.getList { _type => core/shop.getList }
17.10 18:42:29 -<<-: core/shop.getList ok
17.10 18:42:29 SHOP: 0 items loaded (0.001 sec)
17.10 18:42:29 DB: SELECT * FROM EffectAttributeTypes
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM Effects
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 18:42:29 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 18:42:29 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 DB: SELECT * FROM Badges
17.10 18:42:29 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
17.10 18:42:29 -<<-: core/server.query ok
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
17.10 18:42:29 TIMER: Check auto-disconnect...
17.10 18:42:29 STATS: vdl.0 cache, locks:0
