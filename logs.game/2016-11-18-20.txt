18.11 20:00:02 TIMER: Check auto-disconnect...
18.11 20:00:02 STATS: vdl.0 cache, locks:2
18.11 20:00:03 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:00:03 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:03 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 20:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:03 STATS: vdl.0 cache connection, 40 calls, total 0.0517871379852295 sec spent, avg 1.29 ms
18.11 20:00:03 TIME: tournament.getAvailableTournament 6.11 ms
18.11 20:00:03 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 20:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:00:05 TIME: user.ping 0.16 ms
18.11 20:00:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:00:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:00:26 TIME: user.ping 0.18 ms
18.11 20:00:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:00:42 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:00:42 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:42 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:42 TIME: tournament.getAvailableTournament 4.37 ms
18.11 20:00:42 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:00:47 TIME: user.ping 0.15 ms
18.11 20:00:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:00:56 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:00:56 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
18.11 20:00:56 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:00:56 TIME: user.data 1.32 ms
18.11 20:00:56 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:00:56 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
18.11 20:00:56 ->>-: vdl/cache.tournament.getPrice { tournamentId => 1, _type => vdl/cache.tournament.getPrice }
18.11 20:00:56 -<<-: vdl/cache.tournament.getPrice { price => 300, _type => vdl/cache.tournament.getPrice }
18.11 20:00:56 ->>-: vdl/cache.tournament.addUsers { userId => 76, passTournament => null, tournament => 1, _type => vdl/cache.tournament.addUsers }
18.11 20:00:56 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
18.11 20:00:56 TIME: tournament.addUsers 2.72 ms
18.11 20:00:56 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
18.11 20:00:56 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:00:56 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:56 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:56 TIME: tournament.getAvailableTournament 3.61 ms
18.11 20:00:56 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:00:58 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:00:58 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:00:58 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:00:58 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:00:58 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12,76] }
18.11 20:00:58 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:00:58 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:00:58 TIME: tournament.grid 6.24 ms
18.11 20:00:58 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:01:02 TIMER: Check auto-disconnect...
18.11 20:01:02 STATS: vdl.0 cache, locks:2
18.11 20:01:02 ->>-: core/cache.update { diff => {params => { attrs => { money => 3 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:01:02 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
18.11 20:01:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:01:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:01:08 TIME: user.ping 0.18 ms
18.11 20:01:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:01:30 TIME: user.ping 0.18 ms
18.11 20:01:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:01:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:01:51 TIME: user.ping 0.17 ms
18.11 20:01:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:02:02 TIMER: Check auto-disconnect...
18.11 20:02:02 STATS: vdl.0 cache, locks:2
18.11 20:02:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:02:12 TIME: user.ping 0.18 ms
18.11 20:02:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:02:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:02:34 TIME: user.ping 0.2 ms
18.11 20:02:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:02:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:02:55 TIME: user.ping 0.17 ms
18.11 20:02:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:03:02 TIMER: Check auto-disconnect...
18.11 20:03:02 STATS: vdl.0 cache, locks:2
18.11 20:03:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:03:16 TIME: user.ping 0.18 ms
18.11 20:03:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:03:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:03:37 TIME: user.ping 0.19 ms
18.11 20:03:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:03:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:03:59 TIME: user.ping 0.18 ms
18.11 20:03:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:04:02 TIMER: Check auto-disconnect...
18.11 20:04:02 STATS: vdl.0 cache, locks:2
18.11 20:04:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:04:20 TIME: user.ping 0.2 ms
18.11 20:04:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:04:28 NET: Client (name:Aimer conid:64633216 WS) disconnected from vdl.0 (clients:0)
18.11 20:04:28 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
18.11 20:04:28 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
18.11 20:04:28 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.11 20:04:28 STATS: vdl.0 cache connection, 50 calls, total 0.0714859962463379 sec spent, avg 1.43 ms
18.11 20:04:28 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.11 20:04:28 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.11 20:04:28 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.11 20:04:28 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 497
Called from modules/VDLBattleModule.hx line 510
Called from snipe/slave/Server.hx line 994
18.11 20:04:28 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
18.11 20:04:28 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
18.11 20:04:28 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
18.11 20:04:28 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.11 20:04:28 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
18.11 20:04:28 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.11 20:05:02 TIMER: Check auto-disconnect...
18.11 20:05:02 STATS: vdl.0 cache, locks:0
18.11 20:05:15 NET: Client (conid:41747259) connected to vdl.0 (clients:1)
18.11 20:05:15 NET: Client (conid:41747259) switched protocol to WS
18.11 20:05:16 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
18.11 20:05:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
18.11 20:05:16 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
18.11 20:05:16 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
18.11 20:05:16 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
18.11 20:05:16 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.11 20:05:16 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
18.11 20:05:16 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479468312, lastLoginDate => 323, money => 3, lastLoadDate => 1119 }, effects => { list => [] } }}, version => 0, id => 76 } }
18.11 20:05:16 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
18.11 20:05:16 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
18.11 20:05:16 NET: Client login (conid:41747259, id:76, name:Aimer)
18.11 20:05:16 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
18.11 20:05:16 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.11 20:05:16 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
18.11 20:05:16 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
18.11 20:05:16 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:05:16 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
18.11 20:05:16 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:05:16 TIME: user.data 0.76 ms
18.11 20:05:16 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:05:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:05:20 TIME: user.ping 0.2 ms
18.11 20:05:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:05:22 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:05:22 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.11 20:05:36 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:05:36 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:05:36 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:05:36 STATS: vdl.0 cache connection, 62 calls, total 0.0900518894195557 sec spent, avg 1.45 ms
18.11 20:05:36 TIME: tournament.getAvailableTournament 5.81 ms
18.11 20:05:36 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:05:38 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:05:38 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:05:38 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:05:38 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:05:38 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12,76] }
18.11 20:05:38 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:05:38 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:05:38 TIME: tournament.grid 2.31 ms
18.11 20:05:38 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:05:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:05:41 TIME: user.ping 0.14 ms
18.11 20:05:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:05:53 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
18.11 20:05:53 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
18.11 20:05:53 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:05:53 TIME: tournament.deleteUsers 2.25 ms
18.11 20:05:53 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:05:53 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:05:53 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:05:53 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:05:53 TIME: tournament.getAvailableTournament 2.67 ms
18.11 20:05:53 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:05:56 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:05:56 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
18.11 20:05:56 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:05:56 TIME: user.data 1.03 ms
18.11 20:05:56 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:06:01 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:06:01 TIME: user.addMoney 0.31 ms
18.11 20:06:01 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 103 }
18.11 20:06:01 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:06:01 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 103 }
18.11 20:06:01 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:06:01 TIME: user.data 0.68 ms
18.11 20:06:01 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:06:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:06:01 TIME: user.ping 0.18 ms
18.11 20:06:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:06:02 TIMER: Check auto-disconnect...
18.11 20:06:02 STATS: vdl.0 cache, locks:2
18.11 20:06:05 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:06:05 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 103 }
18.11 20:06:05 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:06:05 TIME: user.data 0.91 ms
18.11 20:06:05 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:06:07 ->>-: core/cache.update { diff => {params => { attrs => { money => 103 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:06:07 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.11 20:06:07 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:06:07 TIME: user.addMoney 0.5 ms
18.11 20:06:07 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 203 }
18.11 20:06:07 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:06:07 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:06:07 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:06:07 TIME: user.data 0.68 ms
18.11 20:06:07 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:06:09 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:06:09 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:06:09 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:06:09 TIME: user.data 0.72 ms
18.11 20:06:09 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:06:11 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:06:11 TIME: user.addMoney 0.35 ms
18.11 20:06:11 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 303 }
18.11 20:06:11 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:06:11 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
18.11 20:06:11 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:06:11 TIME: user.data 0.6 ms
18.11 20:06:11 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:06:14 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:06:14 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
18.11 20:06:14 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:06:14 TIME: user.data 0.72 ms
18.11 20:06:14 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:06:14 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
18.11 20:06:14 ->>-: vdl/cache.tournament.getPrice { tournamentId => 1, _type => vdl/cache.tournament.getPrice }
18.11 20:06:14 -<<-: vdl/cache.tournament.getPrice { price => 300, _type => vdl/cache.tournament.getPrice }
18.11 20:06:14 ->>-: vdl/cache.tournament.addUsers { userId => 76, passTournament => null, tournament => 1, _type => vdl/cache.tournament.addUsers }
18.11 20:06:14 -<<-: vdl/cache.tournament.addUsers { errorCode => userExist, _type => vdl/cache.tournament.addUsers }
18.11 20:06:14 TIME: tournament.addUsers 1.66 ms
18.11 20:06:14 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => userExist, _type => vdl/cache.tournament.addUsers }
18.11 20:06:22 ->>-: core/cache.update { diff => {params => { attrs => { money => 3 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:06:22 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
18.11 20:06:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:06:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:06:22 TIME: user.ping 0.19 ms
18.11 20:06:35 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:06:35 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:35 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:35 TIME: tournament.getAvailableTournament 4.22 ms
18.11 20:06:35 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:37 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:06:37 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:06:37 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:06:37 STATS: vdl.0 cache connection, 80 calls, total 0.109370708465576 sec spent, avg 1.37 ms
18.11 20:06:37 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:06:37 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12,76] }
18.11 20:06:37 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:06:37 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:06:37 TIME: tournament.grid 2.36 ms
18.11 20:06:37 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:06:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:06:44 TIME: user.ping 0.17 ms
18.11 20:06:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:06:46 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
18.11 20:06:46 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
18.11 20:06:46 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:06:46 TIME: tournament.deleteUsers 0.81 ms
18.11 20:06:46 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:06:46 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:06:46 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:46 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:46 TIME: tournament.getAvailableTournament 2.68 ms
18.11 20:06:46 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:50 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:06:50 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:06:50 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:06:50 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:06:50 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12] }
18.11 20:06:50 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:06:50 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:06:50 TIME: tournament.grid 2.14 ms
18.11 20:06:50 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:06:54 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:06:54 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:54 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:54 TIME: tournament.getAvailableTournament 2.77 ms
18.11 20:06:54 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:06:59 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:06:59 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
18.11 20:06:59 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:06:59 TIME: user.data 1.22 ms
18.11 20:06:59 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:07:02 TIMER: Check auto-disconnect...
18.11 20:07:02 STATS: vdl.0 cache, locks:2
18.11 20:07:02 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:07:02 TIME: user.addMoney 0.38 ms
18.11 20:07:02 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 103 }
18.11 20:07:02 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:07:02 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 103 }
18.11 20:07:02 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:07:02 TIME: user.data 0.94 ms
18.11 20:07:02 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:07:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:07:04 TIME: user.ping 0.19 ms
18.11 20:07:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:07:07 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:07:07 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:07:07 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:07:07 TIME: tournament.getAvailableTournament 4.34 ms
18.11 20:07:07 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:07:12 ->>-: core/cache.update { diff => {params => { attrs => { money => 103 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:07:12 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
18.11 20:07:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:07:26 TIME: user.ping 0.09 ms
18.11 20:07:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:08:08 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
18.11 20:08:08 -<<-: server.login ok
18.11 20:08:08 DB: SELECT * FROM LocalizationStrings
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 TIMER: Starting timer...
18.11 20:08:08 TIMER: Timer running...
18.11 20:08:08 DB: SELECT * FROM GameVars
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
18.11 20:08:08 -<<-: core/quest.getDaily ok
18.11 20:08:08 DB: SELECT * FROM UserAttributeTypes
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM UserVariableTypes
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
18.11 20:08:08 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM ItemGroups
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM Bundles ORDER BY ID
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM BundleItems ORDER BY ID
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 SHOP: loading items...
18.11 20:08:08 ->>-: core/shop.getList { _type => core/shop.getList }
18.11 20:08:08 -<<-: core/shop.getList ok
18.11 20:08:08 SHOP: 0 items loaded (0 sec)
18.11 20:08:08 DB: SELECT * FROM EffectAttributeTypes
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM Effects
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.11 20:08:08 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.11 20:08:08 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 DB: SELECT * FROM Badges
18.11 20:08:08 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 NET: Client (conid:76773366) connected to vdl.0 (clients:1)
18.11 20:08:08 NET: Client (conid:76773366) switched protocol to WS
18.11 20:08:08 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
18.11 20:08:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
18.11 20:08:08 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
18.11 20:08:08 -<<-: core/server.query ok
18.11 20:08:08 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
18.11 20:08:08 -<<-: core/user.isOnlineID ok
18.11 20:08:08 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
18.11 20:08:08 -<<-: core/cache.get ok
18.11 20:08:08 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
18.11 20:08:08 -<<-: core/cache.get ok
18.11 20:08:08 NET: Client login (conid:76773366, id:76, name:Aimer)
18.11 20:08:08 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
18.11 20:08:08 -<<-: core/user.loginPost null
18.11 20:08:08 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
18.11 20:08:08 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
18.11 20:08:09 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:08:09 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 103 }
18.11 20:08:09 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:08:09 TIME: user.data 0.78 ms
18.11 20:08:09 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:08:10 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:08:10 TIME: user.ping 0.22 ms
18.11 20:08:10 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:08:18 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:08:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.11 20:08:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:08:32 TIME: user.ping 0.2 ms
18.11 20:08:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:08:47 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
18.11 20:08:47 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
18.11 20:08:47 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:08:47 TIME: tournament.deleteUsers 2.75 ms
18.11 20:08:47 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:08:47 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:08:47 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:08:47 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:08:47 TIME: tournament.getAvailableTournament 6.6 ms
18.11 20:08:47 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:08:52 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:08:52 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 103 }
18.11 20:08:52 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:08:52 TIME: user.data 0.75 ms
18.11 20:08:52 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:08:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:08:53 TIME: user.ping 0.24 ms
18.11 20:08:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:08:54 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:08:54 TIME: user.addMoney 0.33 ms
18.11 20:08:54 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 203 }
18.11 20:08:54 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:08:54 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:08:54 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:08:54 TIME: user.data 0.68 ms
18.11 20:08:54 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:09:02 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:09:02 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:09:02 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:09:02 TIME: tournament.getAvailableTournament 7.12 ms
18.11 20:09:02 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:09:03 ->>-: core/cache.update { diff => {params => { attrs => { money => 203 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:09:03 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.11 20:09:04 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:09:04 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:09:04 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:09:04 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:09:04 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12,76] }
18.11 20:09:04 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:09:04 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:09:04 TIME: tournament.grid 1.84 ms
18.11 20:09:04 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:09:08 TIMER: Check auto-disconnect...
18.11 20:09:08 STATS: vdl.0 cache, locks:2
18.11 20:09:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:09:13 TIME: user.ping 0.16 ms
18.11 20:09:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:09:29 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
18.11 20:09:29 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
18.11 20:09:29 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:09:29 STATS: vdl.0 cache connection, 37 calls, total 0.0513167381286621 sec spent, avg 1.39 ms
18.11 20:09:29 TIME: tournament.deleteUsers 2.07 ms
18.11 20:09:29 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:09:29 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:09:29 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:09:29 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:09:29 TIME: tournament.getAvailableTournament 2.32 ms
18.11 20:09:29 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:09:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:09:35 TIME: user.ping 0.15 ms
18.11 20:09:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:09:37 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:09:37 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:09:37 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:09:37 TIME: user.data 0.95 ms
18.11 20:09:37 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:09:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:09:55 TIME: user.ping 0.16 ms
18.11 20:09:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:10:08 TIMER: Check auto-disconnect...
18.11 20:10:08 STATS: vdl.0 cache, locks:2
18.11 20:10:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:10:16 TIME: user.ping 0.21 ms
18.11 20:10:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:11:08 TIMER: Check auto-disconnect...
18.11 20:11:08 STATS: vdl.0 cache, locks:2
18.11 20:11:08 TIMER: Check auto-disconnect...
18.11 20:11:08 STATS: vdl.0 cache, locks:2
18.11 20:12:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:12:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:12:26 TIME: user.ping 0.18 ms
18.11 20:12:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:12:47 TIME: user.ping 0.22 ms
18.11 20:12:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:13:08 TIMER: Check auto-disconnect...
18.11 20:13:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:13:08 TIME: user.ping 0.28 ms
18.11 20:13:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:13:08 STATS: vdl.0 cache, locks:2
18.11 20:13:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:13:29 TIME: user.ping 0.2 ms
18.11 20:13:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:13:34 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:13:34 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:13:34 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:13:34 STATS: vdl.0 cache connection, 40 calls, total 0.0573296546936035 sec spent, avg 1.43 ms
18.11 20:13:34 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:13:34 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12,76] }
18.11 20:13:34 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:13:34 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:13:34 TIME: tournament.grid 7.77 ms
18.11 20:13:34 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:13:38 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:13:38 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:38 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:38 TIME: tournament.getAvailableTournament 3.5 ms
18.11 20:13:38 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:40 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:13:40 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:13:40 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:13:40 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:13:40 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12,76] }
18.11 20:13:40 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:13:40 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:13:40 TIME: tournament.grid 2.15 ms
18.11 20:13:40 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:13:43 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
18.11 20:13:43 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
18.11 20:13:43 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:13:43 TIME: tournament.deleteUsers 0.84 ms
18.11 20:13:43 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:13:43 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:13:43 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:43 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:43 TIME: tournament.getAvailableTournament 2.41 ms
18.11 20:13:43 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:47 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:13:47 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:47 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:47 TIME: tournament.getAvailableTournament 2.69 ms
18.11 20:13:47 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:13:50 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:13:50 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:13:50 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:13:50 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:13:50 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12] }
18.11 20:13:50 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:13:50 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:13:50 TIME: tournament.grid 1.98 ms
18.11 20:13:50 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:13:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:13:50 TIME: user.ping 0.17 ms
18.11 20:13:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:14:08 TIMER: Check auto-disconnect...
18.11 20:14:08 STATS: vdl.0 cache, locks:2
18.11 20:14:11 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:14:11 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:14:11 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:14:11 TIME: user.data 0.99 ms
18.11 20:14:11 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:14:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:14:11 TIME: user.ping 0.16 ms
18.11 20:14:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:14:27 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:14:27 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:14:27 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:14:27 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:14:27 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12,76] }
18.11 20:14:27 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:14:27 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:14:27 TIME: tournament.grid 3.64 ms
18.11 20:14:27 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 12, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:14:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:14:32 TIME: user.ping 0.21 ms
18.11 20:14:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:14:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:14:53 TIME: user.ping 0.15 ms
18.11 20:14:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:15:08 TIMER: Check auto-disconnect...
18.11 20:15:08 STATS: vdl.0 cache, locks:2
18.11 20:15:08 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:15:08 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:15:08 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:15:08 STATS: vdl.0 cache connection, 57 calls, total 0.0791580677032471 sec spent, avg 1.39 ms
18.11 20:15:08 TIME: user.data 0.7 ms
18.11 20:15:08 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:15:14 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:15:14 TIME: user.ping 0.14 ms
18.11 20:15:14 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:15:32 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:15:32 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:15:32 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:15:32 TIME: tournament.getAvailableTournament 4.73 ms
18.11 20:15:32 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:15:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:15:35 TIME: user.ping 0.15 ms
18.11 20:15:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:15:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:15:56 TIME: user.ping 0.17 ms
18.11 20:15:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:16:08 TIMER: Check auto-disconnect...
18.11 20:16:08 STATS: vdl.0 cache, locks:2
18.11 20:16:09 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
18.11 20:16:09 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
18.11 20:16:09 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:16:09 STATS: vdl.0 cache connection, 59 calls, total 0.0856931209564209 sec spent, avg 1.45 ms
18.11 20:16:09 TIME: tournament.deleteUsers 2.16 ms
18.11 20:16:09 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:16:09 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:16:09 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:16:09 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:16:09 TIME: tournament.getAvailableTournament 2.32 ms
18.11 20:16:09 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:16:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:16:17 TIME: user.ping 0.2 ms
18.11 20:16:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:16:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:16:38 TIME: user.ping 0.21 ms
18.11 20:16:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:17:00 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:17:00 TIME: user.ping 0.07 ms
18.11 20:17:00 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:17:08 TIMER: Check auto-disconnect...
18.11 20:17:08 STATS: vdl.0 cache, locks:2
18.11 20:17:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:17:21 TIME: user.ping 0.17 ms
18.11 20:17:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:17:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:17:43 TIME: user.ping 0.15 ms
18.11 20:17:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:18:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:18:04 TIME: user.ping 0.17 ms
18.11 20:18:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:18:08 TIMER: Check auto-disconnect...
18.11 20:18:08 STATS: vdl.0 cache, locks:2
18.11 20:18:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:18:26 TIME: user.ping 0.23 ms
18.11 20:18:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:18:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:18:47 TIME: user.ping 0.23 ms
18.11 20:18:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:19:08 TIMER: Check auto-disconnect...
18.11 20:19:08 STATS: vdl.0 cache, locks:2
18.11 20:19:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:19:08 TIME: user.ping 0.18 ms
18.11 20:19:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:19:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:19:30 TIME: user.ping 0.08 ms
18.11 20:19:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:19:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:19:51 TIME: user.ping 0.23 ms
18.11 20:19:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:20:08 TIMER: Check auto-disconnect...
18.11 20:20:08 STATS: vdl.0 cache, locks:2
18.11 20:20:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:20:13 TIME: user.ping 0.18 ms
18.11 20:20:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:20:52 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
18.11 20:20:52 -<<-: server.login ok
18.11 20:20:52 DB: SELECT * FROM LocalizationStrings
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 TIMER: Starting timer...
18.11 20:20:52 TIMER: Timer running...
18.11 20:20:52 DB: SELECT * FROM GameVars
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
18.11 20:20:52 -<<-: core/quest.getDaily ok
18.11 20:20:52 DB: SELECT * FROM UserAttributeTypes
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM UserVariableTypes
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
18.11 20:20:52 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM ItemGroups
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM Bundles ORDER BY ID
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM BundleItems ORDER BY ID
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 SHOP: loading items...
18.11 20:20:52 ->>-: core/shop.getList { _type => core/shop.getList }
18.11 20:20:52 -<<-: core/shop.getList ok
18.11 20:20:52 SHOP: 0 items loaded (0 sec)
18.11 20:20:52 DB: SELECT * FROM EffectAttributeTypes
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM Effects
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.11 20:20:52 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.11 20:20:52 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:52 DB: SELECT * FROM Badges
18.11 20:20:52 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
18.11 20:20:52 -<<-: core/server.query ok
18.11 20:20:56 NET: Client (conid:29738713) connected to vdl.0 (clients:1)
18.11 20:20:56 NET: Client (conid:29738713) switched protocol to WS
18.11 20:20:56 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
18.11 20:20:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
18.11 20:20:56 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
18.11 20:20:56 -<<-: core/server.query ok
18.11 20:20:56 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
18.11 20:20:56 -<<-: core/user.isOnlineID ok
18.11 20:20:56 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
18.11 20:20:56 -<<-: core/cache.get ok
18.11 20:20:56 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
18.11 20:20:56 -<<-: core/cache.get ok
18.11 20:20:56 NET: Client login (conid:29738713, id:76, name:Aimer)
18.11 20:20:56 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
18.11 20:20:56 -<<-: core/user.loginPost null
18.11 20:20:56 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
18.11 20:20:56 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
18.11 20:20:56 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:20:56 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:20:56 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:20:56 TIME: user.data 0.59 ms
18.11 20:20:56 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:20:57 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:20:57 TIME: user.ping 0.16 ms
18.11 20:20:57 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:20:59 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:20:59 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:20:59 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:20:59 TIME: tournament.getAvailableTournament 6.38 ms
18.11 20:20:59 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:02 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:21:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.11 20:21:02 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
18.11 20:21:02 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
18.11 20:21:02 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:21:02 TIME: tournament.deleteUsers 0.59 ms
18.11 20:21:02 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:21:02 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:21:02 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:02 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:02 TIME: tournament.getAvailableTournament 1.84 ms
18.11 20:21:02 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:05 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:21:05 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:05 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:05 TIME: tournament.getAvailableTournament 4.59 ms
18.11 20:21:05 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:18 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:21:18 TIME: user.ping 0.19 ms
18.11 20:21:18 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:21:39 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:21:39 TIME: user.ping 0.22 ms
18.11 20:21:39 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:21:48 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:21:48 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:48 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:48 TIME: tournament.getAvailableTournament 4.55 ms
18.11 20:21:48 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:21:52 TIMER: Check auto-disconnect...
18.11 20:21:52 STATS: vdl.0 cache, locks:2
18.11 20:21:52 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:21:52 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:21:52 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:21:52 STATS: vdl.0 cache connection, 33 calls, total 0.0483269691467285 sec spent, avg 1.46 ms
18.11 20:21:52 TIME: user.data 1.3 ms
18.11 20:21:52 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:22:00 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
18.11 20:22:00 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
18.11 20:22:00 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
18.11 20:22:00 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.11 20:22:00 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [12] }
18.11 20:22:00 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
18.11 20:22:00 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:22:00 TIME: tournament.grid 3.4 ms
18.11 20:22:00 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 12 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.11 20:22:00 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:22:00 TIME: user.ping 0.16 ms
18.11 20:22:00 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:22:02 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:22:02 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:22:02 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:22:02 TIME: user.data 0.76 ms
18.11 20:22:02 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:22:04 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:22:04 TIME: user.addMoney 0.48 ms
18.11 20:22:04 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 303 }
18.11 20:22:04 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:22:04 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
18.11 20:22:04 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:22:04 TIME: user.data 0.54 ms
18.11 20:22:04 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:22:10 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:22:10 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
18.11 20:22:10 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:22:10 TIME: user.data 0.61 ms
18.11 20:22:10 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:22:11 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
18.11 20:22:11 ->>-: vdl/cache.tournament.getPrice { tournamentId => 1, _type => vdl/cache.tournament.getPrice }
18.11 20:22:11 -<<-: vdl/cache.tournament.getPrice { price => 300, _type => vdl/cache.tournament.getPrice }
18.11 20:22:11 ->>-: vdl/cache.tournament.addUsers { userId => 76, passTournament => null, tournament => 1, _type => vdl/cache.tournament.addUsers }
18.11 20:22:11 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
18.11 20:22:11 TIME: tournament.addUsers 2.53 ms
18.11 20:22:11 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
18.11 20:22:11 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:22:11 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:22:11 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:22:11 TIME: tournament.getAvailableTournament 2.7 ms
18.11 20:22:11 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:22:11 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:22:11 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
18.11 20:22:11 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:22:11 TIME: user.data 0.7 ms
18.11 20:22:11 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:22:17 ->>-: core/cache.update { diff => {params => { attrs => { money => 3 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:22:17 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.11 20:22:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:22:21 TIME: user.ping 0.25 ms
18.11 20:22:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:22:42 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:22:42 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:22:42 TIME: user.ping 0.18 ms
18.11 20:22:52 TIMER: Check auto-disconnect...
18.11 20:22:52 STATS: vdl.0 cache, locks:2
18.11 20:23:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:23:04 TIME: user.ping 0.2 ms
18.11 20:23:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:23:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:23:25 TIME: user.ping 0.17 ms
18.11 20:23:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:23:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:23:47 TIME: user.ping 0.18 ms
18.11 20:23:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:23:52 TIMER: Check auto-disconnect...
18.11 20:23:52 STATS: vdl.0 cache, locks:2
18.11 20:24:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:24:08 TIME: user.ping 0.18 ms
18.11 20:24:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:24:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:24:29 TIME: user.ping 0.21 ms
18.11 20:24:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:24:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:24:51 TIME: user.ping 0.17 ms
18.11 20:24:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:24:52 TIMER: Check auto-disconnect...
18.11 20:24:52 STATS: vdl.0 cache, locks:2
18.11 20:25:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:25:13 TIME: user.ping 0.31 ms
18.11 20:25:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:25:37 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:25:37 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:25:37 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:25:37 STATS: vdl.0 cache connection, 45 calls, total 0.0612807273864746 sec spent, avg 1.36 ms
18.11 20:25:37 TIME: tournament.getAvailableTournament 1.97 ms
18.11 20:25:37 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:25:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:25:37 TIME: user.ping 0.12 ms
18.11 20:25:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:25:50 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
18.11 20:25:50 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
18.11 20:25:50 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:25:50 TIME: tournament.deleteUsers 2.14 ms
18.11 20:25:50 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
18.11 20:25:50 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:25:50 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:25:50 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:25:50 TIME: tournament.getAvailableTournament 2.58 ms
18.11 20:25:50 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:25:52 TIMER: Check auto-disconnect...
18.11 20:25:52 STATS: vdl.0 cache, locks:2
18.11 20:25:53 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:25:53 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
18.11 20:25:53 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:25:53 TIME: user.data 0.96 ms
18.11 20:25:53 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:25:54 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:25:54 TIME: user.addMoney 0.39 ms
18.11 20:25:54 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 103 }
18.11 20:25:54 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:25:54 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 103 }
18.11 20:25:54 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:25:54 TIME: user.data 0.67 ms
18.11 20:25:54 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:25:57 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:25:57 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 103 }
18.11 20:25:57 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:25:57 TIME: user.data 0.8 ms
18.11 20:25:57 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 103 }
18.11 20:25:58 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:25:58 TIME: user.ping 0.13 ms
18.11 20:25:58 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:25:58 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:25:58 TIME: user.addMoney 0.36 ms
18.11 20:25:58 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 203 }
18.11 20:25:58 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:25:58 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:25:58 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:25:58 TIME: user.data 0.7 ms
18.11 20:25:58 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:26:01 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:26:01 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
18.11 20:26:01 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:26:01 TIME: user.data 0.71 ms
18.11 20:26:01 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
18.11 20:26:04 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
18.11 20:26:04 TIME: user.addMoney 0.44 ms
18.11 20:26:04 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 303 }
18.11 20:26:04 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:26:04 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
18.11 20:26:04 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:26:04 TIME: user.data 0.67 ms
18.11 20:26:04 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:26:09 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:26:09 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
18.11 20:26:09 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:26:09 TIME: user.data 0.83 ms
18.11 20:26:09 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
18.11 20:26:09 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
18.11 20:26:09 ->>-: vdl/cache.tournament.getPrice { tournamentId => 1, _type => vdl/cache.tournament.getPrice }
18.11 20:26:09 -<<-: vdl/cache.tournament.getPrice { price => 300, _type => vdl/cache.tournament.getPrice }
18.11 20:26:09 ->>-: vdl/cache.tournament.addUsers { userId => 76, passTournament => null, tournament => 1, _type => vdl/cache.tournament.addUsers }
18.11 20:26:09 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
18.11 20:26:09 TIME: tournament.addUsers 2.31 ms
18.11 20:26:09 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
18.11 20:26:09 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
18.11 20:26:09 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:26:09 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:26:09 TIME: tournament.getAvailableTournament 2.95 ms
18.11 20:26:09 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.11 20:26:09 ++ NET: Aimer req: user.data { messageType => user.data }
18.11 20:26:09 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
18.11 20:26:09 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:26:09 TIME: user.data 0.66 ms
18.11 20:26:09 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
18.11 20:26:17 ->>-: core/cache.update { diff => {params => { attrs => { money => 3 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
18.11 20:26:17 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
18.11 20:26:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:26:19 TIME: user.ping 0.16 ms
18.11 20:26:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:26:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:26:41 TIME: user.ping 0.17 ms
18.11 20:26:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:26:52 TIMER: Check auto-disconnect...
18.11 20:26:52 STATS: vdl.0 cache, locks:2
18.11 20:27:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:27:02 TIME: user.ping 0.18 ms
18.11 20:27:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:27:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:27:22 TIME: user.ping 0.17 ms
18.11 20:27:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:27:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:27:43 TIME: user.ping 0.18 ms
18.11 20:27:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:27:52 TIMER: Check auto-disconnect...
18.11 20:27:52 STATS: vdl.0 cache, locks:2
18.11 20:28:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:28:05 TIME: user.ping 0.16 ms
18.11 20:28:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:28:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:28:25 TIME: user.ping 0.19 ms
18.11 20:28:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:28:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:28:47 TIME: user.ping 0.22 ms
18.11 20:28:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:28:52 TIMER: Check auto-disconnect...
18.11 20:28:52 STATS: vdl.0 cache, locks:2
18.11 20:29:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:29:08 TIME: user.ping 0.15 ms
18.11 20:29:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:29:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:29:29 TIME: user.ping 0.15 ms
18.11 20:29:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:29:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:29:50 TIME: user.ping 0.2 ms
18.11 20:29:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:29:52 TIMER: Check auto-disconnect...
18.11 20:29:52 STATS: vdl.0 cache, locks:2
18.11 20:30:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:30:11 TIME: user.ping 0.18 ms
18.11 20:30:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:30:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:30:32 TIME: user.ping 0.2 ms
18.11 20:30:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:30:52 TIMER: Check auto-disconnect...
18.11 20:30:52 STATS: vdl.0 cache, locks:2
18.11 20:30:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:30:53 TIME: user.ping 0.18 ms
18.11 20:30:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:31:14 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:31:14 TIME: user.ping 0.19 ms
18.11 20:31:14 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:31:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:31:35 TIME: user.ping 0.18 ms
18.11 20:31:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:31:52 TIMER: Check auto-disconnect...
18.11 20:31:52 STATS: vdl.0 cache, locks:2
18.11 20:31:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:31:56 TIME: user.ping 0.21 ms
18.11 20:31:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:32:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:32:17 TIME: user.ping 0.2 ms
18.11 20:32:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:32:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:32:38 TIME: user.ping 0.16 ms
18.11 20:32:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:32:52 TIMER: Check auto-disconnect...
18.11 20:32:52 STATS: vdl.0 cache, locks:2
18.11 20:32:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:32:59 TIME: user.ping 0.16 ms
18.11 20:32:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:33:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:33:20 TIME: user.ping 0.17 ms
18.11 20:33:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:33:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
18.11 20:33:41 TIME: user.ping 0.17 ms
18.11 20:33:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
18.11 20:33:52 TIMER: Check auto-disconnect...
18.11 20:33:52 STATS: vdl.0 cache, locks:2
18.11 20:34:03 NET: Client (name:Aimer conid:29738713 WS) disconnected from vdl.0 (clients:0)
18.11 20:34:03 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
18.11 20:34:03 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
18.11 20:34:03 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.11 20:34:03 STATS: vdl.0 cache connection, 60 calls, total 0.0824108123779297 sec spent, avg 1.37 ms
18.11 20:34:03 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.11 20:34:03 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.11 20:34:03 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.11 20:34:03 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 497
Called from modules/VDLBattleModule.hx line 510
Called from snipe/slave/Server.hx line 994
18.11 20:34:03 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
18.11 20:34:03 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
18.11 20:34:03 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
18.11 20:34:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.11 20:34:03 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
18.11 20:34:03 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
