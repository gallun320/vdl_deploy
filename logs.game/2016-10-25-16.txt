25.10 16:08:25 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 16:08:25 -<<-: server.login ok
25.10 16:08:25 DB: SELECT * FROM LocalizationStrings
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 TIMER: Starting timer...
25.10 16:08:25 TIMER: Timer running...
25.10 16:08:25 DB: SELECT * FROM GameVars
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
25.10 16:08:25 -<<-: core/quest.getDaily ok
25.10 16:08:25 DB: SELECT * FROM UserAttributeTypes
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM UserVariableTypes
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 16:08:25 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM ItemGroups
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM Bundles ORDER BY ID
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 SHOP: loading items...
25.10 16:08:25 ->>-: core/shop.getList { _type => core/shop.getList }
25.10 16:08:25 -<<-: core/shop.getList ok
25.10 16:08:25 SHOP: 0 items loaded (0 sec)
25.10 16:08:25 DB: SELECT * FROM EffectAttributeTypes
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM Effects
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 16:08:25 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 16:08:25 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:25 DB: SELECT * FROM Badges
25.10 16:08:25 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 16:08:25 -<<-: core/server.query ok
25.10 16:08:26 NET: Client (conid:73488278) connected to vdl.0 (clients:1)
25.10 16:08:27 ++ NET: null req: user.register { messageType => user.register }
25.10 16:08:27 DB: SELECT * FROM users
25.10 16:08:27 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
25.10 16:08:27 -<<-: core/server.query ok
25.10 16:08:27 == NET: null ret: user.auth { type => user.auth, token => dWlkOTM= }
25.10 16:08:27 DB: SELECT ID FROM Users WHERE Name = E'uid93'
25.10 16:08:27 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid93', _type => core/server.query }
25.10 16:08:27 -<<-: core/server.query ok
25.10 16:08:27 DB: SELECT nextval('Users_id_seq') AS id
25.10 16:08:27 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
25.10 16:08:27 -<<-: core/server.query ok
25.10 16:08:27 ->>-: core/user.register { password => uid93, name => uid93, fullParams => { password => uid93, name => uid93, networkid => , networktype => , messageType => user.register, id => 93 }, networkid => , connectionID => 73488278, networktype => , email => , id => 93, _type => core/user.register }
25.10 16:08:27 -<<-: core/user.register ok
25.10 16:08:27 -<<-: core/user.registerResponse null
25.10 16:08:27 == NET: null ret: user.register { type => user.register, errorCode => ok }
25.10 16:08:27 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTM= }
25.10 16:08:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid93' AND Password = E'uid93'
25.10 16:08:27 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid93' AND Password = E'uid93', _type => core/server.query }
25.10 16:08:27 -<<-: core/server.query ok
25.10 16:08:27 ->>-: core/user.isOnlineID { id => 93, _type => core/user.isOnlineID }
25.10 16:08:27 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:08:27 ->>-: core/cache.get { type => user, v => -1, id => 93, _type => core/cache.get }
25.10 16:08:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid93, deleted => false, email => , networktype =>   , password => uid93, isbanned => false, regdate => 2016-10-25 16:08:27.066262+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 93 } }
25.10 16:08:27 ->>-: core/cache.get { type => questdata, v => -1, id => 93, _type => core/cache.get }
25.10 16:08:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 93 } }
25.10 16:08:27 NET: Client login (conid:73488278, id:93, name:uid93)
25.10 16:08:27 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 93, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:08:27 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:08:27 DB: SELECT ID FROM TempUserLogins WHERE UserID = 93 AND Date = 'today'::timestamp
25.10 16:08:27 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 93 AND Date = 'today'::timestamp, _type => core/server.query }
25.10 16:08:27 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:08:27 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (93, 'today'::timestamp)
25.10 16:08:27 == NET: uid93 ret: user.login { name => uid93, type => user.login, errorCode => ok, id => 93 }
25.10 16:08:27 == NET: uid93 ret: user.join { name => uid93, type => user.join }
25.10 16:08:27 ++ NET: uid93 req: user.login { messageType => user.login, token => dWlkOTM= }
25.10 16:08:27 TRACE: User already logon.
25.10 16:08:27 TRACE: 
Called from snipe/slave/Server.hx line 870
Called from snipe/slave/Server.hx line 1124
25.10 16:08:27 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477400907, lastLoginDate => 299, lastLoadDate => 1026 } }}, type => user, unlock => true, id => 93, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (93, 'today'::timestamp), _type => core/server.pending }} }
25.10 16:08:27 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:08:27 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 93, _type => core/cache.update }
25.10 16:08:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:08:27 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 93, _type => core/user.logoutPost }
25.10 16:08:27 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:08:27 TRACE: Could not login.
25.10 16:08:27 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
25.10 16:08:29 ++ NET: uid93 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:08:29 TIME: user.ping 0.14 ms
25.10 16:08:29 == NET: uid93 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:08:37 ++ NET: uid93 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:08:37 TIME: user.ping 0.16 ms
25.10 16:08:37 == NET: uid93 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:08:46 ++ NET: uid93 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:08:46 TIME: user.ping 0.09 ms
25.10 16:08:46 == NET: uid93 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:08:55 ++ NET: uid93 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:08:55 TIME: user.ping 0.14 ms
25.10 16:08:55 == NET: uid93 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:08:55 NET: Client (name:uid93 conid:73488278 TCP) disconnected from vdl.0 (clients:0)
25.10 16:08:55 DB: SELECT id FROM battle WHERE firstid=93 OR secondid=93 AND finished <> true
25.10 16:08:55 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=93 OR secondid=93 AND finished <> true, _type => core/server.query }
25.10 16:08:55 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:08:55 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:08:55 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 16:08:55 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:08:55 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 215
Called from modules/VDLBattleModule.hx line 228
Called from snipe/slave/Server.hx line 994
25.10 16:08:55 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 93, _type => core/cache.update }
25.10 16:08:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
25.10 16:08:55 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 93, _type => core/cache.update }
25.10 16:08:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
25.10 16:08:55 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 93, _type => core/user.logoutPost }
25.10 16:08:55 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:08:58 NET: Client (conid:74830535) connected to vdl.0 (clients:1)
25.10 16:08:59 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTM= }
25.10 16:08:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid93' AND Password = E'uid93'
25.10 16:08:59 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid93' AND Password = E'uid93', _type => core/server.query }
25.10 16:08:59 -<<-: core/server.query { list => {{ name => uid93, networkid => , isbanned => false, id => 93 }}, errorCode => ok, _type => core/server.query }
25.10 16:08:59 ->>-: core/user.isOnlineID { id => 93, _type => core/user.isOnlineID }
25.10 16:08:59 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:08:59 ->>-: core/cache.get { type => user, v => -1, id => 93, _type => core/cache.get }
25.10 16:08:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid93, deleted => false, email => , networktype =>   , password => uid93, isbanned => false, regdate => 2016-10-25 16:08:27.066262+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477400907, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 93 } }
25.10 16:08:59 ->>-: core/cache.get { type => questdata, v => -1, id => 93, _type => core/cache.get }
25.10 16:08:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 93 } }
25.10 16:08:59 NET: Client login (conid:74830535, id:93, name:uid93)
25.10 16:08:59 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 93, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:08:59 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:08:59 == NET: uid93 ret: user.login { name => uid93, type => user.login, errorCode => ok, id => 93 }
25.10 16:08:59 == NET: uid93 ret: user.join { name => uid93, type => user.join }
25.10 16:09:03 ++ NET: uid93 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:09:03 TIME: user.ping 0.16 ms
25.10 16:09:03 == NET: uid93 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:09:06 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 93, _type => core/cache.update }
25.10 16:09:06 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:09:13 ++ NET: uid93 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:09:13 TIME: user.ping 0.18 ms
25.10 16:09:13 == NET: uid93 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:09:24 ++ NET: uid93 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:09:24 TIME: user.ping 0.19 ms
25.10 16:09:24 == NET: uid93 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:09:25 TIMER: Check auto-disconnect...
25.10 16:09:26 STATS: vdl.0 cache, locks:2
25.10 16:09:35 ++ NET: uid93 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:09:35 TIME: user.ping 0.17 ms
25.10 16:09:35 == NET: uid93 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:09:42 NET: Client (name:uid93 conid:74830535 TCP) disconnected from vdl.0 (clients:0)
25.10 16:09:42 DB: SELECT id FROM battle WHERE firstid=93 OR secondid=93 AND finished <> true
25.10 16:09:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=93 OR secondid=93 AND finished <> true, _type => core/server.query }
25.10 16:09:42 NET: Client (conid:96005244) connected to vdl.0 (clients:1)
25.10 16:09:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:09:42 STATS: vdl.0 cache connection, 45 calls, total 0.0772607326507568 sec spent, avg 1.72 ms
25.10 16:09:42 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:09:42 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 16:09:42 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:09:42 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 215
Called from modules/VDLBattleModule.hx line 228
Called from snipe/slave/Server.hx line 994
25.10 16:09:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 93, _type => core/cache.update }
25.10 16:09:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:09:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 93, _type => core/cache.update }
25.10 16:09:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:09:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 93, _type => core/user.logoutPost }
25.10 16:09:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:09:42 ++ NET: null req: user.login { password => qweqwe, name => test17, messageType => user.login }
25.10 16:09:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test17' AND Password = E'qweqwe'
25.10 16:09:42 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test17' AND Password = E'qweqwe', _type => core/server.query }
25.10 16:09:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:09:42 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
25.10 16:09:42 NET: Client (name:null conid:96005244 TCP) disconnected from vdl.0 (clients:0)
25.10 16:09:42 NET: Client (conid:81718928) connected to vdl.0 (clients:1)
25.10 16:09:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 16:09:45 TIME: user.ping 0.11 ms
25.10 16:09:45 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:09:52 NET: Client (name:null conid:81718928 TCP) disconnected from vdl.0 (clients:0)
25.10 16:09:52 NET: Client (conid:66877616) connected to vdl.0 (clients:1)
25.10 16:09:52 ++ NET: null req: user.login { password => 123123, name => test17, messageType => user.login }
25.10 16:09:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test17' AND Password = E'123123'
25.10 16:09:52 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test17' AND Password = E'123123', _type => core/server.query }
25.10 16:09:52 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:09:52 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
25.10 16:09:52 NET: Client (name:null conid:66877616 TCP) disconnected from vdl.0 (clients:0)
25.10 16:09:52 NET: Client (conid:60695611) connected to vdl.0 (clients:1)
25.10 16:09:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 16:09:56 TIME: user.ping 0.16 ms
25.10 16:09:56 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:10:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 16:10:07 TIME: user.ping 0.07 ms
25.10 16:10:07 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:10:11 NET: Client (name:null conid:60695611 TCP) disconnected from vdl.0 (clients:0)
25.10 16:10:11 NET: Client (conid:22259561) connected to vdl.0 (clients:1)
25.10 16:10:11 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.10 16:10:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
25.10 16:10:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
25.10 16:10:11 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
25.10 16:10:11 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
25.10 16:10:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:10:11 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
25.10 16:10:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477399027, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 76 } }
25.10 16:10:11 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
25.10 16:10:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
25.10 16:10:11 NET: Client login (conid:22259561, id:76, name:Aimer)
25.10 16:10:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:10:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:10:11 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
25.10 16:10:11 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.10 16:10:11 ++ NET: Aimer req: user.data { messageType => user.data }
25.10 16:10:11 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
25.10 16:10:11 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
25.10 16:10:11 TIME: user.data 0.23 ms
25.10 16:10:11 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
25.10 16:10:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:10:17 TIME: user.ping 0.15 ms
25.10 16:10:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:10:21 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
25.10 16:10:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:10:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:10:25 TIME: user.ping 0.14 ms
25.10 16:10:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:10:25 TIMER: Check auto-disconnect...
25.10 16:10:26 STATS: vdl.0 cache, locks:2
25.10 16:10:34 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:10:34 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:10:34 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-24-10 17:40, startdate => 2016-24-10 17:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:10:34 TIME: tournament.getAvailableTournament 4.59 ms
25.10 16:10:34 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-24-10 17:40, startdate => 2016-24-10 17:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:10:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:10:34 TIME: user.ping 0.13 ms
25.10 16:10:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:10:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:10:44 TIME: user.ping 0.16 ms
25.10 16:10:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:11:25 TIMER: Check auto-disconnect...
25.10 16:11:26 STATS: vdl.0 cache, locks:2
25.10 16:12:25 TIMER: Check auto-disconnect...
25.10 16:12:26 STATS: vdl.0 cache, locks:2
25.10 16:13:25 TIMER: Check auto-disconnect...
25.10 16:13:26 STATS: vdl.0 cache, locks:2
25.10 16:13:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:13:35 TIME: user.ping 0.11 ms
25.10 16:13:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:13:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:13:44 TIME: user.ping 0.38 ms
25.10 16:13:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:13:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:13:53 TIME: user.ping 0.14 ms
25.10 16:13:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:14:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:14:02 TIME: user.ping 0.16 ms
25.10 16:14:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:14:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:14:11 TIME: user.ping 0.08 ms
25.10 16:14:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:14:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:14:20 TIME: user.ping 0.17 ms
25.10 16:14:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:14:25 TIMER: Check auto-disconnect...
25.10 16:14:26 STATS: vdl.0 cache, locks:2
25.10 16:14:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:14:28 TIME: user.ping 0.13 ms
25.10 16:14:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:14:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:14:37 TIME: user.ping 0.23 ms
25.10 16:14:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:14:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:14:46 TIME: user.ping 0.16 ms
25.10 16:14:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:14:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:14:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:14:55 TIME: user.ping 0.21 ms
25.10 16:15:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:15:04 TIME: user.ping 0.08 ms
25.10 16:15:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:15:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:15:13 TIME: user.ping 0.11 ms
25.10 16:15:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:15:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:15:21 TIME: user.ping 0.14 ms
25.10 16:15:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:15:25 TIMER: Check auto-disconnect...
25.10 16:15:26 STATS: vdl.0 cache, locks:2
25.10 16:15:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:15:30 TIME: user.ping 0.12 ms
25.10 16:15:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:15:39 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:15:39 TIME: user.ping 0.07 ms
25.10 16:15:39 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:15:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:15:48 TIME: user.ping 0.15 ms
25.10 16:15:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:15:57 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:15:57 TIME: user.ping 0.15 ms
25.10 16:15:57 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:16:03 NET: Client (name:Aimer conid:22259561 TCP) disconnected from vdl.0 (clients:0)
25.10 16:16:03 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
25.10 16:16:03 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
25.10 16:16:03 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:16:03 STATS: vdl.0 cache connection, 60 calls, total 0.0933711528778076 sec spent, avg 1.56 ms
25.10 16:16:03 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:16:03 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 16:16:03 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:16:03 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 215
Called from modules/VDLBattleModule.hx line 228
Called from snipe/slave/Server.hx line 994
25.10 16:16:03 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
25.10 16:16:03 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:16:03 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
25.10 16:16:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:16:03 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
25.10 16:16:03 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:16:06 NET: Client (conid:72054636) connected to vdl.0 (clients:1)
25.10 16:16:07 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.10 16:16:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
25.10 16:16:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
25.10 16:16:07 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
25.10 16:16:07 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
25.10 16:16:07 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:16:07 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
25.10 16:16:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477399027, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 2, id => 76 } }
25.10 16:16:07 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
25.10 16:16:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 76 } }
25.10 16:16:07 NET: Client login (conid:72054636, id:76, name:Aimer)
25.10 16:16:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:16:07 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:16:07 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
25.10 16:16:07 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.10 16:16:09 ++ NET: Aimer req: user.data { messageType => user.data }
25.10 16:16:09 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
25.10 16:16:09 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
25.10 16:16:09 TIME: user.data 0.26 ms
25.10 16:16:09 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
25.10 16:16:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:16:12 TIME: user.ping 0.13 ms
25.10 16:16:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:16:15 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:16:15 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:15 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 20:40, startdate => 2016-25-10 20:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:15 TIME: tournament.getAvailableTournament 1.64 ms
25.10 16:16:15 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 20:40, startdate => 2016-25-10 20:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:16 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
25.10 16:16:16 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
25.10 16:16:21 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
25.10 16:16:21 ->>-: vdl/cache.tournament.addUsers { userId => 76, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 16:16:21 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:16:21 TIME: tournament.addUsers 0.52 ms
25.10 16:16:21 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:16:21 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:16:21 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:21 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-25-10 20:40, startdate => 2016-25-10 20:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:21 TIME: tournament.getAvailableTournament 2.23 ms
25.10 16:16:21 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-25-10 20:40, startdate => 2016-25-10 20:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:16:21 TIME: user.ping 0.14 ms
25.10 16:16:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:16:23 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
25.10 16:16:23 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 16:16:23 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76] }
25.10 16:16:23 ->>-: vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [], _type => vdl/cache.tournament.setUsersTournament }
25.10 16:16:23 -<<-: vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
25.10 16:16:23 TIME: tournament.deleteUsers 0.52 ms
25.10 16:16:23 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok }
25.10 16:16:23 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:16:23 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:23 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 20:40, startdate => 2016-25-10 20:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:23 TIME: tournament.getAvailableTournament 0.72 ms
25.10 16:16:23 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 20:40, startdate => 2016-25-10 20:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:25 TIMER: Check auto-disconnect...
25.10 16:16:26 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
25.10 16:16:26 ->>-: vdl/cache.tournament.addUsers { userId => 76, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 16:16:26 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:16:26 TIME: tournament.addUsers 0.21 ms
25.10 16:16:26 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:16:26 STATS: vdl.0 cache, locks:2
25.10 16:16:26 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:16:26 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:26 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-25-10 20:40, startdate => 2016-25-10 20:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:26 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-25-10 20:40, startdate => 2016-25-10 20:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:16:26 TIME: tournament.getAvailableTournament 1.2 ms
25.10 16:16:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:16:30 TIME: user.ping 0.08 ms
25.10 16:16:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:16:33 NET: Client (name:Aimer conid:72054636 TCP) disconnected from vdl.0 (clients:0)
25.10 16:16:33 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
25.10 16:16:33 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
25.10 16:16:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:16:33 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:16:33 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 16:16:33 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:16:33 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 215
Called from modules/VDLBattleModule.hx line 228
Called from snipe/slave/Server.hx line 994
25.10 16:16:33 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
25.10 16:16:33 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
25.10 16:16:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
25.10 16:16:33 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:16:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
25.10 16:16:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:17:25 TIMER: Check auto-disconnect...
25.10 16:17:26 STATS: vdl.0 cache, locks:0
25.10 16:18:25 TIMER: Check auto-disconnect...
25.10 16:18:26 STATS: vdl.0 cache, locks:0
25.10 16:19:25 TIMER: Check auto-disconnect...
25.10 16:19:26 STATS: vdl.0 cache, locks:0
25.10 16:20:25 TIMER: Check auto-disconnect...
25.10 16:20:26 STATS: vdl.0 cache, locks:0
25.10 16:21:25 TIMER: Check auto-disconnect...
25.10 16:21:26 STATS: vdl.0 cache, locks:0
25.10 16:22:25 TIMER: Check auto-disconnect...
25.10 16:22:26 STATS: vdl.0 cache, locks:0
25.10 16:23:25 TIMER: Check auto-disconnect...
25.10 16:23:26 STATS: vdl.0 cache, locks:0
25.10 16:24:25 TIMER: Check auto-disconnect...
25.10 16:24:26 STATS: vdl.0 cache, locks:0
25.10 16:25:25 TIMER: Check auto-disconnect...
25.10 16:25:26 STATS: vdl.0 cache, locks:0
25.10 16:26:25 TIMER: Check auto-disconnect...
25.10 16:26:39 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 16:26:39 -<<-: server.login ok
25.10 16:26:39 DB: SELECT * FROM LocalizationStrings
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 TIMER: Starting timer...
25.10 16:26:39 TIMER: Timer running...
25.10 16:26:39 DB: SELECT * FROM GameVars
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
25.10 16:26:39 -<<-: core/quest.getDaily ok
25.10 16:26:39 DB: SELECT * FROM UserAttributeTypes
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM UserVariableTypes
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 16:26:39 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM ItemGroups
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM Bundles ORDER BY ID
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 SHOP: loading items...
25.10 16:26:39 ->>-: core/shop.getList { _type => core/shop.getList }
25.10 16:26:39 -<<-: core/shop.getList ok
25.10 16:26:39 SHOP: 0 items loaded (0.001 sec)
25.10 16:26:39 DB: SELECT * FROM EffectAttributeTypes
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM Effects
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 16:26:39 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 16:26:39 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 DB: SELECT * FROM Badges
25.10 16:26:39 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 16:26:39 -<<-: core/server.query ok
25.10 16:26:39 TIMER: Check auto-disconnect...
25.10 16:26:39 STATS: vdl.0 cache, locks:0
25.10 16:26:39 TIMER: Check auto-disconnect...
25.10 16:26:39 STATS: vdl.0 cache, locks:0
25.10 16:26:39 TIMER: Check auto-disconnect...
25.10 16:26:39 STATS: vdl.0 cache, locks:0
25.10 16:26:39 TIMER: Check auto-disconnect...
25.10 16:26:39 STATS: vdl.0 cache, locks:0
25.10 16:26:39 TIMER: Check auto-disconnect...
25.10 16:26:39 STATS: vdl.0 cache, locks:0
25.10 16:32:10 NET: Client (conid:17883170) connected to vdl.0 (clients:1)
25.10 16:32:10 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.10 16:32:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
25.10 16:32:10 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
25.10 16:32:10 -<<-: core/server.query ok
25.10 16:32:10 STATS: vdl.0 cache connection, 21 calls, total 0.0241403579711914 sec spent, avg 1.15 ms
25.10 16:32:10 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
25.10 16:32:10 -<<-: core/user.isOnlineID ok
25.10 16:32:10 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
25.10 16:32:10 -<<-: core/cache.get ok
25.10 16:32:10 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
25.10 16:32:10 -<<-: core/cache.get ok
25.10 16:32:10 NET: Client login (conid:17883170, id:76, name:Aimer)
25.10 16:32:10 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:32:10 -<<-: core/user.loginPost null
25.10 16:32:10 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
25.10 16:32:10 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.10 16:32:11 ++ NET: Aimer req: user.data { messageType => user.data }
25.10 16:32:11 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
25.10 16:32:11 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
25.10 16:32:11 TIME: user.data 0.84 ms
25.10 16:32:11 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
25.10 16:32:14 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:32:14 TIME: user.ping 0.08 ms
25.10 16:32:14 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:32:16 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:32:16 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:16 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:16 TIME: tournament.getAvailableTournament 3.66 ms
25.10 16:32:16 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:17 NET: Client (conid:46674035) connected to vdl.0 (clients:2)
25.10 16:32:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
25.10 16:32:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:32:19 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
25.10 16:32:19 ->>-: vdl/cache.tournament.addUsers { userId => 76, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 16:32:19 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:32:19 TIME: tournament.addUsers 0.56 ms
25.10 16:32:19 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:32:19 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:32:19 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:19 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:19 TIME: tournament.getAvailableTournament 3.22 ms
25.10 16:32:19 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:22 ++ NET: null req: user.register { messageType => user.register }
25.10 16:32:22 DB: SELECT * FROM users
25.10 16:32:22 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
25.10 16:32:22 -<<-: core/server.query { list => {{ password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid64, name => uid64, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, id => 64, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid67, name => uid67, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476886636,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:17:16.853975+03, language => en, id => 67, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid65, name => uid65, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476879545,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 15:19:05.058893+03, language => en, id => 65, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => qweqwe, name => asdasd, networkid => , params => {"info":{"city":"Dsadasd","year":"1231","email":"asdasdas"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.822508+03, language =>   , id => 69, deleted => false }, { password => uid66, name => uid66, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476882998,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 16:16:38.334095+03, language => en, id => 66, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }, { password => uid73, name => uid73, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889025,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:57:04.529542+03, language => en, id => 73, deleted => false }, { password => uid71, name => uid71, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888930,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:55:29.621522+03, language => en, id => 71, deleted => false }, { password => uid68, name => uid68, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888788,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.78775+03, language => en, id => 68, deleted => false }, { password => 123123, name => 123123, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:54:22.233721+03, language =>   , id => 70, deleted => false }, { password => qweqwe, name => 1qweqwe, networkid => , params => {"info":{"city":"Qweqwe","year":"1231","email":"qweqwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:56:17.221331+03, language =>   , id => 72, deleted => false }, { password => 123123, name => 123qwe, networkid => , params => {"info":{"city":"Wqe","year":"1233","email":"123qwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:59:29.773441+03, language =>   , id => 74, deleted => false }, { password => uid75, name => uid75, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889477,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:04:35.916538+03, language => en, id => 75, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890115,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language => en, id => 44, deleted => false }, { password => uid77, name => uid77, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889607,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:06:46.41184+03, language => en, id => 77, deleted => false }, { password => uid78, name => uid78, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890199,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:16:37.399803+03, language => en, id => 78, deleted => false }, { password => uid83, name => uid83, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961590,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:06:28.765885+03, language => en, id => 83, deleted => false }, { password => kO2YJdf, name => Aimer, networkid => , params => {"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399027,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, id => 76, deleted => false }, { password => uid79, name => uid79, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476959779,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:36:18.869521+03, language => en, id => 79, deleted => false }, { password => uid89, name => uid89, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308423,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-24 14:26:57.401644+03, language => en, id => 89, deleted => false }, { password => uid84, name => uid84, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961768,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:09:27.02443+03, language => en, id => 84, deleted => false }, { password => uid80, name => uid80, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476960874,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:54:32.93048+03, language => en, id => 80, deleted => false }, { password => uid81, name => uid81, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961061,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:57:40.114003+03, language => en, id => 81, deleted => false }, { password => uid85, name => uid85, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476962319,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:18:38.418977+03, language => en, id => 85, deleted => false }, { password => 123123, name => Tester, networkid => , params => {"info":{"city":"Dsda","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:58:49.229528+03, language =>   , id => 86, deleted => false }, { password => qweqwe, name => Acterix, networkid => , params => {"info":{"city":"Weqwe","year":"2312","email":"eqwe123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:39:29.554557+03, language =>   , id => 90, deleted => false }, { password => uid91, name => uid91, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399413,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:43:32.477232+03, language => en, id => 91, deleted => false }, { password => uid82, name => uid82, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961257,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:00:56.513148+03, language => en, id => 82, deleted => false }, { password => uid87, name => uid87, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, id => 87, deleted => false }, { password => uid88, name => uid88, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477049264,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-21 14:27:43.099186+03, language => en, id => 88, deleted => false }, { password => 123456, name => test17, networkid => , params => {"info":{"city":"","year":"","email":"asda"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399457,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:44:17.274208+03, language => en, id => 92, deleted => false }, { password => uid93, name => uid93, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477400907,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:08:27.066262+03, language => en, id => 93, deleted => false }}, errorCode => ok, _type => core/server.query }
25.10 16:32:22 == NET: null ret: user.auth { type => user.auth, token => dWlkOTQ= }
25.10 16:32:22 DB: SELECT ID FROM Users WHERE Name = E'uid94'
25.10 16:32:22 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid94', _type => core/server.query }
25.10 16:32:22 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:32:22 DB: SELECT nextval('Users_id_seq') AS id
25.10 16:32:22 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
25.10 16:32:22 -<<-: core/server.query { list => {{ id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 16:32:22 ->>-: core/user.register { password => uid94, name => uid94, fullParams => { password => uid94, name => uid94, networkid => , networktype => , messageType => user.register, id => 94 }, networkid => , connectionID => 46674035, networktype => , email => , id => 94, _type => core/user.register }
25.10 16:32:22 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
25.10 16:32:22 -<<-: core/user.registerResponse { password => uid94, name => uid94, _isNotify => true, fullParams => { password => uid94, name => uid94, networkid => , networktype => , messageType => user.register, id => 94 }, networkid => , connectionID => 46674035, networktype => , email => , id => 94, _type => core/user.registerResponse }
25.10 16:32:22 == NET: null ret: user.register { type => user.register, errorCode => ok }
25.10 16:32:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:32:22 TIME: user.ping 0.19 ms
25.10 16:32:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:32:26 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
25.10 16:32:26 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 16:32:26 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 16:32:26 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 16:32:26 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76] }
25.10 16:32:26 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 16:32:26 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:32:26 TIME: tournament.grid 0.92 ms
25.10 16:32:26 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:32:28 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTQ= }
25.10 16:32:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 16:32:28 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 16:32:28 -<<-: core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 16:32:28 ->>-: core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 16:32:28 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:32:28 ->>-: core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 16:32:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 94 } }
25.10 16:32:28 ->>-: core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 16:32:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 94 } }
25.10 16:32:28 NET: Client login (conid:46674035, id:94, name:uid94)
25.10 16:32:28 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 16:32:28 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:32:28 DB: SELECT ID FROM TempUserLogins WHERE UserID = 94 AND Date = 'today'::timestamp
25.10 16:32:28 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 94 AND Date = 'today'::timestamp, _type => core/server.query }
25.10 16:32:28 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:32:28 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (94, 'today'::timestamp)
25.10 16:32:28 == NET: uid94 ret: user.login { name => uid94, type => user.login, errorCode => ok, id => 94 }
25.10 16:32:28 == NET: Aimer ret: user.join { name => uid94, type => user.join }
25.10 16:32:28 ++ NET: uid94 req: user.login { messageType => user.login, token => dWlkOTQ= }
25.10 16:32:28 TRACE: User already logon.
25.10 16:32:28 TRACE: 
Called from snipe/slave/Server.hx line 870
Called from snipe/slave/Server.hx line 1124
25.10 16:32:28 == NET: uid94 ret: user.join { name => Aimer, type => user.join }
25.10 16:32:28 == NET: uid94 ret: user.join { name => uid94, type => user.join }
25.10 16:32:28 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 } }}, type => user, unlock => true, id => 94, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (94, 'today'::timestamp), _type => core/server.pending }} }
25.10 16:32:28 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:32:28 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
25.10 16:32:28 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:32:28 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
25.10 16:32:28 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:32:28 TRACE: Could not login.
25.10 16:32:28 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
25.10 16:32:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:32:30 TIME: user.ping 0.15 ms
25.10 16:32:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:32:33 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:32:33 TIME: user.ping 0.09 ms
25.10 16:32:33 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:32:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:32:37 TIME: user.ping 0.07 ms
25.10 16:32:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:32:39 TIMER: Check auto-disconnect...
25.10 16:32:39 STATS: vdl.0 cache, locks:2
25.10 16:32:42 ++ NET: uid94 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:32:42 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:42 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:42 TIME: tournament.getAvailableTournament 1.62 ms
25.10 16:32:42 == NET: uid94 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:32:45 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:32:45 TIME: user.ping 0.19 ms
25.10 16:32:45 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:32:46 ++ NET: uid94 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
25.10 16:32:46 ->>-: vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 16:32:46 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:32:46 TIME: tournament.addUsers 0.6 ms
25.10 16:32:46 == NET: uid94 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:32:47 ++ NET: uid94 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
25.10 16:32:47 ->>-: vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 16:32:47 -<<-: vdl/cache.tournament.addUsers { errorCode => userExist, _type => vdl/cache.tournament.addUsers }
25.10 16:32:47 TIME: tournament.addUsers 0.65 ms
25.10 16:32:47 == NET: uid94 ret: tournament.addUsers { type => tournament.addUsers, errorCode => userExist, _type => vdl/cache.tournament.addUsers }
25.10 16:32:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:32:53 TIME: user.ping 0.11 ms
25.10 16:32:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:32:54 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:32:54 TIME: user.ping 0.09 ms
25.10 16:32:54 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:00 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:00 TIME: user.ping 0.18 ms
25.10 16:33:00 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:08 TIME: user.ping 0.18 ms
25.10 16:33:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:14 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:14 TIME: user.ping 0.08 ms
25.10 16:33:14 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:15 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:15 TIME: user.ping 0.07 ms
25.10 16:33:15 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:23 TIME: user.ping 0.12 ms
25.10 16:33:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:31 TIME: user.ping 0.08 ms
25.10 16:33:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:34 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:34 TIME: user.ping 0.08 ms
25.10 16:33:34 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:39 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:39 TIME: user.ping 0.08 ms
25.10 16:33:39 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:39 TIMER: Check auto-disconnect...
25.10 16:33:39 STATS: vdl.0 cache, locks:2
25.10 16:33:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:48 TIME: user.ping 0.19 ms
25.10 16:33:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:54 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:54 TIME: user.ping 0.15 ms
25.10 16:33:54 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:33:57 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:33:57 TIME: user.ping 0.18 ms
25.10 16:33:57 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:07 TIME: user.ping 0.08 ms
25.10 16:34:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:14 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:14 TIME: user.ping 0.08 ms
25.10 16:34:14 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:16 TIME: user.ping 0.12 ms
25.10 16:34:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:26 TIME: user.ping 0.11 ms
25.10 16:34:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:34 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:34 TIME: user.ping 0.16 ms
25.10 16:34:34 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:35 TIME: user.ping 0.19 ms
25.10 16:34:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:39 TIMER: Check auto-disconnect...
25.10 16:34:39 STATS: vdl.0 cache, locks:2
25.10 16:34:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:44 TIME: user.ping 0.17 ms
25.10 16:34:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:54 TIME: user.ping 0.16 ms
25.10 16:34:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:54 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:34:54 TIME: user.ping 0.18 ms
25.10 16:34:54 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:34:54 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
25.10 16:34:54 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 16:34:54 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 16:34:54 STATS: vdl.0 cache connection, 50 calls, total 0.0719966888427734 sec spent, avg 1.44 ms
25.10 16:34:54 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 16:34:54 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,94] }
25.10 16:34:54 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 76, player2 => 94 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 16:34:54 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 94 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:34:54 TIME: tournament.grid 3.84 ms
25.10 16:34:54 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 94 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:34:57 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:34:57 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:34:57 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:34:57 TIME: tournament.getAvailableTournament 3.07 ms
25.10 16:34:57 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:35:02 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
25.10 16:35:02 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 16:35:02 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 16:35:02 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 16:35:02 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,94] }
25.10 16:35:02 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 76, player2 => 94 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 16:35:02 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 94 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:35:02 TIME: tournament.grid 1.82 ms
25.10 16:35:02 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 94 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:35:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:04 TIME: user.ping 0.11 ms
25.10 16:35:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:35:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:13 TIME: user.ping 0.17 ms
25.10 16:35:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:35:14 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:14 TIME: user.ping 0.15 ms
25.10 16:35:14 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:35:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:23 TIME: user.ping 0.13 ms
25.10 16:35:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:35:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:32 TIME: user.ping 0.22 ms
25.10 16:35:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:35:34 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:34 TIME: user.ping 0.16 ms
25.10 16:35:34 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:35:39 TIMER: Check auto-disconnect...
25.10 16:35:39 STATS: vdl.0 cache, locks:2
25.10 16:35:39 -<<-: tournament.leaveEvent { _isNotify => true, id => 76, _type => tournament.leaveEvent }
25.10 16:35:39 -<<-: tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 16:35, id => 76, enemy.num => 1, battleId => 74, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
25.10 16:35:39 == NET: Aimer ret: battle.leave { type => battle.leave }
25.10 16:35:39 == NET: Aimer ret: tournament.enemy { data => { name => Aimer, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 16:35, id => 76, enemy.num => 1, battleId => 74, player => 2 }, type => tournament.enemy }
25.10 16:35:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:35:43 TIME: user.ping 0.19 ms
25.10 16:35:47 ++ NET: uid94 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:35:47 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:35:47 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => Aimer, id => 76 },{ name => uid94, id => 94 }], battleActive => [74], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:35:47 TIME: tournament.getAvailableTournament 7.77 ms
25.10 16:35:47 == NET: uid94 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => Aimer, id => 76 },{ name => uid94, id => 94 }], battleActive => [74], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:35:54 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:54 TIME: user.ping 0.12 ms
25.10 16:35:54 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:35:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:35:55 TIME: user.ping 0.12 ms
25.10 16:35:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:00 ++ NET: Aimer req: tournament.lose { winner => 94, messageType => tournament.lose }
25.10 16:36:00 TIME: tournament.lose 0.06 ms
25.10 16:36:00 == NET: Aimer ret: tournament.lose { type => tournament.lose, errorCode => ok }
25.10 16:36:00 == NET: uid94 ret: battle.leave { type => battle.leave }
25.10 16:36:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:06 TIME: user.ping 0.14 ms
25.10 16:36:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:13 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:36:13 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:36:13 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => Aimer, id => 76 },{ name => uid94, id => 94 }], battleActive => [74], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:36:13 STATS: vdl.0 cache connection, 58 calls, total 0.0905404090881348 sec spent, avg 1.56 ms
25.10 16:36:13 TIME: tournament.getAvailableTournament 5.08 ms
25.10 16:36:13 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => Aimer, id => 76 },{ name => uid94, id => 94 }], battleActive => [74], rounddate => 2016-25-10 16:35, startdate => 2016-25-10 16:35 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:36:14 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:14 TIME: user.ping 0.11 ms
25.10 16:36:14 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:14 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:14 TIME: user.ping 0.2 ms
25.10 16:36:14 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:18 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
25.10 16:36:18 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 16:36:18 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 16:36:18 ->>-: vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 16:36:18 -<<-: vdl/cache.tournament.setGrid { list => [], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:36:18 TIME: tournament.grid 1.32 ms
25.10 16:36:18 == NET: Aimer ret: tournament.grid { list => [], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:36:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:24 TIME: user.ping 0.12 ms
25.10 16:36:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:30 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
25.10 16:36:30 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 16:36:30 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 16:36:30 ->>-: vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 16:36:30 -<<-: vdl/cache.tournament.setGrid { list => [], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:36:30 TIME: tournament.grid 1.84 ms
25.10 16:36:30 == NET: Aimer ret: tournament.grid { list => [], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:36:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:34 TIME: user.ping 0.09 ms
25.10 16:36:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:34 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:34 TIME: user.ping 0.08 ms
25.10 16:36:34 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:39 TIMER: Check auto-disconnect...
25.10 16:36:39 STATS: vdl.0 cache, locks:2
25.10 16:36:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:43 TIME: user.ping 0.16 ms
25.10 16:36:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:53 TIME: user.ping 0.11 ms
25.10 16:36:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:36:55 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:36:55 TIME: user.ping 0.2 ms
25.10 16:36:55 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:02 TIME: user.ping 0.17 ms
25.10 16:37:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:12 TIME: user.ping 0.18 ms
25.10 16:37:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:15 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:15 TIME: user.ping 0.37 ms
25.10 16:37:15 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:21 TIME: user.ping 0.23 ms
25.10 16:37:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:24 ++ NET: uid94 req: battle.find { messageType => battle.find }
25.10 16:37:24 ->>-: vdl/cache.battle.find { _type => vdl/cache.battle.find }
25.10 16:37:24 -<<-: vdl/cache.battle.find { list => [{ id => 70, first => 0 },{ id => 71, first => 0 }], count => 2, errorCode => ok, _type => vdl/cache.battle.find }
25.10 16:37:24 STATS: vdl.0 cache connection, 63 calls, total 0.0972363948822021 sec spent, avg 1.54 ms
25.10 16:37:24 ->>-: vdl/cache.battle.join { roomId => 70, selfId => 94, _type => vdl/cache.battle.join }
25.10 16:37:24 -<<-: vdl/cache.battle.join { room => 70, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
25.10 16:37:24 DB: SELECT name FROM users WHERE id=94
25.10 16:37:24 ->>-: core/server.query { q => SELECT name FROM users WHERE id=94, _type => core/server.query }
25.10 16:37:24 -<<-: core/server.query { list => {{ name => uid94 }}, errorCode => ok, _type => core/server.query }
25.10 16:37:24 DB: SELECT name FROM users WHERE id=0
25.10 16:37:24 ->>-: core/server.query { q => SELECT name FROM users WHERE id=0, _type => core/server.query }
25.10 16:37:24 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:37:24 ->>-: core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { name => , type => battle.enemy, enemy.id => 0, enemy.name => uid94, _type => battle.enemy, enemy.num => 2 } }
25.10 16:37:24 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
25.10 16:37:24 TIME: battle.find 7.36 ms
25.10 16:37:24 == NET: uid94 ret: battle.enemy { name => uid94, type => battle.enemy, enemy.id => 94, enemy.name => , enemy.num => 1 }
25.10 16:37:24 == NET: uid94 ret: battle.find { room => 70, type => battle.find, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
25.10 16:37:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:31 TIME: user.ping 0.2 ms
25.10 16:37:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:38 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:38 TIME: user.ping 0.18 ms
25.10 16:37:38 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:39 TIMER: Check auto-disconnect...
25.10 16:37:39 STATS: vdl.0 cache, locks:2
25.10 16:37:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:40 TIME: user.ping 0.16 ms
25.10 16:37:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:42 ++ NET: uid94 req: battle.end { roomId => 70, scoreSecondPlayer => 0, messageType => battle.end, scoreFirstPlayer => 0 }
25.10 16:37:42 ->>-: vdl/cache.battle.infoRoom { roomId => 70, _type => vdl/cache.battle.infoRoom }
25.10 16:37:42 -<<-: vdl/cache.battle.infoRoom { secondId => 0, firstId => 0, _type => vdl/cache.battle.infoRoom, turnId => 0 }
25.10 16:37:42 DB: INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 94,0,70,{ scoresSecond => null, scoresFirst => null })
25.10 16:37:42 ->>-: core/server.query { q => INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 94,0,70,{ scoresSecond => null, scoresFirst => null }), _type => core/server.query }
25.10 16:37:42 -<<-: core/server.query { errorCode => ok, _type => core/server.query }
25.10 16:37:42 ->>-: vdl/cache.battle.finishRoom { roomId => 70, _type => vdl/cache.battle.finishRoom }
25.10 16:37:42 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
25.10 16:37:42 ->>-: vdl/cache.battle.deleteRoom { roomId => 70, _type => vdl/cache.battle.deleteRoom }
25.10 16:37:42 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 16:37:42 ->>-: core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { _type => battle.end } }
25.10 16:37:42 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
25.10 16:37:42 == NET: uid94 ret: battle.end { type => battle.end, errorCode => ok }
25.10 16:37:42 TIME: battle.end 38.36 ms
25.10 16:37:45 ++ NET: uid94 req: battle.find { messageType => battle.find }
25.10 16:37:45 ->>-: vdl/cache.battle.find { _type => vdl/cache.battle.find }
25.10 16:37:45 -<<-: vdl/cache.battle.find { list => [{ id => 71, first => 0 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
25.10 16:37:45 ->>-: vdl/cache.battle.join { roomId => 71, selfId => 94, _type => vdl/cache.battle.join }
25.10 16:37:45 -<<-: vdl/cache.battle.join { room => 71, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
25.10 16:37:45 DB: SELECT name FROM users WHERE id=94
25.10 16:37:45 ->>-: core/server.query { q => SELECT name FROM users WHERE id=94, _type => core/server.query }
25.10 16:37:45 -<<-: core/server.query { list => {{ name => uid94 }}, errorCode => ok, _type => core/server.query }
25.10 16:37:45 DB: SELECT name FROM users WHERE id=0
25.10 16:37:45 ->>-: core/server.query { q => SELECT name FROM users WHERE id=0, _type => core/server.query }
25.10 16:37:45 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:37:45 ->>-: core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { name => , type => battle.enemy, enemy.id => 0, enemy.name => uid94, _type => battle.enemy, enemy.num => 2 } }
25.10 16:37:45 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
25.10 16:37:45 TIME: battle.find 8.14 ms
25.10 16:37:45 == NET: uid94 ret: battle.enemy { name => uid94, type => battle.enemy, enemy.id => 94, enemy.name => , enemy.num => 1 }
25.10 16:37:45 == NET: uid94 ret: battle.find { room => 71, type => battle.find, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
25.10 16:37:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:50 TIME: user.ping 0.19 ms
25.10 16:37:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:37:57 ++ NET: uid94 req: battle.end { roomId => 71, scoreSecondPlayer => 0, messageType => battle.end, scoreFirstPlayer => 0 }
25.10 16:37:57 ->>-: vdl/cache.battle.infoRoom { roomId => 71, _type => vdl/cache.battle.infoRoom }
25.10 16:37:57 -<<-: vdl/cache.battle.infoRoom { secondId => 0, firstId => 0, _type => vdl/cache.battle.infoRoom, turnId => 0 }
25.10 16:37:57 DB: INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 94,0,71,{ scoresSecond => null, scoresFirst => null })
25.10 16:37:57 ->>-: core/server.query { q => INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 94,0,71,{ scoresSecond => null, scoresFirst => null }), _type => core/server.query }
25.10 16:37:57 -<<-: core/server.query { errorCode => ok, _type => core/server.query }
25.10 16:37:57 ->>-: vdl/cache.battle.finishRoom { roomId => 71, _type => vdl/cache.battle.finishRoom }
25.10 16:37:57 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
25.10 16:37:57 ->>-: vdl/cache.battle.deleteRoom { roomId => 71, _type => vdl/cache.battle.deleteRoom }
25.10 16:37:57 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 16:37:57 ->>-: core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { _type => battle.end } }
25.10 16:37:57 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
25.10 16:37:57 TIME: battle.end 42.07 ms
25.10 16:37:57 == NET: uid94 ret: battle.end { type => battle.end, errorCode => ok }
25.10 16:37:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:37:59 TIME: user.ping 0.13 ms
25.10 16:37:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:38:03 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:38:03 TIME: user.ping 0.15 ms
25.10 16:38:03 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:38:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:38:09 TIME: user.ping 0.14 ms
25.10 16:38:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:38:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:38:19 TIME: user.ping 0.09 ms
25.10 16:38:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:38:23 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:38:23 TIME: user.ping 0.17 ms
25.10 16:38:23 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:38:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:38:28 TIME: user.ping 0.2 ms
25.10 16:38:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:38:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:38:38 TIME: user.ping 0.21 ms
25.10 16:38:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:38:39 TIMER: Check auto-disconnect...
25.10 16:38:39 STATS: vdl.0 cache, locks:2
25.10 16:38:43 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:38:43 TIME: user.ping 0.18 ms
25.10 16:38:43 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:39:03 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:39:03 TIME: user.ping 0.24 ms
25.10 16:39:03 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:39:23 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:39:23 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:39:23 TIME: user.ping 0.09 ms
25.10 16:39:39 TIMER: Check auto-disconnect...
25.10 16:39:39 STATS: vdl.0 cache, locks:2
25.10 16:39:43 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:39:43 TIME: user.ping 0.1 ms
25.10 16:39:43 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:40:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:40:01 TIME: user.ping 0.18 ms
25.10 16:40:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:40:03 ++ NET: Aimer req: tournament.end { lose => 76, dateRound => 2016-25-10 16:35, winner => 94, tournamentId => 1, round => 1, messageType => tournament.end, player1 => 94, player2 => 76, battleId => 74 }
25.10 16:40:03 NET: Client (name:Aimer conid:17883170 TCP) disconnected from vdl.0 (clients:1)
25.10 16:40:03 ->>-: vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
25.10 16:40:03 -<<-: vdl/cache.tournament.getBattlesTournaments [74]
25.10 16:40:03 STATS: vdl.0 cache connection, 83 calls, total 0.188822984695435 sec spent, avg 2.27 ms
25.10 16:40:03 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 16:40:03 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,94] }
25.10 16:40:03 ->>-: vdl/cache.battle.finishRoom { roomId => 74, _type => vdl/cache.battle.finishRoom }
25.10 16:40:03 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
25.10 16:40:03 ->>-: vdl/cache.battle.deleteRoom { roomId => 74, _type => vdl/cache.battle.deleteRoom }
25.10 16:40:03 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 16:40:03 ->>-: vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [74] }
25.10 16:40:03 -<<-: vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
25.10 16:40:03 ->>-: vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [94], _type => vdl/cache.tournament.setUsersTournament }
25.10 16:40:03 -<<-: vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
25.10 16:40:03 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => 94, round => 1, player1 => 94, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 16:40:03 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => 94, round => 1, player1 => 94, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:40:03 ->>-: vdl/cache.tournament.finish { tournamentId => 1, _type => vdl/cache.tournament.finish }
25.10 16:40:03 -<<-: vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
25.10 16:40:03 TIME: tournament.end 22.19 ms
25.10 16:40:03 == NET: Aimer ret: tournament.end { type => tournament.end, errorCode => TournamentEnd }
25.10 16:40:03 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
25.10 16:40:03 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
25.10 16:40:03 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:40:03 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:40:03 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 16:40:03 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:40:03 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 215
Called from modules/VDLBattleModule.hx line 228
Called from snipe/slave/Server.hx line 994
25.10 16:40:03 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
25.10 16:40:03 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:40:03 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
25.10 16:40:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:40:03 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
25.10 16:40:03 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:40:03 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:40:03 TIME: user.ping 0.12 ms
25.10 16:40:03 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:40:07 NET: Client (conid:61428638) connected to vdl.0 (clients:2)
25.10 16:40:08 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.10 16:40:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
25.10 16:40:08 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
25.10 16:40:08 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
25.10 16:40:08 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
25.10 16:40:08 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:40:08 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
25.10 16:40:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477399027, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 2, id => 76 } }
25.10 16:40:08 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
25.10 16:40:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 76 } }
25.10 16:40:08 NET: Client login (conid:61428638, id:76, name:Aimer)
25.10 16:40:08 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:40:08 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:40:08 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
25.10 16:40:08 == NET: uid94 ret: user.join { name => Aimer, type => user.join }
25.10 16:40:08 == NET: Aimer ret: user.join { name => uid94, type => user.join }
25.10 16:40:08 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.10 16:40:09 ++ NET: Aimer req: user.data { messageType => user.data }
25.10 16:40:09 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
25.10 16:40:09 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
25.10 16:40:09 TIME: user.data 0.43 ms
25.10 16:40:09 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
25.10 16:40:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.10 16:40:12 TIME: user.ping 0.17 ms
25.10 16:40:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:40:13 NET: Client (name:Aimer conid:61428638 TCP) disconnected from vdl.0 (clients:1)
25.10 16:40:13 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
25.10 16:40:13 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
25.10 16:40:13 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:40:13 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:40:13 NET: Client (conid:14028789) connected to vdl.0 (clients:2)
25.10 16:40:13 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 16:40:13 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 16:40:13 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 215
Called from modules/VDLBattleModule.hx line 228
Called from snipe/slave/Server.hx line 994
25.10 16:40:13 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
25.10 16:40:13 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
25.10 16:40:13 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
25.10 16:40:13 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:40:13 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
25.10 16:40:13 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:40:21 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 16:40:21 TIME: user.ping 0.08 ms
25.10 16:40:21 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:40:23 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:40:23 TIME: user.ping 0.19 ms
25.10 16:40:23 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:40:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 16:40:29 TIME: user.ping 0.38 ms
25.10 16:40:29 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:40:29 NET: Client (name:null conid:14028789 TCP) disconnected from vdl.0 (clients:1)
25.10 16:40:33 NET: Client (conid:17993549) connected to vdl.0 (clients:2)
25.10 16:40:34 ++ NET: null req: user.register { messageType => user.register }
25.10 16:40:34 DB: SELECT * FROM users
25.10 16:40:34 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
25.10 16:40:34 -<<-: core/server.query { list => {{ password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid64, name => uid64, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, id => 64, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid67, name => uid67, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476886636,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:17:16.853975+03, language => en, id => 67, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid65, name => uid65, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476879545,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 15:19:05.058893+03, language => en, id => 65, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => qweqwe, name => asdasd, networkid => , params => {"info":{"city":"Dsadasd","year":"1231","email":"asdasdas"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.822508+03, language =>   , id => 69, deleted => false }, { password => uid66, name => uid66, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476882998,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 16:16:38.334095+03, language => en, id => 66, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }, { password => uid73, name => uid73, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889025,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:57:04.529542+03, language => en, id => 73, deleted => false }, { password => uid71, name => uid71, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888930,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:55:29.621522+03, language => en, id => 71, deleted => false }, { password => uid68, name => uid68, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888788,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.78775+03, language => en, id => 68, deleted => false }, { password => 123123, name => 123123, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:54:22.233721+03, language =>   , id => 70, deleted => false }, { password => qweqwe, name => 1qweqwe, networkid => , params => {"info":{"city":"Qweqwe","year":"1231","email":"qweqwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:56:17.221331+03, language =>   , id => 72, deleted => false }, { password => 123123, name => 123qwe, networkid => , params => {"info":{"city":"Wqe","year":"1233","email":"123qwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:59:29.773441+03, language =>   , id => 74, deleted => false }, { password => uid75, name => uid75, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889477,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:04:35.916538+03, language => en, id => 75, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890115,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language => en, id => 44, deleted => false }, { password => uid77, name => uid77, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889607,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:06:46.41184+03, language => en, id => 77, deleted => false }, { password => uid78, name => uid78, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890199,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:16:37.399803+03, language => en, id => 78, deleted => false }, { password => uid83, name => uid83, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961590,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:06:28.765885+03, language => en, id => 83, deleted => false }, { password => uid79, name => uid79, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476959779,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:36:18.869521+03, language => en, id => 79, deleted => false }, { password => uid89, name => uid89, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308423,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-24 14:26:57.401644+03, language => en, id => 89, deleted => false }, { password => uid84, name => uid84, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961768,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:09:27.02443+03, language => en, id => 84, deleted => false }, { password => uid80, name => uid80, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476960874,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:54:32.93048+03, language => en, id => 80, deleted => false }, { password => uid81, name => uid81, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961061,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:57:40.114003+03, language => en, id => 81, deleted => false }, { password => uid85, name => uid85, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476962319,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:18:38.418977+03, language => en, id => 85, deleted => false }, { password => 123123, name => Tester, networkid => , params => {"info":{"city":"Dsda","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:58:49.229528+03, language =>   , id => 86, deleted => false }, { password => qweqwe, name => Acterix, networkid => , params => {"info":{"city":"Weqwe","year":"2312","email":"eqwe123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:39:29.554557+03, language =>   , id => 90, deleted => false }, { password => uid91, name => uid91, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399413,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:43:32.477232+03, language => en, id => 91, deleted => false }, { password => uid82, name => uid82, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961257,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:00:56.513148+03, language => en, id => 82, deleted => false }, { password => uid87, name => uid87, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, id => 87, deleted => false }, { password => uid94, name => uid94, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, id => 94, deleted => false }, { password => uid88, name => uid88, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477049264,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-21 14:27:43.099186+03, language => en, id => 88, deleted => false }, { password => 123456, name => test17, networkid => , params => {"info":{"city":"","year":"","email":"asda"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399457,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:44:17.274208+03, language => en, id => 92, deleted => false }, { password => kO2YJdf, name => Aimer, networkid => , params => {"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399027,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, id => 76, deleted => false }, { password => uid93, name => uid93, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477400907,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:08:27.066262+03, language => en, id => 93, deleted => false }}, errorCode => ok, _type => core/server.query }
25.10 16:40:34 DB: SELECT ID FROM Users WHERE Name = E'uid95'
25.10 16:40:34 == NET: null ret: user.auth { type => user.auth, token => dWlkOTU= }
25.10 16:40:34 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid95', _type => core/server.query }
25.10 16:40:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:40:34 DB: SELECT nextval('Users_id_seq') AS id
25.10 16:40:34 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
25.10 16:40:34 -<<-: core/server.query { list => {{ id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 16:40:34 ->>-: core/user.register { password => uid95, name => uid95, fullParams => { password => uid95, name => uid95, networkid => , networktype => , messageType => user.register, id => 95 }, networkid => , connectionID => 17993549, networktype => , email => , id => 95, _type => core/user.register }
25.10 16:40:34 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
25.10 16:40:34 -<<-: core/user.registerResponse { password => uid95, name => uid95, _isNotify => true, fullParams => { password => uid95, name => uid95, networkid => , networktype => , messageType => user.register, id => 95 }, networkid => , connectionID => 17993549, networktype => , email => , id => 95, _type => core/user.registerResponse }
25.10 16:40:34 == NET: null ret: user.register { type => user.register, errorCode => ok }
25.10 16:40:35 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTU= }
25.10 16:40:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 16:40:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 16:40:35 -<<-: core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 16:40:35 ->>-: core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 16:40:35 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:40:35 ->>-: core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 16:40:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 95 } }
25.10 16:40:35 ->>-: core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 16:40:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 95 } }
25.10 16:40:35 NET: Client login (conid:17993549, id:95, name:uid95)
25.10 16:40:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:40:35 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:40:35 DB: SELECT ID FROM TempUserLogins WHERE UserID = 95 AND Date = 'today'::timestamp
25.10 16:40:35 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 95 AND Date = 'today'::timestamp, _type => core/server.query }
25.10 16:40:35 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 16:40:35 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (95, 'today'::timestamp)
25.10 16:40:35 == NET: uid95 ret: user.login { name => uid95, type => user.login, errorCode => ok, id => 95 }
25.10 16:40:35 == NET: uid94 ret: user.join { name => uid95, type => user.join }
25.10 16:40:35 ++ NET: uid95 req: user.login { messageType => user.login, token => dWlkOTU= }
25.10 16:40:35 TRACE: User already logon.
25.10 16:40:35 TRACE: 
Called from snipe/slave/Server.hx line 870
Called from snipe/slave/Server.hx line 1124
25.10 16:40:35 == NET: uid95 ret: user.join { name => uid94, type => user.join }
25.10 16:40:35 == NET: uid95 ret: user.join { name => uid95, type => user.join }
25.10 16:40:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 } }}, type => user, unlock => true, id => 95, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (95, 'today'::timestamp), _type => core/server.pending }} }
25.10 16:40:35 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:40:35 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 16:40:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:40:35 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 16:40:35 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:40:35 TRACE: Could not login.
25.10 16:40:35 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
25.10 16:40:38 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:40:38 TIME: user.ping 0.17 ms
25.10 16:40:38 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:40:39 TIMER: Check auto-disconnect...
25.10 16:40:39 STATS: vdl.0 cache, locks:0
25.10 16:40:43 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:40:43 TIME: user.ping 0.09 ms
25.10 16:40:43 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:41:04 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:41:04 TIME: user.ping 0.19 ms
25.10 16:41:04 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:41:24 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:41:24 TIME: user.ping 0.11 ms
25.10 16:41:24 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:41:39 TIMER: Check auto-disconnect...
25.10 16:41:39 STATS: vdl.0 cache, locks:0
25.10 16:41:44 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:41:44 TIME: user.ping 0.1 ms
25.10 16:41:44 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:41:46 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:41:46 TIME: user.ping 0.08 ms
25.10 16:41:46 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:42:04 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:42:04 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:42:04 TIME: user.ping 0.15 ms
25.10 16:42:35 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 16:42:35 -<<-: server.login ok
25.10 16:42:35 DB: SELECT * FROM LocalizationStrings
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 TIMER: Starting timer...
25.10 16:42:35 TIMER: Timer running...
25.10 16:42:35 DB: SELECT * FROM GameVars
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
25.10 16:42:35 -<<-: core/quest.getDaily ok
25.10 16:42:35 DB: SELECT * FROM UserAttributeTypes
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM UserVariableTypes
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 16:42:35 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM ItemGroups
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM Bundles ORDER BY ID
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 SHOP: loading items...
25.10 16:42:35 ->>-: core/shop.getList { _type => core/shop.getList }
25.10 16:42:35 -<<-: core/shop.getList ok
25.10 16:42:35 SHOP: 0 items loaded (0 sec)
25.10 16:42:35 DB: SELECT * FROM EffectAttributeTypes
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM Effects
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 16:42:35 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 16:42:35 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:42:35 DB: SELECT * FROM Badges
25.10 16:42:35 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 16:42:35 -<<-: core/server.query ok
25.10 16:43:02 NET: Client (conid:30426348) connected to vdl.0 (clients:1)
25.10 16:43:03 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTU= }
25.10 16:43:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 16:43:03 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 16:43:03 -<<-: core/server.query ok
25.10 16:43:03 ->>-: core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 16:43:03 -<<-: core/user.isOnlineID ok
25.10 16:43:03 ->>-: core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 16:43:03 -<<-: core/cache.get ok
25.10 16:43:03 ->>-: core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 16:43:03 -<<-: core/cache.get ok
25.10 16:43:03 NET: Client login (conid:30426348, id:95, name:uid95)
25.10 16:43:03 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:43:03 -<<-: core/user.loginPost null
25.10 16:43:03 == NET: uid95 ret: user.login { name => uid95, type => user.login, errorCode => ok, id => 95 }
25.10 16:43:03 == NET: uid95 ret: user.join { name => uid95, type => user.join }
25.10 16:43:06 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:43:06 TIME: user.ping 0.07 ms
25.10 16:43:06 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:43:10 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 16:43:10 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:43:15 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:43:15 TIME: user.ping 0.08 ms
25.10 16:43:15 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:43:23 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:43:23 TIME: user.ping 0.1 ms
25.10 16:43:23 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:43:32 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:43:32 TIME: user.ping 0.12 ms
25.10 16:43:32 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:43:33 NET: Client (conid:65587901) connected to vdl.0 (clients:2)
25.10 16:43:35 TIMER: Check auto-disconnect...
25.10 16:43:35 STATS: vdl.0 cache, locks:2
25.10 16:43:37 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTQ= }
25.10 16:43:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 16:43:37 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 16:43:37 -<<-: core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 16:43:37 STATS: vdl.0 cache connection, 27 calls, total 0.0358173847198486 sec spent, avg 1.33 ms
25.10 16:43:37 ->>-: core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 16:43:37 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:43:37 ->>-: core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 16:43:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 16:43:37 ->>-: core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 16:43:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 16:43:37 NET: Client login (conid:65587901, id:94, name:uid94)
25.10 16:43:37 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 16:43:37 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:43:37 == NET: uid95 ret: user.join { name => uid94, type => user.join }
25.10 16:43:37 == NET: uid94 ret: user.login { name => uid94, type => user.login, errorCode => ok, id => 94 }
25.10 16:43:37 == NET: uid94 ret: user.join { name => uid95, type => user.join }
25.10 16:43:37 == NET: uid94 ret: user.join { name => uid94, type => user.join }
25.10 16:43:40 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:43:40 TIME: user.ping 0.13 ms
25.10 16:43:40 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:43:45 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 16:43:45 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:43:48 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:43:48 TIME: user.ping 0.16 ms
25.10 16:43:48 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:43:49 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:43:49 TIME: user.ping 0.24 ms
25.10 16:43:49 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:43:53 ++ NET: uid95 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:43:53 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:43:53 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:43:53 TIME: tournament.getAvailableTournament 2.48 ms
25.10 16:43:53 == NET: uid95 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:43:57 ++ NET: uid95 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
25.10 16:43:57 ->>-: vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 16:43:57 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:43:57 TIME: tournament.addUsers 0.29 ms
25.10 16:43:57 == NET: uid95 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:43:57 ++ NET: uid95 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:43:57 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:43:57 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:43:57 TIME: tournament.getAvailableTournament 1.83 ms
25.10 16:43:57 == NET: uid95 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:43:58 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:43:58 TIME: user.ping 0.11 ms
25.10 16:43:58 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:08 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:08 TIME: user.ping 0.18 ms
25.10 16:44:08 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:08 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:08 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:08 TIME: user.ping 0.17 ms
25.10 16:44:17 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:17 TIME: user.ping 0.11 ms
25.10 16:44:17 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:23 ++ NET: uid94 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:44:23 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:44:23 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:44:23 TIME: tournament.getAvailableTournament 5.61 ms
25.10 16:44:23 == NET: uid94 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:44:27 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:27 TIME: user.ping 0.18 ms
25.10 16:44:27 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:29 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:29 TIME: user.ping 0.19 ms
25.10 16:44:29 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:31 ++ NET: uid94 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
25.10 16:44:31 ->>-: vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 16:44:31 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:44:31 TIME: tournament.addUsers 0.7 ms
25.10 16:44:31 == NET: uid94 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 16:44:35 TIMER: Check auto-disconnect...
25.10 16:44:35 STATS: vdl.0 cache, locks:4
25.10 16:44:36 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:36 TIME: user.ping 0.11 ms
25.10 16:44:36 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:46 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:46 TIME: user.ping 0.15 ms
25.10 16:44:46 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:49 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:49 TIME: user.ping 0.14 ms
25.10 16:44:49 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:56 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:44:56 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:44:56 TIME: user.ping 0.16 ms
25.10 16:44:58 ++ NET: uid94 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:44:58 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:44:58 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:44:58 STATS: vdl.0 cache connection, 38 calls, total 0.0560717582702637 sec spent, avg 1.48 ms
25.10 16:44:58 TIME: tournament.getAvailableTournament 4.23 ms
25.10 16:44:58 == NET: uid94 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:45:05 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:05 TIME: user.ping 0.17 ms
25.10 16:45:05 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:45:09 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:09 TIME: user.ping 0.2 ms
25.10 16:45:09 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:45:15 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:15 TIME: user.ping 0.18 ms
25.10 16:45:15 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:45:24 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:24 TIME: user.ping 0.16 ms
25.10 16:45:24 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:45:29 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:29 TIME: user.ping 0.25 ms
25.10 16:45:29 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:45:34 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:34 TIME: user.ping 0.16 ms
25.10 16:45:34 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:45:35 TIMER: Check auto-disconnect...
25.10 16:45:35 STATS: vdl.0 cache, locks:4
25.10 16:45:44 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:44 TIME: user.ping 0.15 ms
25.10 16:45:44 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:45:49 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:49 TIME: user.ping 0.18 ms
25.10 16:45:49 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:45:53 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:45:53 TIME: user.ping 0.09 ms
25.10 16:45:53 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:03 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:03 TIME: user.ping 0.23 ms
25.10 16:46:03 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:09 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:09 TIME: user.ping 0.26 ms
25.10 16:46:09 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:13 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:13 TIME: user.ping 0.07 ms
25.10 16:46:13 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:22 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:22 TIME: user.ping 0.11 ms
25.10 16:46:22 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:29 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:29 TIME: user.ping 0.15 ms
25.10 16:46:29 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:32 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:32 TIME: user.ping 0.09 ms
25.10 16:46:32 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:35 TIMER: Check auto-disconnect...
25.10 16:46:35 STATS: vdl.0 cache, locks:4
25.10 16:46:35 ++ NET: uid95 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:46:35 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:46:35 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:46:35 STATS: vdl.0 cache connection, 39 calls, total 0.0577106475830078 sec spent, avg 1.48 ms
25.10 16:46:35 TIME: tournament.getAvailableTournament 1.75 ms
25.10 16:46:35 == NET: uid95 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:46, startdate => 2016-25-10 16:46 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:46:41 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:41 TIME: user.ping 0.12 ms
25.10 16:46:41 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:49 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:49 TIME: user.ping 0.17 ms
25.10 16:46:49 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:46:51 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:46:51 TIME: user.ping 0.1 ms
25.10 16:46:51 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:47:09 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:47:09 TIME: user.ping 0.09 ms
25.10 16:47:09 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:47:29 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:47:29 TIME: user.ping 0.16 ms
25.10 16:47:29 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:47:35 TIMER: Check auto-disconnect...
25.10 16:47:35 STATS: vdl.0 cache, locks:4
25.10 16:47:49 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:47:49 TIME: user.ping 0.09 ms
25.10 16:47:49 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:48:47 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 16:48:47 -<<-: server.login ok
25.10 16:48:47 DB: SELECT * FROM LocalizationStrings
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 TIMER: Starting timer...
25.10 16:48:47 TIMER: Timer running...
25.10 16:48:47 DB: SELECT * FROM GameVars
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
25.10 16:48:47 -<<-: core/quest.getDaily ok
25.10 16:48:47 DB: SELECT * FROM UserAttributeTypes
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM UserVariableTypes
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 16:48:47 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM ItemGroups
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM Bundles ORDER BY ID
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 SHOP: loading items...
25.10 16:48:47 ->>-: core/shop.getList { _type => core/shop.getList }
25.10 16:48:47 -<<-: core/shop.getList ok
25.10 16:48:47 SHOP: 0 items loaded (0 sec)
25.10 16:48:47 DB: SELECT * FROM EffectAttributeTypes
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM Effects
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 16:48:47 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 16:48:47 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:48:47 DB: SELECT * FROM Badges
25.10 16:48:47 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 16:48:47 -<<-: core/server.query ok
25.10 16:49:10 NET: Client (conid:38596946) connected to vdl.0 (clients:1)
25.10 16:49:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 16:49:15 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:49:15 TIME: user.ping 0.13 ms
25.10 16:49:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 16:49:35 TIME: user.ping 0.13 ms
25.10 16:49:35 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:49:47 TIMER: Check auto-disconnect...
25.10 16:49:47 STATS: vdl.0 cache, locks:0
25.10 16:49:53 NET: Client (conid:7072515) connected to vdl.0 (clients:2)
25.10 16:49:54 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTU= }
25.10 16:49:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 16:49:54 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 16:49:54 -<<-: core/server.query ok
25.10 16:49:54 STATS: vdl.0 cache connection, 21 calls, total 0.0219464302062988 sec spent, avg 1.05 ms
25.10 16:49:54 ->>-: core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 16:49:54 -<<-: core/user.isOnlineID ok
25.10 16:49:54 ->>-: core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 16:49:54 -<<-: core/cache.get ok
25.10 16:49:54 ->>-: core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 16:49:54 -<<-: core/cache.get ok
25.10 16:49:54 NET: Client login (conid:7072515, id:95, name:uid95)
25.10 16:49:54 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 16:49:54 -<<-: core/user.loginPost null
25.10 16:49:54 == NET: null ret: user.join { name => uid95, type => user.join }
25.10 16:49:54 == NET: uid95 ret: user.login { name => uid95, type => user.login, errorCode => ok, id => 95 }
25.10 16:49:54 == NET: uid95 ret: user.join { name => null, type => user.join }
25.10 16:49:54 == NET: uid95 ret: user.join { name => uid95, type => user.join }
25.10 16:49:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
25.10 16:49:55 TIME: user.ping 0.16 ms
25.10 16:49:55 == NET: null ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:49:58 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:49:58 TIME: user.ping 0.26 ms
25.10 16:49:58 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:50:02 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 16:50:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:50:06 NET: Client (name:null conid:38596946 TCP) disconnected from vdl.0 (clients:1)
25.10 16:50:06 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:50:06 TIME: user.ping 0.11 ms
25.10 16:50:06 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:50:15 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:50:15 TIME: user.ping 0.18 ms
25.10 16:50:15 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:50:20 NET: Client (conid:30871992) connected to vdl.0 (clients:2)
25.10 16:50:23 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:50:23 TIME: user.ping 0.16 ms
25.10 16:50:23 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:50:24 ++ NET: uid95 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:50:24 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:50:24 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:52, startdate => 2016-25-10 16:52 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:50:24 TIME: tournament.getAvailableTournament 4.43 ms
25.10 16:50:24 == NET: uid95 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:52, startdate => 2016-25-10 16:52 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:50:24 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTQ= }
25.10 16:50:24 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 16:50:24 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 16:50:24 -<<-: core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 16:50:24 ->>-: core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 16:50:24 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 16:50:24 ->>-: core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 16:50:24 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 16:50:24 ->>-: core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 16:50:24 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 16:50:24 NET: Client login (conid:30871992, id:94, name:uid94)
25.10 16:50:24 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 16:50:24 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.10 16:50:24 == NET: uid94 ret: user.login { name => uid94, type => user.login, errorCode => ok, id => 94 }
25.10 16:50:24 == NET: uid95 ret: user.join { name => uid94, type => user.join }
25.10 16:50:24 == NET: uid94 ret: user.join { name => uid95, type => user.join }
25.10 16:50:24 == NET: uid94 ret: user.join { name => uid94, type => user.join }
25.10 16:50:32 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 16:50:32 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:50:33 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:50:33 TIME: user.ping 0.17 ms
25.10 16:50:33 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:50:35 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:50:35 TIME: user.ping 0.18 ms
25.10 16:50:35 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:50:39 ++ NET: uid94 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:50:39 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:50:39 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:52, startdate => 2016-25-10 16:52 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:50:39 TIME: tournament.getAvailableTournament 3.99 ms
25.10 16:50:39 == NET: uid94 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 16:52, startdate => 2016-25-10 16:52 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:50:43 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:50:43 TIME: user.ping 0.18 ms
25.10 16:50:43 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:50:47 TIMER: Check auto-disconnect...
25.10 16:50:47 STATS: vdl.0 cache, locks:4
25.10 16:50:52 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:50:52 TIME: user.ping 0.15 ms
25.10 16:50:52 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:50:56 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:50:56 TIME: user.ping 0.21 ms
25.10 16:50:56 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:02 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:02 TIME: user.ping 0.17 ms
25.10 16:51:02 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:12 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:12 TIME: user.ping 0.16 ms
25.10 16:51:12 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:16 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:16 TIME: user.ping 0.14 ms
25.10 16:51:16 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:22 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:22 TIME: user.ping 0.08 ms
25.10 16:51:22 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:31 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:31 TIME: user.ping 0.24 ms
25.10 16:51:31 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:36 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:36 TIME: user.ping 0.19 ms
25.10 16:51:36 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:41 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:41 TIME: user.ping 0.21 ms
25.10 16:51:41 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:47 TIMER: Check auto-disconnect...
25.10 16:51:47 STATS: vdl.0 cache, locks:4
25.10 16:51:47 -<<-: tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-25-10 16:51, id => 94, enemy.num => 2, battleId => 76, player => 1 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
25.10 16:51:47 -<<-: tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 16:51, id => 95, enemy.num => 1, battleId => 76, player => 2 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
25.10 16:51:47 == NET: uid95 ret: tournament.enemy { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 16:51, id => 95, enemy.num => 1, battleId => 76, player => 2 }, type => tournament.enemy }
25.10 16:51:47 == NET: uid94 ret: tournament.enemy { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-25-10 16:51, id => 94, enemy.num => 2, battleId => 76, player => 1 }, type => tournament.enemy }
25.10 16:51:52 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:52 TIME: user.ping 0.2 ms
25.10 16:51:52 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:51:59 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:51:59 TIME: user.ping 0.28 ms
25.10 16:51:59 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:52:04 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:52:04 TIME: user.ping 0.11 ms
25.10 16:52:04 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:52:16 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:52:16 TIME: user.ping 0.19 ms
25.10 16:52:16 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:52:22 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:52:22 TIME: user.ping 0.2 ms
25.10 16:52:22 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:52:28 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:52:28 TIME: user.ping 0.13 ms
25.10 16:52:28 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:52:40 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:52:40 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:52:40 TIME: user.ping 0.09 ms
25.10 16:52:45 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:52:45 TIME: user.ping 0.22 ms
25.10 16:52:45 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:52:47 TIMER: Check auto-disconnect...
25.10 16:52:47 STATS: vdl.0 cache, locks:4
25.10 16:52:52 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:52:52 TIME: user.ping 0.15 ms
25.10 16:52:52 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:53:04 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:53:04 TIME: user.ping 0.07 ms
25.10 16:53:04 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:53:08 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:53:08 TIME: user.ping 0.16 ms
25.10 16:53:08 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:53:16 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:53:16 TIME: user.ping 0.1 ms
25.10 16:53:16 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:53:28 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:53:28 TIME: user.ping 0.11 ms
25.10 16:53:28 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:53:31 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:53:31 TIME: user.ping 0.16 ms
25.10 16:53:31 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:53:41 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:53:41 TIME: user.ping 0.11 ms
25.10 16:53:41 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:53:47 TIMER: Check auto-disconnect...
25.10 16:53:47 STATS: vdl.0 cache, locks:4
25.10 16:53:53 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:53:53 TIME: user.ping 0.2 ms
25.10 16:53:53 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:53:54 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:53:54 TIME: user.ping 0.13 ms
25.10 16:53:54 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:54:05 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:54:05 TIME: user.ping 0.12 ms
25.10 16:54:05 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:54:17 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:54:17 TIME: user.ping 0.08 ms
25.10 16:54:17 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:54:17 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:54:17 TIME: user.ping 0.13 ms
25.10 16:54:17 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:54:29 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:54:29 TIME: user.ping 0.18 ms
25.10 16:54:29 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:54:40 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:54:40 TIME: user.ping 0.21 ms
25.10 16:54:40 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:54:41 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:54:41 TIME: user.ping 0.09 ms
25.10 16:54:41 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:54:47 TIMER: Check auto-disconnect...
25.10 16:54:47 STATS: vdl.0 cache, locks:4
25.10 16:54:53 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:54:53 TIME: user.ping 0.22 ms
25.10 16:54:53 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:55:03 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:55:03 TIME: user.ping 0.22 ms
25.10 16:55:03 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:55:05 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:55:05 TIME: user.ping 0.08 ms
25.10 16:55:05 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:55:17 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:55:17 TIME: user.ping 0.2 ms
25.10 16:55:17 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:55:26 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:55:26 TIME: user.ping 0.17 ms
25.10 16:55:26 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:55:29 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:55:29 TIME: user.ping 0.11 ms
25.10 16:55:29 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:55:41 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:55:41 TIME: user.ping 0.16 ms
25.10 16:55:41 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:55:47 TIMER: Check auto-disconnect...
25.10 16:55:47 STATS: vdl.0 cache, locks:4
25.10 16:55:49 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:55:49 TIME: user.ping 0.18 ms
25.10 16:55:49 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:55:53 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:55:53 TIME: user.ping 0.18 ms
25.10 16:55:53 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:56:05 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:56:05 TIME: user.ping 0.14 ms
25.10 16:56:05 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:56:08 ++ NET: uid94 req: battle.sendtask { dice => 0, from => (0.0, 0.0), roomId => 76, name => throw, side => 2, dices => 424431, messageType => battle.sendtask, to => (0.0, 0.0), diceID => 0 }
25.10 16:56:08 ->>-: vdl/cache.battle.infoRoom { roomId => 76, _type => vdl/cache.battle.infoRoom }
25.10 16:56:08 -<<-: vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
25.10 16:56:08 STATS: vdl.0 cache connection, 35 calls, total 0.0422952175140381 sec spent, avg 1.21 ms
25.10 16:56:08 TIME: battle.sendtask 2.5 ms
25.10 16:56:08 == NET: uid94 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
25.10 16:56:08 == NET: uid95 ret: battle.task { dice => 0, from => (0.0, 0.0), roomId => 76, name => throw, side => 2, type => battle.task, dices => 424431, messageType => battle.sendtask, to => (0.0, 0.0), diceID => 0 }
25.10 16:56:12 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:56:12 TIME: user.ping 0.1 ms
25.10 16:56:12 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:56:15 ++ NET: uid94 req: tournament.lose { winner => 95, messageType => tournament.lose }
25.10 16:56:15 TIME: tournament.lose 0.1 ms
25.10 16:56:15 == NET: uid94 ret: tournament.lose { type => tournament.lose, errorCode => ok }
25.10 16:56:15 == NET: uid95 ret: battle.leave { type => battle.leave }
25.10 16:56:16 ++ NET: uid95 req: tournament.end { lose => 94, dateRound => 2016-25-10 16:51, winner => 95, tournamentId => 1, round => 1, messageType => tournament.end, player1 => 94, player2 => 95, battleId => 76 }
25.10 16:56:16 ->>-: vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
25.10 16:56:16 -<<-: vdl/cache.tournament.getBattlesTournaments [76]
25.10 16:56:16 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 16:56:16 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95,94] }
25.10 16:56:16 ->>-: vdl/cache.battle.finishRoom { roomId => 76, _type => vdl/cache.battle.finishRoom }
25.10 16:56:16 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
25.10 16:56:16 ->>-: vdl/cache.battle.deleteRoom { roomId => 76, _type => vdl/cache.battle.deleteRoom }
25.10 16:56:16 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 16:56:16 ->>-: vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [76] }
25.10 16:56:16 -<<-: vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
25.10 16:56:16 ->>-: vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [95], _type => vdl/cache.tournament.setUsersTournament }
25.10 16:56:16 -<<-: vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
25.10 16:56:16 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => 95, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 16:56:16 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => 95, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:56:16 ->>-: vdl/cache.tournament.finish { tournamentId => 1, _type => vdl/cache.tournament.finish }
25.10 16:56:16 -<<-: vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
25.10 16:56:16 TIME: tournament.end 29.03 ms
25.10 16:56:16 == NET: uid95 ret: tournament.end { type => tournament.end, errorCode => TournamentEnd }
25.10 16:56:16 == NET: uid94 ret: battle.end { type => battle.end }
25.10 16:56:17 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:56:17 TIME: user.ping 0.11 ms
25.10 16:56:17 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:56:29 ++ NET: uid95 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
25.10 16:56:29 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:56:29 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [76], round => 1, id => 1, status => finished, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 16:51, startdate => 2016-25-10 16:51 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:56:29 TIME: tournament.getAvailableTournament 1.89 ms
25.10 16:56:29 == NET: uid95 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [76], round => 1, id => 1, status => finished, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 16:51, startdate => 2016-25-10 16:51 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 16:56:30 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:56:30 TIME: user.ping 0.14 ms
25.10 16:56:30 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:56:33 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:56:33 TIME: user.ping 0.09 ms
25.10 16:56:33 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:56:37 ++ NET: uid95 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
25.10 16:56:37 ->>-: vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 16:56:37 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 16:56:37 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 16:56:37 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
25.10 16:56:37 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
25.10 16:56:37 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:56:37 TIME: tournament.grid 0.68 ms
25.10 16:56:37 == NET: uid95 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 16:56:44 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:56:44 TIME: user.ping 0.14 ms
25.10 16:56:44 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:56:47 TIMER: Check auto-disconnect...
25.10 16:56:47 STATS: vdl.0 cache, locks:4
25.10 16:56:53 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:56:53 TIME: user.ping 0.15 ms
25.10 16:56:53 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:56:58 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:56:58 TIME: user.ping 0.12 ms
25.10 16:56:58 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:57:11 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:57:11 TIME: user.ping 0.21 ms
25.10 16:57:11 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:57:14 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:57:14 TIME: user.ping 0.11 ms
25.10 16:57:14 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:57:24 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:57:24 TIME: user.ping 0.21 ms
25.10 16:57:24 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:57:34 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:57:34 TIME: user.ping 0.18 ms
25.10 16:57:34 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:57:37 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:57:37 TIME: user.ping 0.17 ms
25.10 16:57:37 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:57:47 TIMER: Check auto-disconnect...
25.10 16:57:47 STATS: vdl.0 cache, locks:4
25.10 16:57:50 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:57:50 TIME: user.ping 0.18 ms
25.10 16:57:50 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:57:54 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:57:54 TIME: user.ping 0.19 ms
25.10 16:57:54 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:03 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:58:03 TIME: user.ping 0.08 ms
25.10 16:58:03 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:14 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:58:14 TIME: user.ping 0.19 ms
25.10 16:58:14 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:15 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:58:15 TIME: user.ping 0.18 ms
25.10 16:58:15 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:28 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:58:28 TIME: user.ping 0.1 ms
25.10 16:58:28 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:34 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:58:34 TIME: user.ping 0.38 ms
25.10 16:58:34 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:41 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:58:41 TIME: user.ping 0.19 ms
25.10 16:58:41 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:47 TIMER: Check auto-disconnect...
25.10 16:58:47 STATS: vdl.0 cache, locks:4
25.10 16:58:54 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:58:54 TIME: user.ping 0.17 ms
25.10 16:58:54 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:54 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:58:54 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:58:54 TIME: user.ping 0.15 ms
25.10 16:59:07 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:59:07 TIME: user.ping 0.11 ms
25.10 16:59:07 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:59:14 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:59:14 TIME: user.ping 0.17 ms
25.10 16:59:14 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:59:20 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:59:20 TIME: user.ping 0.19 ms
25.10 16:59:20 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:59:33 ++ NET: uid95 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:59:33 TIME: user.ping 0.21 ms
25.10 16:59:33 == NET: uid95 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:59:34 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:59:34 TIME: user.ping 0.18 ms
25.10 16:59:34 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
25.10 16:59:35 ++ NET: uid95 req: tournament.end { lose => 94, dateRound => 2016-25-10 16:51, winner => 95, tournamentId => 1, round => 1, messageType => tournament.end, player1 => 94, player2 => 95, battleId => 76 }
25.10 16:59:35 ->>-: vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
25.10 16:59:35 NET: Client (name:uid95 conid:7072515 TCP) disconnected from vdl.0 (clients:1)
25.10 16:59:35 -<<-: vdl/cache.tournament.getBattlesTournaments []
25.10 16:59:35 STATS: vdl.0 cache connection, 48 calls, total 0.0753746032714844 sec spent, avg 1.57 ms
25.10 16:59:35 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 16:59:35 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
25.10 16:59:35 ->>-: vdl/cache.battle.finishRoom { roomId => 76, _type => vdl/cache.battle.finishRoom }
25.10 16:59:35 -<<-: vdl/cache.battle.finishRoom { errorCode => _requestException, _type => vdl/cache.battle.finishRoom }
25.10 16:59:35 TRACE: tournament.end : cacheRequest exception { roomId => 76, _type => vdl/cache.battle.finishRoom }
25.10 16:59:35 TRACE: tournament.end : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLTournamentModule.hx line 498
Called from modules/VDLTournamentModule.hx line 383
Called from a C function
Called from modules/VDLTournamentModule.hx line 150
Called from modules/VDLTournamentModule.hx line 67
Called from snipe/slave/Server.hx line 1176
25.10 16:59:35 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 16:59:35 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 16:59:35 -<<-: core/server.query { list => {{ id => 75 }}, errorCode => ok, _type => core/server.query }
25.10 16:59:35 ->>-: vdl/cache.battle.infoRoom { roomId => 75, _type => vdl/cache.battle.infoRoom }
25.10 16:59:35 -<<-: vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
25.10 16:59:35 ->>-: vdl/cache.battle.deleteRoom { roomId => 75, _type => vdl/cache.battle.deleteRoom }
25.10 16:59:35 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 16:59:35 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 16:59:35 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 16:59:35 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 16:59:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 16:59:35 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 16:59:35 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 16:59:35 == NET: uid94 ret: battle.end { type => battle.end }
25.10 16:59:35 == NET: uid94 ret: battle.end { type => battle.end }
25.10 16:59:47 TIMER: Check auto-disconnect...
25.10 16:59:47 STATS: vdl.0 cache, locks:2
25.10 16:59:54 ++ NET: uid94 req: user.ping { messageType => user.ping, msg => ok }
25.10 16:59:54 TIME: user.ping 0.18 ms
25.10 16:59:54 == NET: uid94 ret: user.ping { type => user.ping, errorCode => ok }
