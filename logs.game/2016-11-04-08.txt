04.11 08:00:29 TIMER: Check auto-disconnect...
04.11 08:00:29 STATS: vdl.0 cache, locks:2
04.11 08:00:38 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:00:38 TIME: user.ping 0.18 ms
04.11 08:00:38 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:01:29 TIMER: Check auto-disconnect...
04.11 08:01:29 STATS: vdl.0 cache, locks:2
04.11 08:01:56 NET: Client (name:uid116 conid:57894685 TCP) disconnected from vdl.0 (clients:0)
04.11 08:01:56 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 08:01:56 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 08:01:56 -<<-: core/server.query { list => {{ id => 24 }, { id => 17 }}, errorCode => ok, _type => core/server.query }
04.11 08:01:56 STATS: vdl.0 cache connection, 58 calls, total 0.207713842391968 sec spent, avg 3.58 ms
04.11 08:01:56 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
04.11 08:01:56 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 08:01:56 ->>-: vdl/cache.battle.deleteRoom { roomId => 17, _type => vdl/cache.battle.deleteRoom }
04.11 08:01:56 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 08:01:56 ->>-: vdl/cache.battle.finishRoom { roomId => 17, _type => vdl/cache.battle.finishRoom }
04.11 08:01:56 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 08:01:56 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 08:01:56 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 08:01:56 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 08:01:56 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 08:01:56 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 08:01:56 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:01:56 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 08:01:56 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 08:02:22 NET: Client (conid:20477905) connected to vdl.0 (clients:1)
04.11 08:02:26 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 08:02:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 08:02:26 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 08:02:26 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 08:02:26 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 08:02:26 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 08:02:26 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 08:02:26 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 08:02:26 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 08:02:26 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 08:02:26 NET: Client login (conid:20477905, id:116, name:uid116)
04.11 08:02:26 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 08:02:26 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 08:02:26 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 08:02:26 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 08:02:29 TIMER: Check auto-disconnect...
04.11 08:02:29 STATS: vdl.0 cache, locks:2
04.11 08:02:34 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 08:02:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:02:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:02:39 TIME: user.ping 0.14 ms
04.11 08:02:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:02:59 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:02:59 TIME: user.ping 0.14 ms
04.11 08:02:59 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:03:19 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:03:19 TIME: user.ping 0.17 ms
04.11 08:03:19 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:03:29 TIMER: Check auto-disconnect...
04.11 08:03:29 STATS: vdl.0 cache, locks:2
04.11 08:03:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:03:39 TIME: user.ping 0.17 ms
04.11 08:03:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:03:59 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:03:59 TIME: user.ping 0.18 ms
04.11 08:03:59 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:04:19 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:04:19 TIME: user.ping 0.19 ms
04.11 08:04:19 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:04:29 TIMER: Check auto-disconnect...
04.11 08:04:29 STATS: vdl.0 cache, locks:2
04.11 08:04:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:04:39 TIME: user.ping 0.18 ms
04.11 08:04:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:05:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:05:03 TIME: user.ping 0.17 ms
04.11 08:05:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:05:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:05:23 TIME: user.ping 0.16 ms
04.11 08:05:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:05:29 TIMER: Check auto-disconnect...
04.11 08:05:29 STATS: vdl.0 cache, locks:2
04.11 08:05:43 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:05:43 TIME: user.ping 0.14 ms
04.11 08:05:43 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:05:45 NET: Client (name:uid116 conid:20477905 TCP) disconnected from vdl.0 (clients:0)
04.11 08:05:45 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 08:05:45 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 08:05:45 -<<-: core/server.query { list => {{ id => 24 }}, errorCode => ok, _type => core/server.query }
04.11 08:05:45 STATS: vdl.0 cache connection, 72 calls, total 0.24949836730957 sec spent, avg 3.47 ms
04.11 08:05:45 ->>-: vdl/cache.battle.infoRoom { roomId => 24, _type => vdl/cache.battle.infoRoom }
04.11 08:05:45 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 08:05:45 ->>-: vdl/cache.battle.deleteRoom { roomId => 24, _type => vdl/cache.battle.deleteRoom }
04.11 08:05:45 NET: Client (conid:94530906) connected to vdl.0 (clients:1)
04.11 08:05:45 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 08:05:45 ->>-: vdl/cache.battle.finishRoom { roomId => 24, _type => vdl/cache.battle.finishRoom }
04.11 08:05:45 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 08:05:45 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 08:05:45 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 08:05:45 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 08:05:45 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 08:05:45 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 08:05:45 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:05:45 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 08:05:45 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 08:05:45 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
04.11 08:05:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
04.11 08:05:45 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
04.11 08:05:45 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
04.11 08:05:45 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
04.11 08:05:45 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 08:05:45 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
04.11 08:05:45 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477646117, lastLoginDate => 302, lastLoadDate => 1029 }, effects => { list => [] } }}, version => 0, id => 76 } }
04.11 08:05:45 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
04.11 08:05:45 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
04.11 08:05:45 NET: Client login (conid:94530906, id:76, name:Aimer)
04.11 08:05:45 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 08:05:45 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 08:05:45 DB: SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp
04.11 08:05:45 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp, _type => core/server.query }
04.11 08:05:45 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 08:05:45 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp)
04.11 08:05:45 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
04.11 08:05:45 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
04.11 08:05:45 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp), _type => core/server.pending }} }
04.11 08:05:45 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
04.11 08:05:47 ++ NET: Aimer req: user.data { messageType => user.data }
04.11 08:05:47 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
04.11 08:05:47 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
04.11 08:05:47 TIME: user.data 0.51 ms
04.11 08:05:47 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
04.11 08:05:54 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478235945, lastLoginDate => 309, lastLoadDate => 1105 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
04.11 08:05:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:06:03 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:06:03 TIME: user.ping 0.19 ms
04.11 08:06:03 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:06:29 TIMER: Check auto-disconnect...
04.11 08:06:29 STATS: vdl.0 cache, locks:2
04.11 08:06:29 TIMER: Check auto-disconnect...
04.11 08:06:29 STATS: vdl.0 cache, locks:2
04.11 08:06:29 TIMER: Check auto-disconnect...
04.11 08:06:29 STATS: vdl.0 cache, locks:2
04.11 08:08:34 NET: Client (conid:64531464) connected to vdl.0 (clients:2)
04.11 08:08:36 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 08:08:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 08:08:36 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 08:08:36 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 08:08:36 STATS: vdl.0 cache connection, 89 calls, total 0.286757230758667 sec spent, avg 3.22 ms
04.11 08:08:36 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 08:08:36 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 08:08:36 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 08:08:36 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 08:08:36 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 08:08:36 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 08:08:36 NET: Client login (conid:64531464, id:107, name:uid107)
04.11 08:08:36 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 08:08:36 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 08:08:36 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 08:08:36 == NET: Aimer ret: user.join { name => uid107, type => user.join }
04.11 08:08:36 == NET: uid107 ret: user.join { name => Aimer, type => user.join }
04.11 08:08:36 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 08:08:39 NET: Client (name:uid107 conid:64531464 TCP) disconnected from vdl.0 (clients:1)
04.11 08:08:39 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 08:08:39 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 08:08:39 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 08:08:39 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:08:39 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
04.11 08:08:39 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:08:39 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 994
04.11 08:08:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 08:08:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:08:39 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 08:08:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:08:39 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 08:08:39 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 NET: Client (name:Aimer conid:94530906 TCP) disconnected from vdl.0 (clients:0)
04.11 08:09:29 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
04.11 08:09:29 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
04.11 08:09:29 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 08:09:29 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:09:29 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
04.11 08:09:29 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:09:29 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 994
04.11 08:09:29 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
04.11 08:09:29 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 08:09:29 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
04.11 08:09:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:09:29 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
04.11 08:09:29 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:09:29 TIMER: Check auto-disconnect...
04.11 08:09:29 STATS: vdl.0 cache, locks:0
04.11 08:45:58 NET: Client (conid:89292813) connected to vdl.0 (clients:1)
04.11 08:45:59 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 08:45:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 08:45:59 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 08:45:59 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 08:45:59 STATS: vdl.0 cache connection, 104 calls, total 0.302980661392212 sec spent, avg 2.91 ms
04.11 08:45:59 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 08:45:59 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 08:45:59 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 08:45:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 08:45:59 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 08:45:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 08:45:59 NET: Client login (conid:89292813, id:107, name:uid107)
04.11 08:45:59 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 08:45:59 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 08:45:59 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 08:45:59 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 08:46:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:46:03 TIME: user.ping 0.17 ms
04.11 08:46:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:46:05 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 08:46:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:46:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:46:10 TIME: user.ping 0.15 ms
04.11 08:46:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:46:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:46:17 TIME: user.ping 0.18 ms
04.11 08:46:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:46:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:46:24 TIME: user.ping 0.14 ms
04.11 08:46:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:46:29 TIMER: Check auto-disconnect...
04.11 08:46:30 STATS: vdl.0 cache, locks:2
04.11 08:46:31 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:46:31 TIME: user.ping 0.14 ms
04.11 08:46:31 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:46:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 08:46:36 TIME: user.ping 0.19 ms
04.11 08:46:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:46:39 NET: Client (name:uid107 conid:89292813 TCP) disconnected from vdl.0 (clients:0)
04.11 08:46:39 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 08:46:39 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 08:46:39 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 08:46:39 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:46:39 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
04.11 08:46:39 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:46:39 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 994
04.11 08:46:39 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 08:46:39 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 08:46:39 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 08:46:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:46:39 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 08:46:39 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 08:47:29 TIMER: Check auto-disconnect...
04.11 08:47:30 STATS: vdl.0 cache, locks:0
04.11 08:48:29 TIMER: Check auto-disconnect...
04.11 08:48:30 STATS: vdl.0 cache, locks:0
04.11 08:49:29 TIMER: Check auto-disconnect...
04.11 08:49:30 STATS: vdl.0 cache, locks:0
04.11 08:49:39 NET: Client (conid:833576) connected to vdl.0 (clients:1)
04.11 08:49:43 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
04.11 08:49:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
04.11 08:49:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
04.11 08:49:43 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
04.11 08:49:43 STATS: vdl.0 cache connection, 115 calls, total 0.3167564868927 sec spent, avg 2.75 ms
04.11 08:49:43 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
04.11 08:49:43 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 08:49:43 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
04.11 08:49:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478235945, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 76 } }
04.11 08:49:43 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
04.11 08:49:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
04.11 08:49:43 NET: Client login (conid:833576, id:76, name:Aimer)
04.11 08:49:43 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 08:49:43 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 08:49:43 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
04.11 08:49:43 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
04.11 08:49:43 ++ NET: Aimer req: user.data { messageType => user.data }
04.11 08:49:43 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
04.11 08:49:43 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
04.11 08:49:43 TIME: user.data 0.75 ms
04.11 08:49:43 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
04.11 08:49:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
04.11 08:49:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:49:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:49:56 TIME: user.ping 0.17 ms
04.11 08:49:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:50:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:50:16 TIME: user.ping 0.17 ms
04.11 08:50:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:50:29 TIMER: Check auto-disconnect...
04.11 08:50:30 STATS: vdl.0 cache, locks:2
04.11 08:50:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:50:36 TIME: user.ping 0.14 ms
04.11 08:50:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:50:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:50:56 TIME: user.ping 0.16 ms
04.11 08:50:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:51:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:51:16 TIME: user.ping 0.18 ms
04.11 08:51:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:51:29 TIMER: Check auto-disconnect...
04.11 08:51:30 STATS: vdl.0 cache, locks:2
04.11 08:51:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:51:36 TIME: user.ping 0.17 ms
04.11 08:51:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:51:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:51:56 TIME: user.ping 0.18 ms
04.11 08:51:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:52:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:52:16 TIME: user.ping 0.16 ms
04.11 08:52:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:52:29 TIMER: Check auto-disconnect...
04.11 08:52:30 STATS: vdl.0 cache, locks:2
04.11 08:52:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:52:36 TIME: user.ping 0.17 ms
04.11 08:52:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:52:47 NET: Client (name:Aimer conid:833576 TCP) disconnected from vdl.0 (clients:0)
04.11 08:52:47 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
04.11 08:52:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
04.11 08:52:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 08:52:47 STATS: vdl.0 cache connection, 122 calls, total 0.324655294418335 sec spent, avg 2.66 ms
04.11 08:52:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:52:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
04.11 08:52:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:52:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 994
04.11 08:52:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
04.11 08:52:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 08:52:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
04.11 08:52:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:52:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
04.11 08:52:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 08:53:13 NET: Client (conid:27905256) connected to vdl.0 (clients:1)
04.11 08:53:17 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
04.11 08:53:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
04.11 08:53:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
04.11 08:53:17 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
04.11 08:53:17 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
04.11 08:53:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 08:53:17 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
04.11 08:53:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478235945, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 76 } }
04.11 08:53:17 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
04.11 08:53:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
04.11 08:53:17 NET: Client login (conid:27905256, id:76, name:Aimer)
04.11 08:53:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 08:53:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 08:53:17 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
04.11 08:53:17 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
04.11 08:53:18 ++ NET: Aimer req: user.data { messageType => user.data }
04.11 08:53:18 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
04.11 08:53:18 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
04.11 08:53:18 TIME: user.data 0.59 ms
04.11 08:53:18 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
04.11 08:53:25 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
04.11 08:53:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:53:29 TIMER: Check auto-disconnect...
04.11 08:53:30 STATS: vdl.0 cache, locks:2
04.11 08:53:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:53:30 TIME: user.ping 0.14 ms
04.11 08:53:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:54:29 TIMER: Check auto-disconnect...
04.11 08:54:30 STATS: vdl.0 cache, locks:2
04.11 08:54:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:54:38 TIME: user.ping 0.17 ms
04.11 08:54:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:54:58 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:54:58 TIME: user.ping 0.17 ms
04.11 08:54:58 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:55:29 TIMER: Check auto-disconnect...
04.11 08:55:30 STATS: vdl.0 cache, locks:2
04.11 08:56:29 TIMER: Check auto-disconnect...
04.11 08:56:30 STATS: vdl.0 cache, locks:2
04.11 08:57:29 TIMER: Check auto-disconnect...
04.11 08:57:30 STATS: vdl.0 cache, locks:2
04.11 08:58:29 TIMER: Check auto-disconnect...
04.11 08:58:29 NET: Client (name:Aimer conid:27905256 TCP) disconnected from vdl.0 (clients:0)
04.11 08:58:29 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
04.11 08:58:29 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
04.11 08:58:29 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 08:58:29 STATS: vdl.0 cache connection, 134 calls, total 0.336387395858765 sec spent, avg 2.51 ms
04.11 08:58:29 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:58:29 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
04.11 08:58:29 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 08:58:29 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 994
04.11 08:58:29 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
04.11 08:58:29 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 08:58:29 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
04.11 08:58:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:58:29 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
04.11 08:58:29 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 08:58:30 STATS: vdl.0 cache, locks:0
04.11 08:59:09 NET: Client (conid:43674454) connected to vdl.0 (clients:1)
04.11 08:59:13 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
04.11 08:59:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
04.11 08:59:13 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
04.11 08:59:13 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
04.11 08:59:13 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
04.11 08:59:13 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 08:59:13 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
04.11 08:59:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478235945, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 76 } }
04.11 08:59:13 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
04.11 08:59:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
04.11 08:59:13 NET: Client login (conid:43674454, id:76, name:Aimer)
04.11 08:59:13 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 08:59:13 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 08:59:13 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
04.11 08:59:13 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
04.11 08:59:13 ++ NET: Aimer req: user.data { messageType => user.data }
04.11 08:59:13 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
04.11 08:59:13 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
04.11 08:59:13 TIME: user.data 0.44 ms
04.11 08:59:13 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
04.11 08:59:20 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
04.11 08:59:20 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 08:59:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:59:26 TIME: user.ping 0.19 ms
04.11 08:59:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
04.11 08:59:29 TIMER: Check auto-disconnect...
04.11 08:59:30 STATS: vdl.0 cache, locks:2
04.11 08:59:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
04.11 08:59:46 TIME: user.ping 0.19 ms
04.11 08:59:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
