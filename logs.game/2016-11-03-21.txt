03.11 21:00:01 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:00:01 TIME: user.ping 0.18 ms
03.11 21:00:01 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:00:13 ++ NET: uid115 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 8 }
03.11 21:00:13 ->>-: vdl/cache.battle.infoRoom { roomId => 8, _type => vdl/cache.battle.infoRoom }
03.11 21:00:13 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 21:00:13 STATS: vdl.0 cache connection, 60 calls, total 0.143898487091064 sec spent, avg 2.4 ms
03.11 21:00:13 TIME: battle.sendtask 2.46 ms
03.11 21:00:13 == NET: uid115 ret: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [0,0], battleId => 8 }
03.11 21:00:25 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:00:25 TIME: user.ping 0.13 ms
03.11 21:00:25 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:00:33 TIMER: Check auto-disconnect...
03.11 21:00:33 STATS: vdl.0 cache, locks:4
03.11 21:00:48 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:00:48 TIME: user.ping 0.15 ms
03.11 21:00:48 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:01:11 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:01:11 TIME: user.ping 0.17 ms
03.11 21:01:11 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:01:33 TIMER: Check auto-disconnect...
03.11 21:01:33 STATS: vdl.0 cache, locks:4
03.11 21:01:35 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:01:35 TIME: user.ping 0.17 ms
03.11 21:01:35 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:01:58 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:01:58 TIME: user.ping 0.16 ms
03.11 21:01:58 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:02:22 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:02:22 TIME: user.ping 0.17 ms
03.11 21:02:22 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:02:33 TIMER: Check auto-disconnect...
03.11 21:02:33 NET: Client (name:uid107 conid:86388419 TCP) disconnected from vdl.0 (clients:1)
03.11 21:02:33 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 21:02:33 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 21:02:33 -<<-: core/server.query { list => {{ id => 8 }}, errorCode => ok, _type => core/server.query }
03.11 21:02:33 STATS: vdl.0 cache connection, 61 calls, total 0.145286560058594 sec spent, avg 2.38 ms
03.11 21:02:33 ->>-: vdl/cache.battle.infoRoom { roomId => 8, _type => vdl/cache.battle.infoRoom }
03.11 21:02:33 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 21:02:33 ->>-: vdl/cache.battle.finishRoom { roomId => 8, _type => vdl/cache.battle.finishRoom }
03.11 21:02:33 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 21:02:33 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 21:02:33 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 21:02:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 21:02:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:02:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 21:02:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 21:02:33 == NET: uid115 ret: battle.end { type => battle.end }
03.11 21:02:33 STATS: vdl.0 cache, locks:2
03.11 21:02:45 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:02:45 TIME: user.ping 0.19 ms
03.11 21:02:45 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:03:10 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:03:10 TIME: user.ping 0.16 ms
03.11 21:03:10 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:03:32 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:03:32 TIME: user.ping 0.18 ms
03.11 21:03:32 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:03:33 TIMER: Check auto-disconnect...
03.11 21:03:33 STATS: vdl.0 cache, locks:2
03.11 21:03:56 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:03:56 TIME: user.ping 0.17 ms
03.11 21:03:56 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:04:19 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:04:19 TIME: user.ping 0.19 ms
03.11 21:04:19 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:04:33 TIMER: Check auto-disconnect...
03.11 21:04:33 STATS: vdl.0 cache, locks:2
03.11 21:04:43 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:04:43 TIME: user.ping 0.19 ms
03.11 21:04:43 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:05:06 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:05:06 TIME: user.ping 0.21 ms
03.11 21:05:06 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:05:30 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:05:30 TIME: user.ping 0.48 ms
03.11 21:05:30 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:05:33 TIMER: Check auto-disconnect...
03.11 21:05:33 STATS: vdl.0 cache, locks:2
03.11 21:05:53 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:05:53 TIME: user.ping 0.19 ms
03.11 21:05:53 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:06:17 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:06:17 TIME: user.ping 0.23 ms
03.11 21:06:17 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:06:33 TIMER: Check auto-disconnect...
03.11 21:06:33 STATS: vdl.0 cache, locks:2
03.11 21:06:40 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:06:40 TIME: user.ping 0.19 ms
03.11 21:06:40 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:07:04 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:07:04 TIME: user.ping 0.16 ms
03.11 21:07:04 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:07:27 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:07:27 TIME: user.ping 0.21 ms
03.11 21:07:27 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:07:33 TIMER: Check auto-disconnect...
03.11 21:07:33 STATS: vdl.0 cache, locks:2
03.11 21:07:51 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:07:51 TIME: user.ping 0.23 ms
03.11 21:07:51 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:08:14 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:08:14 TIME: user.ping 0.15 ms
03.11 21:08:14 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:08:33 TIMER: Check auto-disconnect...
03.11 21:08:33 STATS: vdl.0 cache, locks:2
03.11 21:08:38 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:08:38 TIME: user.ping 0.17 ms
03.11 21:08:38 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:09:01 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:09:01 TIME: user.ping 0.16 ms
03.11 21:09:01 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:09:25 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:09:25 TIME: user.ping 0.15 ms
03.11 21:09:25 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:09:33 TIMER: Check auto-disconnect...
03.11 21:09:33 STATS: vdl.0 cache, locks:2
03.11 21:09:48 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:09:48 TIME: user.ping 0.16 ms
03.11 21:09:48 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:10:11 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:10:11 TIME: user.ping 0.18 ms
03.11 21:10:11 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:10:33 TIMER: Check auto-disconnect...
03.11 21:10:33 STATS: vdl.0 cache, locks:2
03.11 21:10:35 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:10:35 TIME: user.ping 0.18 ms
03.11 21:10:35 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:10:58 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:10:58 TIME: user.ping 0.16 ms
03.11 21:10:58 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:11:22 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:11:22 TIME: user.ping 0.18 ms
03.11 21:11:22 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:11:33 TIMER: Check auto-disconnect...
03.11 21:11:33 STATS: vdl.0 cache, locks:2
03.11 21:11:45 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:11:45 TIME: user.ping 0.18 ms
03.11 21:11:45 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:12:09 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:12:09 TIME: user.ping 0.16 ms
03.11 21:12:09 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:12:33 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:12:33 TIME: user.ping 0.17 ms
03.11 21:12:33 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:12:33 TIMER: Check auto-disconnect...
03.11 21:12:33 STATS: vdl.0 cache, locks:2
03.11 21:12:55 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:12:55 TIME: user.ping 0.19 ms
03.11 21:12:55 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:13:18 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:13:18 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:13:18 TIME: user.ping 0.18 ms
03.11 21:13:33 TIMER: Check auto-disconnect...
03.11 21:13:33 STATS: vdl.0 cache, locks:2
03.11 21:13:42 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:13:42 TIME: user.ping 0.14 ms
03.11 21:13:42 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:14:05 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:14:05 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:14:05 TIME: user.ping 0.17 ms
03.11 21:14:29 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:14:29 TIME: user.ping 0.17 ms
03.11 21:14:29 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:14:33 TIMER: Check auto-disconnect...
03.11 21:14:33 STATS: vdl.0 cache, locks:2
03.11 21:14:52 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:14:52 TIME: user.ping 0.15 ms
03.11 21:14:52 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:15:16 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:15:16 TIME: user.ping 0.15 ms
03.11 21:15:16 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:15:33 TIMER: Check auto-disconnect...
03.11 21:15:34 STATS: vdl.0 cache, locks:2
03.11 21:15:39 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:15:39 TIME: user.ping 0.19 ms
03.11 21:15:39 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:16:00 NET: Client (name:uid115 conid:47951249 TCP) disconnected from vdl.0 (clients:0)
03.11 21:16:00 DB: SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true
03.11 21:16:00 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true, _type => core/server.query }
03.11 21:16:00 -<<-: core/server.query { list => {{ id => 7 }, { id => 8 }}, errorCode => ok, _type => core/server.query }
03.11 21:16:00 STATS: vdl.0 cache connection, 67 calls, total 0.151317358016968 sec spent, avg 2.26 ms
03.11 21:16:00 ->>-: vdl/cache.battle.infoRoom { roomId => 8, _type => vdl/cache.battle.infoRoom }
03.11 21:16:00 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 21:16:00 ->>-: vdl/cache.battle.finishRoom { roomId => 8, _type => vdl/cache.battle.finishRoom }
03.11 21:16:00 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 21:16:00 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 21:16:00 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 21:16:00 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 115, _type => core/cache.update }
03.11 21:16:00 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 21:16:00 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 115, _type => core/cache.update }
03.11 21:16:00 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:16:00 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 115, _type => core/user.logoutPost }
03.11 21:16:00 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 21:16:27 NET: Client (conid:10342353) connected to vdl.0 (clients:1)
03.11 21:16:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE1 }
03.11 21:16:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
03.11 21:16:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
03.11 21:16:31 -<<-: core/server.query { list => {{ name => uid115, networkid => , isbanned => false, id => 115 }}, errorCode => ok, _type => core/server.query }
03.11 21:16:31 ->>-: core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
03.11 21:16:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 21:16:31 ->>-: core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
03.11 21:16:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid115, deleted => false, email => , networktype =>   , password => uid115, isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478188735, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 115 } }
03.11 21:16:31 ->>-: core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
03.11 21:16:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 115 } }
03.11 21:16:31 NET: Client login (conid:10342353, id:115, name:uid115)
03.11 21:16:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 21:16:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 21:16:31 == NET: uid115 ret: user.login { name => uid115, type => user.login, errorCode => ok, id => 115 }
03.11 21:16:31 == NET: uid115 ret: user.join { name => uid115, type => user.join }
03.11 21:16:33 TIMER: Check auto-disconnect...
03.11 21:16:34 STATS: vdl.0 cache, locks:2
03.11 21:16:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 115, _type => core/cache.update }
03.11 21:16:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:16:44 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:16:44 TIME: user.ping 0.17 ms
03.11 21:16:44 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:17:04 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:17:04 TIME: user.ping 0.16 ms
03.11 21:17:04 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:17:24 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:17:24 TIME: user.ping 0.18 ms
03.11 21:17:24 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:17:33 TIMER: Check auto-disconnect...
03.11 21:17:34 STATS: vdl.0 cache, locks:2
03.11 21:17:44 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:17:44 TIME: user.ping 0.17 ms
03.11 21:17:44 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:18:04 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:18:04 TIME: user.ping 0.17 ms
03.11 21:18:04 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:18:21 NET: Client (conid:94044527) connected to vdl.0 (clients:2)
03.11 21:18:21 ++ NET: uid115 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 21:18:21 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 115 }, _type => vdl/cache.battle.findRandom }
03.11 21:18:21 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 21:18:21 STATS: vdl.0 cache connection, 80 calls, total 0.162668704986572 sec spent, avg 2.03 ms
03.11 21:18:21 TIME: battle.find 0.36 ms
03.11 21:18:21 == NET: uid115 ret: battle.find { type => battle.find, errorCode => ok }
03.11 21:18:22 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 21:18:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 21:18:22 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 21:18:22 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 21:18:22 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 21:18:22 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 21:18:22 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 21:18:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 21:18:22 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 21:18:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 21:18:22 NET: Client login (conid:94044527, id:107, name:uid107)
03.11 21:18:22 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 21:18:22 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 21:18:22 == NET: uid115 ret: user.join { name => uid107, type => user.join }
03.11 21:18:22 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 21:18:22 == NET: uid107 ret: user.join { name => uid115, type => user.join }
03.11 21:18:22 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 21:18:26 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:18:26 TIME: user.ping 0.24 ms
03.11 21:18:26 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:18:27 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:18:27 TIME: user.ping 0.16 ms
03.11 21:18:27 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:18:29 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 21:18:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:18:31 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 21:18:31 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 21:18:31 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 2, battleId => 9, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 21:18:31 -<<-: battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 1, battleId => 9, player => 2 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 21:18:31 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 21:18:31 TIME: battle.find 33.47 ms
03.11 21:18:31 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 21:18:31 == NET: uid115 ret: battle.enemy { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 1, battleId => 9, player => 2 }, type => battle.enemy }
03.11 21:18:31 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 2, battleId => 9, player => 1 }, type => battle.enemy }
03.11 21:18:33 TIMER: Check auto-disconnect...
03.11 21:18:34 STATS: vdl.0 cache, locks:4
03.11 21:18:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:18:36 TIME: user.ping 0.2 ms
03.11 21:18:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:18:41 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 9 }
03.11 21:18:41 ->>-: vdl/cache.battle.infoRoom { roomId => 9, _type => vdl/cache.battle.infoRoom }
03.11 21:18:41 -<<-: vdl/cache.battle.infoRoom { secondId => 115, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 21:18:41 TIME: battle.sendtask 0.65 ms
03.11 21:18:41 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,2,0,4,1,4], errorCode => ok, _type => battle.task }
03.11 21:18:41 == NET: uid115 ret: battle.task { name => throw, type => battle.task, dices => [2,2,0,4,1,4], errorCode => ok }
03.11 21:18:41 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 21:18:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:18:48 TIME: user.ping 0.2 ms
03.11 21:18:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:18:53 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:18:53 TIME: user.ping 0.16 ms
03.11 21:18:53 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:18:59 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:18:59 TIME: user.ping 0.16 ms
03.11 21:18:59 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:19:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:19:11 TIME: user.ping 0.16 ms
03.11 21:19:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:19:20 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:19:20 TIME: user.ping 0.22 ms
03.11 21:19:20 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:19:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:19:23 TIME: user.ping 0.17 ms
03.11 21:19:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:19:33 TIMER: Check auto-disconnect...
03.11 21:19:34 STATS: vdl.0 cache, locks:4
03.11 21:19:47 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:19:47 TIME: user.ping 0.18 ms
03.11 21:19:47 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:20:14 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:20:14 TIME: user.ping 0.19 ms
03.11 21:20:14 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:20:33 TIMER: Check auto-disconnect...
03.11 21:20:34 STATS: vdl.0 cache, locks:4
03.11 21:20:40 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:20:40 TIME: user.ping 0.16 ms
03.11 21:20:40 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:21:05 NET: Client (name:uid107 conid:94044527 TCP) disconnected from vdl.0 (clients:1)
03.11 21:21:05 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 21:21:05 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 21:21:05 -<<-: core/server.query { list => {{ id => 9 }}, errorCode => ok, _type => core/server.query }
03.11 21:21:05 STATS: vdl.0 cache connection, 89 calls, total 0.205685615539551 sec spent, avg 2.31 ms
03.11 21:21:05 ->>-: vdl/cache.battle.infoRoom { roomId => 9, _type => vdl/cache.battle.infoRoom }
03.11 21:21:05 -<<-: vdl/cache.battle.infoRoom { secondId => 115, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 21:21:05 ->>-: vdl/cache.battle.finishRoom { roomId => 9, _type => vdl/cache.battle.finishRoom }
03.11 21:21:05 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 21:21:05 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 21:21:05 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 21:21:05 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 21:21:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:21:05 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 21:21:05 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 21:21:05 == NET: uid115 ret: battle.end { type => battle.end }
03.11 21:21:07 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:21:07 TIME: user.ping 0.19 ms
03.11 21:21:07 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:21:33 TIMER: Check auto-disconnect...
03.11 21:21:33 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:21:33 TIME: user.ping 0.16 ms
03.11 21:21:33 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:21:34 STATS: vdl.0 cache, locks:2
03.11 21:22:00 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:22:00 TIME: user.ping 0.17 ms
03.11 21:22:00 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:22:26 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:22:26 TIME: user.ping 0.17 ms
03.11 21:22:26 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:22:33 TIMER: Check auto-disconnect...
03.11 21:22:34 STATS: vdl.0 cache, locks:2
03.11 21:22:53 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:22:53 TIME: user.ping 0.17 ms
03.11 21:22:53 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:23:33 TIMER: Check auto-disconnect...
03.11 21:23:34 STATS: vdl.0 cache, locks:2
03.11 21:23:39 NET: Client (name:uid115 conid:10342353 TCP) disconnected from vdl.0 (clients:0)
03.11 21:23:39 DB: SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true
03.11 21:23:39 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true, _type => core/server.query }
03.11 21:23:39 -<<-: core/server.query { list => {{ id => 7 }, { id => 8 }}, errorCode => ok, _type => core/server.query }
03.11 21:23:39 STATS: vdl.0 cache connection, 95 calls, total 0.210654497146606 sec spent, avg 2.22 ms
03.11 21:23:39 ->>-: vdl/cache.battle.infoRoom { roomId => 8, _type => vdl/cache.battle.infoRoom }
03.11 21:23:39 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 21:23:39 ->>-: vdl/cache.battle.finishRoom { roomId => 8, _type => vdl/cache.battle.finishRoom }
03.11 21:23:39 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 21:23:39 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 21:23:39 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 21:23:39 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 115, _type => core/cache.update }
03.11 21:23:39 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 21:23:39 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 115, _type => core/cache.update }
03.11 21:23:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:23:39 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 115, _type => core/user.logoutPost }
03.11 21:23:39 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 21:24:33 TIMER: Check auto-disconnect...
03.11 21:24:34 STATS: vdl.0 cache, locks:0
03.11 21:25:33 TIMER: Check auto-disconnect...
03.11 21:25:34 STATS: vdl.0 cache, locks:0
03.11 21:26:17 NET: Client (conid:27719750) connected to vdl.0 (clients:1)
03.11 21:26:18 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 21:26:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 21:26:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 21:26:18 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 21:26:18 STATS: vdl.0 cache connection, 102 calls, total 0.216254472732544 sec spent, avg 2.12 ms
03.11 21:26:18 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 21:26:18 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 21:26:18 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 21:26:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 21:26:18 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 21:26:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 21:26:18 NET: Client login (conid:27719750, id:107, name:uid107)
03.11 21:26:18 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 21:26:18 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 21:26:18 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 21:26:18 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 21:26:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:26:21 TIME: user.ping 0.19 ms
03.11 21:26:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:26:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 21:26:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:26:27 NET: Client (conid:25486736) connected to vdl.0 (clients:2)
03.11 21:26:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:26:29 TIME: user.ping 0.16 ms
03.11 21:26:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:26:31 ++ NET: null req: user.register { messageType => user.register }
03.11 21:26:31 DB: SELECT * FROM users
03.11 21:26:31 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
03.11 21:26:31 -<<-: core/server.query { list => {{ password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"inventory":{"list":[]},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid64, name => uid64, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, id => 64, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid67, name => uid67, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476886636,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:17:16.853975+03, language => en, id => 67, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid65, name => uid65, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476879545,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 15:19:05.058893+03, language => en, id => 65, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => qweqwe, name => asdasd, networkid => , params => {"info":{"city":"Dsadasd","year":"1231","email":"asdasdas"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.822508+03, language =>   , id => 69, deleted => false }, { password => uid66, name => uid66, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476882998,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 16:16:38.334095+03, language => en, id => 66, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }, { password => uid73, name => uid73, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889025,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:57:04.529542+03, language => en, id => 73, deleted => false }, { password => uid71, name => uid71, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888930,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:55:29.621522+03, language => en, id => 71, deleted => false }, { password => uid68, name => uid68, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888788,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.78775+03, language => en, id => 68, deleted => false }, { password => 123123, name => 123123, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:54:22.233721+03, language =>   , id => 70, deleted => false }, { password => qweqwe, name => 1qweqwe, networkid => , params => {"info":{"city":"Qweqwe","year":"1231","email":"qweqwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:56:17.221331+03, language =>   , id => 72, deleted => false }, { password => 123123, name => 123qwe, networkid => , params => {"info":{"city":"Wqe","year":"1233","email":"123qwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:59:29.773441+03, language =>   , id => 74, deleted => false }, { password => uid75, name => uid75, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889477,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:04:35.916538+03, language => en, id => 75, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890115,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language => en, id => 44, deleted => false }, { password => uid77, name => uid77, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889607,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:06:46.41184+03, language => en, id => 77, deleted => false }, { password => 123456, name => test20, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477646178,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 12:16:18.03489+03, language => en, id => 96, deleted => false }, { password => uid78, name => uid78, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890199,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:16:37.399803+03, language => en, id => 78, deleted => false }, { password => uid83, name => uid83, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961590,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:06:28.765885+03, language => en, id => 83, deleted => false }, { password => uid79, name => uid79, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476959779,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:36:18.869521+03, language => en, id => 79, deleted => false }, { password => uid89, name => uid89, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308423,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-24 14:26:57.401644+03, language => en, id => 89, deleted => false }, { password => uid84, name => uid84, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961768,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:09:27.02443+03, language => en, id => 84, deleted => false }, { password => uid102, name => uid102, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477660100,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:08:15.479957+03, language => en, id => 102, deleted => false }, { password => uid80, name => uid80, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476960874,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:54:32.93048+03, language => en, id => 80, deleted => false }, { password => uid81, name => uid81, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961061,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:57:40.114003+03, language => en, id => 81, deleted => false }, { password => uid85, name => uid85, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476962319,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:18:38.418977+03, language => en, id => 85, deleted => false }, { password => 123123, name => Tester, networkid => , params => {"info":{"city":"Dsda","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:58:49.229528+03, language =>   , id => 86, deleted => false }, { password => qweqwe, name => Acterix, networkid => , params => {"info":{"city":"Weqwe","year":"2312","email":"eqwe123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:39:29.554557+03, language =>   , id => 90, deleted => false }, { password => uid91, name => uid91, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399413,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:43:32.477232+03, language => en, id => 91, deleted => false }, { password => uid82, name => uid82, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961257,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:00:56.513148+03, language => en, id => 82, deleted => false }, { password => uid87, name => uid87, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, id => 87, deleted => false }, { password => uid88, name => uid88, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477049264,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-21 14:27:43.099186+03, language => en, id => 88, deleted => false }, { password => 123456, name => test17, networkid => , params => {"info":{"city":"","year":"","email":"asda"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399457,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:44:17.274208+03, language => en, id => 92, deleted => false }, { password => uid95, name => uid95, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477489312,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, id => 95, deleted => false }, { password => uid93, name => uid93, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477400907,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:08:27.066262+03, language => en, id => 93, deleted => false }, { password => uid94, name => uid94, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477655031,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, id => 94, deleted => false }, { password => kO2YJdf, name => Aimer, networkid => , params => {"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477646117,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, id => 76, deleted => false }, { password => uid98, name => uid98, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477659590,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 15:59:47.355767+03, language => en, id => 98, deleted => false }, { password => uid97, name => uid97, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477647307,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 12:35:05.771011+03, language => en, id => 97, deleted => false }, { password => uid99, name => uid99, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477659641,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:00:39.9083+03, language => en, id => 99, deleted => false }, { password => uid103, name => uid103, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477660355,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:12:35.388519+03, language => en, id => 103, deleted => false }, { password => qwerty, name => nelli8, networkid => , params => {"info":{"city":"Kazan","year":"","email":"nlqbunskaha@mail.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750390,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:03:03.386319+03, language => en, id => 101, deleted => false }, { password => uid105, name => uid105, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661095,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:24:51.972524+03, language => en, id => 105, deleted => false }, { password => test, name => test67, networkid => , params => {"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750490,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:02:55.698999+03, language => en, id => 100, deleted => false }, { password => uid106, name => uid106, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661732,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:35:25.243155+03, language => en, id => 106, deleted => false }, { password => qwerty, name => qwerty, networkid => , params => {"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:12:35.945256+03, language => en, id => 104, deleted => false }, { password => uid108, name => uid108, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661911,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:38:24.62117+03, language => en, id => 108, deleted => false }, { password => uid109, name => uid109, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661920,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:38:37.423978+03, language => en, id => 109, deleted => false }, { password => uid111, name => uid111, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477662049,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:40:47.262501+03, language => en, id => 111, deleted => false }, { password => ass12, name => ass12, networkid => , params => {"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661977,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:39:37.381394+03, language => en, id => 110, deleted => false }, { password => uid112, name => uid112, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477747925,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-29 16:31:59.278542+03, language => en, id => 112, deleted => false }, { password => uid114, name => uid114, networkid => , params => {"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, id => 114, deleted => false }, { password => uid113, name => uid113, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750380,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-29 17:12:53.911759+03, language => en, id => 113, deleted => false }, { password => uid115, name => uid115, networkid => , params => {"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, id => 115, deleted => false }, { password => uid107, name => uid107, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, id => 107, deleted => false }}, errorCode => ok, _type => core/server.query }
03.11 21:26:31 DB: SELECT ID FROM Users WHERE Name = E'uid116'
03.11 21:26:31 == NET: null ret: user.auth { type => user.auth, token => dWlkMTE2 }
03.11 21:26:31 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid116', _type => core/server.query }
03.11 21:26:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 21:26:31 DB: SELECT nextval('Users_id_seq') AS id
03.11 21:26:31 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
03.11 21:26:31 -<<-: core/server.query { list => {{ id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 21:26:31 ->>-: core/user.register { password => uid116, name => uid116, fullParams => { password => uid116, name => uid116, networkid => , networktype => , messageType => user.register, id => 116 }, networkid => , connectionID => 25486736, networktype => , email => , id => 116, _type => core/user.register }
03.11 21:26:31 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
03.11 21:26:31 -<<-: core/user.registerResponse { password => uid116, name => uid116, _isNotify => true, fullParams => { password => uid116, name => uid116, networkid => , networktype => , messageType => user.register, id => 116 }, networkid => , connectionID => 25486736, networktype => , email => , id => 116, _type => core/user.registerResponse }
03.11 21:26:31 == NET: null ret: user.register { type => user.register, errorCode => ok }
03.11 21:26:33 TIMER: Check auto-disconnect...
03.11 21:26:34 STATS: vdl.0 cache, locks:2
03.11 21:26:37 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:26:37 TIME: user.ping 0.2 ms
03.11 21:26:37 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:26:39 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
03.11 21:26:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 21:26:39 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 21:26:39 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 21:26:39 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 21:26:39 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 21:26:39 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 21:26:39 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => null, year => null, networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language =>   , city => , networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 4, id => 116 } }
03.11 21:26:39 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 21:26:39 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 116 } }
03.11 21:26:39 NET: Client login (conid:25486736, id:116, name:uid116)
03.11 21:26:39 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 21:26:39 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 21:26:39 DB: SELECT ID FROM TempUserLogins WHERE UserID = 116 AND Date = 'today'::timestamp
03.11 21:26:39 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 116 AND Date = 'today'::timestamp, _type => core/server.query }
03.11 21:26:39 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 21:26:39 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (116, 'today'::timestamp)
03.11 21:26:39 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
03.11 21:26:39 ++ NET: uid116 req: user.login { messageType => user.login, token => dWlkMTE2 }
03.11 21:26:39 TRACE: User already logon.
03.11 21:26:39 TRACE: 
Called from snipe/slave/Server.hx line 870
Called from snipe/slave/Server.hx line 1124
03.11 21:26:39 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 21:26:39 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 21:26:39 == NET: uid116 ret: user.join { name => uid116, type => user.join }
03.11 21:26:39 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478197599, lastLoginDate => 308, lastLoadDate => 1104 } }}, type => user, unlock => true, id => 116, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (116, 'today'::timestamp), _type => core/server.pending }} }
03.11 21:26:39 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
03.11 21:26:39 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 21:26:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:26:39 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 21:26:39 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 21:26:39 TRACE: Could not login.
03.11 21:26:39 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
03.11 21:26:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:26:44 TIME: user.ping 0.18 ms
03.11 21:26:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:26:45 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:26:45 TIME: user.ping 0.15 ms
03.11 21:26:45 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:26:49 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 21:26:49 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 21:26:49 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 21:26:49 TIME: battle.find 0.65 ms
03.11 21:26:49 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 21:26:54 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 21:26:54 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 21:26:54 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 10, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 21:26:54 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 21:26:54 TIME: battle.find 32.21 ms
03.11 21:26:54 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
03.11 21:26:54 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 10, player => 2 }, type => battle.enemy }
03.11 21:26:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:26:55 TIME: user.ping 0.13 ms
03.11 21:26:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:27:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:27:07 TIME: user.ping 0.18 ms
03.11 21:27:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:27:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:27:09 TIME: user.ping 0.16 ms
03.11 21:27:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:27:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:27:18 TIME: user.ping 0.15 ms
03.11 21:27:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:27:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:27:30 TIME: user.ping 0.18 ms
03.11 21:27:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:27:33 TIMER: Check auto-disconnect...
03.11 21:27:34 STATS: vdl.0 cache, locks:2
03.11 21:27:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:27:37 TIME: user.ping 0.17 ms
03.11 21:27:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:27:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:27:41 TIME: user.ping 0.2 ms
03.11 21:27:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:27:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:27:53 TIME: user.ping 0.16 ms
03.11 21:27:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:28:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:28:04 TIME: user.ping 0.19 ms
03.11 21:28:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:28:05 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:28:05 TIME: user.ping 0.17 ms
03.11 21:28:05 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:28:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:28:16 TIME: user.ping 0.16 ms
03.11 21:28:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:28:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:28:27 TIME: user.ping 0.19 ms
03.11 21:28:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:28:33 TIMER: Check auto-disconnect...
03.11 21:28:33 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:28:33 TIME: user.ping 0.21 ms
03.11 21:28:33 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:28:34 STATS: vdl.0 cache, locks:2
03.11 21:28:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:28:39 TIME: user.ping 0.19 ms
03.11 21:28:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:28:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:28:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:28:50 TIME: user.ping 0.18 ms
03.11 21:29:01 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:29:01 TIME: user.ping 0.17 ms
03.11 21:29:01 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:29:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:29:02 TIME: user.ping 0.17 ms
03.11 21:29:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:29:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:29:13 TIME: user.ping 0.2 ms
03.11 21:29:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:29:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:29:25 TIME: user.ping 0.15 ms
03.11 21:29:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:29:29 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:29:29 TIME: user.ping 0.15 ms
03.11 21:29:29 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:29:33 TIMER: Check auto-disconnect...
03.11 21:29:34 STATS: vdl.0 cache, locks:2
03.11 21:29:37 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:29:37 TIME: user.ping 0.14 ms
03.11 21:29:37 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:29:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:29:48 TIME: user.ping 0.15 ms
03.11 21:29:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:29:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:29:57 TIME: user.ping 0.18 ms
03.11 21:29:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:30:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:30:00 TIME: user.ping 0.13 ms
03.11 21:30:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:30:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:30:11 TIME: user.ping 0.14 ms
03.11 21:30:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:30:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:30:23 TIME: user.ping 0.17 ms
03.11 21:30:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:30:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:30:25 TIME: user.ping 0.19 ms
03.11 21:30:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:30:33 TIMER: Check auto-disconnect...
03.11 21:30:34 STATS: vdl.0 cache, locks:2
03.11 21:30:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:30:35 TIME: user.ping 0.16 ms
03.11 21:30:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:30:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:30:46 TIME: user.ping 0.19 ms
03.11 21:30:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:30:53 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:30:53 TIME: user.ping 0.15 ms
03.11 21:30:53 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:30:58 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:30:58 TIME: user.ping 0.18 ms
03.11 21:30:58 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:31:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:31:09 TIME: user.ping 0.21 ms
03.11 21:31:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:31:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:31:21 TIME: user.ping 0.17 ms
03.11 21:31:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:31:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:31:21 TIME: user.ping 0.19 ms
03.11 21:31:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:31:33 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:31:33 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:31:33 TIME: user.ping 0.14 ms
03.11 21:31:33 TIMER: Check auto-disconnect...
03.11 21:31:34 STATS: vdl.0 cache, locks:2
03.11 21:31:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:31:44 TIME: user.ping 0.19 ms
03.11 21:31:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:31:49 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:31:49 TIME: user.ping 0.17 ms
03.11 21:31:49 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:31:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:31:56 TIME: user.ping 0.14 ms
03.11 21:31:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:32:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:32:07 TIME: user.ping 0.16 ms
03.11 21:32:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:32:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:32:17 TIME: user.ping 0.19 ms
03.11 21:32:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:32:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:32:19 TIME: user.ping 0.14 ms
03.11 21:32:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:32:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:32:30 TIME: user.ping 0.17 ms
03.11 21:32:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:32:33 TIMER: Check auto-disconnect...
03.11 21:32:34 STATS: vdl.0 cache, locks:2
03.11 21:32:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:32:42 TIME: user.ping 0.2 ms
03.11 21:32:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:32:45 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:32:45 TIME: user.ping 0.2 ms
03.11 21:32:45 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:32:54 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:32:54 TIME: user.ping 0.18 ms
03.11 21:32:54 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:33:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:33:05 TIME: user.ping 0.19 ms
03.11 21:33:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:33:13 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:33:13 TIME: user.ping 0.21 ms
03.11 21:33:13 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:33:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:33:17 TIME: user.ping 0.15 ms
03.11 21:33:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:33:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:33:29 TIME: user.ping 0.19 ms
03.11 21:33:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:33:33 TIMER: Check auto-disconnect...
03.11 21:33:34 STATS: vdl.0 cache, locks:2
03.11 21:33:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:33:40 TIME: user.ping 0.18 ms
03.11 21:33:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:33:41 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:33:41 TIME: user.ping 0.15 ms
03.11 21:33:41 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:33:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:33:52 TIME: user.ping 0.19 ms
03.11 21:33:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:34:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:34:04 TIME: user.ping 0.16 ms
03.11 21:34:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:34:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:34:09 TIME: user.ping 0.14 ms
03.11 21:34:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:34:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:34:15 TIME: user.ping 0.21 ms
03.11 21:34:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:34:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:34:27 TIME: user.ping 0.17 ms
03.11 21:34:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:34:33 TIMER: Check auto-disconnect...
03.11 21:34:34 STATS: vdl.0 cache, locks:2
03.11 21:34:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:34:37 TIME: user.ping 0.13 ms
03.11 21:34:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:34:38 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:34:38 TIME: user.ping 0.14 ms
03.11 21:34:38 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:34:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:34:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:34:50 TIME: user.ping 0.16 ms
03.11 21:35:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:35:02 TIME: user.ping 0.18 ms
03.11 21:35:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:35:05 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:35:05 TIME: user.ping 0.19 ms
03.11 21:35:05 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:35:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:35:13 TIME: user.ping 0.23 ms
03.11 21:35:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:42:38 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 21:42:38 -<<-: server.login ok
03.11 21:42:38 DB: SELECT * FROM LocalizationStrings
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 TIMER: Starting timer...
03.11 21:42:38 TIMER: Timer running...
03.11 21:42:38 DB: SELECT * FROM GameVars
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
03.11 21:42:38 -<<-: core/quest.getDaily ok
03.11 21:42:38 DB: SELECT * FROM UserAttributeTypes
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM UserVariableTypes
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 21:42:38 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM ItemGroups
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM Bundles ORDER BY ID
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 SHOP: loading items...
03.11 21:42:38 ->>-: core/shop.getList { _type => core/shop.getList }
03.11 21:42:38 -<<-: core/shop.getList ok
03.11 21:42:38 SHOP: 0 items loaded (0 sec)
03.11 21:42:38 DB: SELECT * FROM EffectAttributeTypes
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM Effects
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 21:42:38 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 21:42:38 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:38 DB: SELECT * FROM Badges
03.11 21:42:38 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 21:42:38 -<<-: core/server.query ok
03.11 21:42:50 NET: Client (conid:50656819) connected to vdl.0 (clients:1)
03.11 21:42:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:42:53 TRACE: User not logon yet.
03.11 21:43:00 NET: Client (conid:13903458) connected to vdl.0 (clients:2)
03.11 21:43:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:43:05 TRACE: User not logon yet.
03.11 21:43:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:43:07 TRACE: User not logon yet.
03.11 21:43:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:43:16 TRACE: User not logon yet.
03.11 21:43:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:43:28 TRACE: User not logon yet.
03.11 21:43:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:43:35 TRACE: User not logon yet.
03.11 21:43:38 TIMER: Check auto-disconnect...
03.11 21:43:38 STATS: vdl.0 cache, locks:0
03.11 21:43:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:43:39 TRACE: User not logon yet.
03.11 21:43:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:43:51 TRACE: User not logon yet.
03.11 21:44:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:44:02 TRACE: User not logon yet.
03.11 21:44:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:44:03 TRACE: User not logon yet.
03.11 21:44:14 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:44:14 TRACE: User not logon yet.
03.11 21:44:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:44:25 TRACE: User not logon yet.
03.11 21:44:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:44:31 TRACE: User not logon yet.
03.11 21:44:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:44:37 TRACE: User not logon yet.
03.11 21:44:38 TIMER: Check auto-disconnect...
03.11 21:44:38 STATS: vdl.0 cache, locks:0
03.11 21:44:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:44:48 TRACE: User not logon yet.
03.11 21:44:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:44:58 TRACE: User not logon yet.
03.11 21:45:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:45:00 TRACE: User not logon yet.
03.11 21:45:12 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:45:12 TRACE: User not logon yet.
03.11 21:45:23 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:45:23 TRACE: User not logon yet.
03.11 21:45:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:45:27 TRACE: User not logon yet.
03.11 21:45:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:45:35 TRACE: User not logon yet.
03.11 21:45:38 TIMER: Check auto-disconnect...
03.11 21:45:38 STATS: vdl.0 cache, locks:0
03.11 21:45:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:45:46 TRACE: User not logon yet.
03.11 21:45:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:45:54 TRACE: User not logon yet.
03.11 21:45:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:45:58 TRACE: User not logon yet.
03.11 21:46:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:46:09 TRACE: User not logon yet.
03.11 21:46:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:46:22 TRACE: User not logon yet.
03.11 21:46:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:46:22 TRACE: User not logon yet.
03.11 21:46:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:46:34 TRACE: User not logon yet.
03.11 21:46:38 TIMER: Check auto-disconnect...
03.11 21:46:38 STATS: vdl.0 cache, locks:0
03.11 21:46:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:46:46 TRACE: User not logon yet.
03.11 21:46:50 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:46:50 TRACE: User not logon yet.
03.11 21:46:57 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:46:57 TRACE: User not logon yet.
03.11 21:47:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:47:10 TRACE: User not logon yet.
03.11 21:47:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:47:18 TRACE: User not logon yet.
03.11 21:47:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:47:22 TRACE: User not logon yet.
03.11 21:47:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:47:35 TRACE: User not logon yet.
03.11 21:47:38 TIMER: Check auto-disconnect...
03.11 21:47:38 STATS: vdl.0 cache, locks:0
03.11 21:47:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:47:46 TRACE: User not logon yet.
03.11 21:47:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:47:46 TRACE: User not logon yet.
03.11 21:47:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:47:58 TRACE: User not logon yet.
03.11 21:48:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:48:09 TRACE: User not logon yet.
03.11 21:48:14 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:48:14 TRACE: User not logon yet.
03.11 21:48:21 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:48:21 TRACE: User not logon yet.
03.11 21:48:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:48:32 TRACE: User not logon yet.
03.11 21:48:38 TIMER: Check auto-disconnect...
03.11 21:48:38 STATS: vdl.0 cache, locks:0
03.11 21:48:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:48:42 TRACE: User not logon yet.
03.11 21:48:44 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:48:44 TRACE: User not logon yet.
03.11 21:48:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:48:56 TRACE: User not logon yet.
03.11 21:49:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:49:07 TRACE: User not logon yet.
03.11 21:49:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:49:10 TRACE: User not logon yet.
03.11 21:49:19 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:49:19 TRACE: User not logon yet.
03.11 21:49:30 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:49:30 TRACE: User not logon yet.
03.11 21:49:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:49:38 TRACE: User not logon yet.
03.11 21:49:38 TIMER: Check auto-disconnect...
03.11 21:49:38 STATS: vdl.0 cache, locks:0
03.11 21:49:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:49:42 TRACE: User not logon yet.
03.11 21:49:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:49:53 TRACE: User not logon yet.
03.11 21:50:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:50:05 TRACE: User not logon yet.
03.11 21:50:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:50:06 TRACE: User not logon yet.
03.11 21:50:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:50:16 TRACE: User not logon yet.
03.11 21:50:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:50:28 TRACE: User not logon yet.
03.11 21:50:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:50:34 TRACE: User not logon yet.
03.11 21:50:38 TIMER: Check auto-disconnect...
03.11 21:50:38 STATS: vdl.0 cache, locks:0
03.11 21:50:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:50:39 TRACE: User not logon yet.
03.11 21:50:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:50:51 TRACE: User not logon yet.
03.11 21:51:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:51:02 TRACE: User not logon yet.
03.11 21:51:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:51:02 TRACE: User not logon yet.
03.11 21:51:14 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:51:14 TRACE: User not logon yet.
03.11 21:51:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:51:25 TRACE: User not logon yet.
03.11 21:51:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:51:31 TRACE: User not logon yet.
03.11 21:51:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:51:37 TRACE: User not logon yet.
03.11 21:51:38 TIMER: Check auto-disconnect...
03.11 21:51:38 STATS: vdl.0 cache, locks:0
03.11 21:51:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:51:48 TRACE: User not logon yet.
03.11 21:51:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:51:58 TRACE: User not logon yet.
03.11 21:52:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:52:00 TRACE: User not logon yet.
03.11 21:52:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:52:11 TRACE: User not logon yet.
03.11 21:52:23 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:52:23 TRACE: User not logon yet.
03.11 21:52:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:52:26 TRACE: User not logon yet.
03.11 21:52:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:52:35 TRACE: User not logon yet.
03.11 21:52:53 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 21:52:53 -<<-: server.login ok
03.11 21:52:53 DB: SELECT * FROM LocalizationStrings
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 TIMER: Starting timer...
03.11 21:52:53 DB: SELECT * FROM GameVars
03.11 21:52:53 TIMER: Timer running...
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
03.11 21:52:53 -<<-: core/quest.getDaily ok
03.11 21:52:53 DB: SELECT * FROM UserAttributeTypes
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM UserVariableTypes
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 21:52:53 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM ItemGroups
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM Bundles ORDER BY ID
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 SHOP: loading items...
03.11 21:52:53 ->>-: core/shop.getList { _type => core/shop.getList }
03.11 21:52:53 -<<-: core/shop.getList ok
03.11 21:52:53 SHOP: 0 items loaded (0 sec)
03.11 21:52:53 DB: SELECT * FROM EffectAttributeTypes
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM Effects
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 21:52:53 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 21:52:53 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:53 DB: SELECT * FROM Badges
03.11 21:52:53 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 21:52:53 -<<-: core/server.query ok
03.11 21:52:58 NET: Client (conid:6738357) connected to vdl.0 (clients:1)
03.11 21:53:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:53:01 TRACE: User not logon yet.
03.11 21:53:12 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:53:12 TRACE: User not logon yet.
03.11 21:53:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:53:24 TRACE: User not logon yet.
03.11 21:53:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:53:35 TRACE: User not logon yet.
03.11 21:53:46 NET: Client (conid:41026020) connected to vdl.0 (clients:2)
03.11 21:53:47 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 21:53:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 21:53:47 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 21:53:47 -<<-: core/server.query ok
03.11 21:53:47 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 21:53:47 -<<-: core/user.isOnlineID ok
03.11 21:53:47 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 21:53:47 -<<-: core/cache.get ok
03.11 21:53:47 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 21:53:47 -<<-: core/cache.get ok
03.11 21:53:47 NET: Client login (conid:41026020, id:114, name:uid114)
03.11 21:53:47 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 21:53:47 -<<-: core/user.loginPost null
03.11 21:53:47 == NET: null ret: user.join { name => uid114, type => user.join }
03.11 21:53:47 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 21:53:47 == NET: uid114 ret: user.join { name => null, type => user.join }
03.11 21:53:47 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 21:53:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:53:47 TRACE: User not logon yet.
03.11 21:53:50 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:53:50 TIME: user.ping 0.14 ms
03.11 21:53:50 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:53:52 NET: Client (conid:71120735) connected to vdl.0 (clients:3)
03.11 21:53:53 TIMER: Check auto-disconnect...
03.11 21:53:53 STATS: vdl.0 cache, locks:2
03.11 21:53:53 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 21:53:53 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:53:53 STATS: vdl.0 cache connection, 26 calls, total 0.0574064254760742 sec spent, avg 2.21 ms
03.11 21:53:53 NET: Client (name:null conid:6738357 TCP) disconnected from vdl.0 (clients:2)
03.11 21:53:58 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:53:58 TIME: user.ping 0.16 ms
03.11 21:53:58 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:54:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 21:54:00 TRACE: User not logon yet.
03.11 21:54:05 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:54:05 TIME: user.ping 0.16 ms
03.11 21:54:05 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:54:11 NET: Client (name:null conid:71120735 TCP) disconnected from vdl.0 (clients:1)
03.11 21:54:27 NET: Client (name:uid114 conid:41026020 TCP) disconnected from vdl.0 (clients:0)
03.11 21:54:27 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 21:54:27 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 21:54:27 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 21:54:27 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 21:54:27 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 21:54:27 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 21:54:27 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 21:54:27 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 21:54:27 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 21:54:27 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 21:54:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:54:27 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 21:54:27 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 21:54:31 NET: Client (conid:19497651) connected to vdl.0 (clients:1)
03.11 21:54:32 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 21:54:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 21:54:32 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 21:54:32 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 21:54:32 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 21:54:32 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 21:54:32 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 21:54:32 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 114 } }
03.11 21:54:32 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 21:54:32 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 114 } }
03.11 21:54:32 NET: Client login (conid:19497651, id:114, name:uid114)
03.11 21:54:32 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 21:54:32 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 21:54:32 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 21:54:32 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 21:54:35 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:54:35 TIME: user.ping 0.28 ms
03.11 21:54:35 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:54:36 NET: Client (conid:68681875) connected to vdl.0 (clients:2)
03.11 21:54:38 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 21:54:38 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 21:54:40 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
03.11 21:54:40 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 21:54:40 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 21:54:40 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 21:54:40 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 21:54:40 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 21:54:40 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 21:54:40 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language =>   , networkid => , params => {}}, version => 0, id => 116 } }
03.11 21:54:40 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 21:54:40 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 21:54:40 NET: Client login (conid:68681875, id:116, name:uid116)
03.11 21:54:40 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 21:54:40 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 21:54:40 DB: SELECT ID FROM TempUserLogins WHERE UserID = 116 AND Date = 'today'::timestamp
03.11 21:54:40 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 116 AND Date = 'today'::timestamp, _type => core/server.query }
03.11 21:54:40 -<<-: core/server.query { list => {{ id => 111 }}, errorCode => ok, _type => core/server.query }
03.11 21:54:40 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
03.11 21:54:40 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 21:54:40 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 21:54:40 == NET: uid116 ret: user.join { name => uid116, type => user.join }
03.11 21:54:43 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:54:43 TIME: user.ping 0.18 ms
03.11 21:54:43 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:54:46 NET: Client (name:uid114 conid:19497651 TCP) disconnected from vdl.0 (clients:1)
03.11 21:54:46 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 21:54:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 21:54:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 21:54:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 21:54:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 21:54:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 21:54:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 21:54:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 21:54:46 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 21:54:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 21:54:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 21:54:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 21:54:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 21:54:48 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 21:54:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:54:53 TIMER: Check auto-disconnect...
03.11 21:54:53 STATS: vdl.0 cache, locks:2
03.11 21:54:53 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:54:53 TIME: user.ping 0.18 ms
03.11 21:54:53 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:54:54 NET: Client (conid:57168920) connected to vdl.0 (clients:2)
03.11 21:54:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 21:54:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 21:54:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 21:54:55 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 21:54:55 STATS: vdl.0 cache connection, 50 calls, total 0.0833630561828613 sec spent, avg 1.67 ms
03.11 21:54:55 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 21:54:55 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 21:54:55 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 21:54:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 4, id => 114 } }
03.11 21:54:55 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 21:54:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 114 } }
03.11 21:54:55 NET: Client login (conid:57168920, id:114, name:uid114)
03.11 21:54:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 21:54:55 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 21:54:55 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 21:54:55 == NET: uid116 ret: user.join { name => uid114, type => user.join }
03.11 21:54:55 == NET: uid114 ret: user.join { name => uid116, type => user.join }
03.11 21:54:55 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 21:54:59 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:54:59 TIME: user.ping 0.17 ms
03.11 21:54:59 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:55:03 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 21:55:03 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
03.11 21:55:13 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:55:13 TIME: user.ping 0.23 ms
03.11 21:55:13 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:55:21 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:55:21 TIME: user.ping 0.21 ms
03.11 21:55:21 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:55:30 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:55:30 TIME: user.ping 0.13 ms
03.11 21:55:30 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:55:33 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:55:33 TIME: user.ping 0.15 ms
03.11 21:55:33 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:55:37 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:55:37 TIME: user.ping 0.15 ms
03.11 21:55:37 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:55:45 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:55:45 TIME: user.ping 0.12 ms
03.11 21:55:45 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:55:52 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:55:52 TIME: user.ping 0.23 ms
03.11 21:55:52 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:55:53 TIMER: Check auto-disconnect...
03.11 21:55:53 STATS: vdl.0 cache, locks:4
03.11 21:55:54 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:55:54 TIME: user.ping 0.18 ms
03.11 21:55:54 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:00 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:00 TIME: user.ping 0.14 ms
03.11 21:56:00 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:05 NET: Client (conid:27153226) connected to vdl.0 (clients:3)
03.11 21:56:06 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 21:56:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 21:56:06 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 21:56:06 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 21:56:06 STATS: vdl.0 cache connection, 56 calls, total 0.0919098854064941 sec spent, avg 1.64 ms
03.11 21:56:06 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 21:56:06 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 21:56:06 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 21:56:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 21:56:06 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 21:56:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 21:56:06 NET: Client login (conid:27153226, id:107, name:uid107)
03.11 21:56:06 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 21:56:06 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 21:56:06 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 21:56:06 == NET: uid116 ret: user.join { name => uid107, type => user.join }
03.11 21:56:06 == NET: uid107 ret: user.join { name => uid116, type => user.join }
03.11 21:56:06 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 21:56:06 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 21:56:06 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 21:56:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:08 TIME: user.ping 0.18 ms
03.11 21:56:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:10 TIME: user.ping 0.17 ms
03.11 21:56:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:13 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 21:56:13 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 21:56:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:14 TIME: user.ping 0.16 ms
03.11 21:56:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:15 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:15 TIME: user.ping 0.13 ms
03.11 21:56:15 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:18 TIME: user.ping 0.16 ms
03.11 21:56:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:23 TIME: user.ping 0.12 ms
03.11 21:56:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:25 TIME: user.ping 0.14 ms
03.11 21:56:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:30 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:30 TIME: user.ping 0.16 ms
03.11 21:56:30 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:33 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:33 TIME: user.ping 0.14 ms
03.11 21:56:33 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:35 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:35 TIME: user.ping 0.17 ms
03.11 21:56:35 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:38 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:38 TIME: user.ping 0.17 ms
03.11 21:56:38 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:39 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 21:56:39 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 21:56:39 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 21:56:39 TIME: battle.find 0.38 ms
03.11 21:56:39 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
03.11 21:56:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:41 TIME: user.ping 0.17 ms
03.11 21:56:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:46 TIME: user.ping 0.15 ms
03.11 21:56:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:47 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 21:56:47 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 21:56:47 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 11, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 21:56:47 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 11, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 21:56:47 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 21:56:47 TIME: battle.find 52.08 ms
03.11 21:56:47 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 21:56:47 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 11, player => 1 }, type => battle.enemy }
03.11 21:56:47 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 11, player => 2 }, type => battle.enemy }
03.11 21:56:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:50 TIME: user.ping 0.14 ms
03.11 21:56:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:53 TIMER: Check auto-disconnect...
03.11 21:56:53 STATS: vdl.0 cache, locks:6
03.11 21:56:53 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:56:53 TIME: user.ping 0.19 ms
03.11 21:56:53 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:56:59 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 11 }
03.11 21:56:59 ->>-: vdl/cache.battle.infoRoom { roomId => 11, _type => vdl/cache.battle.infoRoom }
03.11 21:56:59 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 21:56:59 TIME: battle.sendtask 0.72 ms
03.11 21:56:59 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [1,1,3,5,4,1], errorCode => ok }
03.11 21:56:59 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 21:56:59 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [1,1,3,5,4,1], errorCode => ok }
03.11 21:57:00 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:00 TIME: user.ping 0.18 ms
03.11 21:57:00 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:01 TIME: user.ping 0.14 ms
03.11 21:57:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:02 TIME: user.ping 0.13 ms
03.11 21:57:08 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:08 TIME: user.ping 0.19 ms
03.11 21:57:08 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:13 TIME: user.ping 0.15 ms
03.11 21:57:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:16 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:16 TIME: user.ping 0.16 ms
03.11 21:57:16 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:23 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:23 TIME: user.ping 0.22 ms
03.11 21:57:23 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:25 TIME: user.ping 0.16 ms
03.11 21:57:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:25 TIME: user.ping 0.15 ms
03.11 21:57:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:31 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:31 TIME: user.ping 0.19 ms
03.11 21:57:31 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:39 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:39 TIME: user.ping 0.17 ms
03.11 21:57:39 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:46 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:46 TIME: user.ping 0.16 ms
03.11 21:57:46 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:50 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:50 TIME: user.ping 0.12 ms
03.11 21:57:50 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:53 TIMER: Check auto-disconnect...
03.11 21:57:53 STATS: vdl.0 cache, locks:6
03.11 21:57:54 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:54 TIME: user.ping 0.22 ms
03.11 21:57:54 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:57:58 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:57:58 TIME: user.ping 0.18 ms
03.11 21:57:58 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:01 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:01 TIME: user.ping 0.15 ms
03.11 21:58:01 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:09 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:09 TIME: user.ping 0.19 ms
03.11 21:58:09 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:09 TIME: user.ping 0.18 ms
03.11 21:58:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:14 TIME: user.ping 0.19 ms
03.11 21:58:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:17 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:17 TIME: user.ping 0.13 ms
03.11 21:58:17 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:21 TIME: user.ping 0.18 ms
03.11 21:58:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:24 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:24 TIME: user.ping 0.14 ms
03.11 21:58:24 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:32 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:32 TIME: user.ping 0.16 ms
03.11 21:58:32 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:32 TIME: user.ping 0.14 ms
03.11 21:58:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:39 TIME: user.ping 0.16 ms
03.11 21:58:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:40 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:40 TIME: user.ping 0.17 ms
03.11 21:58:40 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:44 TIME: user.ping 0.15 ms
03.11 21:58:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:47 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:47 TIME: user.ping 0.12 ms
03.11 21:58:47 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:53 TIMER: Check auto-disconnect...
03.11 21:58:53 STATS: vdl.0 cache, locks:6
03.11 21:58:55 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:55 TIME: user.ping 0.15 ms
03.11 21:58:55 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:58:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:58:55 TIME: user.ping 0.18 ms
03.11 21:58:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:02 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:02 TIME: user.ping 0.14 ms
03.11 21:59:02 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:04 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:04 TIME: user.ping 0.18 ms
03.11 21:59:04 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:07 TIME: user.ping 0.15 ms
03.11 21:59:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:10 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:10 TIME: user.ping 0.22 ms
03.11 21:59:10 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:17 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 11 }
03.11 21:59:17 ->>-: vdl/cache.battle.infoRoom { roomId => 11, _type => vdl/cache.battle.infoRoom }
03.11 21:59:17 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 21:59:17 STATS: vdl.0 cache connection, 65 calls, total 0.151648044586182 sec spent, avg 2.33 ms
03.11 21:59:17 TIME: battle.sendtask 2.55 ms
03.11 21:59:17 == NET: uid107 ret: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [0,0], battleId => 11 }
03.11 21:59:18 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:18 TIME: user.ping 0.13 ms
03.11 21:59:18 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:21 TIME: user.ping 0.16 ms
03.11 21:59:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:26 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:26 TIME: user.ping 0.15 ms
03.11 21:59:26 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:29 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:29 TIME: user.ping 0.14 ms
03.11 21:59:29 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:32 TIME: user.ping 0.15 ms
03.11 21:59:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:33 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:33 TIME: user.ping 0.16 ms
03.11 21:59:33 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:41 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:41 TIME: user.ping 0.19 ms
03.11 21:59:41 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:44 TIME: user.ping 0.16 ms
03.11 21:59:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:49 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:49 TIME: user.ping 0.13 ms
03.11 21:59:49 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:53 TIMER: Check auto-disconnect...
03.11 21:59:53 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:53 TIME: user.ping 0.18 ms
03.11 21:59:53 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:53 STATS: vdl.0 cache, locks:6
03.11 21:59:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:55 TIME: user.ping 0.2 ms
03.11 21:59:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:56 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 21:59:56 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 21:59:56 TIME: user.ping 0.2 ms
