21.10 13:27:19 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 13:27:19 -<<-: server.login ok
21.10 13:27:19 DB: SELECT * FROM LocalizationStrings
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 TIMER: Starting timer...
21.10 13:27:19 TIMER: Timer running...
21.10 13:27:19 DB: SELECT * FROM GameVars
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 13:27:19 -<<-: core/quest.getDaily ok
21.10 13:27:19 DB: SELECT * FROM UserAttributeTypes
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM UserVariableTypes
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 13:27:19 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM ItemGroups
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM Bundles ORDER BY ID
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 SHOP: loading items...
21.10 13:27:19 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 13:27:19 -<<-: core/shop.getList ok
21.10 13:27:19 SHOP: 0 items loaded (0 sec)
21.10 13:27:19 DB: SELECT * FROM EffectAttributeTypes
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM Effects
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 13:27:19 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 13:27:19 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 DB: SELECT * FROM Badges
21.10 13:27:19 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 13:27:19 -<<-: core/server.query ok
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:27:19 TIMER: Check auto-disconnect...
21.10 13:27:19 STATS: vdl.0 cache, locks:0
21.10 13:44:46 NET: Client (conid:20934407) connected to vdl.0 (clients:1)
21.10 13:44:47 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
21.10 13:44:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
21.10 13:44:47 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
21.10 13:44:47 -<<-: core/server.query ok
21.10 13:44:47 STATS: vdl.0 cache connection, 21 calls, total 0.269560098648071 sec spent, avg 12.84 ms
21.10 13:44:47 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
21.10 13:44:47 -<<-: core/user.isOnlineID ok
21.10 13:44:47 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
21.10 13:44:47 -<<-: core/cache.get ok
21.10 13:44:47 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
21.10 13:44:47 -<<-: core/cache.get ok
21.10 13:44:47 NET: Client login (conid:20934407, id:76, name:Aimer)
21.10 13:44:47 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 13:44:47 -<<-: core/user.loginPost null
21.10 13:44:47 DB: SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp
21.10 13:44:47 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp, _type => core/server.query }
21.10 13:44:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.10 13:44:47 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp)
21.10 13:44:47 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
21.10 13:44:47 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
21.10 13:44:47 == NET: Aimer ret: tournament.enemy { data => { name => test, tournamentId => 1, enemy.id => 1, enemy.name => test1, round => 1, enemy.num => 2, battleId => 1, player => 1 }, type => tournament.enemy }
21.10 13:44:47 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp), _type => core/server.pending }} }
21.10 13:44:47 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
21.10 13:44:48 ++ NET: Aimer req: user.data { messageType => user.data }
21.10 13:44:48 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
21.10 13:44:48 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 13:44:48 TIME: user.data 0.39 ms
21.10 13:44:48 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 13:44:54 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477046687, lastLoginDate => 295, lastLoadDate => 1022 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
21.10 13:44:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 13:45:19 TIMER: Check auto-disconnect...
21.10 13:45:19 STATS: vdl.0 cache, locks:2
21.10 13:45:30 NET: Client (name:Aimer conid:20934407 TCP) disconnected from vdl.0 (clients:0)
21.10 13:45:30 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
21.10 13:45:30 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
21.10 13:45:30 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.10 13:45:30 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 13:45:30 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
21.10 13:45:30 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 13:45:30 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
21.10 13:45:30 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
21.10 13:45:30 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
21.10 13:45:30 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
21.10 13:45:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 13:45:30 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
21.10 13:45:30 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
21.10 13:46:14 NET: Client (conid:78383190) connected to vdl.0 (clients:1)
21.10 13:46:15 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
21.10 13:46:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
21.10 13:46:15 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
21.10 13:46:15 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
21.10 13:46:15 STATS: vdl.0 cache connection, 35 calls, total 0.425948858261108 sec spent, avg 12.17 ms
21.10 13:46:15 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
21.10 13:46:15 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
21.10 13:46:15 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
21.10 13:46:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477046687, lastLoginDate => 295, lastLoadDate => 1022 }, effects => { list => [] } }}, version => 0, id => 76 } }
21.10 13:46:15 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
21.10 13:46:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
21.10 13:46:15 NET: Client login (conid:78383190, id:76, name:Aimer)
21.10 13:46:15 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 13:46:15 -<<-: core/user.loginPost { _type => core/user.loginPost }
21.10 13:46:15 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
21.10 13:46:15 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
21.10 13:46:15 == NET: Aimer ret: tournament.enemy { data => { name => test, tournamentId => 1, enemy.id => 1, enemy.name => test1, round => 1, enemy.num => 2, battleId => 1, player => 1 }, type => tournament.enemy }
21.10 13:46:16 ++ NET: Aimer req: user.data { messageType => user.data }
21.10 13:46:16 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
21.10 13:46:16 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 13:46:16 TIME: user.data 0.54 ms
21.10 13:46:16 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 13:46:19 TIMER: Check auto-disconnect...
21.10 13:46:19 STATS: vdl.0 cache, locks:2
21.10 13:46:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
21.10 13:46:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 13:46:30 ++ NET: Aimer req: battle.end { roomId => 0, scoreSecondPlayer => 0, messageType => battle.end, scoreFirstPlayer => 0 }
21.10 13:46:30 NET: Client (name:Aimer conid:78383190 TCP) disconnected from vdl.0 (clients:0)
21.10 13:46:30 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 13:46:30 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
21.10 13:46:30 TRACE: battle.end : cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 13:46:30 TRACE: battle.end : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 53
Called from modules/VDLBattleModule.hx line 35
Called from snipe/slave/Server.hx line 1176
21.10 13:46:30 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
21.10 13:46:30 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
21.10 13:46:30 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.10 13:46:30 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 13:46:30 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
21.10 13:46:30 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 13:46:30 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
21.10 13:46:30 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
21.10 13:46:30 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
21.10 13:46:30 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
21.10 13:46:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 13:46:30 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
21.10 13:46:30 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
21.10 13:47:19 TIMER: Check auto-disconnect...
21.10 13:47:19 STATS: vdl.0 cache, locks:0
