04.11 07:08:54 NET: Client (conid:25387192) connected to vdl.0 (clients:1)
04.11 07:08:58 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 07:08:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:08:58 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:08:58 -<<-: core/server.query ok
04.11 07:08:58 STATS: vdl.0 cache connection, 21 calls, total 0.0741000175476074 sec spent, avg 3.53 ms
04.11 07:08:58 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:08:58 -<<-: core/user.isOnlineID ok
04.11 07:08:58 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:08:58 -<<-: core/cache.get ok
04.11 07:08:58 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:08:58 -<<-: core/cache.get ok
04.11 07:08:58 NET: Client login (conid:25387192, id:116, name:uid116)
04.11 07:08:58 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:08:58 -<<-: core/user.loginPost null
04.11 07:08:58 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 07:08:58 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 07:09:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:09:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:09:11 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:09:11 TIME: user.ping 0.19 ms
04.11 07:09:11 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:09:24 TIMER: Check auto-disconnect...
04.11 07:09:24 NET: Client (conid:58603753) connected to vdl.0 (clients:2)
04.11 07:09:24 STATS: vdl.0 cache, locks:2
04.11 07:09:26 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 07:09:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:09:26 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:09:26 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:09:26 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:09:26 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:09:26 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:09:26 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:09:26 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:09:26 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:09:26 NET: Client login (conid:58603753, id:107, name:uid107)
04.11 07:09:26 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:09:26 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:09:26 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 07:09:26 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 07:09:26 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 07:09:26 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 07:09:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:09:29 TIME: user.ping 0.14 ms
04.11 07:09:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:09:31 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:09:31 TIME: user.ping 0.16 ms
04.11 07:09:31 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:09:34 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:09:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:09:38 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:09:38 TIME: user.ping 0.15 ms
04.11 07:09:38 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:09:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:09:50 TIME: user.ping 0.18 ms
04.11 07:09:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:09:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:09:56 TIME: user.ping 0.17 ms
04.11 07:09:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:09:57 NET: Client (name:uid107 conid:58603753 TCP) disconnected from vdl.0 (clients:1)
04.11 07:09:57 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:09:57 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:09:57 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }}, errorCode => ok, _type => core/server.query }
04.11 07:09:57 ->>-: vdl/cache.battle.infoRoom { roomId => 23, _type => vdl/cache.battle.infoRoom }
04.11 07:09:57 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 07:09:57 ->>-: vdl/cache.battle.deleteRoom { roomId => 23, _type => vdl/cache.battle.deleteRoom }
04.11 07:09:57 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:09:57 ->>-: vdl/cache.battle.finishRoom { roomId => 23, _type => vdl/cache.battle.finishRoom }
04.11 07:09:57 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:09:57 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:09:57 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:09:57 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:09:57 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:09:57 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:09:57 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:09:57 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 07:10:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:10:16 TIME: user.ping 0.13 ms
04.11 07:10:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:10:24 TIMER: Check auto-disconnect...
04.11 07:10:24 STATS: vdl.0 cache, locks:2
04.11 07:10:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:10:36 TIME: user.ping 0.2 ms
04.11 07:10:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:10:56 NET: Client (conid:44106322) connected to vdl.0 (clients:2)
04.11 07:10:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:10:57 TIME: user.ping 0.19 ms
04.11 07:10:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:10:58 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 07:10:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:10:58 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:10:58 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:10:58 STATS: vdl.0 cache connection, 40 calls, total 0.124593734741211 sec spent, avg 3.11 ms
04.11 07:10:58 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:10:58 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:10:58 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:10:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:10:58 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:10:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:10:58 NET: Client login (conid:44106322, id:107, name:uid107)
04.11 07:10:58 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:10:58 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:10:58 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 07:10:58 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 07:10:58 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 07:10:58 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 07:11:01 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:11:01 TIME: user.ping 0.18 ms
04.11 07:11:01 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:11:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:11:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:11:08 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:11:08 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:11:08 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:11:08 TIME: battle.find 0.56 ms
04.11 07:11:08 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:11:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:11:11 TIME: user.ping 0.12 ms
04.11 07:11:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:11:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:11:17 TIME: user.ping 0.16 ms
04.11 07:11:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:11:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:11:23 TIME: user.ping 0.19 ms
04.11 07:11:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:11:24 TIMER: Check auto-disconnect...
04.11 07:11:24 STATS: vdl.0 cache, locks:4
04.11 07:11:31 ++ NET: uid107 req: battle.message { messageType => battle.message, message => dfsdfsdf, battleId => 0 }
04.11 07:11:31 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 07:11:31 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
04.11 07:11:31 TRACE: battle.message : cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 07:11:31 TRACE: battle.message : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 146
Called from modules/VDLBattleModule.hx line 46
Called from snipe/slave/Server.hx line 1176
04.11 07:11:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:11:35 TIME: user.ping 0.17 ms
04.11 07:11:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:11:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:11:37 TIME: user.ping 0.14 ms
04.11 07:11:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:11:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:11:48 TIME: user.ping 0.18 ms
04.11 07:11:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:11:51 NET: Client (name:uid107 conid:44106322 TCP) disconnected from vdl.0 (clients:1)
04.11 07:11:51 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:11:51 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:11:51 -<<-: core/server.query { list => {{ id => 25 }}, errorCode => ok, _type => core/server.query }
04.11 07:11:51 ->>-: vdl/cache.battle.infoRoom { roomId => 25, _type => vdl/cache.battle.infoRoom }
04.11 07:11:51 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 07:11:51 ->>-: vdl/cache.battle.deleteRoom { roomId => 25, _type => vdl/cache.battle.deleteRoom }
04.11 07:11:51 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:11:51 ->>-: vdl/cache.battle.finishRoom { roomId => 25, _type => vdl/cache.battle.finishRoom }
04.11 07:11:51 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:11:51 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:11:51 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:11:51 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:11:51 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:11:51 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:11:51 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:11:51 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 07:11:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:11:57 TIME: user.ping 0.16 ms
04.11 07:11:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:12:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:12:17 TIME: user.ping 0.16 ms
04.11 07:12:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:12:24 TIMER: Check auto-disconnect...
04.11 07:12:24 STATS: vdl.0 cache, locks:2
04.11 07:12:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:12:37 TIME: user.ping 0.16 ms
04.11 07:12:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:12:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:12:57 TIME: user.ping 0.19 ms
04.11 07:12:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:13:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:13:17 TIME: user.ping 0.2 ms
04.11 07:13:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:13:24 TIMER: Check auto-disconnect...
04.11 07:13:24 STATS: vdl.0 cache, locks:2
04.11 07:13:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:13:37 TIME: user.ping 0.18 ms
04.11 07:13:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:13:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:13:57 TIME: user.ping 0.19 ms
04.11 07:13:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:14:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:14:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:14:17 TIME: user.ping 0.14 ms
04.11 07:14:24 TIMER: Check auto-disconnect...
04.11 07:14:24 STATS: vdl.0 cache, locks:2
04.11 07:14:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:14:37 TIME: user.ping 0.16 ms
04.11 07:14:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:14:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:14:57 TIME: user.ping 0.19 ms
04.11 07:14:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:15:17 NET: Client (name:uid116 conid:25387192 TCP) disconnected from vdl.0 (clients:0)
04.11 07:15:17 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 07:15:17 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 07:15:17 -<<-: core/server.query { list => {{ id => 24 }, { id => 17 }, { id => 10 }, { id => 13 }}, errorCode => ok, _type => core/server.query }
04.11 07:15:17 STATS: vdl.0 cache connection, 55 calls, total 0.165645837783813 sec spent, avg 3.01 ms
04.11 07:15:17 ->>-: vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
04.11 07:15:17 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:15:17 ->>-: vdl/cache.battle.deleteRoom { roomId => 13, _type => vdl/cache.battle.deleteRoom }
04.11 07:15:17 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:15:17 ->>-: vdl/cache.battle.finishRoom { roomId => 13, _type => vdl/cache.battle.finishRoom }
04.11 07:15:17 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:15:17 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 07:15:17 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 07:15:17 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 07:15:17 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:15:17 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 07:15:17 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:15:17 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 07:15:17 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:15:24 TIMER: Check auto-disconnect...
04.11 07:15:24 STATS: vdl.0 cache, locks:0
04.11 07:15:36 NET: Client (conid:97040318) connected to vdl.0 (clients:1)
04.11 07:15:37 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 07:15:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:15:37 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:15:37 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:15:37 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:15:37 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:15:37 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:15:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:15:37 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:15:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:15:37 NET: Client login (conid:97040318, id:107, name:uid107)
04.11 07:15:37 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:15:37 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:15:37 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 07:15:37 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 07:15:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:15:41 TIME: user.ping 0.14 ms
04.11 07:15:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:15:43 NET: Client (conid:81531550) connected to vdl.0 (clients:2)
04.11 07:15:44 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:15:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:15:47 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 07:15:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:15:47 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:15:47 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 07:15:47 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:15:47 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:15:47 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:15:47 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 07:15:47 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:15:47 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 07:15:47 NET: Client login (conid:81531550, id:116, name:uid116)
04.11 07:15:47 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:15:47 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:15:47 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 07:15:47 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 07:15:47 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 07:15:47 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 07:15:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:15:49 TIME: user.ping 0.16 ms
04.11 07:15:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:15:54 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:15:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:15:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:15:57 TIME: user.ping 0.19 ms
04.11 07:15:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:15:59 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:15:59 TIME: user.ping 0.19 ms
04.11 07:15:59 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:16:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:16:05 TIME: user.ping 0.16 ms
04.11 07:16:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:16:10 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:16:10 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:16:10 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:16:10 TIME: battle.find 0.48 ms
04.11 07:16:10 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:16:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:16:15 TIME: user.ping 0.12 ms
04.11 07:16:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:16:17 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:16:17 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 07:16:17 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 52, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 07:16:17 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 52, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 07:16:17 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:16:17 STATS: vdl.0 cache connection, 76 calls, total 0.31212043762207 sec spent, avg 4.11 ms
04.11 07:16:17 TIME: battle.find 104.45 ms
04.11 07:16:17 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:16:17 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 52, player => 1 }, type => battle.enemy }
04.11 07:16:17 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 52, player => 2 }, type => battle.enemy }
04.11 07:16:22 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:16:22 TIME: user.ping 0.14 ms
04.11 07:16:22 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:16:24 TIMER: Check auto-disconnect...
04.11 07:16:24 STATS: vdl.0 cache, locks:4
04.11 07:16:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:16:27 TIME: user.ping 0.19 ms
04.11 07:16:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:16:37 NET: Client (name:uid107 conid:97040318 TCP) disconnected from vdl.0 (clients:1)
04.11 07:16:37 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:16:37 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:16:37 -<<-: core/server.query { list => {{ id => 52 }}, errorCode => ok, _type => core/server.query }
04.11 07:16:37 ->>-: vdl/cache.battle.infoRoom { roomId => 52, _type => vdl/cache.battle.infoRoom }
04.11 07:16:37 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:16:37 ->>-: vdl/cache.battle.deleteRoom { roomId => 52, _type => vdl/cache.battle.deleteRoom }
04.11 07:16:37 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:16:37 ->>-: vdl/cache.battle.finishRoom { roomId => 52, _type => vdl/cache.battle.finishRoom }
04.11 07:16:37 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:16:37 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:16:37 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:16:37 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:16:37 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:16:37 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:16:37 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:16:37 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 07:16:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:16:56 TIME: user.ping 0.15 ms
04.11 07:16:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:17:24 TIMER: Check auto-disconnect...
04.11 07:17:24 STATS: vdl.0 cache, locks:2
04.11 07:17:38 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:17:38 TIME: user.ping 0.18 ms
04.11 07:17:38 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:18:20 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:18:20 TIME: user.ping 0.2 ms
04.11 07:18:20 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:18:24 TIMER: Check auto-disconnect...
04.11 07:18:24 STATS: vdl.0 cache, locks:2
04.11 07:19:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:19:03 TIME: user.ping 0.18 ms
04.11 07:19:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:19:14 NET: Client (name:uid116 conid:81531550 TCP) disconnected from vdl.0 (clients:0)
04.11 07:19:14 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 07:19:14 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 07:19:14 -<<-: core/server.query { list => {{ id => 24 }, { id => 17 }, { id => 10 }}, errorCode => ok, _type => core/server.query }
04.11 07:19:14 STATS: vdl.0 cache connection, 84 calls, total 0.328470706939697 sec spent, avg 3.91 ms
04.11 07:19:14 ->>-: vdl/cache.battle.infoRoom { roomId => 10, _type => vdl/cache.battle.infoRoom }
04.11 07:19:14 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:19:14 ->>-: vdl/cache.battle.deleteRoom { roomId => 10, _type => vdl/cache.battle.deleteRoom }
04.11 07:19:14 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:19:14 ->>-: vdl/cache.battle.finishRoom { roomId => 10, _type => vdl/cache.battle.finishRoom }
04.11 07:19:14 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:19:14 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 07:19:14 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 07:19:14 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 07:19:14 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:19:14 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 07:19:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:19:14 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 07:19:14 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:19:24 TIMER: Check auto-disconnect...
04.11 07:19:24 STATS: vdl.0 cache, locks:0
04.11 07:19:34 NET: Client (conid:72728085) connected to vdl.0 (clients:1)
04.11 07:19:35 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 07:19:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:19:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:19:35 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:19:35 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:19:35 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:19:35 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:19:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:19:35 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:19:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:19:35 NET: Client login (conid:72728085, id:107, name:uid107)
04.11 07:19:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:19:35 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:19:35 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 07:19:35 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 07:19:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:19:39 TIME: user.ping 0.17 ms
04.11 07:19:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:19:41 NET: Client (conid:2743879) connected to vdl.0 (clients:2)
04.11 07:19:44 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:19:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:19:44 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 07:19:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:19:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:19:44 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 07:19:44 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:19:44 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:19:44 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:19:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 07:19:44 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:19:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 07:19:44 NET: Client login (conid:2743879, id:116, name:uid116)
04.11 07:19:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:19:44 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:19:44 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 07:19:44 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 07:19:44 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 07:19:44 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 07:19:47 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:19:47 TIME: user.ping 0.15 ms
04.11 07:19:47 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:19:54 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:19:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:19:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:19:55 TIME: user.ping 0.19 ms
04.11 07:19:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:19:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:19:57 TIME: user.ping 0.22 ms
04.11 07:19:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:20:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:20:03 TIME: user.ping 0.16 ms
04.11 07:20:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:20:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:20:17 TIME: user.ping 0.2 ms
04.11 07:20:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:20:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:20:23 TIME: user.ping 0.18 ms
04.11 07:20:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:20:24 TIMER: Check auto-disconnect...
04.11 07:20:24 STATS: vdl.0 cache, locks:4
04.11 07:20:31 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:20:31 TIME: user.ping 0.14 ms
04.11 07:20:31 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:20:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:20:37 TIME: user.ping 0.18 ms
04.11 07:20:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:20:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:20:41 TIME: user.ping 0.15 ms
04.11 07:20:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:20:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:20:49 TIME: user.ping 0.16 ms
04.11 07:20:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:20:51 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:20:51 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:20:51 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:20:51 STATS: vdl.0 cache connection, 104 calls, total 0.364200353622437 sec spent, avg 3.5 ms
04.11 07:20:51 TIME: battle.find 0.65 ms
04.11 07:20:51 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:20:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:20:57 TIME: user.ping 0.15 ms
04.11 07:20:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:21:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:21:00 TIME: user.ping 0.19 ms
04.11 07:21:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:21:01 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:21:01 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 07:21:01 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 53, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 07:21:01 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 53, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 07:21:01 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:21:01 TIME: battle.find 22.37 ms
04.11 07:21:01 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:21:01 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 53, player => 1 }, type => battle.enemy }
04.11 07:21:01 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 53, player => 2 }, type => battle.enemy }
04.11 07:21:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:21:13 TIME: user.ping 0.15 ms
04.11 07:21:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:21:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:21:24 TIME: user.ping 0.19 ms
04.11 07:21:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:21:24 TIMER: Check auto-disconnect...
04.11 07:21:24 STATS: vdl.0 cache, locks:4
04.11 07:21:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:21:25 TIME: user.ping 0.19 ms
04.11 07:21:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:21:28 ++ NET: uid116 req: battle.message { messageType => battle.message, message => mdjdee, battleId => 53 }
04.11 07:21:28 ->>-: vdl/cache.battle.infoRoom { roomId => 53, _type => vdl/cache.battle.infoRoom }
04.11 07:21:28 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:21:28 ->>-: core/user.sendTo { id => null, _type => core/user.sendTo, msg => { _type => battle.message, message => mdjdee, player => 2 } }
04.11 07:21:28 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 07:21:28 TIME: battle.message 1.97 ms
04.11 07:21:28 == NET: uid116 ret: battle.message { type => battle.message, errorCode => ok }
04.11 07:21:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:21:35 TIME: user.ping 0.19 ms
04.11 07:21:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:21:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:21:49 TIME: user.ping 0.13 ms
04.11 07:21:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:21:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:21:56 TIME: user.ping 0.17 ms
04.11 07:21:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:22:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:22:02 TIME: user.ping 0.18 ms
04.11 07:22:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:22:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:22:16 TIME: user.ping 0.19 ms
04.11 07:22:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:22:24 TIMER: Check auto-disconnect...
04.11 07:22:24 STATS: vdl.0 cache, locks:4
04.11 07:22:26 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:22:26 TIME: user.ping 0.15 ms
04.11 07:22:26 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:22:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:22:29 TIME: user.ping 0.17 ms
04.11 07:22:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:22:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:22:42 TIME: user.ping 0.17 ms
04.11 07:22:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:22:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:22:56 TIME: user.ping 0.15 ms
04.11 07:22:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:22:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:22:57 TIME: user.ping 0.18 ms
04.11 07:22:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:23:08 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 53 }
04.11 07:23:08 ->>-: vdl/cache.battle.infoRoom { roomId => 53, _type => vdl/cache.battle.infoRoom }
04.11 07:23:08 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:23:08 STATS: vdl.0 cache connection, 108 calls, total 0.389770269393921 sec spent, avg 3.61 ms
04.11 07:23:08 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 53, _type => vdl/cache.battle.makeTurn }
04.11 07:23:08 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 07:23:08 TIME: battle.sendtask 2.32 ms
04.11 07:23:08 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 07:23:08 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 53 }
04.11 07:23:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:23:09 TIME: user.ping 0.13 ms
04.11 07:23:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:23:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:23:23 TIME: user.ping 0.15 ms
04.11 07:23:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:23:24 TIMER: Check auto-disconnect...
04.11 07:23:24 STATS: vdl.0 cache, locks:4
04.11 07:23:27 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:23:27 TIME: user.ping 0.15 ms
04.11 07:23:27 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:23:45 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 07:23:45 -<<-: server.login ok
04.11 07:23:45 DB: SELECT * FROM LocalizationStrings
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 TIMER: Starting timer...
04.11 07:23:45 TIMER: Timer running...
04.11 07:23:45 DB: SELECT * FROM GameVars
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 07:23:45 -<<-: core/quest.getDaily ok
04.11 07:23:45 DB: SELECT * FROM UserAttributeTypes
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM UserVariableTypes
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 07:23:45 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM ItemGroups
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM Bundles ORDER BY ID
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 SHOP: loading items...
04.11 07:23:45 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 07:23:45 -<<-: core/shop.getList ok
04.11 07:23:45 SHOP: 0 items loaded (0 sec)
04.11 07:23:45 DB: SELECT * FROM EffectAttributeTypes
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM Effects
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 07:23:45 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 07:23:45 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 DB: SELECT * FROM Badges
04.11 07:23:45 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 07:23:45 -<<-: core/server.query ok
04.11 07:23:45 TIMER: Check auto-disconnect...
04.11 07:24:46 STATS: vdl.0 cache, locks:0
04.11 07:24:58 NET: Client (conid:13568416) connected to vdl.0 (clients:1)
04.11 07:25:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:25:06 TRACE: User not logon yet.
04.11 07:25:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:25:36 TRACE: User not logon yet.
04.11 07:25:45 TIMER: Check auto-disconnect...
04.11 07:25:46 STATS: vdl.0 cache, locks:0
04.11 07:26:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:26:06 TRACE: User not logon yet.
04.11 07:26:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:26:37 TRACE: User not logon yet.
04.11 07:26:45 TIMER: Check auto-disconnect...
04.11 07:26:46 STATS: vdl.0 cache, locks:0
04.11 07:27:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:27:07 TRACE: User not logon yet.
04.11 07:27:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:27:37 TRACE: User not logon yet.
04.11 07:27:45 TIMER: Check auto-disconnect...
04.11 07:27:46 STATS: vdl.0 cache, locks:0
04.11 07:28:08 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:28:08 TRACE: User not logon yet.
04.11 07:28:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:28:38 TRACE: User not logon yet.
04.11 07:28:45 TIMER: Check auto-disconnect...
04.11 07:28:46 STATS: vdl.0 cache, locks:0
04.11 07:29:00 NET: Client (name:null conid:13568416 TCP) disconnected from vdl.0 (clients:0)
04.11 07:29:26 NET: Client (conid:15709937) connected to vdl.0 (clients:1)
04.11 07:29:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 07:29:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:29:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:29:30 -<<-: core/server.query ok
04.11 07:29:30 STATS: vdl.0 cache connection, 21 calls, total 0.0682735443115234 sec spent, avg 3.25 ms
04.11 07:29:30 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:29:30 -<<-: core/user.isOnlineID ok
04.11 07:29:30 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:29:30 -<<-: core/cache.get ok
04.11 07:29:30 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:29:30 -<<-: core/cache.get ok
04.11 07:29:30 NET: Client login (conid:15709937, id:116, name:uid116)
04.11 07:29:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:29:30 -<<-: core/user.loginPost null
04.11 07:29:30 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 07:29:30 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 07:29:36 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:29:36 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:29:43 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:29:43 TIME: user.ping 0.22 ms
04.11 07:29:43 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:29:45 NET: Client (conid:64412490) connected to vdl.0 (clients:2)
04.11 07:29:45 TIMER: Check auto-disconnect...
04.11 07:29:46 STATS: vdl.0 cache, locks:2
04.11 07:29:46 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 07:29:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:29:46 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:29:46 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:29:46 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:29:46 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:29:46 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:29:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:29:46 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:29:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:29:46 NET: Client login (conid:64412490, id:107, name:uid107)
04.11 07:29:46 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:29:46 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:29:46 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 07:29:46 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 07:29:46 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 07:29:46 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 07:29:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:29:49 TIME: user.ping 0.25 ms
04.11 07:29:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:29:54 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:29:54 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:29:54 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:29:54 TIME: battle.find 0.44 ms
04.11 07:29:54 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:29:56 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:29:56 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:29:56 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:29:56 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 07:29:56 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 54, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 07:29:56 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 54, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 07:29:56 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:29:56 TIME: battle.find 50.22 ms
04.11 07:29:56 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:29:56 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 54, player => 1 }, type => battle.enemy }
04.11 07:29:56 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 54, player => 2 }, type => battle.enemy }
04.11 07:29:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:29:56 TIME: user.ping 0.16 ms
04.11 07:29:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:02 TIME: user.ping 0.18 ms
04.11 07:30:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:06 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:06 TIME: user.ping 0.17 ms
04.11 07:30:06 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:08 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:08 TIME: user.ping 0.15 ms
04.11 07:30:08 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:13 TIME: user.ping 0.18 ms
04.11 07:30:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:18 TIME: user.ping 0.15 ms
04.11 07:30:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:24 TIME: user.ping 0.17 ms
04.11 07:30:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:25 ++ NET: uid107 req: battle.message { messageType => battle.message, message => djasdsda, battleId => 54 }
04.11 07:30:25 ->>-: vdl/cache.battle.infoRoom { roomId => 54, _type => vdl/cache.battle.infoRoom }
04.11 07:30:25 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:30:25 TIME: battle.message 1.85 ms
04.11 07:30:25 == NET: uid107 ret: battle.message { type => battle.message, errorCode => ok }
04.11 07:30:25 == NET: uid116 ret: battle.message { type => battle.message, message => djasdsda, player => 2 }
04.11 07:30:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:29 TIME: user.ping 0.13 ms
04.11 07:30:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:30 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:30 TIME: user.ping 0.15 ms
04.11 07:30:30 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:35 TIME: user.ping 0.17 ms
04.11 07:30:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:40 TIME: user.ping 0.15 ms
04.11 07:30:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:43 ++ NET: uid116 req: battle.message { messageType => battle.message, message => vgfdgffggghh, battleId => 54 }
04.11 07:30:43 ->>-: vdl/cache.battle.infoRoom { roomId => 54, _type => vdl/cache.battle.infoRoom }
04.11 07:30:43 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:30:43 STATS: vdl.0 cache connection, 36 calls, total 0.143988847732544 sec spent, avg 4 ms
04.11 07:30:43 TIME: battle.message 1.72 ms
04.11 07:30:43 == NET: uid116 ret: battle.message { type => battle.message, errorCode => ok }
04.11 07:30:43 == NET: uid116 ret: battle.message { type => battle.message, message => vgfdgffggghh, player => 2 }
04.11 07:30:45 TIMER: Check auto-disconnect...
04.11 07:30:46 STATS: vdl.0 cache, locks:4
04.11 07:30:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:46 TIME: user.ping 0.17 ms
04.11 07:30:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:51 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:51 TIME: user.ping 0.17 ms
04.11 07:30:51 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:56 TIME: user.ping 0.15 ms
04.11 07:30:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:30:59 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:30:59 TIME: user.ping 0.19 ms
04.11 07:30:59 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:02 TIME: user.ping 0.16 ms
04.11 07:31:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:07 TIME: user.ping 0.16 ms
04.11 07:31:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:13 TIME: user.ping 0.12 ms
04.11 07:31:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:18 TIME: user.ping 0.18 ms
04.11 07:31:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:24 TIME: user.ping 0.16 ms
04.11 07:31:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:29 TIME: user.ping 0.13 ms
04.11 07:31:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:30 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:30 TIME: user.ping 0.19 ms
04.11 07:31:30 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:35 TIME: user.ping 0.16 ms
04.11 07:31:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:40 TIME: user.ping 0.17 ms
04.11 07:31:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:45 TIMER: Check auto-disconnect...
04.11 07:31:46 STATS: vdl.0 cache, locks:4
04.11 07:31:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:46 TIME: user.ping 0.16 ms
04.11 07:31:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:51 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:51 TIME: user.ping 0.19 ms
04.11 07:31:51 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:31:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:31:57 TIME: user.ping 0.13 ms
04.11 07:31:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:32:00 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:32:00 TIME: user.ping 0.19 ms
04.11 07:32:00 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:32:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:32:02 TIME: user.ping 0.18 ms
04.11 07:32:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:32:02 NET: Client (name:uid107 conid:64412490 TCP) disconnected from vdl.0 (clients:1)
04.11 07:32:02 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:32:02 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:32:02 -<<-: core/server.query { list => {{ id => 53 }, { id => 54 }}, errorCode => ok, _type => core/server.query }
04.11 07:32:02 STATS: vdl.0 cache connection, 37 calls, total 0.145525693893433 sec spent, avg 3.93 ms
04.11 07:32:02 ->>-: vdl/cache.battle.infoRoom { roomId => 54, _type => vdl/cache.battle.infoRoom }
04.11 07:32:02 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:32:02 ->>-: vdl/cache.battle.deleteRoom { roomId => 54, _type => vdl/cache.battle.deleteRoom }
04.11 07:32:02 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:32:02 ->>-: vdl/cache.battle.finishRoom { roomId => 54, _type => vdl/cache.battle.finishRoom }
04.11 07:32:02 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:32:02 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:32:02 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:32:02 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:32:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:32:02 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:32:02 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:32:02 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 07:32:29 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 07:32:29 -<<-: server.login ok
04.11 07:32:29 DB: SELECT * FROM LocalizationStrings
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 TIMER: Starting timer...
04.11 07:32:29 DB: SELECT * FROM GameVars
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 07:32:29 TIMER: Timer running...
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 07:32:29 -<<-: core/quest.getDaily ok
04.11 07:32:29 DB: SELECT * FROM UserAttributeTypes
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM UserVariableTypes
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 07:32:29 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM ItemGroups
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM Bundles ORDER BY ID
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 SHOP: loading items...
04.11 07:32:29 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 07:32:29 -<<-: core/shop.getList ok
04.11 07:32:29 SHOP: 0 items loaded (0.001 sec)
04.11 07:32:29 DB: SELECT * FROM EffectAttributeTypes
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM Effects
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 07:32:29 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 07:32:29 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 DB: SELECT * FROM Badges
04.11 07:32:29 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 07:32:29 -<<-: core/server.query ok
04.11 07:32:29 TIMER: Check auto-disconnect...
04.11 07:32:29 STATS: vdl.0 cache, locks:0
04.11 07:34:13 NET: Client (conid:20086775) connected to vdl.0 (clients:1)
04.11 07:34:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:34:25 TRACE: User not logon yet.
04.11 07:34:29 TIMER: Check auto-disconnect...
04.11 07:34:29 STATS: vdl.0 cache, locks:0
04.11 07:35:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:35:10 TRACE: User not logon yet.
04.11 07:35:29 TIMER: Check auto-disconnect...
04.11 07:35:29 STATS: vdl.0 cache, locks:0
04.11 07:35:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 07:35:56 TRACE: User not logon yet.
04.11 07:36:29 TIMER: Check auto-disconnect...
04.11 07:36:29 STATS: vdl.0 cache, locks:0
04.11 07:36:42 NET: Client (name:null conid:20086775 TCP) disconnected from vdl.0 (clients:0)
04.11 07:37:07 NET: Client (conid:9204390) connected to vdl.0 (clients:1)
04.11 07:37:08 NET: Client (conid:57894685) connected to vdl.0 (clients:2)
04.11 07:37:08 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 07:37:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:37:08 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:37:08 -<<-: core/server.query ok
04.11 07:37:08 STATS: vdl.0 cache connection, 21 calls, total 0.0743780136108398 sec spent, avg 3.54 ms
04.11 07:37:08 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:37:08 -<<-: core/user.isOnlineID ok
04.11 07:37:08 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:37:08 -<<-: core/cache.get ok
04.11 07:37:08 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:37:08 -<<-: core/cache.get ok
04.11 07:37:08 NET: Client login (conid:9204390, id:107, name:uid107)
04.11 07:37:08 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:37:08 -<<-: core/user.loginPost null
04.11 07:37:08 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 07:37:08 == NET: null ret: user.join { name => uid107, type => user.join }
04.11 07:37:08 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 07:37:08 == NET: uid107 ret: user.join { name => null, type => user.join }
04.11 07:37:11 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 07:37:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:37:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:37:11 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 07:37:11 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:37:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:37:11 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:37:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 07:37:11 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:37:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 07:37:11 NET: Client login (conid:57894685, id:116, name:uid116)
04.11 07:37:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:37:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:37:11 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 07:37:11 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 07:37:11 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 07:37:11 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 07:37:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:11 TIME: user.ping 0.19 ms
04.11 07:37:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:14 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:37:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:37:18 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:37:18 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:37:18 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:37:18 TIME: battle.find 0.48 ms
04.11 07:37:18 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:37:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:19 TIME: user.ping 0.06 ms
04.11 07:37:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:37:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:37:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:24 TIME: user.ping 0.19 ms
04.11 07:37:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:25 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 07:37:25 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 07:37:25 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 55, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 07:37:25 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 55, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 07:37:25 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:37:25 TIME: battle.find 40.05 ms
04.11 07:37:25 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 07:37:25 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 55, player => 2 }, type => battle.enemy }
04.11 07:37:25 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 55, player => 1 }, type => battle.enemy }
04.11 07:37:26 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:26 TIME: user.ping 0.16 ms
04.11 07:37:26 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:29 TIMER: Check auto-disconnect...
04.11 07:37:29 STATS: vdl.0 cache, locks:4
04.11 07:37:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:30 TIME: user.ping 0.19 ms
04.11 07:37:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:36 TIME: user.ping 0.19 ms
04.11 07:37:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:41 TIME: user.ping 0.12 ms
04.11 07:37:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:43 ++ NET: uid116 req: battle.message { messageType => battle.message, message => privet, battleId => 55 }
04.11 07:37:43 ->>-: vdl/cache.battle.infoRoom { roomId => 55, _type => vdl/cache.battle.infoRoom }
04.11 07:37:43 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:37:43 TIME: battle.message 1.67 ms
04.11 07:37:43 == NET: uid116 ret: battle.message { type => battle.message, errorCode => ok }
04.11 07:37:43 == NET: uid107 ret: battle.message { type => battle.message, message => privet, player => 1 }
04.11 07:37:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:46 TIME: user.ping 0.17 ms
04.11 07:37:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:52 TIME: user.ping 0.16 ms
04.11 07:37:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:55 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:55 TIME: user.ping 0.16 ms
04.11 07:37:55 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:37:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:37:57 TIME: user.ping 0.19 ms
04.11 07:37:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:03 TIME: user.ping 0.12 ms
04.11 07:38:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:04 ++ NET: uid107 req: battle.message { messageType => battle.message, message => Здарова хер, battleId => 55 }
04.11 07:38:04 ->>-: vdl/cache.battle.infoRoom { roomId => 55, _type => vdl/cache.battle.infoRoom }
04.11 07:38:04 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:38:04 TIME: battle.message 1.73 ms
04.11 07:38:04 == NET: uid107 ret: battle.message { type => battle.message, errorCode => ok }
04.11 07:38:04 == NET: uid116 ret: battle.message { type => battle.message, message => Здарова хер, player => 2 }
04.11 07:38:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:09 TIME: user.ping 0.18 ms
04.11 07:38:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:14 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:14 TIME: user.ping 0.14 ms
04.11 07:38:14 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:20 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:20 TIME: user.ping 0.15 ms
04.11 07:38:20 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:25 TIME: user.ping 0.17 ms
04.11 07:38:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:25 TIME: user.ping 0.16 ms
04.11 07:38:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:29 TIMER: Check auto-disconnect...
04.11 07:38:29 STATS: vdl.0 cache, locks:4
04.11 07:38:31 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:31 TIME: user.ping 0.18 ms
04.11 07:38:31 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:36 TIME: user.ping 0.13 ms
04.11 07:38:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:38:55 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:38:55 TIME: user.ping 0.15 ms
04.11 07:38:55 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:39:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:39:25 TIME: user.ping 0.18 ms
04.11 07:39:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:39:29 TIMER: Check auto-disconnect...
04.11 07:39:29 STATS: vdl.0 cache, locks:4
04.11 07:39:32 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 55 }
04.11 07:39:32 ->>-: vdl/cache.battle.infoRoom { roomId => 55, _type => vdl/cache.battle.infoRoom }
04.11 07:39:32 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:39:32 STATS: vdl.0 cache connection, 37 calls, total 0.135458707809448 sec spent, avg 3.66 ms
04.11 07:39:32 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 55, _type => vdl/cache.battle.makeTurn }
04.11 07:39:32 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 07:39:32 TIME: battle.sendtask 2.6 ms
04.11 07:39:32 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 07:39:32 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 55 }
04.11 07:39:55 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:39:55 TIME: user.ping 0.17 ms
04.11 07:39:55 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:40:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:40:23 TIME: user.ping 0.17 ms
04.11 07:40:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:40:24 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:40:24 TIME: user.ping 0.14 ms
04.11 07:40:24 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:40:29 NET: Client (name:uid107 conid:9204390 TCP) disconnected from vdl.0 (clients:1)
04.11 07:40:29 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:40:29 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:40:29 -<<-: core/server.query { list => {{ id => 53 }, { id => 55 }}, errorCode => ok, _type => core/server.query }
04.11 07:40:29 ->>-: vdl/cache.battle.infoRoom { roomId => 55, _type => vdl/cache.battle.infoRoom }
04.11 07:40:29 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 07:40:29 ->>-: vdl/cache.battle.deleteRoom { roomId => 55, _type => vdl/cache.battle.deleteRoom }
04.11 07:40:29 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:40:29 ->>-: vdl/cache.battle.finishRoom { roomId => 55, _type => vdl/cache.battle.finishRoom }
04.11 07:40:29 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:40:29 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:40:29 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:40:29 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:40:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:40:29 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:40:29 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:40:29 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 07:40:29 TIMER: Check auto-disconnect...
04.11 07:40:29 STATS: vdl.0 cache, locks:2
04.11 07:41:05 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:41:05 TIME: user.ping 0.18 ms
04.11 07:41:05 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:41:29 TIMER: Check auto-disconnect...
04.11 07:41:29 STATS: vdl.0 cache, locks:2
04.11 07:41:49 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:41:49 TIME: user.ping 0.19 ms
04.11 07:41:49 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:42:29 TIMER: Check auto-disconnect...
04.11 07:42:29 STATS: vdl.0 cache, locks:2
04.11 07:42:32 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:42:32 TIME: user.ping 0.15 ms
04.11 07:42:32 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:43:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:43:16 TIME: user.ping 0.18 ms
04.11 07:43:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:43:29 TIMER: Check auto-disconnect...
04.11 07:43:29 STATS: vdl.0 cache, locks:2
04.11 07:43:59 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:43:59 TIME: user.ping 0.2 ms
04.11 07:43:59 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:44:29 TIMER: Check auto-disconnect...
04.11 07:44:29 STATS: vdl.0 cache, locks:2
04.11 07:44:42 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:44:42 TIME: user.ping 0.18 ms
04.11 07:44:42 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:45:26 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:45:26 TIME: user.ping 0.17 ms
04.11 07:45:26 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:45:29 TIMER: Check auto-disconnect...
04.11 07:45:29 STATS: vdl.0 cache, locks:2
04.11 07:46:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:46:09 TIME: user.ping 0.17 ms
04.11 07:46:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:46:29 TIMER: Check auto-disconnect...
04.11 07:46:29 STATS: vdl.0 cache, locks:2
04.11 07:46:52 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:46:52 TIME: user.ping 0.18 ms
04.11 07:46:52 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:47:29 TIMER: Check auto-disconnect...
04.11 07:47:29 STATS: vdl.0 cache, locks:2
04.11 07:47:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:47:36 TIME: user.ping 0.18 ms
04.11 07:47:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:48:19 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:48:19 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:48:19 TIME: user.ping 0.18 ms
04.11 07:48:29 TIMER: Check auto-disconnect...
04.11 07:48:29 STATS: vdl.0 cache, locks:2
04.11 07:49:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:49:03 TIME: user.ping 0.14 ms
04.11 07:49:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:49:29 TIMER: Check auto-disconnect...
04.11 07:49:29 STATS: vdl.0 cache, locks:2
04.11 07:49:46 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:49:46 TIME: user.ping 0.18 ms
04.11 07:49:46 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:50:29 TIMER: Check auto-disconnect...
04.11 07:50:29 STATS: vdl.0 cache, locks:2
04.11 07:50:30 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:50:30 TIME: user.ping 0.19 ms
04.11 07:50:30 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:51:13 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:51:13 TIME: user.ping 0.14 ms
04.11 07:51:13 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:51:29 TIMER: Check auto-disconnect...
04.11 07:51:29 STATS: vdl.0 cache, locks:2
04.11 07:51:37 NET: Client (conid:44755441) connected to vdl.0 (clients:2)
04.11 07:51:38 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 07:51:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:51:38 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:51:38 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:51:38 STATS: vdl.0 cache connection, 46 calls, total 0.164767742156982 sec spent, avg 3.58 ms
04.11 07:51:38 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:51:38 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:51:38 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:51:38 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:51:38 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:51:38 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:51:38 NET: Client login (conid:44755441, id:107, name:uid107)
04.11 07:51:38 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:51:38 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 07:51:38 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 07:51:38 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 07:51:38 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 07:51:38 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 07:51:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:51:42 TIME: user.ping 0.14 ms
04.11 07:51:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:51:43 NET: Client (name:uid107 conid:44755441 TCP) disconnected from vdl.0 (clients:1)
04.11 07:51:43 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:51:43 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:51:43 -<<-: core/server.query { list => {{ id => 53 }}, errorCode => ok, _type => core/server.query }
04.11 07:51:43 ->>-: vdl/cache.battle.infoRoom { roomId => 53, _type => vdl/cache.battle.infoRoom }
04.11 07:51:43 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 07:51:43 ->>-: vdl/cache.battle.deleteRoom { roomId => 53, _type => vdl/cache.battle.deleteRoom }
04.11 07:51:43 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:51:43 ->>-: vdl/cache.battle.finishRoom { roomId => 53, _type => vdl/cache.battle.finishRoom }
04.11 07:51:43 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:51:43 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:51:43 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:51:43 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:51:43 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:51:43 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:51:43 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:51:43 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 07:51:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:51:57 TIME: user.ping 0.23 ms
04.11 07:51:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:52:29 TIMER: Check auto-disconnect...
04.11 07:52:29 STATS: vdl.0 cache, locks:2
04.11 07:52:40 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:52:40 TIME: user.ping 0.13 ms
04.11 07:52:40 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:53:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:53:23 TIME: user.ping 0.19 ms
04.11 07:53:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:53:29 TIMER: Check auto-disconnect...
04.11 07:53:29 STATS: vdl.0 cache, locks:2
04.11 07:54:07 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:54:07 TIME: user.ping 0.15 ms
04.11 07:54:07 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:54:29 TIMER: Check auto-disconnect...
04.11 07:54:29 STATS: vdl.0 cache, locks:2
04.11 07:54:50 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:54:50 TIME: user.ping 0.21 ms
04.11 07:54:50 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:55:29 TIMER: Check auto-disconnect...
04.11 07:55:29 STATS: vdl.0 cache, locks:2
04.11 07:55:34 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:55:34 TIME: user.ping 0.14 ms
04.11 07:55:34 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:56:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:56:17 TIME: user.ping 0.14 ms
04.11 07:56:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:56:29 TIMER: Check auto-disconnect...
04.11 07:56:29 STATS: vdl.0 cache, locks:2
04.11 07:57:01 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:57:01 TIME: user.ping 0.16 ms
04.11 07:57:01 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:57:29 TIMER: Check auto-disconnect...
04.11 07:57:29 STATS: vdl.0 cache, locks:2
04.11 07:57:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:57:44 TIME: user.ping 0.17 ms
04.11 07:57:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:58:27 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:58:27 TIME: user.ping 0.16 ms
04.11 07:58:27 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:58:29 TIMER: Check auto-disconnect...
04.11 07:58:29 STATS: vdl.0 cache, locks:2
04.11 07:59:11 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:59:11 TIME: user.ping 0.14 ms
04.11 07:59:11 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 07:59:29 TIMER: Check auto-disconnect...
04.11 07:59:29 STATS: vdl.0 cache, locks:2
04.11 07:59:54 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 07:59:54 TIME: user.ping 0.17 ms
04.11 07:59:54 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
