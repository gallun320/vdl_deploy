03.10 12:00:07 TIMER: Check auto-disconnect...
03.10 12:00:17 ++ NET: null req: user.logout { messageType => user.logout }
03.10 12:00:17 TRACE: User not logon yet.
03.10 12:00:17 NET: Client (name:null conid:1196759 TCP) disconnected from vdl.0 (clients:0)
03.10 12:00:23 STATS: vdl.0 cache, locks:0
03.10 12:01:07 TIMER: Check auto-disconnect...
03.10 12:01:24 STATS: vdl.0 cache, locks:0
03.10 12:02:07 TIMER: Check auto-disconnect...
03.10 12:02:24 STATS: vdl.0 cache, locks:0
03.10 12:03:07 TIMER: Check auto-disconnect...
03.10 12:03:24 STATS: vdl.0 cache, locks:0
03.10 12:04:07 TIMER: Check auto-disconnect...
03.10 12:04:24 STATS: vdl.0 cache, locks:0
03.10 12:05:07 TIMER: Check auto-disconnect...
03.10 12:05:24 STATS: vdl.0 cache, locks:0
03.10 12:06:07 TIMER: Check auto-disconnect...
03.10 12:06:24 STATS: vdl.0 cache, locks:0
03.10 12:06:38 NET: Client (conid:3025782) connected to vdl.0 (clients:1)
03.10 12:06:44 ++ NET: null req: user.register { game => vdl, password => random79, name => player, messageType => user.register }
03.10 12:06:44 DB: SELECT ID FROM Users WHERE Name = 'player'
03.10 12:06:44 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'player', _type => core/server.query }
03.10 12:06:44 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.10 12:06:44 STATS: vdl.0 cache connection, 968 calls, total 0.899445533752441 sec spent, avg 0.93 ms
03.10 12:06:44 DB: SELECT nextval('Users_id_seq') AS id
03.10 12:06:44 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
03.10 12:06:44 -<<-: core/server.query { list => {{ id => 30 }}, errorCode => ok, _type => core/server.query }
03.10 12:06:44 ->>-: core/user.register { password => random79, name => player, fullParams => { game => vdl, password => random79, name => player, networkid => , networktype => , messageType => user.register, id => 30 }, networkid => , connectionID => 3025782, networktype => , email => , id => 30, _type => core/user.register }
03.10 12:06:44 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
03.10 12:06:44 -<<-: core/user.registerResponse { password => random79, name => player, _isNotify => true, fullParams => { game => vdl, password => random79, name => player, networkid => , networktype => , messageType => user.register, id => 30 }, networkid => , connectionID => 3025782, networktype => , email => , id => 30, _type => core/user.registerResponse }
03.10 12:06:44 DB: SELECT token FROM tokens WHERE userid = 30
03.10 12:06:44 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 30, _type => core/server.query }
03.10 12:06:44 -<<-: core/server.query { list => {{ token => bc13ef95649e4dbc3c12d2d7031bcd6c }}, errorCode => ok, _type => core/server.query }
03.10 12:06:44 == NET: null ret: user.register { type => user.register, errorCode => ok, token => bc13ef95649e4dbc3c12d2d7031bcd6c }
03.10 12:06:44 ++ NET: null req: user.login { type => token, messageType => user.login, token => bc13ef95649e4dbc3c12d2d7031bcd6c }
03.10 12:06:44 DB: SELECT name, password FROM users WHERE id = (select userid from tokens where token = 'bc13ef95649e4dbc3c12d2d7031bcd6c')
03.10 12:06:44 ->>-: core/server.query { q => SELECT name, password FROM users WHERE id = (select userid from tokens where token = 'bc13ef95649e4dbc3c12d2d7031bcd6c'), _type => core/server.query }
03.10 12:06:44 -<<-: core/server.query { list => {{ password => random79, name => player30 }}, errorCode => ok, _type => core/server.query }
03.10 12:06:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'player30' AND Password = 'random79'
03.10 12:06:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'player30' AND Password = 'random79', _type => core/server.query }
03.10 12:06:44 -<<-: core/server.query { list => {{ name => player30, networkid => , isbanned => false, id => 30 }}, errorCode => ok, _type => core/server.query }
03.10 12:06:44 ->>-: core/user.isOnlineID { id => 30, _type => core/user.isOnlineID }
03.10 12:06:44 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.10 12:06:44 ->>-: core/cache.get { type => user, v => -1, id => 30, _type => core/cache.get }
03.10 12:06:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {chemrating => 0, biorating => 0, networktype =>   , level => 0, sex => male, networkid => , skinbase => {"body_skin": 1, "head_skin": 1, "hair": 1, "eyes": 1, "mouth": 1}, informaticrating => 0, isbanned => false, params => { inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }, name => player30, skinaddavaliable => {"head : null; dress : null; weapon : null; acess : null"}, deleted => false, historyrating => 0, school => 1, rang => 0, georating => 0, password => random79, language =>   , region => 1, skinadditional => {"head": 0, "dress": 0, "acces": 0, "weapon": 0}, rangname => новичок                       , rusrating => 0, email => mail, mathrating => 0, regdate => 2016-10-03 12:06:44.291715+00, expirience => 0, city => 1, physrating => 0}, version => 1, id => 30 } }
03.10 12:06:44 ->>-: core/cache.get { type => questdata, v => -1, id => 30, _type => core/cache.get }
03.10 12:06:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 30 } }
03.10 12:06:44 NET: Client login (conid:3025782, id:30, name:player30)
03.10 12:06:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 30, _type => core/user.loginPost, ipAddr => 31.173.85.234 }
03.10 12:06:44 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.10 12:06:44 DB: SELECT token FROM tokens WHERE userid = 30
03.10 12:06:44 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 30, _type => core/server.query }
03.10 12:06:44 -<<-: core/server.query { list => {{ token => bc13ef95649e4dbc3c12d2d7031bcd6c }}, errorCode => ok, _type => core/server.query }
03.10 12:06:44 DB: SELECT ID FROM TempUserLogins WHERE UserID = 30 AND Date = 'today'::timestamp
03.10 12:06:44 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 30 AND Date = 'today'::timestamp, _type => core/server.query }
03.10 12:06:44 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.10 12:06:44 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (30, 'today'::timestamp)
03.10 12:06:44 == NET: player30 ret: user.login { name => player30, type => user.login, errorCode => ok, id => 30, token => bc13ef95649e4dbc3c12d2d7031bcd6c }
03.10 12:06:44 == NET: player30 ret: user.join { name => player30, type => user.join }
03.10 12:06:44 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (30, 'today'::timestamp), _type => core/server.pending }} }
03.10 12:06:44 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
03.10 12:06:54 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1475496404, lastLoginDate => 277, lastLoadDate => 1004 } }}, type => user, unlock => false, id => 30, _type => core/cache.update }
03.10 12:06:54 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.10 12:07:07 TIMER: Check auto-disconnect...
03.10 12:07:24 STATS: vdl.0 cache, locks:2
03.10 12:07:33 NET: Client (name:player30 conid:3025782 TCP) disconnected from vdl.0 (clients:0)
03.10 12:07:33 DB: SELECT id FROM battle WHERE firstid=30 OR secondid=30 AND finished <> true
03.10 12:07:33 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=30 OR secondid=30 AND finished <> true, _type => core/server.query }
03.10 12:07:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.10 12:07:33 ->>-: vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
03.10 12:07:33 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
03.10 12:07:33 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 30, _type => core/cache.update }
03.10 12:07:33 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.10 12:07:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 30, _type => core/cache.update }
03.10 12:07:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.10 12:07:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 30, _type => core/user.logoutPost }
03.10 12:07:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.10 12:08:07 TIMER: Check auto-disconnect...
03.10 12:08:24 STATS: vdl.0 cache, locks:0
03.10 12:09:07 TIMER: Check auto-disconnect...
03.10 12:09:24 STATS: vdl.0 cache, locks:0
03.10 12:10:07 TIMER: Check auto-disconnect...
03.10 12:10:24 STATS: vdl.0 cache, locks:0
03.10 12:11:07 TIMER: Check auto-disconnect...
03.10 12:11:24 STATS: vdl.0 cache, locks:0
03.10 12:12:07 TIMER: Check auto-disconnect...
03.10 12:12:24 STATS: vdl.0 cache, locks:0
03.10 12:13:07 TIMER: Check auto-disconnect...
03.10 12:13:24 STATS: vdl.0 cache, locks:0
03.10 12:14:07 TIMER: Check auto-disconnect...
03.10 12:14:24 STATS: vdl.0 cache, locks:0
03.10 12:15:07 TIMER: Check auto-disconnect...
03.10 12:15:24 STATS: vdl.0 cache, locks:0
03.10 12:16:07 TIMER: Check auto-disconnect...
03.10 12:16:24 STATS: vdl.0 cache, locks:0
03.10 12:17:07 TIMER: Check auto-disconnect...
03.10 12:17:24 STATS: vdl.0 cache, locks:0
03.10 12:18:07 TIMER: Check auto-disconnect...
03.10 12:18:24 STATS: vdl.0 cache, locks:0
03.10 12:19:07 TIMER: Check auto-disconnect...
03.10 12:19:24 STATS: vdl.0 cache, locks:0
03.10 12:20:07 TIMER: Check auto-disconnect...
03.10 12:20:24 STATS: vdl.0 cache, locks:0
03.10 12:21:07 TIMER: Check auto-disconnect...
03.10 12:21:24 STATS: vdl.0 cache, locks:0
03.10 12:22:07 TIMER: Check auto-disconnect...
03.10 12:22:24 STATS: vdl.0 cache, locks:0
03.10 12:23:07 TIMER: Check auto-disconnect...
03.10 12:23:24 STATS: vdl.0 cache, locks:0
03.10 12:24:07 TIMER: Check auto-disconnect...
03.10 12:24:24 STATS: vdl.0 cache, locks:0
03.10 12:25:07 TIMER: Check auto-disconnect...
03.10 12:25:24 STATS: vdl.0 cache, locks:0
03.10 12:26:07 TIMER: Check auto-disconnect...
03.10 12:26:24 STATS: vdl.0 cache, locks:0
03.10 12:27:07 TIMER: Check auto-disconnect...
03.10 12:27:24 STATS: vdl.0 cache, locks:0
03.10 12:28:07 TIMER: Check auto-disconnect...
03.10 12:28:24 STATS: vdl.0 cache, locks:0
03.10 12:29:07 TIMER: Check auto-disconnect...
03.10 12:29:24 STATS: vdl.0 cache, locks:0
03.10 12:30:07 TIMER: Check auto-disconnect...
03.10 12:30:24 STATS: vdl.0 cache, locks:0
03.10 12:31:07 TIMER: Check auto-disconnect...
03.10 12:31:24 STATS: vdl.0 cache, locks:0
03.10 12:32:07 TIMER: Check auto-disconnect...
03.10 12:32:24 STATS: vdl.0 cache, locks:0
03.10 12:33:07 TIMER: Check auto-disconnect...
03.10 12:33:24 STATS: vdl.0 cache, locks:0
03.10 12:34:07 TIMER: Check auto-disconnect...
03.10 12:34:24 STATS: vdl.0 cache, locks:0
03.10 12:35:07 TIMER: Check auto-disconnect...
03.10 12:35:24 STATS: vdl.0 cache, locks:0
03.10 12:36:07 TIMER: Check auto-disconnect...
03.10 12:36:24 STATS: vdl.0 cache, locks:0
03.10 12:37:07 TIMER: Check auto-disconnect...
03.10 12:37:24 STATS: vdl.0 cache, locks:0
03.10 12:38:07 TIMER: Check auto-disconnect...
03.10 12:38:24 STATS: vdl.0 cache, locks:0
03.10 12:39:07 TIMER: Check auto-disconnect...
03.10 12:39:24 STATS: vdl.0 cache, locks:0
03.10 12:40:07 TIMER: Check auto-disconnect...
03.10 12:40:24 STATS: vdl.0 cache, locks:0
03.10 12:41:07 TIMER: Check auto-disconnect...
03.10 12:41:24 STATS: vdl.0 cache, locks:0
03.10 12:42:07 TIMER: Check auto-disconnect...
03.10 12:42:24 STATS: vdl.0 cache, locks:0
03.10 12:43:07 TIMER: Check auto-disconnect...
03.10 12:43:24 STATS: vdl.0 cache, locks:0
03.10 12:44:07 TIMER: Check auto-disconnect...
03.10 12:44:24 STATS: vdl.0 cache, locks:0
03.10 12:45:07 TIMER: Check auto-disconnect...
03.10 12:45:24 STATS: vdl.0 cache, locks:0
03.10 12:46:07 TIMER: Check auto-disconnect...
03.10 12:46:24 STATS: vdl.0 cache, locks:0
03.10 12:47:07 TIMER: Check auto-disconnect...
03.10 12:47:24 STATS: vdl.0 cache, locks:0
03.10 12:48:07 TIMER: Check auto-disconnect...
03.10 12:48:24 STATS: vdl.0 cache, locks:0
03.10 12:49:07 TIMER: Check auto-disconnect...
03.10 12:49:24 STATS: vdl.0 cache, locks:0
03.10 12:50:07 TIMER: Check auto-disconnect...
03.10 12:50:24 STATS: vdl.0 cache, locks:0
03.10 12:51:07 TIMER: Check auto-disconnect...
03.10 12:51:24 STATS: vdl.0 cache, locks:0
03.10 12:52:07 TIMER: Check auto-disconnect...
03.10 12:52:24 STATS: vdl.0 cache, locks:0
03.10 12:53:07 TIMER: Check auto-disconnect...
03.10 12:53:24 STATS: vdl.0 cache, locks:0
03.10 12:54:07 TIMER: Check auto-disconnect...
03.10 12:54:24 STATS: vdl.0 cache, locks:0
03.10 12:55:07 TIMER: Check auto-disconnect...
03.10 12:55:24 STATS: vdl.0 cache, locks:0
03.10 12:56:07 TIMER: Check auto-disconnect...
03.10 12:56:24 STATS: vdl.0 cache, locks:0
03.10 12:57:07 TIMER: Check auto-disconnect...
03.10 12:57:24 STATS: vdl.0 cache, locks:0
03.10 12:58:07 TIMER: Check auto-disconnect...
03.10 12:58:24 STATS: vdl.0 cache, locks:0
03.10 12:59:07 TIMER: Check auto-disconnect...
03.10 12:59:24 STATS: vdl.0 cache, locks:0
