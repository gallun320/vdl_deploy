04.11 03:00:49 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:00:49 -<<-: server.login ok
04.11 03:00:49 DB: SELECT * FROM LocalizationStrings
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 TIMER: Starting timer...
04.11 03:00:49 TIMER: Timer running...
04.11 03:00:49 DB: SELECT * FROM GameVars
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:00:49 -<<-: core/quest.getDaily ok
04.11 03:00:49 DB: SELECT * FROM UserAttributeTypes
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM UserVariableTypes
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:00:49 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM ItemGroups
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 SHOP: loading items...
04.11 03:00:49 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 03:00:49 -<<-: core/shop.getList ok
04.11 03:00:49 SHOP: 0 items loaded (0 sec)
04.11 03:00:49 DB: SELECT * FROM EffectAttributeTypes
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM Effects
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:00:49 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:00:49 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:00:49 DB: SELECT * FROM Badges
04.11 03:00:49 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:00:49 -<<-: core/server.query ok
04.11 03:01:12 NET: Client (conid:17540328) connected to vdl.0 (clients:1)
04.11 03:01:13 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 03:01:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:01:13 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:01:13 -<<-: core/server.query ok
04.11 03:01:13 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:01:13 -<<-: core/user.isOnlineID ok
04.11 03:01:13 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:01:13 -<<-: core/cache.get ok
04.11 03:01:13 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:01:13 -<<-: core/cache.get ok
04.11 03:01:13 NET: Client login (conid:17540328, id:107, name:uid107)
04.11 03:01:13 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:01:13 -<<-: core/user.loginPost null
04.11 03:01:13 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 03:01:13 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 03:01:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:01:17 TIME: user.ping 0.15 ms
04.11 03:01:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:01:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:01:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:01:21 NET: Client (name:uid107 conid:17540328 TCP) disconnected from vdl.0 (clients:0)
04.11 03:01:21 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 03:01:21 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 03:01:21 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 32 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 42 }, { id => 43 }}, errorCode => ok, _type => core/server.query }
04.11 03:01:21 ->>-: vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
04.11 03:01:21 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:01:21 ->>-: vdl/cache.battle.deleteRoom { roomId => 43, _type => vdl/cache.battle.deleteRoom }
04.11 03:01:21 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 03:01:21 ->>-: vdl/cache.battle.finishRoom { roomId => 43, _type => vdl/cache.battle.finishRoom }
04.11 03:01:21 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 03:01:21 ->>-: core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 03:01:21 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 03:01:21 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 03:01:21 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 03:01:21 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 03:01:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:01:21 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 03:01:21 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 03:01:49 TIMER: Check auto-disconnect...
04.11 03:01:49 STATS: vdl.0 cache, locks:0
04.11 03:01:49 TIMER: Check auto-disconnect...
04.11 03:01:49 STATS: vdl.0 cache, locks:0
04.11 03:03:44 NET: Client (conid:61680313) connected to vdl.0 (clients:1)
04.11 03:03:48 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 03:03:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:03:48 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:03:48 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:03:48 STATS: vdl.0 cache connection, 35 calls, total 0.0840201377868652 sec spent, avg 2.4 ms
04.11 03:03:48 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:03:48 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:03:48 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:03:48 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:03:48 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:03:48 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:03:48 NET: Client login (conid:61680313, id:116, name:uid116)
04.11 03:03:48 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:03:48 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 03:03:48 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 03:03:48 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 03:03:49 TIMER: Check auto-disconnect...
04.11 03:03:49 STATS: vdl.0 cache, locks:2
04.11 03:03:54 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:03:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:04:01 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:04:01 TIME: user.ping 0.17 ms
04.11 03:04:01 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:04:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:04:21 TIME: user.ping 0.17 ms
04.11 03:04:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:04:41 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:04:41 TIME: user.ping 0.18 ms
04.11 03:04:41 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:04:49 TIMER: Check auto-disconnect...
04.11 03:04:49 STATS: vdl.0 cache, locks:2
04.11 03:05:01 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:05:01 TIME: user.ping 0.16 ms
04.11 03:05:01 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:05:15 NET: Client (conid:52051970) connected to vdl.0 (clients:2)
04.11 03:05:17 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 03:05:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:05:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:05:17 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 03:05:17 STATS: vdl.0 cache connection, 41 calls, total 0.09151291847229 sec spent, avg 2.23 ms
04.11 03:05:17 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:05:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:05:17 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:05:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 03:05:17 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:05:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 03:05:17 NET: Client login (conid:52051970, id:107, name:uid107)
04.11 03:05:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:05:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 03:05:17 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 03:05:17 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 03:05:17 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 03:05:17 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 03:05:20 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:05:20 TIME: user.ping 0.15 ms
04.11 03:05:20 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:05:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:05:21 TIME: user.ping 0.19 ms
04.11 03:05:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:05:24 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:05:24 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:05:24 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:05:24 TIME: battle.find 0.54 ms
04.11 03:05:24 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:05:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:05:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:05:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:05:28 TIME: user.ping 0.17 ms
04.11 03:05:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:05:31 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:05:31 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:05:31 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 45, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:05:31 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 45, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:05:31 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:05:31 TIME: battle.find 35.18 ms
04.11 03:05:31 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:05:31 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 45, player => 1 }, type => battle.enemy }
04.11 03:05:31 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 45, player => 2 }, type => battle.enemy }
04.11 03:05:37 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 45 }
04.11 03:05:37 ->>-: vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
04.11 03:05:37 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:05:37 TIME: battle.sendtask 0.61 ms
04.11 03:05:37 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,2,3,3,0,1], errorCode => ok, _type => battle.task }
04.11 03:05:37 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [0,2,3,3,0,1], errorCode => ok }
04.11 03:05:37 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:05:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:05:40 TIME: user.ping 0.28 ms
04.11 03:05:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:05:42 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 45 }
04.11 03:05:42 ->>-: vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
04.11 03:05:42 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:05:42 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 45 }
04.11 03:05:42 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:05:42 TIME: battle.sendtask 3.03 ms
04.11 03:05:42 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:05:42 == NET: uid116 ret: battle.task { dice => 3, from => [7,3], name => swap, side => 2, type => battle.task, dices => [0,2,3,0,1], messageType => battle.sendtask, to => [8,3], battleId => 45 }
04.11 03:05:48 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:05:48 TIME: user.ping 0.18 ms
04.11 03:05:48 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:05:49 TIMER: Check auto-disconnect...
04.11 03:05:49 STATS: vdl.0 cache, locks:4
04.11 03:05:50 ++ NET: uid107 req: battle.sendtask { dice => 2, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 45 }
04.11 03:05:50 ->>-: vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
04.11 03:05:50 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:05:50 TIME: battle.sendtask 2.04 ms
04.11 03:05:50 == NET: uid107 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,2,5,5,5,10,0,0],[0,0,0,3,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [0,2,3,0,1], errorCode => cannotSwap }
04.11 03:05:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:05:52 TIME: user.ping 0.2 ms
04.11 03:05:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:06:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:06:05 TIME: user.ping 0.15 ms
04.11 03:06:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:06:12 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:06:12 TIME: user.ping 0.14 ms
04.11 03:06:12 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:06:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:06:17 TIME: user.ping 0.22 ms
04.11 03:06:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:06:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:06:36 TIME: user.ping 0.14 ms
04.11 03:06:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:06:49 TIMER: Check auto-disconnect...
04.11 03:06:50 STATS: vdl.0 cache, locks:4
04.11 03:06:54 NET: Client (name:uid107 conid:52051970 TCP) disconnected from vdl.0 (clients:1)
04.11 03:06:54 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 03:06:54 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 03:06:54 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 32 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 42 }, { id => 45 }}, errorCode => ok, _type => core/server.query }
04.11 03:06:54 STATS: vdl.0 cache connection, 53 calls, total 0.134671926498413 sec spent, avg 2.54 ms
04.11 03:06:54 ->>-: vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
04.11 03:06:54 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:06:54 ->>-: vdl/cache.battle.deleteRoom { roomId => 45, _type => vdl/cache.battle.deleteRoom }
04.11 03:06:54 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 03:06:54 ->>-: vdl/cache.battle.finishRoom { roomId => 45, _type => vdl/cache.battle.finishRoom }
04.11 03:06:54 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 03:06:54 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 03:06:54 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 03:06:54 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 03:06:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:06:54 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 03:06:54 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 03:06:54 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 03:07:04 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:07:04 TIME: user.ping 0.19 ms
04.11 03:07:04 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:07:05 NET: Client (name:uid116 conid:61680313 TCP) disconnected from vdl.0 (clients:0)
04.11 03:07:05 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 03:07:05 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 03:07:05 -<<-: core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 10 }, { id => 32 }, { id => 13 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 42 }}, errorCode => ok, _type => core/server.query }
04.11 03:07:05 ->>-: vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 03:07:05 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:07:05 ->>-: vdl/cache.battle.deleteRoom { roomId => 42, _type => vdl/cache.battle.deleteRoom }
04.11 03:07:05 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 03:07:05 ->>-: vdl/cache.battle.finishRoom { roomId => 42, _type => vdl/cache.battle.finishRoom }
04.11 03:07:05 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 03:07:05 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 03:07:05 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 03:07:05 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 03:07:05 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 03:07:05 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 03:07:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:07:05 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 03:07:05 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 03:07:49 TIMER: Check auto-disconnect...
04.11 03:07:50 STATS: vdl.0 cache, locks:0
04.11 03:08:49 TIMER: Check auto-disconnect...
04.11 03:08:50 STATS: vdl.0 cache, locks:0
04.11 03:09:39 NET: Client (conid:45033285) connected to vdl.0 (clients:1)
04.11 03:09:43 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 03:09:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:09:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:09:43 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:09:43 STATS: vdl.0 cache connection, 68 calls, total 0.189934730529785 sec spent, avg 2.79 ms
04.11 03:09:43 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:09:43 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:09:43 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:09:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:09:43 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:09:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:09:43 NET: Client login (conid:45033285, id:116, name:uid116)
04.11 03:09:43 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:09:43 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 03:09:43 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 03:09:43 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 03:09:49 TIMER: Check auto-disconnect...
04.11 03:09:50 STATS: vdl.0 cache, locks:2
04.11 03:09:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:09:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:09:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:09:56 TIME: user.ping 0.13 ms
04.11 03:09:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:10:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:10:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:10:16 TIME: user.ping 0.2 ms
04.11 03:10:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:10:36 TIME: user.ping 0.17 ms
04.11 03:10:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:10:49 TIMER: Check auto-disconnect...
04.11 03:10:50 STATS: vdl.0 cache, locks:2
04.11 03:10:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:10:56 TIME: user.ping 0.19 ms
04.11 03:10:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:11:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:11:16 TIME: user.ping 0.19 ms
04.11 03:11:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:11:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:11:36 TIME: user.ping 0.16 ms
04.11 03:11:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:11:49 TIMER: Check auto-disconnect...
04.11 03:11:50 STATS: vdl.0 cache, locks:2
04.11 03:12:22 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:12:22 -<<-: server.login ok
04.11 03:12:22 DB: SELECT * FROM LocalizationStrings
04.11 03:12:22 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 TIMER: Starting timer...
04.11 03:12:23 TIMER: Timer running...
04.11 03:12:23 DB: SELECT * FROM GameVars
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:12:23 -<<-: core/quest.getDaily ok
04.11 03:12:23 DB: SELECT * FROM UserAttributeTypes
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM UserVariableTypes
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:12:23 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM ItemGroups
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 SHOP: loading items...
04.11 03:12:23 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 03:12:23 -<<-: core/shop.getList ok
04.11 03:12:23 SHOP: 0 items loaded (0 sec)
04.11 03:12:23 DB: SELECT * FROM EffectAttributeTypes
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM Effects
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:12:23 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:12:23 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:12:23 DB: SELECT * FROM Badges
04.11 03:12:23 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:12:23 -<<-: core/server.query ok
04.11 03:13:00 NET: Client (conid:85814495) connected to vdl.0 (clients:1)
04.11 03:13:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 03:13:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:13:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:13:02 -<<-: core/server.query ok
04.11 03:13:02 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:13:02 -<<-: core/user.isOnlineID ok
04.11 03:13:02 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:13:02 -<<-: core/cache.get ok
04.11 03:13:02 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:13:02 -<<-: core/cache.get ok
04.11 03:13:02 NET: Client login (conid:85814495, id:107, name:uid107)
04.11 03:13:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:13:02 -<<-: core/user.loginPost null
04.11 03:13:02 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 03:13:02 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 03:13:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:13:05 TIME: user.ping 0.13 ms
04.11 03:13:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:13:08 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:13:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:13:09 NET: Client (conid:14564238) connected to vdl.0 (clients:2)
04.11 03:13:13 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 03:13:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:13:13 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:13:13 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:13:13 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:13:13 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:13:13 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:13:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:13:13 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:13:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:13:13 NET: Client login (conid:14564238, id:116, name:uid116)
04.11 03:13:13 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:13:13 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 03:13:13 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 03:13:13 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 03:13:13 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 03:13:13 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 03:13:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:13:13 TIME: user.ping 0.13 ms
04.11 03:13:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:13:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:13:21 TIME: user.ping 0.16 ms
04.11 03:13:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:13:23 TIMER: Check auto-disconnect...
04.11 03:13:23 STATS: vdl.0 cache, locks:4
04.11 03:13:23 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:13:23 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:13:23 STATS: vdl.0 cache connection, 32 calls, total 0.0895702838897705 sec spent, avg 2.8 ms
04.11 03:13:24 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:13:24 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:13:24 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:13:24 TIME: battle.find 0.55 ms
04.11 03:13:24 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:13:27 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:13:27 TIME: user.ping 0.13 ms
04.11 03:13:27 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:13:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:13:29 TIME: user.ping 0.13 ms
04.11 03:13:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:13:30 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:13:30 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:13:30 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 46, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:13:30 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 46, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:13:30 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:13:30 TIME: battle.find 36.15 ms
04.11 03:13:30 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:13:30 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 46, player => 1 }, type => battle.enemy }
04.11 03:13:30 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 46, player => 2 }, type => battle.enemy }
04.11 03:13:36 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 46 }
04.11 03:13:36 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:13:36 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:13:36 TIME: battle.sendtask 0.72 ms
04.11 03:13:36 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [1,1,2,3,5,0], errorCode => ok }
04.11 03:13:36 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [1,1,2,3,5,0], errorCode => ok }
04.11 03:13:36 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:13:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:13:41 TIME: user.ping 0.16 ms
04.11 03:13:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:13:41 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 46 }
04.11 03:13:41 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:13:41 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:13:41 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 46 }
04.11 03:13:41 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:13:41 TIME: battle.sendtask 3.95 ms
04.11 03:13:41 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:13:41 == NET: uid116 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [1,1,2,3,0], messageType => battle.sendtask, to => [8,3], battleId => 46 }
04.11 03:13:46 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 46 }
04.11 03:13:46 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:13:46 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:13:46 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 46 }
04.11 03:13:46 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:13:46 TIME: battle.sendtask 3.58 ms
04.11 03:13:46 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:13:46 == NET: uid116 ret: battle.task { dice => 3, from => [8,3], name => swap, side => 2, type => battle.task, dices => [1,1,2,0], messageType => battle.sendtask, to => [9,3], battleId => 46 }
04.11 03:13:52 ++ NET: uid107 req: battle.sendtask { dice => 1, from => [9,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 46 }
04.11 03:13:52 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:13:52 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:13:52 TIME: battle.sendtask 1.89 ms
04.11 03:13:52 == NET: uid107 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,-3,3],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,5,5,5,5,10,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [1,1,2,0], errorCode => cannotSwap }
04.11 03:13:54 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:13:54 TIME: user.ping 0.15 ms
04.11 03:13:54 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:13:54 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:13:54 TIME: user.ping 0.18 ms
04.11 03:13:54 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:14:06 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:14:06 TIME: user.ping 0.17 ms
04.11 03:14:06 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:14:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:14:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:14:17 TIME: user.ping 0.19 ms
04.11 03:14:18 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:14:18 TIME: user.ping 0.17 ms
04.11 03:14:18 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:14:23 TIMER: Check auto-disconnect...
04.11 03:14:23 STATS: vdl.0 cache, locks:4
04.11 03:14:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:14:29 TIME: user.ping 0.14 ms
04.11 03:14:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:14:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:14:41 TIME: user.ping 0.19 ms
04.11 03:14:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:14:42 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:14:42 TIME: user.ping 0.15 ms
04.11 03:14:42 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:14:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:14:52 TIME: user.ping 0.15 ms
04.11 03:14:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:15:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:15:04 TIME: user.ping 0.19 ms
04.11 03:15:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:15:07 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:15:07 TIME: user.ping 0.14 ms
04.11 03:15:07 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:15:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:15:16 TIME: user.ping 0.13 ms
04.11 03:15:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:15:23 TIMER: Check auto-disconnect...
04.11 03:15:23 STATS: vdl.0 cache, locks:4
04.11 03:15:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:15:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:15:27 TIME: user.ping 0.14 ms
04.11 03:15:32 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:15:32 TIME: user.ping 0.17 ms
04.11 03:15:32 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:15:36 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 46 }
04.11 03:15:36 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:15:36 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:15:36 STATS: vdl.0 cache connection, 41 calls, total 0.130588293075562 sec spent, avg 3.19 ms
04.11 03:15:36 ->>-: vdl/cache.battle.makeTurn { userId => 107, roomId => 46, _type => vdl/cache.battle.makeTurn }
04.11 03:15:36 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:15:36 TIME: battle.sendtask 3.01 ms
04.11 03:15:36 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:15:36 == NET: uid116 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 46 }
04.11 03:15:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:15:39 TIME: user.ping 0.17 ms
04.11 03:15:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:15:51 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:15:51 TIME: user.ping 0.15 ms
04.11 03:15:51 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:15:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:15:56 TIME: user.ping 0.21 ms
04.11 03:15:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:16:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:16:03 TIME: user.ping 0.17 ms
04.11 03:16:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:16:14 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:16:14 TIME: user.ping 0.19 ms
04.11 03:16:14 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:16:20 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:16:20 TIME: user.ping 0.17 ms
04.11 03:16:20 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:16:23 TIMER: Check auto-disconnect...
04.11 03:16:23 STATS: vdl.0 cache, locks:4
04.11 03:16:26 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:16:26 TIME: user.ping 0.17 ms
04.11 03:16:26 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:16:37 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:16:37 TIME: user.ping 0.19 ms
04.11 03:16:37 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:16:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:16:44 TIME: user.ping 0.15 ms
04.11 03:16:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:16:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:16:49 TIME: user.ping 0.19 ms
04.11 03:16:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:01 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:01 TIME: user.ping 0.2 ms
04.11 03:17:01 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:07 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:07 TIME: user.ping 0.2 ms
04.11 03:17:07 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:12 TIME: user.ping 0.15 ms
04.11 03:17:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:23 TIMER: Check auto-disconnect...
04.11 03:17:23 STATS: vdl.0 cache, locks:4
04.11 03:17:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:24 TIME: user.ping 0.18 ms
04.11 03:17:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:31 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:31 TIME: user.ping 0.14 ms
04.11 03:17:31 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:36 TIME: user.ping 0.2 ms
04.11 03:17:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:41 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 46 }
04.11 03:17:41 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:17:41 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:17:41 STATS: vdl.0 cache connection, 43 calls, total 0.13198447227478 sec spent, avg 3.07 ms
04.11 03:17:41 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 46, _type => vdl/cache.battle.makeTurn }
04.11 03:17:41 -<<-: vdl/cache.battle.makeTurn { errorCode => _requestException, _type => vdl/cache.battle.makeTurn }
04.11 03:17:41 TRACE: battle.sendtask : cacheRequest exception { userId => 116, roomId => 46, _type => vdl/cache.battle.makeTurn }
04.11 03:17:41 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 429
Called from modules/VDLBattleModule.hx line 263
Called from modules/VDLBattleModule.hx line 61
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1176
04.11 03:17:41 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 46 }
04.11 03:17:47 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:47 TIME: user.ping 0.19 ms
04.11 03:17:47 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:54 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 46 }
04.11 03:17:54 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:17:54 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:17:54 TIME: battle.sendtask 0.58 ms
04.11 03:17:54 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [2,1,0,0,2,3], errorCode => ok }
04.11 03:17:54 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:17:54 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [2,1,0,0,2,3], errorCode => ok }
04.11 03:17:55 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:55 TIME: user.ping 0.18 ms
04.11 03:17:55 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:17:59 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:17:59 TIME: user.ping 0.19 ms
04.11 03:17:59 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:18:02 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [3,9], name => swap, side => 2, messageType => battle.sendtask, to => [4,9], battleId => 46 }
04.11 03:18:02 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:18:02 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:18:02 TIME: battle.sendtask 1.18 ms
04.11 03:18:02 == NET: uid107 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,-3,3],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,5,5,5,5,10,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [2,1,0,0,2,3], errorCode => cannotSwap }
04.11 03:18:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:18:12 TIME: user.ping 0.17 ms
04.11 03:18:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:18:15 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 46 }
04.11 03:18:15 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:18:15 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:18:15 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 46 }
04.11 03:18:15 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:18:15 TIME: battle.sendtask 3.58 ms
04.11 03:18:15 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:18:15 == NET: uid116 ret: battle.task { dice => 3, from => [7,4], name => swap, side => 2, type => battle.task, dices => [2,1,0,0,2], messageType => battle.sendtask, to => [8,4], battleId => 46 }
04.11 03:18:19 ++ NET: uid107 req: battle.sendtask { dice => 2, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 46 }
04.11 03:18:19 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:18:19 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:18:19 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 46 }
04.11 03:18:19 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:18:19 TIME: battle.sendtask 3.29 ms
04.11 03:18:19 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:18:19 == NET: uid116 ret: battle.task { dice => 2, from => [7,4], name => swap, side => 2, type => battle.task, dices => [1,0,0,2], messageType => battle.sendtask, to => [8,4], battleId => 46 }
04.11 03:18:20 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:18:20 TIME: user.ping 0.15 ms
04.11 03:18:20 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:18:23 TIMER: Check auto-disconnect...
04.11 03:18:23 STATS: vdl.0 cache, locks:4
04.11 03:18:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:18:25 TIME: user.ping 0.16 ms
04.11 03:18:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:18:31 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 46 }
04.11 03:18:31 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:18:31 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:18:31 TIME: battle.sendtask 0.6 ms
04.11 03:18:31 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => cannotSkip }
04.11 03:18:38 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:18:38 TIME: user.ping 0.18 ms
04.11 03:18:38 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:18:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:18:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:18:44 TIME: user.ping 0.17 ms
04.11 03:18:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:18:50 TIME: user.ping 0.13 ms
04.11 03:18:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:19:13 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:19:13 -<<-: server.login ok
04.11 03:19:13 DB: SELECT * FROM LocalizationStrings
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 TIMER: Starting timer...
04.11 03:19:13 TIMER: Timer running...
04.11 03:19:13 DB: SELECT * FROM GameVars
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:19:13 -<<-: core/quest.getDaily ok
04.11 03:19:13 DB: SELECT * FROM UserAttributeTypes
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM UserVariableTypes
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:19:13 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM ItemGroups
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 SHOP: loading items...
04.11 03:19:13 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 03:19:13 -<<-: core/shop.getList ok
04.11 03:19:13 SHOP: 0 items loaded (0.001 sec)
04.11 03:19:13 DB: SELECT * FROM EffectAttributeTypes
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM Effects
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:19:13 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:19:13 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:13 DB: SELECT * FROM Badges
04.11 03:19:13 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:19:13 -<<-: core/server.query ok
04.11 03:19:35 NET: Client (conid:94853007) connected to vdl.0 (clients:1)
04.11 03:19:36 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 03:19:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:19:36 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:19:36 -<<-: core/server.query ok
04.11 03:19:36 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:19:36 -<<-: core/user.isOnlineID ok
04.11 03:19:36 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:19:36 -<<-: core/cache.get ok
04.11 03:19:36 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:19:36 -<<-: core/cache.get ok
04.11 03:19:36 NET: Client login (conid:94853007, id:107, name:uid107)
04.11 03:19:36 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:19:36 -<<-: core/user.loginPost null
04.11 03:19:36 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 03:19:36 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 03:19:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:19:40 TIME: user.ping 0.18 ms
04.11 03:19:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:19:43 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:19:43 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:19:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:19:48 TIME: user.ping 0.17 ms
04.11 03:19:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:19:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:19:56 TIME: user.ping 0.15 ms
04.11 03:19:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:19:56 NET: Client (conid:84388574) connected to vdl.0 (clients:2)
04.11 03:20:00 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 03:20:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:20:00 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:20:00 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:20:00 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:20:00 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:20:00 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:20:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:20:00 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:20:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:20:00 NET: Client login (conid:84388574, id:116, name:uid116)
04.11 03:20:00 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:20:00 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 03:20:00 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 03:20:00 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 03:20:00 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 03:20:00 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 03:20:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:20:03 TIME: user.ping 0.16 ms
04.11 03:20:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:20:08 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:20:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:20:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:20:11 TIME: user.ping 0.17 ms
04.11 03:20:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:20:13 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:20:13 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:20:13 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:20:13 TIME: battle.find 0.58 ms
04.11 03:20:13 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:20:13 TIMER: Check auto-disconnect...
04.11 03:20:13 STATS: vdl.0 cache, locks:4
04.11 03:20:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:20:14 TIME: user.ping 0.21 ms
04.11 03:20:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:20:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:20:19 TIME: user.ping 0.16 ms
04.11 03:20:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:20:20 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:20:20 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:20:20 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 47, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:20:20 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 47, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:20:20 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:20:20 STATS: vdl.0 cache connection, 34 calls, total 0.116226673126221 sec spent, avg 3.42 ms
04.11 03:20:20 TIME: battle.find 45.19 ms
04.11 03:20:20 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:20:20 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 47, player => 2 }, type => battle.enemy }
04.11 03:20:20 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 47, player => 1 }, type => battle.enemy }
04.11 03:20:31 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:20:31 TIME: user.ping 0.15 ms
04.11 03:20:31 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:20:36 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 47 }
04.11 03:20:36 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:20:36 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:20:36 TIME: battle.sendtask 0.62 ms
04.11 03:20:36 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [1,3,4,1,5,0], errorCode => ok, _type => battle.task }
04.11 03:20:36 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:20:36 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [1,3,4,1,5,0], errorCode => ok }
04.11 03:20:40 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:20:40 TIME: user.ping 0.17 ms
04.11 03:20:40 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:20:42 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 47 }
04.11 03:20:42 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:20:42 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:20:42 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:20:42 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:20:42 TIME: battle.sendtask 3.38 ms
04.11 03:20:42 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:20:42 == NET: uid116 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [1,3,4,1,0], messageType => battle.sendtask, to => [8,3], battleId => 47 }
04.11 03:20:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:20:46 TIME: user.ping 0.14 ms
04.11 03:20:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:20:48 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 47 }
04.11 03:20:48 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:20:48 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:20:48 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:20:48 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:20:48 TIME: battle.sendtask 3.8 ms
04.11 03:20:48 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:20:48 == NET: uid116 ret: battle.task { dice => 3, from => [8,3], name => swap, side => 2, type => battle.task, dices => [1,4,1,0], messageType => battle.sendtask, to => [9,3], battleId => 47 }
04.11 03:21:01 ++ NET: uid107 req: battle.sendtask { dice => 1, from => [9,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 47 }
04.11 03:21:01 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:21:01 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:21:01 TIME: battle.sendtask 2.67 ms
04.11 03:21:01 == NET: uid107 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,5,5,5,5,10,0,0],[0,0,0,-3,0,0,0,0,0,0],[0,0,0,3,0,0,0,0,0,0]], type => battle.sendtask, dices => [1,4,1,0], errorCode => cannotSwap }
04.11 03:21:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:21:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:21:03 TIME: user.ping 0.16 ms
04.11 03:21:06 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:21:06 TIME: user.ping 0.17 ms
04.11 03:21:06 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:21:13 TIMER: Check auto-disconnect...
04.11 03:21:13 STATS: vdl.0 cache, locks:4
04.11 03:21:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:21:18 TIME: user.ping 0.18 ms
04.11 03:21:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:21:30 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:21:30 TIME: user.ping 0.2 ms
04.11 03:21:30 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:21:54 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:21:54 TIME: user.ping 0.19 ms
04.11 03:21:54 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:22:13 TIMER: Check auto-disconnect...
04.11 03:22:13 STATS: vdl.0 cache, locks:4
04.11 03:22:14 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:22:14 TIME: user.ping 0.14 ms
04.11 03:22:14 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:22:19 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:22:19 TIME: user.ping 0.16 ms
04.11 03:22:19 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:22:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:22:30 TIME: user.ping 0.16 ms
04.11 03:22:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:22:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:22:44 TIME: user.ping 0.17 ms
04.11 03:22:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:22:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:22:46 TIME: user.ping 0.19 ms
04.11 03:22:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:23:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:23:02 TIME: user.ping 0.14 ms
04.11 03:23:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:23:07 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 47 }
04.11 03:23:07 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:07 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:23:07 STATS: vdl.0 cache connection, 41 calls, total 0.121728897094727 sec spent, avg 2.97 ms
04.11 03:23:07 ->>-: vdl/cache.battle.makeTurn { userId => 107, roomId => 47, _type => vdl/cache.battle.makeTurn }
04.11 03:23:07 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:23:07 TIME: battle.sendtask 2.67 ms
04.11 03:23:07 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:23:07 == NET: uid116 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 47 }
04.11 03:23:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:23:09 TIME: user.ping 0.19 ms
04.11 03:23:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:23:13 TIMER: Check auto-disconnect...
04.11 03:23:13 STATS: vdl.0 cache, locks:4
04.11 03:23:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:23:18 TIME: user.ping 0.15 ms
04.11 03:23:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:23:33 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:23:33 TIME: user.ping 0.17 ms
04.11 03:23:33 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:23:33 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:23:33 TIME: user.ping 0.2 ms
04.11 03:23:33 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:23:33 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 47 }
04.11 03:23:33 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:33 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:33 TIME: battle.sendtask 0.58 ms
04.11 03:23:33 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,5,4,2,4,5], errorCode => ok, _type => battle.task }
04.11 03:23:33 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [2,5,4,2,4,5], errorCode => ok }
04.11 03:23:33 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:23:40 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [2,6], name => swap, side => 1, messageType => battle.sendtask, to => [1,6], battleId => 47 }
04.11 03:23:40 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:40 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:40 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:23:40 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:23:40 TIME: battle.sendtask 3.47 ms
04.11 03:23:40 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:23:40 == NET: uid107 ret: battle.task { dice => 5, from => [2,6], name => swap, side => 1, type => battle.task, dices => [2,4,2,4,5], messageType => battle.sendtask, to => [1,6], battleId => 47 }
04.11 03:23:43 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [1,6], name => swap, side => 1, messageType => battle.sendtask, to => [0,6], battleId => 47 }
04.11 03:23:43 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:43 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:43 ->>-: vdl/cache.battle.setScores { scores => [0,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:23:43 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:23:43 TIME: battle.sendtask 3.05 ms
04.11 03:23:43 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:23:43 == NET: uid107 ret: battle.task { dice => 5, from => [1,6], name => swap, side => 1, type => battle.task, dices => [2,4,2,4], messageType => battle.sendtask, to => [0,6], battleId => 47 }
04.11 03:23:49 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 47 }
04.11 03:23:49 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:49 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:49 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 47, _type => vdl/cache.battle.makeTurn }
04.11 03:23:49 -<<-: vdl/cache.battle.makeTurn { errorCode => _requestException, _type => vdl/cache.battle.makeTurn }
04.11 03:23:49 TRACE: battle.sendtask : cacheRequest exception { userId => 116, roomId => 47, _type => vdl/cache.battle.makeTurn }
04.11 03:23:49 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 429
Called from modules/VDLBattleModule.hx line 263
Called from modules/VDLBattleModule.hx line 61
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1176
04.11 03:23:49 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 47 }
04.11 03:23:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:23:49 TIME: user.ping 0.15 ms
04.11 03:23:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:23:56 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 47 }
04.11 03:23:56 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:56 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:56 TIME: battle.sendtask 0.63 ms
04.11 03:23:56 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,2,3,1,3,5], errorCode => ok, _type => battle.task }
04.11 03:23:56 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [5,2,3,1,3,5], errorCode => ok }
04.11 03:23:56 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:23:58 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:23:58 TIME: user.ping 0.15 ms
04.11 03:23:58 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:24:06 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:24:06 TIME: user.ping 0.14 ms
04.11 03:24:06 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:24:08 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [9,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 47 }
04.11 03:24:08 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:08 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:08 STATS: vdl.0 cache connection, 51 calls, total 0.126904010772705 sec spent, avg 2.49 ms
04.11 03:24:08 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:24:08 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:24:08 TIME: battle.sendtask 7.74 ms
04.11 03:24:08 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:24:08 == NET: uid116 ret: battle.task { dice => 3, from => [9,3], name => swap, side => 2, type => battle.task, dices => [5,2,1,3,5], messageType => battle.sendtask, to => [9,4], battleId => 47 }
04.11 03:24:13 TIMER: Check auto-disconnect...
04.11 03:24:13 STATS: vdl.0 cache, locks:4
04.11 03:24:18 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [7,2], name => swap, side => 2, messageType => battle.sendtask, to => [8,2], battleId => 47 }
04.11 03:24:18 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:18 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:18 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:24:18 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:24:18 TIME: battle.sendtask 1.84 ms
04.11 03:24:18 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:24:18 == NET: uid116 ret: battle.task { dice => 3, from => [7,2], name => swap, side => 2, type => battle.task, dices => [5,2,1,5], messageType => battle.sendtask, to => [8,2], battleId => 47 }
04.11 03:24:21 ++ NET: uid107 req: battle.sendtask { dice => 1, from => [8,2], name => swap, side => 2, messageType => battle.sendtask, to => [7,2], battleId => 47 }
04.11 03:24:21 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:21 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:21 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:24:21 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:24:21 TIME: battle.sendtask 3.45 ms
04.11 03:24:21 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:24:21 == NET: uid116 ret: battle.task { dice => 1, from => [8,2], name => swap, side => 2, type => battle.task, dices => [5,2,5], messageType => battle.sendtask, to => [7,2], battleId => 47 }
04.11 03:24:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:24:23 TIME: user.ping 0.14 ms
04.11 03:24:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:24:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:24:23 TIME: user.ping 0.15 ms
04.11 03:24:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:24:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:24:39 TIME: user.ping 0.18 ms
04.11 03:24:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:24:48 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:24:48 TIME: user.ping 0.19 ms
04.11 03:24:48 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:24:54 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,6], name => swap, side => 2, messageType => battle.sendtask, to => [8,6], battleId => 47 }
04.11 03:24:54 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:54 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:54 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:24:54 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:24:54 TIME: battle.sendtask 2.85 ms
04.11 03:24:54 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:24:54 == NET: uid116 ret: battle.task { dice => 5, from => [7,6], name => swap, side => 2, type => battle.task, dices => [2,5], messageType => battle.sendtask, to => [8,6], battleId => 47 }
04.11 03:24:55 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [0,6], name => swap, side => 2, messageType => battle.sendtask, to => [1,6], battleId => 47 }
04.11 03:24:55 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:55 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:55 TIME: battle.sendtask 1.76 ms
04.11 03:24:55 == NET: uid107 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,5,5,5,0,10,0,0],[0,0,0,0,0,0,5,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [2,5], errorCode => cannotSwap }
04.11 03:24:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:24:56 TIME: user.ping 0.13 ms
04.11 03:24:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:25:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:25:12 TIME: user.ping 0.18 ms
04.11 03:25:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:25:13 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:25:13 TIME: user.ping 0.18 ms
04.11 03:25:13 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:25:13 TIMER: Check auto-disconnect...
04.11 03:25:13 STATS: vdl.0 cache, locks:4
04.11 03:25:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:25:28 TIME: user.ping 0.2 ms
04.11 03:25:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:25:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:25:37 TIME: user.ping 0.15 ms
04.11 03:25:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:25:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:25:44 TIME: user.ping 0.2 ms
04.11 03:25:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:25:53 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 47 }
04.11 03:25:53 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:25:53 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:25:53 STATS: vdl.0 cache connection, 60 calls, total 0.131102085113525 sec spent, avg 2.19 ms
04.11 03:25:53 TIME: battle.sendtask 0.93 ms
04.11 03:25:53 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => cannotSkip }
04.11 03:26:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:26:00 TIME: user.ping 0.19 ms
04.11 03:26:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:26:02 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:26:02 TIME: user.ping 0.18 ms
04.11 03:26:02 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:26:13 TIMER: Check auto-disconnect...
04.11 03:26:13 STATS: vdl.0 cache, locks:4
04.11 03:26:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:26:16 TIME: user.ping 0.17 ms
04.11 03:26:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:26:26 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:26:26 TIME: user.ping 0.15 ms
04.11 03:26:26 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:26:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:26:32 TIME: user.ping 0.16 ms
04.11 03:26:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:26:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:26:49 TIME: user.ping 0.17 ms
04.11 03:26:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:27:05 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:27:05 -<<-: server.login ok
04.11 03:27:05 DB: SELECT * FROM LocalizationStrings
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 TIMER: Starting timer...
04.11 03:27:05 TIMER: Timer running...
04.11 03:27:05 DB: SELECT * FROM GameVars
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:27:05 -<<-: core/quest.getDaily ok
04.11 03:27:05 DB: SELECT * FROM UserAttributeTypes
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM UserVariableTypes
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:27:05 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM ItemGroups
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 SHOP: loading items...
04.11 03:27:05 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 03:27:05 -<<-: core/shop.getList ok
04.11 03:27:05 SHOP: 0 items loaded (0.004 sec)
04.11 03:27:05 DB: SELECT * FROM EffectAttributeTypes
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM Effects
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:27:05 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:27:05 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:05 DB: SELECT * FROM Badges
04.11 03:27:05 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:27:05 -<<-: core/server.query ok
04.11 03:27:21 NET: Client (conid:76983634) connected to vdl.0 (clients:1)
04.11 03:27:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:27:25 TRACE: User not logon yet.
04.11 03:27:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:27:41 TRACE: User not logon yet.
04.11 03:27:46 NET: Client (name:null conid:76983634 TCP) disconnected from vdl.0 (clients:0)
04.11 03:28:05 TIMER: Check auto-disconnect...
04.11 03:28:05 STATS: vdl.0 cache, locks:0
04.11 03:28:07 NET: Client (conid:88134147) connected to vdl.0 (clients:1)
04.11 03:28:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:28:13 TRACE: User not logon yet.
04.11 03:28:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:28:39 TRACE: User not logon yet.
04.11 03:29:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:29:04 TRACE: User not logon yet.
04.11 03:29:23 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:29:23 -<<-: server.login ok
04.11 03:29:23 DB: SELECT * FROM LocalizationStrings
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 TIMER: Starting timer...
04.11 03:29:23 TIMER: Timer running...
04.11 03:29:23 DB: SELECT * FROM GameVars
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:29:23 -<<-: core/quest.getDaily ok
04.11 03:29:23 DB: SELECT * FROM UserAttributeTypes
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM UserVariableTypes
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:29:23 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM ItemGroups
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 SHOP: loading items...
04.11 03:29:23 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 03:29:23 -<<-: core/shop.getList ok
04.11 03:29:23 SHOP: 0 items loaded (0.001 sec)
04.11 03:29:23 DB: SELECT * FROM EffectAttributeTypes
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM Effects
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:29:23 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:29:23 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 DB: SELECT * FROM Badges
04.11 03:29:23 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:29:23 -<<-: core/server.query ok
04.11 03:29:23 TIMER: Check auto-disconnect...
04.11 03:29:23 STATS: vdl.0 cache, locks:0
04.11 03:29:23 NET: Client (conid:20390698) connected to vdl.0 (clients:1)
04.11 03:30:30 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:30:30 TRACE: User not logon yet.
04.11 03:30:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:30:56 TRACE: User not logon yet.
04.11 03:31:21 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:31:21 TRACE: User not logon yet.
04.11 03:31:23 TIMER: Check auto-disconnect...
04.11 03:31:23 STATS: vdl.0 cache, locks:0
04.11 03:31:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:31:47 TRACE: User not logon yet.
04.11 03:32:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:32:13 TRACE: User not logon yet.
04.11 03:32:23 TIMER: Check auto-disconnect...
04.11 03:32:23 STATS: vdl.0 cache, locks:0
04.11 03:32:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:32:39 TRACE: User not logon yet.
04.11 03:33:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:33:05 TRACE: User not logon yet.
04.11 03:33:23 TIMER: Check auto-disconnect...
04.11 03:33:23 STATS: vdl.0 cache, locks:0
04.11 03:33:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:33:31 TRACE: User not logon yet.
04.11 03:33:35 NET: Client (name:null conid:20390698 TCP) disconnected from vdl.0 (clients:0)
04.11 03:33:36 NET: Client (conid:26726523) connected to vdl.0 (clients:1)
04.11 03:33:37 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 03:33:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:33:37 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:33:37 -<<-: core/server.query ok
04.11 03:33:37 STATS: vdl.0 cache connection, 21 calls, total 0.0716288089752197 sec spent, avg 3.41 ms
04.11 03:33:37 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:33:37 -<<-: core/user.isOnlineID ok
04.11 03:33:37 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:33:37 -<<-: core/cache.get ok
04.11 03:33:37 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:33:37 -<<-: core/cache.get ok
04.11 03:33:37 NET: Client login (conid:26726523, id:107, name:uid107)
04.11 03:33:37 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:33:37 -<<-: core/user.loginPost null
04.11 03:33:37 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 03:33:37 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 03:33:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:33:41 TIME: user.ping 0.14 ms
04.11 03:33:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:33:43 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:33:43 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:33:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:33:50 TIME: user.ping 0.13 ms
04.11 03:33:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:33:58 NET: Client (conid:49202624) connected to vdl.0 (clients:2)
04.11 03:33:59 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:33:59 TIME: user.ping 0.2 ms
04.11 03:33:59 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:34:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 03:34:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:34:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:34:02 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:34:02 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:34:02 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:34:02 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:34:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:34:02 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:34:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:34:02 NET: Client login (conid:49202624, id:116, name:uid116)
04.11 03:34:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:34:02 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 03:34:02 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 03:34:02 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 03:34:02 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 03:34:02 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 03:34:08 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:34:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:34:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:34:09 TIME: user.ping 0.16 ms
04.11 03:34:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:34:15 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:34:15 TIME: user.ping 0.19 ms
04.11 03:34:15 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:34:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:34:18 TIME: user.ping 0.16 ms
04.11 03:34:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:34:23 TIMER: Check auto-disconnect...
04.11 03:34:23 STATS: vdl.0 cache, locks:4
04.11 03:34:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:34:27 TIME: user.ping 0.15 ms
04.11 03:34:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:34:35 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:34:35 TIME: user.ping 0.2 ms
04.11 03:34:35 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:34:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:34:36 TIME: user.ping 0.15 ms
04.11 03:34:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:34:37 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:34:37 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:34:37 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:34:37 STATS: vdl.0 cache connection, 33 calls, total 0.0892789363861084 sec spent, avg 2.71 ms
04.11 03:34:37 TIME: battle.find 0.67 ms
04.11 03:34:37 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:34:42 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:34:42 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:34:42 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 48, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:34:42 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 48, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:34:42 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:34:42 TIME: battle.find 33.95 ms
04.11 03:34:42 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:34:42 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 48, player => 1 }, type => battle.enemy }
04.11 03:34:42 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 48, player => 2 }, type => battle.enemy }
04.11 03:34:47 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:34:47 TIME: user.ping 0.26 ms
04.11 03:34:47 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:34:49 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 48 }
04.11 03:34:49 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:34:49 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:34:49 TIME: battle.sendtask 0.67 ms
04.11 03:34:49 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,0,5,1,4,5], errorCode => ok, _type => battle.task }
04.11 03:34:49 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [0,0,5,1,4,5], errorCode => ok }
04.11 03:34:49 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:34:54 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 48 }
04.11 03:34:54 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:34:54 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:34:54 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 48 }
04.11 03:34:54 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:34:54 TIME: battle.sendtask 3.59 ms
04.11 03:34:54 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:34:54 == NET: uid116 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [0,0,1,4,5], messageType => battle.sendtask, to => [8,3], battleId => 48 }
04.11 03:35:00 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 48 }
04.11 03:35:00 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:35:00 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:35:00 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 48 }
04.11 03:35:00 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:35:00 TIME: battle.sendtask 2.89 ms
04.11 03:35:00 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:35:00 == NET: uid116 ret: battle.task { dice => 5, from => [8,3], name => swap, side => 2, type => battle.task, dices => [0,0,1,4], messageType => battle.sendtask, to => [9,3], battleId => 48 }
04.11 03:35:02 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:35:02 TIME: user.ping 0.2 ms
04.11 03:35:02 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:35:04 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 48 }
04.11 03:35:04 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:35:04 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:35:04 ->>-: vdl/cache.battle.makeTurn { userId => 107, roomId => 48, _type => vdl/cache.battle.makeTurn }
04.11 03:35:04 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 03:35:04 TIME: battle.sendtask 1.21 ms
04.11 03:35:04 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:35:04 == NET: uid116 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 48 }
04.11 03:35:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:35:04 TIME: user.ping 0.11 ms
04.11 03:35:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:35:09 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 48 }
04.11 03:35:09 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:35:09 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:35:09 TIME: battle.sendtask 0.68 ms
04.11 03:35:09 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [3,3,2,0,1,0], errorCode => ok, _type => battle.task }
04.11 03:35:09 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:35:09 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [3,3,2,0,1,0], errorCode => ok }
04.11 03:35:17 ++ NET: uid116 req: battle.sendtask { dice => 3, from => [9,3], name => swap, side => 1, messageType => battle.sendtask, to => [8,3], battleId => 48 }
04.11 03:35:17 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:35:17 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:35:17 TIME: battle.sendtask 1.35 ms
04.11 03:35:17 == NET: uid116 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,5,5,5,5,10,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [3,3,2,0,1,0], errorCode => cannotSwap }
04.11 03:35:20 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:35:20 TIME: user.ping 0.15 ms
04.11 03:35:20 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:35:23 TIMER: Check auto-disconnect...
04.11 03:35:23 STATS: vdl.0 cache, locks:4
04.11 03:35:28 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:35:28 TIME: user.ping 0.17 ms
04.11 03:35:28 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:35:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:35:36 TIME: user.ping 0.23 ms
04.11 03:35:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:35:52 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:35:52 TIME: user.ping 0.2 ms
04.11 03:35:52 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:35:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:35:52 TIME: user.ping 0.2 ms
04.11 03:35:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:36:08 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:36:08 TIME: user.ping 0.17 ms
04.11 03:36:08 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:36:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:36:16 TIME: user.ping 0.14 ms
04.11 03:36:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:36:23 TIMER: Check auto-disconnect...
04.11 03:36:23 STATS: vdl.0 cache, locks:4
04.11 03:36:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:36:24 TIME: user.ping 0.17 ms
04.11 03:36:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:36:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:36:40 TIME: user.ping 0.18 ms
04.11 03:36:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:36:41 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:36:41 TIME: user.ping 0.15 ms
04.11 03:36:41 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:36:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:36:56 TIME: user.ping 0.21 ms
04.11 03:36:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:37:05 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:37:05 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:37:05 TIME: user.ping 0.18 ms
04.11 03:37:08 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 48 }
04.11 03:37:08 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:37:08 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:37:08 STATS: vdl.0 cache connection, 44 calls, total 0.128228664398193 sec spent, avg 2.91 ms
04.11 03:37:08 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 48, _type => vdl/cache.battle.makeTurn }
04.11 03:37:08 -<<-: vdl/cache.battle.makeTurn { errorCode => _requestException, _type => vdl/cache.battle.makeTurn }
04.11 03:37:08 TRACE: battle.sendtask : cacheRequest exception { userId => 116, roomId => 48, _type => vdl/cache.battle.makeTurn }
04.11 03:37:08 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 431
Called from modules/VDLBattleModule.hx line 265
Called from modules/VDLBattleModule.hx line 63
Called from modules/VDLBattleModule.hx line 42
Called from snipe/slave/Server.hx line 1176
04.11 03:37:08 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 48 }
04.11 03:37:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:37:12 TIME: user.ping 0.19 ms
04.11 03:37:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:37:18 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 48 }
04.11 03:37:18 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:37:18 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:37:18 TIME: battle.sendtask 0.48 ms
04.11 03:37:18 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,2,0,4,4,5], errorCode => ok, _type => null }
04.11 03:37:18 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [0,2,0,4,4,5], errorCode => ok }
04.11 03:37:18 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:37:23 TIMER: Check auto-disconnect...
04.11 03:37:23 STATS: vdl.0 cache, locks:4
04.11 03:37:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:37:28 TIME: user.ping 0.14 ms
04.11 03:37:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:37:29 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [9,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 48 }
04.11 03:37:29 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:37:29 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:37:29 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 48 }
04.11 03:37:29 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:37:29 TIME: battle.sendtask 4.21 ms
04.11 03:37:29 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:37:29 == NET: uid116 ret: battle.task { dice => 5, from => [9,3], name => swap, side => 2, type => battle.task, dices => [0,2,0,4,4], messageType => battle.sendtask, to => [9,4], battleId => 48 }
04.11 03:37:29 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:37:29 TIME: user.ping 0.18 ms
04.11 03:37:29 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:37:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:37:44 TIME: user.ping 0.15 ms
04.11 03:37:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:37:55 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:37:55 TIME: user.ping 0.18 ms
04.11 03:37:55 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:38:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:38:00 TIME: user.ping 0.19 ms
04.11 03:38:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:38:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:38:16 TIME: user.ping 0.18 ms
04.11 03:38:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:38:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:38:21 TIME: user.ping 0.22 ms
04.11 03:38:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:38:23 TIMER: Check auto-disconnect...
04.11 03:38:23 STATS: vdl.0 cache, locks:4
04.11 03:38:27 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 48 }
04.11 03:38:27 ->>-: vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:38:27 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:38:27 STATS: vdl.0 cache connection, 49 calls, total 0.130993843078613 sec spent, avg 2.67 ms
04.11 03:38:27 TIME: battle.sendtask 0.96 ms
04.11 03:38:27 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => cannotSkip }
04.11 03:38:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:38:32 TIME: user.ping 0.15 ms
04.11 03:38:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:38:48 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:38:48 TIME: user.ping 0.17 ms
04.11 03:38:48 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:38:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:38:48 TIME: user.ping 0.17 ms
04.11 03:38:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:39:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:39:03 TIME: user.ping 0.19 ms
04.11 03:39:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:39:13 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:39:13 TIME: user.ping 0.21 ms
04.11 03:39:13 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:39:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:39:19 TIME: user.ping 0.19 ms
04.11 03:39:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:39:23 TIMER: Check auto-disconnect...
04.11 03:39:23 STATS: vdl.0 cache, locks:4
04.11 03:39:34 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:39:34 TIME: user.ping 0.19 ms
04.11 03:39:34 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:39:54 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:39:54 -<<-: server.login ok
04.11 03:39:54 DB: SELECT * FROM LocalizationStrings
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 TIMER: Starting timer...
04.11 03:39:54 TIMER: Timer running...
04.11 03:39:54 DB: SELECT * FROM GameVars
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:39:54 -<<-: core/quest.getDaily ok
04.11 03:39:54 DB: SELECT * FROM UserAttributeTypes
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM UserVariableTypes
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:39:54 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM ItemGroups
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 SHOP: loading items...
04.11 03:39:54 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 03:39:54 -<<-: core/shop.getList ok
04.11 03:39:54 SHOP: 0 items loaded (0.001 sec)
04.11 03:39:54 DB: SELECT * FROM EffectAttributeTypes
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM Effects
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:39:54 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:39:54 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:39:54 DB: SELECT * FROM Badges
04.11 03:39:54 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:39:54 -<<-: core/server.query ok
04.11 03:40:06 NET: Client (conid:673333) connected to vdl.0 (clients:1)
04.11 03:40:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:40:10 TRACE: User not logon yet.
04.11 03:40:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:40:26 TRACE: User not logon yet.
04.11 03:40:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:40:42 TRACE: User not logon yet.
04.11 03:40:53 NET: Client (conid:45010020) connected to vdl.0 (clients:2)
04.11 03:40:54 TIMER: Check auto-disconnect...
04.11 03:40:54 STATS: vdl.0 cache, locks:0
04.11 03:40:57 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:40:57 TRACE: User not logon yet.
04.11 03:41:15 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:41:15 -<<-: server.login ok
04.11 03:41:15 DB: SELECT * FROM LocalizationStrings
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 TIMER: Starting timer...
04.11 03:41:15 TIMER: Timer running...
04.11 03:41:15 DB: SELECT * FROM GameVars
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:41:15 -<<-: core/quest.getDaily ok
04.11 03:41:15 DB: SELECT * FROM UserAttributeTypes
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM UserVariableTypes
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:41:15 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM ItemGroups
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 SHOP: loading items...
04.11 03:41:15 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 03:41:15 -<<-: core/shop.getList ok
04.11 03:41:15 SHOP: 0 items loaded (0 sec)
04.11 03:41:15 DB: SELECT * FROM EffectAttributeTypes
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM Effects
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:41:15 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:41:15 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:15 DB: SELECT * FROM Badges
04.11 03:41:15 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:41:15 -<<-: core/server.query ok
04.11 03:41:28 NET: Client (conid:14924040) connected to vdl.0 (clients:1)
04.11 03:41:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:41:32 TRACE: User not logon yet.
04.11 03:41:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:41:48 TRACE: User not logon yet.
04.11 03:41:48 NET: Client (name:null conid:14924040 TCP) disconnected from vdl.0 (clients:0)
04.11 03:41:54 NET: Client (conid:13321817) connected to vdl.0 (clients:1)
04.11 03:41:54 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 03:41:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:41:54 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:41:54 -<<-: core/server.query ok
04.11 03:41:54 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:41:54 -<<-: core/user.isOnlineID ok
04.11 03:41:54 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:41:54 -<<-: core/cache.get ok
04.11 03:41:54 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:41:54 -<<-: core/cache.get ok
04.11 03:41:54 NET: Client login (conid:13321817, id:107, name:uid107)
04.11 03:41:54 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:41:54 -<<-: core/user.loginPost null
04.11 03:41:54 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 03:41:54 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 03:41:59 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:41:59 TIME: user.ping 0.2 ms
04.11 03:41:59 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:42:00 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:42:00 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:42:08 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:42:08 TIME: user.ping 0.13 ms
04.11 03:42:08 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:42:15 TIMER: Check auto-disconnect...
04.11 03:42:15 STATS: vdl.0 cache, locks:2
04.11 03:42:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:42:17 TIME: user.ping 0.19 ms
04.11 03:42:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:42:18 NET: Client (conid:63065058) connected to vdl.0 (clients:2)
04.11 03:42:22 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 03:42:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:42:22 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:42:22 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:42:22 STATS: vdl.0 cache connection, 27 calls, total 0.0585553646087646 sec spent, avg 2.17 ms
04.11 03:42:22 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:42:22 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:42:22 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:42:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:42:22 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:42:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:42:22 NET: Client login (conid:63065058, id:116, name:uid116)
04.11 03:42:22 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:42:22 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 03:42:22 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 03:42:22 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 03:42:22 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 03:42:22 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 03:42:26 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:42:26 TIME: user.ping 0.13 ms
04.11 03:42:26 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:42:30 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:42:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:42:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:42:35 TIME: user.ping 0.18 ms
04.11 03:42:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:42:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:42:36 TIME: user.ping 0.15 ms
04.11 03:42:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:42:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:42:44 TIME: user.ping 0.13 ms
04.11 03:42:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:42:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:42:53 TIME: user.ping 0.17 ms
04.11 03:42:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:42:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:42:56 TIME: user.ping 0.44 ms
04.11 03:42:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:02 TIME: user.ping 0.15 ms
04.11 03:43:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:10 TIME: user.ping 0.17 ms
04.11 03:43:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:15 TIMER: Check auto-disconnect...
04.11 03:43:15 STATS: vdl.0 cache, locks:4
04.11 03:43:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:16 TIME: user.ping 0.19 ms
04.11 03:43:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:19 TIME: user.ping 0.14 ms
04.11 03:43:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:28 TIME: user.ping 0.19 ms
04.11 03:43:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:36 TIME: user.ping 0.14 ms
04.11 03:43:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:37 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:37 TIME: user.ping 0.15 ms
04.11 03:43:37 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:46 TIME: user.ping 0.19 ms
04.11 03:43:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:55 TIME: user.ping 0.17 ms
04.11 03:43:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:43:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:43:56 TIME: user.ping 0.21 ms
04.11 03:43:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:04 TIME: user.ping 0.18 ms
04.11 03:44:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:12 TIME: user.ping 0.15 ms
04.11 03:44:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:15 TIMER: Check auto-disconnect...
04.11 03:44:15 STATS: vdl.0 cache, locks:4
04.11 03:44:16 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:16 TIME: user.ping 0.15 ms
04.11 03:44:16 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:21 TIME: user.ping 0.19 ms
04.11 03:44:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:30 TIME: user.ping 0.14 ms
04.11 03:44:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:36 TIME: user.ping 0.2 ms
04.11 03:44:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:39 TIME: user.ping 0.15 ms
04.11 03:44:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:48 TIME: user.ping 0.13 ms
04.11 03:44:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:56 TIME: user.ping 0.14 ms
04.11 03:44:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:44:57 TIME: user.ping 0.18 ms
04.11 03:44:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:44:57 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:44:57 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:44:57 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:44:57 STATS: vdl.0 cache connection, 33 calls, total 0.0731947422027588 sec spent, avg 2.22 ms
04.11 03:44:57 TIME: battle.find 0.61 ms
04.11 03:44:57 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:45:00 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:45:00 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:45:00 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 49, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:45:00 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 49, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:45:00 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:45:00 TIME: battle.find 44.14 ms
04.11 03:45:00 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:45:00 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 49, player => 2 }, type => battle.enemy }
04.11 03:45:00 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 49, player => 1 }, type => battle.enemy }
04.11 03:45:07 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 49 }
04.11 03:45:07 ->>-: vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:07 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:07 TIME: battle.sendtask 0.62 ms
04.11 03:45:07 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,2,3,5,4,1], errorCode => ok, _type => battle.task }
04.11 03:45:07 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [0,2,3,5,4,1], errorCode => ok }
04.11 03:45:07 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:45:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:45:11 TIME: user.ping 0.19 ms
04.11 03:45:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:45:15 TIMER: Check auto-disconnect...
04.11 03:45:15 STATS: vdl.0 cache, locks:4
04.11 03:45:18 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 49 }
04.11 03:45:18 ->>-: vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:18 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:18 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 49 }
04.11 03:45:18 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:45:18 TIME: battle.sendtask 4.13 ms
04.11 03:45:18 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:45:18 == NET: uid116 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [0,2,3,4,1], messageType => battle.sendtask, to => [8,3], battleId => 49 }
04.11 03:45:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:45:23 TIME: user.ping 0.15 ms
04.11 03:45:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:45:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:45:27 TIME: user.ping 0.14 ms
04.11 03:45:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:45:39 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 49 }
04.11 03:45:39 ->>-: vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:39 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:39 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 49 }
04.11 03:45:39 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:45:39 TIME: battle.sendtask 4.07 ms
04.11 03:45:39 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:45:39 == NET: uid116 ret: battle.task { dice => 3, from => [8,3], name => swap, side => 2, type => battle.task, dices => [0,2,4,1], messageType => battle.sendtask, to => [9,3], battleId => 49 }
04.11 03:45:40 ++ NET: uid107 req: battle.sendtask { dice => 2, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 49 }
04.11 03:45:40 ->>-: vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:40 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:40 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 49 }
04.11 03:45:40 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:45:40 TIME: battle.sendtask 2.44 ms
04.11 03:45:40 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:45:40 == NET: uid116 ret: battle.task { dice => 2, from => [8,3], name => swap, side => 2, type => battle.task, dices => [0,4,1], messageType => battle.sendtask, to => [9,3], battleId => 49 }
04.11 03:45:43 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 49 }
04.11 03:45:43 ->>-: vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:43 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:43 ->>-: vdl/cache.battle.makeTurn { userId => 107, roomId => 49, _type => vdl/cache.battle.makeTurn }
04.11 03:45:43 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:45:43 TIME: battle.sendtask 1.13 ms
04.11 03:45:43 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:45:43 == NET: uid116 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 49 }
04.11 03:45:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:45:44 TIME: user.ping 0.13 ms
04.11 03:45:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:45:48 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:45:48 TIME: user.ping 0.16 ms
04.11 03:45:48 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:45:49 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 49 }
04.11 03:45:49 ->>-: vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:49 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:45:49 TIME: battle.sendtask 0.55 ms
04.11 03:45:49 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.task, dices => [5,3,4,2,3,2], errorCode => ok }
04.11 03:45:49 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:45:49 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [5,3,4,2,3,2], errorCode => ok }
04.11 03:45:57 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [9,3], name => swap, side => 1, messageType => battle.sendtask, to => [8,3], battleId => 49 }
04.11 03:45:57 ->>-: vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:57 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:45:57 TIME: battle.sendtask 1.13 ms
04.11 03:45:57 == NET: uid116 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,5,5,5,5,10,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [5,3,4,2,3,2], errorCode => cannotSwap }
04.11 03:46:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:46:00 TIME: user.ping 0.16 ms
04.11 03:46:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:46:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:46:14 TIME: user.ping 0.14 ms
04.11 03:46:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:46:15 TIMER: Check auto-disconnect...
04.11 03:46:15 STATS: vdl.0 cache, locks:4
04.11 03:46:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:46:17 TIME: user.ping 0.19 ms
04.11 03:46:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:46:34 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:46:34 TIME: user.ping 0.19 ms
04.11 03:46:34 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:46:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:46:39 TIME: user.ping 0.17 ms
04.11 03:46:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:46:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:46:50 TIME: user.ping 0.15 ms
04.11 03:46:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:47:04 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:47:04 TIME: user.ping 0.17 ms
04.11 03:47:04 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:47:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:47:07 TIME: user.ping 0.18 ms
04.11 03:47:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:47:15 TIMER: Check auto-disconnect...
04.11 03:47:15 STATS: vdl.0 cache, locks:4
04.11 03:47:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:47:24 TIME: user.ping 0.17 ms
04.11 03:47:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:47:29 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:47:29 TIME: user.ping 0.15 ms
04.11 03:47:29 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:47:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:47:41 TIME: user.ping 0.14 ms
04.11 03:47:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:47:49 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 49 }
04.11 03:47:49 ->>-: vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:47:49 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:47:49 STATS: vdl.0 cache connection, 46 calls, total 0.126222610473633 sec spent, avg 2.74 ms
04.11 03:47:49 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 49, _type => vdl/cache.battle.makeTurn }
04.11 03:47:49 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:47:49 TIME: battle.sendtask 3.08 ms
04.11 03:47:49 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:47:49 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 49 }
04.11 03:47:54 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:47:54 TIME: user.ping 0.14 ms
04.11 03:47:54 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:47:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:47:57 TIME: user.ping 0.17 ms
04.11 03:47:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:48:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:48:13 TIME: user.ping 0.18 ms
04.11 03:48:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:48:15 TIMER: Check auto-disconnect...
04.11 03:48:15 STATS: vdl.0 cache, locks:4
04.11 03:48:18 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:48:18 TIME: user.ping 0.18 ms
04.11 03:48:18 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:48:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:48:29 TIME: user.ping 0.19 ms
04.11 03:48:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:48:42 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:48:42 TIME: user.ping 0.16 ms
04.11 03:48:42 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:48:45 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:48:45 TIME: user.ping 0.19 ms
04.11 03:48:45 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:49:01 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:49:01 TIME: user.ping 0.17 ms
04.11 03:49:01 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:49:06 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:49:06 TIME: user.ping 0.17 ms
04.11 03:49:06 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:49:15 TIMER: Check auto-disconnect...
04.11 03:49:15 STATS: vdl.0 cache, locks:4
04.11 03:49:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:49:17 TIME: user.ping 0.19 ms
04.11 03:49:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:49:29 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:49:29 TIME: user.ping 0.17 ms
04.11 03:49:29 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:49:33 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:49:33 TIME: user.ping 0.18 ms
04.11 03:49:33 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:49:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:49:49 TIME: user.ping 0.18 ms
04.11 03:49:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:50:04 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:50:04 -<<-: server.login ok
04.11 03:50:04 DB: SELECT * FROM LocalizationStrings
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 TIMER: Starting timer...
04.11 03:50:04 TIMER: Timer running...
04.11 03:50:04 DB: SELECT * FROM GameVars
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:50:04 -<<-: core/quest.getDaily ok
04.11 03:50:04 DB: SELECT * FROM UserAttributeTypes
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM UserVariableTypes
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:50:04 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM ItemGroups
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 SHOP: loading items...
04.11 03:50:04 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 03:50:04 -<<-: core/shop.getList ok
04.11 03:50:04 SHOP: 0 items loaded (0 sec)
04.11 03:50:04 DB: SELECT * FROM EffectAttributeTypes
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM Effects
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:50:04 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:50:04 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:04 DB: SELECT * FROM Badges
04.11 03:50:04 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:50:04 -<<-: core/server.query ok
04.11 03:50:21 NET: Client (conid:3404893) connected to vdl.0 (clients:1)
04.11 03:50:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:50:25 TRACE: User not logon yet.
04.11 03:50:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:50:41 TRACE: User not logon yet.
04.11 03:50:57 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:50:57 TRACE: User not logon yet.
04.11 03:51:04 TIMER: Check auto-disconnect...
04.11 03:51:04 STATS: vdl.0 cache, locks:0
04.11 03:51:07 NET: Client (conid:96315404) connected to vdl.0 (clients:2)
04.11 03:51:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:51:13 TRACE: User not logon yet.
04.11 03:51:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:51:13 TRACE: User not logon yet.
04.11 03:51:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:51:28 TRACE: User not logon yet.
04.11 03:51:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 03:51:37 TRACE: User not logon yet.
04.11 03:51:37 NET: Client (name:null conid:3404893 TCP) disconnected from vdl.0 (clients:1)
04.11 03:51:41 NET: Client (name:null conid:96315404 TCP) disconnected from vdl.0 (clients:0)
04.11 03:51:53 NET: Client (conid:74453687) connected to vdl.0 (clients:1)
04.11 03:51:53 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 03:51:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:51:53 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:51:53 -<<-: core/server.query ok
04.11 03:51:53 STATS: vdl.0 cache connection, 21 calls, total 0.0612640380859375 sec spent, avg 2.92 ms
04.11 03:51:53 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:51:53 -<<-: core/user.isOnlineID ok
04.11 03:51:53 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:51:53 -<<-: core/cache.get ok
04.11 03:51:53 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:51:53 -<<-: core/cache.get ok
04.11 03:51:53 NET: Client login (conid:74453687, id:107, name:uid107)
04.11 03:51:53 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:51:53 -<<-: core/user.loginPost null
04.11 03:51:53 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 03:51:53 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 03:51:58 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:51:58 TIME: user.ping 0.19 ms
04.11 03:51:58 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:51:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:51:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:52:04 TIMER: Check auto-disconnect...
04.11 03:52:04 STATS: vdl.0 cache, locks:2
04.11 03:52:06 NET: Client (conid:94864475) connected to vdl.0 (clients:2)
04.11 03:52:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:52:07 TIME: user.ping 0.16 ms
04.11 03:52:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:52:10 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 03:52:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:52:10 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:52:10 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:52:10 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:52:10 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:52:10 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:52:10 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:52:10 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:52:10 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:52:10 NET: Client login (conid:94864475, id:116, name:uid116)
04.11 03:52:10 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:52:10 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 03:52:10 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 03:52:10 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 03:52:10 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 03:52:10 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 03:52:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:52:16 TIME: user.ping 0.17 ms
04.11 03:52:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:52:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:52:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:52:22 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:52:22 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:52:22 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:52:22 TIME: battle.find 0.63 ms
04.11 03:52:22 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:52:22 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:52:22 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:52:22 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:52:22 TIME: battle.find 0.38 ms
04.11 03:52:22 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:52:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:52:25 TIME: user.ping 0.15 ms
04.11 03:52:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:52:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:52:25 TIME: user.ping 0.15 ms
04.11 03:52:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:52:34 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:52:34 TIME: user.ping 0.18 ms
04.11 03:52:34 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:52:43 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:52:43 TIME: user.ping 0.16 ms
04.11 03:52:43 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:52:51 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:52:51 TIME: user.ping 0.16 ms
04.11 03:52:51 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:52:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:52:52 TIME: user.ping 0.16 ms
04.11 03:52:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:53:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:53:00 TIME: user.ping 0.15 ms
04.11 03:53:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:53:03 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 03:53:03 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:53:03 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 50, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:53:03 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 50, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:53:03 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:53:03 STATS: vdl.0 cache connection, 35 calls, total 0.121639728546143 sec spent, avg 3.48 ms
04.11 03:53:03 TIME: battle.find 41.52 ms
04.11 03:53:03 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 03:53:03 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 50, player => 1 }, type => battle.enemy }
04.11 03:53:03 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 50, player => 2 }, type => battle.enemy }
04.11 03:53:04 TIMER: Check auto-disconnect...
04.11 03:53:04 STATS: vdl.0 cache, locks:4
04.11 03:53:14 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:53:14 TIME: user.ping 0.18 ms
04.11 03:53:14 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:53:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:53:17 TIME: user.ping 0.13 ms
04.11 03:53:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:53:25 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:53:25 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:25 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:53:25 TIME: battle.sendtask 8.2 ms
04.11 03:53:25 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [4,5,0,2,4,1], errorCode => ok }
04.11 03:53:25 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [4,5,0,2,4,1], errorCode => ok }
04.11 03:53:25 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:53:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:53:30 TIME: user.ping 0.15 ms
04.11 03:53:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:53:31 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 50 }
04.11 03:53:31 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:31 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:53:31 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:53:31 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:53:31 TIME: battle.sendtask 3.26 ms
04.11 03:53:31 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:53:31 == NET: uid116 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [4,0,2,4,1], messageType => battle.sendtask, to => [8,3], battleId => 50 }
04.11 03:53:32 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:53:32 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:32 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:53:32 ->>-: vdl/cache.battle.makeTurn { userId => 107, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:53:32 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:53:32 TIME: battle.sendtask 1.14 ms
04.11 03:53:32 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:53:32 == NET: uid116 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:53:37 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:53:37 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:37 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:53:37 TIME: battle.sendtask 0.66 ms
04.11 03:53:37 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [3,4,5,1,1,1], errorCode => ok, _type => battle.task }
04.11 03:53:37 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [3,4,5,1,1,1], errorCode => ok }
04.11 03:53:37 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:53:41 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:53:41 TIME: user.ping 0.14 ms
04.11 03:53:41 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:53:44 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [8,3], name => swap, side => 1, messageType => battle.sendtask, to => [9,3], battleId => 50 }
04.11 03:53:44 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:44 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:53:44 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:53:44 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:53:44 TIME: battle.sendtask 2.69 ms
04.11 03:53:44 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:53:44 == NET: uid107 ret: battle.task { dice => 5, from => [8,3], name => swap, side => 1, type => battle.task, dices => [3,4,1,1,1], messageType => battle.sendtask, to => [9,3], battleId => 50 }
04.11 03:53:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:53:46 TIME: user.ping 0.18 ms
04.11 03:53:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:53:53 ++ NET: uid116 req: battle.sendtask { dice => 3, from => [2,2], name => swap, side => 1, messageType => battle.sendtask, to => [1,2], battleId => 50 }
04.11 03:53:53 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:53 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:53:53 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:53:53 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:53:53 TIME: battle.sendtask 3.15 ms
04.11 03:53:53 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:53:53 == NET: uid107 ret: battle.task { dice => 3, from => [2,2], name => swap, side => 1, type => battle.task, dices => [4,1,1,1], messageType => battle.sendtask, to => [1,2], battleId => 50 }
04.11 03:54:01 ++ NET: uid116 req: battle.sendtask { dice => 1, from => [1,2], name => swap, side => 1, messageType => battle.sendtask, to => [2,2], battleId => 50 }
04.11 03:54:01 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:01 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:01 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:01 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:01 TIME: battle.sendtask 2.68 ms
04.11 03:54:01 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:01 == NET: uid107 ret: battle.task { dice => 1, from => [1,2], name => swap, side => 1, type => battle.task, dices => [4,1,1], messageType => battle.sendtask, to => [2,2], battleId => 50 }
04.11 03:54:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:54:03 TIME: user.ping 0.14 ms
04.11 03:54:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:54:04 TIMER: Check auto-disconnect...
04.11 03:54:04 STATS: vdl.0 cache, locks:4
04.11 03:54:07 ++ NET: uid116 req: battle.sendtask { dice => 1, from => [1,2], name => swap, side => 1, messageType => battle.sendtask, to => [0,2], battleId => 50 }
04.11 03:54:07 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:07 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:07 STATS: vdl.0 cache connection, 48 calls, total 0.135186433792114 sec spent, avg 2.82 ms
04.11 03:54:07 ->>-: vdl/cache.battle.setScores { scores => [1,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:07 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:07 TIME: battle.sendtask 2.95 ms
04.11 03:54:07 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:07 == NET: uid107 ret: battle.task { dice => 1, from => [1,2], name => swap, side => 1, type => battle.task, dices => [4,1], messageType => battle.sendtask, to => [0,2], battleId => 50 }
04.11 03:54:07 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:54:07 TIME: user.ping 0.11 ms
04.11 03:54:07 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:54:13 ++ NET: uid116 req: battle.sendtask { dice => 1, from => [0,2], name => swap, side => 1, messageType => battle.sendtask, to => [0,1], battleId => 50 }
04.11 03:54:13 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:13 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:13 ->>-: vdl/cache.battle.setScores { scores => [1,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:13 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:13 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:13 TIME: battle.sendtask 2.9 ms
04.11 03:54:13 == NET: uid107 ret: battle.task { dice => 1, from => [0,2], name => swap, side => 1, type => battle.task, dices => [4], messageType => battle.sendtask, to => [0,1], battleId => 50 }
04.11 03:54:15 ++ NET: uid116 req: battle.sendtask { dice => 4, from => [2,2], name => swap, side => 1, messageType => battle.sendtask, to => [2,1], battleId => 50 }
04.11 03:54:15 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:15 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:15 ->>-: vdl/cache.battle.setScores { scores => [1,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:15 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:15 TIME: battle.sendtask 2.55 ms
04.11 03:54:15 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:15 == NET: uid107 ret: battle.task { dice => 4, from => [2,2], name => swap, side => 1, type => battle.task, dices => [], messageType => battle.sendtask, to => [2,1], battleId => 50 }
04.11 03:54:20 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:54:20 TIME: user.ping 0.18 ms
04.11 03:54:20 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:54:21 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:54:21 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:21 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:21 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:54:21 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:54:21 TIME: battle.sendtask 1.12 ms
04.11 03:54:21 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:21 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:54:24 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:54:24 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:24 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:24 TIME: battle.sendtask 0.61 ms
04.11 03:54:24 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,0,5,5,2,5], errorCode => ok, _type => battle.task }
04.11 03:54:24 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [5,0,5,5,2,5], errorCode => ok }
04.11 03:54:24 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:32 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:54:32 TIME: user.ping 0.17 ms
04.11 03:54:32 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:54:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:54:36 TIME: user.ping 0.18 ms
04.11 03:54:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:54:40 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [5,7], name => swap, side => 2, messageType => battle.sendtask, to => [5,8], battleId => 50 }
04.11 03:54:40 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:40 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:40 ->>-: vdl/cache.battle.setScores { scores => [1,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:40 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:40 TIME: battle.sendtask 4.29 ms
04.11 03:54:40 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:40 == NET: uid116 ret: battle.task { dice => 5, from => [5,7], name => swap, side => 2, type => battle.task, dices => [0,5,5,2,5], messageType => battle.sendtask, to => [5,8], battleId => 50 }
04.11 03:54:42 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [5,8], name => swap, side => 2, messageType => battle.sendtask, to => [5,9], battleId => 50 }
04.11 03:54:42 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:42 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:42 ->>-: vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:42 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:42 TIME: battle.sendtask 3.06 ms
04.11 03:54:42 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:42 == NET: uid116 ret: battle.task { dice => 5, from => [5,8], name => swap, side => 2, type => battle.task, dices => [0,5,2,5], messageType => battle.sendtask, to => [5,9], battleId => 50 }
04.11 03:54:43 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [6,7], name => swap, side => 2, messageType => battle.sendtask, to => [6,8], battleId => 50 }
04.11 03:54:43 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:43 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:43 ->>-: vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:43 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:43 TIME: battle.sendtask 2.98 ms
04.11 03:54:43 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:43 == NET: uid116 ret: battle.task { dice => 5, from => [6,7], name => swap, side => 2, type => battle.task, dices => [0,2,5], messageType => battle.sendtask, to => [6,8], battleId => 50 }
04.11 03:54:45 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [6,8], name => swap, side => 2, messageType => battle.sendtask, to => [6,9], battleId => 50 }
04.11 03:54:45 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:45 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:45 ->>-: vdl/cache.battle.setScores { scores => [3,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:45 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:45 TIME: battle.sendtask 3.27 ms
04.11 03:54:45 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:45 == NET: uid116 ret: battle.task { dice => 5, from => [6,8], name => swap, side => 2, type => battle.task, dices => [0,2], messageType => battle.sendtask, to => [6,9], battleId => 50 }
04.11 03:54:50 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:54:50 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:50 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:50 ->>-: vdl/cache.battle.makeTurn { userId => 107, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:54:50 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:54:50 TIME: battle.sendtask 1.25 ms
04.11 03:54:50 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:50 == NET: uid116 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:54:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:54:55 TIME: user.ping 0.17 ms
04.11 03:54:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:54:56 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:54:56 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:56 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:56 TIME: battle.sendtask 0.64 ms
04.11 03:54:56 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.task, dices => [3,4,0,5,1,5], errorCode => ok }
04.11 03:54:56 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:54:56 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [3,4,0,5,1,5], errorCode => ok }
04.11 03:54:58 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:54:58 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:54:58 TIME: user.ping 0.16 ms
04.11 03:55:04 TIMER: Check auto-disconnect...
04.11 03:55:04 STATS: vdl.0 cache, locks:4
04.11 03:55:09 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [9,3], name => swap, side => 1, messageType => battle.sendtask, to => [8,3], battleId => 50 }
04.11 03:55:09 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:09 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:09 STATS: vdl.0 cache connection, 68 calls, total 0.145875453948975 sec spent, avg 2.15 ms
04.11 03:55:09 ->>-: vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:09 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:09 TIME: battle.sendtask 4.88 ms
04.11 03:55:09 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:55:09 == NET: uid107 ret: battle.task { dice => 5, from => [9,3], name => swap, side => 1, type => battle.task, dices => [3,4,0,1,5], messageType => battle.sendtask, to => [8,3], battleId => 50 }
04.11 03:55:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:55:12 TIME: user.ping 0.17 ms
04.11 03:55:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:55:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:55:23 TIME: user.ping 0.18 ms
04.11 03:55:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:55:27 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [2,5], name => swap, side => 1, messageType => battle.sendtask, to => [1,5], battleId => 50 }
04.11 03:55:27 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:27 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:27 ->>-: vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:27 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:27 TIME: battle.sendtask 4.01 ms
04.11 03:55:27 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:55:27 == NET: uid107 ret: battle.task { dice => 5, from => [2,5], name => swap, side => 1, type => battle.task, dices => [3,4,0,1], messageType => battle.sendtask, to => [1,5], battleId => 50 }
04.11 03:55:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:55:29 TIME: user.ping 0.14 ms
04.11 03:55:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:55:35 ++ NET: uid116 req: battle.sendtask { dice => 3, from => [1,5], name => swap, side => 1, messageType => battle.sendtask, to => [0,5], battleId => 50 }
04.11 03:55:35 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:35 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:35 ->>-: vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:35 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:35 TIME: battle.sendtask 3.09 ms
04.11 03:55:35 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:55:35 == NET: uid107 ret: battle.task { dice => 3, from => [1,5], name => swap, side => 1, type => battle.task, dices => [4,0,1], messageType => battle.sendtask, to => [0,5], battleId => 50 }
04.11 03:55:36 ++ NET: uid116 req: battle.sendtask { dice => 1, from => [0,5], name => swap, side => 1, messageType => battle.sendtask, to => [1,5], battleId => 50 }
04.11 03:55:36 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:36 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:36 ->>-: vdl/cache.battle.setScores { scores => [2,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:36 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:36 TIME: battle.sendtask 2.8 ms
04.11 03:55:36 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:55:36 == NET: uid107 ret: battle.task { dice => 1, from => [0,5], name => swap, side => 1, type => battle.task, dices => [4,0], messageType => battle.sendtask, to => [1,5], battleId => 50 }
04.11 03:55:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:55:46 TIME: user.ping 0.15 ms
04.11 03:55:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:55:48 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:55:48 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:55:48 TIME: user.ping 0.17 ms
04.11 03:55:56 ++ NET: uid116 req: battle.sendtask { dice => 4, from => [1,5], name => swap, side => 1, messageType => battle.sendtask, to => [0,5], battleId => 50 }
04.11 03:55:56 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:56 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:56 ->>-: vdl/cache.battle.setScores { scores => [2,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:56 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:56 TIME: battle.sendtask 3.47 ms
04.11 03:55:56 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:55:56 == NET: uid107 ret: battle.task { dice => 4, from => [1,5], name => swap, side => 1, type => battle.task, dices => [0], messageType => battle.sendtask, to => [0,5], battleId => 50 }
04.11 03:56:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:56:03 TIME: user.ping 0.27 ms
04.11 03:56:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:56:04 TIMER: Check auto-disconnect...
04.11 03:56:04 STATS: vdl.0 cache, locks:4
04.11 03:56:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:56:14 TIME: user.ping 0.16 ms
04.11 03:56:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:56:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:56:19 TIME: user.ping 0.17 ms
04.11 03:56:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:56:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:56:36 TIME: user.ping 0.15 ms
04.11 03:56:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:56:38 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:56:38 TIME: user.ping 0.2 ms
04.11 03:56:38 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:56:54 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:56:54 TIME: user.ping 0.19 ms
04.11 03:56:54 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:56:54 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:56:54 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:56:54 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:56:54 STATS: vdl.0 cache connection, 78 calls, total 0.153988361358643 sec spent, avg 1.97 ms
04.11 03:56:54 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:56:54 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:56:54 TIME: battle.sendtask 2.74 ms
04.11 03:56:54 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:56:54 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:57:01 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:57:01 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:01 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:01 TIME: battle.sendtask 0.57 ms
04.11 03:57:01 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [3,0,5,1,3,4], errorCode => ok }
04.11 03:57:01 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:01 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [3,0,5,1,3,4], errorCode => ok }
04.11 03:57:02 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:57:02 TIME: user.ping 0.18 ms
04.11 03:57:02 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:57:04 TIMER: Check auto-disconnect...
04.11 03:57:04 STATS: vdl.0 cache, locks:4
04.11 03:57:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:57:11 TIME: user.ping 0.17 ms
04.11 03:57:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:57:27 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:57:27 TIME: user.ping 0.18 ms
04.11 03:57:27 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:57:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:57:28 TIME: user.ping 0.15 ms
04.11 03:57:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:57:28 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 50 }
04.11 03:57:28 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:28 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:28 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:28 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:28 TIME: battle.sendtask 4.02 ms
04.11 03:57:28 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:28 == NET: uid116 ret: battle.task { dice => 5, from => [8,3], name => swap, side => 2, type => battle.task, dices => [3,0,1,3,4], messageType => battle.sendtask, to => [9,3], battleId => 50 }
04.11 03:57:31 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [7,2], name => swap, side => 2, messageType => battle.sendtask, to => [8,2], battleId => 50 }
04.11 03:57:31 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:31 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:31 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:31 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:31 TIME: battle.sendtask 3.05 ms
04.11 03:57:31 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:31 == NET: uid116 ret: battle.task { dice => 3, from => [7,2], name => swap, side => 2, type => battle.task, dices => [0,1,3,4], messageType => battle.sendtask, to => [8,2], battleId => 50 }
04.11 03:57:34 ++ NET: uid107 req: battle.sendtask { dice => 1, from => [8,2], name => swap, side => 2, messageType => battle.sendtask, to => [7,2], battleId => 50 }
04.11 03:57:34 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:34 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:34 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:34 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:34 TIME: battle.sendtask 2.92 ms
04.11 03:57:34 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:34 == NET: uid116 ret: battle.task { dice => 1, from => [8,2], name => swap, side => 2, type => battle.task, dices => [0,3,4], messageType => battle.sendtask, to => [7,2], battleId => 50 }
04.11 03:57:43 ++ NET: uid107 req: battle.sendtask { dice => 4, from => [7,2], name => swap, side => 2, messageType => battle.sendtask, to => [7,1], battleId => 50 }
04.11 03:57:43 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:43 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:43 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:43 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:43 TIME: battle.sendtask 2.94 ms
04.11 03:57:43 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:43 == NET: uid116 ret: battle.task { dice => 4, from => [7,2], name => swap, side => 2, type => battle.task, dices => [0,3], messageType => battle.sendtask, to => [7,1], battleId => 50 }
04.11 03:57:45 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 50 }
04.11 03:57:45 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:45 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:45 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:45 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:45 TIME: battle.sendtask 2.99 ms
04.11 03:57:45 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:45 == NET: uid116 ret: battle.task { dice => 3, from => [7,4], name => swap, side => 2, type => battle.task, dices => [0], messageType => battle.sendtask, to => [8,4], battleId => 50 }
04.11 03:57:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:57:46 TIME: user.ping 0.11 ms
04.11 03:57:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:57:48 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:57:48 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:48 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:48 ->>-: vdl/cache.battle.makeTurn { userId => 107, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:57:48 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:57:48 TIME: battle.sendtask 1.06 ms
04.11 03:57:48 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:48 == NET: uid116 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:57:52 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:57:52 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:52 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:57:52 TIME: battle.sendtask 0.27 ms
04.11 03:57:52 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [3,5,5,3,0,1], errorCode => ok, _type => battle.task }
04.11 03:57:52 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:52 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [3,5,5,3,0,1], errorCode => ok }
04.11 03:57:54 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:57:54 TIME: user.ping 0.15 ms
04.11 03:57:54 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:57:59 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [3,7], name => swap, side => 1, messageType => battle.sendtask, to => [3,8], battleId => 50 }
04.11 03:57:59 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:59 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:57:59 STATS: vdl.0 cache connection, 94 calls, total 0.161656618118286 sec spent, avg 1.72 ms
04.11 03:57:59 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:59 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:59 TIME: battle.sendtask 2.93 ms
04.11 03:57:59 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:57:59 == NET: uid107 ret: battle.task { dice => 5, from => [3,7], name => swap, side => 1, type => battle.task, dices => [3,5,3,0,1], messageType => battle.sendtask, to => [3,8], battleId => 50 }
04.11 03:58:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:58:03 TIME: user.ping 0.15 ms
04.11 03:58:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:58:04 TIMER: Check auto-disconnect...
04.11 03:58:04 STATS: vdl.0 cache, locks:4
04.11 03:58:11 ++ NET: uid116 req: battle.sendtask { dice => 3, from => [3,8], name => swap, side => 1, messageType => battle.sendtask, to => [3,9], battleId => 50 }
04.11 03:58:11 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:11 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:11 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:11 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:11 TIME: battle.sendtask 4.29 ms
04.11 03:58:11 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:11 == NET: uid107 ret: battle.task { dice => 3, from => [3,8], name => swap, side => 1, type => battle.task, dices => [5,3,0,1], messageType => battle.sendtask, to => [3,9], battleId => 50 }
04.11 03:58:18 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:58:18 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:18 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:18 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:58:18 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:58:18 TIME: battle.sendtask 0.87 ms
04.11 03:58:18 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:18 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:58:20 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:58:20 TIME: user.ping 0.14 ms
04.11 03:58:20 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:58:20 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:58:20 TIME: user.ping 0.14 ms
04.11 03:58:20 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:58:22 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:58:22 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:22 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:22 TIME: battle.sendtask 0.59 ms
04.11 03:58:22 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [3,2,3,5,0,3], errorCode => ok }
04.11 03:58:22 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [3,2,3,5,0,3], errorCode => ok }
04.11 03:58:22 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:25 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,5], name => swap, side => 2, messageType => battle.sendtask, to => [8,5], battleId => 50 }
04.11 03:58:25 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:25 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:25 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:25 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:25 TIME: battle.sendtask 3.05 ms
04.11 03:58:25 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:25 == NET: uid116 ret: battle.task { dice => 5, from => [7,5], name => swap, side => 2, type => battle.task, dices => [3,2,3,0,3], messageType => battle.sendtask, to => [8,5], battleId => 50 }
04.11 03:58:27 ++ NET: uid107 req: battle.sendtask { dice => 2, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 50 }
04.11 03:58:27 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:27 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:27 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:27 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:27 TIME: battle.sendtask 2.53 ms
04.11 03:58:27 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:27 == NET: uid116 ret: battle.task { dice => 2, from => [7,4], name => swap, side => 2, type => battle.task, dices => [3,3,0,3], messageType => battle.sendtask, to => [8,4], battleId => 50 }
04.11 03:58:29 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 50 }
04.11 03:58:29 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:29 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:29 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:29 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:29 TIME: battle.sendtask 2.89 ms
04.11 03:58:29 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:29 == NET: uid116 ret: battle.task { dice => 3, from => [8,4], name => swap, side => 2, type => battle.task, dices => [3,0,3], messageType => battle.sendtask, to => [9,4], battleId => 50 }
04.11 03:58:33 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [8,5], name => swap, side => 2, messageType => battle.sendtask, to => [9,5], battleId => 50 }
04.11 03:58:33 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:33 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:33 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:33 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:33 TIME: battle.sendtask 2.88 ms
04.11 03:58:33 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:33 == NET: uid116 ret: battle.task { dice => 3, from => [8,5], name => swap, side => 2, type => battle.task, dices => [0,3], messageType => battle.sendtask, to => [9,5], battleId => 50 }
04.11 03:58:38 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:58:38 TIME: user.ping 0.14 ms
04.11 03:58:38 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:58:41 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [6,5], name => swap, side => 2, messageType => battle.sendtask, to => [7,5], battleId => 50 }
04.11 03:58:41 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:41 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:41 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:41 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:41 TIME: battle.sendtask 2.72 ms
04.11 03:58:41 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:41 == NET: uid116 ret: battle.task { dice => 3, from => [6,5], name => swap, side => 2, type => battle.task, dices => [0], messageType => battle.sendtask, to => [7,5], battleId => 50 }
04.11 03:58:42 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:58:42 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:42 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:42 ->>-: vdl/cache.battle.makeTurn { userId => 107, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:58:42 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:58:42 TIME: battle.sendtask 1.16 ms
04.11 03:58:42 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:42 == NET: uid116 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:58:45 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:58:45 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:45 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:45 TIME: battle.sendtask 0.63 ms
04.11 03:58:45 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.task, dices => [2,5,1,2,3,0], errorCode => ok }
04.11 03:58:45 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:45 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [2,5,1,2,3,0], errorCode => ok }
04.11 03:58:46 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:58:46 TIME: user.ping 0.14 ms
04.11 03:58:46 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:58:50 ++ NET: uid116 req: battle.sendtask { dice => 3, from => [6,4], name => swap, side => 1, messageType => battle.sendtask, to => [6,5], battleId => 50 }
04.11 03:58:50 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:50 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:50 ->>-: vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:50 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:50 TIME: battle.sendtask 5.57 ms
04.11 03:58:50 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:50 == NET: uid107 ret: battle.task { dice => 3, from => [6,4], name => swap, side => 1, type => battle.task, dices => [2,5,1,2,0], messageType => battle.sendtask, to => [6,5], battleId => 50 }
04.11 03:58:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:58:55 TIME: user.ping 0.17 ms
04.11 03:58:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:58:58 ++ NET: uid116 req: battle.sendtask { dice => 2, from => [8,5], name => swap, side => 1, messageType => battle.sendtask, to => [9,5], battleId => 50 }
04.11 03:58:58 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:58 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:58 ->>-: vdl/cache.battle.setScores { scores => [4,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:58 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:58 TIME: battle.sendtask 3.16 ms
04.11 03:58:58 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:58:58 == NET: uid107 ret: battle.task { dice => 2, from => [8,5], name => swap, side => 1, type => battle.task, dices => [5,1,2,0], messageType => battle.sendtask, to => [9,5], battleId => 50 }
04.11 03:59:00 ++ NET: uid116 req: battle.sendtask { dice => 2, from => [8,4], name => swap, side => 1, messageType => battle.sendtask, to => [9,4], battleId => 50 }
04.11 03:59:00 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:00 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:59:00 STATS: vdl.0 cache connection, 118 calls, total 0.173226118087769 sec spent, avg 1.47 ms
04.11 03:59:00 ->>-: vdl/cache.battle.setScores { scores => [5,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:59:00 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:59:00 TIME: battle.sendtask 3.16 ms
04.11 03:59:00 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:59:00 == NET: uid107 ret: battle.task { dice => 2, from => [8,4], name => swap, side => 1, type => battle.task, dices => [5,1,0], messageType => battle.sendtask, to => [9,4], battleId => 50 }
04.11 03:59:04 TIMER: Check auto-disconnect...
04.11 03:59:04 STATS: vdl.0 cache, locks:4
04.11 03:59:06 ++ NET: uid116 req: battle.sendtask { dice => 5, from => [3,5], name => swap, side => 1, messageType => battle.sendtask, to => [2,5], battleId => 50 }
04.11 03:59:06 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:06 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:59:06 ->>-: vdl/cache.battle.setScores { scores => [5,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:59:06 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:59:06 TIME: battle.sendtask 2.69 ms
04.11 03:59:06 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:59:06 == NET: uid107 ret: battle.task { dice => 5, from => [3,5], name => swap, side => 1, type => battle.task, dices => [1,0], messageType => battle.sendtask, to => [2,5], battleId => 50 }
04.11 03:59:11 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:59:11 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:11 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:59:11 ->>-: vdl/cache.battle.makeTurn { userId => 116, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:59:11 -<<-: vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:59:11 TIME: battle.sendtask 1.14 ms
04.11 03:59:11 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:59:11 == NET: uid107 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:59:12 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:59:12 TIME: user.ping 0.16 ms
04.11 03:59:12 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:59:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:59:12 TIME: user.ping 0.17 ms
04.11 03:59:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:59:23 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 50 }
04.11 03:59:23 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:23 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:59:23 TIME: battle.sendtask 1.8 ms
04.11 03:59:23 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [0,0,4,3,1,0], errorCode => ok }
04.11 03:59:23 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:59:23 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [0,0,4,3,1,0], errorCode => ok }
04.11 03:59:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:59:29 TIME: user.ping 0.13 ms
04.11 03:59:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:59:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 03:59:48 TIME: user.ping 0.17 ms
04.11 03:59:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 03:59:52 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [7,6], name => swap, side => 2, messageType => battle.sendtask, to => [8,6], battleId => 50 }
04.11 03:59:52 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:52 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:59:52 ->>-: vdl/cache.battle.setScores { scores => [5,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:59:52 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:59:52 TIME: battle.sendtask 3.71 ms
04.11 03:59:52 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 03:59:52 == NET: uid116 ret: battle.task { dice => 3, from => [7,6], name => swap, side => 2, type => battle.task, dices => [0,0,4,1,0], messageType => battle.sendtask, to => [8,6], battleId => 50 }
