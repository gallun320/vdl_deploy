19.11 19:17:45 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 19:17:45 -<<-: server.login ok
19.11 19:17:45 DB: SELECT * FROM LocalizationStrings
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 TIMER: Starting timer...
19.11 19:17:45 TIMER: Timer running...
19.11 19:17:45 DB: SELECT * FROM GameVars
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 19:17:45 -<<-: core/quest.getDaily ok
19.11 19:17:45 DB: SELECT * FROM UserAttributeTypes
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM UserVariableTypes
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 19:17:45 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM ItemGroups
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM Bundles ORDER BY ID
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 SHOP: loading items...
19.11 19:17:45 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 19:17:45 -<<-: core/shop.getList ok
19.11 19:17:45 SHOP: 0 items loaded (0 sec)
19.11 19:17:45 DB: SELECT * FROM EffectAttributeTypes
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM Effects
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 19:17:45 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 19:17:45 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:45 DB: SELECT * FROM Badges
19.11 19:17:45 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 19:17:45 -<<-: core/server.query ok
19.11 19:17:59 NET: Client (conid:30902012) connected to vdl.0 (clients:1)
19.11 19:18:00 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQw }
19.11 19:18:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140'
19.11 19:18:00 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140', _type => core/server.query }
19.11 19:18:00 -<<-: core/server.query ok
19.11 19:18:00 ->>-: core/user.isOnlineID { id => 140, _type => core/user.isOnlineID }
19.11 19:18:00 -<<-: core/user.isOnlineID ok
19.11 19:18:00 ->>-: core/cache.get { type => user, v => -1, id => 140, _type => core/cache.get }
19.11 19:18:00 -<<-: core/cache.get ok
19.11 19:18:00 ->>-: core/cache.get { type => questdata, v => -1, id => 140, _type => core/cache.get }
19.11 19:18:00 -<<-: core/cache.get ok
19.11 19:18:00 NET: Client login (conid:30902012, id:140, name:uid140)
19.11 19:18:00 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 140, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 19:18:00 -<<-: core/user.loginPost null
19.11 19:18:00 == NET: uid140 ret: user.login { name => uid140, type => user.login, errorCode => ok, id => 140 }
19.11 19:18:00 == NET: uid140 ret: user.join { name => uid140, type => user.join }
19.11 19:18:03 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:18:03 TIME: user.ping 0.23 ms
19.11 19:18:03 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:18:05 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 140, _type => core/cache.update }
19.11 19:18:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:18:17 NET: Client (conid:32975789) connected to vdl.0 (clients:2)
19.11 19:18:19 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 19:18:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 19:18:19 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 19:18:19 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 19:18:19 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 19:18:19 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:18:19 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 19:18:19 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 19:18:19 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 19:18:19 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 19:18:19 NET: Client login (conid:32975789, id:19, name:uid19)
19.11 19:18:19 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 19:18:19 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:18:19 == NET: uid140 ret: user.join { name => uid19, type => user.join }
19.11 19:18:19 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 19:18:19 == NET: uid19 ret: user.join { name => uid140, type => user.join }
19.11 19:18:19 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 19:18:25 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:18:25 TIME: user.ping 0.18 ms
19.11 19:18:25 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:18:25 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 19:18:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:18:27 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:18:27 TIME: user.ping 0.11 ms
19.11 19:18:27 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:18:32 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 19:18:32 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 19:18:32 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 19:18:32 TIME: battle.find 0.2 ms
19.11 19:18:32 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 19:18:33 ++ NET: uid140 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 19:18:33 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 140 }, _type => vdl/cache.battle.findRandom }
19.11 19:18:33 -<<-: battle.enemyEvent { data => { name => uid140, enemy.id => 19, enemy.name => uid19, id => 140, enemy.num => 2, battleId => 14, player => 1 }, _isNotify => true, id => 140, _type => battle.enemyEvent }
19.11 19:18:33 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 140, enemy.name => uid140, id => 19, enemy.num => 1, battleId => 14, player => 2 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 19:18:33 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 19:18:33 TIME: battle.find 37.83 ms
19.11 19:18:33 == NET: uid140 ret: battle.find { type => battle.find, errorCode => ok }
19.11 19:18:33 == NET: uid140 ret: battle.enemy { data => { name => uid140, enemy.id => 19, enemy.name => uid19, id => 140, enemy.num => 2, battleId => 14, player => 1 }, type => battle.enemy }
19.11 19:18:33 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 140, enemy.name => uid140, id => 19, enemy.num => 1, battleId => 14, player => 2 }, type => battle.enemy }
19.11 19:18:39 ++ NET: uid140 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 14 }
19.11 19:18:39 ->>-: vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
19.11 19:18:39 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 140, _type => vdl/cache.battle.infoRoom, turnId => 140 }
19.11 19:18:39 TIME: battle.sendtask 0.84 ms
19.11 19:18:39 == NET: uid140 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,0,1,2,2,3], errorCode => ok, _type => battle.task }
19.11 19:18:39 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [2,0,1,2,2,3], errorCode => ok }
19.11 19:18:39 == NET: uid140 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:18:43 ++ NET: uid140 req: battle.sendtask { dice => 3, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 14 }
19.11 19:18:43 ->>-: vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
19.11 19:18:43 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 140, _type => vdl/cache.battle.infoRoom, turnId => 140 }
19.11 19:18:43 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 140, player2 => 19, battleId => 14 }
19.11 19:18:45 TIMER: Check auto-disconnect...
19.11 19:18:46 NET: Client (name:uid140 conid:30902012 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:46 NET: Client (conid:76215514) connected to vdl.0 (clients:2)
19.11 19:18:47 NET: Client (name:null conid:76215514 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:47 NET: Client (conid:47647057) connected to vdl.0 (clients:2)
19.11 19:18:49 NET: Client (name:null conid:47647057 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:49 NET: Client (conid:86066691) connected to vdl.0 (clients:2)
19.11 19:18:50 NET: Client (name:null conid:86066691 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:50 NET: Client (conid:70747910) connected to vdl.0 (clients:2)
19.11 19:18:52 NET: Client (name:null conid:70747910 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:52 NET: Client (conid:82255159) connected to vdl.0 (clients:2)
19.11 19:18:53 NET: Client (name:null conid:82255159 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:53 NET: Client (conid:10244343) connected to vdl.0 (clients:2)
19.11 19:18:55 NET: Client (name:null conid:10244343 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:55 NET: Client (conid:24398921) connected to vdl.0 (clients:2)
19.11 19:18:56 NET: Client (name:null conid:24398921 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:56 NET: Client (conid:98277210) connected to vdl.0 (clients:2)
19.11 19:18:58 NET: Client (name:null conid:98277210 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:58 NET: Client (conid:80135187) connected to vdl.0 (clients:2)
19.11 19:18:59 NET: Client (name:null conid:80135187 TCP) disconnected from vdl.0 (clients:1)
19.11 19:18:59 NET: Client (conid:27603296) connected to vdl.0 (clients:2)
19.11 19:19:01 NET: Client (name:null conid:27603296 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:01 NET: Client (conid:87961858) connected to vdl.0 (clients:2)
19.11 19:19:02 NET: Client (name:null conid:87961858 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:02 NET: Client (conid:49043743) connected to vdl.0 (clients:2)
19.11 19:19:04 NET: Client (name:null conid:49043743 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:04 NET: Client (conid:16297379) connected to vdl.0 (clients:2)
19.11 19:19:05 NET: Client (name:null conid:16297379 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:05 NET: Client (conid:40687218) connected to vdl.0 (clients:2)
19.11 19:19:06 NET: Client (name:null conid:40687218 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:06 NET: Client (conid:71129117) connected to vdl.0 (clients:2)
19.11 19:19:07 NET: Client (name:null conid:71129117 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:07 NET: Client (conid:78394799) connected to vdl.0 (clients:2)
19.11 19:19:08 NET: Client (name:null conid:78394799 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:08 NET: Client (conid:44241988) connected to vdl.0 (clients:2)
19.11 19:19:09 NET: Client (conid:79214949) connected to vdl.0 (clients:3)
19.11 19:19:09 NET: Client (name:null conid:44241988 TCP) disconnected from vdl.0 (clients:2)
19.11 19:19:10 NET: Client (name:null conid:79214949 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:10 NET: Client (conid:77381158) connected to vdl.0 (clients:2)
19.11 19:19:11 NET: Client (name:null conid:77381158 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:11 NET: Client (conid:1385920) connected to vdl.0 (clients:2)
19.11 19:19:12 NET: Client (name:null conid:1385920 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:12 NET: Client (conid:19021697) connected to vdl.0 (clients:2)
19.11 19:19:13 NET: Client (name:null conid:19021697 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:13 NET: Client (conid:91121307) connected to vdl.0 (clients:2)
19.11 19:19:14 NET: Client (name:null conid:91121307 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:14 NET: Client (conid:3004181) connected to vdl.0 (clients:2)
19.11 19:19:15 NET: Client (name:null conid:3004181 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:15 NET: Client (conid:77484093) connected to vdl.0 (clients:2)
19.11 19:19:16 NET: Client (name:null conid:77484093 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:16 NET: Client (conid:99172965) connected to vdl.0 (clients:2)
19.11 19:19:17 NET: Client (name:null conid:99172965 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:17 NET: Client (conid:4028086) connected to vdl.0 (clients:2)
19.11 19:19:18 NET: Client (name:null conid:4028086 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:18 NET: Client (conid:27589278) connected to vdl.0 (clients:2)
19.11 19:19:19 NET: Client (name:null conid:27589278 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:19 NET: Client (conid:85111070) connected to vdl.0 (clients:2)
19.11 19:19:21 NET: Client (name:null conid:85111070 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:21 NET: Client (conid:76177759) connected to vdl.0 (clients:2)
19.11 19:19:21 NET: Client (conid:11781640) connected to vdl.0 (clients:3)
19.11 19:19:21 NET: Client (name:null conid:76177759 TCP) disconnected from vdl.0 (clients:2)
19.11 19:19:22 NET: Client (name:null conid:11781640 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:22 NET: Client (conid:19413461) connected to vdl.0 (clients:2)
19.11 19:19:24 NET: Client (name:null conid:19413461 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:24 NET: Client (conid:3742048) connected to vdl.0 (clients:2)
19.11 19:19:24 NET: Client (name:null conid:3742048 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:24 NET: Client (conid:69163249) connected to vdl.0 (clients:2)
19.11 19:19:24 NET: Client (name:null conid:69163249 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:24 NET: Client (conid:41957934) connected to vdl.0 (clients:2)
19.11 19:19:25 NET: Client (name:null conid:41957934 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:25 NET: Client (conid:60605438) connected to vdl.0 (clients:2)
19.11 19:19:27 NET: Client (name:null conid:60605438 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:27 NET: Client (conid:40684814) connected to vdl.0 (clients:2)
19.11 19:19:27 NET: Client (name:null conid:40684814 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:27 NET: Client (conid:64293568) connected to vdl.0 (clients:2)
19.11 19:19:27 NET: Client (name:null conid:64293568 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:27 NET: Client (conid:14902094) connected to vdl.0 (clients:2)
19.11 19:19:28 NET: Client (name:null conid:14902094 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:28 NET: Client (conid:68037472) connected to vdl.0 (clients:2)
19.11 19:19:30 NET: Client (name:null conid:68037472 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:30 NET: Client (conid:86275746) connected to vdl.0 (clients:2)
19.11 19:19:30 NET: Client (name:null conid:86275746 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:30 NET: Client (conid:36438740) connected to vdl.0 (clients:2)
19.11 19:19:30 NET: Client (name:null conid:36438740 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:30 NET: Client (conid:47163060) connected to vdl.0 (clients:2)
19.11 19:19:31 NET: Client (name:uid19 conid:32975789 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:31 NET: Client (conid:74655506) connected to vdl.0 (clients:2)
19.11 19:19:31 NET: Client (name:null conid:47163060 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:31 NET: Client (conid:99565183) connected to vdl.0 (clients:2)
19.11 19:19:33 NET: Client (name:null conid:99565183 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:33 NET: Client (conid:57556752) connected to vdl.0 (clients:2)
19.11 19:19:33 NET: Client (name:null conid:57556752 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:33 NET: Client (conid:66742475) connected to vdl.0 (clients:2)
19.11 19:19:33 NET: Client (name:null conid:66742475 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:33 NET: Client (conid:77607356) connected to vdl.0 (clients:2)
19.11 19:19:34 NET: Client (name:null conid:74655506 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:34 NET: Client (conid:28673414) connected to vdl.0 (clients:2)
19.11 19:19:34 NET: Client (name:null conid:77607356 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:34 NET: Client (conid:13100430) connected to vdl.0 (clients:2)
19.11 19:19:36 NET: Client (name:null conid:13100430 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:36 NET: Client (conid:69710106) connected to vdl.0 (clients:2)
19.11 19:19:36 NET: Client (name:null conid:69710106 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:36 NET: Client (conid:53363531) connected to vdl.0 (clients:2)
19.11 19:19:36 NET: Client (name:null conid:53363531 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:36 NET: Client (conid:9946916) connected to vdl.0 (clients:2)
19.11 19:19:37 NET: Client (name:null conid:28673414 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:37 NET: Client (conid:50707199) connected to vdl.0 (clients:2)
19.11 19:19:37 NET: Client (name:null conid:9946916 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:37 NET: Client (conid:74406085) connected to vdl.0 (clients:2)
19.11 19:19:39 NET: Client (name:null conid:74406085 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:39 NET: Client (conid:59636206) connected to vdl.0 (clients:2)
19.11 19:19:39 NET: Client (name:null conid:59636206 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:39 NET: Client (conid:19953441) connected to vdl.0 (clients:2)
19.11 19:19:39 NET: Client (name:null conid:19953441 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:39 NET: Client (conid:85510511) connected to vdl.0 (clients:2)
19.11 19:19:40 NET: Client (name:null conid:50707199 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:40 NET: Client (conid:24341457) connected to vdl.0 (clients:2)
19.11 19:19:40 NET: Client (name:null conid:85510511 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:40 NET: Client (conid:45587153) connected to vdl.0 (clients:2)
19.11 19:19:42 NET: Client (name:null conid:45587153 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:42 NET: Client (conid:14199790) connected to vdl.0 (clients:2)
19.11 19:19:42 NET: Client (conid:46377453) connected to vdl.0 (clients:3)
19.11 19:19:42 NET: Client (name:null conid:14199790 TCP) disconnected from vdl.0 (clients:2)
19.11 19:19:42 NET: Client (name:null conid:46377453 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:42 NET: Client (conid:35475912) connected to vdl.0 (clients:2)
19.11 19:19:43 NET: Client (name:null conid:24341457 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:43 NET: Client (conid:45837415) connected to vdl.0 (clients:2)
19.11 19:19:43 NET: Client (name:null conid:35475912 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:43 NET: Client (conid:28952036) connected to vdl.0 (clients:2)
19.11 19:19:44 NET: Client (name:null conid:28952036 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:44 NET: Client (conid:51082915) connected to vdl.0 (clients:2)
19.11 19:19:45 NET: Client (name:null conid:51082915 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:45 NET: Client (conid:74335819) connected to vdl.0 (clients:2)
19.11 19:19:45 NET: Client (name:null conid:74335819 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:45 NET: Client (conid:86564951) connected to vdl.0 (clients:2)
19.11 19:19:45 TIMER: Check auto-disconnect...
19.11 19:19:45 NET: Client (name:null conid:86564951 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:45 NET: Client (conid:15397376) connected to vdl.0 (clients:2)
19.11 19:19:46 NET: Client (name:null conid:45837415 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:46 NET: Client (conid:32609528) connected to vdl.0 (clients:2)
19.11 19:19:46 NET: Client (name:null conid:15397376 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:46 NET: Client (conid:66424365) connected to vdl.0 (clients:2)
19.11 19:19:47 NET: Client (name:null conid:66424365 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:47 NET: Client (conid:26680487) connected to vdl.0 (clients:2)
19.11 19:19:48 NET: Client (name:null conid:26680487 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:48 NET: Client (conid:97527936) connected to vdl.0 (clients:2)
19.11 19:19:48 NET: Client (name:null conid:97527936 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:48 NET: Client (conid:31716802) connected to vdl.0 (clients:2)
19.11 19:19:48 NET: Client (name:null conid:31716802 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:48 NET: Client (conid:36431337) connected to vdl.0 (clients:2)
19.11 19:19:49 NET: Client (name:null conid:32609528 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:49 NET: Client (conid:53065979) connected to vdl.0 (clients:2)
19.11 19:19:49 NET: Client (name:null conid:36431337 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:49 NET: Client (conid:27432063) connected to vdl.0 (clients:2)
19.11 19:19:50 NET: Client (name:null conid:27432063 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:50 NET: Client (conid:78683675) connected to vdl.0 (clients:2)
19.11 19:19:51 NET: Client (name:null conid:78683675 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:51 NET: Client (conid:66850330) connected to vdl.0 (clients:2)
19.11 19:19:51 NET: Client (conid:37650938) connected to vdl.0 (clients:3)
19.11 19:19:51 NET: Client (name:null conid:66850330 TCP) disconnected from vdl.0 (clients:2)
19.11 19:19:51 NET: Client (name:null conid:37650938 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:51 NET: Client (conid:66416132) connected to vdl.0 (clients:2)
19.11 19:19:52 NET: Client (name:null conid:53065979 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:52 NET: Client (conid:89663945) connected to vdl.0 (clients:2)
19.11 19:19:52 NET: Client (name:null conid:66416132 TCP) disconnected from vdl.0 (clients:1)
19.11 19:19:52 NET: Client (conid:34285443) connected to vdl.0 (clients:2)
19.11 19:21:05 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 19:21:05 -<<-: server.login ok
19.11 19:21:05 DB: SELECT * FROM LocalizationStrings
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 TIMER: Starting timer...
19.11 19:21:05 TIMER: Timer running...
19.11 19:21:05 DB: SELECT * FROM GameVars
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 19:21:05 -<<-: core/quest.getDaily ok
19.11 19:21:05 DB: SELECT * FROM UserAttributeTypes
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM UserVariableTypes
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 19:21:05 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM ItemGroups
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM Bundles ORDER BY ID
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 SHOP: loading items...
19.11 19:21:05 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 19:21:05 -<<-: core/shop.getList ok
19.11 19:21:05 SHOP: 0 items loaded (0 sec)
19.11 19:21:05 DB: SELECT * FROM EffectAttributeTypes
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM Effects
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 19:21:05 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 19:21:05 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:05 DB: SELECT * FROM Badges
19.11 19:21:05 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 19:21:05 -<<-: core/server.query ok
19.11 19:21:10 NET: Client (conid:94821) connected to vdl.0 (clients:1)
19.11 19:21:10 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQw }
19.11 19:21:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140'
19.11 19:21:10 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140', _type => core/server.query }
19.11 19:21:10 -<<-: core/server.query ok
19.11 19:21:10 ->>-: core/user.isOnlineID { id => 140, _type => core/user.isOnlineID }
19.11 19:21:10 -<<-: core/user.isOnlineID ok
19.11 19:21:10 ->>-: core/cache.get { type => user, v => -1, id => 140, _type => core/cache.get }
19.11 19:21:10 -<<-: core/cache.get ok
19.11 19:21:10 ->>-: core/cache.get { type => questdata, v => -1, id => 140, _type => core/cache.get }
19.11 19:21:10 -<<-: core/cache.get ok
19.11 19:21:10 NET: Client login (conid:94821, id:140, name:uid140)
19.11 19:21:10 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 140, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 19:21:10 -<<-: core/user.loginPost null
19.11 19:21:10 == NET: uid140 ret: user.login { name => uid140, type => user.login, errorCode => ok, id => 140 }
19.11 19:21:10 == NET: uid140 ret: user.join { name => uid140, type => user.join }
19.11 19:21:12 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:21:12 TIME: user.ping 0.21 ms
19.11 19:21:12 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:21:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 140, _type => core/cache.update }
19.11 19:21:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:21:17 ++ NET: uid140 req: battle.end { type => leaveGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 14 }
19.11 19:21:17 ->>-: vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
19.11 19:21:17 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 140, _type => vdl/cache.battle.infoRoom, turnId => 140 }
19.11 19:21:17 ->>-: core/user.sendTo { id => 19, _type => core/user.sendTo, msg => { _type => battle.leave } }
19.11 19:21:17 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
19.11 19:21:17 ->>-: vdl/cache.battle.finishRoom { roomId => 14, _type => vdl/cache.battle.finishRoom }
19.11 19:21:17 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 19:21:17 TIME: battle.end 4.29 ms
19.11 19:21:17 == NET: uid140 ret: battle.end { type => battle.end, errorCode => ok }
19.11 19:21:31 ++ NET: uid140 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 19:21:31 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 140 }, _type => vdl/cache.battle.findRandom }
19.11 19:21:31 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 19:21:31 TIME: battle.find 0.77 ms
19.11 19:21:31 == NET: uid140 ret: battle.find { type => battle.find, errorCode => ok }
19.11 19:21:33 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:21:33 TIME: user.ping 0.14 ms
19.11 19:21:33 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:21:39 NET: Client (conid:35936308) connected to vdl.0 (clients:2)
19.11 19:21:41 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 19:21:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 19:21:41 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 19:21:41 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 19:21:41 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 19:21:41 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:21:41 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 19:21:41 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 19:21:41 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 19:21:41 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 19:21:41 NET: Client login (conid:35936308, id:19, name:uid19)
19.11 19:21:41 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 19:21:41 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:21:41 == NET: uid140 ret: user.join { name => uid19, type => user.join }
19.11 19:21:41 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 19:21:41 == NET: uid19 ret: user.join { name => uid140, type => user.join }
19.11 19:21:41 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 19:21:50 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:21:50 TIME: user.ping 0.17 ms
19.11 19:21:50 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:21:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 19:21:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:21:51 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 19:21:51 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 19:21:51 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 140, enemy.name => uid140, id => 19, enemy.num => 2, battleId => 15, player => 1 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 19:21:51 -<<-: battle.enemyEvent { data => { name => uid140, enemy.id => 19, enemy.name => uid19, id => 140, enemy.num => 1, battleId => 15, player => 2 }, _isNotify => true, id => 140, _type => battle.enemyEvent }
19.11 19:21:51 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 19:21:51 TIME: battle.find 38.52 ms
19.11 19:21:51 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 19:21:51 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 140, enemy.name => uid140, id => 19, enemy.num => 2, battleId => 15, player => 1 }, type => battle.enemy }
19.11 19:21:51 == NET: uid140 ret: battle.enemy { data => { name => uid140, enemy.id => 19, enemy.name => uid19, id => 140, enemy.num => 1, battleId => 15, player => 2 }, type => battle.enemy }
19.11 19:21:53 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:21:53 TIME: user.ping 0.17 ms
19.11 19:21:53 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:22:00 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 15 }
19.11 19:22:00 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
19.11 19:22:00 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:22:00 TIME: battle.sendtask 0.85 ms
19.11 19:22:00 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,3,0,5,1,4], errorCode => ok, _type => null }
19.11 19:22:00 == NET: uid140 ret: battle.task { name => throw, type => battle.task, dices => [5,3,0,5,1,4], errorCode => ok }
19.11 19:22:00 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:22:05 TIMER: Check auto-disconnect...
19.11 19:22:05 STATS: vdl.0 cache, locks:4
19.11 19:22:07 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:22:07 TIME: user.ping 0.15 ms
19.11 19:22:07 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:22:07 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 15 }
19.11 19:22:07 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
19.11 19:22:07 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:22:07 STATS: vdl.0 cache connection, 39 calls, total 0.0910069942474365 sec spent, avg 2.33 ms
19.11 19:22:07 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 140, battleId => 15 }
19.11 19:22:07 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 19:22:07 TIME: battle.sendtask 4.14 ms
19.11 19:22:07 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:22:08 == NET: uid140 ret: battle.task { dice => 5, from => [7,4], name => swap, side => 2, type => battle.task, dices => [3,0,5,1,4], messageType => battle.sendtask, to => [8,4], battleId => 15 }
19.11 19:22:11 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 15 }
19.11 19:22:11 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
19.11 19:22:11 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:22:11 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 140, battleId => 15 }
19.11 19:22:12 -<<-: vdl/cache.battle.setScores { errorCode => _requestException, _type => vdl/cache.battle.setScores }
19.11 19:22:12 TRACE: battle.sendtask : cacheRequest exception { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 140, battleId => 15 }
19.11 19:22:12 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 432
Called from modules/VDLBattleModule.hx line 388
Called from modules/VDLBattleModule.hx line 64
Called from modules/VDLBattleModule.hx line 42
Called from snipe/slave/Server.hx line 1176
19.11 19:22:14 NET: Client (name:uid19 conid:35936308 TCP) disconnected from vdl.0 (clients:1)
19.11 19:22:14 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 19:22:14 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
19.11 19:22:14 -<<-: core/server.query { list => {{ id => 11 }, { id => 15 }}, errorCode => ok, _type => core/server.query }
19.11 19:22:14 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
19.11 19:22:14 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:22:14 ->>-: vdl/cache.battle.deleteRoom { roomId => 15, _type => vdl/cache.battle.deleteRoom }
19.11 19:22:14 NET: Client (conid:74000195) connected to vdl.0 (clients:2)
19.11 19:22:14 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 19:22:14 ->>-: vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
19.11 19:22:14 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 19:22:14 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 19:22:14 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 19:22:14 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 19:22:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:22:14 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 19:22:14 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 19:22:14 == NET: uid140 ret: battle.leave { type => battle.leave }
19.11 19:22:14 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 19:22:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 19:22:14 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 19:22:14 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 19:22:14 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 19:22:14 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:22:14 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 19:22:14 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 2, id => 19 } }
19.11 19:22:14 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 19:22:14 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 19 } }
19.11 19:22:14 NET: Client login (conid:74000195, id:19, name:uid19)
19.11 19:22:14 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 19:22:14 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:22:14 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 19:22:14 == NET: uid140 ret: user.join { name => uid19, type => user.join }
19.11 19:22:14 == NET: uid19 ret: user.join { name => uid140, type => user.join }
19.11 19:22:14 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 19:32:44 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 19:32:44 -<<-: server.login ok
19.11 19:32:44 DB: SELECT * FROM LocalizationStrings
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 TIMER: Starting timer...
19.11 19:32:44 DB: SELECT * FROM GameVars
19.11 19:32:44 TIMER: Timer running...
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 19:32:44 -<<-: core/quest.getDaily ok
19.11 19:32:44 DB: SELECT * FROM UserAttributeTypes
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM UserVariableTypes
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 19:32:44 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM ItemGroups
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM Bundles ORDER BY ID
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 SHOP: loading items...
19.11 19:32:44 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 19:32:44 -<<-: core/shop.getList ok
19.11 19:32:44 SHOP: 0 items loaded (0 sec)
19.11 19:32:44 DB: SELECT * FROM EffectAttributeTypes
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM Effects
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 19:32:44 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 19:32:44 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:44 DB: SELECT * FROM Badges
19.11 19:32:44 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 19:32:44 -<<-: core/server.query ok
19.11 19:32:55 NET: Client (conid:43375874) connected to vdl.0 (clients:1)
19.11 19:32:56 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQw }
19.11 19:32:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140'
19.11 19:32:56 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140', _type => core/server.query }
19.11 19:32:56 -<<-: core/server.query ok
19.11 19:32:56 ->>-: core/user.isOnlineID { id => 140, _type => core/user.isOnlineID }
19.11 19:32:56 -<<-: core/user.isOnlineID ok
19.11 19:32:56 ->>-: core/cache.get { type => user, v => -1, id => 140, _type => core/cache.get }
19.11 19:32:56 -<<-: core/cache.get ok
19.11 19:32:56 ->>-: core/cache.get { type => questdata, v => -1, id => 140, _type => core/cache.get }
19.11 19:32:56 -<<-: core/cache.get ok
19.11 19:32:56 NET: Client login (conid:43375874, id:140, name:uid140)
19.11 19:32:56 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 140, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 19:32:56 -<<-: core/user.loginPost null
19.11 19:32:56 == NET: uid140 ret: user.login { name => uid140, type => user.login, errorCode => ok, id => 140 }
19.11 19:32:56 == NET: uid140 ret: user.join { name => uid140, type => user.join }
19.11 19:32:59 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:32:59 TIME: user.ping 0.09 ms
19.11 19:32:59 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:33:02 NET: Client (conid:68072787) connected to vdl.0 (clients:2)
19.11 19:33:02 NET: Client (conid:34638312) connected to vdl.0 (clients:3)
19.11 19:33:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 19:33:02 NET: Client (name:null conid:68072787 TCP) disconnected from vdl.0 (clients:2)
19.11 19:33:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 19:33:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 19:33:02 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 19:33:02 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 19:33:02 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:33:02 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 19:33:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 19:33:02 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 19:33:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 19:33:02 NET: Client login (conid:68072787, id:19, name:uid19)
19.11 19:33:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr =>  }
19.11 19:33:02 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:33:02 == NET: uid140 ret: user.join { name => uid19, type => user.join }
19.11 19:33:02 == NET: null ret: user.join { name => uid19, type => user.join }
19.11 19:33:02 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 19:33:02 == NET: uid19 ret: user.join { name => uid140, type => user.join }
19.11 19:33:02 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 19:33:02 == NET: uid19 ret: user.join { name => null, type => user.join }
19.11 19:33:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 19:33:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 19:33:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 19:33:02 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 19:33:02 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 19:33:02 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:33:02 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 19 }
19.11 19:33:02 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 19:33:02 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
19.11 19:33:02 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
19.11 19:33:02 -<<-: core/server.query { list => {{ id => 11 }}, errorCode => ok, _type => core/server.query }
19.11 19:33:02 ->>-: vdl/cache.battle.infoRoom { roomId => 11, _type => vdl/cache.battle.infoRoom }
19.11 19:33:02 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:33:02 ->>-: vdl/cache.battle.deleteRoom { roomId => 11, _type => vdl/cache.battle.deleteRoom }
19.11 19:33:02 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 19:33:02 ->>-: vdl/cache.battle.finishRoom { roomId => 11, _type => vdl/cache.battle.finishRoom }
19.11 19:33:02 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 19:33:02 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 19:33:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:33:02 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 19:33:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:33:02 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 19:33:02 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 19:33:02 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 19:33:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 1, id => 19 } }
19.11 19:33:02 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 19:33:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 19 } }
19.11 19:33:02 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 19:33:02 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 19:33:02 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 19:33:02 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 19:33:02 == NET: uid140 ret: battle.leave { type => battle.leave }
19.11 19:33:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 140, _type => core/cache.update }
19.11 19:33:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:33:08 NET: Client (name:null conid:34638312 TCP) disconnected from vdl.0 (clients:1)
19.11 19:33:22 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:33:22 TIME: user.ping 0.2 ms
19.11 19:33:22 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:33:24 NET: Client (conid:75721685) connected to vdl.0 (clients:2)
19.11 19:33:28 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 19:33:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 19:33:28 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 19:33:28 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 19:33:28 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 19:33:28 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:33:28 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 19:33:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 19:33:28 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 19:33:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 19:33:28 NET: Client login (conid:75721685, id:19, name:uid19)
19.11 19:33:28 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 19:33:28 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:33:28 == NET: uid140 ret: user.join { name => uid19, type => user.join }
19.11 19:33:28 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 19:33:28 == NET: uid19 ret: user.join { name => uid140, type => user.join }
19.11 19:33:28 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 19:33:34 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 19:33:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:33:37 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 19:33:37 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 19:33:37 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 19:33:37 TIME: battle.find 0.67 ms
19.11 19:33:37 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 19:33:42 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:33:42 TIME: user.ping 0.2 ms
19.11 19:33:42 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:33:44 TIMER: Check auto-disconnect...
19.11 19:33:44 STATS: vdl.0 cache, locks:4
19.11 19:33:44 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:33:44 TIME: user.ping 0.15 ms
19.11 19:33:44 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:33:49 ++ NET: uid140 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 19:33:49 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 140 }, _type => vdl/cache.battle.findRandom }
19.11 19:33:49 -<<-: battle.enemyEvent { data => { name => uid140, enemy.id => 19, enemy.name => uid19, id => 140, enemy.num => 2, battleId => 16, player => 1 }, _isNotify => true, id => 140, _type => battle.enemyEvent }
19.11 19:33:49 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 140, enemy.name => uid140, id => 19, enemy.num => 1, battleId => 16, player => 2 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 19:33:49 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 19:33:49 STATS: vdl.0 cache connection, 52 calls, total 0.111388206481934 sec spent, avg 2.14 ms
19.11 19:33:49 TIME: battle.find 33.57 ms
19.11 19:33:49 == NET: uid140 ret: battle.find { type => battle.find, errorCode => ok }
19.11 19:33:49 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 140, enemy.name => uid140, id => 19, enemy.num => 1, battleId => 16, player => 2 }, type => battle.enemy }
19.11 19:33:49 == NET: uid140 ret: battle.enemy { data => { name => uid140, enemy.id => 19, enemy.name => uid19, id => 140, enemy.num => 2, battleId => 16, player => 1 }, type => battle.enemy }
19.11 19:33:55 ++ NET: uid140 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 16 }
19.11 19:33:55 ->>-: vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
19.11 19:33:55 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 140, _type => vdl/cache.battle.infoRoom, turnId => 140 }
19.11 19:33:55 TIME: battle.sendtask 0.8 ms
19.11 19:33:55 == NET: uid140 ret: battle.sendtask { name => throw, type => battle.task, dices => [5,5,5,2,0,3], errorCode => ok }
19.11 19:33:55 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [5,5,5,2,0,3], errorCode => ok }
19.11 19:33:55 == NET: uid140 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:33:59 ++ NET: uid140 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 16 }
19.11 19:33:59 ->>-: vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
19.11 19:33:59 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 140, _type => vdl/cache.battle.infoRoom, turnId => 140 }
19.11 19:33:59 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 140, player2 => 19, battleId => 16 }
19.11 19:33:59 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 19:33:59 TIME: battle.sendtask 3.88 ms
19.11 19:33:59 == NET: uid140 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:33:59 == NET: uid19 ret: battle.task { dice => 5, from => [7,4], name => swap, side => 2, type => battle.task, dices => [5,5,2,0,3], messageType => battle.sendtask, to => [8,4], battleId => 16 }
19.11 19:34:01 ++ NET: uid140 req: battle.sendtask { dice => 5, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 16 }
19.11 19:34:01 ->>-: vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
19.11 19:34:01 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 140, _type => vdl/cache.battle.infoRoom, turnId => 140 }
19.11 19:34:01 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 140, player2 => 19, battleId => 16 }
19.11 19:34:02 -<<-: vdl/cache.battle.setScores { errorCode => _requestException, _type => vdl/cache.battle.setScores }
19.11 19:34:02 TRACE: battle.sendtask : cacheRequest exception { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 140, player2 => 19, battleId => 16 }
19.11 19:34:02 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 432
Called from modules/VDLBattleModule.hx line 388
Called from modules/VDLBattleModule.hx line 64
Called from modules/VDLBattleModule.hx line 42
Called from snipe/slave/Server.hx line 1176
19.11 19:34:04 NET: Client (name:uid140 conid:43375874 TCP) disconnected from vdl.0 (clients:1)
19.11 19:34:04 DB: SELECT id FROM battle WHERE firstid=140 OR secondid=140 AND finished <> true
19.11 19:34:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=140 OR secondid=140 AND finished <> true, _type => core/server.query }
19.11 19:34:04 NET: Client (conid:80225580) connected to vdl.0 (clients:2)
19.11 19:34:04 -<<-: core/server.query { list => {{ id => 14 }, { id => 16 }}, errorCode => ok, _type => core/server.query }
19.11 19:34:04 ->>-: vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
19.11 19:34:04 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 140, _type => vdl/cache.battle.infoRoom, turnId => 140 }
19.11 19:34:04 ->>-: vdl/cache.battle.deleteRoom { roomId => 16, _type => vdl/cache.battle.deleteRoom }
19.11 19:34:04 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 19:34:04 ->>-: vdl/cache.battle.finishRoom { roomId => 16, _type => vdl/cache.battle.finishRoom }
19.11 19:34:04 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 19:34:04 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 140, _type => core/cache.update }
19.11 19:34:04 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 19:34:04 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 140, _type => core/cache.update }
19.11 19:34:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:34:04 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 140, _type => core/user.logoutPost }
19.11 19:34:04 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 19:34:04 == NET: uid19 ret: battle.leave { type => battle.leave }
19.11 19:34:04 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQw }
19.11 19:34:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140'
19.11 19:34:04 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140', _type => core/server.query }
19.11 19:34:04 -<<-: core/server.query { list => {{ name => uid140, networkid => , isbanned => false, id => 140 }}, errorCode => ok, _type => core/server.query }
19.11 19:34:04 ->>-: core/user.isOnlineID { id => 140, _type => core/user.isOnlineID }
19.11 19:34:04 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:34:04 ->>-: core/cache.get { type => user, v => -1, id => 140, _type => core/cache.get }
19.11 19:34:04 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid140, deleted => false, email => , networktype =>   , password => uid140, isbanned => false, regdate => 2016-11-19 17:25:00.661+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479567029, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 2, id => 140 } }
19.11 19:34:04 ->>-: core/cache.get { type => questdata, v => -1, id => 140, _type => core/cache.get }
19.11 19:34:04 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 140 } }
19.11 19:34:04 NET: Client login (conid:80225580, id:140, name:uid140)
19.11 19:34:04 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 140, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 19:34:04 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:34:04 == NET: uid140 ret: user.login { name => uid140, type => user.login, errorCode => ok, id => 140 }
19.11 19:34:04 == NET: uid19 ret: user.join { name => uid140, type => user.join }
19.11 19:34:04 == NET: uid140 ret: user.join { name => uid19, type => user.join }
19.11 19:34:04 == NET:19.11 19:41:28 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 19:41:28 -<<-: server.login ok
19.11 19:41:28 DB: SELECT * FROM LocalizationStrings
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 TIMER: Starting timer...
19.11 19:41:28 TIMER: Timer running...
19.11 19:41:28 DB: SELECT * FROM GameVars
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 19:41:28 -<<-: core/quest.getDaily ok
19.11 19:41:28 DB: SELECT * FROM UserAttributeTypes
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM UserVariableTypes
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 19:41:28 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM ItemGroups
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM Bundles ORDER BY ID
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 SHOP: loading items...
19.11 19:41:28 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 19:41:28 -<<-: core/shop.getList ok
19.11 19:41:28 SHOP: 0 items loaded (0 sec)
19.11 19:41:28 DB: SELECT * FROM EffectAttributeTypes
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM Effects
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 19:41:28 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 19:41:28 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 DB: SELECT * FROM Badges
19.11 19:41:28 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 19:41:28 -<<-: core/server.query ok
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:41:28 TIMER: Check auto-disconnect...
19.11 19:41:28 STATS: vdl.0 cache, locks:0
19.11 19:50:50 NET: Client (conid:69374570) connected to vdl.0 (clients:1)
19.11 19:50:51 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQw }
19.11 19:50:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140'
19.11 19:50:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140', _type => core/server.query }
19.11 19:50:51 -<<-: core/server.query ok
19.11 19:50:51 STATS: vdl.0 cache connection, 21 calls, total 0.0214455127716064 sec spent, avg 1.02 ms
19.11 19:50:51 ->>-: core/user.isOnlineID { id => 140, _type => core/user.isOnlineID }
19.11 19:50:51 -<<-: core/user.isOnlineID ok
19.11 19:50:51 ->>-: core/cache.get { type => user, v => -1, id => 140, _type => core/cache.get }
19.11 19:50:51 -<<-: core/cache.get ok
19.11 19:50:51 ->>-: core/cache.get { type => questdata, v => -1, id => 140, _type => core/cache.get }
19.11 19:50:51 -<<-: core/cache.get ok
19.11 19:50:51 NET: Client login (conid:69374570, id:140, name:uid140)
19.11 19:50:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 140, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 19:50:51 -<<-: core/user.loginPost null
19.11 19:50:51 == NET: uid140 ret: user.login { name => uid140, type => user.login, errorCode => ok, id => 140 }
19.11 19:50:51 == NET: uid140 ret: user.join { name => uid140, type => user.join }
19.11 19:50:54 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:50:54 TIME: user.ping 0.09 ms
19.11 19:50:54 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:50:58 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 140, _type => core/cache.update }
19.11 19:50:58 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:51:19 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:51:19 TIME: user.ping 0.11 ms
19.11 19:51:19 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:51:28 TIMER: Check auto-disconnect...
19.11 19:51:28 STATS: vdl.0 cache, locks:2
19.11 19:51:47 NET: Client (name:uid140 conid:69374570 TCP) disconnected from vdl.0 (clients:0)
19.11 19:51:47 DB: SELECT id FROM battle WHERE firstid=140 OR secondid=140 AND finished <> true
19.11 19:51:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=140 OR secondid=140 AND finished <> true, _type => core/server.query }
19.11 19:51:47 -<<-: core/server.query { list => {{ id => 14 }}, errorCode => ok, _type => core/server.query }
19.11 19:51:47 ->>-: vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
19.11 19:51:47 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 140, _type => vdl/cache.battle.infoRoom, turnId => 140 }
19.11 19:51:47 ->>-: vdl/cache.battle.deleteRoom { roomId => 14, _type => vdl/cache.battle.deleteRoom }
19.11 19:51:47 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 19:51:47 ->>-: vdl/cache.battle.finishRoom { roomId => 14, _type => vdl/cache.battle.finishRoom }
19.11 19:51:47 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 19:51:47 ->>-: core/user.sendTo { id => 19, _type => core/user.sendTo, msg => { _type => battle.leave } }
19.11 19:51:47 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
19.11 19:51:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 140, _type => core/cache.update }
19.11 19:51:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 19:51:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 140, _type => core/cache.update }
19.11 19:51:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:51:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 140, _type => core/user.logoutPost }
19.11 19:51:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 19:51:51 NET: Client (conid:26626619) connected to vdl.0 (clients:1)
19.11 19:51:51 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQw }
19.11 19:51:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140'
19.11 19:51:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140', _type => core/server.query }
19.11 19:51:51 -<<-: core/server.query { list => {{ name => uid140, networkid => , isbanned => false, id => 140 }}, errorCode => ok, _type => core/server.query }
19.11 19:51:51 STATS: vdl.0 cache connection, 35 calls, total 0.0586228370666504 sec spent, avg 1.67 ms
19.11 19:51:51 ->>-: core/user.isOnlineID { id => 140, _type => core/user.isOnlineID }
19.11 19:51:51 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:51:51 ->>-: core/cache.get { type => user, v => -1, id => 140, _type => core/cache.get }
19.11 19:51:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid140, deleted => false, email => , networktype =>   , password => uid140, isbanned => false, regdate => 2016-11-19 17:25:00.661+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479567029, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 2, id => 140 } }
19.11 19:51:51 ->>-: core/cache.get { type => questdata, v => -1, id => 140, _type => core/cache.get }
19.11 19:51:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 140 } }
19.11 19:51:51 NET: Client login (conid:26626619, id:140, name:uid140)
19.11 19:51:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 140, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 19:51:51 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:51:51 == NET: uid140 ret: user.login { name => uid140, type => user.login, errorCode => ok, id => 140 }
19.11 19:51:51 == NET: uid140 ret: user.join { name => uid140, type => user.join }
19.11 19:51:55 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:51:55 TIME: user.ping 0.22 ms
19.11 19:51:55 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:51:58 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 140, _type => core/cache.update }
19.11 19:51:58 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.11 19:52:13 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:52:13 TIME: user.ping 0.19 ms
19.11 19:52:13 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:52:28 TIMER: Check auto-disconnect...
19.11 19:52:28 STATS: vdl.0 cache, locks:2
19.11 19:52:30 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:52:30 TIME: user.ping 0.19 ms
19.11 19:52:30 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:52:46 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:52:46 TIME: user.ping 0.2 ms
19.11 19:52:46 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:53:02 NET: Client (name:uid140 conid:26626619 TCP) disconnected from vdl.0 (clients:0)
19.11 19:53:02 DB: SELECT id FROM battle WHERE firstid=140 OR secondid=140 AND finished <> true
19.11 19:53:02 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=140 OR secondid=140 AND finished <> true, _type => core/server.query }
19.11 19:53:02 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 19:53:02 STATS: vdl.0 cache connection, 41 calls, total 0.0636312961578369 sec spent, avg 1.55 ms
19.11 19:53:02 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 19:53:02 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 19:53:02 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 19:53:02 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 994
19.11 19:53:02 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 140, _type => core/cache.update }
19.11 19:53:02 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
19.11 19:53:02 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 140, _type => core/cache.update }
19.11 19:53:02 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 19:53:02 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 140, _type => core/user.logoutPost }
19.11 19:53:02 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 19:53:05 NET: Client (conid:8646784) connected to vdl.0 (clients:1)
19.11 19:53:06 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQw }
19.11 19:53:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140'
19.11 19:53:06 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140', _type => core/server.query }
19.11 19:53:06 -<<-: core/server.query { list => {{ name => uid140, networkid => , isbanned => false, id => 140 }}, errorCode => ok, _type => core/server.query }
19.11 19:53:06 ->>-: core/user.isOnlineID { id => 140, _type => core/user.isOnlineID }
19.11 19:53:06 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:53:06 ->>-: core/cache.get { type => user, v => -1, id => 140, _type => core/cache.get }
19.11 19:53:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid140, deleted => false, email => , networktype =>   , password => uid140, isbanned => false, regdate => 2016-11-19 17:25:00.661+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479567029, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 4, id => 140 } }
19.11 19:53:06 ->>-: core/cache.get { type => questdata, v => -1, id => 140, _type => core/cache.get }
19.11 19:53:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 140 } }
19.11 19:53:06 NET: Client login (conid:8646784, id:140, name:uid140)
19.11 19:53:06 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 140, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 19:53:06 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:53:06 == NET: uid140 ret: user.login { name => uid140, type => user.login, errorCode => ok, id => 140 }
19.11 19:53:06 == NET: uid140 ret: user.join { name => uid140, type => user.join }
19.11 19:53:10 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:53:10 TIME: user.ping 0.2 ms
19.11 19:53:10 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:53:13 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 140, _type => core/cache.update }
19.11 19:53:13 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
19.11 19:53:28 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:53:28 TIME: user.ping 0.21 ms
19.11 19:53:28 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:53:28 TIMER: Check auto-disconnect...
19.11 19:53:28 STATS: vdl.0 cache, locks:2
19.11 19:53:44 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:53:44 TIME: user.ping 0.34 ms
19.11 19:53:44 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:54:01 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:54:01 TIME: user.ping 0.17 ms
19.11 19:54:01 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:54:18 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:54:18 TIME: user.ping 0.16 ms
19.11 19:54:18 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:54:28 TIMER: Check auto-disconnect...
19.11 19:54:28 STATS: vdl.0 cache, locks:2
19.11 19:54:37 NET: Client (name:uid140 conid:8646784 TCP) disconnected from vdl.0 (clients:0)
19.11 19:54:37 DB: SELECT id FROM battle WHERE firstid=140 OR secondid=140 AND finished <> true
19.11 19:54:37 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=140 OR secondid=140 AND finished <> true, _type => core/server.query }
19.11 19:54:37 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 19:54:37 STATS: vdl.0 cache connection, 52 calls, total 0.0763750076293945 sec spent, avg 1.47 ms
19.11 19:54:37 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 19:54:37 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 19:54:37 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 19:54:37 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 994
19.11 19:54:37 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 140, _type => core/cache.update }
19.11 19:54:37 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
19.11 19:54:37 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 140, _type => core/cache.update }
19.11 19:54:37 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.11 19:54:37 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 140, _type => core/user.logoutPost }
19.11 19:54:37 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 19:55:28 TIMER: Check auto-disconnect...
19.11 19:55:28 STATS: vdl.0 cache, locks:0
19.11 19:56:16 NET: Client (conid:93496428) connected to vdl.0 (clients:1)
19.11 19:56:17 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTQw }
19.11 19:56:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140'
19.11 19:56:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid140' AND Password = E'uid140', _type => core/server.query }
19.11 19:56:17 -<<-: core/server.query { list => {{ name => uid140, networkid => , isbanned => false, id => 140 }}, errorCode => ok, _type => core/server.query }
19.11 19:56:17 STATS: vdl.0 cache connection, 57 calls, total 0.0830078125 sec spent, avg 1.46 ms
19.11 19:56:17 ->>-: core/user.isOnlineID { id => 140, _type => core/user.isOnlineID }
19.11 19:56:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:56:17 ->>-: core/cache.get { type => user, v => -1, id => 140, _type => core/cache.get }
19.11 19:56:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid140, deleted => false, email => , networktype =>   , password => uid140, isbanned => false, regdate => 2016-11-19 17:25:00.661+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479567029, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 140 } }
19.11 19:56:17 ->>-: core/cache.get { type => questdata, v => -1, id => 140, _type => core/cache.get }
19.11 19:56:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 140 } }
19.11 19:56:17 NET: Client login (conid:93496428, id:140, name:uid140)
19.11 19:56:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 140, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 19:56:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:56:17 == NET: uid140 ret: user.login { name => uid140, type => user.login, errorCode => ok, id => 140 }
19.11 19:56:17 == NET: uid140 ret: user.join { name => uid140, type => user.join }
19.11 19:56:21 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:56:21 TIME: user.ping 0.2 ms
19.11 19:56:21 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:56:23 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 140, _type => core/cache.update }
19.11 19:56:23 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:56:26 ++ NET: uid140 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 19:56:26 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 140 }, _type => vdl/cache.battle.findRandom }
19.11 19:56:26 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 19:56:26 TIME: battle.find 0.72 ms
19.11 19:56:26 == NET: uid140 ret: battle.find { type => battle.find, errorCode => ok }
19.11 19:56:27 NET: Client (conid:2752332) connected to vdl.0 (clients:2)
19.11 19:56:28 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 19:56:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 19:56:28 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 19:56:28 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 19:56:28 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 19:56:28 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 19:56:28 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 19:56:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 19:56:28 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 19:56:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 19:56:28 NET: Client login (conid:2752332, id:19, name:uid19)
19.11 19:56:28 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 19:56:28 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 19:56:28 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 19:56:28 == NET: uid140 ret: user.join { name => uid19, type => user.join }
19.11 19:56:28 == NET: uid19 ret: user.join { name => uid140, type => user.join }
19.11 19:56:28 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 19:56:28 TIMER: Check auto-disconnect...
19.11 19:56:28 STATS: vdl.0 cache, locks:4
19.11 19:56:33 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 19:56:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 19:56:36 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:56:36 TIME: user.ping 0.16 ms
19.11 19:56:36 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:56:39 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:56:39 TIME: user.ping 0.16 ms
19.11 19:56:39 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:56:47 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 19:56:47 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 19:56:47 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 140, enemy.name => uid140, id => 19, enemy.num => 2, battleId => 17, player => 1 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 19:56:47 -<<-: battle.enemyEvent { data => { name => uid140, enemy.id => 19, enemy.name => uid19, id => 140, enemy.num => 1, battleId => 17, player => 2 }, _isNotify => true, id => 140, _type => battle.enemyEvent }
19.11 19:56:47 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 19:56:47 TIME: battle.find 39.69 ms
19.11 19:56:47 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 19:56:47 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 140, enemy.name => uid140, id => 19, enemy.num => 2, battleId => 17, player => 1 }, type => battle.enemy }
19.11 19:56:47 == NET: uid140 ret: battle.enemy { data => { name => uid140, enemy.id => 19, enemy.name => uid19, id => 140, enemy.num => 1, battleId => 17, player => 2 }, type => battle.enemy }
19.11 19:56:54 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 17 }
19.11 19:56:54 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
19.11 19:56:54 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:56:54 TIME: battle.sendtask 0.57 ms
19.11 19:56:54 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [3,1,2,2,5,2], errorCode => ok, _type => battle.task }
19.11 19:56:54 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:56:54 == NET: uid140 ret: battle.task { name => throw, type => battle.task, dices => [3,1,2,2,5,2], errorCode => ok }
19.11 19:56:56 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:56:56 TIME: user.ping 0.17 ms
19.11 19:56:56 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:56:57 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 17 }
19.11 19:56:57 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
19.11 19:56:57 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:56:57 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 140, battleId => 17 }
19.11 19:56:57 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 19:56:57 TIME: battle.sendtask 3.1 ms
19.11 19:56:57 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:56:57 == NET: uid140 ret: battle.task { dice => 5, from => [7,4], name => swap, side => 2, type => battle.task, dices => [3,1,2,2,2], messageType => battle.sendtask, to => [8,4], battleId => 17 }
19.11 19:57:00 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 17 }
19.11 19:57:00 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
19.11 19:57:00 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:57:00 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 140, battleId => 17 }
19.11 19:57:00 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 19:57:00 TIME: battle.sendtask 3.36 ms
19.11 19:57:00 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:57:00 == NET: uid140 ret: battle.task { dice => 3, from => [8,4], name => swap, side => 2, type => battle.task, dices => [1,2,2,2], messageType => battle.sendtask, to => [9,4], battleId => 17 }
19.11 19:57:05 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 17 }
19.11 19:57:05 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
19.11 19:57:05 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:57:05 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 140, battleId => 17 }
19.11 19:57:05 -<<-: battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 19, battleId => 17 }
19.11 19:57:05 -<<-: battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 19, battleId => 17 }
19.11 19:57:05 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 19:57:05 TIME: battle.sendtask 6.33 ms
19.11 19:57:05 ->>-: core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
19.11 19:57:05 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 19:57:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => --- DEFAULT ATTRIBUTES ---, deleted => false, email => , networktype =>   , password => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , networkid => , params => { inventory => { list => [] }, attrs => {}, effects => { list => [] } }}, version => 0, id => 1 } }
19.11 19:57:05 ->>-: core/cache.get { type => questdata, v => -1, id => 1, _type => core/cache.get }
19.11 19:57:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 1 } }
19.11 19:57:05 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
19.11 19:57:05 -<<-: vdl/cache.battle.infoRoom { secondId => 140, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 19:57:05 ->>-: vdl/cache.battle.finishRoom { roomId => 17, _type => vdl/cache.battle.finishRoom }
19.11 19:57:05 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 19:57:05 ->>-: core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
19.11 19:57:05 -<<-: core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
19.11 19:57:05 TRACE: Invalid field access : id
19.11 19:57:05 == NET: uid140 ret: battle.task { dice => 2, from => [8,4], name => swap, side => 2, type => battle.task, dices => [1,2,2], messageType => battle.sendtask, to => [9,4], battleId => 17 }
19.11 19:57:05 TRACE: 
Called from modules/VDLBattleModule.hx line 144
Called from a C function
Called from snipe/slave/Server.hx line 685
Called from snipe/slave/CacheConnection.hx line 303
Called from snipe/slave/ThreadServerModified.hx line 202
19.11 19:57:05 == NET: uid140 ret: battle.end { type => battle.end }
19.11 19:57:16 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:57:16 TIME: user.ping 0.15 ms
19.11 19:57:16 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:57:28 TIMER: Check auto-disconnect...
19.11 19:57:28 STATS: vdl.0 cache, locks:6
19.11 19:57:37 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:57:37 TIME: user.ping 0.15 ms
19.11 19:57:37 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:57:38 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:57:38 TIME: user.ping 0.17 ms
19.11 19:57:38 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:57:59 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:57:59 TIME: user.ping 0.08 ms
19.11 19:57:59 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:58:21 ++ NET: uid140 req: user.ping { messageType => user.ping, msg => ok }
19.11 19:58:21 TIME: user.ping 0.18 ms
19.11 19:58:21 == NET: uid140 ret: user.ping { type => user.ping, errorCode => ok }
19.11 19:59:28 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 19:59:28 -<<-: server.login ok
19.11 19:59:28 DB: SELECT * FROM LocalizationStrings
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 TIMER: Starting timer...
19.11 19:59:28 TIMER: Timer running...
19.11 19:59:28 DB: SELECT * FROM GameVars
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 19:59:28 -<<-: core/quest.getDaily ok
19.11 19:59:28 DB: SELECT * FROM UserAttributeTypes
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM UserVariableTypes
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 19:59:28 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM ItemGroups
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM Bundles ORDER BY ID
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 SHOP: loading items...
19.11 19:59:28 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 19:59:28 -<<-: core/shop.getList ok
19.11 19:59:28 SHOP: 0 items loaded (0 sec)
19.11 19:59:28 DB: SELECT * FROM EffectAttributeTypes
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM Effects
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 19:59:28 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 19:59:28 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 DB: SELECT * FROM Badges
19.11 19:59:28 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 19:59:28 -<<-: core/server.query ok
19.11 19:59:28 TIMER: Check auto-disconnect...
19.11 19:59:28 STATS: vdl.0 cache, locks:0
19.11 19:59:28 TIMER: Check auto-disconnect...
19.11 19:59:28 STATS: vdl.0 cache, locks:0
19.11 19:59:28 TIMER: Check auto-disconnect...
19.11 19:59:28 STATS: vdl.0 cache, locks:0
19.11 19:59:28 TIMER: Check auto-disconnect...
19.11 19:59:28 STATS: vdl.0 cache, locks:0
19.11 19:59:28 TIMER: Check auto-disconnect...
19.11 19:59:28 STATS: vdl.0 cache, locks:0
19.11 19:59:28 TIMER: Check auto-disconnect...
19.11 19:59:28 STATS: vdl.0 cache, locks:0
19.11 19:59:28 TIMER: Check auto-disconnect...
19.11 19:59:28 STATS: vdl.0 cache, locks:0
19.11 19:59:28 TIMER: Check auto-disconnect...
19.11 19:59:28 STATS: vdl.0 cache, locks:0
