10.11 11:00:27 TIMER: Check auto-disconnect...
10.11 11:00:53 STATS: vdl.0 cache, locks:2
10.11 11:01:27 TIMER: Check auto-disconnect...
10.11 11:01:53 STATS: vdl.0 cache, locks:2
10.11 11:02:27 TIMER: Check auto-disconnect...
10.11 11:02:53 STATS: vdl.0 cache, locks:2
10.11 11:03:27 TIMER: Check auto-disconnect...
10.11 11:03:53 STATS: vdl.0 cache, locks:2
10.11 11:04:27 TIMER: Check auto-disconnect...
10.11 11:04:53 STATS: vdl.0 cache, locks:2
10.11 11:05:27 TIMER: Check auto-disconnect...
10.11 11:05:53 STATS: vdl.0 cache, locks:2
10.11 11:06:27 TIMER: Check auto-disconnect...
10.11 11:06:53 STATS: vdl.0 cache, locks:2
10.11 11:07:27 TIMER: Check auto-disconnect...
10.11 11:07:53 STATS: vdl.0 cache, locks:2
10.11 11:08:27 TIMER: Check auto-disconnect...
10.11 11:08:53 STATS: vdl.0 cache, locks:2
10.11 11:09:27 TIMER: Check auto-disconnect...
10.11 11:09:53 STATS: vdl.0 cache, locks:2
10.11 11:10:27 TIMER: Check auto-disconnect...
10.11 11:10:53 STATS: vdl.0 cache, locks:2
10.11 11:11:27 TIMER: Check auto-disconnect...
10.11 11:11:53 STATS: vdl.0 cache, locks:2
10.11 11:12:27 TIMER: Check auto-disconnect...
10.11 11:12:53 STATS: vdl.0 cache, locks:2
10.11 11:13:27 TIMER: Check auto-disconnect...
10.11 11:13:53 STATS: vdl.0 cache, locks:2
10.11 11:14:27 TIMER: Check auto-disconnect...
10.11 11:14:53 STATS: vdl.0 cache, locks:2
10.11 11:15:27 TIMER: Check auto-disconnect...
10.11 11:15:53 STATS: vdl.0 cache, locks:2
10.11 11:16:27 TIMER: Check auto-disconnect...
10.11 11:16:53 STATS: vdl.0 cache, locks:2
10.11 11:17:27 TIMER: Check auto-disconnect...
10.11 11:17:53 STATS: vdl.0 cache, locks:2
10.11 11:18:27 TIMER: Check auto-disconnect...
10.11 11:18:53 STATS: vdl.0 cache, locks:2
10.11 11:19:27 TIMER: Check auto-disconnect...
10.11 11:19:53 STATS: vdl.0 cache, locks:2
10.11 11:20:27 TIMER: Check auto-disconnect...
10.11 11:20:53 STATS: vdl.0 cache, locks:2
10.11 11:21:27 TIMER: Check auto-disconnect...
10.11 11:21:53 STATS: vdl.0 cache, locks:2
10.11 11:22:27 TIMER: Check auto-disconnect...
10.11 11:22:53 STATS: vdl.0 cache, locks:2
10.11 11:23:26 NET: Client (conid:78767796) connected to vdl.0 (clients:1)
10.11 11:23:26 NET: Client (conid:78767796) switched protocol to WS
10.11 11:23:27 TIMER: Check auto-disconnect...
10.11 11:23:31 ++ NET: null req: user.register { messageType => user.register }
10.11 11:23:31 DB: SELECT * FROM users
10.11 11:23:31 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
10.11 11:23:31 -<<-: core/server.query { list => {{ city => , password => uid13, name => uid13, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478607328,"lastLoginDate":313,"lastLoadDate":1109},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-08 12:12:04.852124+00, language => en, id => 13, deleted => false }, { city => , password => uid14, name => uid14, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-08 13:14:46.345018+00, language =>   , id => 14, deleted => false }, { city => , password => uid15, name => uid15, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-09 05:34:34.590854+00, language =>   , id => 15, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478241985,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 06:30:28.926728+00, language => en, id => 2, deleted => false }, { city => , password => uid16, name => uid16, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478693925,"lastLoginDate":314,"lastLoadDate":1110},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-09 10:52:42.770365+00, language => en, id => 16, deleted => false }, { city => , password => uid17, name => uid17, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478704280,"lastLoginDate":314,"lastLoadDate":1110},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-09 15:10:31.046564+00, language => en, id => 17, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478242996,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 06:50:49.832936+00, language => en, id => 5, deleted => false }, { city => , password => uid4, name => uid4, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478242307,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 06:43:10.450435+00, language => en, id => 4, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478241272,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 06:32:57.383511+00, language => en, id => 3, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-04 08:27:06.517881+00, language =>   , id => 6, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478364807,"lastLoginDate":310,"lastLoadDate":1106},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-05 00:45:47.596212+00, language => en, id => 7, deleted => false }, { city => , password => uid18, name => uid18, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478764099,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 06:53:54.543057+00, language => en, id => 18, deleted => false }, { city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"inventory":{"list":[]},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-01 09:46:34.649034+00, language =>   , id => 1, deleted => false }, { city => , password => uid10, name => uid10, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478530591,"lastLoginDate":312,"lastLoadDate":1108},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-07 14:50:55.832911+00, language => en, id => 10, deleted => false }, { city => , password => uid11, name => uid11, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-07 15:01:58.43834+00, language =>   , id => 11, deleted => false }, { city => , password => uid9, name => uid9, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478530461,"lastLoginDate":312,"lastLoadDate":1108},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-07 14:44:43.112805+00, language => en, id => 9, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478529438,"lastLoginDate":312,"lastLoadDate":1108},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-07 14:33:04.917648+00, language => en, id => 8, deleted => false }, { city => , password => uid12, name => uid12, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478605990,"lastLoginDate":313,"lastLoadDate":1109},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-08 11:41:17.072885+00, language => en, id => 12, deleted => false }}, errorCode => ok, _type => core/server.query }
10.11 11:23:31 STATS: vdl.0 cache connection, 679 calls, total 0.478461742401123 sec spent, avg 0.7 ms
10.11 11:23:31 == NET: null ret: user.auth { type => user.auth, token => dWlkMTk= }
10.11 11:23:31 DB: SELECT ID FROM Users WHERE Name = 'uid19'
10.11 11:23:31 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid19', _type => core/server.query }
10.11 11:23:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:23:31 DB: SELECT nextval('Users_id_seq') AS id
10.11 11:23:31 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
10.11 11:23:31 -<<-: core/server.query { list => {{ id => 19 }}, errorCode => ok, _type => core/server.query }
10.11 11:23:31 ->>-: core/user.register { password => uid19, name => uid19, fullParams => { password => uid19, name => uid19, networkid => , networktype => , messageType => user.register, id => 19 }, networkid => , connectionID => 78767796, networktype => , email => , id => 19, _type => core/user.register }
10.11 11:23:31 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
10.11 11:23:31 -<<-: core/user.registerResponse { password => uid19, name => uid19, _isNotify => true, fullParams => { password => uid19, name => uid19, networkid => , networktype => , messageType => user.register, id => 19 }, networkid => , connectionID => 78767796, networktype => , email => , id => 19, _type => core/user.registerResponse }
10.11 11:23:31 DB: SELECT token FROM tokens WHERE userid = 19
10.11 11:23:31 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 19, _type => core/server.query }
10.11 11:23:31 -<<-: core/server.query { list => {{ token => 25a8edacc55e981ba327cc55f0a49e31 }}, errorCode => ok, _type => core/server.query }
10.11 11:23:31 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 25a8edacc55e981ba327cc55f0a49e31 }
10.11 11:23:33 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
10.11 11:23:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
10.11 11:23:33 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
10.11 11:23:33 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
10.11 11:23:33 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
10.11 11:23:33 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 11:23:33 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
10.11 11:23:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid19, isbanned => false, regdate => 2016-11-10 11:23:31.038042+00, city => 1, language =>   , region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, hints => 15 }, effects => { list => [] } }}, version => 19, id => 19 } }
10.11 11:23:33 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
10.11 11:23:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 19 } }
10.11 11:23:33 NET: Client login (conid:78767796, id:19, name:uid19)
10.11 11:23:33 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 11:23:33 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 11:23:33 DB: SELECT token FROM tokens WHERE userid = 19
10.11 11:23:33 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 19, _type => core/server.query }
10.11 11:23:33 -<<-: core/server.query { list => {{ token => 25a8edacc55e981ba327cc55f0a49e31 }}, errorCode => ok, _type => core/server.query }
10.11 11:23:33 DB: SELECT ID FROM TempUserLogins WHERE UserID = 19 AND Date = 'today'::timestamp
10.11 11:23:33 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 19 AND Date = 'today'::timestamp, _type => core/server.query }
10.11 11:23:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:23:33 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (19, 'today'::timestamp)
10.11 11:23:33 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19, token => 25a8edacc55e981ba327cc55f0a49e31 }
10.11 11:23:33 == NET: uid19 ret: user.join { name => uid19, type => user.join }
10.11 11:23:33 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (19, 'today'::timestamp), _type => core/server.pending }} }
10.11 11:23:33 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
10.11 11:23:33 ++ NET: uid19 req: user.login { messageType => user.login, token => dWlkMTk= }
10.11 11:23:33 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
10.11 11:23:33 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
10.11 11:23:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:23:33 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:23:33 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 11:23:33 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:23:33 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 11:23:33 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478777013, lastLoginDate => 315, lastLoadDate => 1111 } }}, type => user, unlock => true, id => 19, _type => core/cache.update }
10.11 11:23:33 -<<-: core/cache.update { errorCode => ok, version => 20, _type => core/cache.update }
10.11 11:23:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
10.11 11:23:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 11:23:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
10.11 11:23:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 11:23:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
10.11 11:23:33 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
10.11 11:23:33 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
10.11 11:23:33 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
10.11 11:23:33 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 11:23:33 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
10.11 11:23:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid19, isbanned => false, regdate => 2016-11-10 11:23:31.038042+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1478777013, lastLoginDate => 315, lastLoadDate => 1111, hints => 15 }, effects => { list => [] } }}, version => 20, id => 19 } }
10.11 11:23:33 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
10.11 11:23:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 19 } }
10.11 11:23:33 NET: Client login (conid:78767796, id:19, name:uid19)
10.11 11:23:33 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 11:23:33 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 11:23:33 DB: SELECT token FROM tokens WHERE userid = 19
10.11 11:23:33 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 19, _type => core/server.query }
10.11 11:23:33 -<<-: core/server.query { list => {{ token => 25a8edacc55e981ba327cc55f0a49e31 }}, errorCode => ok, _type => core/server.query }
10.11 11:23:35 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:23:35 TIME: user.ping 0.1 ms
10.11 11:23:38 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
10.11 11:23:38 -<<-: core/cache.update { errorCode => ok, version => 21, _type => core/cache.update }
10.11 11:23:43 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:23:43 TIME: user.ping 0.12 ms
10.11 11:23:50 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:23:50 TIME: user.ping 0.11 ms
10.11 11:23:53 STATS: vdl.0 cache, locks:4
10.11 11:23:56 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:23:56 TIME: user.ping 0.11 ms
10.11 11:24:02 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:24:02 TIME: user.ping 0.12 ms
10.11 11:24:08 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:24:08 TIME: user.ping 0.1 ms
10.11 11:24:14 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:24:14 TIME: user.ping 0.12 ms
10.11 11:24:20 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:24:20 TIME: user.ping 0.13 ms
10.11 11:24:26 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:24:26 TIME: user.ping 0.14 ms
10.11 11:24:27 TIMER: Check auto-disconnect...
10.11 11:24:34 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:24:34 TIME: user.ping 0.1 ms
10.11 11:24:44 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:24:44 TIME: user.ping 0.12 ms
10.11 11:24:53 STATS: vdl.0 cache, locks:4
10.11 11:25:27 TIMER: Check auto-disconnect...
10.11 11:25:32 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:25:32 TIME: user.ping 0.12 ms
10.11 11:25:53 STATS: vdl.0 cache, locks:4
10.11 11:26:05 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:26:05 TIME: user.ping 0.1 ms
10.11 11:26:27 TIMER: Check auto-disconnect...
10.11 11:26:53 STATS: vdl.0 cache, locks:4
10.11 11:27:14 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:27:14 TIME: user.ping 0.13 ms
10.11 11:27:21 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:27:21 TIME: user.ping 0.11 ms
10.11 11:27:27 TIMER: Check auto-disconnect...
10.11 11:27:28 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:27:28 TIME: user.ping 0.11 ms
10.11 11:27:35 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:27:35 TIME: user.ping 0.1 ms
10.11 11:27:42 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:27:42 TIME: user.ping 0.11 ms
10.11 11:27:49 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:27:49 TIME: user.ping 0.11 ms
10.11 11:27:53 STATS: vdl.0 cache, locks:4
10.11 11:27:55 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:27:55 TIME: user.ping 0.13 ms
10.11 11:28:01 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:28:01 TIME: user.ping 0.12 ms
10.11 11:28:07 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:28:07 TIME: user.ping 0.11 ms
10.11 11:28:14 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:28:14 TIME: user.ping 0.1 ms
10.11 11:28:21 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:28:21 TIME: user.ping 0.11 ms
10.11 11:28:27 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:28:27 TIME: user.ping 0.11 ms
10.11 11:28:27 TIMER: Check auto-disconnect...
10.11 11:28:33 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:28:33 TIME: user.ping 0.12 ms
10.11 11:28:39 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:28:39 TIME: user.ping 0.11 ms
10.11 11:28:45 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:28:45 TIME: user.ping 0.12 ms
10.11 11:28:46 NET: Client (name:uid19 conid:78767796 WS) disconnected from vdl.0 (clients:0)
10.11 11:28:46 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
10.11 11:28:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
10.11 11:28:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:28:46 STATS: vdl.0 cache connection, 704 calls, total 0.503606796264648 sec spent, avg 0.72 ms
10.11 11:28:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:28:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 11:28:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:28:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 11:28:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
10.11 11:28:46 -<<-: core/cache.update { errorCode => ok, version => 22, _type => core/cache.update }
10.11 11:28:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
10.11 11:28:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 11:28:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
10.11 11:28:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 11:28:53 STATS: vdl.0 cache, locks:2
10.11 11:29:27 TIMER: Check auto-disconnect...
10.11 11:29:53 STATS: vdl.0 cache, locks:2
10.11 11:30:27 TIMER: Check auto-disconnect...
10.11 11:30:53 STATS: vdl.0 cache, locks:2
10.11 11:31:27 TIMER: Check auto-disconnect...
10.11 11:31:30 NET: Client (conid:14297473) connected to vdl.0 (clients:1)
10.11 11:31:30 NET: Client (conid:14297473) switched protocol to WS
10.11 11:31:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
10.11 11:31:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
10.11 11:31:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
10.11 11:31:31 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
10.11 11:31:31 STATS: vdl.0 cache connection, 709 calls, total 0.506543397903442 sec spent, avg 0.71 ms
10.11 11:31:31 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
10.11 11:31:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 11:31:31 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
10.11 11:31:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, year => , email => mail, networktype =>   , password => uid19, isbanned => false, regdate => 2016-11-10 11:23:31.038042+00, city => , language =>   , networkid => , params => {}}, version => 0, id => 19 } }
10.11 11:31:31 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
10.11 11:31:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
10.11 11:31:31 NET: Client login (conid:14297473, id:19, name:uid19)
10.11 11:31:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 11:31:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 11:31:31 DB: SELECT token FROM tokens WHERE userid = 19
10.11 11:31:31 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 19, _type => core/server.query }
10.11 11:31:31 -<<-: core/server.query { list => {{ token => 25a8edacc55e981ba327cc55f0a49e31 }}, errorCode => ok, _type => core/server.query }
10.11 11:31:31 DB: SELECT ID FROM TempUserLogins WHERE UserID = 19 AND Date = 'today'::timestamp
10.11 11:31:31 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 19 AND Date = 'today'::timestamp, _type => core/server.query }
10.11 11:31:31 -<<-: core/server.query { list => {{ id => 124 }}, errorCode => ok, _type => core/server.query }
10.11 11:31:31 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19, token => 25a8edacc55e981ba327cc55f0a49e31 }
10.11 11:31:31 == NET: uid19 ret: user.join { name => uid19, type => user.join }
10.11 11:31:35 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:31:35 TIME: user.ping 0.19 ms
10.11 11:31:35 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:31:38 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478777491, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, type => user, unlock => false, id => 19, _type => core/cache.update }
10.11 11:31:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 11:31:43 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:31:43 TIME: user.ping 0.13 ms
10.11 11:31:43 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:31:49 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:31:49 TIME: user.ping 0.12 ms
10.11 11:31:49 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:31:53 STATS: vdl.0 cache, locks:4
10.11 11:31:55 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:31:55 TIME: user.ping 0.12 ms
10.11 11:31:55 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:01 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:01 TIME: user.ping 0.13 ms
10.11 11:32:01 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:09 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:09 TIME: user.ping 0.12 ms
10.11 11:32:09 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:16 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
10.11 11:32:16 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
10.11 11:32:16 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
10.11 11:32:16 TIME: battle.find 0.35 ms
10.11 11:32:16 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
10.11 11:32:16 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 0 }
10.11 11:32:16 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:32:16 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 11:32:16 TRACE: battle.sendtask : cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:32:16 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 255
Called from modules/VDLBattleModule.hx line 64
Called from modules/VDLBattleModule.hx line 42
Called from snipe/slave/Server.hx line 1225
10.11 11:32:18 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:18 TIME: user.ping 0.14 ms
10.11 11:32:18 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:25 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:25 TIME: user.ping 0.11 ms
10.11 11:32:25 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:27 TIMER: Check auto-disconnect...
10.11 11:32:31 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:31 TIME: user.ping 0.15 ms
10.11 11:32:31 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:38 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:38 TIME: user.ping 0.18 ms
10.11 11:32:38 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:46 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:46 TIME: user.ping 0.13 ms
10.11 11:32:46 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:52 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:52 TIME: user.ping 0.15 ms
10.11 11:32:52 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:32:53 STATS: vdl.0 cache, locks:4
10.11 11:32:59 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:32:59 TIME: user.ping 0.12 ms
10.11 11:32:59 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:33:06 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:33:06 TIME: user.ping 0.11 ms
10.11 11:33:06 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:33:27 TIMER: Check auto-disconnect...
10.11 11:33:53 STATS: vdl.0 cache, locks:4
10.11 11:34:27 TIMER: Check auto-disconnect...
10.11 11:34:53 STATS: vdl.0 cache, locks:4
10.11 11:35:27 TIMER: Check auto-disconnect...
10.11 11:35:53 STATS: vdl.0 cache, locks:4
10.11 11:36:27 TIMER: Check auto-disconnect...
10.11 11:36:53 STATS: vdl.0 cache, locks:4
10.11 11:37:27 TIMER: Check auto-disconnect...
10.11 11:37:53 STATS: vdl.0 cache, locks:4
10.11 11:38:27 TIMER: Check auto-disconnect...
10.11 11:38:53 STATS: vdl.0 cache, locks:4
10.11 11:39:27 TIMER: Check auto-disconnect...
10.11 11:39:53 STATS: vdl.0 cache, locks:4
10.11 11:40:27 TIMER: Check auto-disconnect...
10.11 11:40:53 STATS: vdl.0 cache, locks:4
10.11 11:41:27 TIMER: Check auto-disconnect...
10.11 11:41:53 STATS: vdl.0 cache, locks:4
10.11 11:42:27 TIMER: Check auto-disconnect...
10.11 11:42:53 STATS: vdl.0 cache, locks:4
10.11 11:43:27 TIMER: Check auto-disconnect...
10.11 11:43:53 STATS: vdl.0 cache, locks:4
10.11 11:44:27 TIMER: Check auto-disconnect...
10.11 11:44:53 STATS: vdl.0 cache, locks:4
10.11 11:45:27 TIMER: Check auto-disconnect...
10.11 11:45:53 STATS: vdl.0 cache, locks:4
10.11 11:46:27 TIMER: Check auto-disconnect...
10.11 11:46:53 STATS: vdl.0 cache, locks:4
10.11 11:47:27 TIMER: Check auto-disconnect...
10.11 11:47:44 NET: Client (name:uid19 conid:14297473 WS) disconnected from vdl.0 (clients:0)
10.11 11:47:44 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
10.11 11:47:44 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
10.11 11:47:44 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:47:44 STATS: vdl.0 cache connection, 719 calls, total 0.514999628067017 sec spent, avg 0.72 ms
10.11 11:47:44 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:47:44 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 11:47:44 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:47:44 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 11:47:44 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
10.11 11:47:44 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 11:47:44 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
10.11 11:47:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 11:47:44 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
10.11 11:47:44 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 11:47:53 STATS: vdl.0 cache, locks:2
10.11 11:48:00 NET: Client (conid:90961909) connected to vdl.0 (clients:1)
10.11 11:48:00 NET: Client (conid:90961909) switched protocol to WS
10.11 11:48:01 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
10.11 11:48:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
10.11 11:48:01 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
10.11 11:48:01 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:48:01 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
10.11 11:48:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:48:09 TRACE: User not logon yet.
10.11 11:48:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:48:17 TRACE: User not logon yet.
10.11 11:48:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:48:25 TRACE: User not logon yet.
10.11 11:48:27 TIMER: Check auto-disconnect...
10.11 11:48:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:48:32 TRACE: User not logon yet.
10.11 11:48:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:48:40 TRACE: User not logon yet.
10.11 11:48:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:48:47 TRACE: User not logon yet.
10.11 11:48:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:48:53 TRACE: User not logon yet.
10.11 11:48:53 STATS: vdl.0 cache, locks:2
10.11 11:49:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:00 TRACE: User not logon yet.
10.11 11:49:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:06 TRACE: User not logon yet.
10.11 11:49:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:13 TRACE: User not logon yet.
10.11 11:49:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:22 TRACE: User not logon yet.
10.11 11:49:27 TIMER: Check auto-disconnect...
10.11 11:49:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:31 TRACE: User not logon yet.
10.11 11:49:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:36 TRACE: User not logon yet.
10.11 11:49:43 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:43 TRACE: User not logon yet.
10.11 11:49:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:51 TRACE: User not logon yet.
10.11 11:49:53 STATS: vdl.0 cache, locks:2
10.11 11:49:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:49:58 TRACE: User not logon yet.
10.11 11:50:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:50:06 TRACE: User not logon yet.
10.11 11:50:06 NET: Client (name:null conid:90961909 WS) disconnected from vdl.0 (clients:0)
10.11 11:50:15 NET: Client (conid:86332155) connected to vdl.0 (clients:1)
10.11 11:50:15 NET: Client (conid:86332155) switched protocol to WS
10.11 11:50:16 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
10.11 11:50:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
10.11 11:50:16 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
10.11 11:50:16 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:50:16 STATS: vdl.0 cache connection, 725 calls, total 0.532378673553467 sec spent, avg 0.73 ms
10.11 11:50:16 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
10.11 11:50:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:50:20 TRACE: User not logon yet.
10.11 11:50:27 TIMER: Check auto-disconnect...
10.11 11:50:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:50:28 TRACE: User not logon yet.
10.11 11:50:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:50:35 TRACE: User not logon yet.
10.11 11:50:44 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:50:44 TRACE: User not logon yet.
10.11 11:50:52 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:50:52 TRACE: User not logon yet.
10.11 11:50:53 STATS: vdl.0 cache, locks:2
10.11 11:51:27 TIMER: Check auto-disconnect...
10.11 11:51:54 STATS: vdl.0 cache, locks:2
10.11 11:52:27 TIMER: Check auto-disconnect...
10.11 11:52:54 STATS: vdl.0 cache, locks:2
10.11 11:53:21 NET: Client (name:null conid:86332155 WS) disconnected from vdl.0 (clients:0)
10.11 11:53:27 TIMER: Check auto-disconnect...
10.11 11:53:54 STATS: vdl.0 cache, locks:2
10.11 11:54:05 NET: Client (conid:62165481) connected to vdl.0 (clients:1)
10.11 11:54:05 NET: Client (conid:62165481) switched protocol to WS
10.11 11:54:06 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
10.11 11:54:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19'
10.11 11:54:06 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid19' AND Password = 'uid19', _type => core/server.query }
10.11 11:54:06 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:54:06 STATS: vdl.0 cache connection, 726 calls, total 0.534481763839722 sec spent, avg 0.74 ms
10.11 11:54:06 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
10.11 11:54:09 NET: Client (name:null conid:62165481 WS) disconnected from vdl.0 (clients:0)
10.11 11:54:14 NET: Client (conid:86455895) connected to vdl.0 (clients:1)
10.11 11:54:14 NET: Client (conid:86455895) switched protocol to WS
10.11 11:54:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:54:15 TRACE: User not logon yet.
10.11 11:54:23 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:54:23 TRACE: User not logon yet.
10.11 11:54:27 TIMER: Check auto-disconnect...
10.11 11:54:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:54:31 TRACE: User not logon yet.
10.11 11:54:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:54:40 TRACE: User not logon yet.
10.11 11:54:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:54:48 TRACE: User not logon yet.
10.11 11:54:54 STATS: vdl.0 cache, locks:2
10.11 11:54:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:54:56 TRACE: User not logon yet.
10.11 11:55:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:55:03 TRACE: User not logon yet.
10.11 11:55:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:55:11 TRACE: User not logon yet.
10.11 11:55:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
10.11 11:55:18 TRACE: User not logon yet.
10.11 11:55:27 TIMER: Check auto-disconnect...
10.11 11:55:42 NET: Client (name:null conid:86455895 WS) disconnected from vdl.0 (clients:0)
10.11 11:55:54 STATS: vdl.0 cache, locks:2
10.11 11:56:08 NET: Client (conid:566164) connected to vdl.0 (clients:1)
10.11 11:56:08 NET: Client (conid:566164) switched protocol to WS
10.11 11:56:09 ++ NET: null req: user.register { messageType => user.register }
10.11 11:56:09 DB: SELECT * FROM users
10.11 11:56:09 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
10.11 11:56:09 -<<-: core/server.query { list => {{ city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-10 11:48:59.9391+00, language =>   , id => 1, deleted => false }}, errorCode => ok, _type => core/server.query }
10.11 11:56:09 STATS: vdl.0 cache connection, 727 calls, total 0.53568959236145 sec spent, avg 0.74 ms
10.11 11:56:09 DB: SELECT ID FROM Users WHERE Name = 'uid2'
10.11 11:56:09 == NET: null ret: user.auth { type => user.auth, token => dWlkMg== }
10.11 11:56:09 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid2', _type => core/server.query }
10.11 11:56:09 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:56:09 DB: SELECT nextval('Users_id_seq') AS id
10.11 11:56:09 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
10.11 11:56:09 -<<-: core/server.query { list => {{ id => 2 }}, errorCode => ok, _type => core/server.query }
10.11 11:56:09 ->>-: core/user.register { password => uid2, name => uid2, fullParams => { password => uid2, name => uid2, networkid => , networktype => , messageType => user.register, id => 2 }, networkid => , connectionID => 566164, networktype => , email => , id => 2, _type => core/user.register }
10.11 11:56:09 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
10.11 11:56:09 -<<-: core/user.registerResponse { password => uid2, name => uid2, _isNotify => true, fullParams => { password => uid2, name => uid2, networkid => , networktype => , messageType => user.register, id => 2 }, networkid => , connectionID => 566164, networktype => , email => , id => 2, _type => core/user.registerResponse }
10.11 11:56:09 DB: SELECT token FROM tokens WHERE userid = 2
10.11 11:56:09 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 2, _type => core/server.query }
10.11 11:56:09 -<<-: core/server.query { list => {{ token => 5a2539b7a750e8966981924c5a649785 }, { token => b4be5db94999397431f0dc92bcd6a986 }}, errorCode => ok, _type => core/server.query }
10.11 11:56:09 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 5a2539b7a750e8966981924c5a649785 }
10.11 11:56:11 ++ NET: null req: user.login { messageType => user.login, token => dWlkMg== }
10.11 11:56:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid2' AND Password = 'uid2'
10.11 11:56:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid2' AND Password = 'uid2', _type => core/server.query }
10.11 11:56:11 -<<-: core/server.query { list => {{ name => uid2, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
10.11 11:56:11 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
10.11 11:56:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 11:56:11 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
10.11 11:56:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid2, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid2, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, city => 1, language =>   , region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, hints => 15 }, effects => { list => [] } }}, version => 19, id => 2 } }
10.11 11:56:11 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
10.11 11:56:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
10.11 11:56:11 NET: Client login (conid:566164, id:2, name:uid2)
10.11 11:56:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 11:56:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 11:56:11 DB: SELECT token FROM tokens WHERE userid = 2
10.11 11:56:11 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 2, _type => core/server.query }
10.11 11:56:11 -<<-: core/server.query { list => {{ token => 5a2539b7a750e8966981924c5a649785 }, { token => b4be5db94999397431f0dc92bcd6a986 }}, errorCode => ok, _type => core/server.query }
10.11 11:56:11 DB: SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp
10.11 11:56:11 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp, _type => core/server.query }
10.11 11:56:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:56:11 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (2, 'today'::timestamp)
10.11 11:56:11 == NET: uid2 ret: user.login { name => uid2, type => user.login, errorCode => ok, id => 2, token => 5a2539b7a750e8966981924c5a649785 }
10.11 11:56:11 == NET: uid2 ret: user.join { name => uid2, type => user.join }
10.11 11:56:11 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (2, 'today'::timestamp), _type => core/server.pending }} }
10.11 11:56:11 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
10.11 11:56:11 ++ NET: uid2 req: user.login { messageType => user.login, token => dWlkMg== }
10.11 11:56:11 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
10.11 11:56:11 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
10.11 11:56:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:56:11 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:56:11 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 11:56:11 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:56:11 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 11:56:11 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478778971, lastLoginDate => 315, lastLoadDate => 1111 } }}, type => user, unlock => true, id => 2, _type => core/cache.update }
10.11 11:56:11 -<<-: core/cache.update { errorCode => ok, version => 20, _type => core/cache.update }
10.11 11:56:11 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
10.11 11:56:11 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 11:56:11 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
10.11 11:56:11 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 11:56:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid2' AND Password = 'uid2'
10.11 11:56:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid2' AND Password = 'uid2', _type => core/server.query }
10.11 11:56:11 -<<-: core/server.query { list => {{ name => uid2, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
10.11 11:56:11 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
10.11 11:56:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 11:56:11 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
10.11 11:56:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid2, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid2, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1478778971, lastLoginDate => 315, lastLoadDate => 1111, hints => 15 }, effects => { list => [] } }}, version => 20, id => 2 } }
10.11 11:56:11 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
10.11 11:56:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 2 } }
10.11 11:56:11 NET: Client login (conid:566164, id:2, name:uid2)
10.11 11:56:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 11:56:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 11:56:11 DB: SELECT token FROM tokens WHERE userid = 2
10.11 11:56:11 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 2, _type => core/server.query }
10.11 11:56:11 -<<-: core/server.query { list => {{ token => 5a2539b7a750e8966981924c5a649785 }, { token => b4be5db94999397431f0dc92bcd6a986 }}, errorCode => ok, _type => core/server.query }
10.11 11:56:13 ++ NET: uid2 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:56:13 TIME: user.ping 0.14 ms
10.11 11:56:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
10.11 11:56:19 -<<-: core/cache.update { errorCode => ok, version => 21, _type => core/cache.update }
10.11 11:56:21 ++ NET: uid2 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:56:21 TIME: user.ping 0.16 ms
10.11 11:56:27 TIMER: Check auto-disconnect...
10.11 11:56:54 STATS: vdl.0 cache, locks:4
10.11 11:57:27 TIMER: Check auto-disconnect...
10.11 11:57:50 NET: Client (name:uid2 conid:566164 WS) disconnected from vdl.0 (clients:0)
10.11 11:57:50 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
10.11 11:57:50 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
10.11 11:57:50 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 11:57:50 STATS: vdl.0 cache connection, 752 calls, total 0.556601762771606 sec spent, avg 0.74 ms
10.11 11:57:50 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:57:50 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 11:57:50 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 11:57:50 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 11:57:50 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
10.11 11:57:50 -<<-: core/cache.update { errorCode => ok, version => 22, _type => core/cache.update }
10.11 11:57:50 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
10.11 11:57:50 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 11:57:50 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
10.11 11:57:50 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 11:57:54 STATS: vdl.0 cache, locks:2
10.11 11:58:27 TIMER: Check auto-disconnect...
10.11 11:58:54 STATS: vdl.0 cache, locks:2
10.11 11:59:27 TIMER: Check auto-disconnect...
10.11 11:59:34 NET: Client (conid:79480336) connected to vdl.0 (clients:1)
10.11 11:59:34 NET: Client (conid:79480336) switched protocol to WS
10.11 11:59:35 ++ NET: null req: user.login { messageType => user.login, token => dWlkMg== }
10.11 11:59:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid2' AND Password = 'uid2'
10.11 11:59:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid2' AND Password = 'uid2', _type => core/server.query }
10.11 11:59:35 -<<-: core/server.query { list => {{ name => uid2, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
10.11 11:59:35 STATS: vdl.0 cache connection, 757 calls, total 0.559660673141479 sec spent, avg 0.74 ms
10.11 11:59:35 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
10.11 11:59:35 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 11:59:35 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
10.11 11:59:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid2, deleted => false, year => , email => mail, networktype =>   , password => uid2, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, city => , language =>   , networkid => , params => {}}, version => 0, id => 2 } }
10.11 11:59:35 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
10.11 11:59:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
10.11 11:59:35 NET: Client login (conid:79480336, id:2, name:uid2)
10.11 11:59:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 11:59:35 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 11:59:35 DB: SELECT token FROM tokens WHERE userid = 2
10.11 11:59:35 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 2, _type => core/server.query }
10.11 11:59:35 -<<-: core/server.query { list => {{ token => 5a2539b7a750e8966981924c5a649785 }, { token => b4be5db94999397431f0dc92bcd6a986 }}, errorCode => ok, _type => core/server.query }
10.11 11:59:35 DB: SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp
10.11 11:59:35 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp, _type => core/server.query }
10.11 11:59:35 -<<-: core/server.query { list => {{ id => 125 }}, errorCode => ok, _type => core/server.query }
10.11 11:59:35 == NET: uid2 ret: user.login { name => uid2, type => user.login, errorCode => ok, id => 2, token => 5a2539b7a750e8966981924c5a649785 }
10.11 11:59:35 == NET: uid2 ret: user.join { name => uid2, type => user.join }
10.11 11:59:38 ++ NET: uid2 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:59:38 TIME: user.ping 0.21 ms
10.11 11:59:38 == NET: uid2 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:59:44 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478779175, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, type => user, unlock => false, id => 2, _type => core/cache.update }
10.11 11:59:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 11:59:46 ++ NET: uid2 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:59:46 TIME: user.ping 0.12 ms
10.11 11:59:46 == NET: uid2 ret: user.ping { type => user.ping, errorCode => ok }
10.11 11:59:54 STATS: vdl.0 cache, locks:4
10.11 11:59:54 ++ NET: uid2 req: user.ping { messageType => user.ping, msg => ok }
10.11 11:59:54 TIME: user.ping 0.13 ms
10.11 11:59:54 == NET: uid2 ret: user.ping { type => user.ping, errorCode => ok }
