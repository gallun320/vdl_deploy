14.10 14:18:06 NET: Client (conid:97723373) connected to vdl.0 (clients:1)
14.10 14:18:12 ++ NET: null req: user.logout { messageType => user.logout }
14.10 14:18:12 TRACE: User not logon yet.
14.10 14:18:12 NET: Client (name:null conid:97723373 TCP) disconnected from vdl.0 (clients:0)
14.10 14:18:22 TIMER: Check auto-disconnect...
14.10 14:18:22 TIMER: vdl:0 Check tournament...
14.10 14:18:22 STATS: vdl.0 cache, locks:0
14.10 14:18:22 DB: SELECT * FROM tournament WHERE startdate = 2016-14-10 14:10 AND winner = -1 AND status = 'starting'
14.10 14:18:22 ->>-: core/server.query { q => SELECT * FROM tournament WHERE startdate = 2016-14-10 14:10 AND winner = -1 AND status = 'starting', _type => core/server.query }
14.10 14:18:22 -<<-: core/server.query ok
14.10 14:18:22 STATS: vdl.0 cache connection, 21 calls, total 0.0392923355102539 sec spent, avg 1.87 ms
14.10 14:18:22 TIMER: Check auto-disconnect...
14.10 14:18:22 STATS: vdl.0 cache, locks:0
14.10 14:19:47 NET: Client (conid:36211388) connected to vdl.0 (clients:1)
14.10 14:19:48 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:19:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:19:48 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:19:48 -<<-: core/server.query ok
14.10 14:19:48 STATS: vdl.0 cache connection, 22 calls, total 0.0409684181213379 sec spent, avg 1.86 ms
14.10 14:19:48 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:19:48 -<<-: core/user.isOnlineID ok
14.10 14:19:48 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:19:48 -<<-: core/cache.get ok
14.10 14:19:48 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:19:48 -<<-: core/cache.get ok
14.10 14:19:48 NET: Client login (conid:36211388, id:34, name:uid34)
14.10 14:19:48 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:19:48 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:19:48 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:19:48 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:19:53 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:19:53 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:19:53 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:19:53 TIME: tournament.getAvailableTournament 2.39 ms
14.10 14:19:53 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:19:57 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:19:57 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:20:16 ++ NET: uid34 req: user.logout { messageType => user.logout }
14.10 14:20:16 NET: Client (name:uid34 conid:36211388 TCP) disconnected from vdl.0 (clients:0)
14.10 14:20:16 TRACE: user.logout : No such module: user
14.10 14:20:16 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 14:20:16 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:20:16 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:20:16 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:20:16 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:20:16 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:20:16 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:20:16 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:20:16 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:20:16 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:20:16 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:20:16 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:20:16 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:20:16 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:20:22 TIMER: Check auto-disconnect...
14.10 14:20:22 STATS: vdl.0 cache, locks:0
14.10 14:20:27 NET: Client (conid:71738887) connected to vdl.0 (clients:1)
14.10 14:20:28 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:20:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:20:28 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:20:28 -<<-: core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:20:28 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:20:28 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:20:28 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:20:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 14:20:28 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:20:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 14:20:28 NET: Client login (conid:71738887, id:34, name:uid34)
14.10 14:20:28 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:20:28 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:20:28 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:20:28 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:20:37 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:20:37 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:20:41 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:20:41 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:20:41 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:20:41 TIME: tournament.getAvailableTournament 1.68 ms
14.10 14:20:41 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:21:22 TIMER: Check auto-disconnect...
14.10 14:21:22 STATS: vdl.0 cache, locks:2
14.10 14:21:22 TIMER: Check auto-disconnect...
14.10 14:21:22 STATS: vdl.0 cache, locks:2
14.10 14:21:22 TIMER: Check auto-disconnect...
14.10 14:21:22 STATS: vdl.0 cache, locks:2
14.10 14:23:26 ++ NET: uid34 req: user.logout { messageType => user.logout }
14.10 14:23:26 TRACE: user.logout : No such module: user
14.10 14:23:26 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 14:23:26 NET: Client (name:uid34 conid:71738887 TCP) disconnected from vdl.0 (clients:0)
14.10 14:23:26 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:23:26 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:23:26 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:23:26 STATS: vdl.0 cache connection, 41 calls, total 0.0598082542419434 sec spent, avg 1.46 ms
14.10 14:23:26 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:23:26 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:23:26 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:23:26 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:23:26 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:23:26 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:23:26 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:23:26 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:23:26 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:23:26 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:23:32 NET: Client (conid:52629995) connected to vdl.0 (clients:1)
14.10 14:23:33 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:23:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:23:33 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:23:33 -<<-: core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:23:33 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:23:33 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:23:33 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:23:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 2, id => 34 } }
14.10 14:23:33 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:23:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 34 } }
14.10 14:23:33 NET: Client login (conid:52629995, id:34, name:uid34)
14.10 14:23:33 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:23:33 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:23:33 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:23:33 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:23:40 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:23:40 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:23:40 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:23:40 TIME: tournament.getAvailableTournament 3.49 ms
14.10 14:23:40 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:23:42 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:23:42 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.10 14:24:22 TIMER: Check auto-disconnect...
14.10 14:24:22 STATS: vdl.0 cache, locks:2
14.10 14:24:22 TIMER: Check auto-disconnect...
14.10 14:24:22 STATS: vdl.0 cache, locks:2
14.10 14:25:52 ++ NET: uid34 req: user.logout { messageType => user.logout }
14.10 14:25:52 TRACE: user.logout : No such module: user
14.10 14:25:52 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 14:25:53 NET: Client (name:uid34 conid:52629995 TCP) disconnected from vdl.0 (clients:0)
14.10 14:25:53 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:25:53 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:25:53 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:25:53 STATS: vdl.0 cache connection, 53 calls, total 0.0720055103302002 sec spent, avg 1.36 ms
14.10 14:25:53 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:25:53 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:25:53 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:25:53 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:25:53 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:25:53 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
14.10 14:25:53 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:25:53 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:25:53 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:25:53 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:25:59 NET: Client (conid:75601867) connected to vdl.0 (clients:1)
14.10 14:26:00 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:26:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:26:00 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:26:00 -<<-: core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:26:00 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:26:00 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:26:00 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:26:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 4, id => 34 } }
14.10 14:26:00 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:26:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 34 } }
14.10 14:26:00 NET: Client login (conid:75601867, id:34, name:uid34)
14.10 14:26:00 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:26:00 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:26:00 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:26:00 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:26:06 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:26:06 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:26:06 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:26:06 TIME: tournament.getAvailableTournament 1.55 ms
14.10 14:26:06 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:26:07 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:26:07 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
14.10 14:26:22 TIMER: Check auto-disconnect...
14.10 14:26:22 STATS: vdl.0 cache, locks:2
14.10 14:26:22 TIMER: Check auto-disconnect...
14.10 14:26:22 STATS: vdl.0 cache, locks:2
14.10 14:27:41 ++ NET: uid34 req: user.logout { messageType => user.logout }
14.10 14:27:41 TRACE: user.logout : No such module: user
14.10 14:27:41 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 14:27:41 NET: Client (name:uid34 conid:75601867 TCP) disconnected from vdl.0 (clients:0)
14.10 14:27:41 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:27:41 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:27:41 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:27:41 STATS: vdl.0 cache connection, 65 calls, total 0.0813310146331787 sec spent, avg 1.25 ms
14.10 14:27:41 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:27:41 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:27:41 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:27:41 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:27:41 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:27:41 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
14.10 14:27:41 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:27:41 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.10 14:27:41 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:27:41 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:27:47 NET: Client (conid:20874560) connected to vdl.0 (clients:1)
14.10 14:27:48 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:27:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:27:48 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:27:48 -<<-: core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:27:48 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:27:48 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:27:48 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:27:48 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 6, id => 34 } }
14.10 14:27:48 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:27:48 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 3, id => 34 } }
14.10 14:27:48 NET: Client login (conid:20874560, id:34, name:uid34)
14.10 14:27:48 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:27:48 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:27:48 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:27:48 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:27:55 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:27:55 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:27:55 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:27:55 TIME: tournament.getAvailableTournament 1.28 ms
14.10 14:27:55 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:27:57 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:27:57 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
14.10 14:28:22 TIMER: Check auto-disconnect...
14.10 14:28:22 STATS: vdl.0 cache, locks:2
14.10 14:28:25 ++ NET: uid34 req: user.logout { messageType => user.logout }
14.10 14:28:25 TRACE: user.logout : No such module: user
14.10 14:28:25 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 14:28:25 NET: Client (name:uid34 conid:20874560 TCP) disconnected from vdl.0 (clients:0)
14.10 14:28:25 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:28:25 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:28:25 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:28:25 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:28:25 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:28:25 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:28:25 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:28:25 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:28:25 -<<-: core/cache.update { errorCode => ok, version => 8, _type => core/cache.update }
14.10 14:28:25 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:28:25 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
14.10 14:28:25 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:28:25 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:28:32 NET: Client (conid:82486546) connected to vdl.0 (clients:1)
14.10 14:28:33 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:28:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:28:33 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:28:33 -<<-: core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:28:33 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:28:33 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:28:33 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:28:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 8, id => 34 } }
14.10 14:28:33 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:28:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 4, id => 34 } }
14.10 14:28:33 NET: Client login (conid:82486546, id:34, name:uid34)
14.10 14:28:33 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:28:33 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:28:33 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:28:33 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:28:39 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:28:39 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:28:39 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:28:39 TIME: tournament.getAvailableTournament 2.06 ms
14.10 14:28:39 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:28:59 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 14:28:59 -<<-: server.login ok
14.10 14:28:59 DB: SELECT * FROM LocalizationStrings
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 TIMER: Starting timer...
14.10 14:28:59 TIMER: Timer running...
14.10 14:28:59 DB: SELECT * FROM GameVars
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 14:28:59 -<<-: core/quest.getDaily ok
14.10 14:28:59 DB: SELECT * FROM UserAttributeTypes
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM UserVariableTypes
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 14:28:59 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM ItemGroups
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM Bundles ORDER BY ID
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 SHOP: loading items...
14.10 14:28:59 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 14:28:59 -<<-: core/shop.getList ok
14.10 14:28:59 SHOP: 0 items loaded (0 sec)
14.10 14:28:59 DB: SELECT * FROM EffectAttributeTypes
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM Effects
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 14:28:59 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 14:28:59 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 DB: SELECT * FROM Badges
14.10 14:28:59 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 14:28:59 -<<-: core/server.query ok
14.10 14:28:59 TIMER: Check auto-disconnect...
14.10 14:28:59 STATS: vdl.0 cache, locks:0
14.10 14:28:59 TIMER: Check auto-disconnect...
14.10 14:28:59 STATS: vdl.0 cache, locks:0
14.10 14:28:59 TIMER: Check auto-disconnect...
14.10 14:28:59 STATS: vdl.0 cache, locks:0
14.10 14:28:59 TIMER: Check auto-disconnect...
14.10 14:28:59 STATS: vdl.0 cache, locks:0
14.10 14:28:59 TIMER: Check auto-disconnect...
14.10 14:28:59 STATS: vdl.0 cache, locks:0
14.10 14:28:59 TIMER: Check auto-disconnect...
14.10 14:28:59 STATS: vdl.0 cache, locks:0
14.10 14:35:09 NET: Client (conid:88252789) connected to vdl.0 (clients:1)
14.10 14:35:10 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:35:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:35:10 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:35:10 -<<-: core/server.query ok
14.10 14:35:10 STATS: vdl.0 cache connection, 21 calls, total 0.0204236507415771 sec spent, avg 0.97 ms
14.10 14:35:10 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:35:10 -<<-: core/user.isOnlineID ok
14.10 14:35:10 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:35:10 -<<-: core/cache.get ok
14.10 14:35:10 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:35:10 -<<-: core/cache.get ok
14.10 14:35:10 NET: Client login (conid:88252789, id:34, name:uid34)
14.10 14:35:10 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:35:10 -<<-: core/user.loginPost null
14.10 14:35:10 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:35:10 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:35:18 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:35:18 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:35:18 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:35:18 TIME: tournament.getAvailableTournament 4.4 ms
14.10 14:35:18 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:35:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:35:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:35:59 TIMER: Check auto-disconnect...
14.10 14:35:59 STATS: vdl.0 cache, locks:2
14.10 14:35:59 TIMER: Check auto-disconnect...
14.10 14:35:59 STATS: vdl.0 cache, locks:2
14.10 14:35:59 TIMER: Check auto-disconnect...
14.10 14:35:59 STATS: vdl.0 cache, locks:2
14.10 14:35:59 TIMER: Check auto-disconnect...
14.10 14:35:59 NET: Client (name:uid34 conid:88252789 TCP) disconnected from vdl.0 (clients:0)
14.10 14:35:59 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:35:59 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:35:59 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:35:59 STATS: vdl.0 cache connection, 28 calls, total 0.0318400859832764 sec spent, avg 1.14 ms
14.10 14:35:59 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:35:59 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:35:59 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:35:59 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:35:59 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:35:59 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:35:59 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:35:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:35:59 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:35:59 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:35:59 STATS: vdl.0 cache, locks:0
14.10 14:35:59 TIMER: Check auto-disconnect...
14.10 14:35:59 STATS: vdl.0 cache, locks:0
14.10 14:40:33 NET: Client (conid:58847524) connected to vdl.0 (clients:1)
14.10 14:40:34 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:40:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:40:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:40:34 -<<-: core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:40:34 STATS: vdl.0 cache connection, 33 calls, total 0.0397889614105225 sec spent, avg 1.21 ms
14.10 14:40:34 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:40:34 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:40:34 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:40:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 14:40:34 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:40:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 14:40:34 NET: Client login (conid:58847524, id:34, name:uid34)
14.10 14:40:34 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:40:34 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:40:34 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:40:34 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:40:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:40:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:40:39 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:40:39 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:40:39 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:40:39 TIME: tournament.getAvailableTournament 3.25 ms
14.10 14:40:39 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:40:59 TIMER: Check auto-disconnect...
14.10 14:40:59 STATS: vdl.0 cache, locks:2
14.10 14:40:59 TIMER: Check auto-disconnect...
14.10 14:40:59 STATS: vdl.0 cache, locks:2
14.10 14:42:23 ++ NET: uid34 req: user.logout { messageType => user.logout }
14.10 14:42:23 TRACE: user.logout : No such module: user
14.10 14:42:23 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 14:42:24 NET: Client (name:uid34 conid:58847524 TCP) disconnected from vdl.0 (clients:0)
14.10 14:42:24 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:42:24 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:42:24 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:42:24 STATS: vdl.0 cache connection, 40 calls, total 0.0506131649017334 sec spent, avg 1.27 ms
14.10 14:42:24 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:42:24 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:42:24 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:42:24 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:42:24 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:42:24 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:42:24 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:42:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:42:24 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:42:24 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:42:30 NET: Client (conid:81208991) connected to vdl.0 (clients:1)
14.10 14:42:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:42:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:42:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:42:31 -<<-: core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:42:31 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:42:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:42:31 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:42:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 2, id => 34 } }
14.10 14:42:31 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:42:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 34 } }
14.10 14:42:31 NET: Client login (conid:81208991, id:34, name:uid34)
14.10 14:42:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:42:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:42:31 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:42:31 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:42:37 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:42:37 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:37 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:37 TIME: tournament.getAvailableTournament 1.59 ms
14.10 14:42:37 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:42:39 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.10 14:42:49 ++ NET: uid34 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
14.10 14:42:49 ->>-: vdl/cache.tournament.addUsers { userId => 34, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 14:42:49 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 14:42:49 TIME: tournament.addUsers 1.83 ms
14.10 14:42:49 == NET: uid34 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 14:42:49 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:42:49 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:49 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:49 TIME: tournament.getAvailableTournament 2.31 ms
14.10 14:42:49 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:2
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:2
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:2
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 NET: Client (name:uid34 conid:81208991 TCP) disconnected from vdl.0 (clients:0)
14.10 14:42:59 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:42:59 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:42:59 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:42:59 STATS: vdl.0 cache connection, 54 calls, total 0.0659809112548828 sec spent, avg 1.22 ms
14.10 14:42:59 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:42:59 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:42:59 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:42:59 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:42:59 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:42:59 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
14.10 14:42:59 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:42:59 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:42:59 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:42:59 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:42:59 TIMER: Check auto-disconnect...
14.10 14:42:59 STATS: vdl.0 cache, locks:0
14.10 14:54:10 NET: Client (conid:33909363) connected to vdl.0 (clients:1)
14.10 14:54:11 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 14:54:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:54:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:54:11 -<<-: core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:54:11 STATS: vdl.0 cache connection, 59 calls, total 0.0709912776947021 sec spent, avg 1.2 ms
14.10 14:54:11 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:54:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:54:11 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:54:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 14:54:11 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:54:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 14:54:11 NET: Client login (conid:33909363, id:34, name:uid34)
14.10 14:54:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:54:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 14:54:11 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 14:54:11 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 14:54:17 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 14:54:17 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:54:17 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:54:17 TIME: tournament.getAvailableTournament 3.3 ms
14.10 14:54:17 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:54:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:54:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:54:22 ++ NET: uid34 req: tournament.grid { tournamentId => 1, messageType => tournament.grid }
14.10 14:54:22 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 14:54:22 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [34] }
14.10 14:54:22 ->>-: vdl/cache.tournament.setGrid { battles => [], _type => vdl/cache.tournament.setGrid }
14.10 14:54:22 -<<-: vdl/cache.tournament.setGrid { list => [], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 14:54:22 TIME: tournament.grid 1.3 ms
14.10 14:54:22 == NET: uid34 ret: tournament.grid { list => [], type => tournament.grid, errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 14:54:59 TIMER: Check auto-disconnect...
14.10 14:54:59 STATS: vdl.0 cache, locks:2
14.10 14:54:59 TIMER: Check auto-disconnect...
14.10 14:54:59 STATS: vdl.0 cache, locks:2
14.10 14:54:59 TIMER: Check auto-disconnect...
14.10 14:54:59 STATS: vdl.0 cache, locks:2
14.10 14:57:56 NET: Client (name:uid34 conid:33909363 TCP) disconnected from vdl.0 (clients:0)
14.10 14:57:56 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:57:56 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:57:56 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:57:56 STATS: vdl.0 cache connection, 68 calls, total 0.081519603729248 sec spent, avg 1.2 ms
14.10 14:57:56 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:57:56 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:57:56 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:57:56 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 14:57:56 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:57:56 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:57:56 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:57:56 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:57:56 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:57:56 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:58:29 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 14:58:29 -<<-: server.login ok
14.10 14:58:29 DB: SELECT * FROM LocalizationStrings
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 TIMER: Starting timer...
14.10 14:58:29 TIMER: Timer running...
14.10 14:58:29 DB: SELECT * FROM GameVars
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 14:58:29 -<<-: core/quest.getDaily ok
14.10 14:58:29 DB: SELECT * FROM UserAttributeTypes
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM UserVariableTypes
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 14:58:29 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM ItemGroups
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM Bundles ORDER BY ID
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 SHOP: loading items...
14.10 14:58:29 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 14:58:29 -<<-: core/shop.getList ok
14.10 14:58:29 SHOP: 0 items loaded (0 sec)
14.10 14:58:29 DB: SELECT * FROM EffectAttributeTypes
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM Effects
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 14:58:29 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 14:58:29 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 DB: SELECT * FROM Badges
14.10 14:58:29 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 14:58:29 -<<-: core/server.query ok
14.10 14:58:29 TIMER: Check auto-disconnect...
14.10 14:58:29 STATS: vdl.0 cache, locks:0
