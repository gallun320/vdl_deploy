29.12 14:00:00 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:00:00 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:00:00 TIME: user.ping 0.15 ms
29.12 14:00:12 TIMER: Check auto-disconnect...
29.12 14:00:14 STATS: vdl.0 cache, locks:2
29.12 14:00:22 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:00:22 TIME: user.ping 0.14 ms
29.12 14:00:22 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:00:43 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:00:43 TIME: user.ping 0.15 ms
29.12 14:00:43 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:01:05 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:01:05 TIME: user.ping 0.13 ms
29.12 14:01:05 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:01:12 TIMER: Check auto-disconnect...
29.12 14:01:14 STATS: vdl.0 cache, locks:2
29.12 14:01:27 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:01:27 TIME: user.ping 0.13 ms
29.12 14:01:27 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:01:48 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:01:48 TIME: user.ping 0.13 ms
29.12 14:01:48 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:02:10 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:02:10 TIME: user.ping 0.15 ms
29.12 14:02:10 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:02:12 TIMER: Check auto-disconnect...
29.12 14:02:14 STATS: vdl.0 cache, locks:2
29.12 14:02:32 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:02:32 TIME: user.ping 0.12 ms
29.12 14:02:32 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:02:53 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:02:53 TIME: user.ping 0.12 ms
29.12 14:02:53 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:03:12 TIMER: Check auto-disconnect...
29.12 14:03:14 STATS: vdl.0 cache, locks:2
29.12 14:03:15 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:03:15 TIME: user.ping 0.13 ms
29.12 14:03:15 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:03:36 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:03:36 TIME: user.ping 0.1 ms
29.12 14:03:36 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:03:58 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:03:58 TIME: user.ping 0.14 ms
29.12 14:03:58 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:04:12 TIMER: Check auto-disconnect...
29.12 14:04:14 STATS: vdl.0 cache, locks:2
29.12 14:04:20 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:04:20 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:04:20 TIME: user.ping 0.42 ms
29.12 14:04:41 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:04:41 TIME: user.ping 0.13 ms
29.12 14:04:41 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:05:03 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:05:03 TIME: user.ping 0.15 ms
29.12 14:05:03 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:05:12 TIMER: Check auto-disconnect...
29.12 14:05:14 STATS: vdl.0 cache, locks:2
29.12 14:05:25 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:05:25 TIME: user.ping 0.19 ms
29.12 14:05:25 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:05:46 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:05:46 TIME: user.ping 0.12 ms
29.12 14:05:46 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:06:08 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:06:08 TIME: user.ping 0.14 ms
29.12 14:06:08 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:06:12 TIMER: Check auto-disconnect...
29.12 14:06:14 STATS: vdl.0 cache, locks:2
29.12 14:06:30 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:06:30 TIME: user.ping 0.13 ms
29.12 14:06:30 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:06:51 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:06:51 TIME: user.ping 0.15 ms
29.12 14:06:51 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:07:12 TIMER: Check auto-disconnect...
29.12 14:07:13 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:07:13 TIME: user.ping 0.12 ms
29.12 14:07:13 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:07:14 STATS: vdl.0 cache, locks:2
29.12 14:07:35 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:07:35 TIME: user.ping 0.14 ms
29.12 14:07:35 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:07:56 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:07:56 TIME: user.ping 0.13 ms
29.12 14:07:56 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:08:12 TIMER: Check auto-disconnect...
29.12 14:08:14 STATS: vdl.0 cache, locks:2
29.12 14:08:18 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:08:18 TIME: user.ping 0.2 ms
29.12 14:08:18 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:08:39 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:08:39 TIME: user.ping 0.14 ms
29.12 14:08:39 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:09:01 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:09:01 TIME: user.ping 0.11 ms
29.12 14:09:01 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:09:12 TIMER: Check auto-disconnect...
29.12 14:09:14 STATS: vdl.0 cache, locks:2
29.12 14:09:23 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:09:23 TIME: user.ping 0.16 ms
29.12 14:09:23 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:09:45 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:09:45 TIME: user.ping 0.12 ms
29.12 14:09:45 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:10:06 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:10:06 TIME: user.ping 0.14 ms
29.12 14:10:06 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:10:12 TIMER: Check auto-disconnect...
29.12 14:10:14 STATS: vdl.0 cache, locks:2
29.12 14:10:28 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:10:28 TIME: user.ping 0.11 ms
29.12 14:10:28 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:10:49 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:10:49 TIME: user.ping 0.13 ms
29.12 14:10:49 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:11:11 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:11:11 TIME: user.ping 0.12 ms
29.12 14:11:11 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:11:12 TIMER: Check auto-disconnect...
29.12 14:11:14 STATS: vdl.0 cache, locks:2
29.12 14:11:33 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:11:33 TIME: user.ping 0.12 ms
29.12 14:11:33 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:11:54 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:11:54 TIME: user.ping 0.14 ms
29.12 14:11:54 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:12:12 TIMER: Check auto-disconnect...
29.12 14:12:14 STATS: vdl.0 cache, locks:2
29.12 14:12:16 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:12:16 TIME: user.ping 0.14 ms
29.12 14:12:16 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:12:39 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:12:39 TIME: user.ping 0.14 ms
29.12 14:12:39 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:13:02 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:13:02 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:13:02 TIME: user.ping 0.15 ms
29.12 14:13:12 TIMER: Check auto-disconnect...
29.12 14:13:14 STATS: vdl.0 cache, locks:2
29.12 14:13:23 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:13:23 TIME: user.ping 0.13 ms
29.12 14:13:23 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:13:45 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:13:45 TIME: user.ping 0.14 ms
29.12 14:13:45 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:14:07 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:14:07 TIME: user.ping 0.12 ms
29.12 14:14:07 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:14:12 TIMER: Check auto-disconnect...
29.12 14:14:14 STATS: vdl.0 cache, locks:2
29.12 14:14:39 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:14:39 TIME: user.ping 0.16 ms
29.12 14:14:39 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:15:00 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:15:00 TIME: user.ping 0.13 ms
29.12 14:15:00 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:15:12 TIMER: Check auto-disconnect...
29.12 14:15:14 STATS: vdl.0 cache, locks:2
29.12 14:15:21 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:15:21 TIME: user.ping 0.14 ms
29.12 14:15:21 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:15:43 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:15:43 TIME: user.ping 0.13 ms
29.12 14:15:43 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:16:04 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:16:04 TIME: user.ping 0.13 ms
29.12 14:16:04 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:16:12 TIMER: Check auto-disconnect...
29.12 14:16:14 STATS: vdl.0 cache, locks:2
29.12 14:16:25 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:16:25 TIME: user.ping 0.15 ms
29.12 14:16:25 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:16:47 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:16:47 TIME: user.ping 0.11 ms
29.12 14:16:47 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:17:08 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:17:08 TIME: user.ping 0.15 ms
29.12 14:17:08 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:17:12 TIMER: Check auto-disconnect...
29.12 14:17:14 STATS: vdl.0 cache, locks:2
29.12 14:17:30 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:17:30 TIME: user.ping 0.15 ms
29.12 14:17:30 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:17:51 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:17:51 TIME: user.ping 0.13 ms
29.12 14:17:51 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:18:12 TIMER: Check auto-disconnect...
29.12 14:18:13 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:18:13 TIME: user.ping 0.28 ms
29.12 14:18:13 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:18:14 STATS: vdl.0 cache, locks:2
29.12 14:18:34 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:18:34 TIME: user.ping 0.14 ms
29.12 14:18:34 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:18:55 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:18:55 TIME: user.ping 0.13 ms
29.12 14:18:55 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:19:12 TIMER: Check auto-disconnect...
29.12 14:19:14 STATS: vdl.0 cache, locks:2
29.12 14:19:17 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:19:17 TIME: user.ping 0.16 ms
29.12 14:19:17 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:19:38 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:19:38 TIME: user.ping 0.13 ms
29.12 14:19:38 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:19:59 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:19:59 TIME: user.ping 0.13 ms
29.12 14:19:59 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:20:12 TIMER: Check auto-disconnect...
29.12 14:20:14 STATS: vdl.0 cache, locks:2
29.12 14:20:21 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:20:21 TIME: user.ping 0.13 ms
29.12 14:20:21 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:20:43 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:20:43 TIME: user.ping 0.11 ms
29.12 14:20:43 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:21:04 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:21:04 TIME: user.ping 0.13 ms
29.12 14:21:04 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:21:12 TIMER: Check auto-disconnect...
29.12 14:21:14 STATS: vdl.0 cache, locks:2
29.12 14:21:25 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:21:25 TIME: user.ping 0.12 ms
29.12 14:21:25 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:21:47 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:21:47 TIME: user.ping 0.14 ms
29.12 14:21:47 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:22:08 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:22:08 TIME: user.ping 0.14 ms
29.12 14:22:08 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:22:12 TIMER: Check auto-disconnect...
29.12 14:22:14 STATS: vdl.0 cache, locks:2
29.12 14:22:30 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:22:30 TIME: user.ping 0.13 ms
29.12 14:22:30 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:22:51 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:22:51 TIME: user.ping 0.17 ms
29.12 14:22:51 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:23:12 TIMER: Check auto-disconnect...
29.12 14:23:13 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:23:13 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:23:13 TIME: user.ping 0.1 ms
29.12 14:23:14 STATS: vdl.0 cache, locks:2
29.12 14:23:34 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:23:34 TIME: user.ping 0.11 ms
29.12 14:23:34 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:23:55 ++ NET: uid161 req: user.ping { messageType => user.ping, msg => ok }
29.12 14:23:55 TIME: user.ping 0.12 ms
29.12 14:23:55 == NET: uid161 ret: user.ping { type => user.ping, errorCode => ok }
29.12 14:24:12 TIMER: Check auto-disconnect...
29.12 14:24:14 STATS: vdl.0 cache, locks:2
29.12 14:25:12 TIMER: Check auto-disconnect...
29.12 14:25:14 STATS: vdl.0 cache, locks:2
29.12 14:26:12 TIMER: Check auto-disconnect...
29.12 14:26:14 STATS: vdl.0 cache, locks:2
29.12 14:27:12 TIMER: Check auto-disconnect...
29.12 14:27:14 STATS: vdl.0 cache, locks:2
29.12 14:28:12 TIMER: Check auto-disconnect...
29.12 14:28:14 STATS: vdl.0 cache, locks:2
29.12 14:29:12 TIMER: Check auto-disconnect...
29.12 14:29:14 STATS: vdl.0 cache, locks:2
29.12 14:30:12 TIMER: Check auto-disconnect...
29.12 14:30:14 STATS: vdl.0 cache, locks:2
29.12 14:31:12 TIMER: Check auto-disconnect...
29.12 14:31:14 STATS: vdl.0 cache, locks:2
29.12 14:32:12 TIMER: Check auto-disconnect...
29.12 14:32:14 STATS: vdl.0 cache, locks:2
29.12 14:33:12 TIMER: Check auto-disconnect...
29.12 14:33:14 STATS: vdl.0 cache, locks:2
29.12 14:34:12 TIMER: Check auto-disconnect...
29.12 14:34:14 STATS: vdl.0 cache, locks:2
29.12 14:35:12 TIMER: Check auto-disconnect...
29.12 14:35:14 STATS: vdl.0 cache, locks:2
29.12 14:36:12 TIMER: Check auto-disconnect...
29.12 14:36:14 STATS: vdl.0 cache, locks:2
29.12 14:37:12 TIMER: Check auto-disconnect...
29.12 14:37:14 STATS: vdl.0 cache, locks:2
29.12 14:38:12 TIMER: Check auto-disconnect...
29.12 14:38:14 STATS: vdl.0 cache, locks:2
29.12 14:39:12 TIMER: Check auto-disconnect...
29.12 14:39:14 STATS: vdl.0 cache, locks:2
29.12 14:40:12 TIMER: Check auto-disconnect...
29.12 14:40:14 STATS: vdl.0 cache, locks:2
29.12 14:41:12 TIMER: Check auto-disconnect...
29.12 14:41:14 STATS: vdl.0 cache, locks:2
29.12 14:42:12 TIMER: Check auto-disconnect...
29.12 14:42:14 STATS: vdl.0 cache, locks:2
29.12 14:43:12 TIMER: Check auto-disconnect...
29.12 14:43:14 STATS: vdl.0 cache, locks:2
29.12 14:44:12 TIMER: Check auto-disconnect...
29.12 14:44:14 STATS: vdl.0 cache, locks:2
29.12 14:45:12 TIMER: Check auto-disconnect...
29.12 14:45:14 STATS: vdl.0 cache, locks:2
29.12 14:46:12 TIMER: Check auto-disconnect...
29.12 14:46:14 STATS: vdl.0 cache, locks:2
29.12 14:47:12 TIMER: Check auto-disconnect...
29.12 14:47:14 STATS: vdl.0 cache, locks:2
29.12 14:48:12 TIMER: Check auto-disconnect...
29.12 14:48:14 STATS: vdl.0 cache, locks:2
29.12 14:49:12 TIMER: Check auto-disconnect...
29.12 14:49:14 STATS: vdl.0 cache, locks:2
29.12 14:50:12 TIMER: Check auto-disconnect...
29.12 14:50:14 STATS: vdl.0 cache, locks:2
29.12 14:51:12 TIMER: Check auto-disconnect...
29.12 14:51:14 STATS: vdl.0 cache, locks:2
29.12 14:52:12 TIMER: Check auto-disconnect...
29.12 14:52:14 STATS: vdl.0 cache, locks:2
29.12 14:53:12 TIMER: Check auto-disconnect...
29.12 14:53:14 STATS: vdl.0 cache, locks:2
29.12 14:54:12 TIMER: Check auto-disconnect...
29.12 14:54:12 NET: Client (name:uid161 conid:73525980 TCP) disconnected from vdl.0 (clients:0)
29.12 14:54:12 DB: SELECT id FROM battle WHERE firstid=161 OR secondid=161 AND finished <> true
29.12 14:54:12 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=161 OR secondid=161 AND finished <> true, _type => core/server.query }
29.12 14:54:12 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.12 14:54:12 STATS: vdl.0 cache connection, 254 calls, total 0.208011388778687 sec spent, avg 0.82 ms
29.12 14:54:12 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.12 14:54:12 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.12 14:54:12 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.12 14:54:12 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
29.12 14:54:12 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 161, _type => core/cache.update }
29.12 14:54:12 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.12 14:54:12 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 161, _type => core/cache.update }
29.12 14:54:12 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.12 14:54:12 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 161, _type => core/user.logoutPost }
29.12 14:54:12 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.12 14:54:14 STATS: vdl.0 cache, locks:0
29.12 14:55:12 TIMER: Check auto-disconnect...
29.12 14:55:14 STATS: vdl.0 cache, locks:0
29.12 14:56:12 TIMER: Check auto-disconnect...
29.12 14:56:14 STATS: vdl.0 cache, locks:0
29.12 14:57:12 TIMER: Check auto-disconnect...
29.12 14:57:14 STATS: vdl.0 cache, locks:0
29.12 14:58:12 TIMER: Check auto-disconnect...
29.12 14:58:14 STATS: vdl.0 cache, locks:0
29.12 14:59:12 TIMER: Check auto-disconnect...
29.12 14:59:14 STATS: vdl.0 cache, locks:0
