04.11 00:00:00 TIMER: Marking all online users for runDaily()...
04.11 00:00:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:00:03 TRACE: User not logon yet.
04.11 00:00:03 TIMER: Check auto-disconnect...
04.11 00:00:03 -<<-: core/quest.dailyChangedEvent null
04.11 00:00:04 STATS: vdl.0 cache, locks:0
04.11 00:00:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:00:06 TRACE: User not logon yet.
04.11 00:00:21 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 00:00:21 -<<-: server.login ok
04.11 00:00:21 DB: SELECT * FROM LocalizationStrings
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 TIMER: Starting timer...
04.11 00:00:21 TIMER: Timer running...
04.11 00:00:21 DB: SELECT * FROM GameVars
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 00:00:21 -<<-: core/quest.getDaily ok
04.11 00:00:21 DB: SELECT * FROM UserAttributeTypes
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM UserVariableTypes
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 00:00:21 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM ItemGroups
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM Bundles ORDER BY ID
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 SHOP: loading items...
04.11 00:00:21 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 00:00:21 -<<-: core/shop.getList ok
04.11 00:00:21 SHOP: 0 items loaded (0 sec)
04.11 00:00:21 DB: SELECT * FROM EffectAttributeTypes
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM Effects
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:00:21 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:00:21 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:21 DB: SELECT * FROM Badges
04.11 00:00:21 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 00:00:21 -<<-: core/server.query ok
04.11 00:00:25 NET: Client (conid:42427058) connected to vdl.0 (clients:1)
04.11 00:00:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:00:27 TRACE: User not logon yet.
04.11 00:00:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:00:34 TRACE: User not logon yet.
04.11 00:00:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:00:42 TRACE: User not logon yet.
04.11 00:00:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:00:49 TRACE: User not logon yet.
04.11 00:00:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:00:56 TRACE: User not logon yet.
04.11 00:01:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:04 TRACE: User not logon yet.
04.11 00:01:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:11 TRACE: User not logon yet.
04.11 00:01:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:18 TRACE: User not logon yet.
04.11 00:01:21 TIMER: Check auto-disconnect...
04.11 00:01:21 STATS: vdl.0 cache, locks:0
04.11 00:01:22 NET: Client (conid:41158627) connected to vdl.0 (clients:2)
04.11 00:01:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:26 TRACE: User not logon yet.
04.11 00:01:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:28 TRACE: User not logon yet.
04.11 00:01:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:33 TRACE: User not logon yet.
04.11 00:01:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:41 TRACE: User not logon yet.
04.11 00:01:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:48 TRACE: User not logon yet.
04.11 00:01:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:54 TRACE: User not logon yet.
04.11 00:01:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:01:55 TRACE: User not logon yet.
04.11 00:02:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:03 TRACE: User not logon yet.
04.11 00:02:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:10 TRACE: User not logon yet.
04.11 00:02:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:18 TRACE: User not logon yet.
04.11 00:02:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:20 TRACE: User not logon yet.
04.11 00:02:21 TIMER: Check auto-disconnect...
04.11 00:02:21 STATS: vdl.0 cache, locks:0
04.11 00:02:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:25 TRACE: User not logon yet.
04.11 00:02:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:32 TRACE: User not logon yet.
04.11 00:02:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:40 TRACE: User not logon yet.
04.11 00:02:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:45 TRACE: User not logon yet.
04.11 00:02:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:47 TRACE: User not logon yet.
04.11 00:02:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:02:55 TRACE: User not logon yet.
04.11 00:03:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:02 TRACE: User not logon yet.
04.11 00:03:10 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:10 TRACE: User not logon yet.
04.11 00:03:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:11 TRACE: User not logon yet.
04.11 00:03:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:17 TRACE: User not logon yet.
04.11 00:03:18 NET: Client (name:null conid:41158627 TCP) disconnected from vdl.0 (clients:1)
04.11 00:03:20 NET: Client (conid:35553880) connected to vdl.0 (clients:2)
04.11 00:03:20 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:03:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:03:20 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:03:20 -<<-: core/server.query ok
04.11 00:03:20 STATS: vdl.0 cache connection, 21 calls, total 0.0205578804016113 sec spent, avg 0.98 ms
04.11 00:03:20 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:03:20 -<<-: core/user.isOnlineID ok
04.11 00:03:20 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:03:20 -<<-: core/cache.get ok
04.11 00:03:20 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:03:20 -<<-: core/cache.get ok
04.11 00:03:20 NET: Client login (conid:35553880, id:107, name:uid107)
04.11 00:03:20 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:03:20 -<<-: core/user.loginPost null
04.11 00:03:20 DB: SELECT ID FROM TempUserLogins WHERE UserID = 107 AND Date = 'today'::timestamp
04.11 00:03:20 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 107 AND Date = 'today'::timestamp, _type => core/server.query }
04.11 00:03:20 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 00:03:20 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (107, 'today'::timestamp)
04.11 00:03:20 == NET: null ret: user.join { name => uid107, type => user.join }
04.11 00:03:20 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:03:20 == NET: uid107 ret: user.join { name => null, type => user.join }
04.11 00:03:20 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:03:20 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (107, 'today'::timestamp), _type => core/server.pending }} }
04.11 00:03:20 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
04.11 00:03:21 TIMER: Check auto-disconnect...
04.11 00:03:21 STATS: vdl.0 cache, locks:2
04.11 00:03:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:24 TRACE: User not logon yet.
04.11 00:03:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:24 TIME: user.ping 0.12 ms
04.11 00:03:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:03:26 ->>-: core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 309, lastLoadDate => 1105 } }}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:03:26 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:03:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:32 TRACE: User not logon yet.
04.11 00:03:33 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:33 TIME: user.ping 0.09 ms
04.11 00:03:33 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:03:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:39 TRACE: User not logon yet.
04.11 00:03:40 NET: Client (conid:14127284) connected to vdl.0 (clients:3)
04.11 00:03:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:41 TIME: user.ping 0.13 ms
04.11 00:03:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:03:44 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:03:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:03:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:03:44 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:03:44 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:03:44 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:03:44 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:03:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:03:44 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:03:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:03:44 NET: Client login (conid:14127284, id:116, name:uid116)
04.11 00:03:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:03:44 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:03:44 DB: SELECT ID FROM TempUserLogins WHERE UserID = 116 AND Date = 'today'::timestamp
04.11 00:03:44 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 116 AND Date = 'today'::timestamp, _type => core/server.query }
04.11 00:03:44 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 00:03:44 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (116, 'today'::timestamp)
04.11 00:03:44 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:03:44 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:03:44 == NET: null ret: user.join { name => uid116, type => user.join }
04.11 00:03:44 == NET: uid116 ret: user.join { name => null, type => user.join }
04.11 00:03:44 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:03:44 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:03:44 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (116, 'today'::timestamp), _type => core/server.pending }} }
04.11 00:03:44 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
04.11 00:03:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:46 TRACE: User not logon yet.
04.11 00:03:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:49 TIME: user.ping 0.19 ms
04.11 00:03:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:03:51 ->>-: core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 309, lastLoadDate => 1105 } }}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:03:51 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:03:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:54 TRACE: User not logon yet.
04.11 00:03:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:03:57 TIME: user.ping 0.1 ms
04.11 00:03:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:04:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:01 TRACE: User not logon yet.
04.11 00:04:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:05 TIME: user.ping 0.17 ms
04.11 00:04:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:04:07 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:04:07 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:04:07 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:04:07 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:04:07 TIME: battle.find 0.61 ms
04.11 00:04:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:09 TRACE: User not logon yet.
04.11 00:04:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:16 TRACE: User not logon yet.
04.11 00:04:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:17 TIME: user.ping 0.14 ms
04.11 00:04:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:04:21 TIMER: Check auto-disconnect...
04.11 00:04:21 STATS: vdl.0 cache, locks:4
04.11 00:04:23 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:23 TRACE: User not logon yet.
04.11 00:04:27 NET: Client (conid:62528148) connected to vdl.0 (clients:4)
04.11 00:04:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:29 TIME: user.ping 0.08 ms
04.11 00:04:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:04:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:31 TRACE: User not logon yet.
04.11 00:04:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:33 TRACE: User not logon yet.
04.11 00:04:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:38 TRACE: User not logon yet.
04.11 00:04:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:41 TIME: user.ping 0.09 ms
04.11 00:04:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:04:44 NET: Client (name:uid107 conid:35553880 TCP) disconnected from vdl.0 (clients:3)
04.11 00:04:44 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:04:44 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:04:44 -<<-: core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }, { id => 21 }, { id => 23 }}, errorCode => ok, _type => core/server.query }
04.11 00:04:44 STATS: vdl.0 cache connection, 38 calls, total 0.0324673652648926 sec spent, avg 0.85 ms
04.11 00:04:44 ->>-: vdl/cache.battle.infoRoom { roomId => 23, _type => vdl/cache.battle.infoRoom }
04.11 00:04:44 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:04:44 ->>-: vdl/cache.battle.finishRoom { roomId => 23, _type => vdl/cache.battle.finishRoom }
04.11 00:04:44 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:04:44 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:04:44 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:04:44 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:04:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:04:44 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:04:44 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:04:44 == NET: uid116 ret: battle.end { type => battle.end }
04.11 00:04:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:45 TRACE: User not logon yet.
04.11 00:04:47 NET: Client (name:uid116 conid:14127284 TCP) disconnected from vdl.0 (clients:2)
04.11 00:04:47 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:04:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:04:47 -<<-: core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 17 }, { id => 18 }, { id => 19 }, { id => 20 }, { id => 22 }, { id => 23 }}, errorCode => ok, _type => core/server.query }
04.11 00:04:47 ->>-: vdl/cache.battle.infoRoom { roomId => 23, _type => vdl/cache.battle.infoRoom }
04.11 00:04:47 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:04:47 ->>-: vdl/cache.battle.finishRoom { roomId => 23, _type => vdl/cache.battle.finishRoom }
04.11 00:04:47 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:04:47 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
04.11 00:04:47 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:04:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:04:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:04:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:04:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:04:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:04:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:04:52 NET: Client (name:null conid:62528148 TCP) disconnected from vdl.0 (clients:1)
04.11 00:04:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:04:53 TRACE: User not logon yet.
04.11 00:05:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:00 TRACE: User not logon yet.
04.11 00:05:02 NET: Client (conid:90957087) connected to vdl.0 (clients:2)
04.11 00:05:03 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:05:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:05:03 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:05:03 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:05:03 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:05:03 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:05:03 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:05:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:05:03 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:05:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:05:03 NET: Client login (conid:90957087, id:107, name:uid107)
04.11 00:05:03 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:05:03 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:05:03 == NET: null ret: user.join { name => uid107, type => user.join }
04.11 00:05:03 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:05:03 == NET: uid107 ret: user.join { name => null, type => user.join }
04.11 00:05:03 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:05:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:07 TIME: user.ping 0.08 ms
04.11 00:05:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:08 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:08 TRACE: User not logon yet.
04.11 00:05:11 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:05:11 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:05:14 NET: Client (conid:29312333) connected to vdl.0 (clients:3)
04.11 00:05:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:15 TRACE: User not logon yet.
04.11 00:05:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:15 TIME: user.ping 0.1 ms
04.11 00:05:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:18 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:05:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:05:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:05:18 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:05:18 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:05:18 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:05:18 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:05:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:05:18 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:05:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:05:18 NET: Client login (conid:29312333, id:116, name:uid116)
04.11 00:05:18 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:05:18 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:05:18 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:05:18 == NET: null ret: user.join { name => uid116, type => user.join }
04.11 00:05:18 == NET: uid116 ret: user.join { name => null, type => user.join }
04.11 00:05:18 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:05:18 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:05:18 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:05:21 TIMER: Check auto-disconnect...
04.11 00:05:21 STATS: vdl.0 cache, locks:4
04.11 00:05:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:22 TRACE: User not logon yet.
04.11 00:05:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:23 TIME: user.ping 0.18 ms
04.11 00:05:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:26 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:05:26 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:05:30 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:30 TRACE: User not logon yet.
04.11 00:05:30 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:05:30 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:05:30 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 24, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:05:30 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 24, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:05:30 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:05:30 TIME: battle.find 111.31 ms
04.11 00:05:30 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:05:30 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 24, player => 1 }, type => battle.enemy }
04.11 00:05:30 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 24, player => 2 }, type => battle.enemy }
04.11 00:05:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:32 TIME: user.ping 0.09 ms
04.11 00:05:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:33 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:33 TIME: user.ping 0.08 ms
04.11 00:05:33 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:37 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:37 TRACE: User not logon yet.
04.11 00:05:40 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:40 TIME: user.ping 0.1 ms
04.11 00:05:40 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:45 TRACE: User not logon yet.
04.11 00:05:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:49 TIME: user.ping 0.09 ms
04.11 00:05:52 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:52 TRACE: User not logon yet.
04.11 00:05:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:56 TIME: user.ping 0.08 ms
04.11 00:05:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:57 TIME: user.ping 0.12 ms
04.11 00:05:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:05:59 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:05:59 TRACE: User not logon yet.
04.11 00:06:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:04 TIME: user.ping 0.07 ms
04.11 00:06:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:06:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:07 TRACE: User not logon yet.
04.11 00:06:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:12 TIME: user.ping 0.09 ms
04.11 00:06:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:06:14 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:14 TRACE: User not logon yet.
04.11 00:06:19 NET: Client (name:uid107 conid:90957087 TCP) disconnected from vdl.0 (clients:2)
04.11 00:06:19 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:06:19 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:06:19 -<<-: core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }, { id => 21 }, { id => 23 }, { id => 24 }}, errorCode => ok, _type => core/server.query }
04.11 00:06:19 STATS: vdl.0 cache connection, 64 calls, total 0.160475015640259 sec spent, avg 2.51 ms
04.11 00:06:19 ->>-: vdl/cache.battle.infoRoom { roomId => 24, _type => vdl/cache.battle.infoRoom }
04.11 00:06:19 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:06:19 ->>-: vdl/cache.battle.finishRoom { roomId => 24, _type => vdl/cache.battle.finishRoom }
04.11 00:06:19 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:06:19 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:06:19 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:06:19 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:06:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:06:19 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:06:19 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:06:19 == NET: uid116 ret: battle.end { type => battle.end }
04.11 00:06:21 TIMER: Check auto-disconnect...
04.11 00:06:21 STATS: vdl.0 cache, locks:2
04.11 00:06:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:21 TIME: user.ping 0.09 ms
04.11 00:06:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:06:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:22 TRACE: User not logon yet.
04.11 00:06:26 NET: Client (name:uid116 conid:29312333 TCP) disconnected from vdl.0 (clients:1)
04.11 00:06:26 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:06:26 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:06:26 -<<-: core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 17 }, { id => 18 }, { id => 19 }, { id => 20 }, { id => 22 }, { id => 24 }}, errorCode => ok, _type => core/server.query }
04.11 00:06:26 ->>-: vdl/cache.battle.infoRoom { roomId => 24, _type => vdl/cache.battle.infoRoom }
04.11 00:06:26 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:06:26 ->>-: vdl/cache.battle.finishRoom { roomId => 24, _type => vdl/cache.battle.finishRoom }
04.11 00:06:26 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:06:26 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
04.11 00:06:26 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:06:26 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:06:26 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:06:26 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:06:26 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:06:26 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:06:26 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:06:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:29 TRACE: User not logon yet.
04.11 00:06:32 NET: Client (conid:94192200) connected to vdl.0 (clients:2)
04.11 00:06:33 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:06:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:06:33 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:06:33 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:06:33 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:06:33 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:06:33 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:06:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:06:33 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:06:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:06:33 NET: Client login (conid:94192200, id:107, name:uid107)
04.11 00:06:33 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:06:33 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:06:33 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:06:33 == NET: null ret: user.join { name => uid107, type => user.join }
04.11 00:06:33 == NET: uid107 ret: user.join { name => null, type => user.join }
04.11 00:06:33 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:06:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:36 TRACE: User not logon yet.
04.11 00:06:37 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:37 TIME: user.ping 0.09 ms
04.11 00:06:37 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:06:41 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:06:41 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:06:44 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:44 TRACE: User not logon yet.
04.11 00:06:45 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:45 TIME: user.ping 0.11 ms
04.11 00:06:45 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:06:50 NET: Client (conid:66374070) connected to vdl.0 (clients:3)
04.11 00:06:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:51 TRACE: User not logon yet.
04.11 00:06:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:53 TIME: user.ping 0.2 ms
04.11 00:06:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:06:54 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:06:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:06:54 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:06:54 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:06:54 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:06:54 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:06:54 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:06:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:06:54 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:06:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:06:54 NET: Client login (conid:66374070, id:116, name:uid116)
04.11 00:06:54 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:06:54 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:06:54 == NET: null ret: user.join { name => uid116, type => user.join }
04.11 00:06:54 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:06:54 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:06:54 == NET: uid116 ret: user.join { name => null, type => user.join }
04.11 00:06:54 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:06:54 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:06:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:06:58 TRACE: User not logon yet.
04.11 00:07:01 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:07:01 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:07:01 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:01 TIME: user.ping 0.09 ms
04.11 00:07:01 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:07:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:06 TRACE: User not logon yet.
04.11 00:07:08 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:07:08 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:07:08 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:07:08 TIME: battle.find 0.66 ms
04.11 00:07:08 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:07:09 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:09 TIME: user.ping 0.1 ms
04.11 00:07:09 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:07:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:09 TIME: user.ping 0.15 ms
04.11 00:07:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:07:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:13 TRACE: User not logon yet.
04.11 00:07:16 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:07:16 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:07:16 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 25, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:07:16 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 25, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:07:16 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:07:16 TIME: battle.find 21.2 ms
04.11 00:07:16 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:07:16 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 25, player => 1 }, type => battle.enemy }
04.11 00:07:16 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 25, player => 2 }, type => battle.enemy }
04.11 00:07:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:19 TIME: user.ping 0.12 ms
04.11 00:07:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:07:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:20 TRACE: User not logon yet.
04.11 00:07:21 TIMER: Check auto-disconnect...
04.11 00:07:21 STATS: vdl.0 cache, locks:4
04.11 00:07:23 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 25 }
04.11 00:07:23 ->>-: vdl/cache.battle.infoRoom { roomId => 25, _type => vdl/cache.battle.infoRoom }
04.11 00:07:23 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:07:23 STATS: vdl.0 cache connection, 91 calls, total 0.199642181396484 sec spent, avg 2.19 ms
04.11 00:07:23 TIME: battle.sendtask 0.74 ms
04.11 00:07:23 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,0,1,5,0,0], errorCode => ok, _type => battle.task }
04.11 00:07:23 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [5,0,1,5,0,0], errorCode => ok }
04.11 00:07:23 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:07:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:28 TRACE: User not logon yet.
04.11 00:07:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:32 TIME: user.ping 0.08 ms
04.11 00:07:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:07:33 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 25 }
04.11 00:07:33 ->>-: vdl/cache.battle.infoRoom { roomId => 25, _type => vdl/cache.battle.infoRoom }
04.11 00:07:33 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:07:33 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 25 }
04.11 00:07:33 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 00:07:33 TIME: battle.sendtask 1.38 ms
04.11 00:07:33 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:07:33 == NET: uid116 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [0,1,5,0,0], messageType => battle.sendtask, to => [8,3], battleId => 25 }
04.11 00:07:35 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:35 TIME: user.ping 0.09 ms
04.11 00:07:35 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:07:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:36 TRACE: User not logon yet.
04.11 00:07:43 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:43 TRACE: User not logon yet.
04.11 00:07:45 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:45 TIME: user.ping 0.22 ms
04.11 00:07:45 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:07:50 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:50 TRACE: User not logon yet.
04.11 00:07:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:57 TIME: user.ping 0.08 ms
04.11 00:07:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:07:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:07:58 TRACE: User not logon yet.
04.11 00:08:02 NET: Client (name:null conid:42427058 TCP) disconnected from vdl.0 (clients:2)
04.11 00:08:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:08:10 TIME: user.ping 0.09 ms
04.11 00:08:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:08:21 TIMER: Check auto-disconnect...
04.11 00:08:21 STATS: vdl.0 cache, locks:4
04.11 00:08:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:08:23 TIME: user.ping 0.16 ms
04.11 00:08:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:08:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:08:35 TIME: user.ping 0.19 ms
04.11 00:08:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:09:21 TIMER: Check auto-disconnect...
04.11 00:09:21 STATS: vdl.0 cache, locks:4
04.11 00:09:21 TIMER: Check auto-disconnect...
04.11 00:09:21 STATS: vdl.0 cache, locks:4
04.11 00:09:21 TIMER: Check auto-disconnect...
04.11 00:09:21 NET: Client (name:uid116 conid:66374070 TCP) disconnected from vdl.0 (clients:1)
04.11 00:09:21 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:09:21 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:09:21 -<<-: core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 17 }, { id => 18 }, { id => 19 }, { id => 20 }, { id => 22 }, { id => 24 }, { id => 25 }}, errorCode => ok, _type => core/server.query }
04.11 00:09:21 STATS: vdl.0 cache connection, 94 calls, total 0.202851295471191 sec spent, avg 2.16 ms
04.11 00:09:21 ->>-: vdl/cache.battle.infoRoom { roomId => 25, _type => vdl/cache.battle.infoRoom }
04.11 00:09:21 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:09:21 ->>-: vdl/cache.battle.finishRoom { roomId => 25, _type => vdl/cache.battle.finishRoom }
04.11 00:09:21 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:09:21 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:09:21 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:09:21 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:09:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:09:21 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:09:21 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:09:21 == NET: uid107 ret: battle.end { type => battle.end }
04.11 00:09:21 STATS: vdl.0 cache, locks:2
04.11 00:09:21 TIMER: Check auto-disconnect...
04.11 00:09:21 NET: Client (name:uid107 conid:94192200 TCP) disconnected from vdl.0 (clients:0)
04.11 00:09:21 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:09:21 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:09:21 -<<-: core/server.query { list => {{ id => 25 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }, { id => 21 }, { id => 23 }}, errorCode => ok, _type => core/server.query }
04.11 00:09:21 ->>-: vdl/cache.battle.infoRoom { roomId => 23, _type => vdl/cache.battle.infoRoom }
04.11 00:09:21 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:09:21 ->>-: vdl/cache.battle.finishRoom { roomId => 23, _type => vdl/cache.battle.finishRoom }
04.11 00:09:21 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:09:21 ->>-: core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.end } }
04.11 00:09:21 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:09:21 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:09:21 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:09:21 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:09:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:09:21 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:09:21 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }04.11 00:14:22 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 00:14:22 -<<-: server.login ok
04.11 00:14:22 DB: SELECT * FROM LocalizationStrings
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 TIMER: Starting timer...
04.11 00:14:22 TIMER: Timer running...
04.11 00:14:22 DB: SELECT * FROM GameVars
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 00:14:22 -<<-: core/quest.getDaily ok
04.11 00:14:22 DB: SELECT * FROM UserAttributeTypes
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM UserVariableTypes
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 00:14:22 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM ItemGroups
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM Bundles ORDER BY ID
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 SHOP: loading items...
04.11 00:14:22 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 00:14:22 -<<-: core/shop.getList ok
04.11 00:14:22 SHOP: 0 items loaded (0 sec)
04.11 00:14:22 DB: SELECT * FROM EffectAttributeTypes
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM Effects
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:14:22 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:14:22 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 DB: SELECT * FROM Badges
04.11 00:14:22 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 00:14:22 -<<-: core/server.query ok
04.11 00:14:22 TIMER: Check auto-disconnect...
04.11 00:14:22 STATS: vdl.0 cache, locks:0
04.11 00:14:22 TIMER: Check auto-disconnect...
04.11 00:14:22 STATS: vdl.0 cache, locks:0
04.11 00:16:42 NET: Client (conid:68026968) connected to vdl.0 (clients:1)
04.11 00:16:44 NET: Client (conid:65893641) connected to vdl.0 (clients:2)
04.11 00:16:45 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:16:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:16:45 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:16:45 -<<-: core/server.query ok
04.11 00:16:45 STATS: vdl.0 cache connection, 21 calls, total 0.0195639133453369 sec spent, avg 0.93 ms
04.11 00:16:45 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:16:45 -<<-: core/user.isOnlineID ok
04.11 00:16:45 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:16:45 -<<-: core/cache.get ok
04.11 00:16:45 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:16:45 -<<-: core/cache.get ok
04.11 00:16:45 NET: Client login (conid:65893641, id:107, name:uid107)
04.11 00:16:45 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:16:45 -<<-: core/user.loginPost null
04.11 00:16:45 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:16:45 == NET: null ret: user.join { name => uid107, type => user.join }
04.11 00:16:45 == NET: uid107 ret: user.join { name => null, type => user.join }
04.11 00:16:45 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:16:46 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:16:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:16:46 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:16:46 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:16:46 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:16:46 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:16:46 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:16:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:16:46 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:16:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:16:46 NET: Client login (conid:68026968, id:116, name:uid116)
04.11 00:16:46 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:16:46 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:16:46 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:16:46 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:16:46 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:16:46 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:16:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:16:49 TIME: user.ping 0.16 ms
04.11 00:16:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:16:52 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:16:52 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:16:52 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:16:52 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:16:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:16:57 TIME: user.ping 0.16 ms
04.11 00:16:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:16:59 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:16:59 TIME: user.ping 0.08 ms
04.11 00:16:59 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:17:01 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:17:01 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:17:01 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:17:01 TIME: battle.find 0.4 ms
04.11 00:17:01 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:17:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:17:05 TIME: user.ping 0.09 ms
04.11 00:17:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:17:09 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:17:09 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:17:09 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 26, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:17:09 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 26, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:17:09 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:17:09 TIME: battle.find 33.71 ms
04.11 00:17:09 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:17:09 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 26, player => 1 }, type => battle.enemy }
04.11 00:17:09 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 26, player => 2 }, type => battle.enemy }
04.11 00:17:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:17:16 TIME: user.ping 0.13 ms
04.11 00:17:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:17:22 TIMER: Check auto-disconnect...
04.11 00:17:22 STATS: vdl.0 cache, locks:4
04.11 00:17:26 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:17:26 TIME: user.ping 0.09 ms
04.11 00:17:26 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:17:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:17:29 TIME: user.ping 0.08 ms
04.11 00:17:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:17:31 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 26 }
04.11 00:17:31 ->>-: vdl/cache.battle.infoRoom { roomId => 26, _type => vdl/cache.battle.infoRoom }
04.11 00:17:31 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:17:31 TIME: battle.sendtask 1.47 ms
04.11 00:17:31 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [0,2,5,4,2,3], errorCode => ok }
04.11 00:17:31 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [0,2,5,4,2,3], errorCode => ok }
04.11 00:17:31 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:17:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:17:41 TIME: user.ping 0.07 ms
04.11 00:17:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:17:50 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:17:50 TIME: user.ping 0.15 ms
04.11 00:17:50 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:17:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:17:53 TIME: user.ping 0.21 ms
04.11 00:17:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:18:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:18:05 TIME: user.ping 0.17 ms
04.11 00:18:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:18:15 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:18:15 TIME: user.ping 0.1 ms
04.11 00:18:15 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:18:17 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:18:17 TIME: user.ping 0.08 ms
04.11 00:18:17 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:18:22 TIMER: Check auto-disconnect...
04.11 00:18:22 STATS: vdl.0 cache, locks:4
04.11 00:18:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:18:29 TIME: user.ping 0.09 ms
04.11 00:18:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:18:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:18:39 TIME: user.ping 0.12 ms
04.11 00:18:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:18:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:18:42 TIME: user.ping 0.09 ms
04.11 00:18:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:18:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:18:53 TIME: user.ping 0.07 ms
04.11 00:18:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:19:04 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:19:04 TIME: user.ping 0.11 ms
04.11 00:19:04 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:19:22 TIMER: Check auto-disconnect...
04.11 00:19:22 STATS: vdl.0 cache, locks:4
04.11 00:19:29 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:19:29 TIME: user.ping 0.09 ms
04.11 00:19:29 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:19:32 NET: Client (name:uid107 conid:65893641 TCP) disconnected from vdl.0 (clients:1)
04.11 00:19:32 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:19:32 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:19:32 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }, { id => 21 }}, errorCode => ok, _type => core/server.query }
04.11 00:19:32 STATS: vdl.0 cache connection, 36 calls, total 0.0678691864013672 sec spent, avg 1.89 ms
04.11 00:19:32 ->>-: vdl/cache.battle.infoRoom { roomId => 21, _type => vdl/cache.battle.infoRoom }
04.11 00:19:32 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:19:32 ->>-: vdl/cache.battle.finishRoom { roomId => 21, _type => vdl/cache.battle.finishRoom }
04.11 00:19:32 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:19:32 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:19:32 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:19:32 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:19:32 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:19:32 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:19:32 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:19:32 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 00:19:38 NET: Client (conid:72406398) connected to vdl.0 (clients:2)
04.11 00:19:39 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:19:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:19:39 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:19:39 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:19:39 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:19:39 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:19:39 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:19:39 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 2, id => 107 } }
04.11 00:19:39 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:19:39 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 107 } }
04.11 00:19:39 NET: Client login (conid:72406398, id:107, name:uid107)
04.11 00:19:39 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:19:39 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:19:39 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:19:39 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:19:39 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:19:39 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:19:42 NET: Client (name:uid116 conid:68026968 TCP) disconnected from vdl.0 (clients:1)
04.11 00:19:42 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:19:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:19:42 -<<-: core/server.query { list => {{ id => 26 }, { id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 17 }, { id => 18 }, { id => 19 }, { id => 20 }, { id => 22 }, { id => 24 }}, errorCode => ok, _type => core/server.query }
04.11 00:19:42 ->>-: vdl/cache.battle.infoRoom { roomId => 24, _type => vdl/cache.battle.infoRoom }
04.11 00:19:42 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:19:42 ->>-: vdl/cache.battle.finishRoom { roomId => 24, _type => vdl/cache.battle.finishRoom }
04.11 00:19:42 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:19:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:19:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:19:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:19:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:19:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:19:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:19:42 == NET: uid107 ret: battle.leave { type => battle.leave }
04.11 00:19:43 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:19:43 TIME: user.ping 0.1 ms
04.11 00:19:43 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:19:47 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:19:47 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
04.11 00:19:51 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:19:51 TIME: user.ping 0.09 ms
04.11 00:19:51 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:20:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:20:00 TIME: user.ping 0.19 ms
04.11 00:20:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:20:02 NET: Client (name:uid107 conid:72406398 TCP) disconnected from vdl.0 (clients:0)
04.11 00:20:02 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:20:02 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:20:02 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }}, errorCode => ok, _type => core/server.query }
04.11 00:20:02 ->>-: vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
04.11 00:20:02 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:20:02 ->>-: vdl/cache.battle.finishRoom { roomId => 18, _type => vdl/cache.battle.finishRoom }
04.11 00:20:02 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:20:02 ->>-: core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:20:02 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:20:02 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:20:02 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
04.11 00:20:02 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:20:02 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:20:02 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:20:02 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:20:03 NET: Client (conid:17678325) connected to vdl.0 (clients:1)
04.11 00:20:06 NET: Client (conid:79307687) connected to vdl.0 (clients:2)
04.11 00:20:07 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:20:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:20:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:20:07 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:20:07 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:20:07 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:20:07 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:20:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 4, id => 107 } }
04.11 00:20:07 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:20:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 107 } }
04.11 00:20:07 NET: Client login (conid:79307687, id:107, name:uid107)
04.11 00:20:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:20:07 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:20:07 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:20:07 == NET: null ret: user.join { name => uid107, type => user.join }
04.11 00:20:07 == NET: uid107 ret: user.join { name => null, type => user.join }
04.11 00:20:07 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:20:07 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:20:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:20:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:20:07 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:20:07 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:20:07 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:20:07 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:20:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:20:07 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:20:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:20:07 NET: Client login (conid:17678325, id:116, name:uid116)
04.11 00:20:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:20:07 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:20:07 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:20:07 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:20:07 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:20:07 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:20:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:20:11 TIME: user.ping 0.14 ms
04.11 00:20:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:20:17 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:20:17 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
04.11 00:20:17 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:20:17 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:20:19 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:20:19 TIME: user.ping 0.07 ms
04.11 00:20:19 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:20:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:20:21 TIME: user.ping 0.14 ms
04.11 00:20:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:20:22 TIMER: Check auto-disconnect...
04.11 00:20:22 STATS: vdl.0 cache, locks:4
04.11 00:20:26 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:20:26 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:20:26 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:20:26 TIME: battle.find 0.48 ms
04.11 00:20:26 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:20:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:20:28 TIME: user.ping 0.1 ms
04.11 00:20:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:20:31 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:20:31 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:20:31 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 27, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:20:31 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 27, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:20:31 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:20:31 TIME: battle.find 35.02 ms
04.11 00:20:31 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:20:31 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 27, player => 1 }, type => battle.enemy }
04.11 00:20:31 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 27, player => 2 }, type => battle.enemy }
04.11 00:20:39 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 27 }
04.11 00:20:39 ->>-: vdl/cache.battle.infoRoom { roomId => 27, _type => vdl/cache.battle.infoRoom }
04.11 00:20:39 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:20:39 STATS: vdl.0 cache connection, 75 calls, total 0.123808145523071 sec spent, avg 1.65 ms
04.11 00:20:39 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [4,2,2,0,4,1], errorCode => ok, _type => battle.task }
04.11 00:20:39 TIME: battle.sendtask 0.5 ms
04.11 00:20:39 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:20:39 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [4,2,2,0,4,1], errorCode => ok }
04.11 00:20:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:20:39 TIME: user.ping 0.15 ms
04.11 00:20:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:20:47 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:20:47 TIME: user.ping 0.1 ms
04.11 00:20:47 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:21:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:21:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:21:02 TIME: user.ping 0.1 ms
04.11 00:21:11 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:21:11 TIME: user.ping 0.07 ms
04.11 00:21:11 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:21:14 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:21:14 TIME: user.ping 0.09 ms
04.11 00:21:14 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:21:22 TIMER: Check auto-disconnect...
04.11 00:21:22 STATS: vdl.0 cache, locks:4
04.11 00:21:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:21:36 TIME: user.ping 0.15 ms
04.11 00:21:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:22:00 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:22:00 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:22:00 TIME: user.ping 0.09 ms
04.11 00:22:22 TIMER: Check auto-disconnect...
04.11 00:22:22 STATS: vdl.0 cache, locks:4
04.11 00:22:24 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:22:24 TIME: user.ping 0.08 ms
04.11 00:22:24 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:22:49 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:22:49 TIME: user.ping 0.2 ms
04.11 00:22:49 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:23:13 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:23:13 TIME: user.ping 0.1 ms
04.11 00:23:13 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:23:22 TIMER: Check auto-disconnect...
04.11 00:23:22 STATS: vdl.0 cache, locks:4
04.11 00:23:38 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:23:38 TIME: user.ping 0.11 ms
04.11 00:23:38 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:24:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:24:03 TIME: user.ping 0.22 ms
04.11 00:24:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:24:22 TIMER: Check auto-disconnect...
04.11 00:24:22 NET: Client (name:uid107 conid:79307687 TCP) disconnected from vdl.0 (clients:1)
04.11 00:24:22 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:24:22 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:24:22 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }}, errorCode => ok, _type => core/server.query }
04.11 00:24:22 STATS: vdl.0 cache connection, 76 calls, total 0.124802112579346 sec spent, avg 1.64 ms
04.11 00:24:22 ->>-: vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
04.11 00:24:22 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:24:22 ->>-: vdl/cache.battle.finishRoom { roomId => 17, _type => vdl/cache.battle.finishRoom }
04.11 00:24:22 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:24:22 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:24:22 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
04.11 00:24:22 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:24:22 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
04.11 00:24:22 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:24:22 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:24:22 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 00:24:22 STATS: vdl.0 cache, locks:2
04.11 00:24:49 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 00:24:49 -<<-: server.login ok
04.11 00:24:49 DB: SELECT * FROM LocalizationStrings
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 TIMER: Starting timer...
04.11 00:24:49 TIMER: Timer running...
04.11 00:24:49 DB: SELECT * FROM GameVars
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 00:24:49 -<<-: core/quest.getDaily ok
04.11 00:24:49 DB: SELECT * FROM UserAttributeTypes
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM UserVariableTypes
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 00:24:49 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM ItemGroups
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM Bundles ORDER BY ID
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 SHOP: loading items...
04.11 00:24:49 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 00:24:49 -<<-: core/shop.getList ok
04.11 00:24:49 SHOP: 0 items loaded (0 sec)
04.11 00:24:49 DB: SELECT * FROM EffectAttributeTypes
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM Effects
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:24:49 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:24:49 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 DB: SELECT * FROM Badges
04.11 00:24:49 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 00:24:49 -<<-: core/server.query ok
04.11 00:24:49 TIMER: Check auto-disconnect...
04.11 00:24:49 STATS: vdl.0 cache, locks:0
04.11 00:26:27 NET: Client (conid:77475273) connected to vdl.0 (clients:1)
04.11 00:26:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:26:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:26:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:26:31 -<<-: core/server.query ok
04.11 00:26:31 STATS: vdl.0 cache connection, 21 calls, total 0.0190970897674561 sec spent, avg 0.91 ms
04.11 00:26:31 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:26:31 -<<-: core/user.isOnlineID ok
04.11 00:26:31 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:26:31 -<<-: core/cache.get ok
04.11 00:26:31 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:26:31 -<<-: core/cache.get ok
04.11 00:26:31 NET: Client login (conid:77475273, id:116, name:uid116)
04.11 00:26:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:26:31 -<<-: core/user.loginPost null
04.11 00:26:31 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:26:31 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:26:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:26:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:26:42 NET: Client (conid:35022232) connected to vdl.0 (clients:2)
04.11 00:26:43 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:26:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:26:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:26:43 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:26:43 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:26:43 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:26:43 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:26:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:26:43 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:26:43 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:26:43 NET: Client login (conid:35022232, id:107, name:uid107)
04.11 00:26:43 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:26:43 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:26:43 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:26:43 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:26:43 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:26:43 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:26:43 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:26:43 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:26:43 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:26:43 TIME: battle.find 0.34 ms
04.11 00:26:43 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:26:45 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:26:45 TIME: user.ping 0.07 ms
04.11 00:26:45 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:26:47 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:26:47 TIME: user.ping 0.1 ms
04.11 00:26:47 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:26:49 TIMER: Check auto-disconnect...
04.11 00:26:49 STATS: vdl.0 cache, locks:4
04.11 00:26:49 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:26:49 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:26:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:26:56 TIME: user.ping 0.08 ms
04.11 00:26:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:26:56 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:26:56 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:26:56 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 28, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:26:56 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 28, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:26:56 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:26:56 TIME: battle.find 42.54 ms
04.11 00:26:56 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:26:56 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 28, player => 1 }, type => battle.enemy }
04.11 00:26:56 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 28, player => 2 }, type => battle.enemy }
04.11 00:27:06 NET: Client (name:uid116 conid:77475273 TCP) disconnected from vdl.0 (clients:1)
04.11 00:27:06 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:27:06 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:27:06 -<<-: core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 19 }, { id => 20 }, { id => 22 }}, errorCode => ok, _type => core/server.query }
04.11 00:27:06 ->>-: vdl/cache.battle.infoRoom { roomId => 22, _type => vdl/cache.battle.infoRoom }
04.11 00:27:06 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:27:06 ->>-: vdl/cache.battle.deleteRoom { roomId => 22, _type => vdl/cache.battle.deleteRoom }
04.11 00:27:06 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:27:06 ->>-: vdl/cache.battle.finishRoom { roomId => 22, _type => vdl/cache.battle.finishRoom }
04.11 00:27:06 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:27:06 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:27:06 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:27:06 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:27:06 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:27:06 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:27:06 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:27:06 == NET: uid107 ret: battle.leave { type => battle.leave }
04.11 00:27:08 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:27:08 TIME: user.ping 0.08 ms
04.11 00:27:08 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:27:10 NET: Client (name:uid107 conid:35022232 TCP) disconnected from vdl.0 (clients:0)
04.11 00:27:10 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:27:10 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:27:10 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }}, errorCode => ok, _type => core/server.query }
04.11 00:27:10 ->>-: vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
04.11 00:27:10 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:27:10 ->>-: vdl/cache.battle.deleteRoom { roomId => 15, _type => vdl/cache.battle.deleteRoom }
04.11 00:27:10 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:27:10 ->>-: vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
04.11 00:27:10 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:27:10 ->>-: core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:27:10 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:27:10 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:27:10 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:27:10 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:27:10 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:27:10 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:27:10 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:27:27 NET: Client (conid:514339) connected to vdl.0 (clients:1)
04.11 00:27:27 NET: Client (conid:18931407) connected to vdl.0 (clients:2)
04.11 00:27:28 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:27:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:27:28 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:27:28 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:27:28 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:27:28 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:27:28 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:27:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:27:28 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:27:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:27:28 NET: Client login (conid:514339, id:107, name:uid107)
04.11 00:27:28 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:27:28 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:27:28 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:27:28 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:27:28 == NET: uid107 ret: user.join { name => null, type => user.join }
04.11 00:27:28 == NET: null ret: user.join { name => uid107, type => user.join }
04.11 00:27:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:27:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:27:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:27:31 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:27:31 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:27:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:27:31 STATS: vdl.0 cache connection, 56 calls, total 0.116513729095459 sec spent, avg 2.08 ms
04.11 00:27:31 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:27:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:27:31 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:27:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:27:31 NET: Client login (conid:18931407, id:116, name:uid116)
04.11 00:27:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:27:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:27:31 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:27:31 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:27:31 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:27:31 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:27:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:27:32 TIME: user.ping 0.1 ms
04.11 00:27:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:27:33 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:27:33 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:27:33 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:27:33 TIME: battle.find 0.51 ms
04.11 00:27:33 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:27:34 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:27:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:27:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:27:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:27:43 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:27:43 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:27:43 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 29, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:27:43 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 29, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:27:43 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:27:43 TIME: battle.find 20.66 ms
04.11 00:27:43 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:27:43 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 29, player => 1 }, type => battle.enemy }
04.11 00:27:43 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 29, player => 2 }, type => battle.enemy }
04.11 00:27:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:27:44 TIME: user.ping 0.1 ms
04.11 00:27:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:27:45 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:27:45 TIME: user.ping 0.09 ms
04.11 00:27:45 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:27:49 TIMER: Check auto-disconnect...
04.11 00:27:49 STATS: vdl.0 cache, locks:4
04.11 00:27:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:27:57 TIME: user.ping 0.1 ms
04.11 00:27:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:27:58 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 29 }
04.11 00:27:58 ->>-: vdl/cache.battle.infoRoom { roomId => 29, _type => vdl/cache.battle.infoRoom }
04.11 00:27:58 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:27:58 TIME: battle.sendtask 0.82 ms
04.11 00:27:58 == NET: uid116 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,3,0,2,0,3], errorCode => ok, _type => null }
04.11 00:27:58 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [2,3,0,2,0,3], errorCode => ok }
04.11 00:27:58 == NET: uid116 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:28:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:28:09 TIME: user.ping 0.09 ms
04.11 00:28:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:28:10 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:28:10 TIME: user.ping 0.43 ms
04.11 00:28:10 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:28:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:28:21 TIME: user.ping 0.1 ms
04.11 00:28:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:28:33 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:28:33 TIME: user.ping 0.12 ms
04.11 00:28:33 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:28:34 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:28:34 TIME: user.ping 0.12 ms
04.11 00:28:34 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:28:37 NET: Client (name:uid107 conid:514339 TCP) disconnected from vdl.0 (clients:1)
04.11 00:28:37 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:28:37 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:28:37 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 9 }, { id => 11 }, { id => 12 }}, errorCode => ok, _type => core/server.query }
04.11 00:28:37 STATS: vdl.0 cache connection, 65 calls, total 0.141715049743652 sec spent, avg 2.18 ms
04.11 00:28:37 ->>-: vdl/cache.battle.infoRoom { roomId => 12, _type => vdl/cache.battle.infoRoom }
04.11 00:28:37 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:28:37 ->>-: vdl/cache.battle.deleteRoom { roomId => 12, _type => vdl/cache.battle.deleteRoom }
04.11 00:28:37 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:28:37 ->>-: vdl/cache.battle.finishRoom { roomId => 12, _type => vdl/cache.battle.finishRoom }
04.11 00:28:37 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:28:37 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:28:37 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:28:37 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:28:37 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:28:37 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:28:37 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:28:37 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 00:28:49 TIMER: Check auto-disconnect...
04.11 00:28:49 STATS: vdl.0 cache, locks:2
04.11 00:29:10 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:29:10 TIME: user.ping 0.19 ms
04.11 00:29:10 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:29:47 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:29:47 TIME: user.ping 0.12 ms
04.11 00:29:47 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:29:49 TIMER: Check auto-disconnect...
04.11 00:29:49 STATS: vdl.0 cache, locks:2
04.11 00:29:50 ++ NET: uid116 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 29 }
04.11 00:29:50 ->>-: vdl/cache.battle.infoRoom { roomId => 29, _type => vdl/cache.battle.infoRoom }
04.11 00:29:50 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:29:50 STATS: vdl.0 cache connection, 72 calls, total 0.155762434005737 sec spent, avg 2.16 ms
04.11 00:29:50 TIME: battle.sendtask 1.68 ms
04.11 00:29:50 == NET: uid116 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,5,5,5,5,10,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [2,3,2,0,3], errorCode => cannotSwap }
04.11 00:30:25 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:30:25 TIME: user.ping 0.12 ms
04.11 00:30:25 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:30:49 TIMER: Check auto-disconnect...
04.11 00:30:49 STATS: vdl.0 cache, locks:2
04.11 00:31:02 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:31:02 TIME: user.ping 0.09 ms
04.11 00:31:02 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:31:15 NET: Client (name:uid116 conid:18931407 TCP) disconnected from vdl.0 (clients:0)
04.11 00:31:15 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:31:15 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:31:15 -<<-: core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 10 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 19 }, { id => 20 }}, errorCode => ok, _type => core/server.query }
04.11 00:31:15 STATS: vdl.0 cache connection, 73 calls, total 0.156909465789795 sec spent, avg 2.15 ms
04.11 00:31:15 ->>-: vdl/cache.battle.infoRoom { roomId => 20, _type => vdl/cache.battle.infoRoom }
04.11 00:31:15 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:31:15 ->>-: vdl/cache.battle.deleteRoom { roomId => 20, _type => vdl/cache.battle.deleteRoom }
04.11 00:31:15 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:31:15 ->>-: vdl/cache.battle.finishRoom { roomId => 20, _type => vdl/cache.battle.finishRoom }
04.11 00:31:15 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:31:15 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:31:15 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:31:15 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:31:15 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:31:15 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:31:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:31:15 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:31:15 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:31:49 TIMER: Check auto-disconnect...
04.11 00:31:49 STATS: vdl.0 cache, locks:0
04.11 00:31:49 TIMER: Check auto-disconnect...
04.11 00:31:49 STATS: vdl.0 cache, locks:0
04.11 00:31:49 TIMER: Check auto-disconnect...
04.11 00:31:49 STATS: vdl.0 cache, locks:0
04.11 00:31:49 TIMER: Check auto-disconnect...
04.11 00:31:49 STATS: vdl.0 cache, locks:0
04.11 00:31:49 TIMER: Check auto-disconnect...
04.11 00:31:49 STATS: vdl.0 cache, locks:0
04.11 00:31:49 TIMER: Check auto-disconnect...
04.11 00:31:49 STATS: vdl.0 cache, locks:0
04.11 00:31:49 TIMER: Check auto-disconnect...
04.11 00:31:49 STATS: vdl.0 cache, locks:0
04.11 00:31:49 TIMER: Check auto-disconnect...
04.11 00:31:49 STATS: vdl.0 cache, locks:0
04.11 00:38:54 NET: Client (conid:90355510) connected to vdl.0 (clients:1)
04.11 00:38:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:38:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:38:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:38:55 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:38:55 STATS: vdl.0 cache connection, 81 calls, total 0.18421745300293 sec spent, avg 2.27 ms
04.11 00:38:55 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:38:55 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:38:55 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:38:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:38:55 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:38:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:38:55 NET: Client login (conid:90355510, id:107, name:uid107)
04.11 00:38:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:38:55 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:38:55 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:38:55 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:38:55 NET: Client (conid:63458611) connected to vdl.0 (clients:2)
04.11 00:38:59 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:38:59 TIME: user.ping 0.18 ms
04.11 00:38:59 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:38:59 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:38:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:38:59 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:38:59 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:38:59 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:38:59 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:38:59 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:38:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:38:59 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:38:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:38:59 NET: Client login (conid:63458611, id:116, name:uid116)
04.11 00:38:59 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:38:59 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:38:59 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:38:59 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:38:59 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:38:59 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:39:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:39:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:39:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:39:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:39:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:39:07 TIME: user.ping 0.09 ms
04.11 00:39:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:39:12 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:39:12 TIME: user.ping 0.08 ms
04.11 00:39:12 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:39:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:39:15 TIME: user.ping 0.1 ms
04.11 00:39:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:39:17 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:39:17 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:39:17 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:39:17 TIME: battle.find 0.36 ms
04.11 00:39:17 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:39:20 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:39:20 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:39:20 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 30, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:39:20 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 30, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:39:20 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:39:20 TIME: battle.find 33.61 ms
04.11 00:39:20 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:39:20 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 30, player => 1 }, type => battle.enemy }
04.11 00:39:20 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 30, player => 2 }, type => battle.enemy }
04.11 00:39:26 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:39:26 TIME: user.ping 0.09 ms
04.11 00:39:26 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:39:30 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 30 }
04.11 00:39:30 ->>-: vdl/cache.battle.infoRoom { roomId => 30, _type => vdl/cache.battle.infoRoom }
04.11 00:39:30 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:39:30 TIME: battle.sendtask 0.33 ms
04.11 00:39:30 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [1,5,4,2,1,0], errorCode => ok }
04.11 00:39:30 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:39:30 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [1,5,4,2,1,0], errorCode => ok }
04.11 00:39:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:39:37 TIME: user.ping 0.16 ms
04.11 00:39:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:39:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:39:39 TIME: user.ping 0.08 ms
04.11 00:39:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:39:40 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 30 }
04.11 00:39:40 ->>-: vdl/cache.battle.infoRoom { roomId => 30, _type => vdl/cache.battle.infoRoom }
04.11 00:39:40 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:39:40 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 30 }
04.11 00:39:40 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 00:39:40 TIME: battle.sendtask 2.6 ms
04.11 00:39:40 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:39:40 == NET: uid116 ret: battle.task { dice => 5, from => [7,4], name => swap, side => 2, type => battle.task, dices => [1,4,2,1,0], messageType => battle.sendtask, to => [8,4], battleId => 30 }
04.11 00:39:49 TIMER: Check auto-disconnect...
04.11 00:39:49 STATS: vdl.0 cache, locks:4
04.11 00:39:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:39:52 TIME: user.ping 0.08 ms
04.11 00:39:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:40:03 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:40:03 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:40:03 TIME: user.ping 0.09 ms
04.11 00:40:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:40:04 TIME: user.ping 0.09 ms
04.11 00:40:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:40:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:40:16 TIME: user.ping 0.1 ms
04.11 00:40:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:40:28 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:40:28 TIME: user.ping 0.15 ms
04.11 00:40:28 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:40:49 TIMER: Check auto-disconnect...
04.11 00:40:49 STATS: vdl.0 cache, locks:4
04.11 00:40:52 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:40:52 TIME: user.ping 0.08 ms
04.11 00:40:52 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:41:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:41:17 TIME: user.ping 0.1 ms
04.11 00:41:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:41:42 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:41:42 TIME: user.ping 0.17 ms
04.11 00:41:42 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:41:49 TIMER: Check auto-disconnect...
04.11 00:41:49 STATS: vdl.0 cache, locks:4
04.11 00:42:07 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:42:07 TIME: user.ping 0.17 ms
04.11 00:42:07 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:42:32 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:42:32 TIME: user.ping 0.12 ms
04.11 00:42:32 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:42:49 TIMER: Check auto-disconnect...
04.11 00:42:49 STATS: vdl.0 cache, locks:4
04.11 00:42:56 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:42:56 TIME: user.ping 0.09 ms
04.11 00:42:56 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:43:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:43:21 TIME: user.ping 0.1 ms
04.11 00:43:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:43:40 NET: Client (name:uid107 conid:90355510 TCP) disconnected from vdl.0 (clients:1)
04.11 00:43:40 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:43:40 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:43:40 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 9 }, { id => 11 }}, errorCode => ok, _type => core/server.query }
04.11 00:43:40 STATS: vdl.0 cache connection, 98 calls, total 0.227853536605835 sec spent, avg 2.33 ms
04.11 00:43:40 ->>-: vdl/cache.battle.infoRoom { roomId => 11, _type => vdl/cache.battle.infoRoom }
04.11 00:43:40 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:43:40 ->>-: vdl/cache.battle.deleteRoom { roomId => 11, _type => vdl/cache.battle.deleteRoom }
04.11 00:43:40 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:43:40 ->>-: vdl/cache.battle.finishRoom { roomId => 11, _type => vdl/cache.battle.finishRoom }
04.11 00:43:40 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:43:40 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:43:40 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:43:40 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:43:40 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:43:40 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:43:40 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:43:40 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 00:43:45 NET: Client (name:uid116 conid:63458611 TCP) disconnected from vdl.0 (clients:0)
04.11 00:43:45 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:43:45 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:43:45 -<<-: core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 10 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 19 }}, errorCode => ok, _type => core/server.query }
04.11 00:43:45 ->>-: vdl/cache.battle.infoRoom { roomId => 19, _type => vdl/cache.battle.infoRoom }
04.11 00:43:45 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:43:45 ->>-: vdl/cache.battle.deleteRoom { roomId => 19, _type => vdl/cache.battle.deleteRoom }
04.11 00:43:45 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:43:45 ->>-: vdl/cache.battle.finishRoom { roomId => 19, _type => vdl/cache.battle.finishRoom }
04.11 00:43:45 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:43:45 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:43:45 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:43:45 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:43:45 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:43:45 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:43:45 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:43:45 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:43:45 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:43:49 TIMER: Check auto-disconnect...
04.11 00:43:49 STATS: vdl.0 cache, locks:0
04.11 00:43:49 TIMER: Check auto-disconnect...
04.11 00:43:49 STATS: vdl.0 cache, locks:0
04.11 00:43:49 TIMER: Check auto-disconnect...
04.11 00:43:49 STATS: vdl.0 cache, locks:0
04.11 00:46:19 NET: Client (conid:67547535) connected to vdl.0 (clients:1)
04.11 00:46:22 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:46:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:46:22 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:46:22 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:46:22 STATS: vdl.0 cache connection, 113 calls, total 0.278119087219238 sec spent, avg 2.46 ms
04.11 00:46:22 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:46:22 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:46:22 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:46:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:46:22 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:46:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:46:22 NET: Client login (conid:67547535, id:116, name:uid116)
04.11 00:46:22 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:46:22 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:46:22 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:46:22 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:46:22 NET: Client (conid:55026332) connected to vdl.0 (clients:2)
04.11 00:46:23 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:46:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:46:23 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:46:23 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:46:23 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:46:23 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:46:23 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:46:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:46:23 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:46:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:46:23 NET: Client login (conid:55026332, id:107, name:uid107)
04.11 00:46:23 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:46:23 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:46:23 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:46:23 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:46:23 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:46:23 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:46:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:46:27 TIME: user.ping 0.1 ms
04.11 00:46:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:46:29 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:46:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:46:29 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:46:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:46:35 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:46:35 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:46:35 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:46:35 TIME: battle.find 0.33 ms
04.11 00:46:35 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:46:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:46:35 TIME: user.ping 0.06 ms
04.11 00:46:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:46:37 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:46:37 TIME: user.ping 0.07 ms
04.11 00:46:37 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:46:42 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:46:42 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:46:42 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 31, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:46:42 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 31, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:46:42 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:46:42 TIME: battle.find 37.94 ms
04.11 00:46:42 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:46:42 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 31, player => 2 }, type => battle.enemy }
04.11 00:46:42 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 31, player => 1 }, type => battle.enemy }
04.11 00:46:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:46:44 TIME: user.ping 0.1 ms
04.11 00:46:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:46:49 TIMER: Check auto-disconnect...
04.11 00:46:49 STATS: vdl.0 cache, locks:4
04.11 00:46:51 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 31 }
04.11 00:46:51 ->>-: vdl/cache.battle.infoRoom { roomId => 31, _type => vdl/cache.battle.infoRoom }
04.11 00:46:51 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:46:51 TIME: battle.sendtask 0.33 ms
04.11 00:46:51 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.task, dices => [4,5,0,4,2,1], errorCode => ok }
04.11 00:46:51 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:46:51 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [4,5,0,4,2,1], errorCode => ok }
04.11 00:46:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:46:57 TIME: user.ping 0.19 ms
04.11 00:46:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:47:02 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:47:02 TIME: user.ping 0.18 ms
04.11 00:47:02 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:47:09 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:47:09 TIME: user.ping 0.1 ms
04.11 00:47:09 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:47:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:47:21 TIME: user.ping 0.11 ms
04.11 00:47:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:47:26 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:47:26 TIME: user.ping 0.12 ms
04.11 00:47:26 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:47:43 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:47:43 TIME: user.ping 0.09 ms
04.11 00:47:43 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:47:49 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:47:49 TIME: user.ping 0.08 ms
04.11 00:47:49 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:47:49 TIMER: Check auto-disconnect...
04.11 00:47:49 STATS: vdl.0 cache, locks:4
04.11 00:47:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:47:55 TIME: user.ping 0.08 ms
04.11 00:47:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:48:07 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:48:07 TIME: user.ping 0.12 ms
04.11 00:48:07 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:48:12 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:48:12 TIME: user.ping 0.07 ms
04.11 00:48:12 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:48:36 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:48:36 TIME: user.ping 0.09 ms
04.11 00:48:36 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:48:49 TIMER: Check auto-disconnect...
04.11 00:48:49 STATS: vdl.0 cache, locks:4
04.11 00:48:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:48:50 TIME: user.ping 0.12 ms
04.11 00:48:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:48:59 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:48:59 TIME: user.ping 0.09 ms
04.11 00:48:59 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:49:23 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:49:23 TIME: user.ping 0.1 ms
04.11 00:49:23 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:49:46 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:49:46 TIME: user.ping 0.08 ms
04.11 00:49:46 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:49:49 TIMER: Check auto-disconnect...
04.11 00:49:49 STATS: vdl.0 cache, locks:4
04.11 00:50:10 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:50:10 TIME: user.ping 0.08 ms
04.11 00:50:10 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:50:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:50:32 TIME: user.ping 0.08 ms
04.11 00:50:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:50:33 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:50:33 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:50:33 TIME: user.ping 0.1 ms
04.11 00:50:43 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:50:43 TIME: user.ping 0.13 ms
04.11 00:50:43 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:50:49 TIMER: Check auto-disconnect...
04.11 00:50:49 STATS: vdl.0 cache, locks:4
04.11 00:50:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:50:55 TIME: user.ping 0.08 ms
04.11 00:50:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:50:57 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:50:57 TIME: user.ping 0.09 ms
04.11 00:50:57 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:50:57 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 31 }
04.11 00:50:57 ->>-: vdl/cache.battle.infoRoom { roomId => 31, _type => vdl/cache.battle.infoRoom }
04.11 00:50:57 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:50:57 STATS: vdl.0 cache connection, 128 calls, total 0.32259726524353 sec spent, avg 2.52 ms
04.11 00:50:57 TIME: battle.sendtask 1.48 ms
04.11 00:50:57 == NET: uid107 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,5,5,5,5,10,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [4,5,4,2,1], errorCode => cannotSwap }
04.11 00:51:21 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:51:21 TIME: user.ping 0.11 ms
04.11 00:51:21 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:51:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:51:44 TIME: user.ping 0.11 ms
04.11 00:51:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:51:49 TIMER: Check auto-disconnect...
04.11 00:51:49 STATS: vdl.0 cache, locks:4
04.11 00:51:55 NET: Client (name:uid107 conid:55026332 TCP) disconnected from vdl.0 (clients:1)
04.11 00:51:55 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:51:55 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:51:55 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 9 }, { id => 31 }}, errorCode => ok, _type => core/server.query }
04.11 00:51:55 ->>-: vdl/cache.battle.infoRoom { roomId => 31, _type => vdl/cache.battle.infoRoom }
04.11 00:51:55 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:51:55 ->>-: vdl/cache.battle.deleteRoom { roomId => 31, _type => vdl/cache.battle.deleteRoom }
04.11 00:51:55 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:51:55 ->>-: vdl/cache.battle.finishRoom { roomId => 31, _type => vdl/cache.battle.finishRoom }
04.11 00:51:55 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:51:55 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:51:55 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:51:55 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:51:55 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:51:55 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:51:55 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:51:55 == NET: uid116 ret: battle.leave { type => battle.leave }
04.11 00:52:02 NET: Client (name:uid116 conid:67547535 TCP) disconnected from vdl.0 (clients:0)
04.11 00:52:02 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:52:02 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:52:02 -<<-: core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 10 }, { id => 13 }, { id => 14 }, { id => 16 }}, errorCode => ok, _type => core/server.query }
04.11 00:52:02 STATS: vdl.0 cache connection, 136 calls, total 0.352633953094482 sec spent, avg 2.59 ms
04.11 00:52:02 ->>-: vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
04.11 00:52:02 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:52:02 ->>-: vdl/cache.battle.deleteRoom { roomId => 16, _type => vdl/cache.battle.deleteRoom }
04.11 00:52:03 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:52:03 ->>-: vdl/cache.battle.finishRoom { roomId => 16, _type => vdl/cache.battle.finishRoom }
04.11 00:52:03 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:52:03 ->>-: core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:52:03 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:52:03 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:52:03 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:52:03 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:52:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:52:03 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:52:03 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:52:08 NET: Client (conid:12026423) connected to vdl.0 (clients:1)
04.11 00:52:08 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:52:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:52:08 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:52:08 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:52:08 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:52:08 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:52:08 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:52:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:52:08 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:52:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:52:08 NET: Client login (conid:12026423, id:107, name:uid107)
04.11 00:52:08 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:52:08 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:52:08 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:52:08 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:52:10 NET: Client (name:uid107 conid:12026423 TCP) disconnected from vdl.0 (clients:0)
04.11 00:52:10 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:52:10 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:52:10 -<<-: core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 9 }}, errorCode => ok, _type => core/server.query }
04.11 00:52:10 ->>-: vdl/cache.battle.infoRoom { roomId => 9, _type => vdl/cache.battle.infoRoom }
04.11 00:52:10 -<<-: vdl/cache.battle.infoRoom { secondId => 115, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:52:10 ->>-: vdl/cache.battle.deleteRoom { roomId => 9, _type => vdl/cache.battle.deleteRoom }
04.11 00:52:10 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:52:10 ->>-: vdl/cache.battle.finishRoom { roomId => 9, _type => vdl/cache.battle.finishRoom }
04.11 00:52:10 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:52:10 ->>-: core/user.sendTo { id => 115, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:52:10 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:52:10 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:52:10 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:52:10 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:52:10 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:52:10 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:52:10 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:52:49 TIMER: Check auto-disconnect...
04.11 00:52:49 STATS: vdl.0 cache, locks:0
04.11 00:52:49 TIMER: Check auto-disconnect...
04.11 00:52:49 STATS: vdl.0 cache, locks:0
04.11 00:54:31 NET: Client (conid:58910762) connected to vdl.0 (clients:1)
04.11 00:54:34 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:54:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:54:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:54:34 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:54:34 STATS: vdl.0 cache connection, 157 calls, total 0.421481847763062 sec spent, avg 2.68 ms
04.11 00:54:34 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:54:34 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:54:34 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:54:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:54:34 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:54:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:54:34 NET: Client login (conid:58910762, id:116, name:uid116)
04.11 00:54:34 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:54:34 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:54:34 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:54:34 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:54:40 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:54:40 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:54:47 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:54:47 TIME: user.ping 0.18 ms
04.11 00:54:47 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:54:49 TIMER: Check auto-disconnect...
04.11 00:54:50 STATS: vdl.0 cache, locks:2
04.11 00:54:51 NET: Client (conid:28785814) connected to vdl.0 (clients:2)
04.11 00:54:51 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:54:51 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:54:51 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:54:51 TIME: battle.find 0.46 ms
04.11 00:54:51 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:54:52 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:54:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:54:52 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:54:52 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:54:52 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:54:52 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:54:52 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:54:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:54:52 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:54:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:54:52 NET: Client login (conid:28785814, id:107, name:uid107)
04.11 00:54:52 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:54:52 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:54:52 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:54:52 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:54:52 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:54:52 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:54:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:54:56 TIME: user.ping 0.14 ms
04.11 00:54:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:55:00 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:55:00 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:55:01 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:55:01 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:55:01 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 32, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:55:01 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 32, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:55:01 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:55:01 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:55:01 TIME: battle.find 25.98 ms
04.11 00:55:01 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 32, player => 1 }, type => battle.enemy }
04.11 00:55:01 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 32, player => 2 }, type => battle.enemy }
04.11 00:55:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:55:05 TIME: user.ping 0.08 ms
04.11 00:55:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:55:08 ++ NET: uid107 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 32 }
04.11 00:55:08 ->>-: vdl/cache.battle.infoRoom { roomId => 32, _type => vdl/cache.battle.infoRoom }
04.11 00:55:08 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:55:08 TIME: battle.sendtask 0.47 ms
04.11 00:55:08 == NET: uid107 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [1,0,5,0,1,3], errorCode => ok, _type => battle.task }
04.11 00:55:08 == NET: uid116 ret: battle.task { name => throw, type => battle.task, dices => [1,0,5,0,1,3], errorCode => ok }
04.11 00:55:08 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:55:14 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:55:14 TIME: user.ping 0.16 ms
04.11 00:55:14 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:55:16 ++ NET: uid107 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 32 }
04.11 00:55:16 ->>-: vdl/cache.battle.infoRoom { roomId => 32, _type => vdl/cache.battle.infoRoom }
04.11 00:55:16 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:55:16 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 32 }
04.11 00:55:16 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 00:55:16 TIME: battle.sendtask 2.53 ms
04.11 00:55:16 == NET: uid107 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
04.11 00:55:16 == NET: uid116 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [1,0,0,1,3], messageType => battle.sendtask, to => [8,3], battleId => 32 }
04.11 00:55:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:55:18 TIME: user.ping 0.18 ms
04.11 00:55:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:55:30 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:55:30 TIME: user.ping 0.14 ms
04.11 00:55:30 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:55:38 ++ NET: uid107 req: battle.sendtask { dice => 3, from => [7,2], name => swap, side => 2, messageType => battle.sendtask, to => [8,2], battleId => 32 }
04.11 00:55:38 ->>-: vdl/cache.battle.infoRoom { roomId => 32, _type => vdl/cache.battle.infoRoom }
04.11 00:55:38 -<<-: vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:55:38 STATS: vdl.0 cache connection, 174 calls, total 0.462964773178101 sec spent, avg 2.66 ms
04.11 00:55:38 TIME: battle.sendtask 2.41 ms
04.11 00:55:38 == NET: uid107 ret: battle.sendtask { pole => [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,10,5,5,5,5,15,0,0],[0,0,5,10,5,5,15,5,0,0],[0,0,5,5,10,15,5,5,0,0],[0,0,5,5,15,10,5,5,0,0],[0,0,5,15,5,5,10,5,0,0],[0,0,15,0,5,5,5,10,0,0],[0,0,0,5,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]], type => battle.sendtask, dices => [1,0,0,1], errorCode => cannotSwap }
04.11 00:55:39 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:55:39 TIME: user.ping 0.18 ms
04.11 00:55:39 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:55:43 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:55:43 TIME: user.ping 0.16 ms
04.11 00:55:43 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:55:49 TIMER: Check auto-disconnect...
04.11 00:55:50 STATS: vdl.0 cache, locks:4
04.11 00:55:54 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:55:54 TIME: user.ping 0.15 ms
04.11 00:55:54 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:56:04 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:56:04 TIME: user.ping 0.13 ms
04.11 00:56:04 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:56:06 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:56:06 TIME: user.ping 0.16 ms
04.11 00:56:06 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:56:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:56:18 TIME: user.ping 0.17 ms
04.11 00:56:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:56:28 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:56:28 TIME: user.ping 0.18 ms
04.11 00:56:28 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:56:29 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:56:29 TIME: user.ping 0.19 ms
04.11 00:56:29 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:56:41 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:56:41 TIME: user.ping 0.15 ms
04.11 00:56:41 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:56:49 TIMER: Check auto-disconnect...
04.11 00:56:50 STATS: vdl.0 cache, locks:4
04.11 00:56:52 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:56:52 TIME: user.ping 0.15 ms
04.11 00:56:52 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:56:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:56:53 TIME: user.ping 0.15 ms
04.11 00:56:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:57:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:57:04 TIME: user.ping 0.16 ms
04.11 00:57:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:57:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:57:16 TIME: user.ping 0.19 ms
04.11 00:57:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:57:17 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:57:17 TIME: user.ping 0.17 ms
04.11 00:57:17 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:57:46 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 00:57:46 -<<-: server.login ok
04.11 00:57:46 DB: SELECT * FROM LocalizationStrings
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 TIMER: Starting timer...
04.11 00:57:46 DB: SELECT * FROM GameVars
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 00:57:46 TIMER: Timer running...
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
04.11 00:57:46 -<<-: core/quest.getDaily ok
04.11 00:57:46 DB: SELECT * FROM UserAttributeTypes
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM UserVariableTypes
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 00:57:46 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM ItemGroups
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM Bundles ORDER BY ID
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 SHOP: loading items...
04.11 00:57:46 ->>-: core/shop.getList { _type => core/shop.getList }
04.11 00:57:46 -<<-: core/shop.getList ok
04.11 00:57:46 SHOP: 0 items loaded (0 sec)
04.11 00:57:46 DB: SELECT * FROM EffectAttributeTypes
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM Effects
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:57:46 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:57:46 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:57:46 DB: SELECT * FROM Badges
04.11 00:57:46 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 00:57:46 -<<-: core/server.query ok
04.11 00:58:02 NET: Client (conid:53516228) connected to vdl.0 (clients:1)
04.11 00:58:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:58:05 TRACE: User not logon yet.
04.11 00:58:06 NET: Client (conid:77875093) connected to vdl.0 (clients:2)
04.11 00:58:12 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:58:12 TRACE: User not logon yet.
04.11 00:58:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
04.11 00:58:17 TRACE: User not logon yet.
04.11 00:58:20 NET: Client (name:null conid:53516228 TCP) disconnected from vdl.0 (clients:1)
04.11 00:58:25 NET: Client (name:null conid:77875093 TCP) disconnected from vdl.0 (clients:0)
04.11 00:58:38 NET: Client (conid:24505134) connected to vdl.0 (clients:1)
04.11 00:58:38 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
04.11 00:58:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:58:38 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:58:38 -<<-: core/server.query ok
04.11 00:58:38 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:58:38 -<<-: core/user.isOnlineID ok
04.11 00:58:38 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:58:38 -<<-: core/cache.get ok
04.11 00:58:38 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:58:38 -<<-: core/cache.get ok
04.11 00:58:38 NET: Client login (conid:24505134, id:107, name:uid107)
04.11 00:58:38 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:58:38 -<<-: core/user.loginPost null
04.11 00:58:38 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
04.11 00:58:38 == NET: uid107 ret: user.join { name => uid107, type => user.join }
04.11 00:58:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:58:42 TIME: user.ping 0.14 ms
04.11 00:58:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:58:46 TIMER: Check auto-disconnect...
04.11 00:58:46 STATS: vdl.0 cache, locks:2
04.11 00:58:46 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:58:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:58:46 STATS: vdl.0 cache connection, 26 calls, total 0.0700485706329346 sec spent, avg 2.69 ms
04.11 00:58:47 NET: Client (conid:44728514) connected to vdl.0 (clients:2)
04.11 00:58:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:58:50 TIME: user.ping 0.12 ms
04.11 00:58:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:58:51 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE2 }
04.11 00:58:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:58:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:58:51 -<<-: core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:58:51 ->>-: core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:58:51 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:58:51 ->>-: core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:58:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:58:51 ->>-: core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:58:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:58:51 NET: Client login (conid:44728514, id:116, name:uid116)
04.11 00:58:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:58:51 -<<-: core/user.loginPost { _type => core/user.loginPost }
04.11 00:58:51 == NET: uid107 ret: user.join { name => uid116, type => user.join }
04.11 00:58:51 == NET: uid116 ret: user.login { name => uid116, type => user.login, errorCode => ok, id => 116 }
04.11 00:58:51 == NET: uid116 ret: user.join { name => uid107, type => user.join }
04.11 00:58:51 == NET: uid116 ret: user.join { name => uid116, type => user.join }
04.11 00:58:58 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:58:58 TIME: user.ping 0.15 ms
04.11 00:58:58 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:01 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:59:01 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:59:04 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:04 TIME: user.ping 0.18 ms
04.11 00:59:04 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:05 TIME: user.ping 0.13 ms
04.11 00:59:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:13 TIME: user.ping 0.15 ms
04.11 00:59:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:21 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:21 TIME: user.ping 0.16 ms
04.11 00:59:21 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:24 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:24 TIME: user.ping 0.13 ms
04.11 00:59:24 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:28 TIME: user.ping 0.45 ms
04.11 00:59:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:36 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:36 TIME: user.ping 0.16 ms
04.11 00:59:36 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:44 TIME: user.ping 0.19 ms
04.11 00:59:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:44 ++ NET: uid116 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:44 TIME: user.ping 0.18 ms
04.11 00:59:44 == NET: uid116 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:46 TIMER: Check auto-disconnect...
04.11 00:59:46 STATS: vdl.0 cache, locks:4
04.11 00:59:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
04.11 00:59:52 TIME: user.ping 0.13 ms
04.11 00:59:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
04.11 00:59:52 ++ NET: uid116 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:59:52 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:59:52 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:59:52 STATS: vdl.0 cache connection, 33 calls, total 0.0815296173095703 sec spent, avg 2.47 ms
04.11 00:59:52 TIME: battle.find 0.64 ms
04.11 00:59:52 == NET: uid116 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:59:56 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
04.11 00:59:56 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:59:56 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 33, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:59:56 -<<-: battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 33, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:59:56 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:59:56 TIME: battle.find 34.13 ms
04.11 00:59:56 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
04.11 00:59:56 == NET: uid116 ret: battle.enemy { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 33, player => 2 }, type => battle.enemy }
04.11 00:59:56 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 33, player => 1 }, type => battle.enemy }
