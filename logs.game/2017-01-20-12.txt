20.01 12:33:00 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
20.01 12:33:00 -<<-: server.login ok
20.01 12:33:00 DB: SELECT * FROM LocalizationStrings
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 TIMER: Starting timer...
20.01 12:33:00 TIMER: Timer running...
20.01 12:33:00 DB: SELECT * FROM GameVars
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
20.01 12:33:00 -<<-: core/quest.getDaily ok
20.01 12:33:00 DB: SELECT * FROM UserAttributeTypes
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM UserVariableTypes
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.01 12:33:00 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM ItemGroups
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM Bundles ORDER BY ID
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM BundleItems ORDER BY ID
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 SHOP: loading items...
20.01 12:33:00 ->>-: core/shop.getList { _type => core/shop.getList }
20.01 12:33:00 -<<-: core/shop.getList ok
20.01 12:33:00 SHOP: 0 items loaded (0 sec)
20.01 12:33:00 DB: SELECT * FROM EffectAttributeTypes
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT * FROM Effects
20.01 12:33:00 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.01 12:33:00 -<<-: core/server.query ok
20.01 12:33:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_par20.01 12:37:09 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
20.01 12:37:09 -<<-: server.login ok
20.01 12:37:09 DB: SELECT * FROM LocalizationStrings
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 TIMER: Starting timer...
20.01 12:37:09 TIMER: Timer running...
20.01 12:37:09 DB: SELECT * FROM GameVars
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
20.01 12:37:09 -<<-: core/quest.getDaily ok
20.01 12:37:09 DB: SELECT * FROM UserAttributeTypes
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM UserVariableTypes
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.01 12:37:09 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM ItemGroups
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM Bundles ORDER BY ID
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM BundleItems ORDER BY ID
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 SHOP: loading items...
20.01 12:37:09 ->>-: core/shop.getList { _type => core/shop.getList }
20.01 12:37:09 -<<-: core/shop.getList ok
20.01 12:37:09 SHOP: 0 items loaded (0 sec)
20.01 12:37:09 DB: SELECT * FROM EffectAttributeTypes
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM Effects
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
20.01 12:37:09 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
20.01 12:37:09 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:09 DB: SELECT * FROM Badges
20.01 12:37:09 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
20.01 12:37:09 -<<-: core/server.query ok
20.01 12:37:23 NET: Client (conid:21365689) connected to vdl.0 (clients:1)
20.01 12:37:25 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:37:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:37:25 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:37:25 -<<-: core/server.query ok
20.01 12:37:25 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:37:25 -<<-: core/user.isOnlineID ok
20.01 12:37:25 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 12:37:25 -<<-: core/cache.get ok
20.01 12:37:25 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 12:37:25 -<<-: core/cache.get ok
20.01 12:37:25 NET: Client login (conid:21365689, id:76, name:Aimer)
20.01 12:37:25 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:37:25 -<<-: core/user.loginPost null
20.01 12:37:25 DB: SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp
20.01 12:37:25 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp, _type => core/server.query }
20.01 12:37:25 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:37:25 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp)
20.01 12:37:25 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.01 12:37:25 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.01 12:37:26 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp), _type => core/server.pending }} }
20.01 12:37:26 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
20.01 12:37:26 ++ NET: Aimer req: user.data { messageType => user.data }
20.01 12:37:26 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
20.01 12:37:26 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:37:26 TIME: user.data 1.04 ms
20.01 12:37:26 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:37:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:37:30 TIME: user.ping 0.35 ms
20.01 12:37:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:37:34 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1484905045, lastLoginDate => 20, lastLoadDate => 121 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.01 12:37:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:37:43 NET: Client (conid:79017192) connected to vdl.0 (clients:2)
20.01 12:37:43 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:37:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:37:43 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:37:43 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:37:43 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:37:43 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:37:43 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 76 }
20.01 12:37:43 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
20.01 12:37:43 NET: Client (name:Aimer conid:21365689 TCP) disconnected from vdl.0 (clients:1)
20.01 12:37:43 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.01 12:37:43 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.01 12:37:43 -<<-: core/server.query { list => {{ id => 33 }}, errorCode => ok, _type => core/server.query }
20.01 12:37:43 ->>-: vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
20.01 12:37:43 -<<-: vdl/cache.battle.infoRoom { secondId => 162, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 76 }
20.01 12:37:43 ->>-: vdl/cache.battle.deleteRoom { roomId => 33, _type => vdl/cache.battle.deleteRoom }
20.01 12:37:43 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
20.01 12:37:43 ->>-: vdl/cache.battle.finishRoom { roomId => 33, _type => vdl/cache.battle.finishRoom }
20.01 12:37:43 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
20.01 12:37:43 ->>-: core/user.sendTo { id => 162, _type => core/user.sendTo, msg => { _type => battle.leave } }
20.01 12:37:43 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
20.01 12:37:43 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.01 12:37:43 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:37:43 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.01 12:37:43 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:37:43 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.01 12:37:43 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:37:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
20.01 12:37:48 TRACE: User not logon yet.
20.01 12:38:03 NET: Client (name:null conid:79017192 TCP) disconnected from vdl.0 (clients:0)
20.01 12:38:03 NET: Client (conid:56516435) connected to vdl.0 (clients:1)
20.01 12:38:03 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:38:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:38:03 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:38:03 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:38:03 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:38:03 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:38:03 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 12:38:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905045, lastLoginDate => 20, money => 3, lastLoadDate => 121 }, effects => { list => [] } }}, version => 0, id => 76 } }
20.01 12:38:03 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 12:38:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
20.01 12:38:03 NET: Client login (conid:56516435, id:76, name:Aimer)
20.01 12:38:03 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:38:03 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:38:03 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.01 12:38:03 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.01 12:38:03 ++ NET: Aimer req: user.data { messageType => user.data }
20.01 12:38:03 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
20.01 12:38:03 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:38:03 TIME: user.data 0.22 ms
20.01 12:38:03 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:38:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:04 TIME: user.ping 0.14 ms
20.01 12:38:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:08 TIME: user.ping 0.22 ms
20.01 12:38:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:09 TIMER: Check auto-disconnect...
20.01 12:38:09 STATS: vdl.0 cache, locks:2
20.01 12:38:09 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.01 12:38:09 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:38:09 STATS: vdl.0 cache connection, 46 calls, total 0.0528542995452881 sec spent, avg 1.15 ms
20.01 12:38:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:13 TIME: user.ping 0.24 ms
20.01 12:38:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:17 TIME: user.ping 0.26 ms
20.01 12:38:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:18 NET: Client (conid:9130687) connected to vdl.0 (clients:2)
20.01 12:38:18 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:38:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:38:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:38:18 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:38:18 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:38:18 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:38:18 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 76 }
20.01 12:38:18 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
20.01 12:38:18 NET: Client (name:Aimer conid:56516435 TCP) disconnected from vdl.0 (clients:1)
20.01 12:38:18 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.01 12:38:18 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.01 12:38:18 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:38:18 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:38:18 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.01 12:38:18 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:38:18 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
20.01 12:38:18 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.01 12:38:18 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:38:18 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.01 12:38:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:38:18 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.01 12:38:18 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:38:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:20 TRACE: User not logon yet.
20.01 12:38:35 NET: Client (conid:50632351) connected to vdl.0 (clients:2)
20.01 12:38:35 NET: Client (name:null conid:9130687 TCP) disconnected from vdl.0 (clients:1)
20.01 12:38:35 NET: Client (conid:95904020) connected to vdl.0 (clients:2)
20.01 12:38:35 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:38:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:38:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:38:35 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:38:35 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:38:35 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:38:35 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 12:38:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905045, lastLoginDate => 20, money => 3, lastLoadDate => 121 }, effects => { list => [] } }}, version => 0, id => 76 } }
20.01 12:38:35 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 12:38:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
20.01 12:38:35 NET: Client login (conid:50632351, id:76, name:Aimer)
20.01 12:38:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:38:35 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:38:35 == NET: null ret: user.join { name => Aimer, type => user.join }
20.01 12:38:35 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.01 12:38:35 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.01 12:38:35 == NET: Aimer ret: user.join { name => null, type => user.join }
20.01 12:38:35 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:38:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:38:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:38:35 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:38:35 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:38:35 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:38:35 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 76 }
20.01 12:38:35 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
20.01 12:38:35 NET: Client (name:Aimer conid:50632351 TCP) disconnected from vdl.0 (clients:1)
20.01 12:38:35 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.01 12:38:35 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.01 12:38:35 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:38:35 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:38:35 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.01 12:38:35 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:38:35 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
20.01 12:38:35 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.01 12:38:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:38:35 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.01 12:38:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:38:35 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.01 12:38:35 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:38:40 NET: Client (conid:34373958) connected to vdl.0 (clients:2)
20.01 12:38:40 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:38:40 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:38:40 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:38:40 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:38:40 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:38:40 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:38:40 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 12:38:40 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905045, lastLoginDate => 20, money => 3, lastLoadDate => 121 }, effects => { list => [] } }}, version => 1, id => 76 } }
20.01 12:38:40 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 12:38:40 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 76 } }
20.01 12:38:40 NET: Client login (conid:34373958, id:76, name:Aimer)
20.01 12:38:40 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:38:40 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:38:40 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.01 12:38:40 == NET: null ret: user.join { name => Aimer, type => user.join }
20.01 12:38:40 == NET: Aimer ret: user.join { name => null, type => user.join }
20.01 12:38:40 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.01 12:38:40 ++ NET: Aimer req: user.data { messageType => user.data }
20.01 12:38:40 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
20.01 12:38:40 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:38:40 TIME: user.data 0.22 ms
20.01 12:38:40 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:38:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:41 TIME: user.ping 0.11 ms
20.01 12:38:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:42 TRACE: User not logon yet.
20.01 12:38:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:44 TIME: user.ping 0.18 ms
20.01 12:38:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:47 TIME: user.ping 0.21 ms
20.01 12:38:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:49 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.01 12:38:49 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:38:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:50 TIME: user.ping 0.17 ms
20.01 12:38:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:53 TIME: user.ping 0.15 ms
20.01 12:38:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:38:56 TIME: user.ping 0.19 ms
20.01 12:38:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:38:57 NET: Client (name:null conid:95904020 TCP) disconnected from vdl.0 (clients:1)
20.01 12:38:57 NET: Client (conid:56354115) connected to vdl.0 (clients:2)
20.01 12:38:57 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:38:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:38:57 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:38:57 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:38:57 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:38:57 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:38:57 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 76 }
20.01 12:38:57 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
20.01 12:38:57 NET: Client (name:Aimer conid:34373958 TCP) disconnected from vdl.0 (clients:1)
20.01 12:38:57 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.01 12:38:57 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.01 12:38:57 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:38:57 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:38:57 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.01 12:38:57 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:38:57 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
20.01 12:38:57 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.01 12:38:57 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.01 12:38:57 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.01 12:38:57 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:38:57 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.01 12:38:57 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:39:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:01 TRACE: User not logon yet.
20.01 12:39:09 TIMER: Check auto-disconnect...
20.01 12:39:09 STATS: vdl.0 cache, locks:0
20.01 12:39:14 NET: Client (conid:50400600) connected to vdl.0 (clients:2)
20.01 12:39:14 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:39:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:39:14 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:39:14 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:39:14 STATS: vdl.0 cache connection, 80 calls, total 0.0830581188201904 sec spent, avg 1.04 ms
20.01 12:39:14 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:39:14 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:39:14 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 12:39:14 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905045, lastLoginDate => 20, money => 3, lastLoadDate => 121 }, effects => { list => [] } }}, version => 0, id => 76 } }
20.01 12:39:14 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 12:39:14 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
20.01 12:39:14 NET: Client login (conid:50400600, id:76, name:Aimer)
20.01 12:39:14 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:39:14 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:39:14 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.01 12:39:14 == NET: null ret: user.join { name => Aimer, type => user.join }
20.01 12:39:14 == NET: Aimer ret: user.join { name => null, type => user.join }
20.01 12:39:14 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.01 12:39:14 ++ NET: Aimer req: user.data { messageType => user.data }
20.01 12:39:14 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
20.01 12:39:14 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:39:14 TIME: user.data 0.19 ms
20.01 12:39:14 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:39:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:16 TIME: user.ping 0.14 ms
20.01 12:39:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:19 TIME: user.ping 0.19 ms
20.01 12:39:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.01 12:39:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:39:19 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:19 TRACE: User not logon yet.
20.01 12:39:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:22 TIME: user.ping 0.16 ms
20.01 12:39:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:25 TIME: user.ping 0.27 ms
20.01 12:39:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:28 TIME: user.ping 0.2 ms
20.01 12:39:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:30 TIME: user.ping 0.34 ms
20.01 12:39:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:33 TIME: user.ping 0.18 ms
20.01 12:39:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:34 NET: Client (name:null conid:56354115 TCP) disconnected from vdl.0 (clients:1)
20.01 12:39:34 NET: Client (conid:33429912) connected to vdl.0 (clients:2)
20.01 12:39:34 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:39:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:39:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:39:34 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:39:34 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:39:34 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:39:34 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 76 }
20.01 12:39:34 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
20.01 12:39:34 NET: Client (name:Aimer conid:50400600 TCP) disconnected from vdl.0 (clients:1)
20.01 12:39:34 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.01 12:39:34 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.01 12:39:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:39:34 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:39:34 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.01 12:39:34 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:39:34 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
20.01 12:39:34 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.01 12:39:34 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:39:34 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.01 12:39:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:39:34 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.01 12:39:34 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:39:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:39 TRACE: User not logon yet.
20.01 12:39:51 NET: Client (conid:50863142) connected to vdl.0 (clients:2)
20.01 12:39:51 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:39:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:39:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:39:51 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.01 12:39:51 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:39:51 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:39:51 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 12:39:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905045, lastLoginDate => 20, money => 3, lastLoadDate => 121 }, effects => { list => [] } }}, version => 0, id => 76 } }
20.01 12:39:51 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 12:39:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
20.01 12:39:51 NET: Client login (conid:50863142, id:76, name:Aimer)
20.01 12:39:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:39:51 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:39:51 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.01 12:39:51 == NET: null ret: user.join { name => Aimer, type => user.join }
20.01 12:39:51 == NET: Aimer ret: user.join { name => null, type => user.join }
20.01 12:39:51 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.01 12:39:52 ++ NET: Aimer req: user.data { messageType => user.data }
20.01 12:39:52 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
20.01 12:39:52 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:39:52 TIME: user.data 0.33 ms
20.01 12:39:52 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:39:53 NET: Client (name:null conid:33429912 TCP) disconnected from vdl.0 (clients:1)
20.01 12:39:53 NET: Client (conid:5540917) connected to vdl.0 (clients:2)
20.01 12:39:54 ++ NET: null req: user.register { city => , password => kO2YJdf, name => Aimer2, year => , email => , messageType => user.register }
20.01 12:39:54 DB: SELECT ID FROM Users WHERE Name = E'Aimer2'
20.01 12:39:54 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'Aimer2', _type => core/server.query }
20.01 12:39:54 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:39:54 DB: SELECT nextval('Users_id_seq') AS id
20.01 12:39:54 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
20.01 12:39:54 -<<-: core/server.query { list => {{ id => 163 }}, errorCode => ok, _type => core/server.query }
20.01 12:39:54 ->>-: core/user.register { password => kO2YJdf, name => Aimer2, fullParams => { city => , password => kO2YJdf, name => Aimer2, year => , networkid => , networktype => , email => , messageType => user.register, id => 163 }, networkid => , connectionID => 5540917, networktype => , email => , id => 163, _type => core/user.register }
20.01 12:39:54 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
20.01 12:39:54 -<<-: core/user.registerResponse { password => kO2YJdf, name => Aimer2, _isNotify => true, fullParams => { city => , password => kO2YJdf, name => Aimer2, year => , networkid => , networktype => , email => , messageType => user.register, id => 163 }, networkid => , connectionID => 5540917, networktype => , email => , id => 163, _type => core/user.registerResponse }
20.01 12:39:54 == NET: null ret: user.register { type => user.register, errorCode => ok }
20.01 12:39:54 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer2, messageType => user.login }
20.01 12:39:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf'
20.01 12:39:54 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:39:54 -<<-: core/server.query { list => {{ name => Aimer2, networkid => , isbanned => false, id => 163 }}, errorCode => ok, _type => core/server.query }
20.01 12:39:54 ->>-: core/user.isOnlineID { id => 163, _type => core/user.isOnlineID }
20.01 12:39:54 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:39:54 ->>-: core/cache.get { type => user, v => -1, id => 163, _type => core/cache.get }
20.01 12:39:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer2, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2017-01-20 12:39:54.038596+03, language =>   , networkid => , params => { info => { city => , year => , email =>  }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 163 } }
20.01 12:39:54 ->>-: core/cache.get { type => questdata, v => -1, id => 163, _type => core/cache.get }
20.01 12:39:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 163 } }
20.01 12:39:54 NET: Client login (conid:5540917, id:163, name:Aimer2)
20.01 12:39:54 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 163, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:39:54 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:39:54 DB: SELECT ID FROM TempUserLogins WHERE UserID = 163 AND Date = 'today'::timestamp
20.01 12:39:54 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 163 AND Date = 'today'::timestamp, _type => core/server.query }
20.01 12:39:54 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:39:54 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (163, 'today'::timestamp)
20.01 12:39:54 == NET: Aimer2 ret: user.login { name => Aimer2, type => user.login, errorCode => ok, id => 163 }
20.01 12:39:54 == NET: Aimer2 ret: user.join { name => Aimer, type => user.join }
20.01 12:39:54 == NET: Aimer2 ret: user.join { name => Aimer2, type => user.join }
20.01 12:39:54 == NET: Aimer ret: user.join { name => Aimer2, type => user.join }
20.01 12:39:54 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (163, 'today'::timestamp), _type => core/server.pending }} }
20.01 12:39:54 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
20.01 12:39:54 ++ NET: Aimer2 req: user.data { messageType => user.data }
20.01 12:39:54 ->>-: vdl/cache.user.getData { userId => 163, _type => vdl/cache.user.getData, money => 0 }
20.01 12:39:54 -<<-: vdl/cache.user.getData { info => { city => , year => , email =>  }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 12:39:54 TIME: user.data 0.2 ms
20.01 12:39:54 == NET: Aimer2 ret: user.data { info => { city => , year => , email =>  }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 12:39:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:54 TIME: user.ping 0.08 ms
20.01 12:39:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:57 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:57 TIME: user.ping 0.21 ms
20.01 12:39:57 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:58 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:58 TIME: user.ping 0.18 ms
20.01 12:39:58 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:39:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.01 12:39:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:39:59 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1484905194, lastLoginDate => 20, lastLoadDate => 121 } }}, type => user, unlock => false, id => 163, _type => core/cache.update }
20.01 12:39:59 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:39:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:39:59 TIME: user.ping 0.32 ms
20.01 12:39:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:02 TIME: user.ping 0.28 ms
20.01 12:40:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:05 TIME: user.ping 0.26 ms
20.01 12:40:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:09 TIME: user.ping 0.2 ms
20.01 12:40:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:09 TIMER: Check auto-disconnect...
20.01 12:40:09 STATS: vdl.0 cache, locks:4
20.01 12:40:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:12 TIME: user.ping 0.23 ms
20.01 12:40:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:14 ++ NET: Aimer req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
20.01 12:40:14 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 76 }, _type => vdl/cache.battle.findRandom }
20.01 12:40:14 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
20.01 12:40:14 STATS: vdl.0 cache connection, 113 calls, total 0.11034893989563 sec spent, avg 0.98 ms
20.01 12:40:14 TIME: battle.find 0.5 ms
20.01 12:40:14 == NET: Aimer ret: battle.find { type => battle.find, errorCode => ok }
20.01 12:40:15 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:15 TIME: user.ping 0.22 ms
20.01 12:40:15 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:17 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:17 TIME: user.ping 0.31 ms
20.01 12:40:17 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:19 TIME: user.ping 0.17 ms
20.01 12:40:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:19 ++ NET: Aimer2 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
20.01 12:40:19 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 163 }, _type => vdl/cache.battle.findRandom }
20.01 12:40:19 -<<-: battle.enemyEvent { data => { name => Aimer2, enemy.id => 76, enemy.name => Aimer, id => 163, enemy.num => 2, battleId => 37, player => 1 }, _isNotify => true, id => 163, _type => battle.enemyEvent }
20.01 12:40:19 -<<-: battle.enemyEvent { data => { name => Aimer, enemy.id => 163, enemy.name => Aimer2, id => 76, enemy.num => 1, battleId => 37, player => 2 }, _isNotify => true, id => 76, _type => battle.enemyEvent }
20.01 12:40:19 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
20.01 12:40:19 TIME: battle.find 3.53 ms
20.01 12:40:19 == NET: Aimer2 ret: battle.find { type => battle.find, errorCode => ok }
20.01 12:40:19 == NET: Aimer2 ret: battle.enemy { data => { name => Aimer2, enemy.id => 76, enemy.name => Aimer, id => 163, enemy.num => 2, battleId => 37, player => 1 }, type => battle.enemy }
20.01 12:40:19 == NET: Aimer ret: battle.enemy { data => { name => Aimer, enemy.id => 163, enemy.name => Aimer2, id => 76, enemy.num => 1, battleId => 37, player => 2 }, type => battle.enemy }
20.01 12:40:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:23 TIME: user.ping 0.2 ms
20.01 12:40:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:25 ++ NET: Aimer2 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 37 }
20.01 12:40:25 ->>-: vdl/cache.battle.infoRoom { roomId => 37, _type => vdl/cache.battle.infoRoom }
20.01 12:40:25 -<<-: vdl/cache.battle.infoRoom { secondId => 76, firstId => 163, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 12:40:25 TIME: battle.sendtask 0.87 ms
20.01 12:40:25 == NET: Aimer2 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [1,2,1,3,5,4], errorCode => ok, _type => battle.task }
20.01 12:40:25 == NET: Aimer ret: battle.task { name => throw, type => battle.task, dices => [1,2,1,3,5,4], errorCode => ok }
20.01 12:40:25 == NET: Aimer2 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
20.01 12:40:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:27 TIME: user.ping 0.22 ms
20.01 12:40:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:31 TIME: user.ping 0.21 ms
20.01 12:40:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:34 TIME: user.ping 0.18 ms
20.01 12:40:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:37 TIME: user.ping 0.21 ms
20.01 12:40:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:41 TIME: user.ping 0.27 ms
20.01 12:40:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:42 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:42 TIME: user.ping 0.25 ms
20.01 12:40:42 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:44 TIME: user.ping 0.32 ms
20.01 12:40:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:47 TIME: user.ping 0.13 ms
20.01 12:40:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:50 TIME: user.ping 0.22 ms
20.01 12:40:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:40:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:40:56 TIME: user.ping 0.32 ms
20.01 12:40:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:01 TIME: user.ping 0.18 ms
20.01 12:41:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:04 TIME: user.ping 0.07 ms
20.01 12:41:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:07 TIME: user.ping 0.18 ms
20.01 12:41:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:09 TIMER: Check auto-disconnect...
20.01 12:41:09 STATS: vdl.0 cache, locks:4
20.01 12:41:09 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:09 TIME: user.ping 0.14 ms
20.01 12:41:09 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:10 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:10 TIME: user.ping 0.12 ms
20.01 12:41:10 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:13 TIME: user.ping 0.27 ms
20.01 12:41:22 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
20.01 12:41:22 -<<-: server.login ok
20.01 12:41:22 DB: SELECT * FROM LocalizationStrings
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 TIMER: Starting timer...
20.01 12:41:22 TIMER: Timer running...
20.01 12:41:22 DB: SELECT * FROM GameVars
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
20.01 12:41:22 -<<-: core/quest.getDaily ok
20.01 12:41:22 DB: SELECT * FROM UserAttributeTypes
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM UserVariableTypes
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.01 12:41:22 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM ItemGroups
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM Bundles ORDER BY ID
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM BundleItems ORDER BY ID
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 SHOP: loading items...
20.01 12:41:22 ->>-: core/shop.getList { _type => core/shop.getList }
20.01 12:41:22 -<<-: core/shop.getList ok
20.01 12:41:22 SHOP: 0 items loaded (0 sec)
20.01 12:41:22 DB: SELECT * FROM EffectAttributeTypes
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM Effects
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
20.01 12:41:22 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
20.01 12:41:22 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:22 DB: SELECT * FROM Badges
20.01 12:41:22 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
20.01 12:41:22 -<<-: core/server.query ok
20.01 12:41:35 NET: Client (conid:75423503) connected to vdl.0 (clients:1)
20.01 12:41:35 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:41:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:41:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:41:35 -<<-: core/server.query ok
20.01 12:41:35 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:41:35 -<<-: core/user.isOnlineID ok
20.01 12:41:35 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 12:41:35 -<<-: core/cache.get ok
20.01 12:41:35 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 12:41:35 -<<-: core/cache.get ok
20.01 12:41:35 NET: Client login (conid:75423503, id:76, name:Aimer)
20.01 12:41:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:41:35 -<<-: core/user.loginPost null
20.01 12:41:35 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.01 12:41:35 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.01 12:41:35 ++ NET: Aimer req: user.data { messageType => user.data }
20.01 12:41:35 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
20.01 12:41:35 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:41:35 TIME: user.data 0.24 ms
20.01 12:41:35 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:41:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:37 TIME: user.ping 0.18 ms
20.01 12:41:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:40 TIME: user.ping 0.21 ms
20.01 12:41:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:42 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.01 12:41:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:41:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:48 TIME: user.ping 0.21 ms
20.01 12:41:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:52 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:52 TIME: user.ping 0.17 ms
20.01 12:41:52 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:55 TIME: user.ping 0.24 ms
20.01 12:41:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:41:56 NET: Client (conid:36041054) connected to vdl.0 (clients:2)
20.01 12:41:56 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer2, messageType => user.login }
20.01 12:41:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf'
20.01 12:41:56 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:41:56 -<<-: core/server.query { list => {{ name => Aimer2, networkid => , isbanned => false, id => 163 }}, errorCode => ok, _type => core/server.query }
20.01 12:41:56 ->>-: core/user.isOnlineID { id => 163, _type => core/user.isOnlineID }
20.01 12:41:56 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:41:56 ->>-: core/cache.get { type => user, v => -1, id => 163, _type => core/cache.get }
20.01 12:41:56 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer2, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2017-01-20 12:39:54.038596+03, language => en, networkid => , params => { info => { city => , year => , email =>  }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905194, lastLoginDate => 20, lastLoadDate => 121 }, effects => { list => [] } }}, version => 0, id => 163 } }
20.01 12:41:56 ->>-: core/cache.get { type => questdata, v => -1, id => 163, _type => core/cache.get }
20.01 12:41:56 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 163 } }
20.01 12:41:56 NET: Client login (conid:36041054, id:163, name:Aimer2)
20.01 12:41:56 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 163, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:41:56 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:41:56 == NET: Aimer ret: user.join { name => Aimer2, type => user.join }
20.01 12:41:56 == NET: Aimer2 ret: user.login { name => Aimer2, type => user.login, errorCode => ok, id => 163 }
20.01 12:41:56 == NET: Aimer2 ret: user.join { name => Aimer, type => user.join }
20.01 12:41:56 == NET: Aimer2 ret: user.join { name => Aimer2, type => user.join }
20.01 12:41:56 ++ NET: Aimer2 req: user.data { messageType => user.data }
20.01 12:41:56 ->>-: vdl/cache.user.getData { userId => 163, _type => vdl/cache.user.getData, money => 0 }
20.01 12:41:56 -<<-: vdl/cache.user.getData { info => { city => , year => , email =>  }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 12:41:56 TIME: user.data 0.25 ms
20.01 12:41:56 == NET: Aimer2 ret: user.data { info => { city => , year => , email =>  }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 12:41:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:41:59 TIME: user.ping 0.15 ms
20.01 12:41:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:02 TIME: user.ping 0.17 ms
20.01 12:42:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:02 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 163, _type => core/cache.update }
20.01 12:42:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:42:10 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:10 TIME: user.ping 0.17 ms
20.01 12:42:10 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:12 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:12 TIME: user.ping 0.08 ms
20.01 12:42:12 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:13 TIME: user.ping 0.21 ms
20.01 12:42:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:16 TIME: user.ping 0.18 ms
20.01 12:42:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:20 TIME: user.ping 0.23 ms
20.01 12:42:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:22 TIMER: Check auto-disconnect...
20.01 12:42:22 STATS: vdl.0 cache, locks:4
20.01 12:42:23 ++ NET: Aimer2 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 37 }
20.01 12:42:23 ->>-: vdl/cache.battle.infoRoom { roomId => 37, _type => vdl/cache.battle.infoRoom }
20.01 12:42:23 -<<-: vdl/cache.battle.infoRoom { secondId => 76, firstId => 163, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 12:42:23 STATS: vdl.0 cache connection, 35 calls, total 0.029954195022583 sec spent, avg 0.86 ms
20.01 12:42:23 TRACE: battle.sendtask : Invalid field access : copy
20.01 12:42:23 TRACE: battle.sendtask : 
Called from modules/VDLBattleModule.hx line 338
Called from modules/VDLBattleModule.hx line 64
Called from modules/VDLBattleModule.hx line 42
Called from snipe/slave/Server.hx line 1176
20.01 12:42:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:28 TIME: user.ping 0.23 ms
20.01 12:42:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:32 TIME: user.ping 0.31 ms
20.01 12:42:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:36 TIME: user.ping 0.23 ms
20.01 12:42:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:38 NET: Client (name:Aimer2 conid:36041054 TCP) disconnected from vdl.0 (clients:1)
20.01 12:42:38 DB: SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true
20.01 12:42:38 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true, _type => core/server.query }
20.01 12:42:38 -<<-: core/server.query { list => {{ id => 37 }}, errorCode => ok, _type => core/server.query }
20.01 12:42:38 ->>-: vdl/cache.battle.infoRoom { roomId => 37, _type => vdl/cache.battle.infoRoom }
20.01 12:42:38 NET: Client (conid:2426341) connected to vdl.0 (clients:2)
20.01 12:42:38 -<<-: vdl/cache.battle.infoRoom { secondId => 76, firstId => 163, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 12:42:38 ->>-: vdl/cache.battle.deleteRoom { roomId => 37, _type => vdl/cache.battle.deleteRoom }
20.01 12:42:38 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
20.01 12:42:38 ->>-: vdl/cache.battle.finishRoom { roomId => 37, _type => vdl/cache.battle.finishRoom }
20.01 12:42:38 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
20.01 12:42:38 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 163, _type => core/cache.update }
20.01 12:42:38 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:42:38 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 163, _type => core/cache.update }
20.01 12:42:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:42:38 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 163, _type => core/user.logoutPost }
20.01 12:42:38 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:42:38 == NET: Aimer ret: battle.leave { type => battle.leave }
20.01 12:42:38 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer2, messageType => user.login }
20.01 12:42:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf'
20.01 12:42:38 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:42:38 -<<-: core/server.query { list => {{ name => Aimer2, networkid => , isbanned => false, id => 163 }}, errorCode => ok, _type => core/server.query }
20.01 12:42:38 ->>-: core/user.isOnlineID { id => 163, _type => core/user.isOnlineID }
20.01 12:42:38 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:42:38 ->>-: core/cache.get { type => user, v => -1, id => 163, _type => core/cache.get }
20.01 12:42:38 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer2, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2017-01-20 12:39:54.038596+03, language => en, networkid => , params => { info => { city => , year => , email =>  }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905194, lastLoginDate => 20, lastLoadDate => 121 }, effects => { list => [] } }}, version => 2, id => 163 } }
20.01 12:42:38 ->>-: core/cache.get { type => questdata, v => -1, id => 163, _type => core/cache.get }
20.01 12:42:38 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 163 } }
20.01 12:42:38 NET: Client login (conid:2426341, id:163, name:Aimer2)
20.01 12:42:38 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 163, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:42:38 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:42:38 == NET: Aimer2 ret: user.login { name => Aimer2, type => user.login, errorCode => ok, id => 163 }
20.01 12:42:38 == NET: Aimer2 ret: user.join { name => Aimer, type => user.join }
20.01 12:42:38 == NET: Aimer ret: user.join { name => Aimer2, type => user.join }
20.01 12:42:38 == NET: Aimer2 ret: user.join { name => Aimer2, type => user.join }
20.01 12:42:38 ++ NET: Aimer2 req: user.data { messageType => user.data }
20.01 12:42:38 ->>-: vdl/cache.user.getData { userId => 163, _type => vdl/cache.user.getData, money => 0 }
20.01 12:42:38 -<<-: vdl/cache.user.getData { info => { city => , year => , email =>  }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 12:42:38 TIME: user.data 0.28 ms
20.01 12:42:38 == NET: Aimer2 ret: user.data { info => { city => , year => , email =>  }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 12:42:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:40 TIME: user.ping 0.22 ms
20.01 12:42:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:44 TIME: user.ping 0.16 ms
20.01 12:42:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:47 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 163, _type => core/cache.update }
20.01 12:42:47 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.01 12:42:48 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:48 TIME: user.ping 0.3 ms
20.01 12:42:48 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:49 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:49 TIME: user.ping 0.2 ms
20.01 12:42:49 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:52 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:52 TIME: user.ping 0.22 ms
20.01 12:42:52 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:55 TIME: user.ping 0.25 ms
20.01 12:42:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:42:58 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:42:58 TIME: user.ping 0.4 ms
20.01 12:42:58 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:01 TIME: user.ping 0.27 ms
20.01 12:43:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:04 ++ NET: Aimer2 req: battle.end { type => leaveGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 37 }
20.01 12:43:04 ->>-: vdl/cache.battle.infoRoom { roomId => 37, _type => vdl/cache.battle.infoRoom }
20.01 12:43:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.01 12:43:04 TRACE: battle.end : cacheRequest exception { roomId => 37, _type => vdl/cache.battle.infoRoom }
20.01 12:43:04 TRACE: battle.end : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 92
Called from modules/VDLBattleModule.hx line 50
Called from snipe/slave/Server.hx line 1176
20.01 12:43:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:04 TIME: user.ping 0.19 ms
20.01 12:43:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:07 TIME: user.ping 0.19 ms
20.01 12:43:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:10 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:10 TIME: user.ping 0.17 ms
20.01 12:43:10 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:16 TIME: user.ping 0.2 ms
20.01 12:43:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:19 NET: Client (name:Aimer2 conid:2426341 TCP) disconnected from vdl.0 (clients:1)
20.01 12:43:19 DB: SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true
20.01 12:43:19 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true, _type => core/server.query }
20.01 12:43:19 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:43:19 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:43:19 NET: Client (conid:88172553) connected to vdl.0 (clients:2)
20.01 12:43:19 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.01 12:43:19 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:43:19 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
20.01 12:43:19 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 163, _type => core/cache.update }
20.01 12:43:19 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.01 12:43:19 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 163, _type => core/cache.update }
20.01 12:43:19 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:43:19 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 163, _type => core/user.logoutPost }
20.01 12:43:19 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:43:19 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer2, messageType => user.login }
20.01 12:43:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf'
20.01 12:43:19 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:43:19 -<<-: core/server.query { list => {{ name => Aimer2, networkid => , isbanned => false, id => 163 }}, errorCode => ok, _type => core/server.query }
20.01 12:43:19 ->>-: core/user.isOnlineID { id => 163, _type => core/user.isOnlineID }
20.01 12:43:19 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:43:19 ->>-: core/cache.get { type => user, v => -1, id => 163, _type => core/cache.get }
20.01 12:43:19 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer2, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2017-01-20 12:39:54.038596+03, language => en, networkid => , params => { info => { city => , year => , email =>  }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905194, lastLoginDate => 20, lastLoadDate => 121 }, effects => { list => [] } }}, version => 4, id => 163 } }
20.01 12:43:19 ->>-: core/cache.get { type => questdata, v => -1, id => 163, _type => core/cache.get }
20.01 12:43:19 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 163 } }
20.01 12:43:19 NET: Client login (conid:88172553, id:163, name:Aimer2)
20.01 12:43:19 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 163, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:43:19 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:43:19 == NET: Aimer2 ret: user.login { name => Aimer2, type => user.login, errorCode => ok, id => 163 }
20.01 12:43:19 == NET: Aimer ret: user.join { name => Aimer2, type => user.join }
20.01 12:43:19 == NET: Aimer2 ret: user.join { name => Aimer, type => user.join }
20.01 12:43:19 == NET: Aimer2 ret: user.join { name => Aimer2, type => user.join }
20.01 12:43:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:19 TIME: user.ping 0.07 ms
20.01 12:43:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:19 ++ NET: Aimer2 req: user.data { messageType => user.data }
20.01 12:43:19 ->>-: vdl/cache.user.getData { userId => 163, _type => vdl/cache.user.getData, money => 0 }
20.01 12:43:19 -<<-: vdl/cache.user.getData { info => { city => , year => , email =>  }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 12:43:19 TIME: user.data 0.24 ms
20.01 12:43:19 == NET: Aimer2 ret: user.data { info => { city => , year => , email =>  }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 12:43:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:22 TIME: user.ping 0.18 ms
20.01 12:43:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:22 TIMER: Check auto-disconnect...
20.01 12:43:22 STATS: vdl.0 cache, locks:4
20.01 12:43:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:25 TIME: user.ping 0.07 ms
20.01 12:43:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:27 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 163, _type => core/cache.update }
20.01 12:43:27 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
20.01 12:43:27 STATS: vdl.0 cache connection, 62 calls, total 0.0565457344055176 sec spent, avg 0.91 ms
20.01 12:43:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:28 TIME: user.ping 0.07 ms
20.01 12:43:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:30 TIME: user.ping 0.1 ms
20.01 12:43:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:33 TIME: user.ping 0.09 ms
20.01 12:43:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:34 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:34 TIME: user.ping 0.07 ms
20.01 12:43:34 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:36 TIME: user.ping 0.09 ms
20.01 12:43:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:40 TIME: user.ping 0.11 ms
20.01 12:43:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:44 TIME: user.ping 0.07 ms
20.01 12:43:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:47 TIME: user.ping 0.12 ms
20.01 12:43:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:50 TIME: user.ping 0.18 ms
20.01 12:43:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:53 TIME: user.ping 0.15 ms
20.01 12:43:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:55 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:55 TIME: user.ping 0.22 ms
20.01 12:43:55 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:55 TIME: user.ping 0.21 ms
20.01 12:43:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:43:58 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:43:58 TIME: user.ping 0.18 ms
20.01 12:43:58 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:01 TIME: user.ping 0.23 ms
20.01 12:44:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:06 TIME: user.ping 0.14 ms
20.01 12:44:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:09 TIME: user.ping 0.08 ms
20.01 12:44:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:11 TIME: user.ping 0.23 ms
20.01 12:44:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:13 TIME: user.ping 0.15 ms
20.01 12:44:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:15 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:15 TIME: user.ping 0.15 ms
20.01 12:44:15 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:16 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:16 TIME: user.ping 0.15 ms
20.01 12:44:16 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:18 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:18 TIME: user.ping 0.07 ms
20.01 12:44:18 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:20 TIME: user.ping 0.17 ms
20.01 12:44:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:22 TIME: user.ping 0.23 ms
20.01 12:44:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:22 TIMER: Check auto-disconnect...
20.01 12:44:22 STATS: vdl.0 cache, locks:4
20.01 12:44:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:24 TIME: user.ping 0.21 ms
20.01 12:44:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:26 TIME: user.ping 0.15 ms
20.01 12:44:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:28 TIME: user.ping 0.19 ms
20.01 12:44:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:30 TIME: user.ping 0.16 ms
20.01 12:44:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:32 TIME: user.ping 0.21 ms
20.01 12:44:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:34 TIME: user.ping 0.28 ms
20.01 12:44:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:37 TIME: user.ping 0.12 ms
20.01 12:44:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:37 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:37 TIME: user.ping 0.23 ms
20.01 12:44:37 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:41 TIME: user.ping 0.23 ms
20.01 12:44:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:43 TIME: user.ping 0.15 ms
20.01 12:44:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:46 TIME: user.ping 0.15 ms
20.01 12:44:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:48 TIME: user.ping 0.31 ms
20.01 12:44:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:50 TIME: user.ping 0.22 ms
20.01 12:44:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:52 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:52 TIME: user.ping 0.14 ms
20.01 12:44:52 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:54 TIME: user.ping 0.25 ms
20.01 12:44:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:56 TIME: user.ping 0.54 ms
20.01 12:44:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:57 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:57 TIME: user.ping 0.19 ms
20.01 12:44:57 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:44:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:44:59 TIME: user.ping 0.28 ms
20.01 12:44:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:01 TIME: user.ping 0.2 ms
20.01 12:45:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:03 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:03 TIME: user.ping 0.16 ms
20.01 12:45:03 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:05 TIME: user.ping 0.22 ms
20.01 12:45:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:07 TIME: user.ping 0.2 ms
20.01 12:45:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:11 TIME: user.ping 0.08 ms
20.01 12:45:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:14 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:14 TIME: user.ping 0.16 ms
20.01 12:45:14 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:16 TIME: user.ping 0.07 ms
20.01 12:45:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:18 ++ NET: Aimer2 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:18 TIME: user.ping 0.2 ms
20.01 12:45:18 == NET: Aimer2 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:19 TIME: user.ping 0.27 ms
20.01 12:45:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:21 TIME: user.ping 0.06 ms
20.01 12:45:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:22 TIMER: Check auto-disconnect...
20.01 12:45:22 STATS: vdl.0 cache, locks:4
20.01 12:45:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:23 TIME: user.ping 0.11 ms
20.01 12:45:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:25 TIME: user.ping 0.11 ms
20.01 12:45:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:29 TIME: user.ping 0.1 ms
20.01 12:45:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:35 TIME: user.ping 0.21 ms
20.01 12:45:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:37 TIME: user.ping 0.22 ms
20.01 12:45:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:40 TIME: user.ping 0.2 ms
20.01 12:45:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:45 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:45 TIME: user.ping 0.24 ms
20.01 12:45:45 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:51 TIME: user.ping 0.08 ms
20.01 12:45:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:53 TIME: user.ping 0.09 ms
20.01 12:45:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:55 TIME: user.ping 0.11 ms
20.01 12:45:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:57 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:57 TIME: user.ping 0.18 ms
20.01 12:45:57 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:45:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:45:59 TIME: user.ping 0.06 ms
20.01 12:45:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:01 TIME: user.ping 0.25 ms
20.01 12:46:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:03 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:03 TIME: user.ping 0.18 ms
20.01 12:46:03 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:05 TIME: user.ping 0.06 ms
20.01 12:46:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:07 TIME: user.ping 0.17 ms
20.01 12:46:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:09 TIME: user.ping 0.18 ms
20.01 12:46:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:11 TIME: user.ping 0.24 ms
20.01 12:46:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:13 TIME: user.ping 0.2 ms
20.01 12:46:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:16 TIME: user.ping 0.15 ms
20.01 12:46:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:19 TIME: user.ping 0.21 ms
20.01 12:46:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:21 TIME: user.ping 0.2 ms
20.01 12:46:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:22 TIMER: Check auto-disconnect...
20.01 12:46:22 STATS: vdl.0 cache, locks:4
20.01 12:46:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:24 TIME: user.ping 0.17 ms
20.01 12:46:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:25 TIME: user.ping 0.18 ms
20.01 12:46:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:27 TIME: user.ping 0.2 ms
20.01 12:46:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:32 TIME: user.ping 0.18 ms
20.01 12:46:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:34 TIME: user.ping 0.19 ms
20.01 12:46:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:36 TIME: user.ping 0.22 ms
20.01 12:46:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:38 TIME: user.ping 0.22 ms
20.01 12:46:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:40 TIME: user.ping 0.16 ms
20.01 12:46:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:42 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:42 TIME: user.ping 0.19 ms
20.01 12:46:42 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:44 TIME: user.ping 0.12 ms
20.01 12:46:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:46 TIME: user.ping 0.28 ms
20.01 12:46:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:51 TIME: user.ping 0.17 ms
20.01 12:46:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:53 TIME: user.ping 0.17 ms
20.01 12:46:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:55 TIME: user.ping 0.2 ms
20.01 12:46:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:57 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:57 TIME: user.ping 0.18 ms
20.01 12:46:57 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:46:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:46:59 TIME: user.ping 0.15 ms
20.01 12:47:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:01 TIME: user.ping 0.12 ms
20.01 12:47:03 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:03 TIME: user.ping 0.15 ms
20.01 12:47:03 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:05 TIME: user.ping 0.07 ms
20.01 12:47:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:07 TIME: user.ping 0.3 ms
20.01 12:47:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:11 TIME: user.ping 0.3 ms
20.01 12:47:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:14 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:14 TIME: user.ping 0.08 ms
20.01 12:47:14 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:16 TIME: user.ping 0.17 ms
20.01 12:47:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:18 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:18 TIME: user.ping 0.24 ms
20.01 12:47:18 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:21 TIME: user.ping 0.25 ms
20.01 12:47:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:22 TIMER: Check auto-disconnect...
20.01 12:47:22 STATS: vdl.0 cache, locks:4
20.01 12:47:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:23 TIME: user.ping 0.12 ms
20.01 12:47:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:27 TIME: user.ping 0.07 ms
20.01 12:47:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:31 TIME: user.ping 0.23 ms
20.01 12:47:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:33 NET: Client (name:Aimer2 conid:88172553 TCP) disconnected from vdl.0 (clients:1)
20.01 12:47:33 DB: SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true
20.01 12:47:33 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true, _type => core/server.query }
20.01 12:47:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:47:33 STATS: vdl.0 cache connection, 63 calls, total 0.0587787628173828 sec spent, avg 0.93 ms
20.01 12:47:33 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:47:33 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.01 12:47:33 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 12:47:33 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
20.01 12:47:33 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 163, _type => core/cache.update }
20.01 12:47:33 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
20.01 12:47:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 163, _type => core/cache.update }
20.01 12:47:33 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.01 12:47:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 163, _type => core/user.logoutPost }
20.01 12:47:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:47:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:34 TIME: user.ping 0.18 ms
20.01 12:47:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:36 TIME: user.ping 0.14 ms
20.01 12:47:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:37 TIME: user.ping 0.29 ms
20.01 12:47:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:39 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:39 TIME: user.ping 0.06 ms
20.01 12:47:39 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:40 NET: Client (conid:97835817) connected to vdl.0 (clients:2)
20.01 12:47:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:41 TIME: user.ping 0.19 ms
20.01 12:47:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:42 ++ NET: null req: user.register { messageType => user.register }
20.01 12:47:42 DB: SELECT * FROM users
20.01 12:47:42 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
20.01 12:47:42 -<<-: core/server.query { list => {{ password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479560953,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language => en, id => 18, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479473868,"lastLoginDate":323,"lastLoadDate":1119},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language => en, id => 9, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479560179,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"inventory":{"list":[]},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479308562,"lastLoginDate":322,"lastLoadDate":1118},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language => en, id => 12, deleted => false }, { password => uid64, name => uid64, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, id => 64, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid67, name => uid67, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476886636,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:17:16.853975+03, language => en, id => 67, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid65, name => uid65, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476879545,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 15:19:05.058893+03, language => en, id => 65, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => qweqwe, name => asdasd, networkid => , params => {"info":{"city":"Dsadasd","year":"1231","email":"asdasdas"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.822508+03, language =>   , id => 69, deleted => false }, { password => uid66, name => uid66, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476882998,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 16:16:38.334095+03, language => en, id => 66, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }, { password => uid73, name => uid73, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889025,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:57:04.529542+03, language => en, id => 73, deleted => false }, { password => uid71, name => uid71, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888930,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:55:29.621522+03, language => en, id => 71, deleted => false }, { password => uid68, name => uid68, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888788,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.78775+03, language => en, id => 68, deleted => false }, { password => 123123, name => 123123, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:54:22.233721+03, language =>   , id => 70, deleted => false }, { password => qweqwe, name => 1qweqwe, networkid => , params => {"info":{"city":"Qweqwe","year":"1231","email":"qweqwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:56:17.221331+03, language =>   , id => 72, deleted => false }, { password => 123123, name => 123qwe, networkid => , params => {"info":{"city":"Wqe","year":"1233","email":"123qwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:59:29.773441+03, language =>   , id => 74, deleted => false }, { password => uid75, name => uid75, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889477,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:04:35.916538+03, language => en, id => 75, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890115,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language => en, id => 44, deleted => false }, { password => uid77, name => uid77, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889607,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:06:46.41184+03, language => en, id => 77, deleted => false }, { password => 123456, name => test20, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477646178,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 12:16:18.03489+03, language => en, id => 96, deleted => false }, { password => uid78, name => uid78, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890199,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:16:37.399803+03, language => en, id => 78, deleted => false }, { password => uid83, name => uid83, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961590,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:06:28.765885+03, language => en, id => 83, deleted => false }, { password => uid79, name => uid79, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476959779,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:36:18.869521+03, language => en, id => 79, deleted => false }, { password => uid89, name => uid89, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308423,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-24 14:26:57.401644+03, language => en, id => 89, deleted => false }, { password => uid84, name => uid84, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961768,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:09:27.02443+03, language => en, id => 84, deleted => false }, { password => uid102, name => uid102, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477660100,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:08:15.479957+03, language => en, id => 102, deleted => false }, { password => uid80, name => uid80, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476960874,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:54:32.93048+03, language => en, id => 80, deleted => false }, { password => uid81, name => uid81, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961061,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:57:40.114003+03, language => en, id => 81, deleted => false }, { password => uid85, name => uid85, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476962319,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:18:38.418977+03, language => en, id => 85, deleted => false }, { password => 123123, name => Tester, networkid => , params => {"info":{"city":"Dsda","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:58:49.229528+03, language =>   , id => 86, deleted => false }, { password => qweqwe, name => Acterix, networkid => , params => {"info":{"city":"Weqwe","year":"2312","email":"eqwe123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:39:29.554557+03, language =>   , id => 90, deleted => false }, { password => uid91, name => uid91, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399413,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:43:32.477232+03, language => en, id => 91, deleted => false }, { password => uid82, name => uid82, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961257,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:00:56.513148+03, language => en, id => 82, deleted => false }, { password => uid87, name => uid87, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, id => 87, deleted => false }, { password => uid88, name => uid88, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477049264,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-21 14:27:43.099186+03, language => en, id => 88, deleted => false }, { password => 123456, name => test17, networkid => , params => {"info":{"city":"","year":"","email":"asda"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399457,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:44:17.274208+03, language => en, id => 92, deleted => false }, { password => uid95, name => uid95, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477489312,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, id => 95, deleted => false }, { password => uid93, name => uid93, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477400907,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:08:27.066262+03, language => en, id => 93, deleted => false }, { password => uid94, name => uid94, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477655031,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, id => 94, deleted => false }, { password => uid98, name => uid98, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477659590,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 15:59:47.355767+03, language => en, id => 98, deleted => false }, { password => uid97, name => uid97, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477647307,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 12:35:05.771011+03, language => en, id => 97, deleted => false }, { password => uid99, name => uid99, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477659641,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:00:39.9083+03, language => en, id => 99, deleted => false }, { password => uid103, name => uid103, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477660355,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:12:35.388519+03, language => en, id => 103, deleted => false }, { password => qwerty, name => nelli8, networkid => , params => {"info":{"city":"Kazan","year":"","email":"nlqbunskaha@mail.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750390,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:03:03.386319+03, language => en, id => 101, deleted => false }, { password => uid105, name => uid105, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661095,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:24:51.972524+03, language => en, id => 105, deleted => false }, { password => test, name => test67, networkid => , params => {"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750490,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:02:55.698999+03, language => en, id => 100, deleted => false }, { password => uid106, name => uid106, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661732,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:35:25.243155+03, language => en, id => 106, deleted => false }, { password => qwerty, name => qwerty, networkid => , params => {"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:12:35.945256+03, language => en, id => 104, deleted => false }, { password => uid108, name => uid108, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661911,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:38:24.62117+03, language => en, id => 108, deleted => false }, { password => uid109, name => uid109, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661920,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:38:37.423978+03, language => en, id => 109, deleted => false }, { password => uid125, name => uid125, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-16 15:43:57.687396+03, language =>   , id => 125, deleted => false }, { password => uid111, name => uid111, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477662049,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:40:47.262501+03, language => en, id => 111, deleted => false }, { password => ass12, name => ass12, networkid => , params => {"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661977,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:39:37.381394+03, language => en, id => 110, deleted => false }, { password => uid126, name => uid126, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-16 15:43:58.033309+03, language =>   , id => 126, deleted => false }, { password => uid127, name => uid127, networkid => , params => {"attrs":{"_lastTime.24hr":1479305744,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-16 17:12:35.512853+03, language => en, id => 127, deleted => false }, { password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-16 17:58:05.390738+03, language =>   , id => 128, deleted => false }, { password => uid129, name => uid129, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-16 18:26:50.880304+03, language =>   , id => 129, deleted => false }, { password => uid130, name => uid130, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-16 18:46:10.00051+03, language =>   , id => 130, deleted => false }, { password => uid117, name => uid117, networkid => , params => {"attrs":{"_lastTime.24hr":1478221960,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-03 23:52:14.286671+03, language => en, id => 117, deleted => false }, { password => uid131, name => uid131, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-17 14:40:58.33771+03, language =>   , id => 131, deleted => false }, { password => uid132, name => uid132, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-17 14:41:25.915044+03, language =>   , id => 132, deleted => false }, { password => uid113, name => uid113, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750380,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-29 17:12:53.911759+03, language => en, id => 113, deleted => false }, { password => uid134, name => uid134, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-18 15:55:42.925353+03, language =>   , id => 134, deleted => false }, { password => uid135, name => uid135, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-18 15:59:32.740984+03, language =>   , id => 135, deleted => false }, { password => uid118, name => uid118, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-04 04:32:26.675032+03, language =>   , id => 118, deleted => false }, { password => uid115, name => uid115, networkid => , params => {"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, id => 115, deleted => false }, { password => uid133, name => uid133, networkid => , params => {"attrs":{"_lastTime.24hr":1479474171,"lastLoginDate":323,"lastLoadDate":1119},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-17 17:41:47.352806+03, language => en, id => 133, deleted => false }, { password => uid114, name => uid114, networkid => , params => {"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, id => 114, deleted => false }, { password => uid119, name => uid119, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-07 15:47:02.83658+03, language =>   , id => 119, deleted => false }, { password => uid120, name => uid120, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-07 16:16:06.3126+03, language =>   , id => 120, deleted => false }, { password => uid136, name => uid136, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-18 16:33:27.116428+03, language =>   , id => 136, deleted => false }, { password => uid121, name => uid121, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-07 16:43:06.103417+03, language =>   , id => 121, deleted => false }, { password => uid122, name => uid122, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-07 16:52:21.39116+03, language =>   , id => 122, deleted => false }, { password => uid137, name => uid137, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-18 17:08:20.458964+03, language =>   , id => 137, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479557908,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language => en, id => 17, deleted => false }, { password => uid107, name => uid107, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478526038,"lastLoginDate":312,"lastLoadDate":1108},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, id => 107, deleted => false }, { password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-14 13:33:09.639526+03, language =>   , id => 123, deleted => false }, { password => uid116, name => uid116, networkid => , params => {"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, id => 116, deleted => false }, { password => uid138, name => uid138, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-19 17:20:48.756509+03, language =>   , id => 138, deleted => false }, { password => uid140, name => uid140, networkid => , params => {"attrs":{"_lastTime.24hr":1479567029,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-19 17:25:00.661+03, language => en, id => 140, deleted => false }, { password => 1111, name => Test5, networkid => , params => {"info":{"city":"Testcity","year":"1111","email":"2testemail2"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479657476,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:57:55.997177+03, language => en, id => 156, deleted => false }, { password => uid124, name => uid124, networkid => , params => {"attrs":{"_lastTime.24hr":1479123253,"lastLoginDate":319,"lastLoadDate":1115},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-14 14:34:13.58957+03, language => en, id => 124, deleted => false }, { password => uid139, name => uid139, networkid => , params => {"attrs":{"_lastTime.24hr":1479565440,"lastLoginDate":324,"lastLoadDate":1120},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-19 17:20:57.428379+03, language => en, id => 139, deleted => false }, { password => uid142, name => uid142, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-20 17:24:00.065005+03, language =>   , id => 142, deleted => false }, { password => uid148, name => uid148, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:19:44.767168+03, language =>   , id => 148, deleted => false }, { password => uid144, name => uid144, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-20 17:38:12.705558+03, language =>   , id => 144, deleted => false }, { password => uid155, name => uid155, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479657459,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:57:39.613668+03, language => en, id => 155, deleted => false }, { password => 1111, name => Test2, networkid => , params => {"attrs":{"_lastTime.24hr":1479656453,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:20:13.834324+03, language => en, id => 149, deleted => false }, { password => uid150, name => uid150, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:43:22.218765+03, language =>   , id => 150, deleted => false }, { password => qwerty, name => Enter, networkid => , params => {"attrs":{"_lastTime.24hr":1479651896,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-20 17:24:30.203237+03, language => en, id => 143, deleted => false }, { password => 1111, name => Test1, networkid => , params => {"attrs":{"_lastTime.24hr":1479654011,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-20 17:58:38.095836+03, language => en, id => 146, deleted => false }, { password => uid145, name => uid145, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-20 17:57:49.833892+03, language =>   , id => 145, deleted => false }, { password => uid147, name => uid147, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-20 17:59:49.461253+03, language =>   , id => 147, deleted => false }, { password => uid151, name => uid151, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:43:40.452092+03, language =>   , id => 151, deleted => false }, { password => 1111, name => Test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:44:05.163783+03, language =>   , id => 152, deleted => false }, { password => uid153, name => uid153, networkid => , params => {"attrs":{"_lastTime.24hr":1479656863,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:44:17.397759+03, language => en, id => 153, deleted => false }, { password => 1111, name => Test4, networkid => , params => {"attrs":{"_lastTime.24hr":1479657192,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:47:58.814654+03, language => en, id => 154, deleted => false }, { password => uid141, name => uid141, networkid => , params => {"attrs":{"_lastTime.24hr":1479576158,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-19 20:20:05.55314+03, language => en, id => 141, deleted => false }, { password => uid157, name => uid157, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479657553,"lastLoginDate":325,"lastLoadDate":1121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-11-20 18:59:13.751976+03, language => en, id => 157, deleted => false }, { password => uid112, name => uid112, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1482757079,"lastLoginDate":361,"money":400,"lastLoadDate":1227},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-29 16:31:59.278542+03, language => en, id => 112, deleted => false }, { password => uid158, name => uid158, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1482765094,"lastLoginDate":361,"lastLoadDate":1227},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-12-26 18:11:33.655688+03, language => en, id => 158, deleted => false }, { password => uid160, name => uid160, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-12-27 16:59:49.256427+03, language =>   , id => 160, deleted => false }, { password => uid159, name => uid159, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1482765217,"lastLoginDate":362,"lastLoadDate":1228},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-12-26 18:13:37.644954+03, language => en, id => 159, deleted => false }, { password => uid161, name => uid161, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1482934191,"lastLoginDate":363,"lastLoadDate":1229},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-12-28 17:09:51.679974+03, language => en, id => 161, deleted => false }, { password => kO2YJdf, name => Aimer, networkid => , params => {"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1484905045,"lastLoginDate":20,"money":3,"lastLoadDate":121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, id => 76, deleted => false }, { password => uid162, name => uid162, networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1484748644,"lastLoginDate":18,"lastLoadDate":119},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-01-18 17:10:44.031496+03, language => en, id => 162, deleted => false }, { password => kO2YJdf, name => Aimer2, networkid => , params => {"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1484905194,"lastLoginDate":20,"lastLoadDate":121},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-01-20 12:39:54.038596+03, language => en, id => 163, deleted => false }}, errorCode => ok, _type => core/server.query }
20.01 12:47:42 == NET: null ret: user.auth { type => user.auth, token => dWlkMTY0 }
20.01 12:47:42 DB: SELECT ID FROM Users WHERE Name = E'uid164'
20.01 12:47:42 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid164', _type => core/server.query }
20.01 12:47:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:47:42 DB: SELECT nextval('Users_id_seq') AS id
20.01 12:47:42 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
20.01 12:47:42 -<<-: core/server.query { list => {{ id => 164 }}, errorCode => ok, _type => core/server.query }
20.01 12:47:42 ->>-: core/user.register { password => uid164, name => uid164, fullParams => { password => uid164, name => uid164, networkid => , networktype => , messageType => user.register, id => 164 }, networkid => , connectionID => 97835817, networktype => , email => , id => 164, _type => core/user.register }
20.01 12:47:42 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
20.01 12:47:42 -<<-: core/user.registerResponse { password => uid164, name => uid164, _isNotify => true, fullParams => { password => uid164, name => uid164, networkid => , networktype => , messageType => user.register, id => 164 }, networkid => , connectionID => 97835817, networktype => , email => , id => 164, _type => core/user.registerResponse }
20.01 12:47:42 == NET: null ret: user.register { type => user.register, errorCode => ok }
20.01 12:47:42 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTY0 }
20.01 12:47:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid164' AND Password = E'uid164'
20.01 12:47:42 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid164' AND Password = E'uid164', _type => core/server.query }
20.01 12:47:42 -<<-: core/server.query { list => {{ name => uid164, networkid => , isbanned => false, id => 164 }}, errorCode => ok, _type => core/server.query }
20.01 12:47:42 ->>-: core/user.isOnlineID { id => 164, _type => core/user.isOnlineID }
20.01 12:47:42 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 12:47:42 ->>-: core/cache.get { type => user, v => -1, id => 164, _type => core/cache.get }
20.01 12:47:42 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid164, deleted => false, email => , networktype =>   , password => uid164, isbanned => false, regdate => 2017-01-20 12:47:42.69767+03, language =>   , networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 164 } }
20.01 12:47:42 ->>-: core/cache.get { type => questdata, v => -1, id => 164, _type => core/cache.get }
20.01 12:47:42 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 164 } }
20.01 12:47:42 NET: Client login (conid:97835817, id:164, name:uid164)
20.01 12:47:42 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 164, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:47:42 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.01 12:47:42 DB: SELECT ID FROM TempUserLogins WHERE UserID = 164 AND Date = 'today'::timestamp
20.01 12:47:42 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 164 AND Date = 'today'::timestamp, _type => core/server.query }
20.01 12:47:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 12:47:42 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (164, 'today'::timestamp)
20.01 12:47:42 == NET: uid164 ret: user.login { name => uid164, type => user.login, errorCode => ok, id => 164 }
20.01 12:47:42 ++ NET: uid164 req: user.login { messageType => user.login, token => dWlkMTY0 }
20.01 12:47:42 TRACE: User already logon.
20.01 12:47:42 TRACE: 
Called from snipe/slave/Server.hx line 870
Called from snipe/slave/Server.hx line 1124
20.01 12:47:42 == NET: Aimer ret: user.join { name => uid164, type => user.join }
20.01 12:47:42 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1484905662, lastLoginDate => 20, lastLoadDate => 121 } }}, type => user, unlock => true, id => 164, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (164, 'today'::timestamp), _type => core/server.pending }} }
20.01 12:47:42 == NET: uid164 ret: user.join { name => Aimer, type => user.join }
20.01 12:47:42 == NET: uid164 ret: user.join { name => uid164, type => user.join }
20.01 12:47:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 12:47:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 164, _type => core/cache.update }
20.01 12:47:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:47:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 164, _type => core/user.logoutPost }
20.01 12:47:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:47:42 TRACE: Could not login.
20.01 12:47:42 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
20.01 12:47:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:43 TIME: user.ping 1.61 ms
20.01 12:47:45 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:45 TIME: user.ping 0.18 ms
20.01 12:47:45 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:47 ++ NET: uid164 req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:47 TIME: user.ping 0.24 ms
20.01 12:47:47 == NET: uid164 ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:47 TIME: user.ping 0.19 ms
20.01 12:47:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:50 TIME: user.ping 0.23 ms
20.01 12:47:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:47:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:47:54 TIME: user.ping 0.09 ms
20.01 12:47:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:23 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
20.01 12:48:23 -<<-: server.login ok
20.01 12:48:23 DB: SELECT * FROM LocalizationStrings
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 TIMER: Starting timer...
20.01 12:48:23 TIMER: Timer running...
20.01 12:48:23 DB: SELECT * FROM GameVars
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
20.01 12:48:23 -<<-: core/quest.getDaily ok
20.01 12:48:23 DB: SELECT * FROM UserAttributeTypes
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM UserVariableTypes
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.01 12:48:23 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM ItemGroups
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM Bundles ORDER BY ID
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM BundleItems ORDER BY ID
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 SHOP: loading items...
20.01 12:48:23 ->>-: core/shop.getList { _type => core/shop.getList }
20.01 12:48:23 -<<-: core/shop.getList ok
20.01 12:48:23 SHOP: 0 items loaded (0 sec)
20.01 12:48:23 DB: SELECT * FROM EffectAttributeTypes
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM Effects
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
20.01 12:48:23 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
20.01 12:48:23 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 DB: SELECT * FROM Badges
20.01 12:48:23 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 NET: Client (conid:61920012) connected to vdl.0 (clients:1)
20.01 12:48:23 NET: Client (name:null conid:61920012 TCP) disconnected from vdl.0 (clients:0)
20.01 12:48:23 NET: Client (conid:37780317) connected to vdl.0 (clients:1)
20.01 12:48:23 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:48:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 12:48:23 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 12:48:23 -<<-: core/server.query ok
20.01 12:48:23 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 12:48:23 -<<-: core/user.isOnlineID ok
20.01 12:48:23 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 12:48:23 -<<-: core/cache.get ok
20.01 12:48:23 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 12:48:23 -<<-: core/cache.get ok
20.01 12:48:23 NET: Client login (conid:37780317, id:76, name:Aimer)
20.01 12:48:23 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 12:48:23 -<<-: core/user.loginPost null
20.01 12:48:23 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.01 12:48:23 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.01 12:48:23 ++ NET: Aimer req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.01 12:48:23 TRACE: User already logon.
20.01 12:48:23 TRACE: 
Called from snipe/slave/Server.hx line 870
Called from snipe/slave/Server.hx line 1124
20.01 12:48:23 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.01 12:48:23 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:48:23 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.01 12:48:23 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 12:48:23 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.01 12:48:23 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 12:48:23 TRACE: Could not login.
20.01 12:48:23 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
20.01 12:48:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:23 TIME: user.ping 0.11 ms
20.01 12:48:23 ++ NET: Aimer req: user.data { messageType => user.data }
20.01 12:48:23 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
20.01 12:48:23 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:48:23 TIME: user.data 0.81 ms
20.01 12:48:23 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 12:48:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:25 TIME: user.ping 0.17 ms
20.01 12:48:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:27 TIME: user.ping 0.06 ms
20.01 12:48:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:28 TIME: user.ping 0.23 ms
20.01 12:48:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:30 TIME: user.ping 0.25 ms
20.01 12:48:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:32 TIME: user.ping 0.21 ms
20.01 12:48:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:33 TIME: user.ping 0.22 ms
20.01 12:48:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:35 TIME: user.ping 0.23 ms
20.01 12:48:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:37 TIME: user.ping 0.19 ms
20.01 12:48:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:38 TIME: user.ping 0.07 ms
20.01 12:48:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:40 TIME: user.ping 0.1 ms
20.01 12:48:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:42 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:42 TIME: user.ping 0.13 ms
20.01 12:48:42 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:43 TIME: user.ping 0.24 ms
20.01 12:48:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:45 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:45 TIME: user.ping 0.19 ms
20.01 12:48:45 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:47 TIME: user.ping 0.16 ms
20.01 12:48:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:48 TIME: user.ping 0.06 ms
20.01 12:48:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:50 TIME: user.ping 0.16 ms
20.01 12:48:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:52 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:52 TIME: user.ping 0.25 ms
20.01 12:48:52 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:53 TIME: user.ping 0.15 ms
20.01 12:48:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:48:55 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:48:55 TIME: user.ping 0.13 ms
20.01 12:48:55 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:00 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:00 TIME: user.ping 0.1 ms
20.01 12:49:00 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:01 TIME: user.ping 0.08 ms
20.01 12:49:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:03 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:03 TIME: user.ping 0.2 ms
20.01 12:49:03 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:05 TIME: user.ping 0.12 ms
20.01 12:49:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:06 TIME: user.ping 0.2 ms
20.01 12:49:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:08 TIME: user.ping 0.06 ms
20.01 12:49:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:10 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:10 TIME: user.ping 0.17 ms
20.01 12:49:10 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:11 TIME: user.ping 0.1 ms
20.01 12:49:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:13 TIME: user.ping 0.16 ms
20.01 12:49:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:15 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:15 TIME: user.ping 0.17 ms
20.01 12:49:15 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:16 TIME: user.ping 0.19 ms
20.01 12:49:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:18 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:18 TIME: user.ping 0.14 ms
20.01 12:49:18 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:20 TIME: user.ping 0.07 ms
20.01 12:49:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:22 TIME: user.ping 0.19 ms
20.01 12:49:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:23 TIMER: Check auto-disconnect...
20.01 12:49:23 STATS: vdl.0 cache, locks:0
20.01 12:49:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:23 TIME: user.ping 0.12 ms
20.01 12:49:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.01 12:49:28 TIME: user.ping 0.22 ms
20.01 12:49:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.01 12:49:37 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
20.01 12:49:37 -<<-: server.login ok
20.01 12:49:37 DB: SELECT * FROM LocalizationStrings
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 TIMER: Starting timer...
20.01 12:49:37 TIMER: Timer running...
20.01 12:49:37 DB: SELECT * FROM GameVars
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
20.01 12:49:37 -<<-: core/quest.getDaily ok
20.01 12:49:37 DB: SELECT * FROM UserAttributeTypes
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM UserVariableTypes
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.01 12:49:37 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM ItemGroups
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM Bundles ORDER BY ID
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM BundleItems ORDER BY ID
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 SHOP: loading items...
20.01 12:49:37 ->>-: core/shop.getList { _type => core/shop.getList }
20.01 12:49:37 -<<-: core/shop.getList ok
20.01 12:49:37 SHOP: 0 items loaded (0 sec)
20.01 12:49:37 DB: SELECT * FROM EffectAttributeTypes
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT * FROM Effects
20.01 12:49:37 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.01 12:49:37 -<<-: core/server.query ok
20.01 12:49:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_par20.01 12:51:19 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
20.01 12:51:19 -<<-: server.login ok
20.01 12:51:19 DB: SELECT * FROM LocalizationStrings
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 TIMER: Starting timer...
20.01 12:51:19 TIMER: Timer running...
20.01 12:51:19 DB: SELECT * FROM GameVars
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
20.01 12:51:19 -<<-: core/quest.getDaily ok
20.01 12:51:19 DB: SELECT * FROM UserAttributeTypes
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM UserVariableTypes
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.01 12:51:19 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM ItemGroups
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM Bundles ORDER BY ID
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM BundleItems ORDER BY ID
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 SHOP: loading items...
20.01 12:51:19 ->>-: core/shop.getList { _type => core/shop.getList }
20.01 12:51:19 -<<-: core/shop.getList ok
20.01 12:51:19 SHOP: 0 items loaded (0 sec)
20.01 12:51:19 DB: SELECT * FROM EffectAttributeTypes
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT * FROM Effects
20.01 12:51:19 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.01 12:51:19 -<<-: core/server.query ok
20.01 12:51:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_par20.01 12:52:42 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
20.01 12:52:42 -<<-: server.login ok
20.01 12:52:42 DB: SELECT * FROM LocalizationStrings
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 TIMER: Starting timer...
20.01 12:52:42 TIMER: Timer running...
20.01 12:52:42 DB: SELECT * FROM GameVars
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
20.01 12:52:42 -<<-: core/quest.getDaily ok
20.01 12:52:42 DB: SELECT * FROM UserAttributeTypes
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM UserVariableTypes
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.01 12:52:42 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM ItemGroups
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM Bundles ORDER BY ID
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM BundleItems ORDER BY ID
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 SHOP: loading items...
20.01 12:52:42 ->>-: core/shop.getList { _type => core/shop.getList }
20.01 12:52:42 -<<-: core/shop.getList ok
20.01 12:52:42 SHOP: 0 items loaded (0 sec)
20.01 12:52:42 DB: SELECT * FROM EffectAttributeTypes
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM Effects
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
20.01 12:52:42 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
20.01 12:52:42 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 DB: SELECT * FROM Badges
20.01 12:52:42 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
20.01 12:52:42 -<<-: core/server.query ok
20.01 12:52:42 TIMER: Check auto-disconnect...
20.01 12:52:42 STATS: vdl.0 cache, locks:0
20.01 12:52:42 TIMER: Check auto-disconnect...
20.01 12:52:42 STATS: vdl.0 cache, locks:0
20.01 12:52:42 TIMER: Check auto-disconnect...
20.01 12:52:42 STATS: vdl.0 cache, locks:0
20.01 12:52:42 TIMER: Check auto-disconnect...
20.01 12:52:42 STATS: vdl.0 cache, locks:0
20.01 12:52:42 TIMER: Check auto-disconnect...
20.01 12:52:42 STATS: vdl.0 cache, locks:0
20.01 12:52:42 TIMER: Check auto-disconnect...
20.01 12:52:42 STATS: vdl.0 cache, locks:0
20.01 12:52:42 TIMER: Check auto-disconnect...
20.01 12:52:42 STATS: vdl.0 cache, locks:0
20.01 12:52:42 TIMER: Check auto-disconnect...
