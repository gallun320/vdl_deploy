17.10 16:00:29 TIMER: Check auto-disconnect...
17.10 16:00:30 STATS: vdl.0 cache, locks:0
17.10 16:01:29 TIMER: Check auto-disconnect...
17.10 16:01:30 STATS: vdl.0 cache, locks:0
17.10 16:02:00 NET: Client (conid:52292171) connected to vdl.0 (clients:1)
17.10 16:02:01 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 16:02:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:02:01 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:02:01 -<<-: core/server.query ok
17.10 16:02:01 STATS: vdl.0 cache connection, 21 calls, total 0.0255823135375977 sec spent, avg 1.22 ms
17.10 16:02:01 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:02:01 -<<-: core/user.isOnlineID ok
17.10 16:02:01 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:02:01 -<<-: core/cache.get ok
17.10 16:02:01 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:02:01 -<<-: core/cache.get ok
17.10 16:02:01 NET: Client login (conid:52292171, id:36, name:uid36)
17.10 16:02:01 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:02:01 -<<-: core/user.loginPost null
17.10 16:02:01 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 16:02:01 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 16:02:06 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
17.10 16:02:06 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:02:06 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:02:06 TIME: tournament.getAvailableTournament 4.26 ms
17.10 16:02:06 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:02:08 ++ NET: uid36 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
17.10 16:02:08 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
17.10 16:02:08 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
17.10 16:02:08 ->>-: vdl/cache.tournament.setGrid { battles => [{ round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
17.10 16:02:08 -<<-: vdl/cache.tournament.setGrid { list => [{ round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 16:02:08 TIME: tournament.grid 0.49 ms
17.10 16:02:08 == NET: uid36 ret: tournament.grid { list => [{ round => 1, player1 => 36, player2 => 37 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 16:02:10 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:02:10 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:02:29 TIMER: Check auto-disconnect...
17.10 16:02:30 STATS: vdl.0 cache, locks:2
17.10 16:03:29 TIMER: Check auto-disconnect...
17.10 16:03:30 STATS: vdl.0 cache, locks:2
17.10 16:03:38 ++ NET: uid36 req: user.logout { messageType => user.logout }
17.10 16:03:38 NET: Client (name:uid36 conid:52292171 TCP) disconnected from vdl.0 (clients:0)
17.10 16:03:38 TRACE: user.logout : No such module: user
17.10 16:03:38 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
17.10 16:03:38 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:03:38 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:03:38 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:03:38 STATS: vdl.0 cache connection, 30 calls, total 0.0353679656982422 sec spent, avg 1.18 ms
17.10 16:03:38 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:03:38 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:03:38 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:03:38 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 16:03:38 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:03:38 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:03:38 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:03:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:03:38 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:03:38 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:04:06 NET: Client (conid:50171674) connected to vdl.0 (clients:1)
17.10 16:04:07 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 16:04:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:04:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:04:07 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:04:07 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:04:07 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:04:07 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:04:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 16:04:07 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:04:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 16:04:07 NET: Client login (conid:50171674, id:36, name:uid36)
17.10 16:04:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:04:07 -<<-: core/user.loginPost { _type => core/user.loginPost }
17.10 16:04:07 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 16:04:07 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 16:04:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:04:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:04:29 TIMER: Check auto-disconnect...
17.10 16:05:31 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
17.10 16:05:31 -<<-: server.login ok
17.10 16:05:31 DB: SELECT * FROM LocalizationStrings
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 TIMER: Starting timer...
17.10 16:05:31 TIMER: Timer running...
17.10 16:05:31 DB: SELECT * FROM GameVars
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
17.10 16:05:31 -<<-: core/quest.getDaily ok
17.10 16:05:31 DB: SELECT * FROM UserAttributeTypes
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM UserVariableTypes
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
17.10 16:05:31 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM ItemGroups
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM Bundles ORDER BY ID
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM BundleItems ORDER BY ID
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 SHOP: loading items...
17.10 16:05:31 ->>-: core/shop.getList { _type => core/shop.getList }
17.10 16:05:31 -<<-: core/shop.getList ok
17.10 16:05:31 SHOP: 0 items loaded (0.001 sec)
17.10 16:05:31 DB: SELECT * FROM EffectAttributeTypes
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM Effects
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 16:05:31 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 16:05:31 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 DB: SELECT * FROM Badges
17.10 16:05:31 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
17.10 16:05:31 -<<-: core/server.query ok
17.10 16:05:31 TIMER: Check auto-disconnect...
17.10 16:05:31 STATS: vdl.0 cache, locks:0
17.10 16:05:31 TIMER: Check auto-disconnect...
17.10 16:05:31 STATS: vdl.0 cache, locks:0
17.10 16:05:31 TIMER: Check auto-disconnect...
17.10 16:05:31 STATS: vdl.0 cache, locks:0
17.10 16:05:31 TIMER: Check auto-disconnect...
17.10 16:05:31 STATS: vdl.0 cache, locks:0
17.10 16:05:31 TIMER: Check auto-disconnect...
17.10 16:05:31 STATS: vdl.0 cache, locks:0
17.10 16:05:31 TIMER: Check auto-disconnect...
17.10 16:05:31 STATS: vdl.0 cache, locks:0
17.10 16:11:58 NET: Client (conid:75419276) connected to vdl.0 (clients:1)
17.10 16:11:59 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 16:11:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:11:59 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:11:59 -<<-: core/server.query ok
17.10 16:11:59 STATS: vdl.0 cache connection, 21 calls, total 0.0391697883605957 sec spent, avg 1.87 ms
17.10 16:11:59 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:11:59 -<<-: core/user.isOnlineID ok
17.10 16:11:59 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:11:59 -<<-: core/cache.get ok
17.10 16:11:59 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:11:59 -<<-: core/cache.get ok
17.10 16:11:59 NET: Client login (conid:75419276, id:36, name:uid36)
17.10 16:11:59 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:11:59 -<<-: core/user.loginPost null
17.10 16:11:59 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 16:11:59 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 16:12:06 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:12:06 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:12:31 TIMER: Check auto-disconnect...
17.10 16:12:31 STATS: vdl.0 cache, locks:2
17.10 16:13:29 ++ NET: uid36 req: user.logout { messageType => user.logout }
17.10 16:13:29 NET: Client (name:uid36 conid:75419276 TCP) disconnected from vdl.0 (clients:0)
17.10 16:13:29 TRACE: user.logout : No such module: user
17.10 16:13:29 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
17.10 16:13:29 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:13:29 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:13:29 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:13:29 STATS: vdl.0 cache connection, 27 calls, total 0.0448915958404541 sec spent, avg 1.66 ms
17.10 16:13:29 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:13:29 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:13:29 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:13:29 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 16:13:29 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:13:29 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:13:29 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:13:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:13:29 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:13:29 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:13:31 TIMER: Check auto-disconnect...
17.10 16:13:31 STATS: vdl.0 cache, locks:0
17.10 16:13:31 TIMER: Check auto-disconnect...
17.10 16:13:31 STATS: vdl.0 cache, locks:0
17.10 16:15:19 NET: Client (conid:38147805) connected to vdl.0 (clients:1)
17.10 16:15:20 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 16:15:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:15:20 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:15:20 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:15:20 STATS: vdl.0 cache connection, 32 calls, total 0.0500996112823486 sec spent, avg 1.57 ms
17.10 16:15:20 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:15:20 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:15:20 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:15:20 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 16:15:20 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:15:20 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 16:15:20 NET: Client login (conid:38147805, id:36, name:uid36)
17.10 16:15:20 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:15:20 -<<-: core/user.loginPost { _type => core/user.loginPost }
17.10 16:15:20 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 16:15:20 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 16:15:26 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:15:26 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:15:31 TIMER: Check auto-disconnect...
17.10 16:15:31 STATS: vdl.0 cache, locks:2
17.10 16:15:31 TIMER: Check auto-disconnect...
17.10 16:15:31 STATS: vdl.0 cache, locks:2
17.10 16:16:52 NET: Client (name:uid36 conid:38147805 TCP) disconnected from vdl.0 (clients:0)
17.10 16:16:52 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:16:52 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:16:52 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:16:52 STATS: vdl.0 cache connection, 38 calls, total 0.0570268630981445 sec spent, avg 1.5 ms
17.10 16:16:52 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:16:52 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:16:52 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:16:52 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 16:16:52 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:16:52 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:16:52 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:16:52 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:16:52 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:16:52 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:17:00 NET: Client (conid:2431590) connected to vdl.0 (clients:1)
17.10 16:17:01 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 16:17:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:17:01 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:17:01 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:17:01 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:17:01 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:17:01 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:17:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 2, id => 36 } }
17.10 16:17:01 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:17:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 36 } }
17.10 16:17:01 NET: Client login (conid:2431590, id:36, name:uid36)
17.10 16:17:01 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:17:01 -<<-: core/user.loginPost { _type => core/user.loginPost }
17.10 16:17:01 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 16:17:01 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 16:17:11 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:17:11 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
17.10 16:17:31 TIMER: Check auto-disconnect...
17.10 16:17:31 STATS: vdl.0 cache, locks:2
17.10 16:17:31 TIMER: Check auto-disconnect...
17.10 16:17:31 STATS: vdl.0 cache, locks:2
17.10 16:18:37 NET: Client (name:uid36 conid:2431590 TCP) disconnected from vdl.0 (clients:0)
17.10 16:18:37 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:18:37 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:18:37 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:18:37 STATS: vdl.0 cache connection, 49 calls, total 0.0632696151733398 sec spent, avg 1.29 ms
17.10 16:18:37 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:18:37 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:18:37 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:18:37 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 16:18:37 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:18:37 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
17.10 16:18:37 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:18:37 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:18:37 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:18:37 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:19:31 TIMER: Check auto-disconnect...
17.10 16:19:31 STATS: vdl.0 cache, locks:0
17.10 16:19:31 TIMER: Check auto-disconnect...
17.10 16:19:31 STATS: vdl.0 cache, locks:0
17.10 16:19:31 TIMER: Check auto-disconnect...
17.10 16:19:31 STATS: vdl.0 cache, locks:0
17.10 16:21:54 NET: Client (conid:16340874) connected to vdl.0 (clients:1)
17.10 16:21:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 16:21:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:21:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:21:55 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:21:55 STATS: vdl.0 cache connection, 54 calls, total 0.06728196144104 sec spent, avg 1.25 ms
17.10 16:21:55 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:21:55 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:21:55 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:21:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 16:21:55 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:21:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 16:21:55 NET: Client login (conid:16340874, id:36, name:uid36)
17.10 16:21:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:21:55 -<<-: core/user.loginPost { _type => core/user.loginPost }
17.10 16:21:55 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 16:21:55 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 16:22:01 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:22:01 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:22:31 TIMER: Check auto-disconnect...
17.10 16:22:31 STATS: vdl.0 cache, locks:2
17.10 16:22:31 TIMER: Check auto-disconnect...
17.10 16:22:31 STATS: vdl.0 cache, locks:2
17.10 16:22:31 TIMER: Check auto-disconnect...
17.10 16:22:31 STATS: vdl.0 cache, locks:2
17.10 16:22:31 TIMER: Check auto-disconnect...
17.10 16:22:31 NET: Client (name:uid36 conid:16340874 TCP) disconnected from vdl.0 (clients:0)
17.10 16:22:31 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:22:31 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:22:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:22:31 STATS: vdl.0 cache connection, 60 calls, total 0.0716099739074707 sec spent, avg 1.19 ms
17.10 16:22:31 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:22:31 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:22:31 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:22:31 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 16:22:31 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:22:31 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:22:31 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:22:31 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:22:31 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:22:31 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:22:31 STATS: vdl.0 cache, locks:0
17.10 16:22:31 TIMER: Check auto-disconnect...
17.10 16:22:31 STATS: vdl.0 cache, locks:0
17.10 16:22:31 TIMER: Check auto-disconnect...
17.10 16:22:31 STATS: vdl.0 cache, locks:0
17.10 16:28:24 NET: Client (conid:67111850) connected to vdl.0 (clients:1)
17.10 16:28:25 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
17.10 16:28:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:28:25 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:28:25 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:28:25 STATS: vdl.0 cache connection, 65 calls, total 0.0750923156738281 sec spent, avg 1.16 ms
17.10 16:28:25 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:28:25 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:28:25 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:28:25 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 16:28:25 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:28:25 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 16:28:25 NET: Client login (conid:67111850, id:36, name:uid36)
17.10 16:28:25 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:28:25 -<<-: core/user.loginPost { _type => core/user.loginPost }
17.10 16:28:25 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
17.10 16:28:25 == NET: uid36 ret: user.join { name => uid36, type => user.join }
17.10 16:28:31 TIMER: Check auto-disconnect...
17.10 16:28:31 STATS: vdl.0 cache, locks:2
17.10 16:28:31 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:28:31 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:28:31 TIMER: Check auto-disconnect...
17.10 16:28:31 STATS: vdl.0 cache, locks:2
17.10 16:29:43 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
17.10 16:29:43 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:29:43 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:29:43 STATS: vdl.0 cache connection, 71 calls, total 0.0818512439727783 sec spent, avg 1.15 ms
17.10 16:29:43 TIME: tournament.getAvailableTournament 3.64 ms
17.10 16:29:43 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:29:48 ++ NET: uid36 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
17.10 16:29:48 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
17.10 16:29:48 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
17.10 16:29:48 ->>-: vdl/cache.tournament.setGrid { battles => [{ round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
17.10 16:29:48 -<<-: vdl/cache.tournament.setGrid { list => [{ round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 16:29:48 TIME: tournament.grid 0.56 ms
17.10 16:29:48 == NET: uid36 ret: tournament.grid { list => [{ round => 1, player1 => 36, player2 => 37 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 16:29:57 ++ NET: uid36 req: battle.find { messageType => battle.find }
17.10 16:29:57 ->>-: vdl/cache.battle.find { _type => vdl/cache.battle.find }
17.10 16:29:57 -<<-: vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
17.10 16:29:57 ->>-: vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
17.10 16:29:57 -<<-: vdl/cache.battle.create { room => 50, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
17.10 16:29:57 TIME: battle.find 358.03 ms
17.10 16:29:57 == NET: uid36 ret: battle.find { room => 50, type => battle.find, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
17.10 16:30:31 TIMER: Check auto-disconnect...
17.10 16:30:31 STATS: vdl.0 cache, locks:2
17.10 16:30:31 TIMER: Check auto-disconnect...
17.10 16:30:31 STATS: vdl.0 cache, locks:2
17.10 16:31:45 ++ NET: uid36 req: battle.end { roomId => 50, scoreSecondPlayer => 0, messageType => battle.end, scoreFirstPlayer => 0 }
17.10 16:31:45 ->>-: vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
17.10 16:31:45 -<<-: vdl/cache.battle.infoRoom { secondId => 0, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
17.10 16:31:45 STATS: vdl.0 cache connection, 76 calls, total 0.440719127655029 sec spent, avg 5.8 ms
17.10 16:31:45 DB: INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 36,0,50,{ scoresSecond => null, scoresFirst => null })
17.10 16:31:45 ->>-: core/server.query { q => INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 36,0,50,{ scoresSecond => null, scoresFirst => null }), _type => core/server.query }
17.10 16:31:45 NET: Client (name:uid36 conid:67111850 TCP) disconnected from vdl.0 (clients:0)
17.10 16:31:45 -<<-: core/server.query { errorCode => ok, _type => core/server.query }
17.10 16:31:45 ->>-: vdl/cache.battle.finishRoom { roomId => 50, _type => vdl/cache.battle.finishRoom }
17.10 16:31:45 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.10 16:31:45 ->>-: vdl/cache.battle.deleteRoom { roomId => 50, _type => vdl/cache.battle.deleteRoom }
17.10 16:31:45 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.10 16:31:45 ->>-: core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { _type => battle.end } }
17.10 16:31:45 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.10 16:31:45 TIME: battle.end 90.23 ms
17.10 16:31:45 ++ NET: uid36 req: user.logout { messageType => user.logout }
17.10 16:31:45 TRACE: user.logout : No such module: user
17.10 16:31:45 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
17.10 16:31:45 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:31:45 == NET: uid36 ret: battle.end { type => battle.end, errorCode => ok }
17.10 16:31:45 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:31:45 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:31:45 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:31:45 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:31:45 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:31:45 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
17.10 16:31:45 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:31:45 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:31:45 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:31:45 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:31:45 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:31:45 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:52:54 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
17.10 16:52:54 -<<-: server.login ok
17.10 16:52:54 DB: SELECT * FROM LocalizationStrings
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 TIMER: Starting timer...
17.10 16:52:54 TIMER: Timer running...
17.10 16:52:54 DB: SELECT * FROM GameVars
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
17.10 16:52:54 -<<-: core/quest.getDaily ok
17.10 16:52:54 DB: SELECT * FROM UserAttributeTypes
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM UserVariableTypes
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
17.10 16:52:54 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM ItemGroups
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM Bundles ORDER BY ID
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM BundleItems ORDER BY ID
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 SHOP: loading items...
17.10 16:52:54 ->>-: core/shop.getList { _type => core/shop.getList }
17.10 16:52:54 -<<-: core/shop.getList ok
17.10 16:52:54 SHOP: 0 items loaded (0 sec)
17.10 16:52:54 DB: SELECT * FROM EffectAttributeTypes
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM Effects
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 16:52:54 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 16:52:54 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 DB: SELECT * FROM Badges
17.10 16:52:54 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
17.10 16:52:54 -<<-: core/server.query ok
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
17.10 16:52:54 TIMER: Check auto-disconnect...
17.10 16:52:54 STATS: vdl.0 cache, locks:0
