10.11 13:00:27 TIMER: Check auto-disconnect...
10.11 13:00:54 STATS: vdl.0 cache, locks:4
10.11 13:01:27 TIMER: Check auto-disconnect...
10.11 13:01:54 STATS: vdl.0 cache, locks:4
10.11 13:02:09 NET: Client (name:uid6 conid:11518379 WS) disconnected from vdl.0 (clients:0)
10.11 13:02:09 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:02:09 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:02:09 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:02:09 STATS: vdl.0 cache connection, 907 calls, total 0.689168930053711 sec spent, avg 0.76 ms
10.11 13:02:09 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:02:09 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 13:02:09 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:02:09 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 13:02:09 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:02:09 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:02:09 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:02:09 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:02:09 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:02:09 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:02:20 NET: Client (conid:28601612) connected to vdl.0 (clients:1)
10.11 13:02:20 NET: Client (conid:28601612) switched protocol to WS
10.11 13:02:21 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:02:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:02:21 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:02:21 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:02:21 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:02:21 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:02:21 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:02:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 0, id => 6 } }
10.11 13:02:21 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:02:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 6 } }
10.11 13:02:21 NET: Client login (conid:28601612, id:6, name:uid6)
10.11 13:02:21 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:02:21 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:02:21 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:02:21 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:02:21 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:02:21 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:02:21 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:02:25 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:02:25 TIME: user.ping 0.11 ms
10.11 13:02:25 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:02:27 TIMER: Check auto-disconnect...
10.11 13:02:29 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 6, _type => core/cache.update }
10.11 13:02:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:02:32 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:02:32 TIME: user.ping 0.12 ms
10.11 13:02:32 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:02:38 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:02:38 TIME: user.ping 0.12 ms
10.11 13:02:38 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:02:44 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:02:44 TIME: user.ping 0.12 ms
10.11 13:02:44 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:02:50 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:02:50 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:02:50 TIME: user.ping 0.16 ms
10.11 13:02:54 STATS: vdl.0 cache, locks:4
10.11 13:02:56 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:02:56 TIME: user.ping 0.13 ms
10.11 13:02:56 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:02 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:02 TIME: user.ping 0.13 ms
10.11 13:03:02 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:07 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:07 TIME: user.ping 0.13 ms
10.11 13:03:07 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:13 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:13 TIME: user.ping 0.12 ms
10.11 13:03:13 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:19 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:19 TIME: user.ping 0.12 ms
10.11 13:03:19 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:24 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:24 TIME: user.ping 0.12 ms
10.11 13:03:24 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:27 TIMER: Check auto-disconnect...
10.11 13:03:31 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:31 TIME: user.ping 0.13 ms
10.11 13:03:31 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:37 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:37 TIME: user.ping 0.14 ms
10.11 13:03:37 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:45 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:45 TIME: user.ping 0.13 ms
10.11 13:03:45 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:51 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:51 TIME: user.ping 0.14 ms
10.11 13:03:51 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:03:54 STATS: vdl.0 cache, locks:4
10.11 13:03:57 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:03:57 TIME: user.ping 0.14 ms
10.11 13:03:57 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:04:03 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:04:03 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:04:03 TIME: user.ping 0.13 ms
10.11 13:04:10 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:04:10 TIME: user.ping 0.11 ms
10.11 13:04:10 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:04:27 TIMER: Check auto-disconnect...
10.11 13:04:31 NET: Client (name:uid6 conid:28601612 WS) disconnected from vdl.0 (clients:0)
10.11 13:04:31 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:04:31 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:04:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:04:31 STATS: vdl.0 cache connection, 919 calls, total 0.695728778839111 sec spent, avg 0.76 ms
10.11 13:04:31 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:04:31 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 13:04:31 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:04:31 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 13:04:31 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:04:31 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:04:31 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:04:31 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:04:31 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:04:31 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:04:45 NET: Client (conid:82008143) connected to vdl.0 (clients:1)
10.11 13:04:45 NET: Client (conid:82008143) switched protocol to WS
10.11 13:04:46 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:04:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:04:46 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:04:46 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:04:46 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:04:46 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:04:46 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:04:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 0, id => 6 } }
10.11 13:04:46 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:04:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 6 } }
10.11 13:04:46 NET: Client login (conid:82008143, id:6, name:uid6)
10.11 13:04:46 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:04:46 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:04:46 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:04:46 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:04:46 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:04:46 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:04:46 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:04:49 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:04:49 TIME: user.ping 0.13 ms
10.11 13:04:49 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:04:54 STATS: vdl.0 cache, locks:4
10.11 13:04:54 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 6, _type => core/cache.update }
10.11 13:04:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:04:57 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:04:57 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:04:57 TIME: user.ping 0.11 ms
10.11 13:05:04 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:05:04 TIME: user.ping 0.15 ms
10.11 13:05:04 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:05:11 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:05:11 TIME: user.ping 0.13 ms
10.11 13:05:11 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:05:18 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:05:18 TIME: user.ping 0.13 ms
10.11 13:05:18 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:05:25 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:05:25 TIME: user.ping 0.15 ms
10.11 13:05:25 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:05:27 TIMER: Check auto-disconnect...
10.11 13:05:32 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:05:32 TIME: user.ping 0.12 ms
10.11 13:05:32 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:05:40 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:05:40 TIME: user.ping 0.12 ms
10.11 13:05:40 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:05:47 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:05:47 TIME: user.ping 0.13 ms
10.11 13:05:47 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:05:54 STATS: vdl.0 cache, locks:4
10.11 13:05:54 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:05:54 TIME: user.ping 0.12 ms
10.11 13:05:54 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:06:01 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:06:01 TIME: user.ping 0.13 ms
10.11 13:06:01 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:06:08 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:06:08 TIME: user.ping 0.15 ms
10.11 13:06:08 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:06:22 NET: Client (name:uid6 conid:82008143 WS) disconnected from vdl.0 (clients:0)
10.11 13:06:22 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:06:22 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:06:22 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:06:22 STATS: vdl.0 cache connection, 931 calls, total 0.703003883361816 sec spent, avg 0.76 ms
10.11 13:06:22 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:06:22 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 13:06:22 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:06:22 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 13:06:22 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:06:22 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:06:22 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:06:22 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:06:22 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:06:22 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:06:27 TIMER: Check auto-disconnect...
10.11 13:06:34 NET: Client (conid:20372793) connected to vdl.0 (clients:1)
10.11 13:06:34 NET: Client (conid:20372793) switched protocol to WS
10.11 13:06:35 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:06:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:06:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:06:35 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:06:35 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:06:35 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:06:35 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:06:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 0, id => 6 } }
10.11 13:06:35 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:06:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 6 } }
10.11 13:06:35 NET: Client login (conid:20372793, id:6, name:uid6)
10.11 13:06:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:06:35 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:06:35 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:06:35 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:06:35 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:06:35 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:06:35 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:06:38 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:06:38 TIME: user.ping 0.15 ms
10.11 13:06:38 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:06:44 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 6, _type => core/cache.update }
10.11 13:06:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:06:46 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:06:46 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:06:46 TIME: user.ping 0.11 ms
10.11 13:06:52 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:06:52 TIME: user.ping 2.55 ms
10.11 13:06:52 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:06:54 STATS: vdl.0 cache, locks:4
10.11 13:07:00 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:07:00 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:07:00 TIME: user.ping 0.16 ms
10.11 13:07:08 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:07:08 TIME: user.ping 0.13 ms
10.11 13:07:08 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:07:16 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:07:16 TIME: user.ping 0.14 ms
10.11 13:07:16 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:07:23 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:07:23 TIME: user.ping 0.16 ms
10.11 13:07:23 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:07:27 TIMER: Check auto-disconnect...
10.11 13:07:29 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:07:29 TIME: user.ping 0.11 ms
10.11 13:07:29 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:07:35 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:07:35 TIME: user.ping 0.12 ms
10.11 13:07:35 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:07:41 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:07:41 TIME: user.ping 0.11 ms
10.11 13:07:41 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:07:47 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:07:47 TIME: user.ping 0.13 ms
10.11 13:07:47 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:07:54 STATS: vdl.0 cache, locks:4
10.11 13:07:57 NET: Client (name:uid6 conid:20372793 WS) disconnected from vdl.0 (clients:0)
10.11 13:07:57 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:07:57 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:07:57 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:07:57 STATS: vdl.0 cache connection, 943 calls, total 0.70845365524292 sec spent, avg 0.75 ms
10.11 13:07:57 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:07:57 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 13:07:57 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:07:57 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 13:07:57 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:07:57 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:07:57 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:07:57 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:07:57 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:07:57 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:08:08 NET: Client (conid:49471638) connected to vdl.0 (clients:1)
10.11 13:08:08 NET: Client (conid:49471638) switched protocol to WS
10.11 13:08:09 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:08:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:08:09 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:08:09 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:08:09 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:08:09 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:08:09 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:08:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 0, id => 6 } }
10.11 13:08:09 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:08:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 6 } }
10.11 13:08:09 NET: Client login (conid:49471638, id:6, name:uid6)
10.11 13:08:09 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:08:09 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:08:09 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:08:09 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:08:09 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:08:09 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:08:09 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:08:13 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:08:13 TIME: user.ping 0.17 ms
10.11 13:08:13 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:08:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 6, _type => core/cache.update }
10.11 13:08:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:08:20 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:08:20 TIME: user.ping 2.38 ms
10.11 13:08:20 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:08:26 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:08:26 TIME: user.ping 0.12 ms
10.11 13:08:26 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:08:27 TIMER: Check auto-disconnect...
10.11 13:08:32 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:08:32 TIME: user.ping 0.12 ms
10.11 13:08:32 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:08:38 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:08:38 TIME: user.ping 0.13 ms
10.11 13:08:38 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:08:45 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:08:45 TIME: user.ping 0.15 ms
10.11 13:08:45 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:08:53 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:08:53 TIME: user.ping 0.12 ms
10.11 13:08:53 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:08:54 STATS: vdl.0 cache, locks:4
10.11 13:08:59 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:08:59 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:08:59 TIME: user.ping 0.19 ms
10.11 13:09:06 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:09:06 TIME: user.ping 0.14 ms
10.11 13:09:06 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:09:13 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:09:13 TIME: user.ping 0.14 ms
10.11 13:09:13 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:09:24 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:09:24 TIME: user.ping 0.13 ms
10.11 13:09:24 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:09:27 TIMER: Check auto-disconnect...
10.11 13:09:35 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:09:35 TIME: user.ping 0.16 ms
10.11 13:09:35 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:09:54 STATS: vdl.0 cache, locks:4
10.11 13:10:03 NET: Client (name:uid6 conid:49471638 WS) disconnected from vdl.0 (clients:0)
10.11 13:10:03 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:10:03 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:10:03 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:10:03 STATS: vdl.0 cache connection, 955 calls, total 0.714422225952148 sec spent, avg 0.75 ms
10.11 13:10:03 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:10:03 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 13:10:03 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:10:03 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 13:10:03 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:10:03 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:10:03 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:10:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:10:03 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:10:03 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:10:15 NET: Client (conid:62018584) connected to vdl.0 (clients:1)
10.11 13:10:15 NET: Client (conid:62018584) switched protocol to WS
10.11 13:10:17 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:10:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:10:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:10:17 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:10:17 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:10:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:10:17 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:10:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 0, id => 6 } }
10.11 13:10:17 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:10:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 6 } }
10.11 13:10:17 NET: Client login (conid:62018584, id:6, name:uid6)
10.11 13:10:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:10:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:10:17 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:10:17 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:10:17 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:10:17 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:10:17 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:10:19 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:10:19 TIME: user.ping 0.15 ms
10.11 13:10:19 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:10:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 6, _type => core/cache.update }
10.11 13:10:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:10:26 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:10:26 TIME: user.ping 0.12 ms
10.11 13:10:26 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:10:27 TIMER: Check auto-disconnect...
10.11 13:10:32 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:10:32 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:10:32 TIME: user.ping 0.21 ms
10.11 13:10:38 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:10:38 TIME: user.ping 0.11 ms
10.11 13:10:38 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:10:40 NET: Client (name:uid6 conid:62018584 WS) disconnected from vdl.0 (clients:0)
10.11 13:10:40 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:10:40 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:10:40 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:10:40 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:10:40 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 13:10:40 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:10:40 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 13:10:40 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:10:40 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:10:40 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:10:40 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:10:40 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:10:40 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:10:54 STATS: vdl.0 cache, locks:2
10.11 13:11:27 TIMER: Check auto-disconnect...
10.11 13:11:54 STATS: vdl.0 cache, locks:2
10.11 13:12:27 TIMER: Check auto-disconnect...
10.11 13:12:54 STATS: vdl.0 cache, locks:2
10.11 13:13:27 TIMER: Check auto-disconnect...
10.11 13:13:54 STATS: vdl.0 cache, locks:2
10.11 13:14:27 TIMER: Check auto-disconnect...
10.11 13:14:54 STATS: vdl.0 cache, locks:2
10.11 13:15:27 TIMER: Check auto-disconnect...
10.11 13:15:54 STATS: vdl.0 cache, locks:2
10.11 13:16:27 TIMER: Check auto-disconnect...
10.11 13:16:54 STATS: vdl.0 cache, locks:2
10.11 13:17:27 TIMER: Check auto-disconnect...
10.11 13:17:54 STATS: vdl.0 cache, locks:2
10.11 13:18:27 TIMER: Check auto-disconnect...
10.11 13:18:54 STATS: vdl.0 cache, locks:2
10.11 13:19:27 TIMER: Check auto-disconnect...
10.11 13:19:54 STATS: vdl.0 cache, locks:2
10.11 13:20:27 TIMER: Check auto-disconnect...
10.11 13:20:54 STATS: vdl.0 cache, locks:2
10.11 13:21:27 TIMER: Check auto-disconnect...
10.11 13:21:54 STATS: vdl.0 cache, locks:2
10.11 13:22:27 TIMER: Check auto-disconnect...
10.11 13:22:54 STATS: vdl.0 cache, locks:2
10.11 13:23:27 TIMER: Check auto-disconnect...
10.11 13:23:54 STATS: vdl.0 cache, locks:2
10.11 13:24:27 TIMER: Check auto-disconnect...
10.11 13:24:54 STATS: vdl.0 cache, locks:2
10.11 13:25:27 TIMER: Check auto-disconnect...
10.11 13:25:54 STATS: vdl.0 cache, locks:2
10.11 13:26:27 TIMER: Check auto-disconnect...
10.11 13:26:54 STATS: vdl.0 cache, locks:2
10.11 13:27:27 TIMER: Check auto-disconnect...
10.11 13:27:54 STATS: vdl.0 cache, locks:2
10.11 13:28:27 TIMER: Check auto-disconnect...
10.11 13:28:54 STATS: vdl.0 cache, locks:2
10.11 13:29:27 TIMER: Check auto-disconnect...
10.11 13:29:54 STATS: vdl.0 cache, locks:2
10.11 13:30:27 TIMER: Check auto-disconnect...
10.11 13:30:54 STATS: vdl.0 cache, locks:2
10.11 13:31:27 TIMER: Check auto-disconnect...
10.11 13:31:54 STATS: vdl.0 cache, locks:2
10.11 13:32:27 TIMER: Check auto-disconnect...
10.11 13:32:48 NET: Client (conid:43699026) connected to vdl.0 (clients:1)
10.11 13:32:48 NET: Client (conid:43699026) switched protocol to WS
10.11 13:32:51 ++ NET: null req: user.register { messageType => user.register }
10.11 13:32:51 DB: SELECT * FROM users
10.11 13:32:51 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
10.11 13:32:51 -<<-: core/server.query { list => {{ city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-10 11:48:59.9391+00, language =>   , id => 1, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478779175,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, language => en, id => 2, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:08:05.144895+00, language =>   , id => 3, deleted => false }, { city => , password => uid4, name => uid4, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:24:23.638304+00, language =>   , id => 4, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:28:38.741567+00, language =>   , id => 5, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478782560,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, language => en, id => 6, deleted => false }}, errorCode => ok, _type => core/server.query }
10.11 13:32:51 STATS: vdl.0 cache connection, 972 calls, total 0.721888065338135 sec spent, avg 0.74 ms
10.11 13:32:51 == NET: null ret: user.auth { type => user.auth, token => dWlkNw== }
10.11 13:32:51 DB: SELECT ID FROM Users WHERE Name = 'uid7'
10.11 13:32:51 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid7', _type => core/server.query }
10.11 13:32:51 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:32:51 DB: SELECT nextval('Users_id_seq') AS id
10.11 13:32:51 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
10.11 13:32:51 -<<-: core/server.query { list => {{ id => 7 }}, errorCode => ok, _type => core/server.query }
10.11 13:32:51 ->>-: core/user.register { password => uid7, name => uid7, fullParams => { password => uid7, name => uid7, networkid => , networktype => , messageType => user.register, id => 7 }, networkid => , connectionID => 43699026, networktype => , email => , id => 7, _type => core/user.register }
10.11 13:32:51 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
10.11 13:32:51 -<<-: core/user.registerResponse { password => uid7, name => uid7, _isNotify => true, fullParams => { password => uid7, name => uid7, networkid => , networktype => , messageType => user.register, id => 7 }, networkid => , connectionID => 43699026, networktype => , email => , id => 7, _type => core/user.registerResponse }
10.11 13:32:51 DB: SELECT token FROM tokens WHERE userid = 7
10.11 13:32:51 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 7, _type => core/server.query }
10.11 13:32:51 -<<-: core/server.query { list => {{ token => afd841dc17a2ac26a7313f8d3ae9b980 }, { token => ae1ce022a7bb25e5cb8b7a7e4cf6db2b }}, errorCode => ok, _type => core/server.query }
10.11 13:32:51 == NET: null ret: user.register { type => user.register, errorCode => ok, token => afd841dc17a2ac26a7313f8d3ae9b980 }
10.11 13:32:51 ++ NET: null req: user.login { messageType => user.login, token => dWlkNw== }
10.11 13:32:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid7' AND Password = 'uid7'
10.11 13:32:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid7' AND Password = 'uid7', _type => core/server.query }
10.11 13:32:51 -<<-: core/server.query { list => {{ name => uid7, networkid => , isbanned => false, id => 7 }}, errorCode => ok, _type => core/server.query }
10.11 13:32:51 ->>-: core/user.isOnlineID { id => 7, _type => core/user.isOnlineID }
10.11 13:32:51 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:32:51 ->>-: core/cache.get { type => user, v => -1, id => 7, _type => core/cache.get }
10.11 13:32:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid7, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid7, isbanned => false, regdate => 2016-11-10 13:32:51.765479+00, city => 1, language =>   , region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, hints => 15 }, effects => { list => [] } }}, version => 19, id => 7 } }
10.11 13:32:51 ->>-: core/cache.get { type => questdata, v => -1, id => 7, _type => core/cache.get }
10.11 13:32:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 7 } }
10.11 13:32:51 NET: Client login (conid:43699026, id:7, name:uid7)
10.11 13:32:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 7, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:32:51 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:32:51 DB: SELECT token FROM tokens WHERE userid = 7
10.11 13:32:51 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 7, _type => core/server.query }
10.11 13:32:51 -<<-: core/server.query { list => {{ token => afd841dc17a2ac26a7313f8d3ae9b980 }, { token => ae1ce022a7bb25e5cb8b7a7e4cf6db2b }}, errorCode => ok, _type => core/server.query }
10.11 13:32:51 DB: SELECT ID FROM TempUserLogins WHERE UserID = 7 AND Date = 'today'::timestamp
10.11 13:32:51 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 7 AND Date = 'today'::timestamp, _type => core/server.query }
10.11 13:32:51 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:32:51 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (7, 'today'::timestamp)
10.11 13:32:51 == NET: uid7 ret: user.login { name => uid7, type => user.login, errorCode => ok, id => 7, token => afd841dc17a2ac26a7313f8d3ae9b980 }
10.11 13:32:51 == NET: uid7 ret: user.join { name => uid7, type => user.join }
10.11 13:32:52 ++ NET: uid7 req: user.login { messageType => user.login, token => dWlkNw== }
10.11 13:32:52 DB: SELECT id FROM battle WHERE firstid=7 OR secondid=7 AND finished <> true
10.11 13:32:52 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=7 OR secondid=7 AND finished <> true, _type => core/server.query, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (7, 'today'::timestamp), _type => core/server.pending }} }
10.11 13:32:52 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:32:52 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:32:52 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 13:32:52 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:32:52 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 13:32:52 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478784771, lastLoginDate => 315, lastLoadDate => 1111 } }}, type => user, unlock => true, id => 7, _type => core/cache.update }
10.11 13:32:52 -<<-: core/cache.update { errorCode => ok, version => 20, _type => core/cache.update }
10.11 13:32:52 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 7, _type => core/cache.update }
10.11 13:32:52 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:32:52 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 7, _type => core/user.logoutPost }
10.11 13:32:52 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:32:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid7' AND Password = 'uid7'
10.11 13:32:52 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid7' AND Password = 'uid7', _type => core/server.query }
10.11 13:32:52 -<<-: core/server.query { list => {{ name => uid7, networkid => , isbanned => false, id => 7 }}, errorCode => ok, _type => core/server.query }
10.11 13:32:52 ->>-: core/user.isOnlineID { id => 7, _type => core/user.isOnlineID }
10.11 13:32:52 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:32:52 ->>-: core/cache.get { type => user, v => -1, id => 7, _type => core/cache.get }
10.11 13:32:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid7, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid7, isbanned => false, regdate => 2016-11-10 13:32:51.765479+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1478784771, lastLoginDate => 315, lastLoadDate => 1111, hints => 15 }, effects => { list => [] } }}, version => 20, id => 7 } }
10.11 13:32:52 ->>-: core/cache.get { type => questdata, v => -1, id => 7, _type => core/cache.get }
10.11 13:32:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 7 } }
10.11 13:32:52 NET: Client login (conid:43699026, id:7, name:uid7)
10.11 13:32:52 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 7, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:32:52 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:32:52 DB: SELECT token FROM tokens WHERE userid = 7
10.11 13:32:52 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 7, _type => core/server.query }
10.11 13:32:52 -<<-: core/server.query { list => {{ token => afd841dc17a2ac26a7313f8d3ae9b980 }, { token => ae1ce022a7bb25e5cb8b7a7e4cf6db2b }}, errorCode => ok, _type => core/server.query }
10.11 13:32:54 STATS: vdl.0 cache, locks:4
10.11 13:32:57 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:32:57 TIME: user.ping 0.11 ms
10.11 13:32:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 7, _type => core/cache.update }
10.11 13:32:59 -<<-: core/cache.update { errorCode => ok, version => 21, _type => core/cache.update }
10.11 13:33:17 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:33:17 TIME: user.ping 0.12 ms
10.11 13:33:27 TIMER: Check auto-disconnect...
10.11 13:33:37 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:33:37 TIME: user.ping 0.1 ms
10.11 13:33:54 STATS: vdl.0 cache, locks:4
10.11 13:33:57 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:33:57 TIME: user.ping 0.11 ms
10.11 13:34:17 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:34:17 TIME: user.ping 0.11 ms
10.11 13:34:27 TIMER: Check auto-disconnect...
10.11 13:34:37 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:34:37 TIME: user.ping 0.17 ms
10.11 13:34:54 STATS: vdl.0 cache, locks:4
10.11 13:34:57 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:34:57 TIME: user.ping 0.12 ms
10.11 13:35:17 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:35:17 TIME: user.ping 0.12 ms
10.11 13:35:27 TIMER: Check auto-disconnect...
10.11 13:35:37 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:35:37 TIME: user.ping 0.18 ms
10.11 13:35:54 STATS: vdl.0 cache, locks:4
10.11 13:35:57 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:35:57 TIME: user.ping 0.12 ms
10.11 13:36:17 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:36:17 TIME: user.ping 0.12 ms
10.11 13:36:27 TIMER: Check auto-disconnect...
10.11 13:36:37 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:36:37 TIME: user.ping 0.11 ms
10.11 13:36:54 STATS: vdl.0 cache, locks:4
10.11 13:36:57 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:36:57 TIME: user.ping 0.16 ms
10.11 13:37:17 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:37:17 TIME: user.ping 0.16 ms
10.11 13:37:27 TIMER: Check auto-disconnect...
10.11 13:37:37 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:37:37 TIME: user.ping 0.13 ms
10.11 13:37:54 STATS: vdl.0 cache, locks:4
10.11 13:37:57 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:37:57 TIME: user.ping 0.11 ms
10.11 13:38:17 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:38:17 TIME: user.ping 0.11 ms
10.11 13:38:24 ++ NET: uid7 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
10.11 13:38:24 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 7 }, _type => vdl/cache.battle.findRandom }
10.11 13:38:24 -<<-: vdl/cache.battle.findRandom { errorCode => _requestException, _type => vdl/cache.battle.findRandom }
10.11 13:38:24 STATS: vdl.0 cache connection, 996 calls, total 0.750905275344849 sec spent, avg 0.75 ms
10.11 13:38:24 TRACE: battle.find : cacheRequest exception { user => { time => 60, player => 7 }, _type => vdl/cache.battle.findRandom }
10.11 13:38:24 TRACE: battle.find : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 221
Called from modules/VDLBattleModule.hx line 170
Called from modules/VDLBattleModule.hx line 58
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1225
10.11 13:38:27 TIMER: Check auto-disconnect...
10.11 13:38:38 ++ NET: uid7 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:38:38 TIME: user.ping 0.12 ms
10.11 13:38:54 STATS: vdl.0 cache, locks:4
10.11 13:39:27 TIMER: Check auto-disconnect...
10.11 13:39:54 STATS: vdl.0 cache, locks:4
10.11 13:40:27 TIMER: Check auto-disconnect...
10.11 13:40:50 NET: Client (conid:21131752) connected to vdl.0 (clients:2)
10.11 13:40:50 NET: Client (conid:21131752) switched protocol to WS
10.11 13:40:51 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:40:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:40:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:40:51 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:40:51 STATS: vdl.0 cache connection, 997 calls, total 0.752589464187622 sec spent, avg 0.75 ms
10.11 13:40:51 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:40:51 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:40:51 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:40:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 0, id => 6 } }
10.11 13:40:51 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:40:51 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 6 } }
10.11 13:40:51 NET: Client login (conid:21131752, id:6, name:uid6)
10.11 13:40:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:40:51 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:40:51 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:40:51 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:40:51 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:40:51 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:40:51 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:40:54 STATS: vdl.0 cache, locks:6
10.11 13:40:54 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:40:54 TIME: user.ping 0.12 ms
10.11 13:40:54 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:40:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 6, _type => core/cache.update }
10.11 13:40:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:41:02 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:41:02 TIME: user.ping 0.11 ms
10.11 13:41:02 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:41:09 ++ NET: uid6 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
10.11 13:41:09 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 6 }, _type => vdl/cache.battle.findRandom }
10.11 13:41:09 -<<-: vdl/cache.battle.findRandom { errorCode => _requestException, _type => vdl/cache.battle.findRandom }
10.11 13:41:09 TRACE: battle.find : cacheRequest exception { user => { time => 60, player => 6 }, _type => vdl/cache.battle.findRandom }
10.11 13:41:09 TRACE: battle.find : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 221
Called from modules/VDLBattleModule.hx line 170
Called from modules/VDLBattleModule.hx line 58
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1225
10.11 13:41:10 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:41:10 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:41:10 TIME: user.ping 0.15 ms
10.11 13:41:17 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:41:17 TIME: user.ping 0.14 ms
10.11 13:41:17 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:41:24 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:41:24 TIME: user.ping 0.12 ms
10.11 13:41:24 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:41:27 TIMER: Check auto-disconnect...
10.11 13:41:32 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:41:32 TIME: user.ping 0.14 ms
10.11 13:41:32 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:41:54 STATS: vdl.0 cache, locks:6
10.11 13:42:27 TIMER: Check auto-disconnect...
10.11 13:42:54 STATS: vdl.0 cache, locks:6
10.11 13:43:27 TIMER: Check auto-disconnect...
10.11 13:43:54 STATS: vdl.0 cache, locks:6
10.11 13:44:27 TIMER: Check auto-disconnect...
10.11 13:44:54 STATS: vdl.0 cache, locks:6
10.11 13:45:27 TIMER: Check auto-disconnect...
10.11 13:45:45 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:45:45 TIME: user.ping 0.17 ms
10.11 13:45:45 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:45:54 STATS: vdl.0 cache, locks:6
10.11 13:46:25 NET: Client (name:uid6 conid:21131752 WS) disconnected from vdl.0 (clients:1)
10.11 13:46:25 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:46:25 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:46:25 -<<-: core/server.query { list => {{ id => 3 }}, errorCode => ok, _type => core/server.query }
10.11 13:46:25 STATS: vdl.0 cache connection, 1005 calls, total 0.763157606124878 sec spent, avg 0.76 ms
10.11 13:46:25 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
10.11 13:46:25 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 6, _type => vdl/cache.battle.infoRoom, turnId => 6 }
10.11 13:46:25 ->>-: vdl/cache.battle.deleteRoom { roomId => 3, _type => vdl/cache.battle.deleteRoom }
10.11 13:46:25 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
10.11 13:46:25 ->>-: vdl/cache.battle.finishRoom { roomId => 3, _type => vdl/cache.battle.finishRoom }
10.11 13:46:25 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
10.11 13:46:25 ->>-: core/user.sendTo { id => 19, _type => core/user.sendTo, msg => { _type => battle.leave } }
10.11 13:46:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
10.11 13:46:25 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:46:25 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:46:25 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:46:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:46:25 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:46:25 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:46:27 TIMER: Check auto-disconnect...
10.11 13:46:54 NET: Client (conid:8631347) connected to vdl.0 (clients:2)
10.11 13:46:54 NET: Client (conid:8631347) switched protocol to WS
10.11 13:46:54 STATS: vdl.0 cache, locks:4
10.11 13:46:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:46:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:46:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:46:55 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:46:55 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:46:55 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:46:55 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:46:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 0, id => 6 } }
10.11 13:46:55 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:46:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 6 } }
10.11 13:46:55 NET: Client login (conid:8631347, id:6, name:uid6)
10.11 13:46:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:46:55 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:46:55 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:46:55 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:46:55 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:46:55 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:46:55 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:46:58 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:46:58 TIME: user.ping 0.14 ms
10.11 13:46:58 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:47:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 6, _type => core/cache.update }
10.11 13:47:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:47:06 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:47:06 TIME: user.ping 0.09 ms
10.11 13:47:06 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:47:13 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:47:13 TIME: user.ping 0.13 ms
10.11 13:47:13 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:47:21 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:47:21 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:47:21 TIME: user.ping 0.3 ms
10.11 13:47:27 TIMER: Check auto-disconnect...
10.11 13:47:28 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:47:28 TIME: user.ping 0.17 ms
10.11 13:47:28 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:47:36 ++ NET: uid6 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
10.11 13:47:36 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 6 }, _type => vdl/cache.battle.findRandom }
10.11 13:47:36 -<<-: vdl/cache.battle.findRandom { errorCode => _requestException, _type => vdl/cache.battle.findRandom }
10.11 13:47:36 STATS: vdl.0 cache connection, 1020 calls, total 0.777818441390991 sec spent, avg 0.76 ms
10.11 13:47:36 TRACE: battle.find : cacheRequest exception { user => { time => 60, player => 6 }, _type => vdl/cache.battle.findRandom }
10.11 13:47:36 TRACE: battle.find : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 221
Called from modules/VDLBattleModule.hx line 170
Called from modules/VDLBattleModule.hx line 58
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1225
10.11 13:47:37 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:47:37 TIME: user.ping 0.11 ms
10.11 13:47:37 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:47:43 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:47:43 TIME: user.ping 0.13 ms
10.11 13:47:43 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:47:49 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:47:49 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:47:49 TIME: user.ping 0.12 ms
10.11 13:47:54 STATS: vdl.0 cache, locks:6
10.11 13:47:55 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:47:55 TIME: user.ping 0.12 ms
10.11 13:47:55 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:01 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:01 TIME: user.ping 0.11 ms
10.11 13:48:01 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:08 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:08 TIME: user.ping 0.12 ms
10.11 13:48:08 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:14 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:14 TIME: user.ping 0.14 ms
10.11 13:48:14 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:22 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:22 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:22 TIME: user.ping 0.22 ms
10.11 13:48:27 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:27 TIME: user.ping 0.13 ms
10.11 13:48:27 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:27 TIMER: Check auto-disconnect...
10.11 13:48:34 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:34 TIME: user.ping 0.13 ms
10.11 13:48:34 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:40 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:40 TIME: user.ping 0.11 ms
10.11 13:48:40 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:47 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:47 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:48:47 TIME: user.ping 0.18 ms
10.11 13:48:54 STATS: vdl.0 cache, locks:6
10.11 13:48:56 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:48:56 TIME: user.ping 0.15 ms
10.11 13:48:56 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:49:27 TIMER: Check auto-disconnect...
10.11 13:49:54 STATS: vdl.0 cache, locks:6
10.11 13:50:02 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:02 TIME: user.ping 0.15 ms
10.11 13:50:02 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:50:08 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:08 TIME: user.ping 0.13 ms
10.11 13:50:08 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:50:15 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:15 TIME: user.ping 0.14 ms
10.11 13:50:15 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:50:22 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:22 TIME: user.ping 0.12 ms
10.11 13:50:22 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:50:27 TIMER: Check auto-disconnect...
10.11 13:50:29 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:29 TIME: user.ping 0.12 ms
10.11 13:50:29 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:50:36 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:36 TIME: user.ping 0.13 ms
10.11 13:50:36 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:50:43 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:43 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:50:43 TIME: user.ping 0.12 ms
10.11 13:50:50 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:50 TIME: user.ping 0.14 ms
10.11 13:50:50 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:50:54 STATS: vdl.0 cache, locks:6
10.11 13:50:57 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:50:57 TIME: user.ping 0.13 ms
10.11 13:50:57 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:51:03 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:51:03 TIME: user.ping 0.11 ms
10.11 13:51:03 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:51:27 TIMER: Check auto-disconnect...
10.11 13:51:54 STATS: vdl.0 cache, locks:6
10.11 13:52:27 TIMER: Check auto-disconnect...
10.11 13:52:54 STATS: vdl.0 cache, locks:6
10.11 13:53:27 TIMER: Check auto-disconnect...
10.11 13:53:54 STATS: vdl.0 cache, locks:6
10.11 13:54:27 TIMER: Check auto-disconnect...
10.11 13:54:35 NET: Client (name:uid6 conid:8631347 WS) disconnected from vdl.0 (clients:1)
10.11 13:54:35 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:54:35 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:54:35 -<<-: core/server.query { list => {{ id => 4 }}, errorCode => ok, _type => core/server.query }
10.11 13:54:35 STATS: vdl.0 cache connection, 1021 calls, total 0.778623342514038 sec spent, avg 0.76 ms
10.11 13:54:35 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
10.11 13:54:35 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 6, _type => vdl/cache.battle.infoRoom, turnId => 6 }
10.11 13:54:35 ->>-: vdl/cache.battle.deleteRoom { roomId => 4, _type => vdl/cache.battle.deleteRoom }
10.11 13:54:35 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
10.11 13:54:35 ->>-: vdl/cache.battle.finishRoom { roomId => 4, _type => vdl/cache.battle.finishRoom }
10.11 13:54:35 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
10.11 13:54:35 ->>-: core/user.sendTo { id => 19, _type => core/user.sendTo, msg => { _type => battle.leave } }
10.11 13:54:35 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
10.11 13:54:35 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:54:35 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:54:35 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:54:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:54:35 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:54:35 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:54:48 NET: Client (conid:89885778) connected to vdl.0 (clients:2)
10.11 13:54:48 NET: Client (conid:89885778) switched protocol to WS
10.11 13:54:49 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:54:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:54:49 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:54:49 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:54:49 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:54:49 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:54:49 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:54:49 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 0, id => 6 } }
10.11 13:54:49 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:54:49 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 6 } }
10.11 13:54:49 NET: Client login (conid:89885778, id:6, name:uid6)
10.11 13:54:49 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:54:49 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:54:49 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:54:49 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:54:49 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:54:49 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:54:49 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:54:50 NET: Client (name:uid6 conid:89885778 WS) disconnected from vdl.0 (clients:1)
10.11 13:54:50 DB: SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true
10.11 13:54:50 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=6 OR secondid=6 AND finished <> true, _type => core/server.query }
10.11 13:54:50 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.11 13:54:50 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:54:50 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.11 13:54:50 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.11 13:54:50 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
10.11 13:54:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 6, _type => core/cache.update }
10.11 13:54:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:54:50 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 6, _type => core/cache.update }
10.11 13:54:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.11 13:54:50 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 6, _type => core/user.logoutPost }
10.11 13:54:50 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.11 13:54:54 STATS: vdl.0 cache, locks:4
10.11 13:55:01 NET: Client (conid:36623814) connected to vdl.0 (clients:2)
10.11 13:55:01 NET: Client (conid:36623814) switched protocol to WS
10.11 13:55:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkNg== }
10.11 13:55:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6'
10.11 13:55:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid6' AND Password = 'uid6', _type => core/server.query }
10.11 13:55:02 -<<-: core/server.query { list => {{ name => uid6, networkid => , isbanned => false, id => 6 }}, errorCode => ok, _type => core/server.query }
10.11 13:55:02 ->>-: core/user.isOnlineID { id => 6, _type => core/user.isOnlineID }
10.11 13:55:02 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.11 13:55:02 ->>-: core/cache.get { type => user, v => -1, id => 6, _type => core/cache.get }
10.11 13:55:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid6, deleted => false, year => , email => mail, networktype =>   , password => uid6, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478782560, lastLoginDate => 315, lastLoadDate => 1111 }, effects => { list => [] } }}, version => 1, id => 6 } }
10.11 13:55:02 ->>-: core/cache.get { type => questdata, v => -1, id => 6, _type => core/cache.get }
10.11 13:55:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 6 } }
10.11 13:55:02 NET: Client login (conid:36623814, id:6, name:uid6)
10.11 13:55:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 6, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
10.11 13:55:02 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.11 13:55:02 DB: SELECT token FROM tokens WHERE userid = 6
10.11 13:55:02 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 6, _type => core/server.query }
10.11 13:55:02 -<<-: core/server.query { list => {{ token => 331a673c54d99d9229cf92277970c14d }, { token => fb7799177ba7d9afe6b7c0ab03856da0 }}, errorCode => ok, _type => core/server.query }
10.11 13:55:02 == NET: uid6 ret: user.login { name => uid6, type => user.login, errorCode => ok, id => 6, token => 331a673c54d99d9229cf92277970c14d }
10.11 13:55:02 == NET: uid6 ret: user.join { name => uid6, type => user.join }
10.11 13:55:05 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:05 TIME: user.ping 0.14 ms
10.11 13:55:05 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:55:09 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 6, _type => core/cache.update }
10.11 13:55:09 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.11 13:55:13 ++ NET: uid6 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
10.11 13:55:13 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 6 }, _type => vdl/cache.battle.findRandom }
10.11 13:55:13 -<<-: vdl/cache.battle.findRandom { errorCode => _requestException, _type => vdl/cache.battle.findRandom }
10.11 13:55:13 TRACE: battle.find : cacheRequest exception { user => { time => 60, player => 6 }, _type => vdl/cache.battle.findRandom }
10.11 13:55:13 TRACE: battle.find : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 221
Called from modules/VDLBattleModule.hx line 170
Called from modules/VDLBattleModule.hx line 58
Called from modules/VDLBattleModule.hx line 40
Called from snipe/slave/Server.hx line 1225
10.11 13:55:14 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:14 TIME: user.ping 0.11 ms
10.11 13:55:14 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:55:20 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:20 TIME: user.ping 0.12 ms
10.11 13:55:20 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:55:26 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:26 TIME: user.ping 0.12 ms
10.11 13:55:26 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:55:27 TIMER: Check auto-disconnect...
10.11 13:55:32 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:32 TIME: user.ping 0.12 ms
10.11 13:55:32 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:55:39 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:39 TIME: user.ping 0.12 ms
10.11 13:55:39 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:55:45 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:45 TIME: user.ping 0.13 ms
10.11 13:55:45 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:55:52 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:52 TIME: user.ping 0.16 ms
10.11 13:55:52 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:55:54 STATS: vdl.0 cache, locks:6
10.11 13:55:59 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:55:59 TIME: user.ping 0.13 ms
10.11 13:55:59 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:06 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:56:06 TIME: user.ping 0.15 ms
10.11 13:56:06 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:13 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:56:13 TIME: user.ping 0.13 ms
10.11 13:56:13 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:19 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:56:19 TIME: user.ping 0.12 ms
10.11 13:56:19 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:26 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:56:26 TIME: user.ping 0.2 ms
10.11 13:56:26 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:27 TIMER: Check auto-disconnect...
10.11 13:56:32 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:56:32 TIME: user.ping 0.13 ms
10.11 13:56:32 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:38 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:56:38 TIME: user.ping 0.16 ms
10.11 13:56:38 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:44 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:56:44 TIME: user.ping 0.11 ms
10.11 13:56:44 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:50 ++ NET: uid6 req: user.ping { messageType => user.ping, msg => ok }
10.11 13:56:50 == NET: uid6 ret: user.ping { type => user.ping, errorCode => ok }
10.11 13:56:50 TIME: user.ping 0.13 ms
10.11 13:56:54 STATS: vdl.0 cache, locks:6
10.11 13:57:27 TIMER: Check auto-disconnect...
10.11 13:57:54 STATS: vdl.0 cache, locks:6
10.11 13:58:27 TIMER: Check auto-disconnect...
10.11 13:58:54 STATS: vdl.0 cache, locks:6
10.11 13:59:27 TIMER: Check auto-disconnect...
10.11 13:59:54 STATS: vdl.0 cache, locks:6
