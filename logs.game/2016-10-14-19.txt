14.10 19:00:03 NET: Client (conid:88568729) connected to vdl.0 (clients:1)
14.10 19:00:05 ++ NET: null req: user.logout { messageType => user.logout }
14.10 19:00:05 TRACE: User not logon yet.
14.10 19:00:05 NET: Client (name:null conid:88568729 TCP) disconnected from vdl.0 (clients:0)
14.10 19:00:09 NET: Client (conid:78792994) connected to vdl.0 (clients:1)
14.10 19:00:09 TIMER: Check auto-disconnect...
14.10 19:00:09 STATS: vdl.0 cache, locks:0
14.10 19:00:10 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
14.10 19:00:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:00:10 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:00:10 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:00:10 STATS: vdl.0 cache connection, 35 calls, total 0.0598466396331787 sec spent, avg 1.71 ms
14.10 19:00:10 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:00:10 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:00:10 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:00:10 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:00:10 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:00:10 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:00:10 NET: Client login (conid:78792994, id:36, name:uid36)
14.10 19:00:10 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:00:10 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 19:00:10 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
14.10 19:00:10 == NET: uid36 ret: user.join { name => uid36, type => user.join }
14.10 19:00:18 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:00:18 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:18 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 }], battleActive => null, startdate => 2016-14-10 19:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:18 TIME: tournament.getAvailableTournament 8.37 ms
14.10 19:00:18 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 }], battleActive => null, startdate => 2016-14-10 19:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:00:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:00:21 ++ NET: uid36 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
14.10 19:00:21 ->>-: vdl/cache.tournament.addUsers { userId => 36, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 19:00:21 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:00:21 TIME: tournament.addUsers 0.69 ms
14.10 19:00:21 == NET: uid36 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:00:21 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:00:21 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:21 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 }], battleActive => null, startdate => 2016-14-10 19:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:21 TIME: tournament.getAvailableTournament 6.19 ms
14.10 19:00:21 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 }], battleActive => null, startdate => 2016-14-10 19:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:36 ++ NET: uid36 req: user.logout { messageType => user.logout }
14.10 19:00:36 NET: Client (name:uid36 conid:78792994 TCP) disconnected from vdl.0 (clients:0)
14.10 19:00:36 TRACE: user.logout : No such module: user
14.10 19:00:36 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 19:00:36 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:00:36 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:00:36 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:00:36 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:00:36 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 19:00:36 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:00:36 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 19:00:36 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:00:36 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:00:36 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:00:36 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:00:36 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:00:36 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:01:42 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:01:42 -<<-: server.login ok
14.10 19:01:42 DB: SELECT * FROM LocalizationStrings
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 TIMER: Starting timer...
14.10 19:01:42 TIMER: Timer running...
14.10 19:01:42 DB: SELECT * FROM GameVars
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:01:42 -<<-: core/quest.getDaily ok
14.10 19:01:42 DB: SELECT * FROM UserAttributeTypes
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM UserVariableTypes
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:01:42 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM ItemGroups
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 SHOP: loading items...
14.10 19:01:42 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 19:01:42 -<<-: core/shop.getList ok
14.10 19:01:42 SHOP: 0 items loaded (0.001 sec)
14.10 19:01:42 DB: SELECT * FROM EffectAttributeTypes
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM Effects
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:01:42 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:01:42 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:01:42 DB: SELECT * FROM Badges
14.10 19:01:42 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:01:42 -<<-: core/server.query ok
14.10 19:02:26 NET: Client (conid:71388032) connected to vdl.0 (clients:1)
14.10 19:02:27 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
14.10 19:02:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:02:27 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:02:27 -<<-: core/server.query ok
14.10 19:02:27 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:02:27 -<<-: core/user.isOnlineID ok
14.10 19:02:27 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:02:27 -<<-: core/cache.get ok
14.10 19:02:27 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:02:27 -<<-: core/cache.get ok
14.10 19:02:27 NET: Client login (conid:71388032, id:36, name:uid36)
14.10 19:02:27 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:02:27 -<<-: core/user.loginPost null
14.10 19:02:27 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
14.10 19:02:27 == NET: uid36 ret: user.join { name => uid36, type => user.join }
14.10 19:02:37 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:02:37 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:02:42 TIMER: Check auto-disconnect...
14.10 19:02:42 STATS: vdl.0 cache, locks:2
14.10 19:03:29 ++ NET: uid36 req: user.logout { messageType => user.logout }
14.10 19:03:29 NET: Client (name:uid36 conid:71388032 TCP) disconnected from vdl.0 (clients:0)
14.10 19:03:29 TRACE: user.logout : No such module: user
14.10 19:03:29 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 19:03:29 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:03:29 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:03:29 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:03:29 STATS: vdl.0 cache connection, 27 calls, total 0.101179122924805 sec spent, avg 3.75 ms
14.10 19:03:29 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:03:29 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 19:03:29 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:03:29 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 19:03:29 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:03:29 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:03:29 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:03:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:03:29 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:03:29 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:09:05 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:09:05 -<<-: server.login ok
14.10 19:09:05 DB: SELECT * FROM LocalizationStrings
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 TIMER: Starting timer...
14.10 19:09:05 DB: SELECT * FROM GameVars
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:09:05 TIMER: Timer running...
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:09:05 -<<-: core/quest.getDaily ok
14.10 19:09:05 DB: SELECT * FROM UserAttributeTypes
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM UserVariableTypes
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:09:05 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM ItemGroups
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 SHOP: loading items...
14.10 19:09:05 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 19:09:05 -<<-: core/shop.getList ok
14.10 19:09:05 SHOP: 0 items loaded (0.002 sec)
14.10 19:09:05 DB: SELECT * FROM EffectAttributeTypes
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM Effects
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:09:05 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:09:05 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:05 DB: SELECT * FROM Badges
14.10 19:09:05 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:09:05 -<<-: core/server.query ok
14.10 19:09:10 NET: Client (conid:55475713) connected to vdl.0 (clients:1)
14.10 19:09:10 ++ NET: null req: user.login { messageType => user.login, token => dWlkNDc= }
14.10 19:09:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid47' AND Password = E'uid47'
14.10 19:09:10 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid47' AND Password = E'uid47', _type => core/server.query }
14.10 19:09:10 -<<-: core/server.query ok
14.10 19:09:10 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
14.10 19:09:11 ++ NET: null req: user.register { messageType => user.register }
14.10 19:09:11 DB: SELECT * FROM users
14.10 19:09:11 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
14.10 19:09:11 -<<-: core/server.query ok
14.10 19:09:11 DB: SELECT ID FROM Users WHERE Name = E'uid37'
14.10 19:09:11 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid37', _type => core/server.query }
14.10 19:09:11 == NET: null ret: user.auth { type => user.auth, token => dWlkMzc= }
14.10 19:09:11 -<<-: core/server.query ok
14.10 19:09:11 DB: SELECT nextval('Users_id_seq') AS id
14.10 19:09:11 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
14.10 19:09:11 -<<-: core/server.query ok
14.10 19:09:11 ->>-: core/user.register { password => uid37, name => uid37, fullParams => { password => uid37, name => uid37, networkid => , networktype => , messageType => user.register, id => 37 }, networkid => , connectionID => 55475713, networktype => , email => , id => 37, _type => core/user.register }
14.10 19:09:11 -<<-: core/user.register ok
14.10 19:09:11 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzc= }
14.10 19:09:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid37' AND Password = E'uid37'
14.10 19:09:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid37' AND Password = E'uid37', _type => core/server.query }
14.10 19:09:11 -<<-: core/server.query { list => {{ name => uid37, networkid => , isbanned => false, id => 37 }}, errorCode => ok, _type => core/server.query }
14.10 19:09:11 ->>-: core/user.isOnlineID { id => 37, _type => core/user.isOnlineID }
14.10 19:09:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:09:11 ->>-: core/cache.get { type => user, v => -1, id => 37, _type => core/cache.get }
14.10 19:09:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid37, deleted => false, email => , networktype =>   , password => uid37, isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language =>   , networkid => , params => {}}, version => 0, id => 37 } }
14.10 19:09:11 ->>-: core/cache.get { type => questdata, v => -1, id => 37, _type => core/cache.get }
14.10 19:09:11 -<<-: core/cache.get { errorCode => notFound, _type => core/cache.get }
14.10 19:09:11 ->>-: core/cache.create { type => questdata, id => 37, _type => core/cache.create }
14.10 19:09:11 -<<-: core/cache.create { errorCode => ok, _type => core/cache.create }
14.10 19:09:11 ->>-: core/cache.get { type => questdata, v => -1, id => 37, _type => core/cache.get }
14.10 19:09:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 37 } }
14.10 19:09:11 NET: Client login (conid:55475713, id:37, name:uid37)
14.10 19:09:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 37, _type => core/user.loginPost, ipAddr => 172.16.20.204 }
14.10 19:09:11 -<<-: core/user.registerResponse { password => uid37, name => uid37, _isNotify => true, fullParams => { password => uid37, name => uid37, networkid => , networktype => , messageType => user.register, id => 37 }, networkid => , connectionID => 55475713, networktype => , email => , id => 37, _type => core/user.registerResponse }
14.10 19:09:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 19:09:11 DB: SELECT ID FROM TempUserLogins WHERE UserID = 37 AND Date = 'today'::timestamp
14.10 19:09:11 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 37 AND Date = 'today'::timestamp, _type => core/server.query }
14.10 19:09:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:09:11 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (37, 'today'::timestamp)
14.10 19:09:11 == NET: uid37 ret: user.login { name => uid37, type => user.login, errorCode => ok, id => 37 }
14.10 19:09:11 == NET: uid37 ret: user.join { name => uid37, type => user.join }
14.10 19:09:11 == NET: uid37 ret: user.register { type => user.register, errorCode => ok }
14.10 19:09:11 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (37, 'today'::timestamp), _type => core/server.pending }} }
14.10 19:09:11 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
14.10 19:09:16 ++ NET: uid37 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:09:16 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:16 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:16 TIME: tournament.getAvailableTournament 7.97 ms
14.10 19:09:16 == NET: uid37 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:20 ++ NET: uid37 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
14.10 19:09:20 ->>-: vdl/cache.tournament.addUsers { userId => 37, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 19:09:20 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:09:20 TIME: tournament.addUsers 0.77 ms
14.10 19:09:20 == NET: uid37 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:09:20 ++ NET: uid37 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:09:20 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:20 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:20 TIME: tournament.getAvailableTournament 5.66 ms
14.10 19:09:20 == NET: uid37 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:30 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:35 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:40 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:40 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:45 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:45 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:50 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:50 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:00 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:05 TIMER: Check auto-disconnect...
14.10 19:10:05 STATS: vdl.0 cache, locks:2
14.10 19:10:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:05 STATS: vdl.0 cache connection, 47 calls, total 0.196110486984253 sec spent, avg 4.17 ms
14.10 19:10:10 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:10 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:15 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:30 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:35 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:40 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:40 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:45 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:45 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:50 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:50 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:00 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:05 TIMER: Check auto-disconnect...
14.10 19:11:05 STATS: vdl.0 cache, locks:2
14.10 19:11:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:05 STATS: vdl.0 cache connection, 59 calls, total 0.204563617706299 sec spent, avg 3.47 ms
14.10 19:11:10 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:10 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:15 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:30 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:35 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:40 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:40 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:45 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:45 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:50 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:50 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:00 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:05 TIMER: Check auto-disconnect...
14.10 19:12:05 STATS: vdl.0 cache, locks:2
14.10 19:12:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:05 STATS: vdl.0 cache connection, 71 calls, total 0.213800430297852 sec spent, avg 3.01 ms
14.10 19:12:10 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:10 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:15 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:30 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:35 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:40 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:40 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:45 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:45 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:50 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:50 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:00 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:05 TIMER: Check auto-disconnect...
14.10 19:13:05 NET: Client (name:uid37 conid:55475713 TCP) disconnected from vdl.0 (clients:0)
14.10 19:13:05 DB: SELECT id FROM battle WHERE firstid=37 OR secondid=37 AND finished <> true
14.10 19:13:05 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=37 OR secondid=37 AND finished <> true, _type => core/server.query }
14.10 19:13:05 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:13:05 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:13:05 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 19:13:05 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:13:05 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 19:13:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => true, id => 37, _type => core/cache.update }
14.10 19:13:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:05 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 37, _type => core/cache.update }
14.10 19:13:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:13:05 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 37, _type => core/user.logoutPost }
14.10 19:13:05 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:13:05 STATS: vdl.0 cache, locks:1
14.10 19:13:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:05 STATS: vdl.0 cache connection, 88 calls, total 0.231837749481201 sec spent, avg 2.63 ms
14.10 19:13:10 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:10 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:15 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:30 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:35 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:40 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:40 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:45 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:45 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:50 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:50 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:00 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:05 TIMER: Check auto-disconnect...
14.10 19:14:05 STATS: vdl.0 cache, locks:1
14.10 19:14:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:05 STATS: vdl.0 cache connection, 100 calls, total 0.241268873214722 sec spent, avg 2.41 ms
14.10 19:14:10 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:10 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:15 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:29 NET: Client (conid:23760976) connected to vdl.0 (clients:1)
14.10 19:14:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
14.10 19:14:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:14:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:14:30 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:14:30 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:14:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:14:30 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:14:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:14:30 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:14:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:14:30 NET: Client login (conid:23760976, id:36, name:uid36)
14.10 19:14:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:14:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 19:14:30 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
14.10 19:14:30 == NET: uid36 ret: user.join { name => uid36, type => user.join }
14.10 19:14:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:30 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:35 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:35 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:14:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:14:36 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:14:36 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:14:36 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:14:36 TIME: tournament.getAvailableTournament 7 ms
14.10 19:14:36 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:14:40 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:40 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:45 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:45 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:50 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:50 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:00 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:05 TIMER: Check auto-disconnect...
14.10 19:15:05 -<<-: battle.startEvent { _isNotify => true, tournamentId => 1, round => 1, _type => battle.startEvent }
14.10 19:15:05 TRACE: onCacheNotify(): no method startEvent in module battle
14.10 19:15:05 STATS: vdl.0 cache, locks:3
14.10 19:15:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:05 STATS: vdl.0 cache connection, 119 calls, total 0.265029668807983 sec spent, avg 2.23 ms
14.10 19:15:10 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:10 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:15 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:30 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:35 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:40 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:40 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:45 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:45 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:50 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:50 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:00 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:05 TIMER: Check auto-disconnect...
14.10 19:16:05 STATS: vdl.0 cache, locks:3
14.10 19:16:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:05 STATS: vdl.0 cache connection, 131 calls, total 0.274406671524048 sec spent, avg 2.09 ms
14.10 19:16:10 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:10 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:15 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:30 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:30 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:35 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:35 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:40 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:40 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:45 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:45 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:50 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:50 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:55 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:55 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:00 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:00 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:04 NET: Client (name:uid36 conid:23760976 TCP) disconnected from vdl.0 (clients:0)
14.10 19:17:04 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:17:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:17:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:17:04 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:17:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 19:17:04 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:17:04 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
14.10 19:17:04 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:17:04 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:17:04 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:17:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:17:04 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:17:04 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:17:05 TIMER: Check auto-disconnect...
14.10 19:17:05 STATS: vdl.0 cache, locks:1
14.10 19:17:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:05 STATS: vdl.0 cache connection, 148 calls, total 0.290884971618652 sec spent, avg 1.97 ms
14.10 19:17:10 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:10 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:15 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:20 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:25 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:18:09 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:18:09 -<<-: server.login ok
14.10 19:18:09 DB: SELECT * FROM LocalizationStrings
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 TIMER: Starting timer...
14.10 19:18:09 TIMER: Timer running...
14.10 19:18:09 DB: SELECT * FROM GameVars
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:18:09 -<<-: core/quest.getDaily ok
14.10 19:18:09 DB: SELECT * FROM UserAttributeTypes
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM UserVariableTypes
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:18:09 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM ItemGroups
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 SHOP: loading items...
14.10 19:18:09 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 19:18:09 -<<-: core/shop.getList ok
14.10 19:18:09 SHOP: 0 items loaded (0.001 sec)
14.10 19:18:09 DB: SELECT * FROM EffectAttributeTypes
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM Effects
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:18:09 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:18:09 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 DB: SELECT * FROM Badges
14.10 19:18:09 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 NET: Client (conid:99318670) connected to vdl.0 (clients:1)
14.10 19:18:09 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
14.10 19:18:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:18:09 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:18:09 -<<-: core/server.query ok
14.10 19:18:09 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:18:09 -<<-: core/user.isOnlineID ok
14.10 19:18:09 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:18:09 -<<-: core/cache.get ok
14.10 19:18:09 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:18:09 -<<-: core/cache.get ok
14.10 19:18:09 NET: Client login (conid:99318670, id:36, name:uid36)
14.10 19:18:09 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:18:09 -<<-: core/user.loginPost null
14.10 19:18:09 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
14.10 19:18:09 == NET: uid36 ret: user.join { name => uid36, type => user.join }
14.10 19:18:11 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:18:11 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:18:11 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:20 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:18:11 TIME: tournament.getAvailableTournament 12.08 ms
14.10 19:18:11 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:20 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:18:15 ++ NET: uid36 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
14.10 19:18:15 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:18:15 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [34,35,36,37] }
14.10 19:18:15 ->>-: vdl/cache.tournament.setGrid { battles => [{ round => 1, player1 => 36, player2 => 37 },{ round => 1, player1 => 34, player2 => 35 }], _type => vdl/cache.tournament.setGrid }
14.10 19:18:15 -<<-: vdl/cache.tournament.setGrid { list => [{ round => 1, player1 => 36, player2 => 37 },{ round => 1, player1 => 34, player2 => 35 }], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:18:15 TIME: tournament.grid 1.5 ms
14.10 19:18:15 == NET: uid36 ret: tournament.grid { list => [{ round => 1, player1 => 36, player2 => 37 },{ round => 1, player1 => 34, player2 => 35 }], type => tournament.grid, errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:18:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:18:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:21:37 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:21:37 -<<-: server.login ok
14.10 19:21:37 DB: SELECT * FROM LocalizationStrings
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 TIMER: Starting timer...
14.10 19:21:37 TIMER: Timer running...
14.10 19:21:37 DB: SELECT * FROM GameVars
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:21:37 -<<-: core/quest.getDaily ok
14.10 19:21:37 DB: SELECT * FROM UserAttributeTypes
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM UserVariableTypes
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:21:37 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM ItemGroups
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 SHOP: loading items...
14.10 19:21:37 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 19:21:37 -<<-: core/shop.getList ok
14.10 19:21:37 SHOP: 0 items loaded (0 sec)
14.10 19:21:37 DB: SELECT * FROM EffectAttributeTypes
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT * FROM Effects
14.10 19:21:37 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:21:37 -<<-: core/server.query ok
14.10 19:21:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(14.10 19:25:25 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:25:25 -<<-: server.login ok
14.10 19:25:25 DB: SELECT * FROM LocalizationStrings
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 TIMER: Starting timer...
14.10 19:25:25 TIMER: Timer running...
14.10 19:25:25 DB: SELECT * FROM GameVars
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:25:25 -<<-: core/quest.getDaily ok
14.10 19:25:25 DB: SELECT * FROM UserAttributeTypes
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM UserVariableTypes
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:25:25 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM ItemGroups
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 SHOP: loading items...
14.10 19:25:25 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 19:25:25 -<<-: core/shop.getList ok
14.10 19:25:25 SHOP: 0 items loaded (0 sec)
14.10 19:25:25 DB: SELECT * FROM EffectAttributeTypes
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM Effects
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:25:25 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:25:25 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT * FROM Badges
14.10 19:25:25 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 TIMER: Check auto-disconnect...
14.10 19:25:25 STATS: vdl.0 cache, locks:0
14.10 19:25:25 -<<-: tournament.startEvent null
14.10 19:25:25 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:25:25 -<<-: vdl/cache.tournament.getAvailableTournamentUsers ok
14.10 19:25:25 STATS: vdl.0 cache connection, 21 calls, total 0.0651741027832031 sec spent, avg 3.1 ms
14.10 19:25:25 ->>-: vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
14.10 19:25:25 TIMER: Check auto-disconnect...
14.10 19:25:25 -<<-: vdl/cache.battle.create ok
14.10 19:25:25 ->>-: vdl/cache.battle.join { roomId => 44, selfId => 37, _type => vdl/cache.battle.join }
14.10 19:25:25 -<<-: vdl/cache.battle.join ok
14.10 19:25:25 DB: SELECT name FROM users WHERE id=36
14.10 19:25:25 ->>-: core/server.query { q => SELECT name FROM users WHERE id=36, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 DB: SELECT name FROM users WHERE id=37
14.10 19:25:25 ->>-: core/server.query { q => SELECT name FROM users WHERE id=37, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query ok
14.10 19:25:25 ->>-: core/user.sendTo { id => 36, _type => core/user.sendTo, msg => { name => uid36, type => tournament.enemy, tournamentId => 1, enemy.id => 36, enemy.name => uid37, round => 1, _type => tournament.enemy, enemy.num => 2, battleId => 44 } }
14.10 19:25:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 ->>-: core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { name => uid37, type => tournament.enemy, tournamentId => 1, enemy.id => 37, enemy.name => uid36, round => 1, _type => tournament.enemy, enemy.num => 1, battleId => 44 } }
14.10 19:25:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 ->>-: vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
14.10 19:25:25 -<<-: vdl/cache.battle.create { room => 45, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
14.10 19:25:25 ->>-: vdl/cache.battle.join { roomId => 45, selfId => 37, _type => vdl/cache.battle.join }
14.10 19:25:25 -<<-: vdl/cache.battle.join { room => 45, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=36
14.10 19:25:25 ->>-: core/server.query { q => SELECT name FROM users WHERE id=36, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query { list => {{ name => uid36 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=37
14.10 19:25:25 ->>-: core/server.query { q => SELECT name FROM users WHERE id=37, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query { list => {{ name => uid37 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 ->>-: core/user.sendTo { id => 36, _type => core/user.sendTo, msg => { name => uid36, type => tournament.enemy, tournamentId => 1, enemy.id => 36, enemy.name => uid37, round => 1, _type => tournament.enemy, enemy.num => 2, battleId => 45 } }
14.10 19:25:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 ->>-: core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { name => uid37, type => tournament.enemy, tournamentId => 1, enemy.id => 37, enemy.name => uid36, round => 1, _type => tournament.enemy, enemy.num => 1, battleId => 45 } }
14.10 19:25:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 ->>-: vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
14.10 19:25:25 -<<-: vdl/cache.battle.create { room => 46, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
14.10 19:25:25 ->>-: vdl/cache.battle.join { roomId => 46, selfId => 37, _type => vdl/cache.battle.join }
14.10 19:25:25 -<<-: vdl/cache.battle.join { room => 46, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=36
14.10 19:25:25 ->>-: core/server.query { q => SELECT name FROM users WHERE id=36, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query { list => {{ name => uid36 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=37
14.10 19:25:25 ->>-: core/server.query { q => SELECT name FROM users WHERE id=37, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query { list => {{ name => uid37 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 ->>-: core/user.sendTo { id => 36, _type => core/user.sendTo, msg => { name => uid36, type => tournament.enemy, tournamentId => 1, enemy.id => 36, enemy.name => uid37, round => 1, _type => tournament.enemy, enemy.num => 2, battleId => 46 } }
14.10 19:25:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 ->>-: core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { name => uid37, type => tournament.enemy, tournamentId => 1, enemy.id => 37, enemy.name => uid36, round => 1, _type => tournament.enemy, enemy.num => 1, battleId => 46 } }
14.10 19:25:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 ->>-: vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
14.10 19:25:25 -<<-: vdl/cache.battle.create { room => 47, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
14.10 19:25:25 ->>-: vdl/cache.battle.join { roomId => 47, selfId => 37, _type => vdl/cache.battle.join }
14.10 19:25:25 -<<-: vdl/cache.battle.join { room => 47, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=36
14.10 19:25:25 ->>-: core/server.query { q => SELECT name FROM users WHERE id=36, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query { list => {{ name => uid36 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=37
14.10 19:25:25 ->>-: core/server.query { q => SELECT name FROM users WHERE id=37, _type => core/server.query }
14.10 19:25:25 -<<-: core/server.query { list => {{ name => uid37 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 ->>-: core/user.sendTo { id => 36, _type => core/user.sendTo, msg => { name => uid36, type => tournament.enemy, tournamentId => 1, enemy.id => 36, enemy.name => uid37, round => 1, _type => tournament.enemy, enemy.num => 2, battleId => 47 } }
14.10 19:25:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 ->>-: core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { name => uid37, type => tournament.enemy, tournamentId => 1, enemy.id => 37, enemy.name => uid36, round => 1, _type => tournament.enemy, enemy.num => 1, battleId => 47 } }
14.10 19:25:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 ->>-: vdl/cache.tournament.setBattlesTournaments { typeBattle => active, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [44,45,46,47] }
14.10 19:25:25 -<<-: vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
14.10 19:25:25 STATS: vdl.0 cache, locks:0
14.10 19:25:25 TIMER: Check auto-disconnect...
14.10 19:28:30 STATS: vdl.0 cache, locks:0
14.10 19:29:25 TIMER: Check auto-disconnect...
14.10 19:29:30 STATS: vdl.0 cache, locks:0
14.10 19:30:25 TIMER: Check auto-disconnect...
14.10 19:30:30 STATS: vdl.0 cache, locks:0
14.10 19:31:25 TIMER: Check auto-disconnect...
14.10 19:31:30 STATS: vdl.0 cache, locks:0
14.10 19:32:25 TIMER: Check auto-disconnect...
14.10 19:32:30 STATS: vdl.0 cache, locks:0
14.10 19:33:25 TIMER: Check auto-disconnect...
14.10 19:33:28 NET: Client (conid:27695917) connected to vdl.0 (clients:1)
14.10 19:33:29 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
14.10 19:33:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:33:29 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:33:29 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:33:29 STATS: vdl.0 cache connection, 47 calls, total 0.297703742980957 sec spent, avg 6.33 ms
14.10 19:33:29 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:33:29 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:33:29 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:33:29 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:33:29 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:33:29 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:33:29 NET: Client login (conid:27695917, id:36, name:uid36)
14.10 19:33:29 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:33:29 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 19:33:29 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
14.10 19:33:29 == NET: uid36 ret: user.join { name => uid36, type => user.join }
14.10 19:33:30 STATS: vdl.0 cache, locks:2
14.10 19:33:34 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:33:34 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:34 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:34 TIME: tournament.getAvailableTournament 3.78 ms
14.10 19:33:34 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:35 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:33:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:33:42 ++ NET: uid36 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
14.10 19:33:42 ->>-: vdl/cache.tournament.addUsers { userId => 36, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 19:33:42 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:33:42 TIME: tournament.addUsers 0.69 ms
14.10 19:33:42 == NET: uid36 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:33:42 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:33:42 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:42 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:42 TIME: tournament.getAvailableTournament 2.7 ms
14.10 19:33:42 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:43 ++ NET: uid36 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
14.10 19:33:43 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:33:43 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36] }
14.10 19:33:43 ->>-: vdl/cache.tournament.setGrid { battles => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 }], _type => vdl/cache.tournament.setGrid }
14.10 19:33:43 -<<-: vdl/cache.tournament.setGrid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 }], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:33:43 TIME: tournament.grid 1.33 ms
14.10 19:33:43 == NET: uid36 ret: tournament.grid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 }], type => tournament.grid, errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:34:25 TIMER: Check auto-disconnect...
14.10 19:34:30 STATS: vdl.0 cache, locks:2
14.10 19:35:25 TIMER: Check auto-disconnect...
14.10 19:35:30 STATS: vdl.0 cache, locks:2
14.10 19:36:25 TIMER: Check auto-disconnect...
14.10 19:36:30 STATS: vdl.0 cache, locks:2
14.10 19:37:25 TIMER: Check auto-disconnect...
14.10 19:37:25 NET: Client (name:uid36 conid:27695917 TCP) disconnected from vdl.0 (clients:0)
14.10 19:37:25 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:37:25 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:37:25 -<<-: core/server.query { list => {{ id => 47 }, { id => 46 }, { id => 45 }, { id => 44 }}, errorCode => ok, _type => core/server.query }
14.10 19:37:25 STATS: vdl.0 cache connection, 58 calls, total 0.3263258934021 sec spent, avg 5.63 ms
14.10 19:37:25 ->>-: vdl/cache.battle.infoRoom { roomId => 44, _type => vdl/cache.battle.infoRoom }
14.10 19:37:25 -<<-: vdl/cache.battle.infoRoom { secondId => 37, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
14.10 19:37:25 ->>-: vdl/cache.battle.deleteRoom { roomId => 44, _type => vdl/cache.battle.deleteRoom }
14.10 19:37:25 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
14.10 19:37:25 ->>-: core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { _type => battle.end } }
14.10 19:37:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:37:25 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:37:25 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:37:25 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:37:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:37:25 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:37:25 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:37:30 STATS: vdl.0 cache, locks:0
14.10 19:37:33 NET: Client (conid:20452988) connected to vdl.0 (clients:1)
14.10 19:37:37 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzc= }
14.10 19:37:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid37' AND Password = E'uid37'
14.10 19:37:37 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid37' AND Password = E'uid37', _type => core/server.query }
14.10 19:37:37 -<<-: core/server.query { list => {{ name => uid37, networkid => , isbanned => false, id => 37 }}, errorCode => ok, _type => core/server.query }
14.10 19:37:37 ->>-: core/user.isOnlineID { id => 37, _type => core/user.isOnlineID }
14.10 19:37:37 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:37:37 ->>-: core/cache.get { type => user, v => -1, id => 37, _type => core/cache.get }
14.10 19:37:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid37, deleted => false, email => , networktype =>   , password => uid37, isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 37 } }
14.10 19:37:37 ->>-: core/cache.get { type => questdata, v => -1, id => 37, _type => core/cache.get }
14.10 19:37:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 37 } }
14.10 19:37:37 NET: Client login (conid:20452988, id:37, name:uid37)
14.10 19:37:37 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 37, _type => core/user.loginPost, ipAddr => 172.16.20.204 }
14.10 19:37:37 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 19:37:37 == NET: uid37 ret: user.login { name => uid37, type => user.login, errorCode => ok, id => 37 }
14.10 19:37:37 == NET: uid37 ret: user.join { name => uid37, type => user.join }
14.10 19:37:45 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:37:45 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:37:48 ++ NET: uid37 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:37:48 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:48 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:48 TIME: tournament.getAvailableTournament 3.9 ms
14.10 19:37:48 == NET: uid37 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:54 ++ NET: uid37 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
14.10 19:37:54 ->>-: vdl/cache.tournament.addUsers { userId => 37, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 19:37:54 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:37:54 TIME: tournament.addUsers 0.54 ms
14.10 19:37:54 == NET: uid37 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:37:54 ++ NET: uid37 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:37:54 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:54 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:54 TIME: tournament.getAvailableTournament 3.38 ms
14.10 19:37:54 == NET: uid37 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:38:10 NET: Client (conid:50318279) connected to vdl.0 (clients:2)
14.10 19:38:12 ++ NET: null req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
14.10 19:38:12 TRACE: User not logon yet.
14.10 19:38:17 ++ NET: null req: user.logout { messageType => user.logout }
14.10 19:38:17 TRACE: User not logon yet.
14.10 19:38:17 NET: Client (name:null conid:50318279 TCP) disconnected from vdl.0 (clients:1)
14.10 19:38:22 NET: Client (conid:72797483) connected to vdl.0 (clients:2)
14.10 19:38:23 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
14.10 19:38:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:38:23 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:38:23 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:38:23 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:38:23 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:38:23 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:38:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:38:23 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:38:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:38:23 NET: Client login (conid:72797483, id:36, name:uid36)
14.10 19:38:23 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:38:23 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 19:38:23 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
14.10 19:38:23 == NET: uid36 ret: user.join { name => uid37, type => user.join }
14.10 19:38:23 == NET: uid36 ret: user.join { name => uid36, type => user.join }
14.10 19:38:23 == NET: uid37 ret: user.join { name => uid36, type => user.join }
14.10 19:38:25 TIMER: Check auto-disconnect...
14.10 19:38:30 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:38:30 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:38:30 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:38:30 STATS: vdl.0 cache connection, 79 calls, total 0.400304079055786 sec spent, avg 5.07 ms
14.10 19:38:30 TIME: tournament.getAvailableTournament 4.62 ms
14.10 19:38:30 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:38:30 STATS: vdl.0 cache, locks:4
14.10 19:38:30 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:38:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:38:34 ++ NET: uid36 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
14.10 19:38:34 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:38:34 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
14.10 19:38:34 ->>-: vdl/cache.tournament.setGrid { battles => [{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], _type => vdl/cache.tournament.setGrid }
14.10 19:38:34 -<<-: vdl/cache.tournament.setGrid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:38:34 TIME: tournament.grid 1.04 ms
14.10 19:38:34 == NET: uid36 ret: tournament.grid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], type => tournament.grid, errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:39:25 TIMER: Check auto-disconnect...
14.10 19:39:30 STATS: vdl.0 cache, locks:4
14.10 19:40:25 TIMER: Check auto-disconnect...
14.10 19:40:30 STATS: vdl.0 cache, locks:4
14.10 19:41:25 TIMER: Check auto-disconnect...
14.10 19:41:25 NET: Client (name:uid37 conid:20452988 TCP) disconnected from vdl.0 (clients:1)
14.10 19:41:25 DB: SELECT id FROM battle WHERE firstid=37 OR secondid=37 AND finished <> true
14.10 19:41:25 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=37 OR secondid=37 AND finished <> true, _type => core/server.query }
14.10 19:41:25 -<<-: core/server.query { list => {{ id => 47 }, { id => 46 }, { id => 45 }}, errorCode => ok, _type => core/server.query }
14.10 19:41:25 STATS: vdl.0 cache connection, 83 calls, total 0.404617786407471 sec spent, avg 4.87 ms
14.10 19:41:25 ->>-: vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
14.10 19:41:25 -<<-: vdl/cache.battle.infoRoom { secondId => 37, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
14.10 19:41:25 ->>-: vdl/cache.battle.deleteRoom { roomId => 45, _type => vdl/cache.battle.deleteRoom }
14.10 19:41:25 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
14.10 19:41:25 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 37, _type => core/cache.update }
14.10 19:41:25 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:41:25 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 37, _type => core/cache.update }
14.10 19:41:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:41:25 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 37, _type => core/user.logoutPost }
14.10 19:41:25 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:41:25 == NET: uid36 ret: battle.end { type => battle.end }
14.10 19:41:30 STATS: vdl.0 cache, locks:2
14.10 19:42:25 TIMER: Check auto-disconnect...
14.10 19:42:25 NET: Client (name:uid36 conid:72797483 TCP) disconnected from vdl.0 (clients:0)
14.10 19:42:25 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:42:25 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:42:25 -<<-: core/server.query { list => {{ id => 47 }, { id => 46 }}, errorCode => ok, _type => core/server.query }
14.10 19:42:25 STATS: vdl.0 cache connection, 89 calls, total 0.438767194747925 sec spent, avg 4.93 ms
14.10 19:42:25 ->>-: vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
14.10 19:42:25 -<<-: vdl/cache.battle.infoRoom { secondId => 37, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
14.10 19:42:25 ->>-: vdl/cache.battle.deleteRoom { roomId => 46, _type => vdl/cache.battle.deleteRoom }
14.10 19:42:25 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
14.10 19:42:25 ->>-: core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { _type => battle.end } }
14.10 19:42:25 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:42:25 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:42:25 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:42:25 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:42:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:42:25 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:42:25 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:42:30 STATS: vdl.0 cache, locks:0
14.10 19:43:25 TIMER: Check auto-disconnect...
14.10 19:43:30 STATS: vdl.0 cache, locks:0
14.10 19:44:25 TIMER: Check auto-disconnect...
14.10 19:44:30 STATS: vdl.0 cache, locks:0
14.10 19:45:25 TIMER: Check auto-disconnect...
14.10 19:45:30 STATS: vdl.0 cache, locks:0
14.10 19:46:25 TIMER: Check auto-disconnect...
14.10 19:46:30 STATS: vdl.0 cache, locks:0
14.10 19:47:25 TIMER: Check auto-disconnect...
14.10 19:47:30 STATS: vdl.0 cache, locks:0
14.10 19:48:25 TIMER: Check auto-disconnect...
14.10 19:48:30 STATS: vdl.0 cache, locks:0
14.10 19:49:25 TIMER: Check auto-disconnect...
14.10 19:49:30 STATS: vdl.0 cache, locks:0
14.10 19:50:25 TIMER: Check auto-disconnect...
14.10 19:50:30 STATS: vdl.0 cache, locks:0
14.10 19:51:25 TIMER: Check auto-disconnect...
14.10 19:51:30 STATS: vdl.0 cache, locks:0
14.10 19:52:25 TIMER: Check auto-disconnect...
14.10 19:52:30 STATS: vdl.0 cache, locks:0
14.10 19:53:25 TIMER: Check auto-disconnect...
14.10 19:53:30 STATS: vdl.0 cache, locks:0
14.10 19:54:25 TIMER: Check auto-disconnect...
14.10 19:54:30 STATS: vdl.0 cache, locks:0
14.10 19:55:25 TIMER: Check auto-disconnect...
14.10 19:55:30 STATS: vdl.0 cache, locks:0
14.10 19:56:25 TIMER: Check auto-disconnect...
14.10 19:56:29 NET: Client (conid:14963467) connected to vdl.0 (clients:1)
14.10 19:56:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzY= }
14.10 19:56:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:56:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:56:30 -<<-: core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:56:30 STATS: vdl.0 cache connection, 96 calls, total 0.468368053436279 sec spent, avg 4.88 ms
14.10 19:56:30 ->>-: core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:56:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:56:30 ->>-: core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:56:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:56:30 ->>-: core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:56:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:56:30 NET: Client login (conid:14963467, id:36, name:uid36)
14.10 19:56:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:56:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.10 19:56:30 == NET: uid36 ret: user.login { name => uid36, type => user.login, errorCode => ok, id => 36 }
14.10 19:56:30 == NET: uid36 ret: user.join { name => uid36, type => user.join }
14.10 19:56:30 STATS: vdl.0 cache, locks:2
14.10 19:56:35 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:56:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:56:37 ++ NET: uid36 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 19:56:37 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:56:37 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:56:37 TIME: tournament.getAvailableTournament 7.17 ms
14.10 19:56:37 == NET: uid36 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:56:41 ++ NET: uid36 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
14.10 19:56:41 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:56:41 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
14.10 19:56:41 ->>-: vdl/cache.tournament.setGrid { battles => [{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], _type => vdl/cache.tournament.setGrid }
14.10 19:56:41 -<<-: vdl/cache.tournament.setGrid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:56:41 TIME: tournament.grid 1.44 ms
14.10 19:56:41 == NET: uid36 ret: tournament.grid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], type => tournament.grid, errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:57:08 ++ NET: uid36 req: user.logout { messageType => user.logout }
14.10 19:57:08 NET: Client (name:uid36 conid:14963467 TCP) disconnected from vdl.0 (clients:0)
14.10 19:57:08 TRACE: user.logout : No such module: user
14.10 19:57:08 TRACE: user.logout : 
Called from snipe/slave/Server.hx line 1159
14.10 19:57:08 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:57:08 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:57:08 -<<-: core/server.query { list => {{ id => 47 }}, errorCode => ok, _type => core/server.query }
14.10 19:57:08 ->>-: vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
14.10 19:57:08 -<<-: vdl/cache.battle.infoRoom { secondId => 37, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
14.10 19:57:08 ->>-: vdl/cache.battle.deleteRoom { roomId => 47, _type => vdl/cache.battle.deleteRoom }
14.10 19:57:08 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
14.10 19:57:08 ->>-: core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { _type => battle.end } }
14.10 19:57:08 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:57:08 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:57:08 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:57:08 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:57:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:57:08 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:57:08 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:57:25 TIMER: Check auto-disconnect...
14.10 19:57:30 STATS: vdl.0 cache, locks:0
14.10 19:58:25 TIMER: Check auto-disconnect...
14.10 19:58:30 STATS: vdl.0 cache, locks:0
14.10 19:59:25 TIMER: Check auto-disconnect...
14.10 19:59:30 STATS: vdl.0 cache, locks:0
