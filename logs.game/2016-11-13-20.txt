13.11 20:00:24 STATS: vdl.0 cache, locks:2
13.11 20:00:28 TIMER: Check auto-disconnect...
13.11 20:01:24 STATS: vdl.0 cache, locks:2
13.11 20:01:28 TIMER: Check auto-disconnect...
13.11 20:02:24 STATS: vdl.0 cache, locks:2
13.11 20:02:28 TIMER: Check auto-disconnect...
13.11 20:03:24 STATS: vdl.0 cache, locks:2
13.11 20:03:25 NET: Client (name:null conid:30809034 TCP) disconnected from vdl.0 (clients:0)
13.11 20:03:28 TIMER: Check auto-disconnect...
13.11 20:03:36 NET: Client (conid:26288079) connected to vdl.0 (clients:1)
13.11 20:03:37 ++ NET: null req: user.register { messageType => user.register }
13.11 20:03:37 DB: SELECT * FROM users
13.11 20:03:37 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {{ city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-10 11:48:59.9391+00, language =>   , id => 1, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478779175,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, language => en, id => 2, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:08:05.144895+00, language =>   , id => 3, deleted => false }, { city => , password => uid4, name => uid4, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:24:23.638304+00, language =>   , id => 4, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:28:38.741567+00, language =>   , id => 5, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 13:32:51.765479+00, language =>   , id => 7, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478782560,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, language => en, id => 6, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 15:37:47.142701+00, language =>   , id => 8, deleted => false }, { city => , password => uid9, name => uid9, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-11 07:57:55.30687+00, language =>   , id => 9, deleted => false }, { city => , password => uid10, name => uid10, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478975056,"lastLoginDate":318,"lastLoadDate":1114},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-11 16:44:40.114978+00, language => en, id => 10, deleted => false }}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 STATS: vdl.0 cache connection, 1248 calls, total 0.951034069061279 sec spent, avg 0.76 ms
13.11 20:03:37 DB: SELECT ID FROM Users WHERE Name = 'uid11'
13.11 20:03:37 == NET: null ret: user.auth { type => user.auth, token => dWlkMTE= }
13.11 20:03:37 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid11', _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 DB: SELECT nextval('Users_id_seq') AS id
13.11 20:03:37 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {{ id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 ->>-: core/user.register { password => uid11, name => uid11, fullParams => { password => uid11, name => uid11, networkid => , networktype => , messageType => user.register, id => 11 }, networkid => , connectionID => 26288079, networktype => , email => , id => 11, _type => core/user.register }
13.11 20:03:37 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
13.11 20:03:37 -<<-: core/user.registerResponse { password => uid11, name => uid11, _isNotify => true, fullParams => { password => uid11, name => uid11, networkid => , networktype => , messageType => user.register, id => 11 }, networkid => , connectionID => 26288079, networktype => , email => , id => 11, _type => core/user.registerResponse }
13.11 20:03:37 DB: SELECT token FROM tokens WHERE userid = 11
13.11 20:03:37 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
13.11 20:03:37 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
13.11 20:03:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
13.11 20:03:37 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
13.11 20:03:37 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
13.11 20:03:37 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
13.11 20:03:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language =>   , networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 4, id => 11 } }
13.11 20:03:37 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
13.11 20:03:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 11 } }
13.11 20:03:37 NET: Client login (conid:26288079, id:11, name:uid11)
13.11 20:03:37 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.205.41.214 }
13.11 20:03:37 -<<-: core/user.loginPost { _type => core/user.loginPost }
13.11 20:03:37 DB: SELECT token FROM tokens WHERE userid = 11
13.11 20:03:37 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 DB: SELECT ID FROM TempUserLogins WHERE UserID = 11 AND Date = 'today'::timestamp
13.11 20:03:37 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 11 AND Date = 'today'::timestamp, _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (11, 'today'::timestamp)
13.11 20:03:37 ++ NET: uid11 req: user.login { messageType => user.login, token => dWlkMTE= }
13.11 20:03:37 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
13.11 20:03:37 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
13.11 20:03:37 == NET: uid11 ret: user.join { name => uid11, type => user.join }
13.11 20:03:37 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (11, 'today'::timestamp), _type => core/server.pending }} }
13.11 20:03:37 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:03:37 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
13.11 20:03:37 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:03:37 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
13.11 20:03:37 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479067417, lastLoginDate => 318, lastLoadDate => 1114 } }}, type => user, unlock => true, id => 11, _type => core/cache.update }
13.11 20:03:37 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
13.11 20:03:37 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
13.11 20:03:37 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.11 20:03:37 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
13.11 20:03:37 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
13.11 20:03:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
13.11 20:03:37 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:03:37 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
13.11 20:03:37 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
13.11 20:03:37 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
13.11 20:03:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479067417, lastLoginDate => 318, lastLoadDate => 1114 }, effects => { list => [] } }}, version => 5, id => 11 } }
13.11 20:03:37 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
13.11 20:03:37 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 11 } }
13.11 20:03:37 NET: Client login (conid:26288079, id:11, name:uid11)
13.11 20:03:37 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.205.41.214 }
13.11 20:03:37 -<<-: core/user.loginPost { _type => core/user.loginPost }
13.11 20:03:37 DB: SELECT token FROM tokens WHERE userid = 11
13.11 20:03:37 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
13.11 20:03:37 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
13.11 20:03:43 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:03:43 TIME: user.ping 0.11 ms
13.11 20:03:44 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
13.11 20:03:44 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
13.11 20:03:50 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:03:50 TIME: user.ping 0.13 ms
13.11 20:03:58 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:03:58 TIME: user.ping 0.16 ms
13.11 20:04:06 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:04:06 TIME: user.ping 0.1 ms
13.11 20:04:14 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:04:14 TIME: user.ping 0.1 ms
13.11 20:04:22 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:04:22 TIME: user.ping 0.09 ms
13.11 20:04:24 STATS: vdl.0 cache, locks:4
13.11 20:04:28 TIMER: Check auto-disconnect...
13.11 20:04:30 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:04:30 TIME: user.ping 0.19 ms
13.11 20:04:38 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:04:38 TIME: user.ping 0.1 ms
13.11 20:04:45 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:04:45 TIME: user.ping 0.11 ms
13.11 20:04:53 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:04:53 TIME: user.ping 0.11 ms
13.11 20:05:01 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:05:01 TIME: user.ping 0.15 ms
13.11 20:05:09 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:05:09 TIME: user.ping 0.13 ms
13.11 20:05:16 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:05:16 TIME: user.ping 0.11 ms
13.11 20:05:24 STATS: vdl.0 cache, locks:4
13.11 20:05:24 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:05:24 TIME: user.ping 0.11 ms
13.11 20:05:28 TIMER: Check auto-disconnect...
13.11 20:05:32 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:05:32 TIME: user.ping 0.09 ms
13.11 20:05:39 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:05:39 TIME: user.ping 0.1 ms
13.11 20:05:47 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:05:47 TIME: user.ping 0.13 ms
13.11 20:05:55 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:05:55 TIME: user.ping 0.1 ms
13.11 20:06:03 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:06:03 TIME: user.ping 0.12 ms
13.11 20:06:24 STATS: vdl.0 cache, locks:4
13.11 20:06:28 TIMER: Check auto-disconnect...
13.11 20:07:10 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:07:10 TIME: user.ping 0.11 ms
13.11 20:07:24 STATS: vdl.0 cache, locks:4
13.11 20:07:28 TIMER: Check auto-disconnect...
13.11 20:08:24 STATS: vdl.0 cache, locks:4
13.11 20:08:28 TIMER: Check auto-disconnect...
13.11 20:09:24 STATS: vdl.0 cache, locks:4
13.11 20:09:28 TIMER: Check auto-disconnect...
13.11 20:09:43 NET: Client (name:uid11 conid:26288079 TCP) disconnected from vdl.0 (clients:0)
13.11 20:09:43 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
13.11 20:09:43 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
13.11 20:09:43 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.11 20:09:43 STATS: vdl.0 cache connection, 1272 calls, total 0.98466968536377 sec spent, avg 0.77 ms
13.11 20:09:43 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:09:43 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
13.11 20:09:43 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:09:43 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
13.11 20:09:43 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
13.11 20:09:43 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
13.11 20:09:43 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
13.11 20:09:43 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
13.11 20:09:43 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
13.11 20:09:43 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
13.11 20:10:24 STATS: vdl.0 cache, locks:2
13.11 20:10:28 TIMER: Check auto-disconnect...
13.11 20:11:24 STATS: vdl.0 cache, locks:2
13.11 20:11:28 NET: Client (conid:25592312) connected to vdl.0 (clients:1)
13.11 20:11:28 TIMER: Check auto-disconnect...
13.11 20:11:29 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
13.11 20:11:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
13.11 20:11:29 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
13.11 20:11:29 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:11:29 STATS: vdl.0 cache connection, 1277 calls, total 0.987941980361938 sec spent, avg 0.77 ms
13.11 20:11:29 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
13.11 20:11:29 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
13.11 20:11:29 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
13.11 20:11:29 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479067417, lastLoginDate => 318, lastLoadDate => 1114 }, effects => { list => [] } }}, version => 0, id => 11 } }
13.11 20:11:29 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
13.11 20:11:29 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 11 } }
13.11 20:11:29 NET: Client login (conid:25592312, id:11, name:uid11)
13.11 20:11:29 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.205.41.214 }
13.11 20:11:29 -<<-: core/user.loginPost { _type => core/user.loginPost }
13.11 20:11:29 DB: SELECT token FROM tokens WHERE userid = 11
13.11 20:11:29 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
13.11 20:11:29 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
13.11 20:11:29 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
13.11 20:11:29 == NET: uid11 ret: user.join { name => uid11, type => user.join }
13.11 20:11:32 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:11:32 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:11:32 TIME: user.ping 0.19 ms
13.11 20:11:34 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
13.11 20:11:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.11 20:11:40 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:11:40 TIME: user.ping 0.12 ms
13.11 20:11:40 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:11:48 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:11:48 TIME: user.ping 0.15 ms
13.11 20:11:48 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:11:56 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:11:56 TIME: user.ping 0.15 ms
13.11 20:11:56 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:12:03 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:12:03 TIME: user.ping 0.14 ms
13.11 20:12:03 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:12:11 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:12:11 TIME: user.ping 0.12 ms
13.11 20:12:11 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:12:19 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:12:19 TIME: user.ping 0.12 ms
13.11 20:12:19 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:12:24 STATS: vdl.0 cache, locks:4
13.11 20:12:27 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:12:27 TIME: user.ping 0.12 ms
13.11 20:12:27 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:12:28 TIMER: Check auto-disconnect...
13.11 20:12:35 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:12:35 TIME: user.ping 0.13 ms
13.11 20:12:35 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:12:43 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:12:43 TIME: user.ping 0.15 ms
13.11 20:12:43 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:12:51 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:12:51 TIME: user.ping 0.13 ms
13.11 20:12:51 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:12:59 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:12:59 TIME: user.ping 0.11 ms
13.11 20:12:59 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:13:24 STATS: vdl.0 cache, locks:4
13.11 20:13:28 TIMER: Check auto-disconnect...
13.11 20:14:24 STATS: vdl.0 cache, locks:4
13.11 20:14:28 TIMER: Check auto-disconnect...
13.11 20:14:35 NET: Client (name:uid11 conid:25592312 TCP) disconnected from vdl.0 (clients:0)
13.11 20:14:35 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
13.11 20:14:35 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
13.11 20:14:35 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.11 20:14:35 STATS: vdl.0 cache connection, 1284 calls, total 0.991235256195068 sec spent, avg 0.77 ms
13.11 20:14:35 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:14:35 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
13.11 20:14:35 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:14:35 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
13.11 20:14:35 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
13.11 20:14:35 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
13.11 20:14:35 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
13.11 20:14:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.11 20:14:35 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
13.11 20:14:35 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
13.11 20:14:39 NET: Client (conid:86695710) connected to vdl.0 (clients:1)
13.11 20:14:40 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
13.11 20:14:40 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
13.11 20:14:40 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
13.11 20:14:40 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:14:40 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
13.11 20:14:40 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
13.11 20:14:40 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
13.11 20:14:40 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479067417, lastLoginDate => 318, lastLoadDate => 1114 }, effects => { list => [] } }}, version => 2, id => 11 } }
13.11 20:14:40 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
13.11 20:14:40 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 11 } }
13.11 20:14:40 NET: Client login (conid:86695710, id:11, name:uid11)
13.11 20:14:40 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.205.41.214 }
13.11 20:14:40 -<<-: core/user.loginPost { _type => core/user.loginPost }
13.11 20:14:40 DB: SELECT token FROM tokens WHERE userid = 11
13.11 20:14:40 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
13.11 20:14:40 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
13.11 20:14:40 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
13.11 20:14:40 == NET: uid11 ret: user.join { name => uid11, type => user.join }
13.11 20:14:43 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:14:43 TIME: user.ping 0.13 ms
13.11 20:14:43 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:14:49 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
13.11 20:14:49 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
13.11 20:14:52 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:14:52 TIME: user.ping 0.12 ms
13.11 20:14:52 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:14:59 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:14:59 TIME: user.ping 0.13 ms
13.11 20:14:59 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:15:07 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:15:07 TIME: user.ping 0.1 ms
13.11 20:15:07 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:15:15 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:15:15 TIME: user.ping 0.17 ms
13.11 20:15:15 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:15:23 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:15:23 TIME: user.ping 0.15 ms
13.11 20:15:23 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:15:24 STATS: vdl.0 cache, locks:4
13.11 20:15:28 TIMER: Check auto-disconnect...
13.11 20:15:31 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:15:31 TIME: user.ping 0.13 ms
13.11 20:15:31 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:15:39 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:15:39 TIME: user.ping 0.13 ms
13.11 20:15:39 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:15:47 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:15:47 TIME: user.ping 0.2 ms
13.11 20:15:47 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:15:55 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:15:55 TIME: user.ping 0.13 ms
13.11 20:15:55 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:16:03 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:16:03 TIME: user.ping 0.11 ms
13.11 20:16:03 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:16:11 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:16:11 TIME: user.ping 0.12 ms
13.11 20:16:11 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:16:18 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:16:18 TIME: user.ping 0.13 ms
13.11 20:16:18 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:16:24 STATS: vdl.0 cache, locks:4
13.11 20:16:26 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:16:26 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:16:26 TIME: user.ping 0.13 ms
13.11 20:16:28 TIMER: Check auto-disconnect...
13.11 20:16:34 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:16:34 TIME: user.ping 0.16 ms
13.11 20:16:34 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:16:42 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:16:42 TIME: user.ping 0.12 ms
13.11 20:16:42 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:16:50 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:16:50 TIME: user.ping 0.12 ms
13.11 20:16:50 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:16:57 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:16:57 TIME: user.ping 0.12 ms
13.11 20:16:57 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:17:24 STATS: vdl.0 cache, locks:4
13.11 20:17:28 TIMER: Check auto-disconnect...
13.11 20:18:24 STATS: vdl.0 cache, locks:4
13.11 20:18:28 TIMER: Check auto-disconnect...
13.11 20:19:24 STATS: vdl.0 cache, locks:4
13.11 20:19:28 TIMER: Check auto-disconnect...
13.11 20:20:24 STATS: vdl.0 cache, locks:4
13.11 20:20:28 TIMER: Check auto-disconnect...
13.11 20:21:24 STATS: vdl.0 cache, locks:4
13.11 20:21:28 TIMER: Check auto-disconnect...
13.11 20:22:24 STATS: vdl.0 cache, locks:4
13.11 20:22:28 TIMER: Check auto-disconnect...
13.11 20:23:24 STATS: vdl.0 cache, locks:4
13.11 20:23:28 TIMER: Check auto-disconnect...
13.11 20:24:24 STATS: vdl.0 cache, locks:4
13.11 20:24:28 TIMER: Check auto-disconnect...
13.11 20:25:24 STATS: vdl.0 cache, locks:4
13.11 20:25:28 TIMER: Check auto-disconnect...
13.11 20:26:24 STATS: vdl.0 cache, locks:4
13.11 20:26:28 TIMER: Check auto-disconnect...
13.11 20:27:24 STATS: vdl.0 cache, locks:4
13.11 20:27:27 NET: Client (conid:42446324) connected to vdl.0 (clients:2)
13.11 20:27:28 TIMER: Check auto-disconnect...
13.11 20:27:28 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
13.11 20:27:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
13.11 20:27:28 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
13.11 20:27:28 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:27:28 STATS: vdl.0 cache connection, 1296 calls, total 0.99706244468689 sec spent, avg 0.77 ms
13.11 20:27:28 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
13.11 20:27:28 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
13.11 20:27:28 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 11 }
13.11 20:27:28 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
13.11 20:27:28 NET: Client (name:uid11 conid:86695710 TCP) disconnected from vdl.0 (clients:1)
13.11 20:27:28 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
13.11 20:27:28 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
13.11 20:27:28 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.11 20:27:28 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:27:28 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
13.11 20:27:28 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:27:28 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
13.11 20:27:28 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
13.11 20:27:28 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
13.11 20:27:28 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
13.11 20:27:28 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
13.11 20:27:28 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
13.11 20:27:28 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
13.11 20:27:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:27:32 TRACE: User not logon yet.
13.11 20:27:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:27:38 TRACE: User not logon yet.
13.11 20:27:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:27:45 TRACE: User not logon yet.
13.11 20:27:52 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:27:52 TRACE: User not logon yet.
13.11 20:27:59 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:27:59 TRACE: User not logon yet.
13.11 20:28:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:28:05 TRACE: User not logon yet.
13.11 20:28:12 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:28:12 TRACE: User not logon yet.
13.11 20:28:24 STATS: vdl.0 cache, locks:2
13.11 20:28:28 TIMER: Check auto-disconnect...
13.11 20:29:24 STATS: vdl.0 cache, locks:2
13.11 20:29:28 TIMER: Check auto-disconnect...
13.11 20:29:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:29:49 TRACE: User not logon yet.
13.11 20:29:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:29:56 TRACE: User not logon yet.
13.11 20:30:24 STATS: vdl.0 cache, locks:2
13.11 20:30:28 TIMER: Check auto-disconnect...
13.11 20:31:24 STATS: vdl.0 cache, locks:2
13.11 20:31:28 TIMER: Check auto-disconnect...
13.11 20:32:24 STATS: vdl.0 cache, locks:2
13.11 20:32:28 TIMER: Check auto-disconnect...
13.11 20:33:24 STATS: vdl.0 cache, locks:2
13.11 20:33:28 TIMER: Check auto-disconnect...
13.11 20:33:41 NET: Client (name:null conid:42446324 TCP) disconnected from vdl.0 (clients:0)
13.11 20:33:43 NET: Client (conid:46535162) connected to vdl.0 (clients:1)
13.11 20:33:44 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
13.11 20:33:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
13.11 20:33:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
13.11 20:33:44 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:33:44 STATS: vdl.0 cache connection, 1303 calls, total 1.0007426738739 sec spent, avg 0.77 ms
13.11 20:33:44 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
13.11 20:33:44 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
13.11 20:33:44 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
13.11 20:33:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479067417, lastLoginDate => 318, lastLoadDate => 1114 }, effects => { list => [] } }}, version => 0, id => 11 } }
13.11 20:33:44 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
13.11 20:33:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 11 } }
13.11 20:33:44 NET: Client login (conid:46535162, id:11, name:uid11)
13.11 20:33:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.205.41.214 }
13.11 20:33:44 -<<-: core/user.loginPost { _type => core/user.loginPost }
13.11 20:33:44 DB: SELECT token FROM tokens WHERE userid = 11
13.11 20:33:44 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
13.11 20:33:44 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
13.11 20:33:44 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
13.11 20:33:44 == NET: uid11 ret: user.join { name => uid11, type => user.join }
13.11 20:33:48 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:33:48 TIME: user.ping 0.13 ms
13.11 20:33:48 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:33:54 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
13.11 20:33:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.11 20:33:56 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:33:56 TIME: user.ping 0.15 ms
13.11 20:33:56 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:34:04 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:34:04 TIME: user.ping 0.12 ms
13.11 20:34:04 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:34:24 STATS: vdl.0 cache, locks:4
13.11 20:34:28 TIMER: Check auto-disconnect...
13.11 20:35:24 STATS: vdl.0 cache, locks:4
13.11 20:35:28 TIMER: Check auto-disconnect...
13.11 20:36:24 STATS: vdl.0 cache, locks:4
13.11 20:36:28 TIMER: Check auto-disconnect...
13.11 20:37:24 STATS: vdl.0 cache, locks:4
13.11 20:37:28 TIMER: Check auto-disconnect...
13.11 20:38:24 STATS: vdl.0 cache, locks:4
13.11 20:38:28 TIMER: Check auto-disconnect...
13.11 20:38:54 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:38:54 TIME: user.ping 0.12 ms
13.11 20:38:54 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:39:24 STATS: vdl.0 cache, locks:4
13.11 20:39:28 TIMER: Check auto-disconnect...
13.11 20:40:24 STATS: vdl.0 cache, locks:4
13.11 20:40:28 TIMER: Check auto-disconnect...
13.11 20:41:24 STATS: vdl.0 cache, locks:4
13.11 20:41:28 TIMER: Check auto-disconnect...
13.11 20:42:24 STATS: vdl.0 cache, locks:4
13.11 20:42:28 TIMER: Check auto-disconnect...
13.11 20:43:24 STATS: vdl.0 cache, locks:4
13.11 20:43:28 TIMER: Check auto-disconnect...
13.11 20:44:24 STATS: vdl.0 cache, locks:4
13.11 20:44:28 TIMER: Check auto-disconnect...
13.11 20:45:00 NET: Client (conid:59429168) connected to vdl.0 (clients:2)
13.11 20:45:01 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
13.11 20:45:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
13.11 20:45:01 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
13.11 20:45:01 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:45:01 STATS: vdl.0 cache connection, 1310 calls, total 1.00546479225159 sec spent, avg 0.77 ms
13.11 20:45:01 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
13.11 20:45:01 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
13.11 20:45:01 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 11 }
13.11 20:45:01 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
13.11 20:45:01 NET: Client (name:uid11 conid:46535162 TCP) disconnected from vdl.0 (clients:1)
13.11 20:45:01 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
13.11 20:45:01 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
13.11 20:45:01 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.11 20:45:01 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:45:01 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
13.11 20:45:01 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:45:01 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
13.11 20:45:01 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
13.11 20:45:01 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
13.11 20:45:01 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
13.11 20:45:01 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.11 20:45:01 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
13.11 20:45:01 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
13.11 20:45:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:45:05 TRACE: User not logon yet.
13.11 20:45:12 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:45:12 TRACE: User not logon yet.
13.11 20:45:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:45:20 TRACE: User not logon yet.
13.11 20:45:24 STATS: vdl.0 cache, locks:2
13.11 20:45:28 TIMER: Check auto-disconnect...
13.11 20:45:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:45:28 TRACE: User not logon yet.
13.11 20:45:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:45:36 TRACE: User not logon yet.
13.11 20:45:45 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:45:45 TRACE: User not logon yet.
13.11 20:45:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:45:53 TRACE: User not logon yet.
13.11 20:46:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:46:01 TRACE: User not logon yet.
13.11 20:46:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:46:09 TRACE: User not logon yet.
13.11 20:46:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:46:17 TRACE: User not logon yet.
13.11 20:46:24 STATS: vdl.0 cache, locks:2
13.11 20:46:25 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
13.11 20:46:25 TRACE: User not logon yet.
13.11 20:46:28 TIMER: Check auto-disconnect...
13.11 20:46:28 NET: Client (name:null conid:59429168 TCP) disconnected from vdl.0 (clients:0)
13.11 20:47:24 STATS: vdl.0 cache, locks:2
13.11 20:47:26 NET: Client (conid:11822053) connected to vdl.0 (clients:1)
13.11 20:47:27 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE= }
13.11 20:47:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11'
13.11 20:47:27 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid11' AND Password = 'uid11', _type => core/server.query }
13.11 20:47:27 -<<-: core/server.query { list => {{ name => uid11, networkid => , isbanned => false, id => 11 }}, errorCode => ok, _type => core/server.query }
13.11 20:47:27 STATS: vdl.0 cache connection, 1317 calls, total 1.00809669494629 sec spent, avg 0.77 ms
13.11 20:47:27 ->>-: core/user.isOnlineID { id => 11, _type => core/user.isOnlineID }
13.11 20:47:27 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
13.11 20:47:27 ->>-: core/cache.get { type => user, v => -1, id => 11, _type => core/cache.get }
13.11 20:47:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid11, deleted => false, year => null, email => null, networktype =>   , password => uid11, isbanned => false, regdate => 2016-11-13 20:03:37.670616+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479067417, lastLoginDate => 318, lastLoadDate => 1114 }, effects => { list => [] } }}, version => 0, id => 11 } }
13.11 20:47:27 ->>-: core/cache.get { type => questdata, v => -1, id => 11, _type => core/cache.get }
13.11 20:47:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 11 } }
13.11 20:47:27 NET: Client login (conid:11822053, id:11, name:uid11)
13.11 20:47:27 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 11, _type => core/user.loginPost, ipAddr => 178.205.41.214 }
13.11 20:47:27 -<<-: core/user.loginPost { _type => core/user.loginPost }
13.11 20:47:27 DB: SELECT token FROM tokens WHERE userid = 11
13.11 20:47:27 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 11, _type => core/server.query }
13.11 20:47:27 -<<-: core/server.query { list => {{ token => 2bc82f2c4a9116753552e63ed98b0bb2 }, { token => 85b64b23d67db655059a0afccd9e81c7 }}, errorCode => ok, _type => core/server.query }
13.11 20:47:27 == NET: uid11 ret: user.login { name => uid11, type => user.login, errorCode => ok, id => 11, token => 2bc82f2c4a9116753552e63ed98b0bb2 }
13.11 20:47:27 == NET: uid11 ret: user.join { name => uid11, type => user.join }
13.11 20:47:28 TIMER: Check auto-disconnect...
13.11 20:47:30 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:47:30 TIME: user.ping 0.13 ms
13.11 20:47:30 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:47:34 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 11, _type => core/cache.update }
13.11 20:47:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.11 20:47:38 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:47:38 TIME: user.ping 0.11 ms
13.11 20:47:38 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:47:46 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:47:46 TIME: user.ping 0.12 ms
13.11 20:47:46 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:47:54 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:47:54 TIME: user.ping 0.13 ms
13.11 20:47:54 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:48:02 ++ NET: uid11 req: user.ping { messageType => user.ping, msg => ok }
13.11 20:48:02 TIME: user.ping 0.12 ms
13.11 20:48:02 == NET: uid11 ret: user.ping { type => user.ping, errorCode => ok }
13.11 20:48:08 NET: Client (name:uid11 conid:11822053 TCP) disconnected from vdl.0 (clients:0)
13.11 20:48:08 DB: SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true
13.11 20:48:08 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=11 OR secondid=11 AND finished <> true, _type => core/server.query }
13.11 20:48:08 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.11 20:48:08 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:48:08 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
13.11 20:48:08 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.11 20:48:08 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
13.11 20:48:08 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 11, _type => core/cache.update }
13.11 20:48:08 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
13.11 20:48:08 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 11, _type => core/cache.update }
13.11 20:48:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.11 20:48:08 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 11, _type => core/user.logoutPost }
13.11 20:48:08 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
13.11 20:48:24 STATS: vdl.0 cache, locks:2
13.11 20:48:28 TIMER: Check auto-disconnect...
13.11 20:49:24 STATS: vdl.0 cache, locks:2
13.11 20:49:28 TIMER: Check auto-disconnect...
13.11 20:50:24 STATS: vdl.0 cache, locks:2
13.11 20:50:28 TIMER: Check auto-disconnect...
13.11 20:51:24 STATS: vdl.0 cache, locks:2
13.11 20:51:28 TIMER: Check auto-disconnect...
13.11 20:52:24 STATS: vdl.0 cache, locks:2
13.11 20:52:28 TIMER: Check auto-disconnect...
13.11 20:53:24 STATS: vdl.0 cache, locks:2
13.11 20:53:28 TIMER: Check auto-disconnect...
13.11 20:54:24 STATS: vdl.0 cache, locks:2
13.11 20:54:28 TIMER: Check auto-disconnect...
13.11 20:55:24 STATS: vdl.0 cache, locks:2
13.11 20:55:28 TIMER: Check auto-disconnect...
13.11 20:56:24 STATS: vdl.0 cache, locks:2
13.11 20:56:28 TIMER: Check auto-disconnect...
13.11 20:57:24 STATS: vdl.0 cache, locks:2
13.11 20:57:28 TIMER: Check auto-disconnect...
13.11 20:58:24 STATS: vdl.0 cache, locks:2
13.11 20:58:28 TIMER: Check auto-disconnect...
13.11 20:59:24 STATS: vdl.0 cache, locks:2
13.11 20:59:28 TIMER: Check auto-disconnect...
