19.10 14:00:06 TIMER: Check auto-disconnect...
19.10 14:00:15 STATS: vdl.0 cache, locks:0
19.10 14:01:06 TIMER: Check auto-disconnect...
19.10 14:01:15 STATS: vdl.0 cache, locks:0
19.10 14:02:06 TIMER: Check auto-disconnect...
19.10 14:02:15 STATS: vdl.0 cache, locks:0
19.10 14:03:06 TIMER: Check auto-disconnect...
19.10 14:03:15 STATS: vdl.0 cache, locks:0
19.10 14:04:06 TIMER: Check auto-disconnect...
19.10 14:04:15 STATS: vdl.0 cache, locks:0
19.10 14:05:06 TIMER: Check auto-disconnect...
19.10 14:05:52 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:05:52 -<<-: server.login ok
19.10 14:05:52 DB: SELECT * FROM LocalizationStrings
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 TIMER: Starting timer...
19.10 14:05:52 TIMER: Timer running...
19.10 14:05:52 DB: SELECT * FROM GameVars
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:05:52 -<<-: core/quest.getDaily ok
19.10 14:05:52 DB: SELECT * FROM UserAttributeTypes
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM UserVariableTypes
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:05:52 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM ItemGroups
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 SHOP: loading items...
19.10 14:05:52 ->>-: core/shop.getList { _type => core/shop.getList }
19.10 14:05:52 -<<-: core/shop.getList ok
19.10 14:05:52 SHOP: 0 items loaded (0 sec)
19.10 14:05:52 DB: SELECT * FROM EffectAttributeTypes
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM Effects
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:05:52 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:05:52 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 DB: SELECT * FROM Badges
19.10 14:05:52 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:05:52 -<<-: core/server.query ok
19.10 14:05:52 TIMER: Check auto-disconnect...
19.10 14:05:52 STATS: vdl.0 cache, locks:0
19.10 14:07:17 NET: Client (conid:84956267) connected to vdl.0 (clients:1)
19.10 14:07:18 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
19.10 14:07:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
19.10 14:07:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
19.10 14:07:18 -<<-: core/server.query ok
19.10 14:07:18 STATS: vdl.0 cache connection, 21 calls, total 0.0886285305023193 sec spent, avg 4.22 ms
19.10 14:07:18 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
19.10 14:07:18 -<<-: core/user.isOnlineID ok
19.10 14:07:18 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
19.10 14:07:18 -<<-: core/cache.get ok
19.10 14:07:18 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
19.10 14:07:18 -<<-: core/cache.get ok
19.10 14:07:18 NET: Client login (conid:84956267, id:2, name:test1)
19.10 14:07:18 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:07:18 -<<-: core/user.loginPost null
19.10 14:07:18 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
19.10 14:07:18 == NET: test1 ret: user.join { name => test1, type => user.join }
19.10 14:07:27 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
19.10 14:07:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:13:14 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:13:14 -<<-: server.login ok
19.10 14:13:14 DB: SELECT * FROM LocalizationStrings
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 TIMER: Starting timer...
19.10 14:13:14 TIMER: Timer running...
19.10 14:13:14 DB: SELECT * FROM GameVars
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:13:14 -<<-: core/quest.getDaily ok
19.10 14:13:14 DB: SELECT * FROM UserAttributeTypes
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM UserVariableTypes
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:13:14 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM ItemGroups
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 SHOP: loading items...
19.10 14:13:14 ->>-: core/shop.getList { _type => core/shop.getList }
19.10 14:13:14 -<<-: core/shop.getList ok
19.10 14:13:14 SHOP: 0 items loaded (0.001 sec)
19.10 14:13:14 DB: SELECT * FROM EffectAttributeTypes
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM Effects
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:13:14 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:13:14 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 DB: SELECT * FROM Badges
19.10 14:13:14 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:13:14 -<<-: core/server.query ok
19.10 14:13:14 TIMER: Check auto-disconnect...
19.10 14:13:14 STATS: vdl.0 cache, locks:0
19.10 14:13:14 TIMER: Check auto-disconnect...
19.10 14:13:14 STATS: vdl.0 cache, locks:0
19.10 14:13:14 TIMER: Check auto-disconnect...
19.10 14:13:14 STATS: vdl.0 cache, locks:0
19.10 14:17:01 NET: Client (conid:62966591) connected to vdl.0 (clients:1)
19.10 14:17:02 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
19.10 14:17:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
19.10 14:17:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
19.10 14:17:02 -<<-: core/server.query ok
19.10 14:17:02 STATS: vdl.0 cache connection, 21 calls, total 0.048541784286499 sec spent, avg 2.31 ms
19.10 14:17:02 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
19.10 14:17:02 -<<-: core/user.isOnlineID ok
19.10 14:17:02 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
19.10 14:17:02 -<<-: core/cache.get ok
19.10 14:17:02 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
19.10 14:17:02 -<<-: core/cache.get ok
19.10 14:17:02 NET: Client login (conid:62966591, id:2, name:test1)
19.10 14:17:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:17:02 -<<-: core/user.loginPost null
19.10 14:17:02 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
19.10 14:17:02 == NET: test1 ret: user.join { name => test1, type => user.join }
19.10 14:17:09 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
19.10 14:17:09 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:17:14 TIMER: Check auto-disconnect...
19.10 14:17:14 STATS: vdl.0 cache, locks:2
19.10 14:17:14 TIMER: Check auto-disconnect...
19.10 14:17:14 STATS: vdl.0 cache, locks:2
19.10 14:17:14 TIMER: Check auto-disconnect...
19.10 14:17:14 STATS: vdl.0 cache, locks:2
19.10 14:17:14 TIMER: Check auto-disconnect...
19.10 14:17:14 NET: Client (name:test1 conid:62966591 TCP) disconnected from vdl.0 (clients:0)
19.10 14:17:14 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
19.10 14:17:14 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
19.10 14:17:14 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:17:14 STATS: vdl.0 cache connection, 27 calls, total 0.063162088394165 sec spent, avg 2.34 ms
19.10 14:17:14 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:17:14 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:17:14 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:17:14 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:17:14 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
19.10 14:17:14 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:17:14 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
19.10 14:17:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:17:14 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
19.10 14:17:14 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:17:14 STATS: vdl.0 cache, locks:0
19.10 14:17:14 TIMER: Check auto-disconnect...
19.10 14:17:14 STATS: vdl.0 cache, locks:0
19.10 14:17:14 TIMER: Check auto-disconnect...
19.10 14:17:14 STATS: vdl.0 cache, locks:0
19.10 14:17:14 TIMER: Check auto-disconnect...
19.10 14:17:14 STATS: vdl.0 cache, locks:0
19.10 14:23:30 NET: Client (conid:19956590) connected to vdl.0 (clients:1)
19.10 14:23:31 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
19.10 14:23:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
19.10 14:23:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
19.10 14:23:31 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
19.10 14:23:31 STATS: vdl.0 cache connection, 32 calls, total 0.0693683624267578 sec spent, avg 2.17 ms
19.10 14:23:31 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
19.10 14:23:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:23:31 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
19.10 14:23:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 2 } }
19.10 14:23:31 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
19.10 14:23:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
19.10 14:23:31 NET: Client login (conid:19956590, id:2, name:test1)
19.10 14:23:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:23:31 -<<-: core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:23:31 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
19.10 14:23:31 == NET: test1 ret: user.join { name => test1, type => user.join }
19.10 14:23:36 NET: Client (name:test1 conid:19956590 TCP) disconnected from vdl.0 (clients:0)
19.10 14:23:36 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
19.10 14:23:36 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
19.10 14:23:36 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:23:36 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:23:36 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:23:36 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:23:36 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:23:36 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
19.10 14:23:36 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:23:36 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
19.10 14:23:36 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:23:36 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
19.10 14:23:36 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:24:14 TIMER: Check auto-disconnect...
19.10 14:24:14 STATS: vdl.0 cache, locks:0
19.10 14:39:29 NET: Client (conid:15056341) connected to vdl.0 (clients:1)
19.10 14:39:30 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
19.10 14:39:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
19.10 14:39:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
19.10 14:39:30 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
19.10 14:39:30 STATS: vdl.0 cache connection, 42 calls, total 0.0847036838531494 sec spent, avg 2.02 ms
19.10 14:39:30 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
19.10 14:39:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:39:30 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
19.10 14:39:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 2 } }
19.10 14:39:30 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
19.10 14:39:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
19.10 14:39:30 NET: Client login (conid:15056341, id:2, name:test1)
19.10 14:39:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:39:30 -<<-: core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:39:30 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
19.10 14:39:30 == NET: test1 ret: user.join { name => test1, type => user.join }
19.10 14:39:38 NET: Client (name:test1 conid:15056341 TCP) disconnected from vdl.0 (clients:0)
19.10 14:39:38 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
19.10 14:39:38 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
19.10 14:39:38 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:39:38 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:39:38 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:39:38 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:39:38 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:39:38 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
19.10 14:39:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:39:38 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
19.10 14:39:38 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:39:38 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
19.10 14:39:38 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:39:41 NET: Client (conid:66994745) connected to vdl.0 (clients:1)
19.10 14:39:41 ++ NET: null req: user.register { messageType => user.register }
19.10 14:39:41 DB: SELECT * FROM users
19.10 14:39:41 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
19.10 14:39:41 -<<-: core/server.query { list => {{ password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language =>   , id => 44, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 == NET: null ret: user.auth { type => user.auth, token => dWlkNjQ= }
19.10 14:39:41 DB: SELECT ID FROM Users WHERE Name = E'uid64'
19.10 14:39:41 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid64', _type => core/server.query }
19.10 14:39:41 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 DB: SELECT nextval('Users_id_seq') AS id
19.10 14:39:41 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
19.10 14:39:41 -<<-: core/server.query { list => {{ id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 ->>-: core/user.register { password => uid64, name => uid64, fullParams => { password => uid64, name => uid64, networkid => , networktype => , messageType => user.register, id => 64 }, networkid => , connectionID => 66994745, networktype => , email => , id => 64, _type => core/user.register }
19.10 14:39:41 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
19.10 14:39:41 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:39:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:39:41 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:39:41 -<<-: core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:39:41 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:39:41 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:39:41 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language =>   , networkid => , params => {}}, version => 0, id => 64 } }
19.10 14:39:41 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:39:41 -<<-: core/cache.get { errorCode => notFound, _type => core/cache.get }
19.10 14:39:41 ->>-: core/cache.create { type => questdata, id => 64, _type => core/cache.create }
19.10 14:39:41 -<<-: core/cache.create { errorCode => ok, _type => core/cache.create }
19.10 14:39:41 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:39:41 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 64 } }
19.10 14:39:41 NET: Client login (conid:66994745, id:64, name:uid64)
19.10 14:39:41 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:39:41 -<<-: core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:39:41 DB: SELECT ID FROM TempUserLogins WHERE UserID = 64 AND Date = 'today'::timestamp
19.10 14:39:41 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 64 AND Date = 'today'::timestamp, _type => core/server.query }
19.10 14:39:41 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (64, 'today'::timestamp)
19.10 14:39:41 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
19.10 14:39:41 == NET: uid64 ret: user.join { name => uid64, type => user.join }
19.10 14:39:41 -<<-: core/user.registerResponse { password => uid64, name => uid64, _isNotify => true, fullParams => { password => uid64, name => uid64, networkid => , networktype => , messageType => user.register, id => 64 }, networkid => , connectionID => 66994745, networktype => , email => , id => 64, _type => core/user.registerResponse }
19.10 14:39:41 == NET: uid64 ret: user.register { type => user.register, errorCode => ok }
19.10 14:39:41 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (64, 'today'::timestamp), _type => core/server.pending }} }
19.10 14:39:41 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
19.10 14:39:49 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:39:49 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:39:54 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:39:54 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:39:59 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:39:59 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:04 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:04 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:09 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:09 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:14 TIMER: Check auto-disconnect...
19.10 14:40:14 STATS: vdl.0 cache, locks:2
19.10 14:40:14 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:14 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:19 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:19 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:24 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:24 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:29 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:29 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:34 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:34 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:34 STATS: vdl.0 cache connection, 74 calls, total 0.249686717987061 sec spent, avg 3.37 ms
19.10 14:40:39 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:39 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:44 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:44 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:49 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:49 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:54 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:54 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:59 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:59 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:41:04 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:41:04 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:41:04 NET: Client (name:uid64 conid:66994745 TCP) disconnected from vdl.0 (clients:0)
19.10 14:41:04 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:41:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:41:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:41:04 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:41:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:41:04 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:41:04 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:41:05 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:41:05 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:41:05 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:41:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:41:05 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:41:05 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:41:09 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:41:09 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:41:13 NET: Client (conid:9160729) connected to vdl.0 (clients:1)
19.10 14:41:14 TIMER: Check auto-disconnect...
19.10 14:41:14 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:41:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:41:14 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:41:14 -<<-: core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:41:14 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:41:14 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:41:14 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:41:14 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 64 } }
19.10 14:41:14 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:41:14 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 64 } }
19.10 14:41:14 NET: Client login (conid:9160729, id:64, name:uid64)
19.10 14:41:14 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:41:14 -<<-: core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:41:14 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
19.10 14:41:14 == NET: uid64 ret: user.join { name => uid64, type => user.join }
19.10 14:41:14 STATS: vdl.0 cache, locks:3
19.10 14:41:14 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:41:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:41:41 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:41:41 -<<-: server.login ok
19.10 14:41:41 DB: SELECT * FROM LocalizationStrings
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 TIMER: Starting timer...
19.10 14:41:41 TIMER: Timer running...
19.10 14:41:41 DB: SELECT * FROM GameVars
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:41:41 -<<-: core/quest.getDaily ok
19.10 14:41:41 DB: SELECT * FROM UserAttributeTypes
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM UserVariableTypes
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:41:41 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM ItemGroups
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 SHOP: loading items...
19.10 14:41:41 ->>-: core/shop.getList { _type => core/shop.getList }
19.10 14:41:41 -<<-: core/shop.getList ok
19.10 14:41:41 SHOP: 0 items loaded (0.001 sec)
19.10 14:41:41 DB: SELECT * FROM EffectAttributeTypes
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM Effects
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:41:41 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:41:41 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:41:41 DB: SELECT * FROM Badges
19.10 14:41:41 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:41:41 -<<-: core/server.query ok
19.10 14:42:10 NET: Client (conid:3220799) connected to vdl.0 (clients:1)
19.10 14:42:11 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:42:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:42:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:42:11 -<<-: core/server.query ok
19.10 14:42:11 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:42:11 -<<-: core/user.isOnlineID ok
19.10 14:42:11 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:42:11 -<<-: core/cache.get ok
19.10 14:42:11 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:42:11 -<<-: core/cache.get ok
19.10 14:42:11 NET: Client login (conid:3220799, id:64, name:uid64)
19.10 14:42:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:42:11 -<<-: core/user.loginPost null
19.10 14:42:11 TRACE: Invalid field access : type
19.10 14:42:11 TRACE: 
Called from snipe/slave/ClientInfo.hx line 165
Called from modules/VDLTournamentModule.hx line 541
Called from snipe/slave/Server.hx line 928
Called from snipe/slave/Server.hx line 898
Called from snipe/slave/Server.hx line 1124
19.10 14:42:11 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:42:11 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:42:11 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:42:11 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:42:11 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:42:11 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:42:11 TRACE: Could not login.
19.10 14:42:11 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
19.10 14:42:41 TIMER: Check auto-disconnect...
19.10 14:42:41 STATS: vdl.0 cache, locks:0
19.10 14:42:41 TIMER: Check auto-disconnect...
19.10 14:42:41 STATS: vdl.0 cache, locks:0
19.10 14:42:41 TIMER: Check auto-disconnect...
19.10 14:42:41 STATS: vdl.0 cache, locks:0
19.10 14:45:19 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:45:19 -<<-: server.login ok
19.10 14:45:19 DB: SELECT * FROM LocalizationStrings
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 TIMER: Starting timer...
19.10 14:45:19 TIMER: Timer running...
19.10 14:45:19 DB: SELECT * FROM GameVars
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:45:19 -<<-: core/quest.getDaily ok
19.10 14:45:19 DB: SELECT * FROM UserAttributeTypes
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM UserVariableTypes
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:45:19 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM ItemGroups
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 SHOP: loading items...
19.10 14:45:19 ->>-: core/shop.getList { _type => core/shop.getList }
19.10 14:45:19 -<<-: core/shop.getList ok
19.10 14:45:19 SHOP: 0 items loaded (0.002 sec)
19.10 14:45:19 DB: SELECT * FROM EffectAttributeTypes
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM Effects
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:45:19 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:45:19 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 DB: SELECT * FROM Badges
19.10 14:45:19 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:45:19 -<<-: core/server.query ok
19.10 14:45:19 TIMER: Check auto-disconnect...
19.10 14:45:19 STATS: vdl.0 cache, locks:0
19.10 14:46:47 NET: Client (conid:64884051) connected to vdl.0 (clients:1)
19.10 14:46:48 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:46:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:46:48 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:46:48 -<<-: core/server.query ok
19.10 14:46:48 STATS: vdl.0 cache connection, 21 calls, total 0.0566275119781494 sec spent, avg 2.7 ms
19.10 14:46:48 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:46:48 -<<-: core/user.isOnlineID ok
19.10 14:46:48 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:46:48 -<<-: core/cache.get ok
19.10 14:46:48 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:46:48 -<<-: core/cache.get ok
19.10 14:46:48 NET: Client login (conid:64884051, id:64, name:uid64)
19.10 14:46:48 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:46:48 -<<-: core/user.loginPost null
19.10 14:46:48 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
19.10 14:46:48 == NET: uid64 ret: user.join { name => uid64, type => user.join }
19.10 14:46:54 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:46:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:48:08 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:48:08 -<<-: server.login ok
19.10 14:48:08 DB: SELECT * FROM LocalizationStrings
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 TIMER: Starting timer...
19.10 14:48:08 TIMER: Timer running...
19.10 14:48:08 DB: SELECT * FROM GameVars
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:48:08 -<<-: core/quest.getDaily ok
19.10 14:48:08 DB: SELECT * FROM UserAttributeTypes
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM UserVariableTypes
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:48:08 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM ItemGroups
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 SHOP: loading items...
19.10 14:48:08 ->>-: core/shop.getList { _type => core/shop.getList }
19.10 14:48:08 -<<-: core/shop.getList ok
19.10 14:48:08 SHOP: 0 items loaded (0.001 sec)
19.10 14:48:08 DB: SELECT * FROM EffectAttributeTypes
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM Effects
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:48:08 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:48:08 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:08 DB: SELECT * FROM Badges
19.10 14:48:08 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:48:08 -<<-: core/server.query ok
19.10 14:48:23 NET: Client (conid:59308796) connected to vdl.0 (clients:1)
19.10 14:48:24 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:48:24 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:48:24 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:48:24 -<<-: core/server.query ok
19.10 14:48:24 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:48:24 -<<-: core/user.isOnlineID ok
19.10 14:48:24 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:48:24 -<<-: core/cache.get ok
19.10 14:48:24 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:48:24 -<<-: core/cache.get ok
19.10 14:48:24 NET: Client login (conid:59308796, id:64, name:uid64)
19.10 14:48:24 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:48:24 -<<-: core/user.loginPost null
19.10 14:48:24 == NET: uid64 ret: user.data { city => null, type => user.data, year => null, email => null }
19.10 14:48:24 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
19.10 14:48:24 == NET: uid64 ret: user.join { name => uid64, type => user.join }
19.10 14:48:33 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:48:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:49:08 TIMER: Check auto-disconnect...
19.10 14:49:08 STATS: vdl.0 cache, locks:2
19.10 14:49:08 TIMER: Check auto-disconnect...
19.10 14:49:08 STATS: vdl.0 cache, locks:2
19.10 14:49:08 TIMER: Check auto-disconnect...
19.10 14:49:08 STATS: vdl.0 cache, locks:2
19.10 14:49:08 TIMER: Check auto-disconnect...
19.10 14:49:08 NET: Client (name:uid64 conid:59308796 TCP) disconnected from vdl.0 (clients:0)
19.10 14:49:08 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:49:08 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:49:08 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:49:08 STATS: vdl.0 cache connection, 27 calls, total 0.0590558052062988 sec spent, avg 2.19 ms
19.10 14:49:08 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:49:08 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:49:08 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:49:08 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:49:08 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:49:08 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:49:08 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:49:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:49:08 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:49:08 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:49:08 STATS: vdl.0 cache, locks:0
19.10 14:53:04 NET: Client (conid:87796397) connected to vdl.0 (clients:1)
19.10 14:53:05 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:53:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:53:05 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:53:05 -<<-: core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:53:05 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:53:05 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:53:05 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 64 } }
19.10 14:53:05 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 64 } }
19.10 14:53:05 NET: Client login (conid:87796397, id:64, name:uid64)
19.10 14:53:05 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:53:05 -<<-: core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:53:05 == NET: uid64 ret: user.data { city => null, type => user.data, year => null, email => null }
19.10 14:53:05 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
19.10 14:53:05 == NET: uid64 ret: user.join { name => uid64, type => user.join }
19.10 14:53:08 TIMER: Check auto-disconnect...
19.10 14:53:08 STATS: vdl.0 cache, locks:2
19.10 14:53:13 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:53:13 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:53:13 STATS: vdl.0 cache connection, 37 calls, total 0.0759875774383545 sec spent, avg 2.05 ms
19.10 14:53:14 NET: Client (name:uid64 conid:87796397 TCP) disconnected from vdl.0 (clients:0)
19.10 14:53:14 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:53:14 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:53:14 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:53:14 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:14 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:53:14 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:14 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:53:14 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:14 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:53:14 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:53:14 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:53:14 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:53:18 NET: Client (conid:18583062) connected to vdl.0 (clients:1)
19.10 14:53:19 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:53:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:53:19 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:53:19 -<<-: core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:53:19 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:53:19 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:53:19 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:19 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 2, id => 64 } }
19.10 14:53:19 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:19 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 64 } }
19.10 14:53:19 NET: Client login (conid:18583062, id:64, name:uid64)
19.10 14:53:19 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:53:19 -<<-: core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:53:19 == NET: uid64 ret: user.data { city => null, type => user.data, year => null, email => null }
19.10 14:53:19 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
19.10 14:53:19 == NET: uid64 ret: user.join { name => uid64, type => user.join }
19.10 14:53:28 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:53:28 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.10 14:53:46 NET: Client (name:uid64 conid:18583062 TCP) disconnected from vdl.0 (clients:0)
19.10 14:53:46 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:53:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:53:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:53:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:53:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:53:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:46 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
19.10 14:53:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:53:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:53:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:53:54 NET: Client (conid:71508986) connected to vdl.0 (clients:1)
19.10 14:53:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:53:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:53:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:53:55 -<<-: core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:53:55 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:53:55 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:53:55 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 4, id => 64 } }
19.10 14:53:55 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 64 } }
19.10 14:53:55 NET: Client login (conid:71508986, id:64, name:uid64)
19.10 14:53:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:53:55 -<<-: core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:53:55 == NET: uid64 ret: user.data { city => null, type => user.data, year => null, email => null }
19.10 14:53:55 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
19.10 14:53:55 == NET: uid64 ret: user.join { name => uid64, type => user.join }
19.10 14:53:58 NET: Client (name:uid64 conid:71508986 TCP) disconnected from vdl.0 (clients:0)
19.10 14:53:58 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:53:58 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:53:58 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:53:58 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:58 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:53:58 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:58 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:53:58 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:58 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
19.10 14:53:58 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:58 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.10 14:53:58 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:53:58 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:54:08 TIMER: Check auto-disconnect...
19.10 14:54:08 STATS: vdl.0 cache, locks:0
19.10 14:54:08 TIMER: Check auto-disconnect...
19.10 14:54:08 STATS: vdl.0 cache, locks:0
19.10 14:54:08 TIMER: Check auto-disconnect...
19.10 14:54:08 STATS: vdl.0 cache, locks:0
19.10 14:54:08 TIMER: Check auto-disconnect...
19.10 14:54:08 STATS: vdl.0 cache, locks:0
19.10 14:57:41 NET: Client (conid:47612634) connected to vdl.0 (clients:1)
19.10 14:57:42 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
19.10 14:57:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:57:42 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:57:42 -<<-: core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:57:42 STATS: vdl.0 cache connection, 64 calls, total 0.0985989570617676 sec spent, avg 1.54 ms
19.10 14:57:42 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:57:42 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:57:42 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:57:42 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 64 } }
19.10 14:57:42 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:57:42 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 64 } }
19.10 14:57:42 NET: Client login (conid:47612634, id:64, name:uid64)
19.10 14:57:42 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:57:42 -<<-: core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:57:42 == NET: uid64 ret: user.data { city => null, type => user.data, year => null, email => null }
19.10 14:57:42 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
19.10 14:57:42 == NET: uid64 ret: user.join { name => uid64, type => user.join }
19.10 14:57:48 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:57:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:2
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:2
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:2
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 NET: Client (name:uid64 conid:47612634 TCP) disconnected from vdl.0 (clients:0)
19.10 14:58:08 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:58:08 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:58:08 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:58:08 STATS: vdl.0 cache connection, 70 calls, total 0.105021953582764 sec spent, avg 1.5 ms
19.10 14:58:08 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:58:08 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:58:08 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:58:08 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
19.10 14:58:08 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:58:08 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:58:08 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:58:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:58:08 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:58:08 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
19.10 14:58:08 TIMER: Check auto-disconnect...
19.10 14:58:08 STATS: vdl.0 cache, locks:0
