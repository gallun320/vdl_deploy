26.01 20:00:15 TIMER: Check auto-disconnect...
26.01 20:00:16 STATS: vdl.0 cache, locks:0
26.01 20:01:15 TIMER: Check auto-disconnect...
26.01 20:01:16 STATS: vdl.0 cache, locks:0
26.01 20:02:15 TIMER: Check auto-disconnect...
26.01 20:02:16 STATS: vdl.0 cache, locks:0
26.01 20:03:15 TIMER: Check auto-disconnect...
26.01 20:03:16 STATS: vdl.0 cache, locks:0
26.01 20:04:15 TIMER: Check auto-disconnect...
26.01 20:08:40 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
26.01 20:08:40 -<<-: server.login ok
26.01 20:08:40 DB: SELECT * FROM LocalizationStrings
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 TIMER: Starting timer...
26.01 20:08:40 DB: SELECT * FROM GameVars
26.01 20:08:40 TIMER: Timer running...
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
26.01 20:08:40 -<<-: core/quest.getDaily ok
26.01 20:08:40 DB: SELECT * FROM UserAttributeTypes
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM UserVariableTypes
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.01 20:08:40 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM ItemGroups
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM Bundles ORDER BY ID
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM BundleItems ORDER BY ID
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 SHOP: loading items...
26.01 20:08:40 ->>-: core/shop.getList { _type => core/shop.getList }
26.01 20:08:40 -<<-: core/shop.getList ok
26.01 20:08:40 SHOP: 0 items loaded (0 sec)
26.01 20:08:40 DB: SELECT * FROM EffectAttributeTypes
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT * FROM Effects
26.01 20:08:40 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.01 20:08:40 -<<-: core/server.query ok
26.01 20:08:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_p