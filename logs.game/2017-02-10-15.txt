10.02 15:02:40 NET: Client (conid:15906898) connected to vdl.0 (clients:1)
10.02 15:02:41 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
10.02 15:02:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
10.02 15:02:41 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
10.02 15:02:41 -<<-: core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
10.02 15:02:41 STATS: vdl.0 cache connection, 57 calls, total 0.0862345695495605 sec spent, avg 1.51 ms
10.02 15:02:41 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
10.02 15:02:41 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.02 15:02:41 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
10.02 15:02:41 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, money => 0, deleted => false, year => , email => , networktype =>   , password => uid64, isbanned => false, regdate => 2017-02-10 14:40:21.41515-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1486755621, lastLoginDate => 41, lastLoadDate => 211 }, effects => { list => [] } }}, version => 0, id => 64 } }
10.02 15:02:41 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
10.02 15:02:41 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 64 } }
10.02 15:02:41 NET: Client login (conid:15906898, id:64, name:uid64)
10.02 15:02:41 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 178.204.207.36 }
10.02 15:02:41 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.02 15:02:41 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
10.02 15:02:41 == NET: uid64 ret: user.join { name => uid64, type => user.join }
10.02 15:02:45 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:02:45 TIME: user.ping 0.14 ms
10.02 15:02:45 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:02:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
10.02 15:02:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.02 15:03:08 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:03:08 TIME: user.ping 0.06 ms
10.02 15:03:08 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:03:20 TIMER: Check auto-disconnect...
10.02 15:03:20 STATS: vdl.0 cache, locks:2
10.02 15:03:30 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:03:30 TIME: user.ping 0.12 ms
10.02 15:03:30 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:40:47 ->>-: core/server.login { host => 188.120.242.253, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.120.242.253, externalPort => 3020 }
10.02 15:40:47 -<<-: server.login ok
10.02 15:40:47 DB: SELECT * FROM LocalizationStrings
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 TIMER: Starting timer...
10.02 15:40:47 DB: SELECT * FROM GameVars
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
10.02 15:40:47 -<<-: core/quest.getDaily ok
10.02 15:40:47 DB: SELECT * FROM UserAttributeTypes
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM UserVariableTypes
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
10.02 15:40:47 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM ItemGroups
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM Bundles ORDER BY ID
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM BundleItems ORDER BY ID
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 SHOP: loading items...
10.02 15:40:47 ->>-: core/shop.getList { _type => core/shop.getList }
10.02 15:40:47 -<<-: core/shop.getList ok
10.02 15:40:47 SHOP: 0 items loaded (0 sec)
10.02 15:40:47 DB: SELECT * FROM EffectAttributeTypes
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM Effects
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
10.02 15:40:47 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
10.02 15:40:47 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 DB: SELECT * FROM Badges
10.02 15:40:47 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
10.02 15:40:47 -<<-: core/server.query ok
10.02 15:40:47 TIMER: Timer running...
10.02 15:40:48 NET: Client (conid:97136003) connected to vdl.0 (clients:1)
10.02 15:40:48 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
10.02 15:40:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
10.02 15:40:48 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
10.02 15:40:48 -<<-: core/server.query ok
10.02 15:40:48 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
10.02 15:40:48 -<<-: core/user.isOnlineID ok
10.02 15:40:48 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
10.02 15:40:48 -<<-: core/cache.get ok
10.02 15:40:48 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
10.02 15:40:48 -<<-: core/cache.get ok
10.02 15:40:48 NET: Client login (conid:97136003, id:64, name:uid64)
10.02 15:40:48 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 178.204.207.36 }
10.02 15:40:48 -<<-: core/user.loginPost null
10.02 15:40:48 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
10.02 15:40:48 == NET: uid64 ret: user.join { name => uid64, type => user.join }
10.02 15:40:49 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:40:49 TIME: user.ping 0.11 ms
10.02 15:40:49 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:40:57 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
10.02 15:40:57 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 STATS: vdl.0 cache, locks:2
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 STATS: vdl.0 cache, locks:2
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 STATS: vdl.0 cache, locks:2
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 NET: Client (name:uid64 conid:97136003 TCP) disconnected from vdl.0 (clients:0)
10.02 15:41:47 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
10.02 15:41:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
10.02 15:41:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.02 15:41:47 STATS: vdl.0 cache connection, 27 calls, total 0.0236203670501709 sec spent, avg 0.87 ms
10.02 15:41:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.02 15:41:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.02 15:41:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.02 15:41:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
10.02 15:41:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
10.02 15:41:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.02 15:41:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
10.02 15:41:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.02 15:41:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
10.02 15:41:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.02 15:41:47 STATS: vdl.0 cache, locks:0
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 STATS: vdl.0 cache, locks:0
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 STATS: vdl.0 cache, locks:0
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 STATS: vdl.0 cache, locks:0
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 STATS: vdl.0 cache, locks:0
10.02 15:41:47 TIMER: Check auto-disconnect...
10.02 15:41:47 STATS: vdl.0 cache, locks:0
10.02 15:49:55 NET: Client (conid:85786834) connected to vdl.0 (clients:1)
10.02 15:49:56 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjQ= }
10.02 15:49:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
10.02 15:49:56 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
10.02 15:49:56 -<<-: core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
10.02 15:49:56 STATS: vdl.0 cache connection, 32 calls, total 0.0268874168395996 sec spent, avg 0.84 ms
10.02 15:49:56 ->>-: core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
10.02 15:49:56 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.02 15:49:56 ->>-: core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
10.02 15:49:56 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, money => 0, deleted => false, year => , email => , networktype =>   , password => uid64, isbanned => false, regdate => 2017-02-10 14:40:21.41515-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1486755621, lastLoginDate => 41, lastLoadDate => 211 }, effects => { list => [] } }}, version => 0, id => 64 } }
10.02 15:49:56 ->>-: core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
10.02 15:49:56 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 64 } }
10.02 15:49:56 NET: Client login (conid:85786834, id:64, name:uid64)
10.02 15:49:56 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 178.204.207.36 }
10.02 15:49:56 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.02 15:49:56 == NET: uid64 ret: user.login { name => uid64, type => user.login, errorCode => ok, id => 64 }
10.02 15:49:56 == NET: uid64 ret: user.join { name => uid64, type => user.join }
10.02 15:50:00 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:50:00 TIME: user.ping 0.19 ms
10.02 15:50:00 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:50:02 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
10.02 15:50:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.02 15:50:21 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:50:21 TIME: user.ping 0.13 ms
10.02 15:50:21 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:50:41 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:50:41 TIME: user.ping 0.12 ms
10.02 15:50:41 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:50:47 TIMER: Check auto-disconnect...
10.02 15:50:47 STATS: vdl.0 cache, locks:2
10.02 15:51:14 ++ NET: uid64 req: battle.find { userId => 0, type => random, messageType => battle.find }
10.02 15:51:14 ->>-: vdl/cache.battle.findRandom { user => { time => null, player => 64 }, _type => vdl/cache.battle.findRandom }
10.02 15:51:14 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
10.02 15:51:14 STATS: vdl.0 cache connection, 38 calls, total 0.0301408767700195 sec spent, avg 0.79 ms
10.02 15:51:14 TIME: battle.find 0.51 ms
10.02 15:51:14 == NET: uid64 ret: battle.find { type => battle.find, errorCode => ok }
10.02 15:51:19 ++ NET: uid64 req: battle.end { type => closeGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 0 }
10.02 15:51:19 ->>-: vdl/cache.battle.closeFind { userId => 64, _type => vdl/cache.battle.closeFind }
10.02 15:51:19 -<<-: vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
10.02 15:51:19 TIME: battle.end 0.34 ms
10.02 15:51:19 == NET: uid64 ret: battle.end { type => battle.end, errorCode => ok }
10.02 15:51:20 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:51:20 TIME: user.ping 0.09 ms
10.02 15:51:20 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:51:41 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:51:41 TIME: user.ping 0.13 ms
10.02 15:51:41 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:51:47 TIMER: Check auto-disconnect...
10.02 15:51:47 STATS: vdl.0 cache, locks:2
10.02 15:52:02 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:52:02 TIME: user.ping 0.11 ms
10.02 15:52:02 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:52:23 ++ NET: uid64 req: user.ping { messageType => user.ping, msg => ok }
10.02 15:52:23 TIME: user.ping 0.12 ms
10.02 15:52:23 == NET: uid64 ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:52:33 NET: Client (name:uid64 conid:85786834 TCP) disconnected from vdl.0 (clients:0)
10.02 15:52:33 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
10.02 15:52:33 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
10.02 15:52:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.02 15:52:33 STATS: vdl.0 cache connection, 40 calls, total 0.0311977863311768 sec spent, avg 0.78 ms
10.02 15:52:33 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.02 15:52:33 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.02 15:52:33 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.02 15:52:33 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
10.02 15:52:33 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
10.02 15:52:33 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.02 15:52:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
10.02 15:52:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.02 15:52:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
10.02 15:52:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.02 15:52:33 NET: Client (conid:80853609) connected to vdl.0 (clients:1)
10.02 15:52:33 ++ NET: null req: user.register { city => Gorgorod, password => qweqwe, name => Aimer, year => 1917, email => gavno@vopros.ru, messageType => user.register }
10.02 15:52:33 DB: SELECT ID FROM Users WHERE Name = E'Aimer'
10.02 15:52:33 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'Aimer', _type => core/server.query }
10.02 15:52:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.02 15:52:33 DB: SELECT nextval('Users_id_seq') AS id
10.02 15:52:33 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
10.02 15:52:33 -<<-: core/server.query { list => {{ id => 65 }}, errorCode => ok, _type => core/server.query }
10.02 15:52:33 ->>-: core/user.register { password => qweqwe, name => Aimer, fullParams => { city => Gorgorod, password => qweqwe, name => Aimer, year => 1917, networkid => , networktype => , email => gavno@vopros.ru, messageType => user.register, id => 65 }, networkid => , connectionID => 80853609, networktype => , email => , id => 65, _type => core/user.register }
10.02 15:52:33 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
10.02 15:52:33 -<<-: core/user.registerResponse { password => qweqwe, name => Aimer, _isNotify => true, fullParams => { city => Gorgorod, password => qweqwe, name => Aimer, year => 1917, networkid => , networktype => , email => gavno@vopros.ru, messageType => user.register, id => 65 }, networkid => , connectionID => 80853609, networktype => , email => , id => 65, _type => core/user.registerResponse }
10.02 15:52:33 == NET: null ret: user.register { type => user.register, errorCode => ok }
10.02 15:52:34 ++ NET: null req: user.login { password => qweqwe, name => Aimer, messageType => user.login }
10.02 15:52:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'qweqwe'
10.02 15:52:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'qweqwe', _type => core/server.query }
10.02 15:52:34 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 65 }}, errorCode => ok, _type => core/server.query }
10.02 15:52:34 ->>-: core/user.isOnlineID { id => 65, _type => core/user.isOnlineID }
10.02 15:52:34 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
10.02 15:52:34 ->>-: core/cache.get { type => user, v => -1, id => 65, _type => core/cache.get }
10.02 15:52:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, money => 0, deleted => false, year => , email => , networktype =>   , password => qweqwe, isbanned => false, regdate => 2017-02-10 15:52:33.973174-05, city => , language =>   , networkid => , params => { inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 65 } }
10.02 15:52:34 ->>-: core/cache.get { type => questdata, v => -1, id => 65, _type => core/cache.get }
10.02 15:52:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 65 } }
10.02 15:52:34 NET: Client login (conid:80853609, id:65, name:Aimer)
10.02 15:52:34 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 65, _type => core/user.loginPost, ipAddr => 178.204.207.36 }
10.02 15:52:34 -<<-: core/user.loginPost { _type => core/user.loginPost }
10.02 15:52:34 DB: SELECT ID FROM TempUserLogins WHERE UserID = 65 AND Date = 'today'::timestamp
10.02 15:52:34 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 65 AND Date = 'today'::timestamp, _type => core/server.query }
10.02 15:52:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.02 15:52:34 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (65, 'today'::timestamp)
10.02 15:52:34 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 65 }
10.02 15:52:34 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
10.02 15:52:34 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (65, 'today'::timestamp), _type => core/server.pending }} }
10.02 15:52:34 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
10.02 15:52:34 ++ NET: Aimer req: user.data { messageType => user.data }
10.02 15:52:34 ->>-: vdl/cache.user.getData { userId => 65, _type => vdl/cache.user.getData, money => 0 }
10.02 15:52:34 -<<-: vdl/cache.user.getData { info => { city => Gorgorod, year => 1917, email => gavno@vopros.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
10.02 15:52:34 TIME: user.data 0.94 ms
10.02 15:52:34 == NET: Aimer ret: user.data { info => { city => Gorgorod, year => 1917, email => gavno@vopros.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
10.02 15:52:37 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
10.02 15:52:37 TIME: user.addMoney 0.2 ms
10.02 15:52:37 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 100 }
10.02 15:52:37 ++ NET: Aimer req: user.data { messageType => user.data }
10.02 15:52:37 ->>-: vdl/cache.user.getData { userId => 65, _type => vdl/cache.user.getData, money => 100 }
10.02 15:52:37 -<<-: vdl/cache.user.getData { info => { city => Gorgorod, year => 1917, email => gavno@vopros.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 100 }
10.02 15:52:37 TIME: user.data 1.14 ms
10.02 15:52:37 == NET: Aimer ret: user.data { info => { city => Gorgorod, year => 1917, email => gavno@vopros.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 100 }
10.02 15:52:42 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1486759954, lastLoginDate => 41, money => 100, lastLoadDate => 211 } }}, type => user, unlock => false, id => 65, _type => core/cache.update }
10.02 15:52:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
10.02 15:52:45 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
10.02 15:52:45 TIME: user.ping 0.12 ms
10.02 15:52:45 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:52:47 TIMER: Check auto-disconnect...
10.02 15:52:47 STATS: vdl.0 cache, locks:2
10.02 15:53:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
10.02 15:53:05 TIME: user.ping 0.08 ms
10.02 15:53:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:53:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
10.02 15:53:25 TIME: user.ping 0.13 ms
10.02 15:53:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:53:26 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
10.02 15:53:26 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
10.02 15:53:26 -<<-: vdl/cache.tournament.getAvailableTournament { list => [], count => 0, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
10.02 15:53:26 TIME: tournament.getAvailableTournament 4.8 ms
10.02 15:53:26 == NET: Aimer ret: tournament.getAvailableTournament { list => [], count => 0, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
10.02 15:53:35 ++ NET: Aimer req: user.getFriendList { messageType => user.getFriendList }
10.02 15:53:35 ->>-: vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 65 }
10.02 15:53:35 -<<-: vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
10.02 15:53:35 STATS: vdl.0 cache connection, 59 calls, total 0.0512735843658447 sec spent, avg 0.87 ms
10.02 15:53:35 TIME: user.getFriendList 0.36 ms
10.02 15:53:35 == NET: Aimer ret: user.getFriendList { list => [], type => user.getFriendList, errorCode => ok, _type => vdl/cache.user.getFriendList }
10.02 15:53:41 ++ NET: Aimer req: user.searchEnemy { name => uid, messageType => user.searchEnemy }
10.02 15:53:41 ->>-: vdl/cache.user.searchEnemy { name => uid, id => 65, _type => vdl/cache.user.searchEnemy }
10.02 15:53:41 -<<-: vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => uid4, isOnline => false, id => 4 },{ name => uid3, isOnline => false, id => 3 },{ name => uid2, isOnline => false, id => 2 },{ name => uid7, isOnline => false, id => 7 },{ name => uid6, isOnline => false, id => 6 },{ name => uid5, isOnline => false, id => 5 },{ name => uid10, isOnline => false, id => 10 },{ name => uid9, isOnline => false, id => 9 },{ name => uid8, isOnline => false, id => 8 },{ name => uid13, isOnline => false, id => 13 },{ name => uid12, isOnline => false, id => 12 },{ name => uid11, isOnline => false, id => 11 },{ name => uid16, isOnline => false, id => 16 },{ name => uid15, isOnline => false, id => 15 },{ name => uid14, isOnline => false, id => 14 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid17, isOnline => false, id => 17 },{ name => uid22, isOnline => false, id => 22 },{ name => uid21, isOnline => false, id => 21 },{ name => uid20, isOnline => false, id => 20 },{ name => uid25, isOnline => false, id => 25 },{ name => uid24, isOnline => false, id => 24 },{ name => uid23, isOnline => false, id => 23 },{ name => uid27, isOnline => false, id => 27 },{ name => uid26, isOnline => false, id => 26 },{ name => uid28, isOnline => false, id => 28 },{ name => uid31, isOnline => false, id => 31 },{ name => uid30, isOnline => false, id => 30 },{ name => uid29, isOnline => false, id => 29 },{ name => uid34, isOnline => false, id => 34 },{ name => uid33, isOnline => false, id => 33 },{ name => uid32, isOnline => false, id => 32 },{ name => uid37, isOnline => false, id => 37 },{ name => uid35, isOnline => false, id => 35 },{ name => uid39, isOnline => false, id => 39 },{ name => uid43, isOnline => false, id => 43 },{ name => uid46, isOnline => false, id => 46 },{ name => uid50, isOnline => false, id => 50 },{ name => uid47, isOnline => false, id => 47 },{ name => uid51, isOnline => false, id => 51 },{ name => uid36, isOnline => false, id => 36 },{ name => uid40, isOnline => false, id => 40 },{ name => uid38, isOnline => false, id => 38 },{ name => uid41, isOnline => false, id => 41 },{ name => uid42, isOnline => false, id => 42 },{ name => uid45, isOnline => false, id => 45 },{ name => uid44, isOnline => false, id => 44 },{ name => uid49, isOnline => false, id => 49 },{ name => uid48, isOnline => false, id => 48 }] }
10.02 15:53:41 TIME: user.searchEnemy 1.96 ms
10.02 15:53:41 ++ NET: Aimer req: user.searchEnemy { name => uid, messageType => user.searchEnemy }
10.02 15:53:41 == NET: Aimer ret: user.searchEnemy { list => [{ name => uid4, isOnline => false, id => 4 },{ name => uid3, isOnline => false, id => 3 },{ name => uid2, isOnline => false, id => 2 },{ name => uid7, isOnline => false, id => 7 },{ name => uid6, isOnline => false, id => 6 },{ name => uid5, isOnline => false, id => 5 },{ name => uid10, isOnline => false, id => 10 },{ name => uid9, isOnline => false, id => 9 },{ name => uid8, isOnline => false, id => 8 },{ name => uid13, isOnline => false, id => 13 },{ name => uid12, isOnline => false, id => 12 },{ name => uid11, isOnline => false, id => 11 },{ name => uid16, isOnline => false, id => 16 },{ name => uid15, isOnline => false, id => 15 },{ name => uid14, isOnline => false, id => 14 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid17, isOnline => false, id => 17 },{ name => uid22, isOnline => false, id => 22 },{ name => uid21, isOnline => false, id => 21 },{ name => uid20, isOnline => false, id => 20 },{ name => uid25, isOnline => false, id => 25 },{ name => uid24, isOnline => false, id => 24 },{ name => uid23, isOnline => false, id => 23 },{ name => uid27, isOnline => false, id => 27 },{ name => uid26, isOnline => false, id => 26 },{ name => uid28, isOnline => false, id => 28 },{ name => uid31, isOnline => false, id => 31 },{ name => uid30, isOnline => false, id => 30 },{ name => uid29, isOnline => false, id => 29 },{ name => uid34, isOnline => false, id => 34 },{ name => uid33, isOnline => false, id => 33 },{ name => uid32, isOnline => false, id => 32 },{ name => uid37, isOnline => false, id => 37 },{ name => uid35, isOnline => false, id => 35 },{ name => uid39, isOnline => false, id => 39 },{ name => uid43, isOnline => false, id => 43 },{ name => uid46, isOnline => false, id => 46 },{ name => uid50, isOnline => false, id => 50 },{ name => uid47, isOnline => false, id => 47 },{ name => uid51, isOnline => false, id => 51 },{ name => uid36, isOnline => false, id => 36 },{ name => uid40, isOnline => false, id => 40 },{ name => uid38, isOnline => false, id => 38 },{ name => uid41, isOnline => false, id => 41 },{ name => uid42, isOnline => false, id => 42 },{ name => uid45, isOnline => false, id => 45 },{ name => uid44, isOnline => false, id => 44 },{ name => uid49, isOnline => false, id => 49 },{ name => uid48, isOnline => false, id => 48 }], type => user.searchEnemy, errorCode => ok }
10.02 15:53:41 ->>-: vdl/cache.user.searchEnemy { name => uid, id => 65, _type => vdl/cache.user.searchEnemy }
10.02 15:53:41 -<<-: vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => uid4, isOnline => false, id => 4 },{ name => uid3, isOnline => false, id => 3 },{ name => uid2, isOnline => false, id => 2 },{ name => uid7, isOnline => false, id => 7 },{ name => uid6, isOnline => false, id => 6 },{ name => uid5, isOnline => false, id => 5 },{ name => uid10, isOnline => false, id => 10 },{ name => uid9, isOnline => false, id => 9 },{ name => uid8, isOnline => false, id => 8 },{ name => uid13, isOnline => false, id => 13 },{ name => uid12, isOnline => false, id => 12 },{ name => uid11, isOnline => false, id => 11 },{ name => uid16, isOnline => false, id => 16 },{ name => uid15, isOnline => false, id => 15 },{ name => uid14, isOnline => false, id => 14 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid17, isOnline => false, id => 17 },{ name => uid22, isOnline => false, id => 22 },{ name => uid21, isOnline => false, id => 21 },{ name => uid20, isOnline => false, id => 20 },{ name => uid25, isOnline => false, id => 25 },{ name => uid24, isOnline => false, id => 24 },{ name => uid23, isOnline => false, id => 23 },{ name => uid27, isOnline => false, id => 27 },{ name => uid26, isOnline => false, id => 26 },{ name => uid28, isOnline => false, id => 28 },{ name => uid31, isOnline => false, id => 31 },{ name => uid30, isOnline => false, id => 30 },{ name => uid29, isOnline => false, id => 29 },{ name => uid34, isOnline => false, id => 34 },{ name => uid33, isOnline => false, id => 33 },{ name => uid32, isOnline => false, id => 32 },{ name => uid37, isOnline => false, id => 37 },{ name => uid35, isOnline => false, id => 35 },{ name => uid39, isOnline => false, id => 39 },{ name => uid43, isOnline => false, id => 43 },{ name => uid46, isOnline => false, id => 46 },{ name => uid50, isOnline => false, id => 50 },{ name => uid47, isOnline => false, id => 47 },{ name => uid51, isOnline => false, id => 51 },{ name => uid36, isOnline => false, id => 36 },{ name => uid40, isOnline => false, id => 40 },{ name => uid38, isOnline => false, id => 38 },{ name => uid41, isOnline => false, id => 41 },{ name => uid42, isOnline => false, id => 42 },{ name => uid45, isOnline => false, id => 45 },{ name => uid44, isOnline => false, id => 44 },{ name => uid49, isOnline => false, id => 49 },{ name => uid48, isOnline => false, id => 48 }] }
10.02 15:53:41 TIME: user.searchEnemy 3.11 ms
10.02 15:53:41 == NET: Aimer ret: user.searchEnemy { list => [{ name => uid4, isOnline => false, id => 4 },{ name => uid3, isOnline => false, id => 3 },{ name => uid2, isOnline => false, id => 2 },{ name => uid7, isOnline => false, id => 7 },{ name => uid6, isOnline => false, id => 6 },{ name => uid5, isOnline => false, id => 5 },{ name => uid10, isOnline => false, id => 10 },{ name => uid9, isOnline => false, id => 9 },{ name => uid8, isOnline => false, id => 8 },{ name => uid13, isOnline => false, id => 13 },{ name => uid12, isOnline => false, id => 12 },{ name => uid11, isOnline => false, id => 11 },{ name => uid16, isOnline => false, id => 16 },{ name => uid15, isOnline => false, id => 15 },{ name => uid14, isOnline => false, id => 14 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid17, isOnline => false, id => 17 },{ name => uid22, isOnline => false, id => 22 },{ name => uid21, isOnline => false, id => 21 },{ name => uid20, isOnline => false, id => 20 },{ name => uid25, isOnline => false, id => 25 },{ name => uid24, isOnline => false, id => 24 },{ name => uid23, isOnline => false, id => 23 },{ name => uid27, isOnline => false, id => 27 },{ name => uid26, isOnline => false, id => 26 },{ name => uid28, isOnline => false, id => 28 },{ name => uid31, isOnline => false, id => 31 },{ name => uid30, isOnline => false, id => 30 },{ name => uid29, isOnline => false, id => 29 },{ name => uid34, isOnline => false, id => 34 },{ name => uid33, isOnline => false, id => 33 },{ name => uid32, isOnline => false, id => 32 },{ name => uid37, isOnline => false, id => 37 },{ name => uid35, isOnline => false, id => 35 },{ name => uid39, isOnline => false, id => 39 },{ name => uid43, isOnline => false, id => 43 },{ name => uid46, isOnline => false, id => 46 },{ name => uid50, isOnline => false, id => 50 },{ name => uid47, isOnline => false, id => 47 },{ name => uid51, isOnline => false, id => 51 },{ name => uid36, isOnline => false, id => 36 },{ name => uid40, isOnline => false, id => 40 },{ name => uid38, isOnline => false, id => 38 },{ name => uid41, isOnline => false, id => 41 },{ name => uid42, isOnline => false, id => 42 },{ name => uid45, isOnline => false, id => 45 },{ name => uid44, isOnline => false, id => 44 },{ name => uid49, isOnline => false, id => 49 },{ name => uid48, isOnline => false, id => 48 }], type => user.searchEnemy, errorCode => ok }
10.02 15:53:47 TIMER: Check auto-disconnect...
10.02 15:53:47 STATS: vdl.0 cache, locks:2
10.02 15:53:49 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
10.02 15:53:49 TIME: user.ping 0.12 ms
10.02 15:53:49 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
10.02 15:54:12 ++ NET: Aimer req: user.getAccessFriend { messageType => user.getAccessFriend }
10.02 15:54:12 ->>-: vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 65 }
10.02 15:54:12 -<<-: vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:54:12 TIME: user.getAccessFriend 0.26 ms
10.02 15:54:12 == NET: Aimer ret: user.getAccessFriend { list => [], type => user.getAccessFriend, errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:54:32 ++ NET: Aimer req: user.getAccessFriend { messageType => user.getAccessFriend }
10.02 15:54:32 ->>-: vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 65 }
10.02 15:54:32 -<<-: vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:54:32 TIME: user.getAccessFriend 0.39 ms
10.02 15:54:32 == NET: Aimer ret: user.getAccessFriend { list => [], type => user.getAccessFriend, errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:54:47 TIMER: Check auto-disconnect...
10.02 15:54:47 STATS: vdl.0 cache, locks:2
10.02 15:54:53 ++ NET: Aimer req: user.getAccessFriend { messageType => user.getAccessFriend }
10.02 15:54:53 ->>-: vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 65 }
10.02 15:54:53 -<<-: vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:54:53 STATS: vdl.0 cache connection, 64 calls, total 0.0571815967559814 sec spent, avg 0.89 ms
10.02 15:54:53 TIME: user.getAccessFriend 0.56 ms
10.02 15:54:53 == NET: Aimer ret: user.getAccessFriend { list => [], type => user.getAccessFriend, errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:55:13 ++ NET: Aimer req: user.getAccessFriend { messageType => user.getAccessFriend }
10.02 15:55:13 ->>-: vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 65 }
10.02 15:55:13 -<<-: vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:55:13 TIME: user.getAccessFriend 0.41 ms
10.02 15:55:13 == NET: Aimer ret: user.getAccessFriend { list => [], type => user.getAccessFriend, errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:55:33 ++ NET: Aimer req: user.getAccessFriend { messageType => user.getAccessFriend }
10.02 15:55:33 ->>-: vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 65 }
10.02 15:55:33 -<<-: vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:55:33 TIME: user.getAccessFriend 0.43 ms
10.02 15:55:33 == NET: Aimer ret: user.getAccessFriend { list => [], type => user.getAccessFriend, errorCode => ok, _type => vdl/cache.user.getAccessFriend }
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:2
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:2
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:2
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 NET: Client (name:Aimer conid:80853609 TCP) disconnected from vdl.0 (clients:0)
10.02 15:55:47 DB: SELECT id FROM battle WHERE firstid=65 OR secondid=65 AND finished <> true
10.02 15:55:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=65 OR secondid=65 AND finished <> true, _type => core/server.query }
10.02 15:55:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
10.02 15:55:47 STATS: vdl.0 cache connection, 67 calls, total 0.0584325790405273 sec spent, avg 0.87 ms
10.02 15:55:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.02 15:55:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
10.02 15:55:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
10.02 15:55:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
10.02 15:55:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 65, _type => core/cache.update }
10.02 15:55:47 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
10.02 15:55:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 65, _type => core/cache.update }
10.02 15:55:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
10.02 15:55:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 65, _type => core/user.logoutPost }
10.02 15:55:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
10.02 15:55:47 STATS: vdl.0 cache, locks:0
10.02 15:55:47 TIMER: Check auto-disconnect...
