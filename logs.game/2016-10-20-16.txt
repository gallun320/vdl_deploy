20.10 16:09:30 NET: Client (conid:82293885) connected to vdl.0 (clients:1)
20.10 16:09:31 ++ NET: null req: user.register { messageType => user.register }
20.10 16:09:31 DB: SELECT * FROM users
20.10 16:09:31 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
20.10 16:09:31 -<<-: core/server.query ok
20.10 16:09:31 STATS: vdl.0 cache connection, 21 calls, total 0.100083112716675 sec spent, avg 4.77 ms
20.10 16:09:31 DB: SELECT ID FROM Users WHERE Name = E'uid87'
20.10 16:09:31 == NET: null ret: user.auth { type => user.auth, token => dWlkODc= }
20.10 16:09:31 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid87', _type => core/server.query }
20.10 16:09:31 -<<-: core/server.query ok
20.10 16:09:31 DB: SELECT nextval('Users_id_seq') AS id
20.10 16:09:31 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
20.10 16:09:31 -<<-: core/server.query ok
20.10 16:09:31 ->>-: core/user.register { password => uid87, name => uid87, fullParams => { password => uid87, name => uid87, networkid => , networktype => , messageType => user.register, id => 87 }, networkid => , connectionID => 82293885, networktype => , email => , id => 87, _type => core/user.register }
20.10 16:09:31 -<<-: core/user.register ok
20.10 16:09:31 -<<-: core/user.registerResponse null
20.10 16:09:31 == NET: null ret: user.register { type => user.register, errorCode => ok }
20.10 16:09:32 ++ NET: null req: user.login { messageType => user.login, token => dWlkODc= }
20.10 16:09:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid87' AND Password = E'uid87'
20.10 16:09:32 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid87' AND Password = E'uid87', _type => core/server.query }
20.10 16:09:32 -<<-: core/server.query ok
20.10 16:09:32 ->>-: core/user.isOnlineID { id => 87, _type => core/user.isOnlineID }
20.10 16:09:32 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:09:32 ->>-: core/cache.get { type => user, v => -1, id => 87, _type => core/cache.get }
20.10 16:09:32 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid87, deleted => false, email => , networktype =>   , password => uid87, isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 87 } }
20.10 16:09:32 ->>-: core/cache.get { type => questdata, v => -1, id => 87, _type => core/cache.get }
20.10 16:09:32 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 87 } }
20.10 16:09:32 NET: Client login (conid:82293885, id:87, name:uid87)
20.10 16:09:32 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 87, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:09:32 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.10 16:09:32 DB: SELECT ID FROM TempUserLogins WHERE UserID = 87 AND Date = 'today'::timestamp
20.10 16:09:32 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 87 AND Date = 'today'::timestamp, _type => core/server.query }
20.10 16:09:32 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:09:32 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (87, 'today'::timestamp)
20.10 16:09:32 == NET: uid87 ret: user.login { name => uid87, type => user.login, errorCode => ok, id => 87 }
20.10 16:09:32 == NET: uid87 ret: user.join { name => uid87, type => user.join }
20.10 16:09:32 == NET: uid87 ret: tournament.enemy { data => { name => test, tournamentId => 1, enemy.id => 1, enemy.name => test1, round => 1, enemy.num => 2, battleId => 1, player => 1 }, type => tournament.enemy }
20.10 16:09:32 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (87, 'today'::timestamp), _type => core/server.pending }} }
20.10 16:09:32 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
20.10 16:09:37 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476968972, lastLoginDate => 294, lastLoadDate => 1021 } }}, type => user, unlock => false, id => 87, _type => core/cache.update }
20.10 16:09:37 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:09:42 TIMER: Check auto-disconnect...
20.10 16:09:42 STATS: vdl.0 cache, locks:2
20.10 16:09:42 TIMER: Check auto-disconnect...
20.10 16:09:42 STATS: vdl.0 cache, locks:2
20.10 16:09:42 TIMER: Check auto-disconnect...
20.10 16:09:42 STATS: vdl.0 cache, locks:2
20.10 16:09:42 TIMER: Check auto-disconnect...
20.10 16:09:42 NET: Client (name:uid87 conid:82293885 TCP) disconnected from vdl.0 (clients:0)
20.10 16:09:42 DB: SELECT id FROM battle WHERE firstid=87 OR secondid=87 AND finished <> true
20.10 16:09:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=87 OR secondid=87 AND finished <> true, _type => core/server.query }
20.10 16:09:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:09:42 STATS: vdl.0 cache connection, 33 calls, total 0.14396858215332 sec spent, avg 4.36 ms
20.10 16:09:42 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:09:42 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:09:42 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:09:42 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
20.10 16:09:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 87, _type => core/cache.update }
20.10 16:09:42 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.10 16:09:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 87, _type => core/cache.update }
20.10 16:09:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:09:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 87, _type => core/user.logoutPost }
20.10 16:09:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:09:42 STATS: vdl.0 cache, locks:0
20.10 16:09:42 TIMER: Check auto-disconnect...
20.10 16:09:42 STATS: vdl.0 cache, locks:0
20.10 16:09:42 TIMER: Check auto-disconnect...
20.10 16:09:42 STATS: vdl.0 cache, locks:0
20.10 16:09:42 TIMER: Check auto-disconnect...
20.10 16:09:42 STATS: vdl.0 cache, locks:0
20.10 16:16:00 NET: Client (conid:83855148) connected to vdl.0 (clients:1)
20.10 16:16:01 ++ NET: null req: user.login { messageType => user.login, token => dWlkODc= }
20.10 16:16:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid87' AND Password = E'uid87'
20.10 16:16:01 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid87' AND Password = E'uid87', _type => core/server.query }
20.10 16:16:01 -<<-: core/server.query { list => {{ name => uid87, networkid => , isbanned => false, id => 87 }}, errorCode => ok, _type => core/server.query }
20.10 16:16:01 STATS: vdl.0 cache connection, 38 calls, total 0.151911735534668 sec spent, avg 4 ms
20.10 16:16:01 ->>-: core/user.isOnlineID { id => 87, _type => core/user.isOnlineID }
20.10 16:16:01 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:16:01 ->>-: core/cache.get { type => user, v => -1, id => 87, _type => core/cache.get }
20.10 16:16:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid87, deleted => false, email => , networktype =>   , password => uid87, isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476968972, lastLoginDate => 294, lastLoadDate => 1021 }, effects => { list => [] } }}, version => 0, id => 87 } }
20.10 16:16:01 ->>-: core/cache.get { type => questdata, v => -1, id => 87, _type => core/cache.get }
20.10 16:16:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 87 } }
20.10 16:16:01 NET: Client login (conid:83855148, id:87, name:uid87)
20.10 16:16:01 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 87, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:16:01 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.10 16:16:01 == NET: uid87 ret: user.login { name => uid87, type => user.login, errorCode => ok, id => 87 }
20.10 16:16:01 == NET: uid87 ret: user.join { name => uid87, type => user.join }
20.10 16:16:01 == NET: uid87 ret: tournament.enemy { data => { name => test, tournamentId => 1, enemy.id => 1, enemy.name => test1, round => 1, enemy.num => 2, battleId => 1, player => 1 }, type => tournament.enemy }
20.10 16:16:07 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 87, _type => core/cache.update }
20.10 16:16:07 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:16:42 TIMER: Check auto-disconnect...
20.10 16:16:42 STATS: vdl.0 cache, locks:2
20.10 16:17:15 NET: Client (name:uid87 conid:83855148 TCP) disconnected from vdl.0 (clients:0)
20.10 16:17:15 DB: SELECT id FROM battle WHERE firstid=87 OR secondid=87 AND finished <> true
20.10 16:17:15 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=87 OR secondid=87 AND finished <> true, _type => core/server.query }
20.10 16:17:15 NET: Client (conid:87175575) connected to vdl.0 (clients:1)
20.10 16:17:15 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:17:15 STATS: vdl.0 cache connection, 44 calls, total 0.162185668945312 sec spent, avg 3.69 ms
20.10 16:17:15 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:17:15 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:17:15 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:17:15 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
20.10 16:17:15 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 87, _type => core/cache.update }
20.10 16:17:15 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:17:15 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 87, _type => core/cache.update }
20.10 16:17:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:17:15 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 87, _type => core/user.logoutPost }
20.10 16:17:15 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:17:15 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.10 16:17:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.10 16:17:15 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.10 16:17:15 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.10 16:17:15 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.10 16:17:15 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:17:15 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.10 16:17:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476889621, lastLoginDate => 294, lastLoadDate => 1021 }, effects => { list => [] } }}, version => 0, id => 76 } }
20.10 16:17:15 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.10 16:17:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
20.10 16:17:15 NET: Client login (conid:87175575, id:76, name:Aimer)
20.10 16:17:15 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:17:15 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.10 16:17:15 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.10 16:17:15 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.10 16:17:15 == NET: Aimer ret: tournament.enemy { data => { name => test, tournamentId => 1, enemy.id => 1, enemy.name => test1, round => 1, enemy.num => 2, battleId => 1, player => 1 }, type => tournament.enemy }
20.10 16:17:15 ++ NET: Aimer req: user.data { messageType => user.data }
20.10 16:17:15 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
20.10 16:17:15 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:17:15 TIME: user.data 0.74 ms
20.10 16:17:15 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:17:22 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.10 16:17:22 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:2
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:2
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:2
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 NET: Client (name:Aimer conid:87175575 TCP) disconnected from vdl.0 (clients:0)
20.10 16:17:42 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.10 16:17:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.10 16:17:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:17:42 STATS: vdl.0 cache connection, 56 calls, total 0.177804708480835 sec spent, avg 3.18 ms
20.10 16:17:42 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:17:42 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:17:42 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:17:42 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
20.10 16:17:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.10 16:17:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:17:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.10 16:17:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:17:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.10 16:17:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:17:42 STATS: vdl.0 cache, locks:0
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:0
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:0
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:0
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:0
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:0
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:0
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:17:42 STATS: vdl.0 cache, locks:0
20.10 16:17:42 TIMER: Check auto-disconnect...
20.10 16:28:43 STATS: vdl.0 cache, locks:0
20.10 16:29:42 TIMER: Check auto-disconnect...
20.10 16:29:43 STATS: vdl.0 cache, locks:0
20.10 16:30:42 TIMER: Check auto-disconnect...
20.10 16:30:43 STATS: vdl.0 cache, locks:0
20.10 16:31:22 NET: Client (conid:73769851) connected to vdl.0 (clients:1)
20.10 16:31:23 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.10 16:31:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.10 16:31:23 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.10 16:31:23 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.10 16:31:23 STATS: vdl.0 cache connection, 61 calls, total 0.184634685516357 sec spent, avg 3.03 ms
20.10 16:31:23 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.10 16:31:23 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:31:23 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.10 16:31:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476889621, lastLoginDate => 294, lastLoadDate => 1021 }, effects => { list => [] } }}, version => 0, id => 76 } }
20.10 16:31:23 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.10 16:31:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
20.10 16:31:23 NET: Client login (conid:73769851, id:76, name:Aimer)
20.10 16:31:23 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:31:23 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.10 16:31:23 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.10 16:31:23 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.10 16:31:23 == NET: Aimer ret: tournament.enemy { data => { name => test, tournamentId => 1, enemy.id => 1, enemy.name => test1, round => 1, enemy.num => 2, battleId => 1, player => 1 }, type => tournament.enemy }
20.10 16:31:24 ++ NET: Aimer req: user.data { messageType => user.data }
20.10 16:31:24 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
20.10 16:31:24 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:31:24 TIME: user.data 0.89 ms
20.10 16:31:24 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:31:33 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.10 16:31:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:31:42 TIMER: Check auto-disconnect...
20.10 16:31:43 STATS: vdl.0 cache, locks:2
20.10 16:32:42 TIMER: Check auto-disconnect...
20.10 16:32:43 STATS: vdl.0 cache, locks:2
20.10 16:33:42 TIMER: Check auto-disconnect...
20.10 16:33:43 STATS: vdl.0 cache, locks:2
20.10 16:34:42 TIMER: Check auto-disconnect...
20.10 16:34:42 NET: Client (name:Aimer conid:73769851 TCP) disconnected from vdl.0 (clients:0)
20.10 16:34:42 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.10 16:34:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.10 16:34:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:34:42 STATS: vdl.0 cache connection, 68 calls, total 0.195273637771606 sec spent, avg 2.87 ms
20.10 16:34:42 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:34:42 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:34:42 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:34:42 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
20.10 16:34:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.10 16:34:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:34:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.10 16:34:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:34:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.10 16:34:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:34:43 STATS: vdl.0 cache, locks:0
20.10 16:34:49 NET: Client (conid:58139995) connected to vdl.0 (clients:1)
20.10 16:34:50 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.10 16:34:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.10 16:34:50 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.10 16:34:50 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.10 16:34:50 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.10 16:34:50 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:34:50 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.10 16:34:50 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476889621, lastLoginDate => 294, lastLoadDate => 1021 }, effects => { list => [] } }}, version => 2, id => 76 } }
20.10 16:34:50 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.10 16:34:50 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 76 } }
20.10 16:34:50 NET: Client login (conid:58139995, id:76, name:Aimer)
20.10 16:34:50 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:34:50 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.10 16:34:50 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
20.10 16:34:50 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.10 16:34:50 == NET: Aimer ret: tournament.enemy { data => { name => test, tournamentId => 1, enemy.id => 1, enemy.name => test1, round => 1, enemy.num => 2, battleId => 1, player => 1 }, type => tournament.enemy }
20.10 16:34:51 ++ NET: Aimer req: user.data { messageType => user.data }
20.10 16:34:51 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
20.10 16:34:51 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:34:51 TIME: user.data 1 ms
20.10 16:34:51 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:34:58 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.10 16:34:58 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.10 16:35:42 TIMER: Check auto-disconnect...
20.10 16:35:43 STATS: vdl.0 cache, locks:2
20.10 16:36:42 TIMER: Check auto-disconnect...
20.10 16:36:43 STATS: vdl.0 cache, locks:2
20.10 16:37:42 TIMER: Check auto-disconnect...
20.10 16:37:43 STATS: vdl.0 cache, locks:2
20.10 16:38:42 TIMER: Check auto-disconnect...
20.10 16:38:42 NET: Client (name:Aimer conid:58139995 TCP) disconnected from vdl.0 (clients:0)
20.10 16:38:42 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.10 16:38:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.10 16:38:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:38:42 STATS: vdl.0 cache connection, 80 calls, total 0.212490558624268 sec spent, avg 2.66 ms
20.10 16:38:42 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:38:42 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:38:42 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:38:42 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
20.10 16:38:42 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.10 16:38:42 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.10 16:38:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.10 16:38:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:38:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.10 16:38:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:38:43 STATS: vdl.0 cache, locks:0
20.10 16:39:42 TIMER: Check auto-disconnect...
20.10 16:39:43 STATS: vdl.0 cache, locks:0
20.10 16:40:42 TIMER: Check auto-disconnect...
20.10 16:40:43 STATS: vdl.0 cache, locks:0
20.10 16:41:42 TIMER: Check auto-disconnect...
20.10 16:41:43 STATS: vdl.0 cache, locks:0
20.10 16:42:42 TIMER: Check auto-disconnect...
20.10 16:42:43 STATS: vdl.0 cache, locks:0
20.10 16:43:42 TIMER: Check auto-disconnect...
20.10 16:43:43 STATS: vdl.0 cache, locks:0
20.10 16:44:42 TIMER: Check auto-disconnect...
20.10 16:44:43 STATS: vdl.0 cache, locks:0
20.10 16:45:42 TIMER: Check auto-disconnect...
20.10 16:45:43 STATS: vdl.0 cache, locks:0
20.10 16:46:42 TIMER: Check auto-disconnect...
20.10 16:46:43 STATS: vdl.0 cache, locks:0
20.10 16:47:42 TIMER: Check auto-disconnect...
20.10 16:47:43 STATS: vdl.0 cache, locks:0
20.10 16:48:42 TIMER: Check auto-disconnect...
20.10 16:48:43 STATS: vdl.0 cache, locks:0
20.10 16:49:42 TIMER: Check auto-disconnect...
20.10 16:49:43 STATS: vdl.0 cache, locks:0
20.10 16:50:42 TIMER: Check auto-disconnect...
20.10 16:50:43 STATS: vdl.0 cache, locks:0
20.10 16:51:42 TIMER: Check auto-disconnect...
20.10 16:51:43 STATS: vdl.0 cache, locks:0
20.10 16:52:42 TIMER: Check auto-disconnect...
20.10 16:52:43 STATS: vdl.0 cache, locks:0
20.10 16:53:42 TIMER: Check auto-disconnect...
20.10 16:53:43 STATS: vdl.0 cache, locks:0
20.10 16:54:42 TIMER: Check auto-disconnect...
20.10 16:54:43 STATS: vdl.0 cache, locks:0
20.10 16:55:42 TIMER: Check auto-disconnect...
20.10 16:55:43 STATS: vdl.0 cache, locks:0
20.10 16:56:42 TIMER: Check auto-disconnect...
20.10 16:56:43 STATS: vdl.0 cache, locks:0
20.10 16:57:42 TIMER: Check auto-disconnect...
20.10 16:57:43 STATS: vdl.0 cache, locks:0
20.10 16:58:42 TIMER: Check auto-disconnect...
20.10 16:58:43 STATS: vdl.0 cache, locks:0
20.10 16:59:42 TIMER: Check auto-disconnect...
20.10 16:59:43 STATS: vdl.0 cache, locks:0
