26.12 17:00:16 TIMER: Check auto-disconnect...
26.12 17:00:17 STATS: vdl.0 cache, locks:0
26.12 17:01:16 TIMER: Check auto-disconnect...
26.12 17:01:17 STATS: vdl.0 cache, locks:0
26.12 17:02:16 TIMER: Check auto-disconnect...
26.12 17:02:17 STATS: vdl.0 cache, locks:0
26.12 17:03:16 TIMER: Check auto-disconnect...
26.12 17:03:17 STATS: vdl.0 cache, locks:0
26.12 17:04:16 TIMER: Check auto-disconnect...
26.12 17:04:17 STATS: vdl.0 cache, locks:0
26.12 17:05:16 TIMER: Check auto-disconnect...
26.12 17:05:17 STATS: vdl.0 cache, locks:0
26.12 17:06:16 TIMER: Check auto-disconnect...
26.12 17:06:17 STATS: vdl.0 cache, locks:0
26.12 17:07:16 TIMER: Check auto-disconnect...
26.12 17:07:17 STATS: vdl.0 cache, locks:0
26.12 17:08:16 TIMER: Check auto-disconnect...
26.12 17:08:17 STATS: vdl.0 cache, locks:0
26.12 17:08:47 NET: Client (conid:86844096) connected to vdl.0 (clients:1)
26.12 17:08:48 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
26.12 17:08:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.12 17:08:48 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.12 17:08:48 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
26.12 17:08:48 STATS: vdl.0 cache connection, 63 calls, total 0.078824520111084 sec spent, avg 1.25 ms
26.12 17:08:48 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.12 17:08:48 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.12 17:08:48 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.12 17:08:48 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1482758049, lastLoginDate => 361, money => 203, lastLoadDate => 1227 }, effects => { list => [] } }}, version => 0, id => 76 } }
26.12 17:08:48 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.12 17:08:48 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
26.12 17:08:48 NET: Client login (conid:86844096, id:76, name:Aimer)
26.12 17:08:48 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.185 }
26.12 17:08:48 -<<-: core/user.loginPost { _type => core/user.loginPost }
26.12 17:08:48 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
26.12 17:08:48 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
26.12 17:08:48 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:08:48 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
26.12 17:08:48 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
26.12 17:08:48 TIME: user.data 0.61 ms
26.12 17:08:48 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
26.12 17:08:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:08:51 TIME: user.ping 0.22 ms
26.12 17:08:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:08:57 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:08:57 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.12 17:09:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:09:13 TIME: user.ping 0.19 ms
26.12 17:09:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:09:16 TIMER: Check auto-disconnect...
26.12 17:09:17 STATS: vdl.0 cache, locks:2
26.12 17:09:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:09:34 TIME: user.ping 0.23 ms
26.12 17:09:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:09:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:09:56 TIME: user.ping 0.37 ms
26.12 17:09:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:10:16 TIMER: Check auto-disconnect...
26.12 17:10:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:10:16 TIME: user.ping 0.19 ms
26.12 17:10:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:10:17 STATS: vdl.0 cache, locks:2
26.12 17:10:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:10:36 TIME: user.ping 0.19 ms
26.12 17:10:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:10:57 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:10:57 TIME: user.ping 0.24 ms
26.12 17:10:57 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:11:16 TIMER: Check auto-disconnect...
26.12 17:11:17 STATS: vdl.0 cache, locks:2
26.12 17:11:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:11:17 TIME: user.ping 0.2 ms
26.12 17:11:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:11:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:11:38 TIME: user.ping 0.15 ms
26.12 17:11:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:11:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:11:59 TIME: user.ping 0.19 ms
26.12 17:11:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:12:16 TIMER: Check auto-disconnect...
26.12 17:12:17 STATS: vdl.0 cache, locks:2
26.12 17:12:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:12:20 TIME: user.ping 0.11 ms
26.12 17:12:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:12:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:12:41 TIME: user.ping 0.14 ms
26.12 17:12:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:13:03 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:13:03 TIME: user.ping 0.46 ms
26.12 17:13:03 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:13:16 TIMER: Check auto-disconnect...
26.12 17:13:17 STATS: vdl.0 cache, locks:2
26.12 17:13:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:13:24 TIME: user.ping 0.56 ms
26.12 17:13:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:13:45 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:13:45 TIME: user.ping 0.07 ms
26.12 17:13:45 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:14:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:14:06 TIME: user.ping 0.17 ms
26.12 17:14:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:14:16 TIMER: Check auto-disconnect...
26.12 17:14:17 STATS: vdl.0 cache, locks:2
26.12 17:14:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:14:27 TIME: user.ping 0.12 ms
26.12 17:14:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:14:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:14:48 TIME: user.ping 0.21 ms
26.12 17:14:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:15:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:15:09 TIME: user.ping 0.22 ms
26.12 17:15:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:15:16 TIMER: Check auto-disconnect...
26.12 17:15:17 STATS: vdl.0 cache, locks:2
26.12 17:15:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:15:29 TIME: user.ping 0.19 ms
26.12 17:15:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:15:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:15:50 TIME: user.ping 0.16 ms
26.12 17:15:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:16:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:16:12 TIME: user.ping 0.28 ms
26.12 17:16:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:16:16 TIMER: Check auto-disconnect...
26.12 17:16:17 STATS: vdl.0 cache, locks:2
26.12 17:16:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:16:32 TIME: user.ping 0.15 ms
26.12 17:16:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:16:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:16:53 TIME: user.ping 0.12 ms
26.12 17:16:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:17:14 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:17:14 TIME: user.ping 0.17 ms
26.12 17:17:14 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:17:16 TIMER: Check auto-disconnect...
26.12 17:17:17 STATS: vdl.0 cache, locks:2
26.12 17:17:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:17:35 TIME: user.ping 0.16 ms
26.12 17:17:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:17:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:17:56 TIME: user.ping 0.15 ms
26.12 17:17:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:18:16 TIMER: Check auto-disconnect...
26.12 17:18:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:18:17 TIME: user.ping 0.13 ms
26.12 17:18:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:18:17 STATS: vdl.0 cache, locks:2
26.12 17:19:14 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
26.12 17:19:14 -<<-: server.login ok
26.12 17:19:14 DB: SELECT * FROM LocalizationStrings
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 TIMER: Starting timer...
26.12 17:19:14 TIMER: Timer running...
26.12 17:19:14 DB: SELECT * FROM GameVars
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
26.12 17:19:14 -<<-: core/quest.getDaily ok
26.12 17:19:14 DB: SELECT * FROM UserAttributeTypes
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM UserVariableTypes
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.12 17:19:14 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM ItemGroups
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM Bundles ORDER BY ID
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM BundleItems ORDER BY ID
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 SHOP: loading items...
26.12 17:19:14 ->>-: core/shop.getList { _type => core/shop.getList }
26.12 17:19:14 -<<-: core/shop.getList ok
26.12 17:19:14 SHOP: 0 items loaded (0 sec)
26.12 17:19:14 DB: SELECT * FROM EffectAttributeTypes
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM Effects
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.12 17:19:14 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.12 17:19:14 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 DB: SELECT * FROM Badges
26.12 17:19:14 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 NET: Client (conid:84343028) connected to vdl.0 (clients:1)
26.12 17:19:14 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
26.12 17:19:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.12 17:19:14 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.12 17:19:14 -<<-: core/server.query ok
26.12 17:19:14 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.12 17:19:14 -<<-: core/user.isOnlineID ok
26.12 17:19:14 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.12 17:19:14 -<<-: core/cache.get ok
26.12 17:19:14 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.12 17:19:14 -<<-: core/cache.get ok
26.12 17:19:14 NET: Client login (conid:84343028, id:76, name:Aimer)
26.12 17:19:14 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.185 }
26.12 17:19:14 -<<-: core/user.loginPost null
26.12 17:19:14 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
26.12 17:19:14 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
26.12 17:19:14 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:19:14 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
26.12 17:19:14 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
26.12 17:19:14 TIME: user.data 0.31 ms
26.12 17:19:14 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
26.12 17:19:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:19:20 TIME: user.ping 0.26 ms
26.12 17:19:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:19:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:19:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.12 17:19:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:19:41 TIME: user.ping 0.27 ms
26.12 17:19:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:19:55 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
26.12 17:19:55 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:19:55 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:19:55 TIME: tournament.getAvailableTournament 6.84 ms
26.12 17:19:55 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:20:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:20:02 TIME: user.ping 0.17 ms
26.12 17:20:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:20:14 TIMER: Check auto-disconnect...
26.12 17:20:14 STATS: vdl.0 cache, locks:2
26.12 17:20:15 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:20:15 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 203 }
26.12 17:20:15 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
26.12 17:20:15 STATS: vdl.0 cache connection, 29 calls, total 0.0353899002075195 sec spent, avg 1.22 ms
26.12 17:20:15 TIME: user.data 1.5 ms
26.12 17:20:15 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 203 }
26.12 17:20:21 ++ NET: Aimer req: user.addMoney { count => 100, messageType => user.addMoney }
26.12 17:20:21 TIME: user.addMoney 0.46 ms
26.12 17:20:21 == NET: Aimer ret: user.addMoney { type => user.addMoney, errorCode => ok, money => 303 }
26.12 17:20:21 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:20:21 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
26.12 17:20:21 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:20:21 TIME: user.data 0.64 ms
26.12 17:20:21 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:20:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:20:23 TIME: user.ping 0.24 ms
26.12 17:20:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:20:29 ->>-: core/cache.update { diff => {params => { attrs => { money => 303 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:20:29 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.12 17:20:29 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:20:29 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
26.12 17:20:29 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:20:29 TIME: user.data 0.56 ms
26.12 17:20:29 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:20:29 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
26.12 17:20:29 ->>-: vdl/cache.tournament.getPrice { tournamentId => 1, _type => vdl/cache.tournament.getPrice }
26.12 17:20:29 -<<-: vdl/cache.tournament.getPrice { price => 300, _type => vdl/cache.tournament.getPrice }
26.12 17:20:29 ->>-: vdl/cache.tournament.addUsers { userId => 76, passTournament => null, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.12 17:20:29 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.12 17:20:29 TIME: tournament.addUsers 2.72 ms
26.12 17:20:29 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.12 17:20:29 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
26.12 17:20:29 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:20:29 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:20:29 TIME: tournament.getAvailableTournament 3.63 ms
26.12 17:20:29 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:20:39 ->>-: core/cache.update { diff => {params => { attrs => { money => 3 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:20:39 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
26.12 17:20:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:20:44 TIME: user.ping 0.28 ms
26.12 17:20:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:21:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:21:06 TIME: user.ping 0.17 ms
26.12 17:21:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:21:14 TIMER: Check auto-disconnect...
26.12 17:21:14 STATS: vdl.0 cache, locks:2
26.12 17:21:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:21:27 TIME: user.ping 0.3 ms
26.12 17:21:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:21:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:21:48 TIME: user.ping 0.28 ms
26.12 17:21:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:22:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:22:09 TIME: user.ping 0.14 ms
26.12 17:22:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:22:14 TIMER: Check auto-disconnect...
26.12 17:22:14 STATS: vdl.0 cache, locks:2
26.12 17:22:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:22:31 TIME: user.ping 0.24 ms
26.12 17:22:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:22:52 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:22:52 TIME: user.ping 0.13 ms
26.12 17:22:52 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:23:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:23:13 TIME: user.ping 0.16 ms
26.12 17:23:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:23:14 TIMER: Check auto-disconnect...
26.12 17:23:14 STATS: vdl.0 cache, locks:2
26.12 17:23:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:23:34 TIME: user.ping 0.26 ms
26.12 17:23:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:23:56 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:23:56 TIME: user.ping 0.2 ms
26.12 17:23:56 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:24:04 NET: Client (name:Aimer conid:84343028 TCP) disconnected from vdl.0 (clients:0)
26.12 17:24:04 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
26.12 17:24:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
26.12 17:24:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.12 17:24:04 STATS: vdl.0 cache connection, 37 calls, total 0.0455117225646973 sec spent, avg 1.23 ms
26.12 17:24:04 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.12 17:24:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.12 17:24:04 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.12 17:24:04 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
26.12 17:24:04 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.12 17:24:04 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
26.12 17:24:04 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.12 17:24:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.12 17:24:04 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.12 17:24:04 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.12 17:24:14 TIMER: Check auto-disconnect...
26.12 17:24:14 STATS: vdl.0 cache, locks:0
26.12 17:24:14 NET: Client (conid:16024997) connected to vdl.0 (clients:1)
26.12 17:24:15 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
26.12 17:24:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.12 17:24:15 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.12 17:24:15 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
26.12 17:24:15 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.12 17:24:15 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.12 17:24:15 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.12 17:24:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1482758049, lastLoginDate => 361, money => 3, lastLoadDate => 1227 }, effects => { list => [] } }}, version => 0, id => 76 } }
26.12 17:24:15 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.12 17:24:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
26.12 17:24:15 NET: Client login (conid:16024997, id:76, name:Aimer)
26.12 17:24:15 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.185 }
26.12 17:24:15 -<<-: core/user.loginPost { _type => core/user.loginPost }
26.12 17:24:15 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
26.12 17:24:15 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
26.12 17:24:15 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:24:15 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
26.12 17:24:15 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
26.12 17:24:15 TIME: user.data 0.79 ms
26.12 17:24:15 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
26.12 17:24:18 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:24:18 TIME: user.ping 0.22 ms
26.12 17:24:18 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:24:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:24:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.12 17:24:27 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
26.12 17:24:27 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:24:27 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:24:27 TIME: tournament.getAvailableTournament 4.92 ms
26.12 17:24:27 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:24:34 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
26.12 17:24:34 ->>-: vdl/cache.tournament.getPrice { tournamentId => 1, _type => vdl/cache.tournament.getPrice }
26.12 17:24:34 -<<-: vdl/cache.tournament.getPrice { price => 300, _type => vdl/cache.tournament.getPrice }
26.12 17:24:34 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
26.12 17:24:34 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
26.12 17:24:34 TIME: tournament.deleteUsers 1.56 ms
26.12 17:24:34 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
26.12 17:24:34 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
26.12 17:24:34 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:24:34 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:24:34 TIME: tournament.getAvailableTournament 2.54 ms
26.12 17:24:34 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:24:34 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:24:34 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
26.12 17:24:34 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:24:34 TIME: user.data 0.19 ms
26.12 17:24:34 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:24:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:24:40 TIME: user.ping 0.16 ms
26.12 17:24:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:24:44 ->>-: core/cache.update { diff => {params => { attrs => { money => 303 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:24:44 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.12 17:25:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:25:01 TIME: user.ping 0.26 ms
26.12 17:25:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:25:07 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:25:07 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
26.12 17:25:07 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:25:07 STATS: vdl.0 cache connection, 55 calls, total 0.0695891380310059 sec spent, avg 1.27 ms
26.12 17:25:07 TIME: user.data 0.6 ms
26.12 17:25:07 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:25:08 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
26.12 17:25:08 ->>-: vdl/cache.tournament.getPrice { tournamentId => 1, _type => vdl/cache.tournament.getPrice }
26.12 17:25:08 -<<-: vdl/cache.tournament.getPrice { price => 300, _type => vdl/cache.tournament.getPrice }
26.12 17:25:08 ->>-: vdl/cache.tournament.addUsers { userId => 76, passTournament => null, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.12 17:25:08 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.12 17:25:08 TIME: tournament.addUsers 1.8 ms
26.12 17:25:08 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.12 17:25:08 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
26.12 17:25:08 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:25:08 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:25:08 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:25:08 TIME: tournament.getAvailableTournament 4.39 ms
26.12 17:25:08 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:25:08 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
26.12 17:25:08 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
26.12 17:25:08 TIME: user.data 0.5 ms
26.12 17:25:08 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
26.12 17:25:14 TIMER: Check auto-disconnect...
26.12 17:25:14 STATS: vdl.0 cache, locks:2
26.12 17:25:14 ->>-: core/cache.update { diff => {params => { attrs => { money => 3 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:25:14 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
26.12 17:25:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:25:21 TIME: user.ping 0.34 ms
26.12 17:25:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:25:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:25:43 TIME: user.ping 0.2 ms
26.12 17:25:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:26:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:26:04 TIME: user.ping 0.24 ms
26.12 17:26:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:26:14 TIMER: Check auto-disconnect...
26.12 17:26:14 STATS: vdl.0 cache, locks:2
26.12 17:26:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:26:25 TIME: user.ping 0.23 ms
26.12 17:26:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:26:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:26:46 TIME: user.ping 0.06 ms
26.12 17:26:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:27:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:27:08 TIME: user.ping 0.13 ms
26.12 17:27:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:27:14 TIMER: Check auto-disconnect...
26.12 17:27:14 STATS: vdl.0 cache, locks:2
26.12 17:27:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:27:29 TIME: user.ping 0.25 ms
26.12 17:27:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:27:39 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
26.12 17:27:39 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:27:39 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:27:39 STATS: vdl.0 cache connection, 61 calls, total 0.0813729763031006 sec spent, avg 1.33 ms
26.12 17:27:39 TIME: tournament.getAvailableTournament 4.81 ms
26.12 17:27:39 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 },{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:27:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:27:50 TIME: user.ping 0.25 ms
26.12 17:27:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:27:52 ++ NET: Aimer req: tournament.deleteUsers { tournamentId => 1, messageType => tournament.deleteUsers }
26.12 17:27:52 ->>-: vdl/cache.tournament.getPrice { tournamentId => 1, _type => vdl/cache.tournament.getPrice }
26.12 17:27:52 -<<-: vdl/cache.tournament.getPrice { price => 300, _type => vdl/cache.tournament.getPrice }
26.12 17:27:52 ->>-: vdl/cache.tournament.deleteUsers { userId => 76, tournamentId => 1, _type => vdl/cache.tournament.deleteUsers }
26.12 17:27:52 -<<-: vdl/cache.tournament.deleteUsers { errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
26.12 17:27:52 TIME: tournament.deleteUsers 2.67 ms
26.12 17:27:52 == NET: Aimer ret: tournament.deleteUsers { type => tournament.deleteUsers, errorCode => ok, _type => vdl/cache.tournament.deleteUsers }
26.12 17:27:52 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
26.12 17:27:52 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:27:52 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:27:52 TIME: tournament.getAvailableTournament 1.07 ms
26.12 17:27:52 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:27:52 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ price => 300, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid12, id => 12 }], battleActive => null, rounddate => 2016-17-11 20:00, startdate => 2016-18-11 21:00 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.12 17:27:52 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
26.12 17:27:52 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:27:52 TIME: user.data 0.35 ms
26.12 17:27:52 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:27:59 ->>-: core/cache.update { diff => {params => { attrs => { money => 303 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:27:59 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
26.12 17:28:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:28:11 TIME: user.ping 0.1 ms
26.12 17:28:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:28:14 TIMER: Check auto-disconnect...
26.12 17:28:14 STATS: vdl.0 cache, locks:2
26.12 17:28:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:28:33 TIME: user.ping 0.22 ms
26.12 17:28:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:28:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:28:54 TIME: user.ping 0.17 ms
26.12 17:28:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:29:14 TIMER: Check auto-disconnect...
26.12 17:29:14 STATS: vdl.0 cache, locks:2
26.12 17:29:15 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:29:15 TIME: user.ping 0.32 ms
26.12 17:29:15 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:29:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:29:36 TIME: user.ping 0.21 ms
26.12 17:29:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:29:58 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:29:58 TIME: user.ping 0.19 ms
26.12 17:29:58 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:30:14 TIMER: Check auto-disconnect...
26.12 17:30:14 STATS: vdl.0 cache, locks:2
26.12 17:30:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:30:19 TIME: user.ping 0.23 ms
26.12 17:30:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:30:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:30:40 TIME: user.ping 0.22 ms
26.12 17:30:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:31:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:31:01 TIME: user.ping 0.15 ms
26.12 17:31:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:31:14 TIMER: Check auto-disconnect...
26.12 17:31:14 STATS: vdl.0 cache, locks:2
26.12 17:31:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:31:22 TIME: user.ping 0.33 ms
26.12 17:31:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:31:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:31:44 TIME: user.ping 0.21 ms
26.12 17:31:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:32:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:32:05 TIME: user.ping 0.18 ms
26.12 17:32:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:32:14 TIMER: Check auto-disconnect...
26.12 17:32:14 STATS: vdl.0 cache, locks:2
26.12 17:32:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
26.12 17:32:26 TIME: user.ping 0.18 ms
26.12 17:32:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:2
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:2
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:2
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 NET: Client (name:Aimer conid:16024997 TCP) disconnected from vdl.0 (clients:0)
26.12 17:33:14 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
26.12 17:33:14 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
26.12 17:33:14 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.12 17:33:14 STATS: vdl.0 cache connection, 67 calls, total 0.08721923828125 sec spent, avg 1.3 ms
26.12 17:33:14 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.12 17:33:14 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.12 17:33:14 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.12 17:33:14 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
26.12 17:33:14 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.12 17:33:14 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
26.12 17:33:14 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.12 17:33:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.12 17:33:14 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.12 17:33:14 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:33:14 TIMER: Check auto-disconnect...
26.12 17:33:14 STATS: vdl.0 cache, locks:0
26.12 17:52:38 NET: Client (conid:93516062) connected to vdl.0 (clients:1)
26.12 17:52:39 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
26.12 17:52:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.12 17:52:39 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.12 17:52:39 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
26.12 17:52:39 STATS: vdl.0 cache connection, 72 calls, total 0.0919132232666016 sec spent, avg 1.28 ms
26.12 17:52:39 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.12 17:52:39 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.12 17:52:39 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.12 17:52:39 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1482758049, lastLoginDate => 361, money => 303, lastLoadDate => 1227 }, effects => { list => [] } }}, version => 0, id => 76 } }
26.12 17:52:39 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.12 17:52:39 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
26.12 17:52:39 NET: Client login (conid:93516062, id:76, name:Aimer)
26.12 17:52:39 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.185 }
26.12 17:52:39 -<<-: core/user.loginPost { _type => core/user.loginPost }
26.12 17:52:39 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
26.12 17:52:39 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
26.12 17:52:39 ++ NET: Aimer req: user.data { messageType => user.data }
26.12 17:52:39 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 303 }
26.12 17:52:39 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:52:39 TIME: user.data 0.41 ms
26.12 17:52:39 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 303 }
26.12 17:52:44 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.12 17:52:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:2
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:2
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:2
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 NET: Client (name:Aimer conid:93516062 TCP) disconnected from vdl.0 (clients:0)
26.12 17:53:14 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
26.12 17:53:14 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
26.12 17:53:14 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.12 17:53:14 STATS: vdl.0 cache connection, 79 calls, total 0.101084232330322 sec spent, avg 1.28 ms
26.12 17:53:14 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.12 17:53:14 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.12 17:53:14 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.12 17:53:14 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
26.12 17:53:14 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.12 17:53:14 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.12 17:53:14 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.12 17:53:14 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.12 17:53:14 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.12 17:53:14 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
26.12 17:53:14 TIMER: Check auto-disconnect...
26.12 17:53:14 STATS: vdl.0 cache, locks:0
