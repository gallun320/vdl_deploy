21.10 14:14:51 NET: Client (conid:56955885) connected to vdl.0 (clients:1)
21.10 14:14:52 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
21.10 14:14:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
21.10 14:14:52 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
21.10 14:14:52 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
21.10 14:14:52 STATS: vdl.0 cache connection, 48 calls, total 0.438173055648804 sec spent, avg 9.13 ms
21.10 14:14:52 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
21.10 14:14:52 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
21.10 14:14:52 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
21.10 14:14:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477046687, lastLoginDate => 295, lastLoadDate => 1022 }, effects => { list => [] } }}, version => 0, id => 76 } }
21.10 14:14:52 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
21.10 14:14:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
21.10 14:14:52 NET: Client login (conid:56955885, id:76, name:Aimer)
21.10 14:14:52 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:14:52 -<<-: core/user.loginPost { _type => core/user.loginPost }
21.10 14:14:52 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
21.10 14:14:52 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
21.10 14:14:52 == NET: Aimer ret: tournament.enemy { data => { name => test, tournamentId => 1, enemy.id => 1, enemy.name => test1, round => 1, enemy.num => 2, battleId => 1, player => 1 }, type => tournament.enemy }
21.10 14:14:53 ++ NET: Aimer req: user.data { messageType => user.data }
21.10 14:14:53 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
21.10 14:14:53 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:14:53 TIME: user.data 0.56 ms
21.10 14:14:53 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:14:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
21.10 14:14:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:15:15 ++ NET: Aimer req: battle.end { roomId => 0, scoreSecondPlayer => 0, messageType => battle.end, scoreFirstPlayer => 0 }
21.10 14:15:15 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 14:15:15 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
21.10 14:15:15 TRACE: battle.end : cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 14:15:15 TRACE: battle.end : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 53
Called from modules/VDLBattleModule.hx line 35
Called from snipe/slave/Server.hx line 1176
21.10 14:15:19 TIMER: Check auto-disconnect...
21.10 14:15:19 STATS: vdl.0 cache, locks:2
21.10 14:16:43 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:16:43 -<<-: server.login ok
21.10 14:16:43 DB: SELECT * FROM LocalizationStrings
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 TIMER: Starting timer...
21.10 14:16:43 TIMER: Timer running...
21.10 14:16:43 DB: SELECT * FROM GameVars
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:16:43 -<<-: core/quest.getDaily ok
21.10 14:16:43 DB: SELECT * FROM UserAttributeTypes
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM UserVariableTypes
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:16:43 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM ItemGroups
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 SHOP: loading items...
21.10 14:16:43 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:16:43 -<<-: core/shop.getList ok
21.10 14:16:43 SHOP: 0 items loaded (0 sec)
21.10 14:16:43 DB: SELECT * FROM EffectAttributeTypes
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM Effects
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:16:43 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:16:43 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:16:43 DB: SELECT * FROM Badges
21.10 14:16:43 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:16:43 -<<-: core/server.query ok
21.10 14:17:09 NET: Client (conid:84260899) connected to vdl.0 (clients:1)
21.10 14:17:10 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
21.10 14:17:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
21.10 14:17:10 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
21.10 14:17:10 -<<-: core/server.query ok
21.10 14:17:10 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
21.10 14:17:10 -<<-: core/user.isOnlineID ok
21.10 14:17:10 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
21.10 14:17:10 -<<-: core/cache.get ok
21.10 14:17:10 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
21.10 14:17:10 -<<-: core/cache.get ok
21.10 14:17:10 NET: Client login (conid:84260899, id:76, name:Aimer)
21.10 14:17:10 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:17:10 -<<-: core/user.loginPost null
21.10 14:17:10 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
21.10 14:17:10 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
21.10 14:17:11 ++ NET: Aimer req: user.data { messageType => user.data }
21.10 14:17:11 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
21.10 14:17:11 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:17:11 TIME: user.data 0.73 ms
21.10 14:17:11 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:17:18 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.10 14:17:18 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:17:18 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, rounddate => 2016-21-10, startdate => 2016-21-10 14:20 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:17:18 TIME: tournament.getAvailableTournament 2.25 ms
21.10 14:17:18 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, rounddate => 2016-21-10, startdate => 2016-21-10 14:20 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:17:18 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
21.10 14:17:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:17:22 ++ NET: Aimer req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
21.10 14:17:22 ->>-: vdl/cache.tournament.addUsers { userId => 76, tournament => 1, _type => vdl/cache.tournament.addUsers }
21.10 14:17:22 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
21.10 14:17:22 TIME: tournament.addUsers 0.74 ms
21.10 14:17:22 == NET: Aimer ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
21.10 14:17:22 ++ NET: Aimer req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.10 14:17:22 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:17:22 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-21-10, startdate => 2016-21-10 14:20 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:17:22 TIME: tournament.getAvailableTournament 4.17 ms
21.10 14:17:22 == NET: Aimer ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-21-10, startdate => 2016-21-10 14:20 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:17:24 ++ NET: Aimer req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
21.10 14:17:24 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
21.10 14:17:24 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76] }
21.10 14:17:24 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
21.10 14:17:24 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.10 14:17:24 TIME: tournament.grid 1.01 ms
21.10 14:17:24 == NET: Aimer ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.10 14:17:43 TIMER: Check auto-disconnect...
21.10 14:17:43 STATS: vdl.0 cache, locks:2
21.10 14:18:11 NET: Client (name:Aimer conid:84260899 TCP) disconnected from vdl.0 (clients:0)
21.10 14:18:11 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
21.10 14:18:11 NET: Client (conid:94979442) connected to vdl.0 (clients:1)
21.10 14:18:11 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
21.10 14:18:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.10 14:18:11 STATS: vdl.0 cache connection, 33 calls, total 0.0462806224822998 sec spent, avg 1.4 ms
21.10 14:18:11 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 14:18:11 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
21.10 14:18:11 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 14:18:11 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
21.10 14:18:11 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
21.10 14:18:11 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
21.10 14:18:11 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
21.10 14:18:11 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:18:11 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
21.10 14:18:11 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
21.10 14:18:11 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:18:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:18:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:18:11 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
21.10 14:18:11 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:18:11 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
21.10 14:18:11 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:18:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 2 } }
21.10 14:18:11 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:18:11 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
21.10 14:18:11 NET: Client login (conid:94979442, id:2, name:test1)
21.10 14:18:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:18:11 -<<-: core/user.loginPost { _type => core/user.loginPost }
21.10 14:18:11 DB: SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp
21.10 14:18:11 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp, _type => core/server.query }
21.10 14:18:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.10 14:18:11 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (2, 'today'::timestamp)
21.10 14:18:11 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:18:11 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:18:11 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (2, 'today'::timestamp), _type => core/server.pending }} }
21.10 14:18:11 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
21.10 14:18:11 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:18:11 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:18:11 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:18:11 TIME: user.data 0.44 ms
21.10 14:18:11 == NET: test1 ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:18:18 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477048691, lastLoginDate => 295, lastLoadDate => 1022 } }}, type => user, unlock => false, id => 2, _type => core/cache.update }
21.10 14:18:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:18:43 TIMER: Check auto-disconnect...
21.10 14:18:43 STATS: vdl.0 cache, locks:2
21.10 14:19:07 ++ NET: test1 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.10 14:19:07 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:19:07 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-21-10, startdate => 2016-21-10 14:20 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:19:07 TIME: tournament.getAvailableTournament 4.26 ms
21.10 14:19:07 == NET: test1 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-21-10, startdate => 2016-21-10 14:20 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:19:11 ++ NET: test1 req: tournament.addUsers { tournamentId => 1, messageType => tournament.addUsers }
21.10 14:19:11 ->>-: vdl/cache.tournament.addUsers { userId => 2, tournament => 1, _type => vdl/cache.tournament.addUsers }
21.10 14:19:11 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
21.10 14:19:11 TIME: tournament.addUsers 0.76 ms
21.10 14:19:11 == NET: test1 ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
21.10 14:19:11 ++ NET: test1 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.10 14:19:11 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:19:11 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => null, rounddate => 2016-21-10, startdate => 2016-21-10 14:20 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:19:11 TIME: tournament.getAvailableTournament 4.57 ms
21.10 14:19:11 == NET: test1 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => null, rounddate => 2016-21-10, startdate => 2016-21-10 14:20 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:19:12 ++ NET: test1 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
21.10 14:19:12 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
21.10 14:19:12 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
21.10 14:19:12 STATS: vdl.0 cache connection, 50 calls, total 0.07021164894104 sec spent, avg 1.4 ms
21.10 14:19:12 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
21.10 14:19:12 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.10 14:19:12 TIME: tournament.grid 0.99 ms
21.10 14:19:12 == NET: test1 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.10 14:19:43 TIMER: Check auto-disconnect...
21.10 14:19:43 STATS: vdl.0 cache, locks:2
21.10 14:19:43 TIMER: Check auto-disconnect...
21.10 14:19:43 STATS: vdl.0 cache, locks:2
21.10 14:19:43 TIMER: Check auto-disconnect...
21.10 14:19:43 STATS: vdl.0 cache, locks:2
21.10 14:21:51 NET: Client (name:test1 conid:94979442 TCP) disconnected from vdl.0 (clients:0)
21.10 14:21:51 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
21.10 14:21:51 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
21.10 14:21:51 -<<-: core/server.query { list => {{ id => 51 }}, errorCode => ok, _type => core/server.query }
21.10 14:21:51 STATS: vdl.0 cache connection, 52 calls, total 0.0731246471405029 sec spent, avg 1.41 ms
21.10 14:21:51 ->>-: vdl/cache.battle.infoRoom { roomId => 51, _type => vdl/cache.battle.infoRoom }
21.10 14:21:51 -<<-: vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
21.10 14:21:51 ->>-: vdl/cache.battle.deleteRoom { roomId => 51, _type => vdl/cache.battle.deleteRoom }
21.10 14:21:51 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
21.10 14:21:51 ->>-: core/user.sendTo { id => 76, _type => core/user.sendTo, msg => { _type => battle.end } }
21.10 14:21:51 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
21.10 14:21:51 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
21.10 14:21:51 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
21.10 14:21:51 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
21.10 14:21:51 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:21:51 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
21.10 14:21:51 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
21.10 14:22:43 TIMER: Check auto-disconnect...
21.10 14:22:43 STATS: vdl.0 cache, locks:0
21.10 14:22:43 TIMER: Check auto-disconnect...
21.10 14:22:43 STATS: vdl.0 cache, locks:0
21.10 14:22:43 TIMER: Check auto-disconnect...
21.10 14:22:43 STATS: vdl.0 cache, locks:0
21.10 14:22:43 TIMER: Check auto-disconnect...
21.10 14:22:43 STATS: vdl.0 cache, locks:0
21.10 14:22:43 TIMER: Check auto-disconnect...
21.10 14:22:43 STATS: vdl.0 cache, locks:0
21.10 14:27:42 NET: Client (conid:85339081) connected to vdl.0 (clients:1)
21.10 14:27:43 ++ NET: null req: user.register { messageType => user.register }
21.10 14:27:43 DB: SELECT * FROM users
21.10 14:27:43 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
21.10 14:27:43 -<<-: core/server.query { list => {{ password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1477048691,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid64, name => uid64, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, id => 64, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid67, name => uid67, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476886636,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:17:16.853975+03, language => en, id => 67, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid65, name => uid65, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476879545,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 15:19:05.058893+03, language => en, id => 65, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => qweqwe, name => asdasd, networkid => , params => {"info":{"city":"Dsadasd","year":"1231","email":"asdasdas"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.822508+03, language =>   , id => 69, deleted => false }, { password => uid66, name => uid66, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476882998,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 16:16:38.334095+03, language => en, id => 66, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }, { password => uid73, name => uid73, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889025,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:57:04.529542+03, language => en, id => 73, deleted => false }, { password => uid71, name => uid71, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888930,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:55:29.621522+03, language => en, id => 71, deleted => false }, { password => uid68, name => uid68, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888788,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.78775+03, language => en, id => 68, deleted => false }, { password => 123123, name => 123123, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:54:22.233721+03, language =>   , id => 70, deleted => false }, { password => qweqwe, name => 1qweqwe, networkid => , params => {"info":{"city":"Qweqwe","year":"1231","email":"qweqwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:56:17.221331+03, language =>   , id => 72, deleted => false }, { password => 123123, name => 123qwe, networkid => , params => {"info":{"city":"Wqe","year":"1233","email":"123qwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:59:29.773441+03, language =>   , id => 74, deleted => false }, { password => uid75, name => uid75, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889477,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:04:35.916538+03, language => en, id => 75, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890115,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language => en, id => 44, deleted => false }, { password => uid77, name => uid77, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889607,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:06:46.41184+03, language => en, id => 77, deleted => false }, { password => uid78, name => uid78, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890199,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:16:37.399803+03, language => en, id => 78, deleted => false }, { password => uid83, name => uid83, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961590,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:06:28.765885+03, language => en, id => 83, deleted => false }, { password => uid79, name => uid79, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476959779,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:36:18.869521+03, language => en, id => 79, deleted => false }, { password => uid84, name => uid84, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961768,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:09:27.02443+03, language => en, id => 84, deleted => false }, { password => uid80, name => uid80, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476960874,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:54:32.93048+03, language => en, id => 80, deleted => false }, { password => uid81, name => uid81, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961061,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:57:40.114003+03, language => en, id => 81, deleted => false }, { password => uid85, name => uid85, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476962319,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:18:38.418977+03, language => en, id => 85, deleted => false }, { password => 123123, name => Tester, networkid => , params => {"info":{"city":"Dsda","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:58:49.229528+03, language =>   , id => 86, deleted => false }, { password => kO2YJdf, name => Aimer, networkid => , params => {"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477046687,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, id => 76, deleted => false }, { password => uid82, name => uid82, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961257,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:00:56.513148+03, language => en, id => 82, deleted => false }, { password => uid87, name => uid87, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, id => 87, deleted => false }}, errorCode => ok, _type => core/server.query }
21.10 14:27:43 STATS: vdl.0 cache connection, 59 calls, total 0.111722469329834 sec spent, avg 1.89 ms
21.10 14:27:43 == NET: null ret: user.auth { type => user.auth, token => dWlkODg= }
21.10 14:27:43 DB: SELECT ID FROM Users WHERE Name = E'uid88'
21.10 14:27:43 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid88', _type => core/server.query }
21.10 14:27:43 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.10 14:27:43 DB: SELECT nextval('Users_id_seq') AS id
21.10 14:27:43 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
21.10 14:27:43 -<<-: core/server.query { list => {{ id => 88 }}, errorCode => ok, _type => core/server.query }
21.10 14:27:43 ->>-: core/user.register { password => uid88, name => uid88, fullParams => { password => uid88, name => uid88, networkid => , networktype => , messageType => user.register, id => 88 }, networkid => , connectionID => 85339081, networktype => , email => , id => 88, _type => core/user.register }
21.10 14:27:43 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
21.10 14:27:43 -<<-: core/user.registerResponse { password => uid88, name => uid88, _isNotify => true, fullParams => { password => uid88, name => uid88, networkid => , networktype => , messageType => user.register, id => 88 }, networkid => , connectionID => 85339081, networktype => , email => , id => 88, _type => core/user.registerResponse }
21.10 14:27:43 == NET: null ret: user.register { type => user.register, errorCode => ok }
21.10 14:27:43 TIMER: Check auto-disconnect...
21.10 14:27:43 STATS: vdl.0 cache, locks:0
21.10 14:27:44 ++ NET: null req: user.login { messageType => user.login, token => dWlkODg= }
21.10 14:27:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid88' AND Password = E'uid88'
21.10 14:27:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid88' AND Password = E'uid88', _type => core/server.query }
21.10 14:27:44 -<<-: core/server.query { list => {{ name => uid88, networkid => , isbanned => false, id => 88 }}, errorCode => ok, _type => core/server.query }
21.10 14:27:44 ->>-: core/user.isOnlineID { id => 88, _type => core/user.isOnlineID }
21.10 14:27:44 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
21.10 14:27:44 ->>-: core/cache.get { type => user, v => -1, id => 88, _type => core/cache.get }
21.10 14:27:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid88, deleted => false, email => , networktype =>   , password => uid88, isbanned => false, regdate => 2016-10-21 14:27:43.099186+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 88 } }
21.10 14:27:44 ->>-: core/cache.get { type => questdata, v => -1, id => 88, _type => core/cache.get }
21.10 14:27:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 88 } }
21.10 14:27:44 NET: Client login (conid:85339081, id:88, name:uid88)
21.10 14:27:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 88, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:27:44 -<<-: core/user.loginPost { _type => core/user.loginPost }
21.10 14:27:44 DB: SELECT ID FROM TempUserLogins WHERE UserID = 88 AND Date = 'today'::timestamp
21.10 14:27:44 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 88 AND Date = 'today'::timestamp, _type => core/server.query }
21.10 14:27:44 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.10 14:27:44 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (88, 'today'::timestamp)
21.10 14:27:44 == NET: uid88 ret: user.login { name => uid88, type => user.login, errorCode => ok, id => 88 }
21.10 14:27:44 == NET: uid88 ret: user.join { name => uid88, type => user.join }
21.10 14:27:44 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (88, 'today'::timestamp), _type => core/server.pending }} }
21.10 14:27:44 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
21.10 14:27:53 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477049264, lastLoginDate => 295, lastLoadDate => 1022 } }}, type => user, unlock => false, id => 88, _type => core/cache.update }
21.10 14:27:53 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
21.10 14:27:59 NET: Client (name:uid88 conid:85339081 TCP) disconnected from vdl.0 (clients:0)
21.10 14:27:59 DB: SELECT id FROM battle WHERE firstid=88 OR secondid=88 AND finished <> true
21.10 14:27:59 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=88 OR secondid=88 AND finished <> true, _type => core/server.query }
21.10 14:27:59 NET: Client (conid:96479525) connected to vdl.0 (clients:1)
21.10 14:27:59 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.10 14:27:59 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 14:27:59 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
21.10 14:27:59 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.10 14:27:59 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 214
Called from modules/VDLBattleModule.hx line 227
Called from snipe/slave/Server.hx line 994
21.10 14:27:59 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 88, _type => core/cache.update }
21.10 14:27:59 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
21.10 14:27:59 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 88, _type => core/cache.update }
21.10 14:27:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:27:59 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 88, _type => core/user.logoutPost }
21.10 14:27:59 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
21.10 14:27:59 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:27:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:27:59 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:27:59 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
21.10 14:27:59 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:27:59 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
21.10 14:27:59 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:27:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477048691, lastLoginDate => 295, lastLoadDate => 1022 }, effects => { list => [] } }}, version => 0, id => 2 } }
21.10 14:27:59 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:27:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
21.10 14:27:59 NET: Client login (conid:96479525, id:2, name:test1)
21.10 14:27:59 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:27:59 -<<-: core/user.loginPost { _type => core/user.loginPost }
21.10 14:27:59 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:27:59 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:27:59 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:27:59 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:27:59 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:27:59 TIME: user.data 0.78 ms
21.10 14:27:59 == NET: test1 ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:28:05 ++ NET: test1 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.10 14:28:05 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:28:05 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => null, rounddate => 2016-21-10 14:30, startdate => 2016-21-10 14:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:28:05 TIME: tournament.getAvailableTournament 3.91 ms
21.10 14:28:05 == NET: test1 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => null, rounddate => 2016-21-10 14:30, startdate => 2016-21-10 14:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:28:08 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
21.10 14:28:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:28:09 ++ NET: test1 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
21.10 14:28:09 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
21.10 14:28:09 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
21.10 14:28:09 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
21.10 14:28:09 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.10 14:28:09 TIME: tournament.grid 1.25 ms
21.10 14:28:09 == NET: test1 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.10 14:33:09 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:33:09 -<<-: server.login ok
21.10 14:33:09 DB: SELECT * FROM LocalizationStrings
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 TIMER: Starting timer...
21.10 14:33:09 TIMER: Timer running...
21.10 14:33:09 DB: SELECT * FROM GameVars
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:33:09 -<<-: core/quest.getDaily ok
21.10 14:33:09 DB: SELECT * FROM UserAttributeTypes
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM UserVariableTypes
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:33:09 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM ItemGroups
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 SHOP: loading items...
21.10 14:33:09 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:33:09 -<<-: core/shop.getList ok
21.10 14:33:09 SHOP: 0 items loaded (0 sec)
21.10 14:33:09 DB: SELECT * FROM EffectAttributeTypes
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM Effects
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:33:09 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:33:09 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:33:09 DB: SELECT * FROM Badges
21.10 14:33:09 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:33:09 -<<-: core/server.query ok
21.10 14:34:01 NET: Client (conid:79370769) connected to vdl.0 (clients:1)
21.10 14:34:02 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:34:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:34:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:34:02 -<<-: core/server.query ok
21.10 14:34:02 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:34:02 -<<-: core/user.isOnlineID ok
21.10 14:34:02 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:34:02 -<<-: core/cache.get ok
21.10 14:34:02 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:34:02 -<<-: core/cache.get ok
21.10 14:34:02 NET: Client login (conid:79370769, id:2, name:test1)
21.10 14:34:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:34:02 -<<-: core/user.loginPost null
21.10 14:34:02 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:34:02 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:34:03 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:34:03 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:34:03 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:34:03 == NET: test1 ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:34:03 TIME: user.data 0.76 ms
21.10 14:38:34 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:38:34 -<<-: server.login ok
21.10 14:38:34 DB: SELECT * FROM LocalizationStrings
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 TIMER: Starting timer...
21.10 14:38:34 TIMER: Timer running...
21.10 14:38:34 DB: SELECT * FROM GameVars
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:38:34 -<<-: core/quest.getDaily ok
21.10 14:38:34 DB: SELECT * FROM UserAttributeTypes
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM UserVariableTypes
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:38:34 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM ItemGroups
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 SHOP: loading items...
21.10 14:38:34 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:38:34 -<<-: core/shop.getList ok
21.10 14:38:34 SHOP: 0 items loaded (0 sec)
21.10 14:38:34 DB: SELECT * FROM EffectAttributeTypes
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM Effects
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:38:34 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:38:34 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:34 DB: SELECT * FROM Badges
21.10 14:38:34 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:38:34 -<<-: core/server.query ok
21.10 14:38:48 NET: Client (conid:87998235) connected to vdl.0 (clients:1)
21.10 14:38:49 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:38:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:38:49 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:38:49 -<<-: core/server.query ok
21.10 14:38:49 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:38:49 -<<-: core/user.isOnlineID ok
21.10 14:38:49 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:38:49 -<<-: core/cache.get ok
21.10 14:38:49 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:38:49 -<<-: core/cache.get ok
21.10 14:38:49 NET: Client login (conid:87998235, id:2, name:test1)
21.10 14:38:49 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:38:49 -<<-: core/user.loginPost null
21.10 14:38:49 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:38:49 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:38:50 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:38:50 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:38:50 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:38:50 TIME: user.data 0.61 ms
21.10 14:38:50 == NET: test1 ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:38:58 ++ NET: test1 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.10 14:38:58 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:38:58 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => null, rounddate => 2016-21-10 14:40, startdate => 2016-21-10 14:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:38:58 TIME: tournament.getAvailableTournament 7.41 ms
21.10 14:38:58 == NET: test1 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => null, rounddate => 2016-21-10 14:40, startdate => 2016-21-10 14:40 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.10 14:38:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
21.10 14:38:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:39:03 ++ NET: test1 req: tournament.grid { tournamentId => 1, round => 1, messageType => tournament.grid }
21.10 14:39:03 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
21.10 14:39:03 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
21.10 14:39:03 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
21.10 14:39:03 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.10 14:39:03 TIME: tournament.grid 1.69 ms
21.10 14:39:03 == NET: test1 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], type => tournament.grid, tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.10 14:42:10 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:42:10 -<<-: server.login ok
21.10 14:42:10 DB: SELECT * FROM LocalizationStrings
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 TIMER: Starting timer...
21.10 14:42:10 TIMER: Timer running...
21.10 14:42:10 DB: SELECT * FROM GameVars
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:42:10 -<<-: core/quest.getDaily ok
21.10 14:42:10 DB: SELECT * FROM UserAttributeTypes
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM UserVariableTypes
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:42:10 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM ItemGroups
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 SHOP: loading items...
21.10 14:42:10 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:42:10 -<<-: core/shop.getList ok
21.10 14:42:10 SHOP: 0 items loaded (0 sec)
21.10 14:42:10 DB: SELECT * FROM EffectAttributeTypes
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM Effects
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:42:10 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:42:10 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:10 DB: SELECT * FROM Badges
21.10 14:42:10 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:42:10 -<<-: core/server.query ok
21.10 14:42:34 NET: Client (conid:24062793) connected to vdl.0 (clients:1)
21.10 14:42:35 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:42:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:42:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:42:35 -<<-: core/server.query ok
21.10 14:42:35 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:42:35 -<<-: core/user.isOnlineID ok
21.10 14:42:35 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:42:35 -<<-: core/cache.get ok
21.10 14:42:35 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:42:35 -<<-: core/cache.get ok
21.10 14:42:35 NET: Client login (conid:24062793, id:2, name:test1)
21.10 14:42:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:42:35 -<<-: core/user.loginPost null
21.10 14:42:35 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:42:35 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:42:36 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:42:36 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:42:36 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:42:36 TIME: user.data 0.85 ms
21.10 14:42:36 == NET: test1 ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:42:40 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
21.10 14:42:40 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:46:22 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:46:22 -<<-: server.login ok
21.10 14:46:22 DB: SELECT * FROM LocalizationStrings
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 TIMER: Starting timer...
21.10 14:46:22 TIMER: Timer running...
21.10 14:46:22 DB: SELECT * FROM GameVars
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:46:22 -<<-: core/quest.getDaily ok
21.10 14:46:22 DB: SELECT * FROM UserAttributeTypes
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM UserVariableTypes
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:46:22 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM ItemGroups
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 SHOP: loading items...
21.10 14:46:22 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:46:22 -<<-: core/shop.getList ok
21.10 14:46:22 SHOP: 0 items loaded (0 sec)
21.10 14:46:22 DB: SELECT * FROM EffectAttributeTypes
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM Effects
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:46:22 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:46:22 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:22 DB: SELECT * FROM Badges
21.10 14:46:22 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:46:22 -<<-: core/server.query ok
21.10 14:46:48 NET: Client (conid:41378517) connected to vdl.0 (clients:1)
21.10 14:46:49 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:46:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:46:49 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:46:49 -<<-: core/server.query ok
21.10 14:46:49 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:46:49 -<<-: core/user.isOnlineID ok
21.10 14:46:49 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:46:49 -<<-: core/cache.get ok
21.10 14:46:49 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:46:49 -<<-: core/cache.get ok
21.10 14:46:49 NET: Client login (conid:41378517, id:2, name:test1)
21.10 14:46:49 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:46:49 -<<-: core/user.loginPost null
21.10 14:46:49 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:46:49 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:46:51 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:46:51 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:46:51 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:46:51 TIME: user.data 0.71 ms
21.10 14:46:51 == NET: test1 ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:46:57 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
21.10 14:46:57 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:48:38 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:48:38 -<<-: server.login ok
21.10 14:48:38 DB: SELECT * FROM LocalizationStrings
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 TIMER: Starting timer...
21.10 14:48:38 TIMER: Timer running...
21.10 14:48:38 DB: SELECT * FROM GameVars
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:48:38 -<<-: core/quest.getDaily ok
21.10 14:48:38 DB: SELECT * FROM UserAttributeTypes
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM UserVariableTypes
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:48:38 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM ItemGroups
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 SHOP: loading items...
21.10 14:48:38 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:48:38 -<<-: core/shop.getList ok
21.10 14:48:38 SHOP: 0 items loaded (0 sec)
21.10 14:48:38 DB: SELECT * FROM EffectAttributeTypes
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM Effects
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:48:38 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:48:38 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:38 DB: SELECT * FROM Badges
21.10 14:48:38 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:48:38 -<<-: core/server.query ok
21.10 14:48:50 NET: Client (conid:92682193) connected to vdl.0 (clients:1)
21.10 14:48:51 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:48:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:48:51 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:48:51 -<<-: core/server.query ok
21.10 14:48:51 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:48:51 -<<-: core/user.isOnlineID ok
21.10 14:48:51 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:48:51 -<<-: core/cache.get ok
21.10 14:48:51 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:48:51 -<<-: core/cache.get ok
21.10 14:48:51 NET: Client login (conid:92682193, id:2, name:test1)
21.10 14:48:51 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:48:51 -<<-: core/user.loginPost null
21.10 14:48:51 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:48:51 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:48:52 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:48:52 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:48:53 -<<-: vdl/cache.user.getData { errorCode => _requestException, _type => vdl/cache.user.getData }
21.10 14:48:53 TRACE: user.data : cacheRequest exception { userId => 2, _type => vdl/cache.user.getData }
21.10 14:48:53 TRACE: user.data : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLUserModule.hx line 37
Called from modules/VDLUserModule.hx line 22
Called from snipe/slave/Server.hx line 1176
21.10 14:49:20 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:49:20 -<<-: server.login ok
21.10 14:49:20 DB: SELECT * FROM LocalizationStrings
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 TIMER: Starting timer...
21.10 14:49:20 TIMER: Timer running...
21.10 14:49:20 DB: SELECT * FROM GameVars
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:49:20 -<<-: core/quest.getDaily ok
21.10 14:49:20 DB: SELECT * FROM UserAttributeTypes
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM UserVariableTypes
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:49:20 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM ItemGroups
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 SHOP: loading items...
21.10 14:49:20 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:49:20 -<<-: core/shop.getList ok
21.10 14:49:20 SHOP: 0 items loaded (0 sec)
21.10 14:49:20 DB: SELECT * FROM EffectAttributeTypes
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM Effects
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:49:20 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:49:20 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:20 DB: SELECT * FROM Badges
21.10 14:49:20 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:49:20 -<<-: core/server.query ok
21.10 14:49:32 NET: Client (conid:80244812) connected to vdl.0 (clients:1)
21.10 14:49:33 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:49:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:49:33 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:49:33 -<<-: core/server.query ok
21.10 14:49:33 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:49:33 -<<-: core/user.isOnlineID ok
21.10 14:49:33 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:49:33 -<<-: core/cache.get ok
21.10 14:49:33 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:49:33 -<<-: core/cache.get ok
21.10 14:49:33 NET: Client login (conid:80244812, id:2, name:test1)
21.10 14:49:33 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:49:33 -<<-: core/user.loginPost null
21.10 14:49:33 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:49:33 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:49:34 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:49:34 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:49:34 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:49:34 TIME: user.data 0.91 ms
21.10 14:49:34 == NET: test1 ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:49:41 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
21.10 14:49:41 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:50:20 TIMER: Check auto-disconnect...
21.10 14:55:04 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:55:04 -<<-: server.login ok
21.10 14:55:04 DB: SELECT * FROM LocalizationStrings
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 TIMER: Starting timer...
21.10 14:55:04 TIMER: Timer running...
21.10 14:55:04 DB: SELECT * FROM GameVars
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:55:04 -<<-: core/quest.getDaily ok
21.10 14:55:04 DB: SELECT * FROM UserAttributeTypes
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM UserVariableTypes
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:55:04 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM ItemGroups
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 SHOP: loading items...
21.10 14:55:04 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:55:04 -<<-: core/shop.getList ok
21.10 14:55:04 SHOP: 0 items loaded (0 sec)
21.10 14:55:04 DB: SELECT * FROM EffectAttributeTypes
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM Effects
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:55:04 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:55:04 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:04 DB: SELECT * FROM Badges
21.10 14:55:04 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:55:04 -<<-: core/server.query ok
21.10 14:55:16 NET: Client (conid:15442726) connected to vdl.0 (clients:1)
21.10 14:55:17 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:55:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:55:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:55:17 -<<-: core/server.query ok
21.10 14:55:17 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:55:17 -<<-: core/user.isOnlineID ok
21.10 14:55:17 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:55:17 -<<-: core/cache.get ok
21.10 14:55:17 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:55:17 -<<-: core/cache.get ok
21.10 14:55:17 NET: Client login (conid:15442726, id:2, name:test1)
21.10 14:55:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:55:17 -<<-: core/user.loginPost null
21.10 14:55:17 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:55:17 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:55:19 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:55:19 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:55:20 -<<-: vdl/cache.user.getData { errorCode => _requestException, _type => vdl/cache.user.getData }
21.10 14:55:20 TRACE: user.data : cacheRequest exception { userId => 2, _type => vdl/cache.user.getData }
21.10 14:55:20 TRACE: user.data : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLUserModule.hx line 37
Called from modules/VDLUserModule.hx line 22
Called from snipe/slave/Server.hx line 1176
21.10 14:56:02 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 14:56:02 -<<-: server.login ok
21.10 14:56:02 DB: SELECT * FROM LocalizationStrings
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 TIMER: Starting timer...
21.10 14:56:02 TIMER: Timer running...
21.10 14:56:02 DB: SELECT * FROM GameVars
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.10 14:56:02 -<<-: core/quest.getDaily ok
21.10 14:56:02 DB: SELECT * FROM UserAttributeTypes
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM UserVariableTypes
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 14:56:02 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM ItemGroups
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM Bundles ORDER BY ID
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 SHOP: loading items...
21.10 14:56:02 ->>-: core/shop.getList { _type => core/shop.getList }
21.10 14:56:02 -<<-: core/shop.getList ok
21.10 14:56:02 SHOP: 0 items loaded (0 sec)
21.10 14:56:02 DB: SELECT * FROM EffectAttributeTypes
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM Effects
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 14:56:02 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 14:56:02 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:02 DB: SELECT * FROM Badges
21.10 14:56:02 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 14:56:02 -<<-: core/server.query ok
21.10 14:56:13 NET: Client (conid:29098138) connected to vdl.0 (clients:1)
21.10 14:56:14 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
21.10 14:56:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
21.10 14:56:14 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
21.10 14:56:14 -<<-: core/server.query ok
21.10 14:56:14 ->>-: core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
21.10 14:56:14 -<<-: core/user.isOnlineID ok
21.10 14:56:14 ->>-: core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
21.10 14:56:14 -<<-: core/cache.get ok
21.10 14:56:14 ->>-: core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
21.10 14:56:14 -<<-: core/cache.get ok
21.10 14:56:14 NET: Client login (conid:29098138, id:2, name:test1)
21.10 14:56:14 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:56:14 -<<-: core/user.loginPost null
21.10 14:56:14 == NET: test1 ret: user.login { name => test1, type => user.login, errorCode => ok, id => 2 }
21.10 14:56:14 == NET: test1 ret: user.join { name => test1, type => user.join }
21.10 14:56:16 ++ NET: test1 req: user.data { messageType => user.data }
21.10 14:56:16 ->>-: vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
21.10 14:56:16 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:56:16 TIME: user.data 0.79 ms
21.10 14:56:16 == NET: test1 ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:56:22 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
21.10 14:56:22 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:57:02 TIMER: Check auto-disconnect...
21.10 14:57:02 STATS: vdl.0 cache, locks:2
21.10 14:57:16 NET: Client (name:test1 conid:29098138 TCP) disconnected from vdl.0 (clients:0)
21.10 14:57:16 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
21.10 14:57:16 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
21.10 14:57:16 NET: Client (conid:18019275) connected to vdl.0 (clients:1)
21.10 14:57:16 -<<-: core/server.query { list => {{ id => 54 }, { id => 56 }}, errorCode => ok, _type => core/server.query }
21.10 14:57:16 STATS: vdl.0 cache connection, 28 calls, total 0.0330681800842285 sec spent, avg 1.18 ms
21.10 14:57:16 ->>-: vdl/cache.battle.infoRoom { roomId => 56, _type => vdl/cache.battle.infoRoom }
21.10 14:57:16 -<<-: vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
21.10 14:57:16 ->>-: vdl/cache.battle.deleteRoom { roomId => 56, _type => vdl/cache.battle.deleteRoom }
21.10 14:57:16 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
21.10 14:57:16 ->>-: core/user.sendTo { id => 76, _type => core/user.sendTo, msg => { _type => battle.end } }
21.10 14:57:16 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
21.10 14:57:16 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
21.10 14:57:16 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
21.10 14:57:16 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
21.10 14:57:16 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 14:57:16 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
21.10 14:57:16 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
21.10 14:57:16 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
21.10 14:57:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
21.10 14:57:16 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
21.10 14:57:16 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
21.10 14:57:16 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
21.10 14:57:16 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
21.10 14:57:16 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
21.10 14:57:16 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477046687, lastLoginDate => 295, lastLoadDate => 1022 }, effects => { list => [] } }}, version => 0, id => 76 } }
21.10 14:57:16 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
21.10 14:57:16 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
21.10 14:57:16 NET: Client login (conid:18019275, id:76, name:Aimer)
21.10 14:57:16 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
21.10 14:57:16 -<<-: core/user.loginPost { _type => core/user.loginPost }
21.10 14:57:16 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
21.10 14:57:16 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
21.10 14:57:16 ++ NET: Aimer req: user.data { messageType => user.data }
21.10 14:57:16 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
21.10 14:57:16 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:57:16 TIME: user.data 0.79 ms
21.10 14:57:16 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
21.10 14:57:22 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
21.10 14:57:22 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
