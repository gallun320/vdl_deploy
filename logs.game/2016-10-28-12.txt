28.10 12:12:28 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
28.10 12:12:28 -<<-: server.login ok
28.10 12:12:28 DB: SELECT * FROM LocalizationStrings
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 TIMER: Starting timer...
28.10 12:12:28 TIMER: Timer running...
28.10 12:12:28 DB: SELECT * FROM GameVars
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
28.10 12:12:28 -<<-: core/quest.getDaily ok
28.10 12:12:28 DB: SELECT * FROM UserAttributeTypes
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 DB: SELECT * FROM UserVariableTypes
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
28.10 12:12:28 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 DB: SELECT * FROM ItemGroups
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
28.10 12:12:28 -<<-: core/server.query ok
28.10 12:12:28 DB: SELECT * FROM Bundles ORDER BY ID
28.10 12:12:28 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
28.10 12:12:29 -<<-: core/server.query ok
28.10 12:12:29 DB: SELECT * FROM BundleItems ORDER BY ID
28.10 12:12:29 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
28.10 12:12:29 -<<-: core/server.query ok
28.10 12:12:29 SHOP: loading items...
28.10 12:12:29 ->>-: core/shop.getList { _type => core/shop.getList }
28.10 12:12:29 -<<-: core/shop.getList ok
28.10 12:12:29 SHOP: 0 items loaded (0 sec)
28.10 12:12:29 DB: SELECT * FROM EffectAttributeTypes
28.10 12:12:29 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
28.10 12:12:29 -<<-: core/server.query ok
28.10 12:12:29 DB: SELECT * FROM Effects
28.10 12:12:29 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
28.10 12:12:29 -<<-: core/server.query ok
28.10 12:12:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
28.10 12:12:29 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
28.10 12:12:29 -<<-: core/server.query ok
28.10 12:12:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
28.10 12:12:29 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
28.10 12:12:29 -<<-: core/server.query ok
28.10 12:12:29 DB: SELECT * FROM Badges
28.10 12:12:29 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
28.10 12:12:29 -<<-: core/server.query ok
28.10 12:12:29 TIMER: Check auto-disconnect...
28.10 12:12:29 STATS: vdl.0 cache, locks:0
28.10 12:12:29 TIMER: Check auto-disconnect...
28.10 12:12:29 STATS: vdl.0 cache, locks:0
28.10 12:12:29 NET: Client (conid:40531957) connected to vdl.0 (clients:1)
28.10 12:14:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjk= }
28.10 12:14:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid69' AND Password = E'uid69'
28.10 12:14:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid69' AND Password = E'uid69', _type => core/server.query }
28.10 12:14:30 -<<-: core/server.query ok
28.10 12:14:30 STATS: vdl.0 cache connection, 21 calls, total 0.281570672988892 sec spent, avg 13.41 ms
28.10 12:14:30 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
28.10 12:14:31 NET: Client (name:null conid:40531957 TCP) disconnected from vdl.0 (clients:0)
28.10 12:14:31 NET: Client (conid:42005156) connected to vdl.0 (clients:1)
28.10 12:14:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:14:33 TRACE: User not logon yet.
28.10 12:14:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:14:40 TRACE: User not logon yet.
28.10 12:14:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:14:47 TRACE: User not logon yet.
28.10 12:14:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:14:54 TRACE: User not logon yet.
28.10 12:15:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:15:02 TRACE: User not logon yet.
28.10 12:15:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:15:09 TRACE: User not logon yet.
28.10 12:15:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:15:17 TRACE: User not logon yet.
28.10 12:15:17 NET: Client (name:null conid:42005156 TCP) disconnected from vdl.0 (clients:0)
28.10 12:15:17 NET: Client (conid:29093151) connected to vdl.0 (clients:1)
28.10 12:15:17 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
28.10 12:15:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
28.10 12:15:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
28.10 12:15:17 -<<-: core/server.query ok
28.10 12:15:17 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
28.10 12:15:17 -<<-: core/user.isOnlineID ok
28.10 12:15:17 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
28.10 12:15:17 -<<-: core/cache.get ok
28.10 12:15:17 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
28.10 12:15:17 -<<-: core/cache.get ok
28.10 12:15:17 NET: Client login (conid:29093151, id:76, name:Aimer)
28.10 12:15:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
28.10 12:15:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
28.10 12:15:17 DB: SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp
28.10 12:15:17 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp, _type => core/server.query }
28.10 12:15:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:15:17 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp)
28.10 12:15:17 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
28.10 12:15:17 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
28.10 12:15:17 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp), _type => core/server.pending }} }
28.10 12:15:17 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
28.10 12:15:17 ++ NET: Aimer req: user.data { messageType => user.data }
28.10 12:15:17 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
28.10 12:15:17 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
28.10 12:15:17 TIME: user.data 0.52 ms
28.10 12:15:17 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
28.10 12:15:24 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477646117, lastLoginDate => 302, lastLoadDate => 1029 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
28.10 12:15:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
28.10 12:15:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
28.10 12:15:24 TIME: user.ping 0.19 ms
28.10 12:15:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:15:29 TIMER: Check auto-disconnect...
28.10 12:15:29 STATS: vdl.0 cache, locks:2
28.10 12:15:30 NET: Client (name:Aimer conid:29093151 TCP) disconnected from vdl.0 (clients:0)
28.10 12:15:30 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
28.10 12:15:30 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
28.10 12:15:30 NET: Client (conid:48762611) connected to vdl.0 (clients:1)
28.10 12:15:30 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:15:30 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:15:30 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
28.10 12:15:30 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:15:30 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 265
Called from modules/VDLBattleModule.hx line 278
Called from snipe/slave/Server.hx line 994
28.10 12:15:30 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
28.10 12:15:30 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
28.10 12:15:30 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
28.10 12:15:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
28.10 12:15:30 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
28.10 12:15:30 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
28.10 12:15:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:15:32 TRACE: User not logon yet.
28.10 12:15:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:15:39 TRACE: User not logon yet.
28.10 12:15:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:15:46 TRACE: User not logon yet.
28.10 12:15:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:15:53 TRACE: User not logon yet.
28.10 12:16:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:01 TRACE: User not logon yet.
28.10 12:16:08 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:08 TRACE: User not logon yet.
28.10 12:16:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:15 TRACE: User not logon yet.
28.10 12:16:17 NET: Client (name:null conid:48762611 TCP) disconnected from vdl.0 (clients:0)
28.10 12:16:17 NET: Client (conid:99965651) connected to vdl.0 (clients:1)
28.10 12:16:17 ++ NET: null req: user.register { city => Weqwe, password => 123456, name => test20, year => 1231, email => 123, messageType => user.register }
28.10 12:16:17 DB: SELECT ID FROM Users WHERE Name = E'test20'
28.10 12:16:17 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'test20', _type => core/server.query }
28.10 12:16:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:16:17 STATS: vdl.0 cache connection, 36 calls, total 0.436477899551392 sec spent, avg 12.12 ms
28.10 12:16:17 DB: SELECT nextval('Users_id_seq') AS id
28.10 12:16:17 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
28.10 12:16:18 -<<-: core/server.query { list => {{ id => 96 }}, errorCode => ok, _type => core/server.query }
28.10 12:16:18 ->>-: core/user.register { password => 123456, name => test20, fullParams => { city => Weqwe, password => 123456, name => test20, year => 1231, networkid => , networktype => , email => 123, messageType => user.register, id => 96 }, networkid => , connectionID => 99965651, networktype => , email => , id => 96, _type => core/user.register }
28.10 12:16:18 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
28.10 12:16:18 -<<-: core/user.registerResponse { password => 123456, name => test20, _isNotify => true, fullParams => { city => Weqwe, password => 123456, name => test20, year => 1231, networkid => , networktype => , email => 123, messageType => user.register, id => 96 }, networkid => , connectionID => 99965651, networktype => , email => , id => 96, _type => core/user.registerResponse }
28.10 12:16:18 == NET: null ret: user.register { type => user.register, errorCode => ok }
28.10 12:16:18 ++ NET: null req: user.login { password => 123456, name => test20, messageType => user.login }
28.10 12:16:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test20' AND Password = E'123456'
28.10 12:16:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test20' AND Password = E'123456', _type => core/server.query }
28.10 12:16:18 -<<-: core/server.query { list => {{ name => test20, networkid => , isbanned => false, id => 96 }}, errorCode => ok, _type => core/server.query }
28.10 12:16:18 ->>-: core/user.isOnlineID { id => 96, _type => core/user.isOnlineID }
28.10 12:16:18 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
28.10 12:16:18 ->>-: core/cache.get { type => user, v => -1, id => 96, _type => core/cache.get }
28.10 12:16:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test20, deleted => false, email => , networktype =>   , password => 123456, isbanned => false, regdate => 2016-10-28 12:16:18.03489+03, language =>   , networkid => , params => { info => { city => Weqwe, year => 1231, email => 123 }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 96 } }
28.10 12:16:18 ->>-: core/cache.get { type => questdata, v => -1, id => 96, _type => core/cache.get }
28.10 12:16:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 96 } }
28.10 12:16:18 NET: Client login (conid:99965651, id:96, name:test20)
28.10 12:16:18 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 96, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
28.10 12:16:18 -<<-: core/user.loginPost { _type => core/user.loginPost }
28.10 12:16:18 DB: SELECT ID FROM TempUserLogins WHERE UserID = 96 AND Date = 'today'::timestamp
28.10 12:16:18 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 96 AND Date = 'today'::timestamp, _type => core/server.query }
28.10 12:16:18 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:16:18 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (96, 'today'::timestamp)
28.10 12:16:18 == NET: test20 ret: user.login { name => test20, type => user.login, errorCode => ok, id => 96 }
28.10 12:16:18 == NET: test20 ret: user.join { name => test20, type => user.join }
28.10 12:16:18 ++ NET: test20 req: user.data { messageType => user.data }
28.10 12:16:18 ->>-: vdl/cache.user.getData { userId => 96, _type => vdl/cache.user.getData, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (96, 'today'::timestamp), _type => core/server.pending }} }
28.10 12:16:18 -<<-: vdl/cache.user.getData { info => { city => Weqwe, year => 1231, email => 123 }, errorCode => ok, _type => vdl/cache.user.getData }
28.10 12:16:18 TIME: user.data 0.75 ms
28.10 12:16:18 == NET: test20 ret: user.data { info => { city => Weqwe, year => 1231, email => 123 }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData }
28.10 12:16:23 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:23 TIME: user.ping 0.08 ms
28.10 12:16:23 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:16:24 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477646178, lastLoginDate => 302, lastLoadDate => 1029 } }}, type => user, unlock => false, id => 96, _type => core/cache.update }
28.10 12:16:24 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
28.10 12:16:29 TIMER: Check auto-disconnect...
28.10 12:16:29 STATS: vdl.0 cache, locks:2
28.10 12:16:30 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:30 TIME: user.ping 0.06 ms
28.10 12:16:30 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:16:37 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:37 TIME: user.ping 0.16 ms
28.10 12:16:37 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:16:44 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:44 TIME: user.ping 0.11 ms
28.10 12:16:44 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:16:52 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:52 TIME: user.ping 0.14 ms
28.10 12:16:52 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:16:59 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:16:59 TIME: user.ping 0.15 ms
28.10 12:16:59 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:17:06 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:17:06 TIME: user.ping 0.16 ms
28.10 12:17:06 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:17:13 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:17:13 TIME: user.ping 0.18 ms
28.10 12:17:13 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:17:20 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:17:20 TIME: user.ping 0.19 ms
28.10 12:17:20 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:17:27 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:17:27 TIME: user.ping 0.19 ms
28.10 12:17:27 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:17:29 TIMER: Check auto-disconnect...
28.10 12:17:29 STATS: vdl.0 cache, locks:2
28.10 12:17:34 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:17:34 TIME: user.ping 0.14 ms
28.10 12:17:34 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:17:41 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:17:41 TIME: user.ping 0.26 ms
28.10 12:17:41 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:17:48 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:17:48 TIME: user.ping 0.17 ms
28.10 12:17:48 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:17:55 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:17:55 TIME: user.ping 0.17 ms
28.10 12:17:55 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:02 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:02 TIME: user.ping 0.22 ms
28.10 12:18:02 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:09 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:09 TIME: user.ping 0.16 ms
28.10 12:18:09 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:16 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:16 TIME: user.ping 0.19 ms
28.10 12:18:16 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:23 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:23 TIME: user.ping 0.18 ms
28.10 12:18:23 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:29 TIMER: Check auto-disconnect...
28.10 12:18:29 STATS: vdl.0 cache, locks:2
28.10 12:18:30 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:30 TIME: user.ping 0.17 ms
28.10 12:18:30 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:37 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:37 TIME: user.ping 0.16 ms
28.10 12:18:37 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:44 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:44 TIME: user.ping 0.16 ms
28.10 12:18:44 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:51 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:51 TIME: user.ping 0.14 ms
28.10 12:18:51 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:18:58 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:18:58 TIME: user.ping 0.16 ms
28.10 12:18:58 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:19:05 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:19:05 TIME: user.ping 0.16 ms
28.10 12:19:05 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:19:12 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:19:12 TIME: user.ping 0.19 ms
28.10 12:19:12 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:19:19 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:19:19 TIME: user.ping 0.16 ms
28.10 12:19:19 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:19:26 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:19:26 TIME: user.ping 0.13 ms
28.10 12:19:26 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:19:29 TIMER: Check auto-disconnect...
28.10 12:19:29 STATS: vdl.0 cache, locks:2
28.10 12:19:33 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:19:33 TIME: user.ping 0.18 ms
28.10 12:19:33 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:19:40 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:19:40 TIME: user.ping 0.1 ms
28.10 12:19:40 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:19:47 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:19:47 TIME: user.ping 0.16 ms
28.10 12:19:47 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:19:54 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:19:54 TIME: user.ping 0.2 ms
28.10 12:19:54 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:01 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:01 TIME: user.ping 0.16 ms
28.10 12:20:01 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:08 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:08 TIME: user.ping 0.15 ms
28.10 12:20:08 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:15 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:15 TIME: user.ping 0.15 ms
28.10 12:20:15 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:22 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:22 TIME: user.ping 0.19 ms
28.10 12:20:22 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:29 TIMER: Check auto-disconnect...
28.10 12:20:29 STATS: vdl.0 cache, locks:2
28.10 12:20:29 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:29 TIME: user.ping 0.16 ms
28.10 12:20:29 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:36 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:36 TIME: user.ping 0.18 ms
28.10 12:20:36 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:43 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:43 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:43 TIME: user.ping 0.15 ms
28.10 12:20:50 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:50 TIME: user.ping 0.17 ms
28.10 12:20:50 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:20:57 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:20:57 TIME: user.ping 0.15 ms
28.10 12:20:57 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:21:04 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:21:04 TIME: user.ping 0.18 ms
28.10 12:21:04 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:21:11 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:21:11 TIME: user.ping 0.19 ms
28.10 12:21:11 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:21:18 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:21:18 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:21:18 TIME: user.ping 0.23 ms
28.10 12:21:25 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:21:25 TIME: user.ping 0.17 ms
28.10 12:21:25 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:21:29 TIMER: Check auto-disconnect...
28.10 12:21:29 STATS: vdl.0 cache, locks:2
28.10 12:21:32 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:21:32 TIME: user.ping 0.17 ms
28.10 12:21:32 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:21:39 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:21:39 TIME: user.ping 0.15 ms
28.10 12:21:39 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:21:46 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:21:46 TIME: user.ping 0.2 ms
28.10 12:21:46 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:21:53 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:21:53 TIME: user.ping 0.21 ms
28.10 12:21:53 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:00 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:00 TIME: user.ping 0.2 ms
28.10 12:22:00 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:07 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:07 TIME: user.ping 0.19 ms
28.10 12:22:07 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:14 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:14 TIME: user.ping 0.19 ms
28.10 12:22:14 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:21 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:21 TIME: user.ping 0.17 ms
28.10 12:22:21 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:28 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:28 TIME: user.ping 1.54 ms
28.10 12:22:28 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:29 TIMER: Check auto-disconnect...
28.10 12:22:29 STATS: vdl.0 cache, locks:2
28.10 12:22:35 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:35 TIME: user.ping 0.16 ms
28.10 12:22:35 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:42 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:42 TIME: user.ping 0.08 ms
28.10 12:22:42 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:49 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:49 TIME: user.ping 0.15 ms
28.10 12:22:49 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:22:56 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:22:56 TIME: user.ping 0.18 ms
28.10 12:22:56 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:03 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:03 TIME: user.ping 0.17 ms
28.10 12:23:03 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:10 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:10 TIME: user.ping 0.18 ms
28.10 12:23:10 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:17 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:17 TIME: user.ping 0.26 ms
28.10 12:23:17 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:24 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:24 TIME: user.ping 0.17 ms
28.10 12:23:24 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:29 TIMER: Check auto-disconnect...
28.10 12:23:29 STATS: vdl.0 cache, locks:2
28.10 12:23:31 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:31 TIME: user.ping 0.18 ms
28.10 12:23:31 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:38 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:38 TIME: user.ping 0.17 ms
28.10 12:23:38 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:45 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:45 TIME: user.ping 0.14 ms
28.10 12:23:45 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:52 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:52 TIME: user.ping 0.21 ms
28.10 12:23:52 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:23:59 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:23:59 TIME: user.ping 0.22 ms
28.10 12:23:59 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:24:06 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:24:06 TIME: user.ping 0.1 ms
28.10 12:24:06 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:24:13 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:24:13 TIME: user.ping 0.11 ms
28.10 12:24:13 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:24:20 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:24:20 TIME: user.ping 0.08 ms
28.10 12:24:20 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:24:27 ++ NET: test20 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:24:27 TIME: user.ping 0.16 ms
28.10 12:24:27 == NET: test20 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:24:27 NET: Client (name:test20 conid:99965651 TCP) disconnected from vdl.0 (clients:0)
28.10 12:24:27 DB: SELECT id FROM battle WHERE firstid=96 OR secondid=96 AND finished <> true
28.10 12:24:27 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=96 OR secondid=96 AND finished <> true, _type => core/server.query }
28.10 12:24:27 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:24:27 STATS: vdl.0 cache connection, 47 calls, total 0.501632213592529 sec spent, avg 10.67 ms
28.10 12:24:27 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:24:27 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
28.10 12:24:27 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:24:27 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 265
Called from modules/VDLBattleModule.hx line 278
Called from snipe/slave/Server.hx line 994
28.10 12:24:27 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 96, _type => core/cache.update }
28.10 12:24:27 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
28.10 12:24:27 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 96, _type => core/cache.update }
28.10 12:24:27 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
28.10 12:24:27 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 96, _type => core/user.logoutPost }
28.10 12:24:27 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:24:29 TIMER: Check auto-disconnect...
28.10 12:24:29 STATS: vdl.0 cache, locks:0
28.10 12:35:04 NET: Client (conid:27870296) connected to vdl.0 (clients:1)
28.10 12:35:05 ++ NET: null req: user.register { messageType => user.register }
28.10 12:35:05 DB: SELECT * FROM users
28.10 12:35:05 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
28.10 12:35:05 -<<-: core/server.query { list => {{ password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid64, name => uid64, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, id => 64, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid67, name => uid67, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476886636,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:17:16.853975+03, language => en, id => 67, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid65, name => uid65, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476879545,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 15:19:05.058893+03, language => en, id => 65, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => qweqwe, name => asdasd, networkid => , params => {"info":{"city":"Dsadasd","year":"1231","email":"asdasdas"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.822508+03, language =>   , id => 69, deleted => false }, { password => uid66, name => uid66, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476882998,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 16:16:38.334095+03, language => en, id => 66, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }, { password => uid73, name => uid73, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889025,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:57:04.529542+03, language => en, id => 73, deleted => false }, { password => uid71, name => uid71, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888930,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:55:29.621522+03, language => en, id => 71, deleted => false }, { password => uid68, name => uid68, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888788,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.78775+03, language => en, id => 68, deleted => false }, { password => 123123, name => 123123, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:54:22.233721+03, language =>   , id => 70, deleted => false }, { password => qweqwe, name => 1qweqwe, networkid => , params => {"info":{"city":"Qweqwe","year":"1231","email":"qweqwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:56:17.221331+03, language =>   , id => 72, deleted => false }, { password => 123123, name => 123qwe, networkid => , params => {"info":{"city":"Wqe","year":"1233","email":"123qwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:59:29.773441+03, language =>   , id => 74, deleted => false }, { password => uid75, name => uid75, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889477,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:04:35.916538+03, language => en, id => 75, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890115,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language => en, id => 44, deleted => false }, { password => uid77, name => uid77, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889607,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:06:46.41184+03, language => en, id => 77, deleted => false }, { password => 123456, name => test20, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477646178,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 12:16:18.03489+03, language => en, id => 96, deleted => false }, { password => uid78, name => uid78, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890199,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:16:37.399803+03, language => en, id => 78, deleted => false }, { password => uid83, name => uid83, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961590,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:06:28.765885+03, language => en, id => 83, deleted => false }, { password => uid79, name => uid79, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476959779,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:36:18.869521+03, language => en, id => 79, deleted => false }, { password => uid89, name => uid89, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308423,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-24 14:26:57.401644+03, language => en, id => 89, deleted => false }, { password => uid84, name => uid84, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961768,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:09:27.02443+03, language => en, id => 84, deleted => false }, { password => uid80, name => uid80, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476960874,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:54:32.93048+03, language => en, id => 80, deleted => false }, { password => uid81, name => uid81, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961061,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:57:40.114003+03, language => en, id => 81, deleted => false }, { password => uid85, name => uid85, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476962319,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:18:38.418977+03, language => en, id => 85, deleted => false }, { password => 123123, name => Tester, networkid => , params => {"info":{"city":"Dsda","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:58:49.229528+03, language =>   , id => 86, deleted => false }, { password => qweqwe, name => Acterix, networkid => , params => {"info":{"city":"Weqwe","year":"2312","email":"eqwe123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:39:29.554557+03, language =>   , id => 90, deleted => false }, { password => uid91, name => uid91, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399413,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:43:32.477232+03, language => en, id => 91, deleted => false }, { password => uid82, name => uid82, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961257,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:00:56.513148+03, language => en, id => 82, deleted => false }, { password => uid87, name => uid87, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, id => 87, deleted => false }, { password => uid94, name => uid94, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477488836,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, id => 94, deleted => false }, { password => uid88, name => uid88, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477049264,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-21 14:27:43.099186+03, language => en, id => 88, deleted => false }, { password => 123456, name => test17, networkid => , params => {"info":{"city":"","year":"","email":"asda"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399457,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:44:17.274208+03, language => en, id => 92, deleted => false }, { password => uid95, name => uid95, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477489312,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, id => 95, deleted => false }, { password => uid93, name => uid93, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477400907,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:08:27.066262+03, language => en, id => 93, deleted => false }, { password => kO2YJdf, name => Aimer, networkid => , params => {"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477646117,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, id => 76, deleted => false }}, errorCode => ok, _type => core/server.query }
28.10 12:35:05 STATS: vdl.0 cache connection, 52 calls, total 0.511731147766113 sec spent, avg 9.84 ms
28.10 12:35:05 DB: SELECT ID FROM Users WHERE Name = E'uid97'
28.10 12:35:05 == NET: null ret: user.auth { type => user.auth, token => dWlkOTc= }
28.10 12:35:05 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid97', _type => core/server.query }
28.10 12:35:05 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:35:05 DB: SELECT nextval('Users_id_seq') AS id
28.10 12:35:05 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
28.10 12:35:05 -<<-: core/server.query { list => {{ id => 97 }}, errorCode => ok, _type => core/server.query }
28.10 12:35:05 ->>-: core/user.register { password => uid97, name => uid97, fullParams => { password => uid97, name => uid97, networkid => , networktype => , messageType => user.register, id => 97 }, networkid => , connectionID => 27870296, networktype => , email => , id => 97, _type => core/user.register }
28.10 12:35:05 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
28.10 12:35:05 -<<-: core/user.registerResponse { password => uid97, name => uid97, _isNotify => true, fullParams => { password => uid97, name => uid97, networkid => , networktype => , messageType => user.register, id => 97 }, networkid => , connectionID => 27870296, networktype => , email => , id => 97, _type => core/user.registerResponse }
28.10 12:35:05 == NET: null ret: user.register { type => user.register, errorCode => ok }
28.10 12:35:07 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTc= }
28.10 12:35:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid97' AND Password = E'uid97'
28.10 12:35:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid97' AND Password = E'uid97', _type => core/server.query }
28.10 12:35:07 -<<-: core/server.query { list => {{ name => uid97, networkid => , isbanned => false, id => 97 }}, errorCode => ok, _type => core/server.query }
28.10 12:35:07 ->>-: core/user.isOnlineID { id => 97, _type => core/user.isOnlineID }
28.10 12:35:07 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
28.10 12:35:07 ->>-: core/cache.get { type => user, v => -1, id => 97, _type => core/cache.get }
28.10 12:35:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid97, deleted => false, email => , networktype =>   , password => uid97, isbanned => false, regdate => 2016-10-28 12:35:05.771011+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 97 } }
28.10 12:35:07 ->>-: core/cache.get { type => questdata, v => -1, id => 97, _type => core/cache.get }
28.10 12:35:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 97 } }
28.10 12:35:07 NET: Client login (conid:27870296, id:97, name:uid97)
28.10 12:35:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 97, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
28.10 12:35:07 -<<-: core/user.loginPost { _type => core/user.loginPost }
28.10 12:35:07 DB: SELECT ID FROM TempUserLogins WHERE UserID = 97 AND Date = 'today'::timestamp
28.10 12:35:07 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 97 AND Date = 'today'::timestamp, _type => core/server.query }
28.10 12:35:07 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:35:07 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (97, 'today'::timestamp)
28.10 12:35:07 == NET: uid97 ret: user.login { name => uid97, type => user.login, errorCode => ok, id => 97 }
28.10 12:35:07 == NET: uid97 ret: user.join { name => uid97, type => user.join }
28.10 12:35:07 ++ NET: uid97 req: user.login { messageType => user.login, token => dWlkOTc= }
28.10 12:35:07 TRACE: User already logon.
28.10 12:35:07 TRACE: 
Called from snipe/slave/Server.hx line 870
Called from snipe/slave/Server.hx line 1124
28.10 12:35:07 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477647307, lastLoginDate => 302, lastLoadDate => 1029 } }}, type => user, unlock => true, id => 97, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (97, 'today'::timestamp), _type => core/server.pending }} }
28.10 12:35:07 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
28.10 12:35:07 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 97, _type => core/cache.update }
28.10 12:35:07 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
28.10 12:35:07 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 97, _type => core/user.logoutPost }
28.10 12:35:07 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
28.10 12:35:07 TRACE: Could not login.
28.10 12:35:07 TRACE: 
Called from snipe/slave/Server.hx line 1151
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
28.10 12:35:09 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:35:09 TIME: user.ping 0.09 ms
28.10 12:35:09 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:35:16 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:35:16 TIME: user.ping 0.09 ms
28.10 12:35:16 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:35:23 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:35:23 TIME: user.ping 0.07 ms
28.10 12:35:23 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:35:29 TIMER: Check auto-disconnect...
28.10 12:35:29 STATS: vdl.0 cache, locks:0
28.10 12:35:30 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:35:30 TIME: user.ping 0.07 ms
28.10 12:35:30 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:35:38 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:35:38 TIME: user.ping 0.07 ms
28.10 12:35:38 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:36:09 NET: Client (name:uid97 conid:27870296 TCP) disconnected from vdl.0 (clients:0)
28.10 12:36:09 DB: SELECT id FROM battle WHERE firstid=97 OR secondid=97 AND finished <> true
28.10 12:36:09 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=97 OR secondid=97 AND finished <> true, _type => core/server.query }
28.10 12:36:09 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:36:09 STATS: vdl.0 cache connection, 65 calls, total 0.540029287338257 sec spent, avg 8.31 ms
28.10 12:36:09 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:36:09 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
28.10 12:36:09 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:36:09 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 265
Called from modules/VDLBattleModule.hx line 278
Called from snipe/slave/Server.hx line 994
28.10 12:36:09 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 97, _type => core/cache.update }
28.10 12:36:09 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
28.10 12:36:09 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 97, _type => core/cache.update }
28.10 12:36:09 -<<-: core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
28.10 12:36:09 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 97, _type => core/user.logoutPost }
28.10 12:36:09 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
28.10 12:36:14 NET: Client (conid:89434122) connected to vdl.0 (clients:1)
28.10 12:36:15 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTc= }
28.10 12:36:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid97' AND Password = E'uid97'
28.10 12:36:15 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid97' AND Password = E'uid97', _type => core/server.query }
28.10 12:36:15 -<<-: core/server.query { list => {{ name => uid97, networkid => , isbanned => false, id => 97 }}, errorCode => ok, _type => core/server.query }
28.10 12:36:15 ->>-: core/user.isOnlineID { id => 97, _type => core/user.isOnlineID }
28.10 12:36:15 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
28.10 12:36:15 ->>-: core/cache.get { type => user, v => -1, id => 97, _type => core/cache.get }
28.10 12:36:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid97, deleted => false, email => , networktype =>   , password => uid97, isbanned => false, regdate => 2016-10-28 12:35:05.771011+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477647307, lastLoginDate => 302, lastLoadDate => 1029 }, effects => { list => [] } }}, version => 0, id => 97 } }
28.10 12:36:15 ->>-: core/cache.get { type => questdata, v => -1, id => 97, _type => core/cache.get }
28.10 12:36:15 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 97 } }
28.10 12:36:15 NET: Client login (conid:89434122, id:97, name:uid97)
28.10 12:36:15 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 97, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
28.10 12:36:15 -<<-: core/user.loginPost { _type => core/user.loginPost }
28.10 12:36:15 == NET: uid97 ret: user.login { name => uid97, type => user.login, errorCode => ok, id => 97 }
28.10 12:36:15 == NET: uid97 ret: user.join { name => uid97, type => user.join }
28.10 12:36:19 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:36:19 TIME: user.ping 0.09 ms
28.10 12:36:19 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:36:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 97, _type => core/cache.update }
28.10 12:36:24 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
28.10 12:36:26 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:36:26 TIME: user.ping 0.07 ms
28.10 12:36:26 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:36:29 TIMER: Check auto-disconnect...
28.10 12:36:29 STATS: vdl.0 cache, locks:2
28.10 12:36:33 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:36:33 TIME: user.ping 0.08 ms
28.10 12:36:33 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:37:29 TIMER: Check auto-disconnect...
28.10 12:37:29 STATS: vdl.0 cache, locks:2
28.10 12:37:46 NET: Client (name:uid97 conid:89434122 TCP) disconnected from vdl.0 (clients:0)
28.10 12:37:46 DB: SELECT id FROM battle WHERE firstid=97 OR secondid=97 AND finished <> true
28.10 12:37:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=97 OR secondid=97 AND finished <> true, _type => core/server.query }
28.10 12:37:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:37:46 STATS: vdl.0 cache connection, 76 calls, total 0.546023368835449 sec spent, avg 7.18 ms
28.10 12:37:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:37:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
28.10 12:37:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:37:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 265
Called from modules/VDLBattleModule.hx line 278
Called from snipe/slave/Server.hx line 994
28.10 12:37:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 97, _type => core/cache.update }
28.10 12:37:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
28.10 12:37:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 97, _type => core/cache.update }
28.10 12:37:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
28.10 12:37:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 97, _type => core/user.logoutPost }
28.10 12:37:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
28.10 12:38:19 NET: Client (conid:4879887) connected to vdl.0 (clients:1)
28.10 12:38:20 ++ NET: null req: user.login { messageType => user.login, token => dWlkOTc= }
28.10 12:38:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid97' AND Password = E'uid97'
28.10 12:38:20 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid97' AND Password = E'uid97', _type => core/server.query }
28.10 12:38:20 -<<-: core/server.query { list => {{ name => uid97, networkid => , isbanned => false, id => 97 }}, errorCode => ok, _type => core/server.query }
28.10 12:38:20 ->>-: core/user.isOnlineID { id => 97, _type => core/user.isOnlineID }
28.10 12:38:20 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
28.10 12:38:20 ->>-: core/cache.get { type => user, v => -1, id => 97, _type => core/cache.get }
28.10 12:38:20 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid97, deleted => false, email => , networktype =>   , password => uid97, isbanned => false, regdate => 2016-10-28 12:35:05.771011+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477647307, lastLoginDate => 302, lastLoadDate => 1029 }, effects => { list => [] } }}, version => 0, id => 97 } }
28.10 12:38:20 ->>-: core/cache.get { type => questdata, v => -1, id => 97, _type => core/cache.get }
28.10 12:38:20 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 97 } }
28.10 12:38:20 NET: Client login (conid:4879887, id:97, name:uid97)
28.10 12:38:20 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 97, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
28.10 12:38:20 -<<-: core/user.loginPost { _type => core/user.loginPost }
28.10 12:38:20 == NET: uid97 ret: user.login { name => uid97, type => user.login, errorCode => ok, id => 97 }
28.10 12:38:20 == NET: uid97 ret: user.join { name => uid97, type => user.join }
28.10 12:38:24 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:38:24 TIME: user.ping 0.1 ms
28.10 12:38:24 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:38:29 TIMER: Check auto-disconnect...
28.10 12:38:29 STATS: vdl.0 cache, locks:2
28.10 12:38:29 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 97, _type => core/cache.update }
28.10 12:38:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
28.10 12:38:33 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:38:33 TIME: user.ping 0.09 ms
28.10 12:38:33 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:38:42 ++ NET: uid97 req: user.ping { messageType => user.ping, msg => ok }
28.10 12:38:42 TIME: user.ping 0.12 ms
28.10 12:38:42 == NET: uid97 ret: user.ping { type => user.ping, errorCode => ok }
28.10 12:38:58 NET: Client (name:uid97 conid:4879887 TCP) disconnected from vdl.0 (clients:0)
28.10 12:38:58 DB: SELECT id FROM battle WHERE firstid=97 OR secondid=97 AND finished <> true
28.10 12:38:58 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=97 OR secondid=97 AND finished <> true, _type => core/server.query }
28.10 12:38:58 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
28.10 12:38:58 STATS: vdl.0 cache connection, 87 calls, total 0.553859233856201 sec spent, avg 6.37 ms
28.10 12:38:58 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:38:58 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
28.10 12:38:58 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
28.10 12:38:58 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 265
Called from modules/VDLBattleModule.hx line 278
Called from snipe/slave/Server.hx line 994
28.10 12:38:58 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 97, _type => core/cache.update }
28.10 12:38:58 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
28.10 12:38:58 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 97, _type => core/cache.update }
28.10 12:38:58 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
28.10 12:38:58 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 97, _type => core/user.logoutPost }
28.10 12:38:58 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
