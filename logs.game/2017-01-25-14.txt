25.01 14:00:00 STATS: vdl.0 cache, locks:0
25.01 14:00:59 TIMER: Check auto-disconnect...
25.01 14:01:00 STATS: vdl.0 cache, locks:0
25.01 14:01:59 TIMER: Check auto-disconnect...
25.01 14:02:00 STATS: vdl.0 cache, locks:0
25.01 14:02:59 TIMER: Check auto-disconnect...
25.01 14:03:00 STATS: vdl.0 cache, locks:0
25.01 14:03:59 TIMER: Check auto-disconnect...
25.01 14:04:00 STATS: vdl.0 cache, locks:0
25.01 14:04:59 TIMER: Check auto-disconnect...
25.01 14:05:00 STATS: vdl.0 cache, locks:0
25.01 14:05:59 TIMER: Check auto-disconnect...
25.01 14:06:00 STATS: vdl.0 cache, locks:0
25.01 14:06:59 TIMER: Check auto-disconnect...
25.01 14:07:00 STATS: vdl.0 cache, locks:0
25.01 14:07:59 TIMER: Check auto-disconnect...
25.01 14:08:00 STATS: vdl.0 cache, locks:0
25.01 14:08:59 TIMER: Check auto-disconnect...
25.01 14:09:00 STATS: vdl.0 cache, locks:0
25.01 14:09:59 TIMER: Check auto-disconnect...
25.01 14:10:00 STATS: vdl.0 cache, locks:0
25.01 14:10:43 NET: Client (conid:7071648) connected to vdl.0 (clients:1)
25.01 14:10:44 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.01 14:10:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
25.01 14:10:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 14:10:44 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 28 }}, errorCode => ok, _type => core/server.query }
25.01 14:10:44 STATS: vdl.0 cache connection, 39 calls, total 0.0478246212005615 sec spent, avg 1.23 ms
25.01 14:10:44 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
25.01 14:10:44 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 14:10:44 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
25.01 14:10:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, year => , email => raBpoLL1@ya.ru, networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-11-20 13:52:24.495988+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1485344044, lastLoginDate => 25, money => 13, lastLoadDate => 126 }, effects => { list => [] } }}, version => 0, id => 28 } }
25.01 14:10:44 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
25.01 14:10:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 28 } }
25.01 14:10:44 NET: Client login (conid:7071648, id:28, name:Aimer)
25.01 14:10:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 14:10:44 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 14:10:44 DB: SELECT token FROM tokens WHERE userid = 28
25.01 14:10:44 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
25.01 14:10:44 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
25.01 14:10:44 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
25.01 14:10:44 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.01 14:10:46 ++ NET: Aimer req: user.data { messageType => user.data }
25.01 14:10:46 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 13 }
25.01 14:10:46 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 14:10:46 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 14:10:46 TIME: user.data 0.39 ms
25.01 14:10:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:10:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:10:48 TIME: user.ping 0.12 ms
25.01 14:10:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 28, _type => core/cache.update }
25.01 14:10:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.01 14:10:59 TIMER: Check auto-disconnect...
25.01 14:11:00 STATS: vdl.0 cache, locks:2
25.01 14:11:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:11:09 TIME: user.ping 0.13 ms
25.01 14:11:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:11:30 ++ NET: Aimer req: user.getFriendList { messageType => user.getFriendList }
25.01 14:11:30 ->>-: vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 28 }
25.01 14:11:30 -<<-: vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 14:11:30 TIME: user.getFriendList 0.39 ms
25.01 14:11:30 == NET: Aimer ret: user.getFriendList { list => [], type => user.getFriendList, errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 14:11:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:11:31 TIME: user.ping 0.12 ms
25.01 14:11:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:11:39 ++ NET: Aimer req: user.searchEnemy { name => Uid, messageType => user.searchEnemy }
25.01 14:11:39 ->>-: vdl/cache.user.searchEnemy { name => Uid, id => 28, _type => vdl/cache.user.searchEnemy }
25.01 14:11:39 -<<-: vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [] }
25.01 14:11:39 TIME: user.searchEnemy 0.97 ms
25.01 14:11:39 == NET: Aimer ret: user.searchEnemy { list => [], type => user.searchEnemy, errorCode => ok }
25.01 14:11:50 ++ NET: Aimer req: user.searchEnemy { name => uid, messageType => user.searchEnemy }
25.01 14:11:50 ->>-: vdl/cache.user.searchEnemy { name => uid, id => 28, _type => vdl/cache.user.searchEnemy }
25.01 14:11:50 -<<-: vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid44, isOnline => false, id => 44 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid160, isOnline => false, id => 160 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid149, isOnline => false, id => 149 },{ name => uid143, isOnline => false, id => 143 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid144, isOnline => false, id => 144 },{ name => uid145, isOnline => false, id => 145 },{ name => uid112, isOnline => false, id => 112 },{ name => uid150, isOnline => false, id => 150 },{ name => uid127, isOnline => false, id => 127 },{ name => uid133, isOnline => false, id => 133 },{ name => uid134, isOnline => false, id => 134 },{ name => uid132, isOnline => false, id => 132 },{ name => uid135, isOnline => false, id => 135 },{ name => uid136, isOnline => false, id => 136 },{ name => uid137, isOnline => false, id => 137 },{ name => uid138, isOnline => false, id => 138 },{ name => uid139, isOnline => false, id => 139 },{ name => uid140, isOnline => false, id => 140 },{ name => uid141, isOnline => false, id => 141 },{ name => uid142, isOnline => false, id => 142 },{ name => uid147, isOnline => false, id => 147 },{ name => uid146, isOnline => false, id => 146 },{ name => uid148, isOnline => false, id => 148 },{ name => uid151, isOnline => false, id => 151 },{ name => uid152, isOnline => false, id => 152 },{ name => uid153, isOnline => false, id => 153 },{ name => uid154, isOnline => false, id => 154 },{ name => uid155, isOnline => false, id => 155 },{ name => uid156, isOnline => false, id => 156 },{ name => uid157, isOnline => false, id => 157 },{ name => uid158, isOnline => false, id => 158 },{ name => uid159, isOnline => false, id => 159 },{ name => uid161, isOnline => false, id => 161 },{ name => uid162, isOnline => false, id => 162 },{ name => uid163, isOnline => false, id => 163 }] }
25.01 14:11:50 STATS: vdl.0 cache connection, 49 calls, total 0.0550374984741211 sec spent, avg 1.12 ms
25.01 14:11:50 TIME: user.searchEnemy 2.86 ms
25.01 14:11:50 == NET: Aimer ret: user.searchEnemy { list => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid44, isOnline => false, id => 44 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid160, isOnline => false, id => 160 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid149, isOnline => false, id => 149 },{ name => uid143, isOnline => false, id => 143 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid144, isOnline => false, id => 144 },{ name => uid145, isOnline => false, id => 145 },{ name => uid112, isOnline => false, id => 112 },{ name => uid150, isOnline => false, id => 150 },{ name => uid127, isOnline => false, id => 127 },{ name => uid133, isOnline => false, id => 133 },{ name => uid134, isOnline => false, id => 134 },{ name => uid132, isOnline => false, id => 132 },{ name => uid135, isOnline => false, id => 135 },{ name => uid136, isOnline => false, id => 136 },{ name => uid137, isOnline => false, id => 137 },{ name => uid138, isOnline => false, id => 138 },{ name => uid139, isOnline => false, id => 139 },{ name => uid140, isOnline => false, id => 140 },{ name => uid141, isOnline => false, id => 141 },{ name => uid142, isOnline => false, id => 142 },{ name => uid147, isOnline => false, id => 147 },{ name => uid146, isOnline => false, id => 146 },{ name => uid148, isOnline => false, id => 148 },{ name => uid151, isOnline => false, id => 151 },{ name => uid152, isOnline => false, id => 152 },{ name => uid153, isOnline => false, id => 153 },{ name => uid154, isOnline => false, id => 154 },{ name => uid155, isOnline => false, id => 155 },{ name => uid156, isOnline => false, id => 156 },{ name => uid157, isOnline => false, id => 157 },{ name => uid158, isOnline => false, id => 158 },{ name => uid159, isOnline => false, id => 159 },{ name => uid161, isOnline => false, id => 161 },{ name => uid162, isOnline => false, id => 162 },{ name => uid163, isOnline => false, id => 163 }], type => user.searchEnemy, errorCode => ok }
25.01 14:11:52 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:11:52 TIME: user.ping 0.17 ms
25.01 14:11:52 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:11:59 TIMER: Check auto-disconnect...
25.01 14:12:00 STATS: vdl.0 cache, locks:2
25.01 14:12:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:12:11 TIME: user.ping 0.18 ms
25.01 14:12:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:12:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:12:27 TIME: user.ping 0.15 ms
25.01 14:12:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:12:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:12:44 TIME: user.ping 0.15 ms
25.01 14:12:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:12:59 TIMER: Check auto-disconnect...
25.01 14:13:00 STATS: vdl.0 cache, locks:2
25.01 14:13:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:13:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:13:01 TIME: user.ping 0.19 ms
25.01 14:13:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:13:17 TIME: user.ping 0.15 ms
25.01 14:13:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:13:34 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:13:34 TIME: user.ping 0.22 ms
25.01 14:13:34 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:13:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:13:51 TIME: user.ping 0.14 ms
25.01 14:13:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:13:59 TIMER: Check auto-disconnect...
25.01 14:14:00 STATS: vdl.0 cache, locks:2
25.01 14:14:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:14:12 TIME: user.ping 0.18 ms
25.01 14:14:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:14:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:14:29 TIME: user.ping 0.17 ms
25.01 14:14:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:14:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:14:46 TIME: user.ping 0.14 ms
25.01 14:14:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:14:59 TIMER: Check auto-disconnect...
25.01 14:15:00 STATS: vdl.0 cache, locks:2
25.01 14:15:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:15:02 TIME: user.ping 0.16 ms
25.01 14:15:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:15:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:15:19 TIME: user.ping 0.2 ms
25.01 14:15:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:15:36 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:15:36 TIME: user.ping 0.18 ms
25.01 14:15:36 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:15:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:15:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:15:53 TIME: user.ping 0.17 ms
25.01 14:15:59 TIMER: Check auto-disconnect...
25.01 14:16:00 STATS: vdl.0 cache, locks:2
25.01 14:16:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:16:09 TIME: user.ping 0.13 ms
25.01 14:16:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:16:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:16:26 TIME: user.ping 0.14 ms
25.01 14:16:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:16:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:16:43 TIME: user.ping 0.17 ms
25.01 14:16:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:16:59 TIMER: Check auto-disconnect...
25.01 14:17:00 STATS: vdl.0 cache, locks:2
25.01 14:17:00 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:17:00 TIME: user.ping 0.21 ms
25.01 14:17:00 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:17:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:17:16 TIME: user.ping 0.18 ms
25.01 14:17:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:17:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:17:33 TIME: user.ping 0.13 ms
25.01 14:17:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:17:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:17:50 TIME: user.ping 0.13 ms
25.01 14:17:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:17:59 TIMER: Check auto-disconnect...
25.01 14:18:00 STATS: vdl.0 cache, locks:2
25.01 14:18:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:18:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:18:07 TIME: user.ping 0.22 ms
25.01 14:18:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:18:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:18:24 TIME: user.ping 0.2 ms
25.01 14:18:40 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:18:40 TIME: user.ping 0.16 ms
25.01 14:18:40 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:18:57 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:18:57 TIME: user.ping 0.16 ms
25.01 14:18:57 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:18:59 TIMER: Check auto-disconnect...
25.01 14:19:00 STATS: vdl.0 cache, locks:2
25.01 14:19:14 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:19:14 TIME: user.ping 0.21 ms
25.01 14:19:14 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:19:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:19:31 TIME: user.ping 0.16 ms
25.01 14:19:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:19:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:19:47 TIME: user.ping 0.18 ms
25.01 14:19:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:19:59 TIMER: Check auto-disconnect...
25.01 14:20:00 STATS: vdl.0 cache, locks:2
25.01 14:20:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:20:04 TIME: user.ping 0.21 ms
25.01 14:20:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:20:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:20:21 TIME: user.ping 0.13 ms
25.01 14:20:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:20:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:20:37 TIME: user.ping 0.16 ms
25.01 14:20:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:20:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:20:54 TIME: user.ping 0.17 ms
25.01 14:20:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:20:59 TIMER: Check auto-disconnect...
25.01 14:21:00 STATS: vdl.0 cache, locks:2
25.01 14:21:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:21:11 TIME: user.ping 0.16 ms
25.01 14:21:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:21:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:21:28 TIME: user.ping 0.18 ms
25.01 14:21:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:21:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:21:44 TIME: user.ping 0.14 ms
25.01 14:21:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:21:59 TIMER: Check auto-disconnect...
25.01 14:22:00 STATS: vdl.0 cache, locks:2
25.01 14:22:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:22:01 TIME: user.ping 0.17 ms
25.01 14:22:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:22:18 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:22:18 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:22:18 TIME: user.ping 0.2 ms
25.01 14:22:35 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:22:35 TIME: user.ping 0.15 ms
25.01 14:22:35 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:22:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:22:51 TIME: user.ping 0.18 ms
25.01 14:22:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:22:59 TIMER: Check auto-disconnect...
25.01 14:23:00 STATS: vdl.0 cache, locks:2
25.01 14:23:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:23:08 TIME: user.ping 0.18 ms
25.01 14:23:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:23:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:23:25 TIME: user.ping 0.19 ms
25.01 14:23:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:23:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:23:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:23:41 TIME: user.ping 0.19 ms
25.01 14:23:59 TIMER: Check auto-disconnect...
25.01 14:24:00 STATS: vdl.0 cache, locks:2
25.01 14:24:00 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:24:00 TIME: user.ping 0.19 ms
25.01 14:24:00 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:24:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:24:22 TIME: user.ping 0.16 ms
25.01 14:24:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:24:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:24:43 TIME: user.ping 0.15 ms
25.01 14:24:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:24:59 TIMER: Check auto-disconnect...
25.01 14:25:00 STATS: vdl.0 cache, locks:2
25.01 14:25:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:25:04 TIME: user.ping 0.14 ms
25.01 14:25:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:25:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:25:26 TIME: user.ping 0.14 ms
25.01 14:25:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:25:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:25:47 TIME: user.ping 0.19 ms
25.01 14:25:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:25:59 TIMER: Check auto-disconnect...
25.01 14:26:00 STATS: vdl.0 cache, locks:2
25.01 14:26:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:26:08 TIME: user.ping 0.16 ms
25.01 14:26:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:26:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:26:30 TIME: user.ping 0.19 ms
25.01 14:26:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:26:51 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:26:51 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:26:51 TIME: user.ping 0.17 ms
25.01 14:26:59 TIMER: Check auto-disconnect...
25.01 14:27:00 STATS: vdl.0 cache, locks:2
25.01 14:27:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:27:13 TIME: user.ping 0.18 ms
25.01 14:27:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:27:18 NET: Client (name:Aimer conid:7071648 TCP) disconnected from vdl.0 (clients:0)
25.01 14:27:18 DB: SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true
25.01 14:27:18 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true, _type => core/server.query }
25.01 14:27:18 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 14:27:18 STATS: vdl.0 cache connection, 50 calls, total 0.05605149269104 sec spent, avg 1.12 ms
25.01 14:27:18 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 14:27:18 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.01 14:27:18 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 14:27:18 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.01 14:27:18 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 28, _type => core/cache.update }
25.01 14:27:18 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.01 14:27:18 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 28, _type => core/cache.update }
25.01 14:27:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.01 14:27:18 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 28, _type => core/user.logoutPost }
25.01 14:27:18 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.01 14:27:59 TIMER: Check auto-disconnect...
25.01 14:28:00 STATS: vdl.0 cache, locks:0
25.01 14:28:59 TIMER: Check auto-disconnect...
25.01 14:29:00 STATS: vdl.0 cache, locks:0
25.01 14:29:59 TIMER: Check auto-disconnect...
25.01 14:30:00 STATS: vdl.0 cache, locks:0
25.01 14:30:59 TIMER: Check auto-disconnect...
25.01 14:31:00 STATS: vdl.0 cache, locks:0
25.01 14:31:59 TIMER: Check auto-disconnect...
25.01 14:32:00 STATS: vdl.0 cache, locks:0
25.01 14:32:59 TIMER: Check auto-disconnect...
25.01 14:33:00 STATS: vdl.0 cache, locks:0
25.01 14:33:59 TIMER: Check auto-disconnect...
25.01 14:34:00 STATS: vdl.0 cache, locks:0
25.01 14:34:59 TIMER: Check auto-disconnect...
25.01 14:35:00 STATS: vdl.0 cache, locks:0
25.01 14:35:59 TIMER: Check auto-disconnect...
25.01 14:36:00 STATS: vdl.0 cache, locks:0
25.01 14:36:59 TIMER: Check auto-disconnect...
25.01 14:37:00 STATS: vdl.0 cache, locks:0
25.01 14:37:59 TIMER: Check auto-disconnect...
25.01 14:38:00 STATS: vdl.0 cache, locks:0
25.01 14:38:59 TIMER: Check auto-disconnect...
25.01 14:39:00 STATS: vdl.0 cache, locks:0
25.01 14:39:59 TIMER: Check auto-disconnect...
25.01 14:40:00 STATS: vdl.0 cache, locks:0
25.01 14:40:59 TIMER: Check auto-disconnect...
25.01 14:41:00 STATS: vdl.0 cache, locks:0
25.01 14:41:59 TIMER: Check auto-disconnect...
25.01 14:42:00 STATS: vdl.0 cache, locks:0
25.01 14:42:59 TIMER: Check auto-disconnect...
25.01 14:43:00 STATS: vdl.0 cache, locks:0
25.01 14:43:59 TIMER: Check auto-disconnect...
25.01 14:44:00 STATS: vdl.0 cache, locks:0
25.01 14:44:59 TIMER: Check auto-disconnect...
25.01 14:45:00 STATS: vdl.0 cache, locks:0
25.01 14:45:24 NET: Client (conid:28790043) connected to vdl.0 (clients:1)
25.01 14:45:25 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.01 14:45:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
25.01 14:45:25 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 14:45:25 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 28 }}, errorCode => ok, _type => core/server.query }
25.01 14:45:25 STATS: vdl.0 cache connection, 55 calls, total 0.0626678466796875 sec spent, avg 1.14 ms
25.01 14:45:25 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
25.01 14:45:25 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 14:45:25 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
25.01 14:45:25 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, year => , email => raBpoLL1@ya.ru, networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-11-20 13:52:24.495988+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1485344044, lastLoginDate => 25, money => 13, lastLoadDate => 126 }, effects => { list => [] } }}, version => 0, id => 28 } }
25.01 14:45:25 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
25.01 14:45:25 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 28 } }
25.01 14:45:25 NET: Client login (conid:28790043, id:28, name:Aimer)
25.01 14:45:25 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 14:45:25 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 14:45:25 DB: SELECT token FROM tokens WHERE userid = 28
25.01 14:45:25 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
25.01 14:45:25 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
25.01 14:45:25 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
25.01 14:45:25 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.01 14:45:27 ++ NET: Aimer req: user.data { messageType => user.data }
25.01 14:45:27 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 13 }
25.01 14:45:27 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 14:45:27 TIME: user.data 0.45 ms
25.01 14:45:27 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 14:45:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:45:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:45:29 TIME: user.ping 0.11 ms
25.01 14:45:33 ++ NET: Aimer req: user.getFriendList { messageType => user.getFriendList }
25.01 14:45:33 ->>-: vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 28 }
25.01 14:45:33 -<<-: vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 14:45:33 TIME: user.getFriendList 0.39 ms
25.01 14:45:33 == NET: Aimer ret: user.getFriendList { list => [], type => user.getFriendList, errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 14:45:35 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 28, _type => core/cache.update }
25.01 14:45:35 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.01 14:45:43 ++ NET: Aimer req: user.searchEnemy { name => uid, messageType => user.searchEnemy }
25.01 14:45:43 ->>-: vdl/cache.user.searchEnemy { name => uid, id => 28, _type => vdl/cache.user.searchEnemy }
25.01 14:45:43 -<<-: vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid44, isOnline => false, id => 44 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid160, isOnline => false, id => 160 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid149, isOnline => false, id => 149 },{ name => uid143, isOnline => false, id => 143 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid144, isOnline => false, id => 144 },{ name => uid145, isOnline => false, id => 145 },{ name => uid112, isOnline => false, id => 112 },{ name => uid150, isOnline => false, id => 150 },{ name => uid127, isOnline => false, id => 127 },{ name => uid133, isOnline => false, id => 133 },{ name => uid134, isOnline => false, id => 134 },{ name => uid132, isOnline => false, id => 132 },{ name => uid135, isOnline => false, id => 135 },{ name => uid136, isOnline => false, id => 136 },{ name => uid137, isOnline => false, id => 137 },{ name => uid138, isOnline => false, id => 138 },{ name => uid139, isOnline => false, id => 139 },{ name => uid140, isOnline => false, id => 140 },{ name => uid141, isOnline => false, id => 141 },{ name => uid142, isOnline => false, id => 142 },{ name => uid147, isOnline => false, id => 147 },{ name => uid146, isOnline => false, id => 146 },{ name => uid148, isOnline => false, id => 148 },{ name => uid151, isOnline => false, id => 151 },{ name => uid152, isOnline => false, id => 152 },{ name => uid153, isOnline => false, id => 153 },{ name => uid154, isOnline => false, id => 154 },{ name => uid155, isOnline => false, id => 155 },{ name => uid156, isOnline => false, id => 156 },{ name => uid157, isOnline => false, id => 157 },{ name => uid158, isOnline => false, id => 158 },{ name => uid159, isOnline => false, id => 159 },{ name => uid161, isOnline => false, id => 161 },{ name => uid162, isOnline => false, id => 162 },{ name => uid163, isOnline => false, id => 163 }] }
25.01 14:45:44 TIME: user.searchEnemy 2.39 ms
25.01 14:45:44 == NET: Aimer ret: user.searchEnemy { list => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid44, isOnline => false, id => 44 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid160, isOnline => false, id => 160 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid149, isOnline => false, id => 149 },{ name => uid143, isOnline => false, id => 143 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid144, isOnline => false, id => 144 },{ name => uid145, isOnline => false, id => 145 },{ name => uid112, isOnline => false, id => 112 },{ name => uid150, isOnline => false, id => 150 },{ name => uid127, isOnline => false, id => 127 },{ name => uid133, isOnline => false, id => 133 },{ name => uid134, isOnline => false, id => 134 },{ name => uid132, isOnline => false, id => 132 },{ name => uid135, isOnline => false, id => 135 },{ name => uid136, isOnline => false, id => 136 },{ name => uid137, isOnline => false, id => 137 },{ name => uid138, isOnline => false, id => 138 },{ name => uid139, isOnline => false, id => 139 },{ name => uid140, isOnline => false, id => 140 },{ name => uid141, isOnline => false, id => 141 },{ name => uid142, isOnline => false, id => 142 },{ name => uid147, isOnline => false, id => 147 },{ name => uid146, isOnline => false, id => 146 },{ name => uid148, isOnline => false, id => 148 },{ name => uid151, isOnline => false, id => 151 },{ name => uid152, isOnline => false, id => 152 },{ name => uid153, isOnline => false, id => 153 },{ name => uid154, isOnline => false, id => 154 },{ name => uid155, isOnline => false, id => 155 },{ name => uid156, isOnline => false, id => 156 },{ name => uid157, isOnline => false, id => 157 },{ name => uid158, isOnline => false, id => 158 },{ name => uid159, isOnline => false, id => 159 },{ name => uid161, isOnline => false, id => 161 },{ name => uid162, isOnline => false, id => 162 },{ name => uid163, isOnline => false, id => 163 }], type => user.searchEnemy, errorCode => ok }
25.01 14:45:48 ++ NET: Aimer req: user.addFriend { userId => 2, type => add, messageType => user.addFriend }
25.01 14:45:48 TRACE: user.addFriend : Invalid field access : push
25.01 14:45:48 TRACE: user.addFriend : 
Called from modules/VDLUserModule.hx line 127
Called from modules/VDLUserModule.hx line 36
Called from snipe/slave/Server.hx line 1225
25.01 14:45:59 TIMER: Check auto-disconnect...
25.01 14:46:00 STATS: vdl.0 cache, locks:2
25.01 14:46:03 NET: Client (name:Aimer conid:28790043 TCP) disconnected from vdl.0 (clients:0)
25.01 14:46:03 DB: SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true
25.01 14:46:03 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true, _type => core/server.query }
25.01 14:46:03 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 14:46:03 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 14:46:03 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.01 14:46:03 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 14:46:03 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.01 14:46:03 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 28, _type => core/cache.update }
25.01 14:46:03 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.01 14:46:03 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 28, _type => core/cache.update }
25.01 14:46:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.01 14:46:03 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 28, _type => core/user.logoutPost }
25.01 14:46:03 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.01 14:46:03 NET: Client (conid:82117111) connected to vdl.0 (clients:1)
25.01 14:46:04 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.01 14:46:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
25.01 14:46:04 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 14:46:04 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 28 }}, errorCode => ok, _type => core/server.query }
25.01 14:46:04 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
25.01 14:46:04 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 14:46:04 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
25.01 14:46:04 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, year => , email => raBpoLL1@ya.ru, networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-11-20 13:52:24.495988+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1485344044, lastLoginDate => 25, money => 13, lastLoadDate => 126 }, effects => { list => [] } }}, version => 2, id => 28 } }
25.01 14:46:04 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
25.01 14:46:04 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 28 } }
25.01 14:46:04 NET: Client login (conid:82117111, id:28, name:Aimer)
25.01 14:46:04 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 14:46:04 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 14:46:04 DB: SELECT token FROM tokens WHERE userid = 28
25.01 14:46:04 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
25.01 14:46:04 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
25.01 14:46:04 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
25.01 14:46:04 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.01 14:46:04 ++ NET: Aimer req: user.data { messageType => user.data }
25.01 14:46:04 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 13 }
25.01 14:46:04 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 14:46:04 TIME: user.data 0.38 ms
25.01 14:46:04 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 14:46:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:46:04 TIME: user.ping 0.1 ms
25.01 14:46:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:46:10 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 28, _type => core/cache.update }
25.01 14:46:10 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
25.01 14:46:22 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:46:22 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:46:22 TIME: user.ping 0.13 ms
25.01 14:46:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:46:41 TIME: user.ping 0.19 ms
25.01 14:46:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:46:59 TIMER: Check auto-disconnect...
25.01 14:47:00 STATS: vdl.0 cache, locks:2
25.01 14:47:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:47:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:47:02 TIME: user.ping 0.23 ms
25.01 14:47:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:47:24 TIME: user.ping 0.15 ms
25.01 14:47:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:47:45 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:47:45 TIME: user.ping 0.14 ms
25.01 14:47:45 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:47:59 TIMER: Check auto-disconnect...
25.01 14:48:00 STATS: vdl.0 cache, locks:2
25.01 14:48:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:48:07 TIME: user.ping 0.14 ms
25.01 14:48:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:48:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:48:28 TIME: user.ping 0.16 ms
25.01 14:48:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:48:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:48:50 TIME: user.ping 0.15 ms
25.01 14:48:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:48:59 TIMER: Check auto-disconnect...
25.01 14:49:00 STATS: vdl.0 cache, locks:2
25.01 14:49:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:49:11 TIME: user.ping 0.13 ms
25.01 14:49:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:49:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:49:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:49:33 TIME: user.ping 0.18 ms
25.01 14:49:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:49:54 TIME: user.ping 0.13 ms
25.01 14:49:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:49:59 TIMER: Check auto-disconnect...
25.01 14:50:00 STATS: vdl.0 cache, locks:2
25.01 14:50:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:50:16 TIME: user.ping 0.14 ms
25.01 14:50:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:50:37 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:50:37 TIME: user.ping 0.13 ms
25.01 14:50:37 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:50:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:50:59 TIME: user.ping 0.14 ms
25.01 14:50:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:50:59 TIMER: Check auto-disconnect...
25.01 14:51:00 STATS: vdl.0 cache, locks:2
25.01 14:51:20 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:51:20 TIME: user.ping 0.13 ms
25.01 14:51:20 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:51:42 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:51:42 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:51:42 TIME: user.ping 0.17 ms
25.01 14:51:59 TIMER: Check auto-disconnect...
25.01 14:52:00 STATS: vdl.0 cache, locks:2
25.01 14:52:03 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:52:03 TIME: user.ping 0.19 ms
25.01 14:52:03 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:52:25 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:52:25 TIME: user.ping 0.14 ms
25.01 14:52:25 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:52:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:52:46 TIME: user.ping 0.2 ms
25.01 14:52:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:52:59 TIMER: Check auto-disconnect...
25.01 14:53:00 STATS: vdl.0 cache, locks:2
25.01 14:53:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:53:07 TIME: user.ping 0.14 ms
25.01 14:53:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:53:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:53:29 TIME: user.ping 0.14 ms
25.01 14:53:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:53:50 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:53:50 TIME: user.ping 0.13 ms
25.01 14:53:50 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:53:59 TIMER: Check auto-disconnect...
25.01 14:54:00 STATS: vdl.0 cache, locks:2
25.01 14:54:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:54:12 TIME: user.ping 0.13 ms
25.01 14:54:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:54:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:54:32 TIME: user.ping 0.17 ms
25.01 14:54:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:54:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:54:48 TIME: user.ping 0.12 ms
25.01 14:54:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:54:59 TIMER: Check auto-disconnect...
25.01 14:55:00 STATS: vdl.0 cache, locks:2
25.01 14:55:08 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:55:08 TIME: user.ping 0.16 ms
25.01 14:55:08 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:55:29 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:55:29 TIME: user.ping 0.14 ms
25.01 14:55:29 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:55:49 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:55:49 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:55:49 TIME: user.ping 0.2 ms
25.01 14:55:59 TIMER: Check auto-disconnect...
25.01 14:56:00 STATS: vdl.0 cache, locks:2
25.01 14:56:10 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:56:10 TIME: user.ping 0.15 ms
25.01 14:56:10 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:56:30 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:56:30 TIME: user.ping 0.16 ms
25.01 14:56:30 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:56:49 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:56:49 TIME: user.ping 0.15 ms
25.01 14:56:49 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:56:59 TIMER: Check auto-disconnect...
25.01 14:57:00 STATS: vdl.0 cache, locks:2
25.01 14:57:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:57:06 TIME: user.ping 0.22 ms
25.01 14:57:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:57:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:57:26 TIME: user.ping 0.14 ms
25.01 14:57:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:57:43 ++ NET: Aimer req: user.getFriendList { messageType => user.getFriendList }
25.01 14:57:43 ->>-: vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 28 }
25.01 14:57:43 -<<-: vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 14:57:43 STATS: vdl.0 cache connection, 78 calls, total 0.0781266689300537 sec spent, avg 1 ms
25.01 14:57:43 TIME: user.getFriendList 0.47 ms
25.01 14:57:43 == NET: Aimer ret: user.getFriendList { list => [], type => user.getFriendList, errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 14:57:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:57:47 TIME: user.ping 0.13 ms
25.01 14:57:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:57:59 TIMER: Check auto-disconnect...
25.01 14:58:00 STATS: vdl.0 cache, locks:2
25.01 14:58:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:58:09 TIME: user.ping 0.13 ms
25.01 14:58:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:58:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:58:32 TIME: user.ping 0.14 ms
25.01 14:58:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:58:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:58:54 TIME: user.ping 0.14 ms
25.01 14:58:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:58:59 TIMER: Check auto-disconnect...
25.01 14:59:00 STATS: vdl.0 cache, locks:2
25.01 14:59:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:59:17 TIME: user.ping 0.16 ms
25.01 14:59:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:59:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 14:59:41 TIME: user.ping 0.12 ms
25.01 14:59:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 14:59:59 TIMER: Check auto-disconnect...
