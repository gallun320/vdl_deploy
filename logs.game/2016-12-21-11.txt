21.12 11:56:26 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
21.12 11:56:26 -<<-: server.login ok
21.12 11:56:26 DB: SELECT * FROM LocalizationStrings
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 TIMER: Starting timer...
21.12 11:56:26 DB: SELECT * FROM GameVars
21.12 11:56:26 TIMER: Timer running...
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
21.12 11:56:26 -<<-: core/quest.getDaily ok
21.12 11:56:26 DB: SELECT * FROM UserAttributeTypes
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM UserVariableTypes
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.12 11:56:26 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM ItemGroups
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM Bundles ORDER BY ID
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM BundleItems ORDER BY ID
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 SHOP: loading items...
21.12 11:56:26 ->>-: core/shop.getList { _type => core/shop.getList }
21.12 11:56:26 -<<-: core/shop.getList ok
21.12 11:56:26 SHOP: 0 items loaded (0 sec)
21.12 11:56:26 DB: SELECT * FROM EffectAttributeTypes
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM Effects
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.12 11:56:26 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.12 11:56:26 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 DB: SELECT * FROM Badges
21.12 11:56:26 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.12 11:56:26 -<<-: core/server.query ok
21.12 11:56:26 NET: Client (conid:5073617) connected to vdl.0 (clients:1)
21.12 11:56:27 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
21.12 11:56:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
21.12 11:56:27 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
21.12 11:56:27 -<<-: core/server.query ok
21.12 11:56:27 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
21.12 11:56:27 -<<-: core/user.isOnlineID ok
21.12 11:56:27 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
21.12 11:56:27 -<<-: core/cache.get ok
21.12 11:56:27 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
21.12 11:56:27 -<<-: core/cache.get ok
21.12 11:56:27 NET: Client login (conid:5073617, id:112, name:uid112)
21.12 11:56:27 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
21.12 11:56:27 -<<-: core/user.loginPost null
21.12 11:56:27 DB: SELECT token FROM tokens WHERE userid = 112
21.12 11:56:27 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
21.12 11:56:27 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
21.12 11:56:27 DB: SELECT ID FROM TempUserLogins WHERE UserID = 112 AND Date = 'today'::timestamp
21.12 11:56:27 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 112 AND Date = 'today'::timestamp, _type => core/server.query }
21.12 11:56:27 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.12 11:56:27 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (112, 'today'::timestamp)
21.12 11:56:27 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
21.12 11:56:27 == NET: uid112 ret: user.join { name => uid112, type => user.join }
21.12 11:56:27 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (112, 'today'::timestamp), _type => core/server.pending }} }
21.12 11:56:27 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
21.12 11:56:28 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:56:28 TIME: user.ping 0.15 ms
21.12 11:56:28 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
21.12 11:56:36 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1482321387, lastLoginDate => 356, lastLoadDate => 1222 } }}, type => user, unlock => false, id => 112, _type => core/cache.update }
21.12 11:56:36 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.12 11:56:40 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.12 11:56:40 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:56:40 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:56:40 TIME: tournament.getAvailableTournament 8.74 ms
21.12 11:56:40 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:56:51 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:56:51 TIME: user.ping 0.12 ms
21.12 11:56:51 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
21.12 11:57:06 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.12 11:57:06 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:57:06 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:57:06 TIME: tournament.getAvailableTournament 5.69 ms
21.12 11:57:06 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:57:18 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:57:18 TIME: user.ping 0.29 ms
21.12 11:57:18 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
21.12 11:57:26 ++ NET: uid112 req: tournament.grid { tournamentId => 6, round => 1, messageType => tournament.grid }
21.12 11:57:26 ->>-: vdl/cache.tournament.getStatus { tournamentId => 6, _type => vdl/cache.tournament.getStatus }
21.12 11:57:26 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
21.12 11:57:26 STATS: vdl.0 cache connection, 32 calls, total 0.0455999374389648 sec spent, avg 1.42 ms
21.12 11:57:26 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 6, _type => vdl/cache.tournament.getAvailableTournamentUsers }
21.12 11:57:26 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [124,117] }
21.12 11:57:26 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 124, player2 => 117 }], tournamentId => 6, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
21.12 11:57:26 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 124, player2 => 117 }], tournamentId => 6, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.12 11:57:26 TIME: tournament.grid 1.94 ms
21.12 11:57:26 == NET: uid112 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => 124, player2 => 117 }], type => tournament.grid, tournamentId => 6, errorCode => ok, _type => vdl/cache.tournament.setGrid }
21.12 11:57:26 TIMER: Check auto-disconnect...
21.12 11:57:26 STATS: vdl.0 cache, locks:2
21.12 11:57:41 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:57:41 TIME: user.ping 0.14 ms
21.12 11:57:41 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
21.12 11:58:00 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:58:00 TIME: user.ping 0.1 ms
21.12 11:58:00 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
21.12 11:58:22 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:58:22 TIME: user.ping 0.13 ms
21.12 11:58:22 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
21.12 11:58:26 TIMER: Check auto-disconnect...
21.12 11:58:26 STATS: vdl.0 cache, locks:2
21.12 11:58:56 NET: Client (name:uid112 conid:5073617 TCP) disconnected from vdl.0 (clients:0)
21.12 11:58:56 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
21.12 11:58:56 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
21.12 11:58:56 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
21.12 11:58:56 STATS: vdl.0 cache connection, 35 calls, total 0.0469202995300293 sec spent, avg 1.34 ms
21.12 11:58:56 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.12 11:58:56 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
21.12 11:58:56 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
21.12 11:58:56 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
21.12 11:58:56 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
21.12 11:58:56 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
21.12 11:58:56 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
21.12 11:58:56 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.12 11:58:56 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
21.12 11:58:56 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
21.12 11:59:00 NET: Client (conid:29893248) connected to vdl.0 (clients:1)
21.12 11:59:01 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
21.12 11:59:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
21.12 11:59:01 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
21.12 11:59:01 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
21.12 11:59:01 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
21.12 11:59:01 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
21.12 11:59:01 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
21.12 11:59:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482321387, lastLoginDate => 356, lastLoadDate => 1222 }, effects => { list => [] } }}, version => 2, id => 112 } }
21.12 11:59:01 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
21.12 11:59:01 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 112 } }
21.12 11:59:01 NET: Client login (conid:29893248, id:112, name:uid112)
21.12 11:59:01 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
21.12 11:59:01 -<<-: core/user.loginPost { _type => core/user.loginPost }
21.12 11:59:01 DB: SELECT token FROM tokens WHERE userid = 112
21.12 11:59:01 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
21.12 11:59:01 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
21.12 11:59:01 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
21.12 11:59:01 == NET: uid112 ret: user.join { name => uid112, type => user.join }
21.12 11:59:05 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:59:05 TIME: user.ping 0.13 ms
21.12 11:59:05 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
21.12 11:59:06 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
21.12 11:59:06 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
21.12 11:59:08 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
21.12 11:59:08 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:59:08 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:59:08 TIME: tournament.getAvailableTournament 5.24 ms
21.12 11:59:08 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
21.12 11:59:26 TIMER: Check auto-disconnect...
21.12 11:59:26 STATS: vdl.0 cache, locks:2
21.12 11:59:26 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:59:26 TIME: user.ping 0.13 ms
21.12 11:59:26 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
21.12 11:59:48 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
21.12 11:59:48 TIME: user.ping 0.14 ms
21.12 11:59:48 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
