11.11 07:00:01 STATS: vdl.0 cache, locks:2
11.11 07:00:28 TIMER: Check auto-disconnect...
11.11 07:01:01 STATS: vdl.0 cache, locks:2
11.11 07:01:28 TIMER: Check auto-disconnect...
11.11 07:02:01 STATS: vdl.0 cache, locks:2
11.11 07:02:28 TIMER: Check auto-disconnect...
11.11 07:03:01 STATS: vdl.0 cache, locks:2
11.11 07:03:28 TIMER: Check auto-disconnect...
11.11 07:04:01 STATS: vdl.0 cache, locks:2
11.11 07:04:28 TIMER: Check auto-disconnect...
11.11 07:05:01 STATS: vdl.0 cache, locks:2
11.11 07:05:28 TIMER: Check auto-disconnect...
11.11 07:06:01 STATS: vdl.0 cache, locks:2
11.11 07:06:28 TIMER: Check auto-disconnect...
11.11 07:07:01 STATS: vdl.0 cache, locks:2
11.11 07:07:28 TIMER: Check auto-disconnect...
11.11 07:08:01 STATS: vdl.0 cache, locks:2
11.11 07:08:28 TIMER: Check auto-disconnect...
11.11 07:09:01 STATS: vdl.0 cache, locks:2
11.11 07:09:28 TIMER: Check auto-disconnect...
11.11 07:10:01 STATS: vdl.0 cache, locks:2
11.11 07:10:28 TIMER: Check auto-disconnect...
11.11 07:11:01 STATS: vdl.0 cache, locks:2
11.11 07:11:28 TIMER: Check auto-disconnect...
11.11 07:12:01 STATS: vdl.0 cache, locks:2
11.11 07:12:28 TIMER: Check auto-disconnect...
11.11 07:13:01 STATS: vdl.0 cache, locks:2
11.11 07:13:28 TIMER: Check auto-disconnect...
11.11 07:14:01 STATS: vdl.0 cache, locks:2
11.11 07:14:28 TIMER: Check auto-disconnect...
11.11 07:15:01 STATS: vdl.0 cache, locks:2
11.11 07:15:28 TIMER: Check auto-disconnect...
11.11 07:16:01 STATS: vdl.0 cache, locks:2
11.11 07:16:28 TIMER: Check auto-disconnect...
11.11 07:17:01 STATS: vdl.0 cache, locks:2
11.11 07:17:28 TIMER: Check auto-disconnect...
11.11 07:18:01 STATS: vdl.0 cache, locks:2
11.11 07:18:28 TIMER: Check auto-disconnect...
11.11 07:19:01 STATS: vdl.0 cache, locks:2
11.11 07:19:28 TIMER: Check auto-disconnect...
11.11 07:20:01 STATS: vdl.0 cache, locks:2
11.11 07:20:28 TIMER: Check auto-disconnect...
11.11 07:21:01 STATS: vdl.0 cache, locks:2
11.11 07:21:28 TIMER: Check auto-disconnect...
11.11 07:22:01 STATS: vdl.0 cache, locks:2
11.11 07:22:28 TIMER: Check auto-disconnect...
11.11 07:23:01 STATS: vdl.0 cache, locks:2
11.11 07:23:28 TIMER: Check auto-disconnect...
11.11 07:24:01 STATS: vdl.0 cache, locks:2
11.11 07:24:28 TIMER: Check auto-disconnect...
11.11 07:25:01 STATS: vdl.0 cache, locks:2
11.11 07:25:28 TIMER: Check auto-disconnect...
11.11 07:26:01 STATS: vdl.0 cache, locks:2
11.11 07:26:28 TIMER: Check auto-disconnect...
11.11 07:27:01 STATS: vdl.0 cache, locks:2
11.11 07:27:28 TIMER: Check auto-disconnect...
11.11 07:28:01 STATS: vdl.0 cache, locks:2
11.11 07:28:28 TIMER: Check auto-disconnect...
11.11 07:29:01 STATS: vdl.0 cache, locks:2
11.11 07:29:28 TIMER: Check auto-disconnect...
11.11 07:30:01 STATS: vdl.0 cache, locks:2
11.11 07:30:28 TIMER: Check auto-disconnect...
11.11 07:31:01 STATS: vdl.0 cache, locks:2
11.11 07:31:28 TIMER: Check auto-disconnect...
11.11 07:32:01 STATS: vdl.0 cache, locks:2
11.11 07:32:28 TIMER: Check auto-disconnect...
11.11 07:33:01 STATS: vdl.0 cache, locks:2
11.11 07:33:28 TIMER: Check auto-disconnect...
11.11 07:34:01 STATS: vdl.0 cache, locks:2
11.11 07:34:28 TIMER: Check auto-disconnect...
11.11 07:35:01 STATS: vdl.0 cache, locks:2
11.11 07:35:28 TIMER: Check auto-disconnect...
11.11 07:36:01 STATS: vdl.0 cache, locks:2
11.11 07:36:28 TIMER: Check auto-disconnect...
11.11 07:37:01 STATS: vdl.0 cache, locks:2
11.11 07:37:28 TIMER: Check auto-disconnect...
11.11 07:38:01 STATS: vdl.0 cache, locks:2
11.11 07:38:28 TIMER: Check auto-disconnect...
11.11 07:39:01 STATS: vdl.0 cache, locks:2
11.11 07:39:28 TIMER: Check auto-disconnect...
11.11 07:40:01 STATS: vdl.0 cache, locks:2
11.11 07:40:28 TIMER: Check auto-disconnect...
11.11 07:41:01 STATS: vdl.0 cache, locks:2
11.11 07:41:28 TIMER: Check auto-disconnect...
11.11 07:42:01 STATS: vdl.0 cache, locks:2
11.11 07:42:28 TIMER: Check auto-disconnect...
11.11 07:43:01 STATS: vdl.0 cache, locks:2
11.11 07:43:28 TIMER: Check auto-disconnect...
11.11 07:44:01 STATS: vdl.0 cache, locks:2
11.11 07:44:28 TIMER: Check auto-disconnect...
11.11 07:45:01 STATS: vdl.0 cache, locks:2
11.11 07:45:28 TIMER: Check auto-disconnect...
11.11 07:46:01 STATS: vdl.0 cache, locks:2
11.11 07:46:28 TIMER: Check auto-disconnect...
11.11 07:47:01 STATS: vdl.0 cache, locks:2
11.11 07:47:28 TIMER: Check auto-disconnect...
11.11 07:48:01 STATS: vdl.0 cache, locks:2
11.11 07:48:28 TIMER: Check auto-disconnect...
11.11 07:49:01 STATS: vdl.0 cache, locks:2
11.11 07:49:28 TIMER: Check auto-disconnect...
11.11 07:50:01 STATS: vdl.0 cache, locks:2
11.11 07:50:28 TIMER: Check auto-disconnect...
11.11 07:51:01 STATS: vdl.0 cache, locks:2
11.11 07:51:28 TIMER: Check auto-disconnect...
11.11 07:52:01 STATS: vdl.0 cache, locks:2
11.11 07:52:28 TIMER: Check auto-disconnect...
11.11 07:53:01 STATS: vdl.0 cache, locks:2
11.11 07:53:28 TIMER: Check auto-disconnect...
11.11 07:54:01 STATS: vdl.0 cache, locks:2
11.11 07:54:28 TIMER: Check auto-disconnect...
11.11 07:55:01 STATS: vdl.0 cache, locks:2
11.11 07:55:28 TIMER: Check auto-disconnect...
11.11 07:56:01 STATS: vdl.0 cache, locks:2
11.11 07:56:28 TIMER: Check auto-disconnect...
11.11 07:57:01 STATS: vdl.0 cache, locks:2
11.11 07:57:28 TIMER: Check auto-disconnect...
11.11 07:57:54 NET: Client (conid:66169048) connected to vdl.0 (clients:1)
11.11 07:57:55 ++ NET: null req: user.register { messageType => user.register }
11.11 07:57:55 DB: SELECT * FROM users
11.11 07:57:55 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
11.11 07:57:55 -<<-: core/server.query { list => {{ city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"attrs":{},"inventory":{"list":[]}}, "info": {"city":"", "year": "", "email": ""}, networktype =>   , email => , isbanned => false, regdate => 2016-11-10 11:48:59.9391+00, language =>   , id => 1, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478779175,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 11:56:09.590311+00, language => en, id => 2, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:08:05.144895+00, language =>   , id => 3, deleted => false }, { city => , password => uid4, name => uid4, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:24:23.638304+00, language =>   , id => 4, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:28:38.741567+00, language =>   , id => 5, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 13:32:51.765479+00, language =>   , id => 7, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => {"attrs":{"_lastTime.24hr":1478782560,"lastLoginDate":315,"lastLoadDate":1111},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 12:31:41.286497+00, language => en, id => 6, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => , networktype =>   , email => mail, isbanned => false, regdate => 2016-11-10 15:37:47.142701+00, language =>   , id => 8, deleted => false }}, errorCode => ok, _type => core/server.query }
11.11 07:57:55 STATS: vdl.0 cache connection, 1109 calls, total 0.844155311584473 sec spent, avg 0.76 ms
11.11 07:57:55 DB: SELECT ID FROM Users WHERE Name = 'uid9'
11.11 07:57:55 == NET: null ret: user.auth { type => user.auth, token => dWlkOQ== }
11.11 07:57:55 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid9', _type => core/server.query }
11.11 07:57:55 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.11 07:57:55 DB: SELECT nextval('Users_id_seq') AS id
11.11 07:57:55 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
11.11 07:57:55 -<<-: core/server.query { list => {{ id => 9 }}, errorCode => ok, _type => core/server.query }
11.11 07:57:55 ->>-: core/user.register { password => uid9, name => uid9, fullParams => { password => uid9, name => uid9, networkid => , networktype => , messageType => user.register, id => 9 }, networkid => , connectionID => 66169048, networktype => , email => , id => 9, _type => core/user.register }
11.11 07:57:55 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
11.11 07:57:55 -<<-: core/user.registerResponse { password => uid9, name => uid9, _isNotify => true, fullParams => { password => uid9, name => uid9, networkid => , networktype => , messageType => user.register, id => 9 }, networkid => , connectionID => 66169048, networktype => , email => , id => 9, _type => core/user.registerResponse }
11.11 07:57:55 DB: SELECT token FROM tokens WHERE userid = 9
11.11 07:57:55 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 9, _type => core/server.query }
11.11 07:57:55 -<<-: core/server.query { list => {{ token => 14986be1f511949a68de9e64382036dc }, { token => 569ee1bd7f9a2410c3e3f69346e75c33 }}, errorCode => ok, _type => core/server.query }
11.11 07:57:55 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 14986be1f511949a68de9e64382036dc }
11.11 07:57:56 ++ NET: null req: user.login { messageType => user.login, token => dWlkOQ== }
11.11 07:57:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid9' AND Password = 'uid9'
11.11 07:57:56 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid9' AND Password = 'uid9', _type => core/server.query }
11.11 07:57:56 -<<-: core/server.query { list => {{ name => uid9, networkid => , isbanned => false, id => 9 }}, errorCode => ok, _type => core/server.query }
11.11 07:57:56 ->>-: core/user.isOnlineID { id => 9, _type => core/user.isOnlineID }
11.11 07:57:56 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
11.11 07:57:56 ->>-: core/cache.get { type => user, v => -1, id => 9, _type => core/cache.get }
11.11 07:57:56 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid9, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid9, isbanned => false, regdate => 2016-11-11 07:57:55.30687+00, city => 1, language =>   , region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, hints => 15 }, effects => { list => [] } }}, version => 19, id => 9 } }
11.11 07:57:56 ->>-: core/cache.get { type => questdata, v => -1, id => 9, _type => core/cache.get }
11.11 07:57:56 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 9 } }
11.11 07:57:56 NET: Client login (conid:66169048, id:9, name:uid9)
11.11 07:57:56 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 9, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
11.11 07:57:56 -<<-: core/user.loginPost { _type => core/user.loginPost }
11.11 07:57:56 DB: SELECT token FROM tokens WHERE userid = 9
11.11 07:57:56 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 9, _type => core/server.query }
11.11 07:57:56 -<<-: core/server.query { list => {{ token => 14986be1f511949a68de9e64382036dc }, { token => 569ee1bd7f9a2410c3e3f69346e75c33 }}, errorCode => ok, _type => core/server.query }
11.11 07:57:56 DB: SELECT ID FROM TempUserLogins WHERE UserID = 9 AND Date = 'today'::timestamp
11.11 07:57:56 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 9 AND Date = 'today'::timestamp, _type => core/server.query }
11.11 07:57:56 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.11 07:57:56 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (9, 'today'::timestamp)
11.11 07:57:56 == NET: uid9 ret: user.login { name => uid9, type => user.login, errorCode => ok, id => 9, token => 14986be1f511949a68de9e64382036dc }
11.11 07:57:56 ++ NET: uid9 req: user.login { messageType => user.login, token => dWlkOQ== }
11.11 07:57:56 DB: SELECT id FROM battle WHERE firstid=9 OR secondid=9 AND finished <> true
11.11 07:57:56 == NET: uid9 ret: user.join { name => uid9, type => user.join }
11.11 07:57:56 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=9 OR secondid=9 AND finished <> true, _type => core/server.query, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (9, 'today'::timestamp), _type => core/server.pending }} }
11.11 07:57:56 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.11 07:57:56 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
11.11 07:57:56 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
11.11 07:57:56 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
11.11 07:57:56 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 472
Called from modules/VDLBattleModule.hx line 485
Called from snipe/slave/Server.hx line 1009
11.11 07:57:56 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1478851076, lastLoginDate => 316, lastLoadDate => 1112 } }}, type => user, unlock => true, id => 9, _type => core/cache.update }
11.11 07:57:56 -<<-: core/cache.update { errorCode => ok, version => 20, _type => core/cache.update }
11.11 07:57:56 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 9, _type => core/cache.update }
11.11 07:57:56 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
11.11 07:57:56 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 9, _type => core/user.logoutPost }
11.11 07:57:56 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
11.11 07:57:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid9' AND Password = 'uid9'
11.11 07:57:56 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid9' AND Password = 'uid9', _type => core/server.query }
11.11 07:57:56 -<<-: core/server.query { list => {{ name => uid9, networkid => , isbanned => false, id => 9 }}, errorCode => ok, _type => core/server.query }
11.11 07:57:56 ->>-: core/user.isOnlineID { id => 9, _type => core/user.isOnlineID }
11.11 07:57:56 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
11.11 07:57:56 ->>-: core/cache.get { type => user, v => -1, id => 9, _type => core/cache.get }
11.11 07:57:56 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid9, deleted => false, school => 1, year => null, email => null, networktype =>   , password => uid9, isbanned => false, regdate => 2016-11-11 07:57:55.30687+00, city => 1, language => en, region => 1, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => { addAccess => , regionName => null, addDress => , cityName => null, schoolName => null, friendList => [], addWeapon => , addHeader =>  }, attrs => { level => 1, _lastTime.24hr => 1478851076, lastLoginDate => 316, lastLoadDate => 1112, hints => 15 }, effects => { list => [] } }}, version => 20, id => 9 } }
11.11 07:57:56 ->>-: core/cache.get { type => questdata, v => -1, id => 9, _type => core/cache.get }
11.11 07:57:56 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 9 } }
11.11 07:57:56 NET: Client login (conid:66169048, id:9, name:uid9)
11.11 07:57:56 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 9, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
11.11 07:57:56 -<<-: core/user.loginPost { _type => core/user.loginPost }
11.11 07:57:56 DB: SELECT token FROM tokens WHERE userid = 9
11.11 07:57:56 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 9, _type => core/server.query }
11.11 07:57:56 -<<-: core/server.query { list => {{ token => 14986be1f511949a68de9e64382036dc }, { token => 569ee1bd7f9a2410c3e3f69346e75c33 }}, errorCode => ok, _type => core/server.query }
11.11 07:58:01 STATS: vdl.0 cache, locks:4
11.11 07:58:01 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 9, _type => core/cache.update }
11.11 07:58:01 -<<-: core/cache.update { errorCode => ok, version => 21, _type => core/cache.update }
11.11 07:58:03 ++ NET: uid9 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
11.11 07:58:03 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
11.11 07:58:03 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
11.11 07:58:03 TIME: tournament.getAvailableTournament 2.84 ms
11.11 07:58:04 ++ NET: uid9 req: user.ping { messageType => user.ping, msg => ok }
11.11 07:58:04 TIME: user.ping 0.09 ms
11.11 07:58:24 ++ NET: uid9 req: user.ping { messageType => user.ping, msg => ok }
11.11 07:58:24 TIME: user.ping 0.11 ms
11.11 07:58:28 TIMER: Check auto-disconnect...
11.11 07:58:44 ++ NET: uid9 req: user.ping { messageType => user.ping, msg => ok }
11.11 07:58:44 TIME: user.ping 0.11 ms
11.11 07:59:01 STATS: vdl.0 cache, locks:4
11.11 07:59:04 ++ NET: uid9 req: user.ping { messageType => user.ping, msg => ok }
11.11 07:59:04 TIME: user.ping 0.18 ms
11.11 07:59:28 TIMER: Check auto-disconnect...
