09.10 21:00:09 TIMER: Check auto-disconnect...
09.10 21:00:31 STATS: vdl.0 cache, locks:0
09.10 21:01:09 TIMER: Check auto-disconnect...
09.10 21:01:31 STATS: vdl.0 cache, locks:0
09.10 21:02:09 TIMER: Check auto-disconnect...
09.10 21:02:31 STATS: vdl.0 cache, locks:0
09.10 21:03:09 TIMER: Check auto-disconnect...
09.10 21:03:31 STATS: vdl.0 cache, locks:0
09.10 21:04:09 TIMER: Check auto-disconnect...
09.10 21:04:31 STATS: vdl.0 cache, locks:0
09.10 21:05:09 TIMER: Check auto-disconnect...
09.10 21:05:31 STATS: vdl.0 cache, locks:0
09.10 21:06:09 TIMER: Check auto-disconnect...
09.10 21:06:31 STATS: vdl.0 cache, locks:0
09.10 21:07:09 TIMER: Check auto-disconnect...
09.10 21:07:31 STATS: vdl.0 cache, locks:0
09.10 21:08:28 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
09.10 21:08:28 -<<-: server.login ok
09.10 21:08:28 DB: SELECT * FROM LocalizationStrings
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 TIMER: Starting timer...
09.10 21:08:28 DB: SELECT * FROM GameVars
09.10 21:08:28 TIMER: Timer running...
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
09.10 21:08:28 -<<-: core/quest.getDaily ok
09.10 21:08:28 DB: SELECT * FROM UserAttributeTypes
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM UserVariableTypes
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
09.10 21:08:28 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM ItemGroups
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM Bundles ORDER BY ID
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM BundleItems ORDER BY ID
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 SHOP: loading items...
09.10 21:08:28 ->>-: core/shop.getList { _type => core/shop.getList }
09.10 21:08:28 -<<-: core/shop.getList ok
09.10 21:08:28 SHOP: 0 items loaded (0 sec)
09.10 21:08:28 DB: SELECT * FROM EffectAttributeTypes
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM Effects
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_p09.10 21:08:09 TIMER: Check auto-disconnect...
art('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
09.10 21:08:28 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
09.10 21:08:28 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:28 DB: SELECT * FROM Badges
09.10 21:08:28 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
09.10 21:08:28 -<<-: core/server.query ok
09.10 21:08:43 NET: Client (conid:9524854) connected to vdl.0 (clients:1)
09.10 21:08:43 ++ NET: null req: user.register { game => vdl, password => random56, name => player, messageType => user.register }
09.10 21:08:43 DB: SELECT ID FROM Users WHERE Name = 'player'
09.10 21:08:43 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'player', _type => core/server.query }
09.10 21:08:43 -<<-: core/server.query ok
09.10 21:08:43 DB: SELECT nextval('Users_id_seq') AS id
09.10 21:08:43 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
09.10 21:08:43 -<<-: core/server.query ok
09.10 21:08:43 ->>-: core/user.register { password => random56, name => player, fullParams => { game => vdl, password => random56, name => player, networkid => , networktype => , messageType => user.register, id => 31 }, networkid => , connectionID => 9524854, networktype => , email => , id => 31, _type => core/user.register }
09.10 21:08:43 -<<-: core/user.register ok
09.10 21:08:43 -<<-: core/user.registerResponse null
09.10 21:08:43 DB: SELECT token FROM tokens WHERE userid = 31
09.10 21:08:43 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 31, _type => core/server.query }
09.10 21:08:43 -<<-: core/server.query ok
09.10 21:08:43 == NET: null ret: user.register { type => user.register, errorCode => ok, token => e5a84bab1214f03bfb34aca13498b718 }
09.10 21:08:45 NET: Client (name:null conid:9524854 TCP) disconnected from vdl.0 (clients:0)
09.10 21:08:53 NET: Client (conid:40911911) connected to vdl.0 (clients:1)
09.10 21:08:31 STATS: vdl.0 cache, locks:0
09.10 21:08:54 ++ NET: null req: user.register { game => vdl, password => random78, name => player, messageType => user.register }
09.10 21:08:54 DB: SELECT ID FROM Users WHERE Name = 'player'
09.10 21:08:54 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'player', _type => core/server.query }
09.10 21:08:54 -<<-: core/server.query ok
09.10 21:08:54 DB: SELECT nextval('Users_id_seq') AS id
09.10 21:08:54 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
09.10 21:08:54 -<<-: core/server.query { list => {{ id => 32 }}, errorCode => ok, _type => core/server.query }
09.10 21:08:54 ->>-: core/user.register { password => random78, name => player, fullParams => { game => vdl, password => random78, name => player, networkid => , networktype => , messageType => user.register, id => 32 }, networkid => , connectionID => 40911911, networktype => , email => , id => 32, _type => core/user.register }
09.10 21:08:54 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
09.10 21:08:54 -<<-: core/user.registerResponse { password => random78, name => player, _isNotify => true, fullParams => { game => vdl, password => random78, name => player, networkid => , networktype => , messageType => user.register, id => 32 }, networkid => , connectionID => 40911911, networktype => , email => , id => 32, _type => core/user.registerResponse }
09.10 21:08:54 DB: SELECT token FROM tokens WHERE userid = 32
09.10 21:08:54 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 32, _type => core/server.query }
09.10 21:08:54 -<<-: core/server.query { list => {{ token => 645ddad61d44035dbfbf481fb4af20f5 }}, errorCode => ok, _type => core/server.query }
09.10 21:08:54 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 645ddad61d44035dbfbf481fb4af20f5 }
09.10 21:09:09 TIMER: Check auto-disconnect...
09.10 21:09:31 STATS: vdl.0 cache, locks:0
09.10 21:10:09 TIMER: Check auto-disconnect...
09.10 21:10:31 STATS: vdl.0 cache, locks:0
09.10 21:11:09 TIMER: Check auto-disconnect...
09.10 21:09:28 TIMER: Check auto-disconnect...
09.10 21:09:28 STATS: vdl.0 cache, locks:0
09.10 21:09:28 TIMER: Check auto-disconnect...
09.10 21:09:28 STATS: vdl.0 cache, locks:0
09.10 21:09:28 TIMER: Check auto-disconnect...
09.10 21:09:28 STATS: vdl.0 cache, locks:0
09.10 21:11:41 NET: Client (name:null conid:40911911 TCP) disconnected from vdl.0 (clients:0)
09.10 21:11:52 NET: Client (conid:68365980) connected to vdl.0 (clients:1)
09.10 21:11:53 ++ NET: null req: user.register { game => vdl, password => random28, name => player, messageType => user.register }
09.10 21:11:53 DB: SELECT ID FROM Users WHERE Name = 'player'
09.10 21:11:53 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'player', _type => core/server.query }
09.10 21:11:53 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
09.10 21:11:53 STATS: vdl.0 cache connection, 29 calls, total 0.0274944305419922 sec spent, avg 0.95 ms
09.10 21:11:53 DB: SELECT nextval('Users_id_seq') AS id
09.10 21:11:53 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
09.10 21:11:53 -<<-: core/server.query { list => {{ id => 33 }}, errorCode => ok, _type => core/server.query }
09.10 21:11:53 ->>-: core/user.register { password => random28, name => player, fullParams => { game => vdl, password => random28, name => player, networkid => , networktype => , messageType => user.register, id => 33 }, networkid => , connectionID => 68365980, networktype => , email => , id => 33, _type => core/user.register }
09.10 21:11:53 -<<-: core/user.register { errorCode => ok, _type => core/user.register }
09.10 21:11:53 -<<-: core/user.registerResponse { password => random28, name => player, _isNotify => true, fullParams => { game => vdl, password => random28, name => player, networkid => , networktype => , messageType => user.register, id => 33 }, networkid => , connectionID => 68365980, networktype => , email => , id => 33, _type => core/user.registerResponse }
09.10 21:11:53 DB: SELECT token FROM tokens WHERE userid = 33
09.10 21:11:53 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 33, _type => core/server.query }
09.10 21:11:53 -<<-: core/server.query { list => {{ token => 2a08a8a25cedf2ef8ce68988f53fece4 }}, errorCode => ok, _type => core/server.query }
09.10 21:11:53 == NET: null ret: user.register { type => user.register, errorCode => ok, token => 2a08a8a25cedf2ef8ce68988f53fece4 }
09.10 21:11:54 ++ NET: null req: user.login { type => token, messageType => user.login, token => 2a08a8a25cedf2ef8ce68988f53fece4 }
09.10 21:11:54 DB: SELECT name, password FROM users WHERE id = (select userid from tokens where token = '2a08a8a25cedf2ef8ce68988f53fece4')
09.10 21:11:54 ->>-: core/server.query { q => SELECT name, password FROM users WHERE id = (select userid from tokens where token = '2a08a8a25cedf2ef8ce68988f53fece4'), _type => core/server.query }
09.10 21:11:54 -<<-: core/server.query { list => {{ password => random28, name => player33 }}, errorCode => ok, _type => core/server.query }
09.10 21:11:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'player33' AND Password = 'random28'
09.10 21:11:54 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'player33' AND Password = 'random28', _type => core/server.query }
09.10 21:11:54 -<<-: core/server.query { list => {{ name => player33, networkid => , isbanned => false, id => 33 }}, errorCode => ok, _type => core/server.query }
09.10 21:11:54 ->>-: core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
09.10 21:11:54 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
09.10 21:11:54 ->>-: core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
09.10 21:11:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {chemrating => 0, biorating => 0, networktype =>   , level => 0, sex => male, networkid => , skinbase => {"body_skin": 1, "head_skin": 1, "hair": 1, "eyes": 1, "mouth": 1}, informaticrating => 0, isbanned => false, params => { inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }, name => player33, skinaddavaliable => {"head : null; dress : null; weapon : null; acess : null"}, deleted => false, historyrating => 0, school => 1, rang => 0, georating => 0, password => random28, language =>   , region => 1, skinadditional => {"head": 0, "dress": 0, "acces": 0, "weapon": 0}, rangname => новичок                       , rusrating => 0, email => mail, mathrating => 0, regdate => 2016-10-09 21:11:53.630508+00, expirience => 0, city => 1, physrating => 0}, version => 1, id => 33 } }
09.10 21:11:54 ->>-: core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
09.10 21:11:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 33 } }
09.10 21:11:54 NET: Client login (conid:68365980, id:33, name:player33)
09.10 21:11:54 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 178.204.232.197 }
09.10 21:11:54 -<<-: core/user.loginPost { _type => core/user.loginPost }
09.10 21:11:54 DB: SELECT token FROM tokens WHERE userid = 33
09.10 21:11:54 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 33, _type => core/server.query }
09.10 21:11:54 -<<-: core/server.query { list => {{ token => 2a08a8a25cedf2ef8ce68988f53fece4 }}, errorCode => ok, _type => core/server.query }
09.10 21:11:54 DB: SELECT ID FROM TempUserLogins WHERE UserID = 33 AND Date = 'today'::timestamp
09.10 21:11:54 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 33 AND Date = 'today'::timestamp, _type => core/server.query }
09.10 21:11:54 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
09.10 21:11:54 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (33, 'today'::timestamp)
09.10 21:11:54 == NET: player33 ret: user.login { name => player33, type => user.login, errorCode => ok, id => 33, token => 2a08a8a25cedf2ef8ce68988f53fece4 }
09.10 21:11:54 == NET: player33 ret: user.join { name => player33, type => user.join }
09.10 21:11:54 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (33, 'today'::timestamp), _type => core/server.pending }} }
09.10 21:11:54 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
09.10 21:11:31 STATS: vdl.0 cache, locks:0
09.10 21:12:03 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476047514, lastLoginDate => 283, lastLoadDate => 1010 } }}, type => user, unlock => false, id => 33, _type => core/cache.update }
09.10 21:12:03 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
09.10 21:12:09 TIMER: Check auto-disconnect...
09.10 21:12:31 STATS: vdl.0 cache, locks:0
09.10 21:13:09 TIMER: Check auto-disconnect...
09.10 21:13:31 STATS: vdl.0 cache, locks:0
09.10 21:14:09 TIMER: Check auto-disconnect...
09.10 21:12:28 TIMER: Check auto-disconnect...
09.10 21:12:28 STATS: vdl.0 cache, locks:2
09.10 21:12:28 TIMER: Check auto-disconnect...
09.10 21:12:28 STATS: vdl.0 cache, locks:2
09.10 21:12:28 TIMER: Check auto-disconnect...
09.10 21:12:28 STATS: vdl.0 cache, locks:2
09.10 21:14:32 NET: Client (name:player33 conid:68365980 TCP) disconnected from vdl.0 (clients:0)
09.10 21:14:32 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
09.10 21:14:32 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
09.10 21:14:32 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
09.10 21:14:32 STATS: vdl.0 cache connection, 43 calls, total 0.0396876335144043 sec spent, avg 0.92 ms
09.10 21:14:32 ->>-: vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
09.10 21:14:32 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
09.10 21:14:32 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
09.10 21:14:32 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
09.10 21:14:32 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
09.10 21:14:32 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
09.10 21:14:32 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
09.10 21:14:32 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
09.10 21:14:40 NET: Client (conid:14060912) connected to vdl.0 (clients:1)
09.10 21:14:41 ++ NET: null req: user.login { type => token, messageType => user.login, token => 2a08a8a25cedf2ef8ce68988f53fece4 }
09.10 21:14:41 DB: SELECT name, password FROM users WHERE id = (select userid from tokens where token = '2a08a8a25cedf2ef8ce68988f53fece4')
09.10 21:14:41 ->>-: core/server.query { q => SELECT name, password FROM users WHERE id = (select userid from tokens where token = '2a08a8a25cedf2ef8ce68988f53fece4'), _type => core/server.query }
09.10 21:14:41 -<<-: core/server.query { list => {{ password => random28, name => player33 }}, errorCode => ok, _type => core/server.query }
09.10 21:14:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'player33' AND Password = 'random28'
09.10 21:14:41 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'player33' AND Password = 'random28', _type => core/server.query }
09.10 21:14:41 -<<-: core/server.query { list => {{ name => player33, networkid => , isbanned => false, id => 33 }}, errorCode => ok, _type => core/server.query }
09.10 21:14:41 ->>-: core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
09.10 21:14:41 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
09.10 21:14:41 ->>-: core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
09.10 21:14:41 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {chemrating => 0, biorating => 0, networktype =>   , level => 0, sex => male, networkid => , skinbase => {"body_skin": 1, "head_skin": 1, "hair": 1, "eyes": 1, "mouth": 1}, informaticrating => 0, isbanned => false, params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476047514, lastLoginDate => 283, lastLoadDate => 1010 }, effects => { list => [] } }, name => player33, skinaddavaliable => {"head : null; dress : null; weapon : null; acess : null"}, deleted => false, historyrating => 0, school => 1, rang => 0, georating => 0, password => random28, language => en, region => 1, skinadditional => {"head": 0, "dress": 0, "acces": 0, "weapon": 0}, rangname => новичок                       , rusrating => 0, email => mail, mathrating => 0, regdate => 2016-10-09 21:11:53.630508+00, expirience => 0, city => 1, physrating => 0}, version => 3, id => 33 } }
09.10 21:14:41 ->>-: core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
09.10 21:14:41 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 33 } }
09.10 21:14:41 NET: Client login (conid:14060912, id:33, name:player33)
09.10 21:14:41 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 178.204.232.197 }
09.10 21:14:41 -<<-: core/user.loginPost { _type => core/user.loginPost }
09.10 21:14:41 DB: SELECT token FROM tokens WHERE userid = 33
09.10 21:14:41 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 33, _type => core/server.query }
09.10 21:14:41 -<<-: core/server.query { list => {{ token => 2a08a8a25cedf2ef8ce68988f53fece4 }}, errorCode => ok, _type => core/server.query }
09.10 21:14:41 == NET: player33 ret: user.login { name => player33, type => user.login, errorCode => ok, id => 33, token => 2a08a8a25cedf2ef8ce68988f53fece4 }
09.10 21:14:41 == NET: player33 ret: user.join { name => player33, type => user.join }
09.10 21:14:48 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
09.10 21:14:48 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
09.10 21:14:31 STATS: vdl.0 cache, locks:0
09.10 21:14:49 ++ NET: player33 req: battle.find { messageType => battle.find }
09.10 21:14:49 ->>-: vdl/cache.battle.find { _type => vdl/cache.battle.find }
09.10 21:14:49 -<<-: vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
09.10 21:14:49 ->>-: vdl/cache.battle.create { selfId => 33, _type => vdl/cache.battle.create }
09.10 21:14:49 -<<-: vdl/cache.battle.create { room => 76, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
09.10 21:14:49 TIME: battle.find 7.99 ms
09.10 21:14:49 == NET: player33 ret: battle.find { room => 76, type => battle.find, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
09.10 21:15:09 TIMER: Check auto-disconnect...
09.10 21:15:31 STATS: vdl.0 cache, locks:0
09.10 21:16:09 TIMER: Check auto-disconnect...
09.10 21:16:31 STATS: vdl.0 cache, locks:0
09.10 21:17:09 TIMER: Check auto-disconnect...
09.10 21:17:31 STATS: vdl.0 cache, locks:0
09.10 21:18:09 TIMER: Check auto-disconnect...
09.10 21:18:31 STATS: vdl.0 cache, locks:0
09.10 21:19:09 TIMER: Check auto-disconnect...
09.10 21:19:31 STATS: vdl.0 cache, locks:0
09.10 21:20:09 TIMER: Check auto-disconnect...
09.10 21:20:31 STATS: vdl.0 cache, locks:0
09.10 21:21:09 TIMER: Check auto-disconnect...
09.10 21:21:31 STATS: vdl.0 cache, locks:0
09.10 21:22:09 TIMER: Check auto-disconnect...
09.10 21:22:31 STATS: vdl.0 cache, locks:0
09.10 21:23:09 TIMER: Check auto-disconnect...
09.10 21:23:31 STATS: vdl.0 cache, locks:0
09.10 21:24:09 TIMER: Check auto-disconnect...
09.10 21:24:31 STATS: vdl.0 cache, locks:0
09.10 21:25:09 TIMER: Check auto-disconnect...
09.10 21:25:31 STATS: vdl.0 cache, locks:0
09.10 21:26:09 TIMER: Check auto-disconnect...
09.10 21:26:31 STATS: vdl.0 cache, locks:0
09.10 21:27:09 TIMER: Check auto-disconnect...
09.10 21:27:31 STATS: vdl.0 cache, locks:0
09.10 21:28:09 TIMER: Check auto-disconnect...
09.10 21:28:31 STATS: vdl.0 cache, locks:0
09.10 21:29:09 TIMER: Check auto-disconnect...
09.10 21:29:31 STATS: vdl.0 cache, locks:0
09.10 21:30:09 TIMER: Check auto-disconnect...
09.10 21:30:31 STATS: vdl.0 cache, locks:0
09.10 21:31:09 TIMER: Check auto-disconnect...
09.10 21:31:31 STATS: vdl.0 cache, locks:0
09.10 21:32:09 TIMER: Check auto-disconnect...
09.10 21:32:31 STATS: vdl.0 cache, locks:0
09.10 21:33:09 TIMER: Check auto-disconnect...
09.10 21:33:31 STATS: vdl.0 cache, locks:0
09.10 21:34:09 TIMER: Check auto-disconnect...
09.10 21:34:31 STATS: vdl.0 cache, locks:0
09.10 21:35:09 TIMER: Check auto-disconnect...
09.10 21:35:31 STATS: vdl.0 cache, locks:0
09.10 21:36:09 TIMER: Check auto-disconnect...
09.10 21:36:31 STATS: vdl.0 cache, locks:0
09.10 21:37:09 TIMER: Check auto-disconnect...
09.10 21:37:31 STATS: vdl.0 cache, locks:0
09.10 21:38:09 TIMER: Check auto-disconnect...
09.10 21:38:31 STATS: vdl.0 cache, locks:0
09.10 21:39:09 TIMER: Check auto-disconnect...
09.10 21:39:31 STATS: vdl.0 cache, locks:0
09.10 21:40:09 TIMER: Check auto-disconnect...
09.10 21:40:31 STATS: vdl.0 cache, locks:0
09.10 21:41:09 TIMER: Check auto-disconnect...
09.10 21:41:31 STATS: vdl.0 cache, locks:0
09.10 21:42:09 TIMER: Check auto-disconnect...
09.10 21:42:31 STATS: vdl.0 cache, locks:0
09.10 21:43:09 TIMER: Check auto-disconnect...
09.10 21:43:31 STATS: vdl.0 cache, locks:0
09.10 21:44:09 TIMER: Check auto-disconnect...
09.10 21:44:31 STATS: vdl.0 cache, locks:0
09.10 21:45:09 TIMER: Check auto-disconnect...
09.10 21:45:31 STATS: vdl.0 cache, locks:0
09.10 21:46:09 TIMER: Check auto-disconnect...
09.10 21:46:31 STATS: vdl.0 cache, locks:0
09.10 21:47:09 TIMER: Check auto-disconnect...
09.10 21:47:31 STATS: vdl.0 cache, locks:0
09.10 21:48:09 TIMER: Check auto-disconnect...
09.10 21:48:31 STATS: vdl.0 cache, locks:0
09.10 21:49:09 TIMER: Check auto-disconnect...
09.10 21:49:31 STATS: vdl.0 cache, locks:0
09.10 21:50:09 TIMER: Check auto-disconnect...
09.10 21:50:31 STATS: vdl.0 cache, locks:0
09.10 21:51:09 TIMER: Check auto-disconnect...
09.10 21:51:31 STATS: vdl.0 cache, locks:0
09.10 21:52:09 TIMER: Check auto-disconnect...
09.10 21:52:31 STATS: vdl.0 cache, locks:0
09.10 21:53:09 TIMER: Check auto-disconnect...
09.10 21:53:31 STATS: vdl.0 cache, locks:0
09.10 21:54:09 TIMER: Check auto-disconnect...
09.10 21:54:31 STATS: vdl.0 cache, locks:0
09.10 21:55:09 TIMER: Check auto-disconnect...
09.10 21:55:31 STATS: vdl.0 cache, locks:0
09.10 21:56:09 TIMER: Check auto-disconnect...
09.10 21:56:31 STATS: vdl.0 cache, locks:0
09.10 21:57:09 TIMER: Check auto-disconnect...
09.10 21:57:31 STATS: vdl.0 cache, locks:0
09.10 21:58:09 TIMER: Check auto-disconnect...
09.10 21:58:31 STATS: vdl.0 cache, locks:0
09.10 21:59:09 TIMER: Check auto-disconnect...
09.10 21:59:31 STATS: vdl.0 cache, locks:0
