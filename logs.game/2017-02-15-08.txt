15.02 08:00:07 STATS: vdl.0 cache, locks:2
15.02 08:00:48 TIMER: Check auto-disconnect...
15.02 08:01:07 STATS: vdl.0 cache, locks:2
15.02 08:01:48 TIMER: Check auto-disconnect...
15.02 08:02:07 STATS: vdl.0 cache, locks:2
15.02 08:02:48 TIMER: Check auto-disconnect...
15.02 08:03:07 STATS: vdl.0 cache, locks:2
15.02 08:03:48 TIMER: Check auto-disconnect...
15.02 08:04:07 STATS: vdl.0 cache, locks:2
15.02 08:04:48 TIMER: Check auto-disconnect...
15.02 08:05:07 STATS: vdl.0 cache, locks:2
15.02 08:05:48 TIMER: Check auto-disconnect...
15.02 08:06:07 STATS: vdl.0 cache, locks:2
15.02 08:06:48 TIMER: Check auto-disconnect...
15.02 08:07:07 STATS: vdl.0 cache, locks:2
15.02 08:07:48 TIMER: Check auto-disconnect...
15.02 08:08:07 STATS: vdl.0 cache, locks:2
15.02 08:08:48 TIMER: Check auto-disconnect...
15.02 08:09:07 STATS: vdl.0 cache, locks:2
15.02 08:09:48 TIMER: Check auto-disconnect...
15.02 08:10:07 STATS: vdl.0 cache, locks:2
15.02 08:10:48 TIMER: Check auto-disconnect...
15.02 08:11:07 STATS: vdl.0 cache, locks:2
15.02 08:11:48 TIMER: Check auto-disconnect...
15.02 08:12:07 STATS: vdl.0 cache, locks:2
15.02 08:12:48 TIMER: Check auto-disconnect...
15.02 08:13:07 STATS: vdl.0 cache, locks:2
15.02 08:13:48 TIMER: Check auto-disconnect...
15.02 08:14:07 STATS: vdl.0 cache, locks:2
15.02 08:14:48 TIMER: Check auto-disconnect...
15.02 08:15:07 STATS: vdl.0 cache, locks:2
15.02 08:15:48 TIMER: Check auto-disconnect...
15.02 08:16:07 STATS: vdl.0 cache, locks:2
15.02 08:16:48 TIMER: Check auto-disconnect...
15.02 08:17:07 STATS: vdl.0 cache, locks:2
15.02 08:17:48 TIMER: Check auto-disconnect...
15.02 08:18:07 STATS: vdl.0 cache, locks:2
15.02 08:18:48 TIMER: Check auto-disconnect...
15.02 08:19:07 STATS: vdl.0 cache, locks:2
15.02 08:19:48 TIMER: Check auto-disconnect...
15.02 08:20:07 STATS: vdl.0 cache, locks:2
15.02 08:20:48 TIMER: Check auto-disconnect...
15.02 08:21:07 STATS: vdl.0 cache, locks:2
15.02 08:21:48 TIMER: Check auto-disconnect...
15.02 08:22:07 STATS: vdl.0 cache, locks:2
15.02 08:22:48 TIMER: Check auto-disconnect...
15.02 08:23:07 STATS: vdl.0 cache, locks:2
15.02 08:23:48 TIMER: Check auto-disconnect...
15.02 08:24:07 STATS: vdl.0 cache, locks:2
15.02 08:24:48 TIMER: Check auto-disconnect...
15.02 08:25:07 STATS: vdl.0 cache, locks:2
15.02 08:25:48 TIMER: Check auto-disconnect...
15.02 08:26:08 STATS: vdl.0 cache, locks:2
15.02 08:26:48 TIMER: Check auto-disconnect...
15.02 08:27:08 STATS: vdl.0 cache, locks:2
15.02 08:27:48 TIMER: Check auto-disconnect...
15.02 08:28:08 STATS: vdl.0 cache, locks:2
15.02 08:28:48 TIMER: Check auto-disconnect...
15.02 08:29:08 STATS: vdl.0 cache, locks:2
15.02 08:29:48 TIMER: Check auto-disconnect...
15.02 08:30:08 STATS: vdl.0 cache, locks:2
15.02 08:30:48 TIMER: Check auto-disconnect...
15.02 08:31:08 STATS: vdl.0 cache, locks:2
15.02 08:31:48 TIMER: Check auto-disconnect...
15.02 08:32:08 STATS: vdl.0 cache, locks:2
15.02 08:32:48 TIMER: Check auto-disconnect...
15.02 08:33:08 STATS: vdl.0 cache, locks:2
15.02 08:33:48 TIMER: Check auto-disconnect...
15.02 08:34:08 STATS: vdl.0 cache, locks:2
15.02 08:34:48 TIMER: Check auto-disconnect...
15.02 08:35:08 STATS: vdl.0 cache, locks:2
15.02 08:35:48 TIMER: Check auto-disconnect...
15.02 08:36:08 STATS: vdl.0 cache, locks:2
15.02 08:36:48 TIMER: Check auto-disconnect...
15.02 08:37:08 STATS: vdl.0 cache, locks:2
15.02 08:37:48 TIMER: Check auto-disconnect...
15.02 08:38:08 STATS: vdl.0 cache, locks:2
15.02 08:38:48 TIMER: Check auto-disconnect...
15.02 08:39:08 STATS: vdl.0 cache, locks:2
15.02 08:39:48 TIMER: Check auto-disconnect...
15.02 08:40:08 STATS: vdl.0 cache, locks:2
15.02 08:40:35 NET: Client (conid:50556608) connected to vdl.0 (clients:1)
15.02 08:40:36 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
15.02 08:40:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
15.02 08:40:36 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
15.02 08:40:36 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
15.02 08:40:36 STATS: vdl.0 cache connection, 1284 calls, total 0.890457391738892 sec spent, avg 0.69 ms
15.02 08:40:36 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
15.02 08:40:36 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
15.02 08:40:36 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
15.02 08:40:36 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487160381, lastLoginDate => 46, lastLoadDate => 216 }, effects => { list => [] } }}, version => 0, id => 60 } }
15.02 08:40:36 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
15.02 08:40:36 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
15.02 08:40:36 NET: Client login (conid:50556608, id:60, name:uid60)
15.02 08:40:36 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
15.02 08:40:36 -<<-: core/user.loginPost { _type => core/user.loginPost }
15.02 08:40:36 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
15.02 08:40:36 == NET: uid60 ret: user.join { name => uid60, type => user.join }
15.02 08:40:42 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:40:42 TIME: user.ping 0.16 ms
15.02 08:40:42 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:40:43 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
15.02 08:40:43 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
15.02 08:40:48 TIMER: Check auto-disconnect...
15.02 08:41:03 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:41:03 TIME: user.ping 0.07 ms
15.02 08:41:03 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:41:08 STATS: vdl.0 cache, locks:4
15.02 08:41:26 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:41:26 TIME: user.ping 0.12 ms
15.02 08:41:26 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:41:47 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:41:47 TIME: user.ping 0.18 ms
15.02 08:41:47 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:41:48 TIMER: Check auto-disconnect...
15.02 08:42:08 STATS: vdl.0 cache, locks:4
15.02 08:42:10 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:42:10 TIME: user.ping 0.16 ms
15.02 08:42:10 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:42:35 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:42:35 TIME: user.ping 0.11 ms
15.02 08:42:35 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:42:48 TIMER: Check auto-disconnect...
15.02 08:42:55 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:42:55 TIME: user.ping 0.19 ms
15.02 08:42:55 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:43:08 STATS: vdl.0 cache, locks:4
15.02 08:43:16 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:43:16 TIME: user.ping 0.14 ms
15.02 08:43:16 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:43:36 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:43:36 TIME: user.ping 0.12 ms
15.02 08:43:36 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:43:48 TIMER: Check auto-disconnect...
15.02 08:43:56 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:43:56 TIME: user.ping 0.18 ms
15.02 08:43:56 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:44:08 STATS: vdl.0 cache, locks:4
15.02 08:44:17 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:44:17 TIME: user.ping 0.16 ms
15.02 08:44:17 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:44:38 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:44:38 TIME: user.ping 0.13 ms
15.02 08:44:38 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:44:48 TIMER: Check auto-disconnect...
15.02 08:44:58 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:44:58 TIME: user.ping 0.12 ms
15.02 08:44:58 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:45:08 STATS: vdl.0 cache, locks:4
15.02 08:45:18 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:45:18 TIME: user.ping 0.12 ms
15.02 08:45:18 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:45:38 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:45:38 TIME: user.ping 0.12 ms
15.02 08:45:38 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:45:48 TIMER: Check auto-disconnect...
15.02 08:45:58 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:45:58 TIME: user.ping 0.13 ms
15.02 08:45:58 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:46:08 STATS: vdl.0 cache, locks:4
15.02 08:46:19 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:46:19 TIME: user.ping 0.57 ms
15.02 08:46:19 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:46:39 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:46:39 TIME: user.ping 0.16 ms
15.02 08:46:39 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:46:48 TIMER: Check auto-disconnect...
15.02 08:46:59 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:46:59 TIME: user.ping 0.12 ms
15.02 08:46:59 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:47:08 STATS: vdl.0 cache, locks:4
15.02 08:47:19 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:47:19 TIME: user.ping 0.14 ms
15.02 08:47:19 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:47:39 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:47:39 TIME: user.ping 0.11 ms
15.02 08:47:39 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:47:48 TIMER: Check auto-disconnect...
15.02 08:47:59 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:47:59 TIME: user.ping 0.19 ms
15.02 08:47:59 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:48:08 STATS: vdl.0 cache, locks:4
15.02 08:48:19 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:48:19 TIME: user.ping 0.11 ms
15.02 08:48:19 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:48:40 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:48:40 TIME: user.ping 0.07 ms
15.02 08:48:40 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:48:48 TIMER: Check auto-disconnect...
15.02 08:49:00 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:49:00 TIME: user.ping 0.12 ms
15.02 08:49:00 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:49:08 STATS: vdl.0 cache, locks:4
15.02 08:49:21 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:49:21 TIME: user.ping 0.12 ms
15.02 08:49:21 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:49:41 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:49:41 TIME: user.ping 0.16 ms
15.02 08:49:41 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:49:48 TIMER: Check auto-disconnect...
15.02 08:50:02 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:50:02 TIME: user.ping 8.71 ms
15.02 08:50:02 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:50:08 STATS: vdl.0 cache, locks:4
15.02 08:50:21 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:50:21 TIME: user.ping 0.18 ms
15.02 08:50:21 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:50:41 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:50:41 TIME: user.ping 0.13 ms
15.02 08:50:41 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:50:48 TIMER: Check auto-disconnect...
15.02 08:51:00 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:51:00 TIME: user.ping 0.11 ms
15.02 08:51:00 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:51:08 STATS: vdl.0 cache, locks:4
15.02 08:51:20 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:51:20 TIME: user.ping 0.11 ms
15.02 08:51:20 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:51:40 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:51:40 TIME: user.ping 0.14 ms
15.02 08:51:40 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:51:48 TIMER: Check auto-disconnect...
15.02 08:51:59 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:51:59 TIME: user.ping 0.27 ms
15.02 08:51:59 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:52:08 STATS: vdl.0 cache, locks:4
15.02 08:52:19 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:52:19 TIME: user.ping 0.15 ms
15.02 08:52:19 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:52:39 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:52:39 TIME: user.ping 0.22 ms
15.02 08:52:39 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:52:48 TIMER: Check auto-disconnect...
15.02 08:52:58 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:52:58 TIME: user.ping 0.15 ms
15.02 08:52:58 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:53:08 STATS: vdl.0 cache, locks:4
15.02 08:53:18 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:53:18 TIME: user.ping 0.12 ms
15.02 08:53:18 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:53:38 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:53:38 TIME: user.ping 0.11 ms
15.02 08:53:38 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:53:48 TIMER: Check auto-disconnect...
15.02 08:53:57 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:53:57 TIME: user.ping 0.11 ms
15.02 08:53:57 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:54:08 STATS: vdl.0 cache, locks:4
15.02 08:54:17 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:54:17 TIME: user.ping 0.1 ms
15.02 08:54:17 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:54:37 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:54:37 TIME: user.ping 0.12 ms
15.02 08:54:37 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:54:48 TIMER: Check auto-disconnect...
15.02 08:54:57 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:54:57 TIME: user.ping 0.12 ms
15.02 08:54:57 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:55:08 STATS: vdl.0 cache, locks:4
15.02 08:55:16 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:55:16 TIME: user.ping 0.16 ms
15.02 08:55:16 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:55:35 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:55:35 TIME: user.ping 0.31 ms
15.02 08:55:35 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:55:48 TIMER: Check auto-disconnect...
15.02 08:55:54 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:55:54 TIME: user.ping 0.2 ms
15.02 08:55:54 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:56:08 STATS: vdl.0 cache, locks:4
15.02 08:56:13 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:56:13 TIME: user.ping 0.11 ms
15.02 08:56:13 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:56:33 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:56:33 TIME: user.ping 0.16 ms
15.02 08:56:33 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:56:48 TIMER: Check auto-disconnect...
15.02 08:56:52 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:56:52 TIME: user.ping 0.13 ms
15.02 08:56:52 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:57:08 STATS: vdl.0 cache, locks:4
15.02 08:57:11 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:57:11 TIME: user.ping 0.16 ms
15.02 08:57:11 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:57:31 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:57:31 TIME: user.ping 0.12 ms
15.02 08:57:31 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:57:48 TIMER: Check auto-disconnect...
15.02 08:57:50 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:57:50 TIME: user.ping 0.14 ms
15.02 08:57:50 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:58:08 STATS: vdl.0 cache, locks:4
15.02 08:58:10 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:58:10 TIME: user.ping 0.12 ms
15.02 08:58:10 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:58:29 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:58:29 TIME: user.ping 0.12 ms
15.02 08:58:29 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:58:48 TIMER: Check auto-disconnect...
15.02 08:58:48 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:58:48 TIME: user.ping 0.12 ms
15.02 08:58:48 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:59:07 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:59:07 TIME: user.ping 0.17 ms
15.02 08:59:07 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:59:08 STATS: vdl.0 cache, locks:4
15.02 08:59:26 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:59:26 TIME: user.ping 0.12 ms
15.02 08:59:26 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:59:46 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
15.02 08:59:46 TIME: user.ping 0.1 ms
15.02 08:59:46 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
15.02 08:59:48 TIMER: Check auto-disconnect...
