20.12 11:14:54 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
20.12 11:14:54 -<<-: server.login ok
20.12 11:14:54 DB: SELECT * FROM LocalizationStrings
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 TIMER: Starting timer...
20.12 11:14:54 TIMER: Timer running...
20.12 11:14:54 DB: SELECT * FROM GameVars
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
20.12 11:14:54 -<<-: core/quest.getDaily ok
20.12 11:14:54 DB: SELECT * FROM UserAttributeTypes
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM UserVariableTypes
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.12 11:14:54 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM ItemGroups
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM Bundles ORDER BY ID
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM BundleItems ORDER BY ID
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 SHOP: loading items...
20.12 11:14:54 ->>-: core/shop.getList { _type => core/shop.getList }
20.12 11:14:54 -<<-: core/shop.getList ok
20.12 11:14:54 SHOP: 0 items loaded (0.001 sec)
20.12 11:14:54 DB: SELECT * FROM EffectAttributeTypes
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM Effects
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
20.12 11:14:54 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
20.12 11:14:54 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 DB: SELECT * FROM Badges
20.12 11:14:54 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
20.12 11:14:54 -<<-: core/server.query ok
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:14:54 TIMER: Check auto-disconnect...
20.12 11:14:54 STATS: vdl.0 cache, locks:0
20.12 11:26:37 NET: Client (conid:38237653) connected to vdl.0 (clients:1)
20.12 11:26:38 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:26:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:26:38 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:26:38 -<<-: core/server.query ok
20.12 11:26:38 STATS: vdl.0 cache connection, 21 calls, total 0.0244209766387939 sec spent, avg 1.16 ms
20.12 11:26:38 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:26:38 -<<-: core/user.isOnlineID ok
20.12 11:26:38 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:26:38 -<<-: core/cache.get ok
20.12 11:26:38 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:26:38 -<<-: core/cache.get ok
20.12 11:26:38 NET: Client login (conid:38237653, id:112, name:uid112)
20.12 11:26:38 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:26:38 -<<-: core/user.loginPost null
20.12 11:26:38 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:26:38 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:26:38 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:26:38 DB: SELECT ID FROM TempUserLogins WHERE UserID = 112 AND Date = 'today'::timestamp
20.12 11:26:38 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 112 AND Date = 'today'::timestamp, _type => core/server.query }
20.12 11:26:38 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:26:38 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (112, 'today'::timestamp)
20.12 11:26:38 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:26:38 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:26:38 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (112, 'today'::timestamp), _type => core/server.pending }} }
20.12 11:26:38 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
20.12 11:26:38 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:26:38 TIME: user.ping 0.12 ms
20.12 11:26:38 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:26:44 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 } }}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:26:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.12 11:26:54 TIMER: Check auto-disconnect...
20.12 11:26:54 STATS: vdl.0 cache, locks:2
20.12 11:27:01 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:27:01 TIME: user.ping 0.13 ms
20.12 11:27:01 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:27:24 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:27:24 TIME: user.ping 0.14 ms
20.12 11:27:24 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:27:50 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:27:50 NET: Client (name:uid112 conid:38237653 TCP) disconnected from vdl.0 (clients:0)
20.12 11:27:50 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:27:50 TIME: user.ping 0.15 ms
20.12 11:27:50 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:27:50 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:27:50 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:27:50 STATS: vdl.0 cache connection, 30 calls, total 0.0357739925384521 sec spent, avg 1.19 ms
20.12 11:27:50 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:27:50 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:27:50 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:27:50 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:27:50 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:27:50 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.12 11:27:50 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:27:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.12 11:27:50 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:27:50 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:27:54 TIMER: Check auto-disconnect...
20.12 11:27:54 STATS: vdl.0 cache, locks:0
20.12 11:27:59 NET: Client (conid:9543044) connected to vdl.0 (clients:1)
20.12 11:27:59 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:27:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:27:59 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:27:59 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:27:59 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:27:59 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:27:59 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:27:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 2, id => 112 } }
20.12 11:27:59 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:27:59 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 112 } }
20.12 11:27:59 NET: Client login (conid:9543044, id:112, name:uid112)
20.12 11:27:59 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:27:59 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:27:59 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:27:59 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:27:59 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:27:59 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:27:59 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:28:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:28:04 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.12 11:28:05 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:28:05 TIME: user.ping 0.16 ms
20.12 11:28:05 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:28:10 ++ NET: uid112 req: user.searchEnemy { name => uid, messageType => user.searchEnemy }
20.12 11:28:10 ->>-: vdl/cache.user.searchEnemy { name => uid, id => 112, _type => vdl/cache.user.searchEnemy }
20.12 11:28:10 -<<-: vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid44, isOnline => false, id => 44 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid127, isOnline => false, id => 127 },{ name => uid132, isOnline => false, id => 132 }] }
20.12 11:28:10 TIME: user.searchEnemy 2.43 ms
20.12 11:28:10 == NET: uid112 ret: user.searchEnemy { list => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid44, isOnline => false, id => 44 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid127, isOnline => false, id => 127 },{ name => uid132, isOnline => false, id => 132 }], type => user.searchEnemy, errorCode => ok }
20.12 11:28:13 NET: Client (name:uid112 conid:9543044 TCP) disconnected from vdl.0 (clients:0)
20.12 11:28:13 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:28:13 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:28:13 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:28:13 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:28:13 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:28:13 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:28:13 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:28:13 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:28:13 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.12 11:28:13 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:28:13 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.12 11:28:13 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:28:13 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:28:16 NET: Client (conid:31363903) connected to vdl.0 (clients:1)
20.12 11:28:19 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:28:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:28:19 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:28:19 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:28:19 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:28:19 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:28:19 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:28:19 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 4, id => 112 } }
20.12 11:28:19 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:28:19 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 112 } }
20.12 11:28:19 NET: Client login (conid:31363903, id:112, name:uid112)
20.12 11:28:19 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:28:19 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:28:19 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:28:19 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:28:19 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:28:19 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:28:19 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:28:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:28:24 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
20.12 11:28:25 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:28:25 TIME: user.ping 0.12 ms
20.12 11:28:25 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:28:31 ++ NET: uid112 req: user.searchEnemy { name => uid, messageType => user.searchEnemy }
20.12 11:28:31 ->>-: vdl/cache.user.searchEnemy { name => uid, id => 112, _type => vdl/cache.user.searchEnemy }
20.12 11:28:31 -<<-: vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid44, isOnline => false, id => 44 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid127, isOnline => false, id => 127 },{ name => uid132, isOnline => false, id => 132 }] }
20.12 11:28:31 TIME: user.searchEnemy 1.99 ms
20.12 11:28:31 == NET: uid112 ret: user.searchEnemy { list => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid44, isOnline => false, id => 44 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid127, isOnline => false, id => 127 },{ name => uid132, isOnline => false, id => 132 }], type => user.searchEnemy, errorCode => ok }
20.12 11:28:33 NET: Client (name:uid112 conid:31363903 TCP) disconnected from vdl.0 (clients:0)
20.12 11:28:33 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:28:33 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:28:33 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:28:33 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:28:33 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:28:33 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:28:33 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:28:33 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:28:33 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
20.12 11:28:33 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:28:33 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.12 11:28:33 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:28:33 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:28:34 NET: Client (conid:79675347) connected to vdl.0 (clients:1)
20.12 11:28:35 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:28:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:28:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:28:35 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:28:35 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:28:35 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:28:35 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:28:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 6, id => 112 } }
20.12 11:28:35 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:28:35 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 3, id => 112 } }
20.12 11:28:35 NET: Client login (conid:79675347, id:112, name:uid112)
20.12 11:28:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:28:35 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:28:35 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:28:35 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:28:35 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:28:35 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:28:35 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:28:44 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:28:44 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
20.12 11:28:46 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:28:46 TIME: user.ping 0.13 ms
20.12 11:28:46 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:28:54 TIMER: Check auto-disconnect...
20.12 11:28:54 STATS: vdl.0 cache, locks:2
20.12 11:29:02 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
20.12 11:29:02 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:29:02 NET: Client (name:uid112 conid:79675347 TCP) disconnected from vdl.0 (clients:0)
20.12 11:29:02 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:29:02 STATS: vdl.0 cache connection, 68 calls, total 0.0627095699310303 sec spent, avg 0.92 ms
20.12 11:29:02 TIME: tournament.getAvailableTournament 7.08 ms
20.12 11:29:02 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:29:02 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:29:02 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:29:02 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:29:02 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:29:02 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:29:02 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:29:02 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:29:02 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:29:02 -<<-: core/cache.update { errorCode => ok, version => 8, _type => core/cache.update }
20.12 11:29:02 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:29:02 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.12 11:29:02 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:29:02 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:29:04 NET: Client (conid:4359155) connected to vdl.0 (clients:1)
20.12 11:29:07 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:29:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:29:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:29:07 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:29:07 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:29:07 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:29:07 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:29:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 8, id => 112 } }
20.12 11:29:07 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:29:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 4, id => 112 } }
20.12 11:29:07 NET: Client login (conid:4359155, id:112, name:uid112)
20.12 11:29:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:29:07 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:29:07 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:29:07 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:29:07 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:29:07 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:29:07 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:29:07 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:29:07 TIME: user.ping 0.17 ms
20.12 11:29:07 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:29:14 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:29:14 -<<-: core/cache.update { errorCode => ok, version => 9, _type => core/cache.update }
20.12 11:29:27 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:29:27 TIME: user.ping 0.18 ms
20.12 11:29:27 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:29:49 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:29:49 TIME: user.ping 0.1 ms
20.12 11:29:49 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:29:49 NET: Client (name:uid112 conid:4359155 TCP) disconnected from vdl.0 (clients:0)
20.12 11:29:49 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:29:49 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:29:49 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:29:49 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:29:49 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:29:49 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:29:49 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:29:49 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:29:49 -<<-: core/cache.update { errorCode => ok, version => 10, _type => core/cache.update }
20.12 11:29:49 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:29:49 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
20.12 11:29:49 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:29:49 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:29:50 NET: Client (conid:92780664) connected to vdl.0 (clients:1)
20.12 11:29:53 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:29:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:29:53 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:29:53 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:29:53 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:29:53 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:29:53 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:29:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 10, id => 112 } }
20.12 11:29:53 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:29:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 5, id => 112 } }
20.12 11:29:53 NET: Client login (conid:92780664, id:112, name:uid112)
20.12 11:29:53 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:29:53 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:29:53 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:29:53 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:29:53 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:29:53 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:29:53 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:29:54 TIMER: Check auto-disconnect...
20.12 11:29:54 STATS: vdl.0 cache, locks:2
20.12 11:29:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:29:59 -<<-: core/cache.update { errorCode => ok, version => 11, _type => core/cache.update }
20.12 11:30:13 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:30:13 NET: Client (name:uid112 conid:92780664 TCP) disconnected from vdl.0 (clients:0)
20.12 11:30:13 TIME: user.ping 0.12 ms
20.12 11:30:13 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:30:13 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:30:13 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:30:13 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:30:13 STATS: vdl.0 cache connection, 93 calls, total 0.0742924213409424 sec spent, avg 0.8 ms
20.12 11:30:13 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:30:13 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:30:13 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:30:13 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:30:13 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:30:13 -<<-: core/cache.update { errorCode => ok, version => 12, _type => core/cache.update }
20.12 11:30:13 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:30:13 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
20.12 11:30:13 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:30:13 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:30:16 NET: Client (conid:54327082) connected to vdl.0 (clients:1)
20.12 11:30:17 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:30:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:30:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:30:17 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:30:17 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:30:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:30:17 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:30:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 12, id => 112 } }
20.12 11:30:17 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:30:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 6, id => 112 } }
20.12 11:30:17 NET: Client login (conid:54327082, id:112, name:uid112)
20.12 11:30:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:30:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:30:17 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:30:17 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:30:17 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:30:17 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:30:17 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:30:24 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:30:24 -<<-: core/cache.update { errorCode => ok, version => 13, _type => core/cache.update }
20.12 11:30:27 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:30:27 TIME: user.ping 0.21 ms
20.12 11:30:27 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:30:46 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:30:46 TIME: user.ping 0.3 ms
20.12 11:30:46 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:30:54 TIMER: Check auto-disconnect...
20.12 11:30:54 STATS: vdl.0 cache, locks:2
20.12 11:31:07 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:31:07 TIME: user.ping 0.13 ms
20.12 11:31:07 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:31:27 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:31:27 TIME: user.ping 0.12 ms
20.12 11:31:27 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:31:54 TIMER: Check auto-disconnect...
20.12 11:31:54 STATS: vdl.0 cache, locks:2
20.12 11:32:00 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:32:00 NET: Client (name:uid112 conid:54327082 TCP) disconnected from vdl.0 (clients:0)
20.12 11:32:00 TIME: user.ping 0.12 ms
20.12 11:32:00 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:32:00 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:32:00 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:32:00 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:32:00 STATS: vdl.0 cache connection, 105 calls, total 0.0795891284942627 sec spent, avg 0.76 ms
20.12 11:32:00 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:32:00 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:32:00 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:32:00 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:32:00 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:32:00 -<<-: core/cache.update { errorCode => ok, version => 14, _type => core/cache.update }
20.12 11:32:00 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:32:00 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
20.12 11:32:00 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:32:00 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:32:01 NET: Client (conid:98391343) connected to vdl.0 (clients:1)
20.12 11:32:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:32:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:32:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:32:02 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:32:02 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:32:02 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:32:02 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:32:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 14, id => 112 } }
20.12 11:32:02 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:32:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 7, id => 112 } }
20.12 11:32:02 NET: Client login (conid:98391343, id:112, name:uid112)
20.12 11:32:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:32:02 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:32:02 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:32:02 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:32:02 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:32:02 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:32:02 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:32:04 NET: Client (name:uid112 conid:98391343 TCP) disconnected from vdl.0 (clients:0)
20.12 11:32:04 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:32:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:32:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:32:04 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:32:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:32:04 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:32:04 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:32:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:32:04 -<<-: core/cache.update { errorCode => ok, version => 15, _type => core/cache.update }
20.12 11:32:04 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:32:04 -<<-: core/cache.update { errorCode => ok, version => 8, _type => core/cache.update }
20.12 11:32:04 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:32:04 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:32:54 TIMER: Check auto-disconnect...
20.12 11:32:54 STATS: vdl.0 cache, locks:0
20.12 11:32:54 TIMER: Check auto-disconnect...
20.12 11:32:54 STATS: vdl.0 cache, locks:0
20.12 11:32:54 TIMER: Check auto-disconnect...
20.12 11:32:54 STATS: vdl.0 cache, locks:0
20.12 11:35:43 NET: Client (conid:75165185) connected to vdl.0 (clients:1)
20.12 11:35:44 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:35:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:35:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:35:44 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:35:44 STATS: vdl.0 cache connection, 121 calls, total 0.0887858867645264 sec spent, avg 0.73 ms
20.12 11:35:44 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:35:44 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:35:44 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:35:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 0, id => 112 } }
20.12 11:35:44 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:35:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 112 } }
20.12 11:35:44 NET: Client login (conid:75165185, id:112, name:uid112)
20.12 11:35:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:35:44 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:35:44 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:35:44 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:35:44 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:35:44 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:35:44 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:35:48 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:35:48 TIME: user.ping 0.12 ms
20.12 11:35:48 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:35:49 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:35:49 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.12 11:35:54 TIMER: Check auto-disconnect...
20.12 11:35:54 STATS: vdl.0 cache, locks:2
20.12 11:36:16 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:36:16 TIME: user.ping 0.13 ms
20.12 11:36:16 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:36:30 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
20.12 11:36:30 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:36:30 NET: Client (name:uid112 conid:75165185 TCP) disconnected from vdl.0 (clients:0)
20.12 11:36:30 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:36:30 TIME: tournament.getAvailableTournament 5.19 ms
20.12 11:36:30 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:36:30 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:36:30 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:36:30 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:36:30 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:36:30 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:36:30 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:36:30 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:36:30 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:36:30 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.12 11:36:30 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:36:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.12 11:36:30 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:36:30 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:36:30 NET: Client (conid:54254273) connected to vdl.0 (clients:1)
20.12 11:36:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:36:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:36:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:36:30 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:36:30 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:36:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:36:30 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:36:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 2, id => 112 } }
20.12 11:36:30 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:36:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 112 } }
20.12 11:36:30 NET: Client login (conid:54254273, id:112, name:uid112)
20.12 11:36:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:36:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:36:30 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:36:30 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:36:30 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:36:30 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:36:30 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:36:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:36:39 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.12 11:36:39 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:36:39 TIME: user.ping 0.13 ms
20.12 11:36:39 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:36:54 TIMER: Check auto-disconnect...
20.12 11:36:54 STATS: vdl.0 cache, locks:2
20.12 11:37:07 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:37:07 TIME: user.ping 0.12 ms
20.12 11:37:07 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:37:21 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
20.12 11:37:22 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:37:22 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:37:22 STATS: vdl.0 cache connection, 141 calls, total 0.110334396362305 sec spent, avg 0.78 ms
20.12 11:37:22 TIME: tournament.getAvailableTournament 5.82 ms
20.12 11:37:22 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:37:26 NET: Client (name:uid112 conid:54254273 TCP) disconnected from vdl.0 (clients:0)
20.12 11:37:26 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:37:26 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:37:26 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:37:26 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:37:26 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:37:26 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:37:26 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:37:26 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:37:27 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.12 11:37:27 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:37:27 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.12 11:37:27 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:37:27 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:37:28 NET: Client (conid:66975359) connected to vdl.0 (clients:1)
20.12 11:37:28 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:37:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:37:28 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:37:28 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:37:28 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:37:28 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:37:28 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:37:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 4, id => 112 } }
20.12 11:37:28 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:37:28 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 112 } }
20.12 11:37:28 NET: Client login (conid:66975359, id:112, name:uid112)
20.12 11:37:28 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:37:28 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:37:28 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:37:28 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:37:28 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:37:28 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:37:28 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:37:33 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:37:33 TIME: user.ping 0.14 ms
20.12 11:37:33 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:37:34 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:37:34 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
20.12 11:37:54 TIMER: Check auto-disconnect...
20.12 11:37:54 STATS: vdl.0 cache, locks:2
20.12 11:38:04 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:38:04 NET: Client (name:uid112 conid:66975359 TCP) disconnected from vdl.0 (clients:0)
20.12 11:38:04 TIME: user.ping 0.24 ms
20.12 11:38:04 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:38:04 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:38:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:38:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:38:04 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:38:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:38:04 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:38:04 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:38:04 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:38:04 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
20.12 11:38:04 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:38:04 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.12 11:38:04 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:38:04 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:38:04 NET: Client (conid:58451308) connected to vdl.0 (clients:1)
20.12 11:38:05 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:38:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:38:05 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:38:05 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:38:05 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:38:05 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:38:05 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:38:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 6, id => 112 } }
20.12 11:38:05 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:38:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 3, id => 112 } }
20.12 11:38:05 NET: Client login (conid:58451308, id:112, name:uid112)
20.12 11:38:05 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:38:05 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:38:05 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:38:05 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:38:05 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:38:05 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:38:05 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:38:14 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:38:14 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
20.12 11:38:22 NET: Client (name:uid112 conid:58451308 TCP) disconnected from vdl.0 (clients:0)
20.12 11:38:22 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:38:22 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:38:22 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:38:22 STATS: vdl.0 cache connection, 166 calls, total 0.121888399124146 sec spent, avg 0.73 ms
20.12 11:38:22 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:38:22 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:38:22 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:38:22 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:38:22 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:38:22 -<<-: core/cache.update { errorCode => ok, version => 8, _type => core/cache.update }
20.12 11:38:22 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:38:22 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.12 11:38:22 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:38:22 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:38:31 NET: Client (conid:77255973) connected to vdl.0 (clients:1)
20.12 11:38:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:38:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:38:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:38:31 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:38:31 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:38:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:38:31 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:38:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 8, id => 112 } }
20.12 11:38:31 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:38:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 4, id => 112 } }
20.12 11:38:31 NET: Client login (conid:77255973, id:112, name:uid112)
20.12 11:38:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:38:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:38:31 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:38:31 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:38:31 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:38:31 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:38:31 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:38:35 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:38:35 TIME: user.ping 0.13 ms
20.12 11:38:35 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:38:38 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
20.12 11:38:38 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:38:38 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:38:38 TIME: tournament.getAvailableTournament 5.02 ms
20.12 11:38:38 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:38:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:38:39 -<<-: core/cache.update { errorCode => ok, version => 9, _type => core/cache.update }
20.12 11:38:54 TIMER: Check auto-disconnect...
20.12 11:38:54 STATS: vdl.0 cache, locks:2
20.12 11:38:59 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:38:59 TIME: user.ping 0.13 ms
20.12 11:38:59 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:39:29 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:39:29 TIME: user.ping 0.19 ms
20.12 11:39:29 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:39:54 TIMER: Check auto-disconnect...
20.12 11:39:54 STATS: vdl.0 cache, locks:2
20.12 11:39:55 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:39:55 TIME: user.ping 0.12 ms
20.12 11:39:55 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:40:22 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:40:22 TIME: user.ping 0.13 ms
20.12 11:40:22 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:40:50 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:40:50 TIME: user.ping 0.14 ms
20.12 11:40:50 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:40:54 TIMER: Check auto-disconnect...
20.12 11:40:54 STATS: vdl.0 cache, locks:2
20.12 11:41:18 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:41:18 TIME: user.ping 0.13 ms
20.12 11:41:18 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:41:45 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:41:45 TIME: user.ping 0.12 ms
20.12 11:41:45 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:41:54 TIMER: Check auto-disconnect...
20.12 11:41:54 STATS: vdl.0 cache, locks:2
20.12 11:42:10 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:42:10 TIME: user.ping 0.14 ms
20.12 11:42:10 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:42:37 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:42:37 TIME: user.ping 0.13 ms
20.12 11:42:37 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:42:54 TIMER: Check auto-disconnect...
20.12 11:42:54 STATS: vdl.0 cache, locks:2
20.12 11:43:03 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:43:03 TIME: user.ping 0.17 ms
20.12 11:43:03 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:43:26 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:43:26 TIME: user.ping 0.18 ms
20.12 11:43:26 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:43:53 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:43:53 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:43:53 TIME: user.ping 0.2 ms
20.12 11:43:54 TIMER: Check auto-disconnect...
20.12 11:43:54 STATS: vdl.0 cache, locks:2
20.12 11:44:19 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:44:19 TIME: user.ping 0.12 ms
20.12 11:44:19 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:44:45 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:44:45 TIME: user.ping 0.18 ms
20.12 11:44:45 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:44:54 TIMER: Check auto-disconnect...
20.12 11:44:54 STATS: vdl.0 cache, locks:2
20.12 11:45:14 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:45:14 TIME: user.ping 0.12 ms
20.12 11:45:14 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:45:43 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:45:43 TIME: user.ping 0.12 ms
20.12 11:45:43 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:45:54 TIMER: Check auto-disconnect...
20.12 11:45:54 STATS: vdl.0 cache, locks:2
20.12 11:46:13 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:46:13 TIME: user.ping 0.13 ms
20.12 11:46:13 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:46:41 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:46:41 TIME: user.ping 0.14 ms
20.12 11:46:41 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:46:54 TIMER: Check auto-disconnect...
20.12 11:46:54 STATS: vdl.0 cache, locks:2
20.12 11:47:12 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:47:12 TIME: user.ping 0.13 ms
20.12 11:47:12 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:47:41 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:47:41 TIME: user.ping 0.11 ms
20.12 11:47:41 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:47:54 TIMER: Check auto-disconnect...
20.12 11:47:54 STATS: vdl.0 cache, locks:2
20.12 11:48:05 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:48:05 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:48:05 TIME: user.ping 0.16 ms
20.12 11:48:32 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:48:32 TIME: user.ping 0.11 ms
20.12 11:48:32 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:48:54 TIMER: Check auto-disconnect...
20.12 11:48:54 STATS: vdl.0 cache, locks:2
20.12 11:49:02 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:49:02 TIME: user.ping 0.15 ms
20.12 11:49:02 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:49:29 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:49:29 TIME: user.ping 0.19 ms
20.12 11:49:29 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:49:54 TIMER: Check auto-disconnect...
20.12 11:49:54 STATS: vdl.0 cache, locks:2
20.12 11:49:55 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:49:55 TIME: user.ping 0.14 ms
20.12 11:49:55 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:50:21 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:50:21 TIME: user.ping 0.1 ms
20.12 11:50:21 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:50:50 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:50:50 TIME: user.ping 0.16 ms
20.12 11:50:50 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:50:54 TIMER: Check auto-disconnect...
20.12 11:50:54 STATS: vdl.0 cache, locks:2
20.12 11:50:57 NET: Client (name:uid112 conid:77255973 TCP) disconnected from vdl.0 (clients:0)
20.12 11:50:57 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:50:57 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:50:57 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:50:57 STATS: vdl.0 cache connection, 179 calls, total 0.132014274597168 sec spent, avg 0.74 ms
20.12 11:50:57 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:50:57 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:50:57 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:50:57 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:50:57 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:50:57 -<<-: core/cache.update { errorCode => ok, version => 10, _type => core/cache.update }
20.12 11:50:57 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:50:57 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
20.12 11:50:57 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:50:57 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:51:02 NET: Client (conid:71762774) connected to vdl.0 (clients:1)
20.12 11:51:03 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:51:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:51:03 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:51:03 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:51:03 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:51:03 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:51:03 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:51:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 10, id => 112 } }
20.12 11:51:03 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:51:03 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 5, id => 112 } }
20.12 11:51:03 NET: Client login (conid:71762774, id:112, name:uid112)
20.12 11:51:03 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:51:03 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:51:03 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:51:03 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:51:03 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:51:03 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:51:03 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:51:07 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:51:07 TIME: user.ping 0.12 ms
20.12 11:51:07 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:51:09 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:51:09 -<<-: core/cache.update { errorCode => ok, version => 11, _type => core/cache.update }
20.12 11:51:19 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
20.12 11:51:19 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:51:19 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:51:19 TIME: tournament.getAvailableTournament 5.7 ms
20.12 11:51:19 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:51:32 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:51:32 TIME: user.ping 0.11 ms
20.12 11:51:32 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:51:54 TIMER: Check auto-disconnect...
20.12 11:51:54 STATS: vdl.0 cache, locks:2
20.12 11:51:58 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:51:58 TIME: user.ping 0.11 ms
20.12 11:51:58 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:52:22 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:52:22 TIME: user.ping 0.18 ms
20.12 11:52:22 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:52:44 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:52:44 TIME: user.ping 0.19 ms
20.12 11:52:44 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:52:54 TIMER: Check auto-disconnect...
20.12 11:52:54 STATS: vdl.0 cache, locks:2
20.12 11:53:09 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:53:09 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:53:09 TIME: user.ping 0.16 ms
20.12 11:53:35 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:53:35 TIME: user.ping 0.14 ms
20.12 11:53:35 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:53:54 TIMER: Check auto-disconnect...
20.12 11:53:54 STATS: vdl.0 cache, locks:2
20.12 11:54:01 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:54:01 TIME: user.ping 0.12 ms
20.12 11:54:01 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:54:14 NET: Client (name:uid112 conid:71762774 TCP) disconnected from vdl.0 (clients:0)
20.12 11:54:14 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:54:14 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:54:14 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:54:14 STATS: vdl.0 cache connection, 192 calls, total 0.142481327056885 sec spent, avg 0.74 ms
20.12 11:54:14 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:54:14 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:54:14 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:54:14 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:54:14 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:54:14 -<<-: core/cache.update { errorCode => ok, version => 12, _type => core/cache.update }
20.12 11:54:14 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:54:14 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
20.12 11:54:14 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:54:14 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:54:21 NET: Client (conid:53870635) connected to vdl.0 (clients:1)
20.12 11:54:22 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:54:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:54:22 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:54:22 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:54:22 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:54:22 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:54:22 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:54:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 12, id => 112 } }
20.12 11:54:22 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:54:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 6, id => 112 } }
20.12 11:54:22 NET: Client login (conid:53870635, id:112, name:uid112)
20.12 11:54:22 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:54:22 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:54:22 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:54:22 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:54:22 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:54:22 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:54:22 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:54:25 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:54:25 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:54:25 TIME: user.ping 0.16 ms
20.12 11:54:29 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:54:29 -<<-: core/cache.update { errorCode => ok, version => 13, _type => core/cache.update }
20.12 11:54:41 ++ NET: uid112 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
20.12 11:54:41 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:54:41 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:54:41 TIME: tournament.getAvailableTournament 5.09 ms
20.12 11:54:41 == NET: uid112 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 6, status => starting, userList => [{ name => nelli, id => 124 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-23-11 17:00, startdate => 2016-23-11 14:00 },{ price => -1, name => test2, type => once, winner => -1, battleFinished => null, round => 1, id => 7, status => starting, userList => [{ name => nelli, id => 124 }], battleActive => null, rounddate => 2016-24-11 14:18, startdate => 2016-23-11 14:19 },{ price => -1, name => вап, type => once, winner => -1, battleFinished => null, round => 1, id => 8, status => starting, userList => [], battleActive => null, rounddate => 2016-11-16 18:34, startdate => 2016-11-09 18:34 },{ price => -1, name => впреаон, type => once, winner => -1, battleFinished => null, round => 1, id => 9, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 18:34, startdate => 2016-11-23 18:34 },{ price => -1, name => 12, type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => 2016-11-12 15:15, startdate => 2016-11-19 15:15 },{ price => -1, name => test, type => periodically, winner => -1, battleFinished => null, round => 1, id => 11, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 15:44, startdate => 2016-11-24 15:44 },{ price => -1, name => sec, type => security, winner => -1, battleFinished => null, round => 1, id => 10, status => starting, userList => [], battleActive => null, rounddate => 2016-11-24 16:02, startdate => 2016-11-24 16:02 },{ price => 100, name => test3, type => once, winner => -1, battleFinished => null, round => 1, id => 12, status => starting, userList => [], battleActive => null, rounddate => 2016-11-25 16:53, startdate => 2016-11-25 16:53 }], count => 9, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
20.12 11:54:52 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:54:52 TIME: user.ping 0.11 ms
20.12 11:54:52 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:54:54 TIMER: Check auto-disconnect...
20.12 11:54:54 STATS: vdl.0 cache, locks:2
20.12 11:55:13 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:55:13 TIME: user.ping 0.19 ms
20.12 11:55:13 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:55:39 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:55:39 TIME: user.ping 0.14 ms
20.12 11:55:39 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:55:54 TIMER: Check auto-disconnect...
20.12 11:55:54 STATS: vdl.0 cache, locks:2
20.12 11:56:03 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:56:03 TIME: user.ping 0.12 ms
20.12 11:56:03 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:56:25 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:56:25 TIME: user.ping 0.13 ms
20.12 11:56:25 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:56:45 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:56:45 TIME: user.ping 0.14 ms
20.12 11:56:45 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:56:54 TIMER: Check auto-disconnect...
20.12 11:56:54 STATS: vdl.0 cache, locks:2
20.12 11:57:09 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:57:09 TIME: user.ping 0.2 ms
20.12 11:57:09 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:57:27 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:57:27 TIME: user.ping 0.17 ms
20.12 11:57:27 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:57:47 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:57:47 NET: Client (name:uid112 conid:53870635 TCP) disconnected from vdl.0 (clients:0)
20.12 11:57:47 TIME: user.ping 0.26 ms
20.12 11:57:47 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:57:47 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:57:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:57:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:57:47 STATS: vdl.0 cache connection, 205 calls, total 0.153048753738403 sec spent, avg 0.75 ms
20.12 11:57:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:57:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:57:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:57:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:57:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:57:47 -<<-: core/cache.update { errorCode => ok, version => 14, _type => core/cache.update }
20.12 11:57:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:57:47 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
20.12 11:57:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:57:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:57:52 NET: Client (conid:18687542) connected to vdl.0 (clients:1)
20.12 11:57:54 TIMER: Check auto-disconnect...
20.12 11:57:54 STATS: vdl.0 cache, locks:0
20.12 11:57:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:57:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:57:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:57:55 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:57:55 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:57:55 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:57:55 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:57:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 14, id => 112 } }
20.12 11:57:55 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:57:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 7, id => 112 } }
20.12 11:57:55 NET: Client login (conid:18687542, id:112, name:uid112)
20.12 11:57:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:57:55 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:57:55 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:57:55 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:57:55 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:57:55 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:57:55 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:57:58 NET: Client (name:uid112 conid:18687542 TCP) disconnected from vdl.0 (clients:0)
20.12 11:57:58 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:57:58 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:57:58 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:57:58 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:57:58 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:57:58 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:57:58 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:57:58 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:57:58 -<<-: core/cache.update { errorCode => ok, version => 15, _type => core/cache.update }
20.12 11:57:58 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:57:58 -<<-: core/cache.update { errorCode => ok, version => 8, _type => core/cache.update }
20.12 11:57:58 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:57:58 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:58:54 TIMER: Check auto-disconnect...
20.12 11:58:54 STATS: vdl.0 cache, locks:0
20.12 11:59:17 NET: Client (conid:90660234) connected to vdl.0 (clients:1)
20.12 11:59:18 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:59:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:59:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:59:18 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:59:18 STATS: vdl.0 cache connection, 221 calls, total 0.162855625152588 sec spent, avg 0.74 ms
20.12 11:59:18 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:59:18 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:59:18 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:59:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 0, id => 112 } }
20.12 11:59:18 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:59:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 112 } }
20.12 11:59:18 NET: Client login (conid:90660234, id:112, name:uid112)
20.12 11:59:18 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:59:18 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:59:18 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:59:18 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:59:18 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:59:18 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:59:18 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:59:21 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:59:21 NET: Client (name:uid112 conid:90660234 TCP) disconnected from vdl.0 (clients:0)
20.12 11:59:21 TIME: user.ping 0.32 ms
20.12 11:59:21 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:59:21 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:59:21 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:59:21 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:59:21 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:59:21 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:59:21 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:59:21 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:59:21 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:59:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.12 11:59:21 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:59:21 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.12 11:59:21 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:59:21 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:59:27 NET: Client (conid:16601280) connected to vdl.0 (clients:1)
20.12 11:59:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTEy }
20.12 11:59:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112'
20.12 11:59:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid112' AND Password = 'uid112', _type => core/server.query }
20.12 11:59:30 -<<-: core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
20.12 11:59:30 ->>-: core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
20.12 11:59:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.12 11:59:30 ->>-: core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
20.12 11:59:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, year => , email => mail, networktype =>   , password => uid112, isbanned => false, regdate => 2016-11-20 16:49:02.85795+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482233198, lastLoginDate => 355, lastLoadDate => 1221 }, effects => { list => [] } }}, version => 1, id => 112 } }
20.12 11:59:30 ->>-: core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
20.12 11:59:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 112 } }
20.12 11:59:30 NET: Client login (conid:16601280, id:112, name:uid112)
20.12 11:59:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.12 11:59:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.12 11:59:30 DB: SELECT token FROM tokens WHERE userid = 112
20.12 11:59:30 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 112, _type => core/server.query }
20.12 11:59:30 -<<-: core/server.query { list => {{ token => b9b344ddb63b34ea57fc74ab83d687ac }}, errorCode => ok, _type => core/server.query }
20.12 11:59:30 == NET: uid112 ret: user.login { name => uid112, type => user.login, errorCode => ok, id => 112, token => b9b344ddb63b34ea57fc74ab83d687ac }
20.12 11:59:30 == NET: uid112 ret: user.join { name => uid112, type => user.join }
20.12 11:59:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 112, _type => core/cache.update }
20.12 11:59:39 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.12 11:59:54 TIMER: Check auto-disconnect...
20.12 11:59:54 ++ NET: uid112 req: user.ping { messageType => user.ping, msg => ok }
20.12 11:59:54 NET: Client (name:uid112 conid:16601280 TCP) disconnected from vdl.0 (clients:0)
20.12 11:59:54 TIME: user.ping 0.17 ms
20.12 11:59:54 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
20.12 11:59:54 == NET: uid112 ret: user.ping { type => user.ping, errorCode => ok }
20.12 11:59:54 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
20.12 11:59:54 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.12 11:59:54 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:59:54 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.12 11:59:54 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.12 11:59:54 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.12 11:59:54 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
20.12 11:59:54 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.12 11:59:54 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
20.12 11:59:54 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.12 11:59:54 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
20.12 11:59:54 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.12 11:59:54 STATS: vdl.0 cache, locks:0
