22.11 16:00:00 STATS: vdl.0 cache, locks:0
22.11 16:00:43 TIMER: Check auto-disconnect...
22.11 16:01:00 STATS: vdl.0 cache, locks:0
22.11 16:01:43 TIMER: Check auto-disconnect...
22.11 16:02:00 STATS: vdl.0 cache, locks:0
22.11 16:02:43 TIMER: Check auto-disconnect...
22.11 16:03:00 STATS: vdl.0 cache, locks:0
22.11 16:03:43 TIMER: Check auto-disconnect...
22.11 16:04:00 STATS: vdl.0 cache, locks:0
22.11 16:04:43 TIMER: Check auto-disconnect...
22.11 16:05:00 STATS: vdl.0 cache, locks:0
22.11 16:05:43 TIMER: Check auto-disconnect...
22.11 16:06:00 STATS: vdl.0 cache, locks:0
22.11 16:06:43 TIMER: Check auto-disconnect...
22.11 16:07:00 STATS: vdl.0 cache, locks:0
22.11 16:07:43 TIMER: Check auto-disconnect...
22.11 16:08:00 STATS: vdl.0 cache, locks:0
22.11 16:08:43 TIMER: Check auto-disconnect...
22.11 16:09:00 STATS: vdl.0 cache, locks:0
22.11 16:09:43 TIMER: Check auto-disconnect...
22.11 16:10:00 STATS: vdl.0 cache, locks:0
22.11 16:10:43 TIMER: Check auto-disconnect...
22.11 16:11:00 STATS: vdl.0 cache, locks:0
22.11 16:11:43 TIMER: Check auto-disconnect...
22.11 16:12:00 STATS: vdl.0 cache, locks:0
22.11 16:12:43 TIMER: Check auto-disconnect...
22.11 16:13:00 STATS: vdl.0 cache, locks:0
22.11 16:13:10 NET: Client (conid:42232757) connected to vdl.0 (clients:1)
22.11 16:13:12 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTMy }
22.11 16:13:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid132' AND Password = 'uid132'
22.11 16:13:12 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid132' AND Password = 'uid132', _type => core/server.query }
22.11 16:13:12 -<<-: core/server.query { list => {{ name => uid132, networkid => , isbanned => false, id => 132 }}, errorCode => ok, _type => core/server.query }
22.11 16:13:12 STATS: vdl.0 cache connection, 1814 calls, total 1.19195532798767 sec spent, avg 0.66 ms
22.11 16:13:12 ->>-: core/user.isOnlineID { id => 132, _type => core/user.isOnlineID }
22.11 16:13:12 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
22.11 16:13:12 ->>-: core/cache.get { type => user, v => -1, id => 132, _type => core/cache.get }
22.11 16:13:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid132, deleted => false, year => , email => mail, networktype =>   , password => uid132, isbanned => false, regdate => 2016-11-21 13:49:28.012904+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479824980, lastLoginDate => 327, money => 1, lastLoadDate => 1123 }, effects => { list => [] } }}, version => 0, id => 132 } }
22.11 16:13:12 ->>-: core/cache.get { type => questdata, v => -1, id => 132, _type => core/cache.get }
22.11 16:13:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 132 } }
22.11 16:13:12 NET: Client login (conid:42232757, id:132, name:uid132)
22.11 16:13:12 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 132, _type => core/user.loginPost, ipAddr => 95.71.119.159 }
22.11 16:13:12 -<<-: core/user.loginPost { _type => core/user.loginPost }
22.11 16:13:12 DB: SELECT token FROM tokens WHERE userid = 132
22.11 16:13:12 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 132, _type => core/server.query }
22.11 16:13:12 -<<-: core/server.query { list => {{ token => d3910ea62c8dc68b1a244797b2268456 }}, errorCode => ok, _type => core/server.query }
22.11 16:13:12 == NET: uid132 ret: user.login { name => uid132, type => user.login, errorCode => ok, id => 132, token => d3910ea62c8dc68b1a244797b2268456 }
22.11 16:13:12 == NET: uid132 ret: user.join { name => uid132, type => user.join }
22.11 16:13:20 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 132, _type => core/cache.update }
22.11 16:13:20 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 16:13:22 ++ NET: uid132 req: user.ping { messageType => user.ping, msg => ok }
22.11 16:13:22 TIME: user.ping 0.12 ms
22.11 16:13:22 == NET: uid132 ret: user.ping { type => user.ping, errorCode => ok }
22.11 16:13:27 ++ NET: uid132 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
22.11 16:13:27 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:13:27 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [{ name => uid132, id => 132 }], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:13:27 TIME: tournament.getAvailableTournament 3.26 ms
22.11 16:13:27 == NET: uid132 ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [{ name => uid132, id => 132 }], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:13:38 ++ NET: uid132 req: tournament.grid { tournamentId => 5, round => 1, messageType => tournament.grid }
22.11 16:13:38 ->>-: vdl/cache.tournament.getStatus { tournamentId => 5, _type => vdl/cache.tournament.getStatus }
22.11 16:13:38 -<<-: vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
22.11 16:13:38 ->>-: vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 5, _type => vdl/cache.tournament.getAvailableTournamentUsers }
22.11 16:13:38 -<<-: vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [132] }
22.11 16:13:38 ->>-: vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 132 }], tournamentId => 5, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
22.11 16:13:38 -<<-: vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 132 }], tournamentId => 5, errorCode => ok, _type => vdl/cache.tournament.setGrid }
22.11 16:13:38 == NET: uid132 ret: tournament.grid { list => [{ winner => -1, round => 1, player1 => null, player2 => 132 }], type => tournament.grid, tournamentId => 5, errorCode => ok, _type => vdl/cache.tournament.setGrid }
22.11 16:13:38 TIME: tournament.grid 1.61 ms
22.11 16:13:43 TIMER: Check auto-disconnect...
22.11 16:14:00 STATS: vdl.0 cache, locks:2
22.11 16:14:05 NET: Client (name:uid132 conid:42232757 TCP) disconnected from vdl.0 (clients:0)
22.11 16:14:05 DB: SELECT id FROM battle WHERE firstid=132 OR secondid=132 AND finished <> true
22.11 16:14:05 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=132 OR secondid=132 AND finished <> true, _type => core/server.query }
22.11 16:14:05 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
22.11 16:14:05 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 16:14:05 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
22.11 16:14:05 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 16:14:05 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
22.11 16:14:05 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 132, _type => core/cache.update }
22.11 16:14:05 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
22.11 16:14:05 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 132, _type => core/cache.update }
22.11 16:14:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 16:14:05 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 132, _type => core/user.logoutPost }
22.11 16:14:05 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
22.11 16:14:05 NET: Client (conid:14779372) connected to vdl.0 (clients:1)
22.11 16:14:05 ++ NET: null req: user.login { password => 77779999, name => forest, messageType => user.login }
22.11 16:14:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'forest' AND Password = '77779999'
22.11 16:14:05 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'forest' AND Password = '77779999', _type => core/server.query }
22.11 16:14:05 -<<-: core/server.query { list => {{ name => forest, networkid => , isbanned => false, id => 117 }}, errorCode => ok, _type => core/server.query }
22.11 16:14:05 ->>-: core/user.isOnlineID { id => 117, _type => core/user.isOnlineID }
22.11 16:14:05 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
22.11 16:14:05 ->>-: core/cache.get { type => user, v => -1, id => 117, _type => core/cache.get }
22.11 16:14:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => forest, deleted => false, year => , email => ga.forest@mail.ru, networktype =>   , password => 77779999, isbanned => false, regdate => 2016-11-20 20:23:22.258044+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479673642, lastLoginDate => 326, lastLoadDate => 1122 }, effects => { list => [] } }}, version => 0, id => 117 } }
22.11 16:14:05 ->>-: core/cache.get { type => questdata, v => -1, id => 117, _type => core/cache.get }
22.11 16:14:05 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 117 } }
22.11 16:14:05 NET: Client login (conid:14779372, id:117, name:forest)
22.11 16:14:05 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 117, _type => core/user.loginPost, ipAddr => 95.71.119.159 }
22.11 16:14:05 -<<-: core/user.loginPost { _type => core/user.loginPost }
22.11 16:14:05 DB: SELECT token FROM tokens WHERE userid = 117
22.11 16:14:05 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 117, _type => core/server.query }
22.11 16:14:05 -<<-: core/server.query { list => {{ token => 855d78b34e0b90012c769c51fad47e57 }}, errorCode => ok, _type => core/server.query }
22.11 16:14:05 DB: SELECT ID FROM TempUserLogins WHERE UserID = 117 AND Date = 'today'::timestamp
22.11 16:14:05 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 117 AND Date = 'today'::timestamp, _type => core/server.query }
22.11 16:14:05 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
22.11 16:14:05 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (117, 'today'::timestamp)
22.11 16:14:05 == NET: forest ret: user.login { name => forest, type => user.login, errorCode => ok, id => 117, token => 855d78b34e0b90012c769c51fad47e57 }
22.11 16:14:05 == NET: forest ret: user.join { name => forest, type => user.join }
22.11 16:14:05 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (117, 'today'::timestamp), _type => core/server.pending }} }
22.11 16:14:05 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
22.11 16:14:05 ++ NET: forest req: user.data { messageType => user.data }
22.11 16:14:05 ->>-: vdl/cache.user.getData { userId => 117, _type => vdl/cache.user.getData, money => 0 }
22.11 16:14:05 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
22.11 16:14:05 TIME: user.data 0.3 ms
22.11 16:14:05 == NET: forest ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
22.11 16:14:14 ++ NET: forest req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
22.11 16:14:14 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:14:14 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [{ name => uid132, id => 132 }], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:14:14 STATS: vdl.0 cache connection, 1839 calls, total 1.21271324157715 sec spent, avg 0.66 ms
22.11 16:14:14 TIME: tournament.getAvailableTournament 2.9 ms
22.11 16:14:14 == NET: forest ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [{ name => uid132, id => 132 }], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:14:15 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479831245, lastLoginDate => 327, lastLoadDate => 1123 } }}, type => user, unlock => false, id => 117, _type => core/cache.update }
22.11 16:14:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 16:14:18 ++ NET: forest req: tournament.addUsers { tournamentId => 5, messageType => tournament.addUsers }
22.11 16:14:18 ->>-: vdl/cache.tournament.getPrice { tournamentId => 5, _type => vdl/cache.tournament.getPrice }
22.11 16:14:18 -<<-: vdl/cache.tournament.getPrice { price => -1, _type => vdl/cache.tournament.getPrice }
22.11 16:14:18 ->>-: vdl/cache.tournament.addUsers { userId => 117, passTournament => null, tournament => 5, _type => vdl/cache.tournament.addUsers }
22.11 16:14:18 -<<-: vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
22.11 16:14:18 TIME: tournament.addUsers 0.75 ms
22.11 16:14:18 == NET: forest ret: tournament.addUsers { type => tournament.addUsers, errorCode => ok, _type => vdl/cache.tournament.addUsers }
22.11 16:14:18 ++ NET: forest req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
22.11 16:14:18 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:14:18 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [{ name => uid132, id => 132 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:14:18 TIME: tournament.getAvailableTournament 2.02 ms
22.11 16:14:18 == NET: forest ret: tournament.getAvailableTournament { list => [{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid16, id => 16 }], battleActive => null, rounddate => 2016-09-11 16:00, startdate => 2016-09-11 16:00 },{ price => -1, name => test, type => once, winner => -1, battleFinished => null, round => 1, id => 3, status => starting, userList => [], battleActive => null, rounddate => 2016-21-11 19:00, startdate => 2016-21-11 15:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 4, status => starting, userList => [], battleActive => null, rounddate => null-null- null, startdate => 2016-11-10 13:00 },{ price => -1, name => , type => once, winner => -1, battleFinished => null, round => 1, id => 5, status => starting, userList => [{ name => uid132, id => 132 },{ name => forest, id => 117 }], battleActive => null, rounddate => 2016-11-24 15:11, startdate => 2016-11-12 15:10 }], count => 4, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
22.11 16:14:25 ->>-: core/cache.update { diff => {params => { attrs => { money => 1 } }}, type => user, unlock => false, id => 117, _type => core/cache.update }
22.11 16:14:25 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
22.11 16:14:38 ++ NET: forest req: user.ping { messageType => user.ping, msg => ok }
22.11 16:14:38 TIME: user.ping 0.1 ms
22.11 16:14:38 == NET: forest ret: user.ping { type => user.ping, errorCode => ok }
22.11 16:14:43 TIMER: Check auto-disconnect...
22.11 16:15:00 STATS: vdl.0 cache, locks:2
22.11 16:15:43 TIMER: Check auto-disconnect...
22.11 16:16:00 STATS: vdl.0 cache, locks:2
22.11 16:16:43 TIMER: Check auto-disconnect...
22.11 16:17:00 STATS: vdl.0 cache, locks:2
22.11 16:17:43 TIMER: Check auto-disconnect...
22.11 16:18:00 STATS: vdl.0 cache, locks:2
22.11 16:18:43 TIMER: Check auto-disconnect...
22.11 16:19:00 STATS: vdl.0 cache, locks:2
22.11 16:19:43 TIMER: Check auto-disconnect...
22.11 16:20:00 STATS: vdl.0 cache, locks:2
22.11 16:20:43 TIMER: Check auto-disconnect...
22.11 16:21:00 STATS: vdl.0 cache, locks:2
22.11 16:21:43 TIMER: Check auto-disconnect...
22.11 16:22:00 STATS: vdl.0 cache, locks:2
22.11 16:22:43 TIMER: Check auto-disconnect...
22.11 16:23:00 STATS: vdl.0 cache, locks:2
22.11 16:23:43 TIMER: Check auto-disconnect...
22.11 16:24:00 STATS: vdl.0 cache, locks:2
22.11 16:24:43 TIMER: Check auto-disconnect...
22.11 16:25:00 STATS: vdl.0 cache, locks:2
22.11 16:25:43 TIMER: Check auto-disconnect...
22.11 16:25:44 NET: Client (name:forest conid:14779372 TCP) disconnected from vdl.0 (clients:0)
22.11 16:25:44 DB: SELECT id FROM battle WHERE firstid=117 OR secondid=117 AND finished <> true
22.11 16:25:44 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=117 OR secondid=117 AND finished <> true, _type => core/server.query }
22.11 16:25:44 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
22.11 16:25:44 STATS: vdl.0 cache connection, 1845 calls, total 1.21689391136169 sec spent, avg 0.66 ms
22.11 16:25:44 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 16:25:44 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
22.11 16:25:44 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
22.11 16:25:44 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
22.11 16:25:44 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 117, _type => core/cache.update }
22.11 16:25:44 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
22.11 16:25:44 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 117, _type => core/cache.update }
22.11 16:25:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
22.11 16:25:44 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 117, _type => core/user.logoutPost }
22.11 16:25:44 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
22.11 16:26:00 STATS: vdl.0 cache, locks:0
22.11 16:26:43 TIMER: Check auto-disconnect...
22.11 16:27:00 STATS: vdl.0 cache, locks:0
22.11 16:27:43 TIMER: Check auto-disconnect...
22.11 16:28:00 STATS: vdl.0 cache, locks:0
22.11 16:28:43 TIMER: Check auto-disconnect...
22.11 16:29:00 STATS: vdl.0 cache, locks:0
22.11 16:29:43 TIMER: Check auto-disconnect...
22.11 16:30:00 STATS: vdl.0 cache, locks:0
22.11 16:30:43 TIMER: Check auto-disconnect...
22.11 16:31:00 STATS: vdl.0 cache, locks:0
22.11 16:31:43 TIMER: Check auto-disconnect...
22.11 16:32:00 STATS: vdl.0 cache, locks:0
22.11 16:32:43 TIMER: Check auto-disconnect...
22.11 16:33:00 STATS: vdl.0 cache, locks:0
22.11 16:33:43 TIMER: Check auto-disconnect...
22.11 16:34:00 STATS: vdl.0 cache, locks:0
22.11 16:34:43 TIMER: Check auto-disconnect...
22.11 16:35:00 STATS: vdl.0 cache, locks:0
22.11 16:35:43 TIMER: Check auto-disconnect...
22.11 16:36:00 STATS: vdl.0 cache, locks:0
22.11 16:36:43 TIMER: Check auto-disconnect...
22.11 16:37:00 STATS: vdl.0 cache, locks:0
22.11 16:37:43 TIMER: Check auto-disconnect...
22.11 16:38:00 STATS: vdl.0 cache, locks:0
22.11 16:38:43 TIMER: Check auto-disconnect...
22.11 16:39:00 STATS: vdl.0 cache, locks:0
22.11 16:39:43 TIMER: Check auto-disconnect...
22.11 16:40:00 STATS: vdl.0 cache, locks:0
22.11 16:40:43 TIMER: Check auto-disconnect...
22.11 16:41:00 STATS: vdl.0 cache, locks:0
22.11 16:41:43 TIMER: Check auto-disconnect...
22.11 16:42:00 STATS: vdl.0 cache, locks:0
22.11 16:42:43 TIMER: Check auto-disconnect...
22.11 16:43:00 STATS: vdl.0 cache, locks:0
22.11 16:43:43 TIMER: Check auto-disconnect...
22.11 16:44:00 STATS: vdl.0 cache, locks:0
22.11 16:44:43 TIMER: Check auto-disconnect...
22.11 16:45:00 STATS: vdl.0 cache, locks:0
22.11 16:45:43 TIMER: Check auto-disconnect...
22.11 16:46:00 STATS: vdl.0 cache, locks:0
22.11 16:46:43 TIMER: Check auto-disconnect...
22.11 16:47:00 STATS: vdl.0 cache, locks:0
22.11 16:47:43 TIMER: Check auto-disconnect...
22.11 16:48:00 STATS: vdl.0 cache, locks:0
22.11 16:48:43 TIMER: Check auto-disconnect...
22.11 16:49:00 STATS: vdl.0 cache, locks:0
22.11 16:49:43 TIMER: Check auto-disconnect...
22.11 16:50:00 STATS: vdl.0 cache, locks:0
22.11 16:50:43 TIMER: Check auto-disconnect...
22.11 16:51:00 STATS: vdl.0 cache, locks:0
22.11 16:51:43 TIMER: Check auto-disconnect...
22.11 16:52:00 STATS: vdl.0 cache, locks:0
22.11 16:52:43 TIMER: Check auto-disconnect...
22.11 16:53:00 STATS: vdl.0 cache, locks:0
22.11 16:53:43 TIMER: Check auto-disconnect...
22.11 16:54:00 STATS: vdl.0 cache, locks:0
22.11 16:54:43 TIMER: Check auto-disconnect...
22.11 16:55:00 STATS: vdl.0 cache, locks:0
22.11 16:55:43 TIMER: Check auto-disconnect...
22.11 16:56:00 STATS: vdl.0 cache, locks:0
22.11 16:56:43 TIMER: Check auto-disconnect...
22.11 16:57:00 STATS: vdl.0 cache, locks:0
22.11 16:57:43 TIMER: Check auto-disconnect...
22.11 16:58:00 STATS: vdl.0 cache, locks:0
22.11 16:58:43 TIMER: Check auto-disconnect...
22.11 16:59:00 STATS: vdl.0 cache, locks:0
22.11 16:59:43 TIMER: Check auto-disconnect...
