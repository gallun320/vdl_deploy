16.02 06:00:23 STATS: vdl.0 cache, locks:2
16.02 06:00:48 TIMER: Check auto-disconnect...
16.02 06:01:23 STATS: vdl.0 cache, locks:2
16.02 06:01:48 TIMER: Check auto-disconnect...
16.02 06:02:23 STATS: vdl.0 cache, locks:2
16.02 06:02:48 TIMER: Check auto-disconnect...
16.02 06:03:23 STATS: vdl.0 cache, locks:2
16.02 06:03:48 TIMER: Check auto-disconnect...
16.02 06:04:23 STATS: vdl.0 cache, locks:2
16.02 06:04:48 TIMER: Check auto-disconnect...
16.02 06:05:01 NET: Client (conid:33902745) connected to vdl.0 (clients:1)
16.02 06:05:02 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
16.02 06:05:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
16.02 06:05:02 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
16.02 06:05:02 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
16.02 06:05:02 STATS: vdl.0 cache connection, 1309 calls, total 0.905513048171997 sec spent, avg 0.69 ms
16.02 06:05:02 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
16.02 06:05:02 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
16.02 06:05:02 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
16.02 06:05:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487160381, lastLoginDate => 47, lastLoadDate => 217 }, effects => { list => [] } }}, version => 0, id => 60 } }
16.02 06:05:02 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
16.02 06:05:02 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
16.02 06:05:02 NET: Client login (conid:33902745, id:60, name:uid60)
16.02 06:05:02 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
16.02 06:05:02 -<<-: core/user.loginPost { _type => core/user.loginPost }
16.02 06:05:02 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
16.02 06:05:02 == NET: uid60 ret: user.join { name => uid60, type => user.join }
16.02 06:05:06 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:05:06 TIME: user.ping 0.12 ms
16.02 06:05:06 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:05:08 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
16.02 06:05:08 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.02 06:05:23 STATS: vdl.0 cache, locks:4
16.02 06:05:48 TIMER: Check auto-disconnect...
16.02 06:06:23 STATS: vdl.0 cache, locks:4
16.02 06:06:48 TIMER: Check auto-disconnect...
16.02 06:07:23 STATS: vdl.0 cache, locks:4
16.02 06:07:48 TIMER: Check auto-disconnect...
16.02 06:08:23 STATS: vdl.0 cache, locks:4
16.02 06:08:48 TIMER: Check auto-disconnect...
16.02 06:08:48 NET: Client (name:uid60 conid:33902745 TCP) disconnected from vdl.0 (clients:0)
16.02 06:08:48 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
16.02 06:08:48 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
16.02 06:08:48 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
16.02 06:08:48 STATS: vdl.0 cache connection, 1315 calls, total 0.908729076385498 sec spent, avg 0.69 ms
16.02 06:08:48 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.02 06:08:48 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
16.02 06:08:48 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.02 06:08:48 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
16.02 06:08:48 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
16.02 06:08:48 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
16.02 06:08:48 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
16.02 06:08:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.02 06:08:48 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
16.02 06:08:48 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
16.02 06:09:23 STATS: vdl.0 cache, locks:2
16.02 06:09:48 TIMER: Check auto-disconnect...
16.02 06:10:23 STATS: vdl.0 cache, locks:2
16.02 06:10:48 TIMER: Check auto-disconnect...
16.02 06:11:23 STATS: vdl.0 cache, locks:2
16.02 06:11:48 TIMER: Check auto-disconnect...
16.02 06:12:23 STATS: vdl.0 cache, locks:2
16.02 06:12:48 TIMER: Check auto-disconnect...
16.02 06:13:08 NET: Client (conid:20057504) connected to vdl.0 (clients:1)
16.02 06:13:09 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
16.02 06:13:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
16.02 06:13:09 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
16.02 06:13:09 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
16.02 06:13:09 STATS: vdl.0 cache connection, 1320 calls, total 0.911515951156616 sec spent, avg 0.69 ms
16.02 06:13:09 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
16.02 06:13:09 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
16.02 06:13:09 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
16.02 06:13:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487160381, lastLoginDate => 47, lastLoadDate => 217 }, effects => { list => [] } }}, version => 0, id => 60 } }
16.02 06:13:09 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
16.02 06:13:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
16.02 06:13:09 NET: Client login (conid:20057504, id:60, name:uid60)
16.02 06:13:09 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
16.02 06:13:09 -<<-: core/user.loginPost { _type => core/user.loginPost }
16.02 06:13:09 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
16.02 06:13:09 == NET: uid60 ret: user.join { name => uid60, type => user.join }
16.02 06:13:13 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:13:13 TIME: user.ping 0.12 ms
16.02 06:13:13 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:13:18 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
16.02 06:13:18 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.02 06:13:23 STATS: vdl.0 cache, locks:4
16.02 06:13:48 TIMER: Check auto-disconnect...
16.02 06:14:23 STATS: vdl.0 cache, locks:4
16.02 06:14:48 TIMER: Check auto-disconnect...
16.02 06:15:23 STATS: vdl.0 cache, locks:4
16.02 06:15:48 TIMER: Check auto-disconnect...
16.02 06:16:23 STATS: vdl.0 cache, locks:4
16.02 06:16:48 TIMER: Check auto-disconnect...
16.02 06:16:48 NET: Client (name:uid60 conid:20057504 TCP) disconnected from vdl.0 (clients:0)
16.02 06:16:48 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
16.02 06:16:48 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
16.02 06:16:48 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
16.02 06:16:48 STATS: vdl.0 cache connection, 1326 calls, total 0.915171146392822 sec spent, avg 0.69 ms
16.02 06:16:48 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.02 06:16:48 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
16.02 06:16:48 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.02 06:16:48 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
16.02 06:16:48 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
16.02 06:16:48 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
16.02 06:16:48 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
16.02 06:16:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.02 06:16:48 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
16.02 06:16:48 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
16.02 06:17:23 STATS: vdl.0 cache, locks:2
16.02 06:17:48 TIMER: Check auto-disconnect...
16.02 06:18:23 STATS: vdl.0 cache, locks:2
16.02 06:18:48 TIMER: Check auto-disconnect...
16.02 06:19:23 STATS: vdl.0 cache, locks:2
16.02 06:19:48 TIMER: Check auto-disconnect...
16.02 06:20:23 STATS: vdl.0 cache, locks:2
16.02 06:20:48 TIMER: Check auto-disconnect...
16.02 06:21:23 STATS: vdl.0 cache, locks:2
16.02 06:21:48 TIMER: Check auto-disconnect...
16.02 06:22:23 STATS: vdl.0 cache, locks:2
16.02 06:22:48 TIMER: Check auto-disconnect...
16.02 06:23:23 STATS: vdl.0 cache, locks:2
16.02 06:23:48 TIMER: Check auto-disconnect...
16.02 06:24:23 STATS: vdl.0 cache, locks:2
16.02 06:24:26 NET: Client (conid:86311409) connected to vdl.0 (clients:1)
16.02 06:24:27 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
16.02 06:24:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
16.02 06:24:27 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
16.02 06:24:27 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
16.02 06:24:27 STATS: vdl.0 cache connection, 1331 calls, total 0.918044328689575 sec spent, avg 0.69 ms
16.02 06:24:27 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
16.02 06:24:27 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
16.02 06:24:27 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
16.02 06:24:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487160381, lastLoginDate => 47, lastLoadDate => 217 }, effects => { list => [] } }}, version => 0, id => 60 } }
16.02 06:24:27 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
16.02 06:24:27 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
16.02 06:24:27 NET: Client login (conid:86311409, id:60, name:uid60)
16.02 06:24:27 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
16.02 06:24:27 -<<-: core/user.loginPost { _type => core/user.loginPost }
16.02 06:24:27 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
16.02 06:24:27 == NET: uid60 ret: user.join { name => uid60, type => user.join }
16.02 06:24:30 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:24:30 TIME: user.ping 0.13 ms
16.02 06:24:30 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:24:33 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
16.02 06:24:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.02 06:24:48 TIMER: Check auto-disconnect...
16.02 06:25:23 STATS: vdl.0 cache, locks:4
16.02 06:25:48 TIMER: Check auto-disconnect...
16.02 06:26:23 STATS: vdl.0 cache, locks:4
16.02 06:26:48 TIMER: Check auto-disconnect...
16.02 06:27:23 STATS: vdl.0 cache, locks:4
16.02 06:27:48 TIMER: Check auto-disconnect...
16.02 06:27:48 NET: Client (name:uid60 conid:86311409 TCP) disconnected from vdl.0 (clients:0)
16.02 06:27:48 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
16.02 06:27:48 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
16.02 06:27:48 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
16.02 06:27:48 STATS: vdl.0 cache connection, 1337 calls, total 0.92082691192627 sec spent, avg 0.69 ms
16.02 06:27:48 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.02 06:27:48 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
16.02 06:27:48 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.02 06:27:48 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
16.02 06:27:48 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
16.02 06:27:48 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
16.02 06:27:48 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
16.02 06:27:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.02 06:27:48 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
16.02 06:27:48 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
16.02 06:28:23 STATS: vdl.0 cache, locks:2
16.02 06:28:48 TIMER: Check auto-disconnect...
16.02 06:29:23 STATS: vdl.0 cache, locks:2
16.02 06:29:48 TIMER: Check auto-disconnect...
16.02 06:30:23 STATS: vdl.0 cache, locks:2
16.02 06:30:48 TIMER: Check auto-disconnect...
16.02 06:31:23 STATS: vdl.0 cache, locks:2
16.02 06:31:48 TIMER: Check auto-disconnect...
16.02 06:32:23 STATS: vdl.0 cache, locks:2
16.02 06:32:48 TIMER: Check auto-disconnect...
16.02 06:33:23 STATS: vdl.0 cache, locks:2
16.02 06:33:48 TIMER: Check auto-disconnect...
16.02 06:34:23 STATS: vdl.0 cache, locks:2
16.02 06:34:48 TIMER: Check auto-disconnect...
16.02 06:35:23 STATS: vdl.0 cache, locks:2
16.02 06:35:48 TIMER: Check auto-disconnect...
16.02 06:36:23 STATS: vdl.0 cache, locks:2
16.02 06:36:48 TIMER: Check auto-disconnect...
16.02 06:37:23 STATS: vdl.0 cache, locks:2
16.02 06:37:48 TIMER: Check auto-disconnect...
16.02 06:38:23 STATS: vdl.0 cache, locks:2
16.02 06:38:48 TIMER: Check auto-disconnect...
16.02 06:39:24 STATS: vdl.0 cache, locks:2
16.02 06:39:48 TIMER: Check auto-disconnect...
16.02 06:40:24 STATS: vdl.0 cache, locks:2
16.02 06:40:48 TIMER: Check auto-disconnect...
16.02 06:41:24 STATS: vdl.0 cache, locks:2
16.02 06:41:48 TIMER: Check auto-disconnect...
16.02 06:42:24 STATS: vdl.0 cache, locks:2
16.02 06:42:48 TIMER: Check auto-disconnect...
16.02 06:43:24 STATS: vdl.0 cache, locks:2
16.02 06:43:48 TIMER: Check auto-disconnect...
16.02 06:44:24 STATS: vdl.0 cache, locks:2
16.02 06:44:48 TIMER: Check auto-disconnect...
16.02 06:45:24 STATS: vdl.0 cache, locks:2
16.02 06:45:48 TIMER: Check auto-disconnect...
16.02 06:46:24 STATS: vdl.0 cache, locks:2
16.02 06:46:48 TIMER: Check auto-disconnect...
16.02 06:47:24 STATS: vdl.0 cache, locks:2
16.02 06:47:48 TIMER: Check auto-disconnect...
16.02 06:48:24 STATS: vdl.0 cache, locks:2
16.02 06:48:48 TIMER: Check auto-disconnect...
16.02 06:49:24 STATS: vdl.0 cache, locks:2
16.02 06:49:48 TIMER: Check auto-disconnect...
16.02 06:50:24 STATS: vdl.0 cache, locks:2
16.02 06:50:48 TIMER: Check auto-disconnect...
16.02 06:51:24 STATS: vdl.0 cache, locks:2
16.02 06:51:48 TIMER: Check auto-disconnect...
16.02 06:52:24 STATS: vdl.0 cache, locks:2
16.02 06:52:48 TIMER: Check auto-disconnect...
16.02 06:52:48 NET: Client (conid:35641623) connected to vdl.0 (clients:1)
16.02 06:52:49 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
16.02 06:52:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
16.02 06:52:49 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
16.02 06:52:49 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
16.02 06:52:49 STATS: vdl.0 cache connection, 1342 calls, total 0.922914028167725 sec spent, avg 0.69 ms
16.02 06:52:49 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
16.02 06:52:49 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
16.02 06:52:49 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
16.02 06:52:49 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487160381, lastLoginDate => 47, lastLoadDate => 217 }, effects => { list => [] } }}, version => 0, id => 60 } }
16.02 06:52:49 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
16.02 06:52:49 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
16.02 06:52:49 NET: Client login (conid:35641623, id:60, name:uid60)
16.02 06:52:49 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
16.02 06:52:49 -<<-: core/user.loginPost { _type => core/user.loginPost }
16.02 06:52:49 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
16.02 06:52:49 == NET: uid60 ret: user.join { name => uid60, type => user.join }
16.02 06:52:53 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:52:53 TIME: user.ping 0.11 ms
16.02 06:52:53 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:52:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
16.02 06:52:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.02 06:53:14 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:53:14 TIME: user.ping 0.11 ms
16.02 06:53:14 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:53:24 STATS: vdl.0 cache, locks:4
16.02 06:53:36 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:53:36 TIME: user.ping 0.14 ms
16.02 06:53:36 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:53:48 TIMER: Check auto-disconnect...
16.02 06:53:58 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:53:58 TIME: user.ping 0.16 ms
16.02 06:53:58 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:54:19 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:54:19 TIME: user.ping 0.12 ms
16.02 06:54:19 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:54:24 STATS: vdl.0 cache, locks:4
16.02 06:54:41 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:54:41 TIME: user.ping 0.09 ms
16.02 06:54:41 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:54:48 TIMER: Check auto-disconnect...
16.02 06:55:02 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:55:02 TIME: user.ping 40.89 ms
16.02 06:55:02 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:55:24 STATS: vdl.0 cache, locks:4
16.02 06:55:24 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:55:24 TIME: user.ping 0.23 ms
16.02 06:55:24 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:55:46 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:55:46 TIME: user.ping 0.15 ms
16.02 06:55:46 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:55:48 TIMER: Check auto-disconnect...
16.02 06:56:07 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:56:07 TIME: user.ping 0.07 ms
16.02 06:56:07 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:56:24 STATS: vdl.0 cache, locks:4
16.02 06:56:29 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:56:29 TIME: user.ping 0.12 ms
16.02 06:56:29 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:56:48 TIMER: Check auto-disconnect...
16.02 06:56:50 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:56:50 TIME: user.ping 0.11 ms
16.02 06:56:50 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:57:12 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:57:12 TIME: user.ping 0.12 ms
16.02 06:57:12 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:57:24 STATS: vdl.0 cache, locks:4
16.02 06:57:34 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:57:34 TIME: user.ping 0.11 ms
16.02 06:57:34 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:57:48 TIMER: Check auto-disconnect...
16.02 06:57:55 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:57:55 TIME: user.ping 0.13 ms
16.02 06:57:55 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:58:17 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:58:17 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:58:17 TIME: user.ping 0.13 ms
16.02 06:58:24 STATS: vdl.0 cache, locks:4
16.02 06:58:38 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:58:38 TIME: user.ping 0.1 ms
16.02 06:58:38 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:58:48 TIMER: Check auto-disconnect...
16.02 06:59:00 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
16.02 06:59:00 TIME: user.ping 0.12 ms
16.02 06:59:00 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
16.02 06:59:24 STATS: vdl.0 cache, locks:4
16.02 06:59:48 TIMER: Check auto-disconnect...
