20.10 09:00:05 STATS: vdl.0 cache, locks:0
20.10 09:00:11 TIMER: Check auto-disconnect...
20.10 09:01:05 STATS: vdl.0 cache, locks:0
20.10 09:01:11 TIMER: Check auto-disconnect...
20.10 09:02:05 STATS: vdl.0 cache, locks:0
20.10 09:02:11 TIMER: Check auto-disconnect...
20.10 09:03:06 STATS: vdl.0 cache, locks:0
20.10 09:03:11 TIMER: Check auto-disconnect...
20.10 09:04:06 STATS: vdl.0 cache, locks:0
20.10 09:04:11 TIMER: Check auto-disconnect...
20.10 09:05:06 STATS: vdl.0 cache, locks:0
20.10 09:05:11 TIMER: Check auto-disconnect...
20.10 09:06:06 STATS: vdl.0 cache, locks:0
20.10 09:06:11 TIMER: Check auto-disconnect...
20.10 09:07:06 STATS: vdl.0 cache, locks:0
20.10 09:07:11 TIMER: Check auto-disconnect...
20.10 09:08:06 STATS: vdl.0 cache, locks:0
20.10 09:08:11 TIMER: Check auto-disconnect...
20.10 09:09:06 STATS: vdl.0 cache, locks:0
20.10 09:09:11 TIMER: Check auto-disconnect...
20.10 09:10:06 STATS: vdl.0 cache, locks:0
20.10 09:10:11 TIMER: Check auto-disconnect...
20.10 09:11:06 STATS: vdl.0 cache, locks:0
20.10 09:11:11 TIMER: Check auto-disconnect...
20.10 09:12:06 STATS: vdl.0 cache, locks:0
20.10 09:12:11 TIMER: Check auto-disconnect...
20.10 09:13:06 STATS: vdl.0 cache, locks:0
20.10 09:13:11 TIMER: Check auto-disconnect...
20.10 09:14:06 STATS: vdl.0 cache, locks:0
20.10 09:14:11 TIMER: Check auto-disconnect...
20.10 09:15:06 STATS: vdl.0 cache, locks:0
20.10 09:15:11 TIMER: Check auto-disconnect...
20.10 09:16:06 STATS: vdl.0 cache, locks:0
20.10 09:16:11 TIMER: Check auto-disconnect...
20.10 09:17:06 STATS: vdl.0 cache, locks:0
20.10 09:17:11 TIMER: Check auto-disconnect...
20.10 09:18:06 STATS: vdl.0 cache, locks:0
20.10 09:18:11 TIMER: Check auto-disconnect...
20.10 09:19:06 STATS: vdl.0 cache, locks:0
20.10 09:19:11 TIMER: Check auto-disconnect...
20.10 09:20:06 STATS: vdl.0 cache, locks:0
20.10 09:20:11 TIMER: Check auto-disconnect...
20.10 09:21:06 STATS: vdl.0 cache, locks:0
20.10 09:21:11 TIMER: Check auto-disconnect...
20.10 09:22:06 STATS: vdl.0 cache, locks:0
20.10 09:22:11 TIMER: Check auto-disconnect...
20.10 09:23:06 STATS: vdl.0 cache, locks:0
20.10 09:23:11 TIMER: Check auto-disconnect...
20.10 09:24:06 STATS: vdl.0 cache, locks:0
20.10 09:24:11 TIMER: Check auto-disconnect...
20.10 09:25:06 STATS: vdl.0 cache, locks:0
20.10 09:25:11 TIMER: Check auto-disconnect...
20.10 09:26:06 STATS: vdl.0 cache, locks:0
20.10 09:26:11 TIMER: Check auto-disconnect...
20.10 09:27:06 STATS: vdl.0 cache, locks:0
20.10 09:27:11 TIMER: Check auto-disconnect...
20.10 09:28:06 STATS: vdl.0 cache, locks:0
20.10 09:28:11 TIMER: Check auto-disconnect...
20.10 09:29:06 STATS: vdl.0 cache, locks:0
20.10 09:29:11 TIMER: Check auto-disconnect...
20.10 09:30:06 STATS: vdl.0 cache, locks:0
20.10 09:30:11 TIMER: Check auto-disconnect...
20.10 09:31:06 STATS: vdl.0 cache, locks:0
20.10 09:31:11 TIMER: Check auto-disconnect...
20.10 09:32:06 STATS: vdl.0 cache, locks:0
20.10 09:32:11 TIMER: Check auto-disconnect...
20.10 09:33:06 STATS: vdl.0 cache, locks:0
20.10 09:33:11 TIMER: Check auto-disconnect...
20.10 09:34:06 STATS: vdl.0 cache, locks:0
20.10 09:34:11 TIMER: Check auto-disconnect...
20.10 09:35:06 STATS: vdl.0 cache, locks:0
20.10 09:35:11 TIMER: Check auto-disconnect...
20.10 09:36:06 STATS: vdl.0 cache, locks:0
20.10 09:36:11 TIMER: Check auto-disconnect...
20.10 09:37:06 STATS: vdl.0 cache, locks:0
20.10 09:37:11 TIMER: Check auto-disconnect...
20.10 09:37:53 NET: Client (conid:24370670) connected to vdl.0 (clients:1)
20.10 09:38:00 ++ NET: null req: user.login { password => test, name => test1, messageType => user.login }
20.10 09:38:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'test1' AND Password = 'test'
20.10 09:38:00 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'test1' AND Password = 'test', _type => core/server.query }
20.10 09:38:00 -<<-: core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
20.10 09:38:00 STATS: vdl.0 cache connection, 1117 calls, total 1.29090332984924 sec spent, avg 1.16 ms
20.10 09:38:00 ->>-: core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
20.10 09:38:00 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 09:38:00 ->>-: core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
20.10 09:38:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {chemrating => 0, biorating => 0, networktype =>   , level => 0, sex => male, networkid => , skinbase => {"body_skin": 1, "head_skin": 1, "hair": 1, "eyes": 1, "mouth": 1}, informaticrating => 0, isbanned => false, params => { attrs => { _lastTime.24hr => 1476953692, lastLoginDate => 264, lastLoadDate => 1021 }, effects => { list => [] } }, name => test1, skinaddavaliable => {"head : null; dress : null; weapon : null; acess : null"}, deleted => false, historyrating => 0, school => 1, rang => 0, georating => 0, password => test, language => en, region => 1, skinadditional => {"head": 0, "dress": 0, "acces": 0, "weapon": 0}, rangname => новичок                       , rusrating => 0, email => , mathrating => 0, regdate => 2016-09-02 18:16:02.951845+00, expirience => 0, city => 1, physrating => 0}, version => 0, id => 3 } }
20.10 09:38:00 ->>-: core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
20.10 09:38:00 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
20.10 09:38:00 NET: Client login (conid:24370670, id:3, name:test1)
20.10 09:38:00 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 95.153.131.151 }
20.10 09:38:00 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.10 09:38:00 DB: SELECT token FROM tokens WHERE userid = 3
20.10 09:38:00 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 3, _type => core/server.query }
20.10 09:38:00 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 09:38:00 TRACE: Invalid field access : token
20.10 09:38:00 TRACE: 
Called from snipe/slave/Server.hx line 929
Called from snipe/slave/Server.hx line 901
Called from snipe/slave/Server.hx line 1171
20.10 09:38:00 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 3, _type => core/cache.update }
20.10 09:38:00 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 09:38:00 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
20.10 09:38:00 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 09:38:00 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
20.10 09:38:00 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 09:38:00 TRACE: Could not login.
20.10 09:38:00 TRACE: 
Called from snipe/slave/Server.hx line 1198
Called from snipe/slave/MetaServer.hx line 530
Called from snipe/slave/ThreadServerModified.hx line 202
20.10 09:38:06 STATS: vdl.0 cache, locks:0
20.10 09:38:11 TIMER: Check auto-disconnect...
20.10 09:38:25 ++ NET: test1 req: user.login { password => 0310, name => many, messageType => user.login }
20.10 09:38:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310'
20.10 09:38:25 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310', _type => core/server.query }
20.10 09:38:25 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 09:38:25 == NET: test1 ret: user.login { type => user.login, errorCode => userNotFound }
20.10 09:38:34 ++ NET: test1 req: user.login { password => 0310, name => many, messageType => user.login }
20.10 09:38:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310'
20.10 09:38:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310', _type => core/server.query }
20.10 09:38:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 09:38:34 ++ NET: test1 req: user.login { password => 0310, name => many, messageType => user.login }
20.10 09:38:34 == NET: test1 ret: user.login { type => user.login, errorCode => userNotFound }
20.10 09:38:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310'
20.10 09:38:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310', _type => core/server.query }
20.10 09:38:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 09:38:34 ++ NET: test1 req: user.login { password => 0310, name => many, messageType => user.login }
20.10 09:38:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310'
20.10 09:38:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310', _type => core/server.query }
20.10 09:38:34 == NET: test1 ret: user.login { type => user.login, errorCode => userNotFound }
20.10 09:38:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 09:38:34 ++ NET: test1 req: user.login { password => 0310, name => many, messageType => user.login }
20.10 09:38:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310'
20.10 09:38:34 == NET: test1 ret: user.login { type => user.login, errorCode => userNotFound }
20.10 09:38:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'many' AND Password = '0310', _type => core/server.query }
20.10 09:38:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 09:38:34 == NET: test1 ret: user.login { type => user.login, errorCode => userNotFound }
20.10 09:38:39 ++ NET: test1 req: battle.sendtask { dice => 0, from => (0.0, 0.0), roomId => 0, name => throw, side => 2, dices => 435251, messageType => battle.sendtask, to => (0.0, 0.0), diceID => 0 }
20.10 09:38:39 TRACE: User not logon yet.
20.10 09:38:44 ++ NET: test1 req: battle.end { roomId => 0, scoreSecondPlayer => 0, messageType => battle.end, scoreFirstPlayer => 0 }
20.10 09:38:44 TRACE: User not logon yet.
20.10 09:39:06 STATS: vdl.0 cache, locks:0
20.10 09:39:11 TIMER: Check auto-disconnect...
20.10 09:40:06 STATS: vdl.0 cache, locks:0
20.10 09:40:11 TIMER: Check auto-disconnect...
20.10 09:41:06 STATS: vdl.0 cache, locks:0
20.10 09:41:11 TIMER: Check auto-disconnect...
20.10 09:42:06 STATS: vdl.0 cache, locks:0
20.10 09:42:11 TIMER: Check auto-disconnect...
20.10 09:42:11 NET: Client (name:test1 conid:24370670 TCP) disconnected from vdl.0 (clients:0)
20.10 09:43:06 STATS: vdl.0 cache, locks:0
20.10 09:43:11 TIMER: Check auto-disconnect...
20.10 09:44:06 STATS: vdl.0 cache, locks:0
20.10 09:44:11 TIMER: Check auto-disconnect...
20.10 09:45:06 STATS: vdl.0 cache, locks:0
20.10 09:45:11 TIMER: Check auto-disconnect...
20.10 09:46:06 STATS: vdl.0 cache, locks:0
20.10 09:46:11 TIMER: Check auto-disconnect...
20.10 09:47:06 STATS: vdl.0 cache, locks:0
20.10 09:47:11 TIMER: Check auto-disconnect...
20.10 09:48:06 STATS: vdl.0 cache, locks:0
20.10 09:48:11 TIMER: Check auto-disconnect...
20.10 09:49:06 STATS: vdl.0 cache, locks:0
20.10 09:49:11 TIMER: Check auto-disconnect...
20.10 09:50:06 STATS: vdl.0 cache, locks:0
20.10 09:50:11 TIMER: Check auto-disconnect...
20.10 09:51:06 STATS: vdl.0 cache, locks:0
20.10 09:51:11 TIMER: Check auto-disconnect...
20.10 09:52:06 STATS: vdl.0 cache, locks:0
20.10 09:52:11 TIMER: Check auto-disconnect...
20.10 09:53:06 STATS: vdl.0 cache, locks:0
20.10 09:53:11 TIMER: Check auto-disconnect...
20.10 09:54:06 STATS: vdl.0 cache, locks:0
20.10 09:54:11 TIMER: Check auto-disconnect...
20.10 09:55:06 STATS: vdl.0 cache, locks:0
20.10 09:55:11 TIMER: Check auto-disconnect...
20.10 09:56:06 STATS: vdl.0 cache, locks:0
20.10 09:56:11 TIMER: Check auto-disconnect...
20.10 09:57:06 STATS: vdl.0 cache, locks:0
20.10 09:57:11 TIMER: Check auto-disconnect...
20.10 09:58:06 STATS: vdl.0 cache, locks:0
20.10 09:58:11 TIMER: Check auto-disconnect...
20.10 09:59:06 STATS: vdl.0 cache, locks:0
20.10 09:59:11 TIMER: Check auto-disconnect...
