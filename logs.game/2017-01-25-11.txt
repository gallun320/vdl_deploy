25.01 11:33:42 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
25.01 11:33:42 -<<-: server.login ok
25.01 11:33:42 DB: SELECT * FROM LocalizationStrings
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 TIMER: Starting timer...
25.01 11:33:42 TIMER: Timer running...
25.01 11:33:42 DB: SELECT * FROM GameVars
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
25.01 11:33:42 -<<-: core/quest.getDaily ok
25.01 11:33:42 DB: SELECT * FROM UserAttributeTypes
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM UserVariableTypes
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.01 11:33:42 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM ItemGroups
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM Bundles ORDER BY ID
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM BundleItems ORDER BY ID
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 SHOP: loading items...
25.01 11:33:42 ->>-: core/shop.getList { _type => core/shop.getList }
25.01 11:33:42 -<<-: core/shop.getList ok
25.01 11:33:42 SHOP: 0 items loaded (0.001 sec)
25.01 11:33:42 DB: SELECT * FROM EffectAttributeTypes
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM Effects
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.01 11:33:42 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.01 11:33:42 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT * FROM Badges
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 NET: Client (conid:84446810) connected to vdl.0 (clients:1)
25.01 11:33:42 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer2, messageType => user.login }
25.01 11:33:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer2' AND Password = 'kO2YJdf'
25.01 11:33:42 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer2' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 == NET: null ret: user.login { type => user.login, errorCode => userNotFound }
25.01 11:33:42 NET: Client (name:null conid:84446810 TCP) disconnected from vdl.0 (clients:0)
25.01 11:33:42 NET: Client (conid:95826699) connected to vdl.0 (clients:1)
25.01 11:33:42 ++ NET: null req: user.register { messageType => user.register }
25.01 11:33:42 DB: SELECT * FROM users
25.01 11:33:42 ->>-: core/server.query { q => SELECT * FROM users, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 == NET: null ret: user.auth { type => user.auth, token => dWlkMTYz }
25.01 11:33:42 DB: SELECT ID FROM Users WHERE Name = 'uid163'
25.01 11:33:42 ->>-: core/server.query { q => SELECT ID FROM Users WHERE Name = 'uid163', _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 DB: SELECT nextval('Users_id_seq') AS id
25.01 11:33:42 ->>-: core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query ok
25.01 11:33:42 ->>-: core/user.register { password => uid163, name => uid163, fullParams => { password => uid163, name => uid163, networkid => , networktype => , messageType => user.register, id => 163 }, networkid => , connectionID => 95826699, networktype => , email => , id => 163, _type => core/user.register }
25.01 11:33:42 -<<-: core/user.register ok
25.01 11:33:42 -<<-: core/user.registerResponse { password => uid163, name => uid163, _isNotify => true, fullParams => { password => uid163, name => uid163, networkid => , networktype => , messageType => user.register, id => 163 }, networkid => , connectionID => 95826699, networktype => , email => , id => 163, _type => core/user.registerResponse }
25.01 11:33:42 DB: SELECT token FROM tokens WHERE userid = 163
25.01 11:33:42 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 163, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query { list => {{ token => c81a3566b83458e5f9f489acaeb88f9a }}, errorCode => ok, _type => core/server.query }
25.01 11:33:42 == NET: null ret: user.register { type => user.register, errorCode => ok, token => c81a3566b83458e5f9f489acaeb88f9a }
25.01 11:33:42 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYz }
25.01 11:33:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid163' AND Password = 'uid163'
25.01 11:33:42 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid163' AND Password = 'uid163', _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query { list => {{ name => uid163, networkid => , isbanned => false, id => 163 }}, errorCode => ok, _type => core/server.query }
25.01 11:33:42 ->>-: core/user.isOnlineID { id => 163, _type => core/user.isOnlineID }
25.01 11:33:42 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 11:33:42 ->>-: core/cache.get { type => user, v => -1, id => 163, _type => core/cache.get }
25.01 11:33:42 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid163, deleted => false, year => , email => mail, networktype =>   , password => uid163, isbanned => false, regdate => 2017-01-25 11:33:42.70352+00, city => , language =>   , networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 163 } }
25.01 11:33:42 ->>-: core/cache.get { type => questdata, v => -1, id => 163, _type => core/cache.get }
25.01 11:33:42 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 163 } }
25.01 11:33:42 NET: Client login (conid:95826699, id:163, name:uid163)
25.01 11:33:42 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 163, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 11:33:42 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 11:33:42 DB: SELECT token FROM tokens WHERE userid = 163
25.01 11:33:42 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 163, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query { list => {{ token => c81a3566b83458e5f9f489acaeb88f9a }}, errorCode => ok, _type => core/server.query }
25.01 11:33:42 DB: SELECT ID FROM TempUserLogins WHERE UserID = 163 AND Date = 'today'::timestamp
25.01 11:33:42 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 163 AND Date = 'today'::timestamp, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 11:33:42 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (163, 'today'::timestamp)
25.01 11:33:42 == NET: uid163 ret: user.login { name => uid163, type => user.login, errorCode => ok, id => 163, token => c81a3566b83458e5f9f489acaeb88f9a }
25.01 11:33:42 == NET: uid163 ret: user.join { name => uid163, type => user.join }
25.01 11:33:42 ++ NET: uid163 req: user.login { messageType => user.login, token => dWlkMTYz }
25.01 11:33:42 DB: SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true
25.01 11:33:42 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true, _type => core/server.query, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (163, 'today'::timestamp), _type => core/server.pending }} }
25.01 11:33:42 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 11:33:42 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:33:42 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.01 11:33:42 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:33:42 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.01 11:33:42 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1485344022, lastLoginDate => 25, lastLoadDate => 126 } }}, type => user, unlock => true, id => 163, _type => core/cache.update }
25.01 11:33:42 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.01 11:33:42 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 163, _type => core/cache.update }
25.01 11:33:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.01 11:33:42 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 163, _type => core/user.logoutPost }
25.01 11:33:42 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.01 11:33:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid163' AND Password = 'uid163'
25.01 11:33:42 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid163' AND Password = 'uid163', _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query { list => {{ name => uid163, networkid => , isbanned => false, id => 163 }}, errorCode => ok, _type => core/server.query }
25.01 11:33:42 ->>-: core/user.isOnlineID { id => 163, _type => core/user.isOnlineID }
25.01 11:33:42 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 11:33:42 ->>-: core/cache.get { type => user, v => -1, id => 163, _type => core/cache.get }
25.01 11:33:42 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid163, deleted => false, year => , email => mail, networktype =>   , password => uid163, isbanned => false, regdate => 2017-01-25 11:33:42.70352+00, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1485344022, lastLoginDate => 25, lastLoadDate => 126 }, effects => { list => [] } }}, version => 2, id => 163 } }
25.01 11:33:42 ->>-: core/cache.get { type => questdata, v => -1, id => 163, _type => core/cache.get }
25.01 11:33:42 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 163 } }
25.01 11:33:42 NET: Client login (conid:95826699, id:163, name:uid163)
25.01 11:33:42 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 163, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 11:33:42 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 11:33:42 DB: SELECT token FROM tokens WHERE userid = 163
25.01 11:33:42 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 163, _type => core/server.query }
25.01 11:33:42 -<<-: core/server.query { list => {{ token => c81a3566b83458e5f9f489acaeb88f9a }}, errorCode => ok, _type => core/server.query }
25.01 11:33:52 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 163, _type => core/cache.update }
25.01 11:33:52 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
25.01 11:34:04 NET: Client (name:uid163 conid:95826699 TCP) disconnected from vdl.0 (clients:0)
25.01 11:34:04 DB: SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true
25.01 11:34:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true, _type => core/server.query }
25.01 11:34:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 11:34:04 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:34:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.01 11:34:04 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:34:04 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.01 11:34:04 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 163, _type => core/cache.update }
25.01 11:34:04 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
25.01 11:34:04 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 163, _type => core/cache.update }
25.01 11:34:04 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.01 11:34:04 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 163, _type => core/user.logoutPost }
25.01 11:34:04 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.01 11:34:04 NET: Client (conid:85014960) connected to vdl.0 (clients:1)
25.01 11:34:04 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.01 11:34:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
25.01 11:34:04 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 11:34:04 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 28 }}, errorCode => ok, _type => core/server.query }
25.01 11:34:04 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
25.01 11:34:04 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 11:34:04 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
25.01 11:34:04 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, year => , email => raBpoLL1@ya.ru, networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-11-20 13:52:24.495988+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1482929689, lastLoginDate => 364, money => 13, lastLoadDate => 1230 }, effects => { list => [] } }}, version => 0, id => 28 } }
25.01 11:34:04 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
25.01 11:34:04 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 28 } }
25.01 11:34:04 NET: Client login (conid:85014960, id:28, name:Aimer)
25.01 11:34:04 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 11:34:04 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 11:34:04 DB: SELECT token FROM tokens WHERE userid = 28
25.01 11:34:04 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
25.01 11:34:04 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
25.01 11:34:04 DB: SELECT ID FROM TempUserLogins WHERE UserID = 28 AND Date = 'today'::timestamp
25.01 11:34:04 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 28 AND Date = 'today'::timestamp, _type => core/server.query }
25.01 11:34:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 11:34:04 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (28, 'today'::timestamp)
25.01 11:34:04 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
25.01 11:34:04 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.01 11:34:04 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (28, 'today'::timestamp), _type => core/server.pending }} }
25.01 11:34:04 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
25.01 11:34:04 ++ NET: Aimer req: user.data { messageType => user.data }
25.01 11:34:04 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 13 }
25.01 11:34:04 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 11:34:04 TIME: user.data 0.49 ms
25.01 11:34:04 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 11:34:05 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:34:05 TIME: user.ping 0.22 ms
25.01 11:34:05 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:34:12 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1485344044, lastLoginDate => 25, lastLoadDate => 126 } }}, type => user, unlock => false, id => 28, _type => core/cache.update }
25.01 11:34:12 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.01 11:34:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:34:26 TIME: user.ping 0.14 ms
25.01 11:34:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:34:42 TIMER: Check auto-disconnect...
25.01 11:34:42 STATS: vdl.0 cache, locks:2
25.01 11:34:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:34:48 TIME: user.ping 0.15 ms
25.01 11:34:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:35:09 ++ NET: Aimer req: user.searchEnemy { name => uid, messageType => user.searchEnemy }
25.01 11:35:09 ->>-: vdl/cache.user.searchEnemy { name => uid, id => 28, _type => vdl/cache.user.searchEnemy }
25.01 11:35:09 -<<-: vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid44, isOnline => false, id => 44 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid160, isOnline => false, id => 160 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid149, isOnline => false, id => 149 },{ name => uid143, isOnline => false, id => 143 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid144, isOnline => false, id => 144 },{ name => uid145, isOnline => false, id => 145 },{ name => uid112, isOnline => false, id => 112 },{ name => uid150, isOnline => false, id => 150 },{ name => uid127, isOnline => false, id => 127 },{ name => uid133, isOnline => false, id => 133 },{ name => uid134, isOnline => false, id => 134 },{ name => uid132, isOnline => false, id => 132 },{ name => uid135, isOnline => false, id => 135 },{ name => uid136, isOnline => false, id => 136 },{ name => uid137, isOnline => false, id => 137 },{ name => uid138, isOnline => false, id => 138 },{ name => uid139, isOnline => false, id => 139 },{ name => uid140, isOnline => false, id => 140 },{ name => uid141, isOnline => false, id => 141 },{ name => uid142, isOnline => false, id => 142 },{ name => uid147, isOnline => false, id => 147 },{ name => uid146, isOnline => false, id => 146 },{ name => uid148, isOnline => false, id => 148 },{ name => uid151, isOnline => false, id => 151 },{ name => uid152, isOnline => false, id => 152 },{ name => uid153, isOnline => false, id => 153 },{ name => uid154, isOnline => false, id => 154 },{ name => uid155, isOnline => false, id => 155 },{ name => uid156, isOnline => false, id => 156 },{ name => uid157, isOnline => false, id => 157 },{ name => uid158, isOnline => false, id => 158 },{ name => uid159, isOnline => false, id => 159 },{ name => uid161, isOnline => false, id => 161 },{ name => uid162, isOnline => false, id => 162 },{ name => uid163, isOnline => false, id => 163 }] }
25.01 11:35:09 STATS: vdl.0 cache connection, 61 calls, total 0.0946130752563477 sec spent, avg 1.55 ms
25.01 11:35:09 TIME: user.searchEnemy 4.82 ms
25.01 11:35:09 == NET: Aimer ret: user.searchEnemy { list => [{ name => uid16, isOnline => false, id => 16 },{ name => uid2, isOnline => false, id => 2 },{ name => uid3, isOnline => false, id => 3 },{ name => uid4, isOnline => false, id => 4 },{ name => uid5, isOnline => false, id => 5 },{ name => uid39, isOnline => false, id => 39 },{ name => uid40, isOnline => false, id => 40 },{ name => uid11, isOnline => false, id => 11 },{ name => uid23, isOnline => false, id => 23 },{ name => uid24, isOnline => false, id => 24 },{ name => uid6, isOnline => false, id => 6 },{ name => uid25, isOnline => false, id => 25 },{ name => uid13, isOnline => false, id => 13 },{ name => uid14, isOnline => false, id => 14 },{ name => uid7, isOnline => false, id => 7 },{ name => uid41, isOnline => false, id => 41 },{ name => uid22, isOnline => false, id => 22 },{ name => uid26, isOnline => false, id => 26 },{ name => uid42, isOnline => false, id => 42 },{ name => uid27, isOnline => false, id => 27 },{ name => uid43, isOnline => false, id => 43 },{ name => uid17, isOnline => false, id => 17 },{ name => uid19, isOnline => false, id => 19 },{ name => uid18, isOnline => false, id => 18 },{ name => uid21, isOnline => false, id => 21 },{ name => uid12, isOnline => false, id => 12 },{ name => uid45, isOnline => false, id => 45 },{ name => uid8, isOnline => false, id => 8 },{ name => uid10, isOnline => false, id => 10 },{ name => uid29, isOnline => false, id => 29 },{ name => uid9, isOnline => false, id => 9 },{ name => uid46, isOnline => false, id => 46 },{ name => uid47, isOnline => false, id => 47 },{ name => uid48, isOnline => false, id => 48 },{ name => uid20, isOnline => false, id => 20 },{ name => uid44, isOnline => false, id => 44 },{ name => uid31, isOnline => false, id => 31 },{ name => uid32, isOnline => false, id => 32 },{ name => uid33, isOnline => false, id => 33 },{ name => uid34, isOnline => false, id => 34 },{ name => uid35, isOnline => false, id => 35 },{ name => uid36, isOnline => false, id => 36 },{ name => uid37, isOnline => false, id => 37 },{ name => uid38, isOnline => false, id => 38 },{ name => uid49, isOnline => false, id => 49 },{ name => uid50, isOnline => false, id => 50 },{ name => uid51, isOnline => false, id => 51 },{ name => uid52, isOnline => false, id => 52 },{ name => uid53, isOnline => false, id => 53 },{ name => uid54, isOnline => false, id => 54 },{ name => uid55, isOnline => false, id => 55 },{ name => uid56, isOnline => false, id => 56 },{ name => uid57, isOnline => false, id => 57 },{ name => uid58, isOnline => false, id => 58 },{ name => uid59, isOnline => false, id => 59 },{ name => uid60, isOnline => false, id => 60 },{ name => uid61, isOnline => false, id => 61 },{ name => uid62, isOnline => false, id => 62 },{ name => uid63, isOnline => false, id => 63 },{ name => uid64, isOnline => false, id => 64 },{ name => uid65, isOnline => false, id => 65 },{ name => uid66, isOnline => false, id => 66 },{ name => uid67, isOnline => false, id => 67 },{ name => uid68, isOnline => false, id => 68 },{ name => uid69, isOnline => false, id => 69 },{ name => uid70, isOnline => false, id => 70 },{ name => uid71, isOnline => false, id => 71 },{ name => uid72, isOnline => false, id => 72 },{ name => uid73, isOnline => false, id => 73 },{ name => uid74, isOnline => false, id => 74 },{ name => uid75, isOnline => false, id => 75 },{ name => uid76, isOnline => false, id => 76 },{ name => uid77, isOnline => false, id => 77 },{ name => uid78, isOnline => false, id => 78 },{ name => uid79, isOnline => false, id => 79 },{ name => uid80, isOnline => false, id => 80 },{ name => uid81, isOnline => false, id => 81 },{ name => uid82, isOnline => false, id => 82 },{ name => uid86, isOnline => false, id => 86 },{ name => uid83, isOnline => false, id => 83 },{ name => uid87, isOnline => false, id => 87 },{ name => uid84, isOnline => false, id => 84 },{ name => uid88, isOnline => false, id => 88 },{ name => uid85, isOnline => false, id => 85 },{ name => uid89, isOnline => false, id => 89 },{ name => uid90, isOnline => false, id => 90 },{ name => uid91, isOnline => false, id => 91 },{ name => uid92, isOnline => false, id => 92 },{ name => uid93, isOnline => false, id => 93 },{ name => uid94, isOnline => false, id => 94 },{ name => uid95, isOnline => false, id => 95 },{ name => uid96, isOnline => false, id => 96 },{ name => uid97, isOnline => false, id => 97 },{ name => uid98, isOnline => false, id => 98 },{ name => uid99, isOnline => false, id => 99 },{ name => uid100, isOnline => false, id => 100 },{ name => uid101, isOnline => false, id => 101 },{ name => uid102, isOnline => false, id => 102 },{ name => uid103, isOnline => false, id => 103 },{ name => uid104, isOnline => false, id => 104 },{ name => uid105, isOnline => false, id => 105 },{ name => uid106, isOnline => false, id => 106 },{ name => uid107, isOnline => false, id => 107 },{ name => uid108, isOnline => false, id => 108 },{ name => uid109, isOnline => false, id => 109 },{ name => uid110, isOnline => false, id => 110 },{ name => uid113, isOnline => false, id => 113 },{ name => uid114, isOnline => false, id => 114 },{ name => uid115, isOnline => false, id => 115 },{ name => uid116, isOnline => false, id => 116 },{ name => uid118, isOnline => false, id => 118 },{ name => uid119, isOnline => false, id => 119 },{ name => uid120, isOnline => false, id => 120 },{ name => uid121, isOnline => false, id => 121 },{ name => uid122, isOnline => false, id => 122 },{ name => uid123, isOnline => false, id => 123 },{ name => uid128, isOnline => false, id => 128 },{ name => uid130, isOnline => false, id => 130 },{ name => uid160, isOnline => false, id => 160 },{ name => uid15, isOnline => false, id => 15 },{ name => uid125, isOnline => false, id => 125 },{ name => uid126, isOnline => false, id => 126 },{ name => uid129, isOnline => false, id => 129 },{ name => uid149, isOnline => false, id => 149 },{ name => uid143, isOnline => false, id => 143 },{ name => uid131, isOnline => false, id => 131 },{ name => uid111, isOnline => false, id => 111 },{ name => uid30, isOnline => false, id => 30 },{ name => uid144, isOnline => false, id => 144 },{ name => uid145, isOnline => false, id => 145 },{ name => uid112, isOnline => false, id => 112 },{ name => uid150, isOnline => false, id => 150 },{ name => uid127, isOnline => false, id => 127 },{ name => uid133, isOnline => false, id => 133 },{ name => uid134, isOnline => false, id => 134 },{ name => uid132, isOnline => false, id => 132 },{ name => uid135, isOnline => false, id => 135 },{ name => uid136, isOnline => false, id => 136 },{ name => uid137, isOnline => false, id => 137 },{ name => uid138, isOnline => false, id => 138 },{ name => uid139, isOnline => false, id => 139 },{ name => uid140, isOnline => false, id => 140 },{ name => uid141, isOnline => false, id => 141 },{ name => uid142, isOnline => false, id => 142 },{ name => uid147, isOnline => false, id => 147 },{ name => uid146, isOnline => false, id => 146 },{ name => uid148, isOnline => false, id => 148 },{ name => uid151, isOnline => false, id => 151 },{ name => uid152, isOnline => false, id => 152 },{ name => uid153, isOnline => false, id => 153 },{ name => uid154, isOnline => false, id => 154 },{ name => uid155, isOnline => false, id => 155 },{ name => uid156, isOnline => false, id => 156 },{ name => uid157, isOnline => false, id => 157 },{ name => uid158, isOnline => false, id => 158 },{ name => uid159, isOnline => false, id => 159 },{ name => uid161, isOnline => false, id => 161 },{ name => uid162, isOnline => false, id => 162 },{ name => uid163, isOnline => false, id => 163 }], type => user.searchEnemy, errorCode => ok }
25.01 11:35:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:35:09 TIME: user.ping 0.15 ms
25.01 11:35:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:35:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:35:26 TIME: user.ping 0.15 ms
25.01 11:35:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:35:42 TIMER: Check auto-disconnect...
25.01 11:35:42 STATS: vdl.0 cache, locks:2
25.01 11:35:45 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:35:45 TIME: user.ping 0.13 ms
25.01 11:35:45 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:36:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:36:01 TIME: user.ping 0.43 ms
25.01 11:36:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:36:19 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:36:19 TIME: user.ping 0.16 ms
25.01 11:36:19 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:36:41 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:36:41 TIME: user.ping 0.14 ms
25.01 11:36:41 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:36:42 TIMER: Check auto-disconnect...
25.01 11:36:42 STATS: vdl.0 cache, locks:2
25.01 11:37:02 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:37:02 TIME: user.ping 0.15 ms
25.01 11:37:02 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:37:24 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:37:24 TIME: user.ping 0.21 ms
25.01 11:37:24 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:37:42 TIMER: Check auto-disconnect...
25.01 11:37:42 STATS: vdl.0 cache, locks:2
25.01 11:37:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:37:46 TIME: user.ping 0.17 ms
25.01 11:37:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:38:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:38:06 TIME: user.ping 0.18 ms
25.01 11:38:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:38:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:38:27 TIME: user.ping 0.13 ms
25.01 11:38:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:38:42 TIMER: Check auto-disconnect...
25.01 11:38:42 STATS: vdl.0 cache, locks:2
25.01 11:38:49 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:38:49 TIME: user.ping 0.24 ms
25.01 11:38:49 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:39:09 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:39:09 TIME: user.ping 0.17 ms
25.01 11:39:09 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:39:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:39:27 TIME: user.ping 0.14 ms
25.01 11:39:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:39:42 TIMER: Check auto-disconnect...
25.01 11:39:42 STATS: vdl.0 cache, locks:2
25.01 11:39:42 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:39:42 TIME: user.ping 0.16 ms
25.01 11:39:42 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:39:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:39:59 TIME: user.ping 0.22 ms
25.01 11:39:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:40:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:40:16 TIME: user.ping 0.16 ms
25.01 11:40:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:40:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:40:32 TIME: user.ping 0.15 ms
25.01 11:40:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:40:42 TIMER: Check auto-disconnect...
25.01 11:40:42 STATS: vdl.0 cache, locks:2
25.01 11:40:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:40:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:40:53 TIME: user.ping 0.18 ms
25.01 11:41:12 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:41:12 TIME: user.ping 0.18 ms
25.01 11:41:12 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:41:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:41:33 TIME: user.ping 0.14 ms
25.01 11:41:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:41:42 TIMER: Check auto-disconnect...
25.01 11:41:42 STATS: vdl.0 cache, locks:2
25.01 11:41:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:41:53 TIME: user.ping 0.17 ms
25.01 11:41:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:42:13 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:42:13 TIME: user.ping 0.13 ms
25.01 11:42:13 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:42:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:42:31 TIME: user.ping 0.15 ms
25.01 11:42:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:42:42 TIMER: Check auto-disconnect...
25.01 11:42:42 STATS: vdl.0 cache, locks:2
25.01 11:42:46 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:42:46 TIME: user.ping 0.14 ms
25.01 11:42:46 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:43:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:43:01 TIME: user.ping 0.31 ms
25.01 11:43:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:43:17 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:43:17 TIME: user.ping 0.15 ms
25.01 11:43:17 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:43:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:43:38 TIME: user.ping 0.13 ms
25.01 11:43:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:43:42 TIMER: Check auto-disconnect...
25.01 11:43:42 STATS: vdl.0 cache, locks:2
25.01 11:43:58 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:43:58 TIME: user.ping 0.25 ms
25.01 11:43:58 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:44:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:44:16 TIME: user.ping 0.15 ms
25.01 11:44:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:44:32 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:44:32 TIME: user.ping 0.27 ms
25.01 11:44:32 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:44:42 TIMER: Check auto-disconnect...
25.01 11:44:42 STATS: vdl.0 cache, locks:2
25.01 11:44:47 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:44:47 TIME: user.ping 0.18 ms
25.01 11:44:47 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:45:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:45:06 TIME: user.ping 0.18 ms
25.01 11:45:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:45:17 NET: Client (name:Aimer conid:85014960 TCP) disconnected from vdl.0 (clients:0)
25.01 11:45:17 DB: SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true
25.01 11:45:17 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true, _type => core/server.query }
25.01 11:45:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 11:45:17 STATS: vdl.0 cache connection, 62 calls, total 0.0956189632415771 sec spent, avg 1.54 ms
25.01 11:45:17 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:45:17 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.01 11:45:17 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:45:17 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.01 11:45:17 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 28, _type => core/cache.update }
25.01 11:45:17 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.01 11:45:17 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 28, _type => core/cache.update }
25.01 11:45:17 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.01 11:45:17 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 28, _type => core/user.logoutPost }
25.01 11:45:17 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.01 11:45:21 NET: Client (conid:97212252) connected to vdl.0 (clients:1)
25.01 11:45:22 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.01 11:45:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
25.01 11:45:22 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 11:45:22 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 28 }}, errorCode => ok, _type => core/server.query }
25.01 11:45:22 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
25.01 11:45:22 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 11:45:22 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
25.01 11:45:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, year => , email => raBpoLL1@ya.ru, networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-11-20 13:52:24.495988+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1485344044, lastLoginDate => 25, money => 13, lastLoadDate => 126 }, effects => { list => [] } }}, version => 2, id => 28 } }
25.01 11:45:22 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
25.01 11:45:22 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 28 } }
25.01 11:45:22 NET: Client login (conid:97212252, id:28, name:Aimer)
25.01 11:45:22 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 11:45:22 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 11:45:22 DB: SELECT token FROM tokens WHERE userid = 28
25.01 11:45:22 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
25.01 11:45:22 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
25.01 11:45:22 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
25.01 11:45:22 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.01 11:45:24 ++ NET: Aimer req: user.data { messageType => user.data }
25.01 11:45:24 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 13 }
25.01 11:45:24 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 11:45:24 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 11:45:24 TIME: user.data 0.43 ms
25.01 11:45:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:45:26 TIME: user.ping 0.15 ms
25.01 11:45:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:45:27 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 28, _type => core/cache.update }
25.01 11:45:27 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
25.01 11:45:42 TIMER: Check auto-disconnect...
25.01 11:45:42 STATS: vdl.0 cache, locks:2
25.01 11:45:42 TIMER: Check auto-disconnect...
25.01 11:45:42 STATS: vdl.0 cache, locks:2
25.01 11:46:52 NET: Client (name:Aimer conid:97212252 TCP) disconnected from vdl.0 (clients:0)
25.01 11:46:52 DB: SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true
25.01 11:46:52 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true, _type => core/server.query }
25.01 11:46:52 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 11:46:52 STATS: vdl.0 cache connection, 75 calls, total 0.103153944015503 sec spent, avg 1.38 ms
25.01 11:46:52 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:46:52 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.01 11:46:52 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:46:52 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.01 11:46:52 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 28, _type => core/cache.update }
25.01 11:46:52 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
25.01 11:46:52 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 28, _type => core/cache.update }
25.01 11:46:52 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.01 11:46:52 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 28, _type => core/user.logoutPost }
25.01 11:46:52 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.01 11:46:56 NET: Client (conid:20442236) connected to vdl.0 (clients:1)
25.01 11:46:57 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.01 11:46:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
25.01 11:46:57 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 11:46:57 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 28 }}, errorCode => ok, _type => core/server.query }
25.01 11:46:57 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
25.01 11:46:57 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 11:46:57 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
25.01 11:46:57 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, year => , email => raBpoLL1@ya.ru, networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-11-20 13:52:24.495988+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1485344044, lastLoginDate => 25, money => 13, lastLoadDate => 126 }, effects => { list => [] } }}, version => 4, id => 28 } }
25.01 11:46:57 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
25.01 11:46:57 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 28 } }
25.01 11:46:57 NET: Client login (conid:20442236, id:28, name:Aimer)
25.01 11:46:57 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 11:46:57 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 11:46:57 DB: SELECT token FROM tokens WHERE userid = 28
25.01 11:46:57 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
25.01 11:46:57 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
25.01 11:46:57 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
25.01 11:46:57 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.01 11:46:59 ++ NET: Aimer req: user.data { messageType => user.data }
25.01 11:46:59 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 13 }
25.01 11:46:59 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 11:46:59 TIME: user.data 0.32 ms
25.01 11:46:59 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 11:47:01 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:47:01 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:47:01 TIME: user.ping 0.28 ms
25.01 11:47:02 ++ NET: Aimer req: user.getFriendList { messageType => user.getFriendList }
25.01 11:47:02 ->>-: vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 28 }
25.01 11:47:02 -<<-: vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 11:47:02 TIME: user.getFriendList 0.4 ms
25.01 11:47:02 == NET: Aimer ret: user.getFriendList { list => [], type => user.getFriendList, errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 11:47:07 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 28, _type => core/cache.update }
25.01 11:47:07 -<<-: core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
25.01 11:47:23 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:47:23 TIME: user.ping 0.19 ms
25.01 11:47:23 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:47:42 TIMER: Check auto-disconnect...
25.01 11:47:42 STATS: vdl.0 cache, locks:2
25.01 11:47:44 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:47:44 TIME: user.ping 0.14 ms
25.01 11:47:44 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:48:06 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:48:06 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:48:06 TIME: user.ping 0.2 ms
25.01 11:48:28 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:48:28 TIME: user.ping 0.16 ms
25.01 11:48:28 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:48:42 TIMER: Check auto-disconnect...
25.01 11:48:42 STATS: vdl.0 cache, locks:2
25.01 11:48:49 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:48:49 TIME: user.ping 0.13 ms
25.01 11:48:49 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:49:11 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:49:11 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:49:11 TIME: user.ping 0.2 ms
25.01 11:49:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:49:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:49:33 TIME: user.ping 0.3 ms
25.01 11:49:42 TIMER: Check auto-disconnect...
25.01 11:49:42 STATS: vdl.0 cache, locks:2
25.01 11:49:54 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:49:54 TIME: user.ping 0.16 ms
25.01 11:49:54 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:50:07 NET: Client (name:Aimer conid:20442236 TCP) disconnected from vdl.0 (clients:0)
25.01 11:50:07 DB: SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true
25.01 11:50:07 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true, _type => core/server.query }
25.01 11:50:07 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 11:50:07 STATS: vdl.0 cache connection, 89 calls, total 0.109780788421631 sec spent, avg 1.23 ms
25.01 11:50:07 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:50:07 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.01 11:50:07 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:50:07 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.01 11:50:07 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 28, _type => core/cache.update }
25.01 11:50:07 -<<-: core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
25.01 11:50:07 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 28, _type => core/cache.update }
25.01 11:50:07 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
25.01 11:50:07 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 28, _type => core/user.logoutPost }
25.01 11:50:07 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.01 11:50:11 NET: Client (conid:12067063) connected to vdl.0 (clients:1)
25.01 11:50:12 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.01 11:50:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
25.01 11:50:12 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 11:50:12 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 28 }}, errorCode => ok, _type => core/server.query }
25.01 11:50:12 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
25.01 11:50:12 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.01 11:50:12 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
25.01 11:50:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, year => , email => raBpoLL1@ya.ru, networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-11-20 13:52:24.495988+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1485344044, lastLoginDate => 25, money => 13, lastLoadDate => 126 }, effects => { list => [] } }}, version => 6, id => 28 } }
25.01 11:50:12 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
25.01 11:50:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 3, id => 28 } }
25.01 11:50:12 NET: Client login (conid:12067063, id:28, name:Aimer)
25.01 11:50:12 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 11:50:12 -<<-: core/user.loginPost { _type => core/user.loginPost }
25.01 11:50:12 DB: SELECT token FROM tokens WHERE userid = 28
25.01 11:50:12 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
25.01 11:50:12 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
25.01 11:50:12 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
25.01 11:50:12 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.01 11:50:14 ++ NET: Aimer req: user.data { messageType => user.data }
25.01 11:50:14 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 13 }
25.01 11:50:14 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 11:50:14 TIME: user.data 0.37 ms
25.01 11:50:14 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 11:50:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:50:16 TIME: user.ping 0.14 ms
25.01 11:50:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:50:22 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 28, _type => core/cache.update }
25.01 11:50:22 -<<-: core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
25.01 11:50:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:50:38 TIME: user.ping 0.23 ms
25.01 11:50:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:50:42 TIMER: Check auto-disconnect...
25.01 11:50:42 STATS: vdl.0 cache, locks:2
25.01 11:50:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:50:59 TIME: user.ping 0.21 ms
25.01 11:50:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:51:20 ++ NET: Aimer req: user.getFriendList { messageType => user.getFriendList }
25.01 11:51:20 ->>-: vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 28 }
25.01 11:51:20 -<<-: vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 11:51:20 STATS: vdl.0 cache connection, 102 calls, total 0.115353584289551 sec spent, avg 1.13 ms
25.01 11:51:20 TIME: user.getFriendList 0.7 ms
25.01 11:51:20 == NET: Aimer ret: user.getFriendList { list => [], type => user.getFriendList, errorCode => ok, _type => vdl/cache.user.getFriendList }
25.01 11:51:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:51:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:51:21 TIME: user.ping 0.28 ms
25.01 11:51:42 TIMER: Check auto-disconnect...
25.01 11:51:42 STATS: vdl.0 cache, locks:2
25.01 11:51:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:51:43 TIME: user.ping 0.13 ms
25.01 11:51:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:52:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:52:04 TIME: user.ping 0.14 ms
25.01 11:52:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:52:26 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:52:26 TIME: user.ping 0.15 ms
25.01 11:52:26 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:52:42 TIMER: Check auto-disconnect...
25.01 11:52:42 STATS: vdl.0 cache, locks:2
25.01 11:52:48 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:52:48 TIME: user.ping 0.23 ms
25.01 11:52:48 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:53:10 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:53:10 TIME: user.ping 0.14 ms
25.01 11:53:10 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:53:31 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:53:31 TIME: user.ping 0.13 ms
25.01 11:53:31 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:53:42 TIMER: Check auto-disconnect...
25.01 11:53:42 STATS: vdl.0 cache, locks:2
25.01 11:53:53 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:53:53 TIME: user.ping 0.1 ms
25.01 11:53:53 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:54:16 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:54:16 TIME: user.ping 0.16 ms
25.01 11:54:16 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:54:38 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:54:38 TIME: user.ping 0.17 ms
25.01 11:54:38 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:54:42 TIMER: Check auto-disconnect...
25.01 11:54:42 STATS: vdl.0 cache, locks:2
25.01 11:54:59 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:54:59 TIME: user.ping 0.14 ms
25.01 11:54:59 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:55:21 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:55:21 TIME: user.ping 0.21 ms
25.01 11:55:21 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:55:42 TIMER: Check auto-disconnect...
25.01 11:55:42 STATS: vdl.0 cache, locks:2
25.01 11:55:43 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
25.01 11:55:43 TIME: user.ping 0.16 ms
25.01 11:55:43 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
25.01 11:55:52 NET: Client (name:Aimer conid:12067063 TCP) disconnected from vdl.0 (clients:0)
25.01 11:55:52 DB: SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true
25.01 11:55:52 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=28 OR secondid=28 AND finished <> true, _type => core/server.query }
25.01 11:55:52 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.01 11:55:52 STATS: vdl.0 cache connection, 103 calls, total 0.116277694702148 sec spent, avg 1.13 ms
25.01 11:55:52 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:55:52 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.01 11:55:52 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.01 11:55:52 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
25.01 11:55:52 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 28, _type => core/cache.update }
25.01 11:55:52 -<<-: core/cache.update { errorCode => ok, version => 8, _type => core/cache.update }
25.01 11:55:52 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 28, _type => core/cache.update }
25.01 11:55:52 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
25.01 11:55:52 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 28, _type => core/user.logoutPost }
25.01 11:55:52 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
