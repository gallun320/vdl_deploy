19.11 14:34:32 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 14:34:32 -<<-: server.login ok
19.11 14:34:32 DB: SELECT * FROM LocalizationStrings
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 TIMER: Starting timer...
19.11 14:34:32 TIMER: Timer running...
19.11 14:34:32 DB: SELECT * FROM GameVars
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 14:34:32 -<<-: core/quest.getDaily ok
19.11 14:34:32 DB: SELECT * FROM UserAttributeTypes
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM UserVariableTypes
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 14:34:32 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM ItemGroups
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM Bundles ORDER BY ID
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 SHOP: loading items...
19.11 14:34:32 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 14:34:32 -<<-: core/shop.getList ok
19.11 14:34:32 SHOP: 0 items loaded (0 sec)
19.11 14:34:32 DB: SELECT * FROM EffectAttributeTypes
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM Effects
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 14:34:32 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 14:34:32 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:32 DB: SELECT * FROM Badges
19.11 14:34:32 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 14:34:32 -<<-: core/server.query ok
19.11 14:34:34 NET: Client (conid:674615) connected to vdl.0 (clients:1)
19.11 14:34:34 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
19.11 14:34:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
19.11 14:34:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
19.11 14:34:34 -<<-: core/server.query ok
19.11 14:34:34 ->>-: core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
19.11 14:34:34 -<<-: core/user.isOnlineID ok
19.11 14:34:34 ->>-: core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
19.11 14:34:34 -<<-: core/cache.get ok
19.11 14:34:34 ->>-: core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
19.11 14:34:34 -<<-: core/cache.get ok
19.11 14:34:34 NET: Client login (conid:674615, id:76, name:Aimer)
19.11 14:34:34 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
19.11 14:34:34 -<<-: core/user.loginPost null
19.11 14:34:34 DB: SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp
19.11 14:34:34 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp, _type => core/server.query }
19.11 14:34:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 14:34:34 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp)
19.11 14:34:34 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 76 }
19.11 14:34:34 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
19.11 14:34:35 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp), _type => core/server.pending }} }
19.11 14:34:35 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
19.11 14:34:35 ++ NET: Aimer req: user.data { messageType => user.data }
19.11 14:34:35 ->>-: vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
19.11 14:34:35 -<<-: vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
19.11 14:34:35 TIME: user.data 0.87 ms
19.11 14:34:35 == NET: Aimer ret: user.data { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
19.11 14:34:39 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
19.11 14:34:39 TIME: user.ping 0.16 ms
19.11 14:34:39 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
19.11 14:34:42 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479555274, lastLoginDate => 324, lastLoadDate => 1120 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
19.11 14:34:42 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:2
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:2
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:2
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 NET: Client (name:Aimer conid:674615 TCP) disconnected from vdl.0 (clients:0)
19.11 14:35:32 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
19.11 14:35:32 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
19.11 14:35:32 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 14:35:32 STATS: vdl.0 cache connection, 30 calls, total 0.521478891372681 sec spent, avg 17.38 ms
19.11 14:35:32 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 14:35:32 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 14:35:32 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 14:35:32 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 497
Called from modules/VDLBattleModule.hx line 510
Called from snipe/slave/Server.hx line 994
19.11 14:35:32 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
19.11 14:35:32 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 14:35:32 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
19.11 14:35:32 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 14:35:32 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
19.11 14:35:32 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
19.11 14:35:32 TIMER: Check auto-disconnect...
19.11 14:35:32 STATS: vdl.0 cache, locks:0
