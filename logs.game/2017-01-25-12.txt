25.01 12:12:26 ->>-: core/server.login { host => 188.225.38.160, name => vdl.0, port => 3020, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3020 }
25.01 12:12:26 -<<-: server.login ok
25.01 12:12:26 DB: SELECT * FROM LocalizationStrings
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 TIMER: Starting timer...
25.01 12:12:26 TIMER: Timer running...
25.01 12:12:26 DB: SELECT * FROM GameVars
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
25.01 12:12:26 -<<-: core/quest.getDaily ok
25.01 12:12:26 DB: SELECT * FROM UserAttributeTypes
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM UserVariableTypes
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.01 12:12:26 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM ItemGroups
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM Bundles ORDER BY ID
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM BundleItems ORDER BY ID
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 SHOP: loading items...
25.01 12:12:26 ->>-: core/shop.getList { _type => core/shop.getList }
25.01 12:12:26 -<<-: core/shop.getList ok
25.01 12:12:26 SHOP: 0 items loaded (0 sec)
25.01 12:12:26 DB: SELECT * FROM EffectAttributeTypes
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM Effects
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.01 12:12:26 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.01 12:12:26 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:26 DB: SELECT * FROM Badges
25.01 12:12:26 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.01 12:12:26 -<<-: core/server.query ok
25.01 12:12:27 NET: Client (conid:47490912) connected to vdl.0 (clients:1)
25.01 12:12:27 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
25.01 12:12:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
25.01 12:12:27 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
25.01 12:12:27 -<<-: core/server.query ok
25.01 12:12:27 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
25.01 12:12:27 -<<-: core/user.isOnlineID ok
25.01 12:12:27 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
25.01 12:12:27 -<<-: core/cache.get ok
25.01 12:12:27 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
25.01 12:12:27 -<<-: core/cache.get ok
25.01 12:12:27 NET: Client login (conid:47490912, id:28, name:Aimer)
25.01 12:12:27 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
25.01 12:12:27 -<<-: core/user.loginPost null
25.01 12:12:27 DB: SELECT token FROM tokens WHERE userid = 28
25.01 12:12:27 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
25.01 12:12:27 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
25.01 12:12:27 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
25.01 12:12:27 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
25.01 12:12:27 ++ NET: Aimer req: user.data { messageType => user.data }
25.01 12:12:27 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 13 }
25.01 12:12:27 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
25.01 12:12:27 TIME: user.data 0.41 ms
25.01 12:12:27 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 13 }
