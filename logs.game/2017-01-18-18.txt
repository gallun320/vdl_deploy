18.01 18:18:48 STATS: vdl.0 cache, locks:0
18.01 18:19:47 TIMER: Check auto-disconnect...
18.01 18:19:48 STATS: vdl.0 cache, locks:0
18.01 18:20:47 TIMER: Check auto-disconnect...
18.01 18:20:48 STATS: vdl.0 cache, locks:0
18.01 18:21:47 TIMER: Check auto-disconnect...
18.01 18:21:48 STATS: vdl.0 cache, locks:0
18.01 18:21:54 NET: Client (conid:80644896) connected to vdl.0 (clients:1)
18.01 18:21:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYy }
18.01 18:21:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162'
18.01 18:21:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162', _type => core/server.query }
18.01 18:21:55 -<<-: core/server.query ok
18.01 18:21:55 STATS: vdl.0 cache connection, 21 calls, total 0.0198462009429932 sec spent, avg 0.95 ms
18.01 18:21:55 ->>-: core/user.isOnlineID { id => 162, _type => core/user.isOnlineID }
18.01 18:21:55 -<<-: core/user.isOnlineID ok
18.01 18:21:55 ->>-: core/cache.get { type => user, v => -1, id => 162, _type => core/cache.get }
18.01 18:21:55 -<<-: core/cache.get ok
18.01 18:21:55 ->>-: core/cache.get { type => questdata, v => -1, id => 162, _type => core/cache.get }
18.01 18:21:55 -<<-: core/cache.get ok
18.01 18:21:55 NET: Client login (conid:80644896, id:162, name:uid162)
18.01 18:21:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 162, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
18.01 18:21:55 -<<-: core/user.loginPost null
18.01 18:21:55 == NET: uid162 ret: user.login { name => uid162, type => user.login, errorCode => ok, id => 162 }
18.01 18:21:55 == NET: uid162 ret: user.join { name => uid162, type => user.join }
18.01 18:21:58 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:21:58 TIME: user.ping 0.2 ms
18.01 18:21:58 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:22:03 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 162, _type => core/cache.update }
18.01 18:22:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:22:47 TIMER: Check auto-disconnect...
18.01 18:22:48 STATS: vdl.0 cache, locks:2
18.01 18:23:47 TIMER: Check auto-disconnect...
18.01 18:23:48 STATS: vdl.0 cache, locks:2
18.01 18:24:47 TIMER: Check auto-disconnect...
18.01 18:24:48 STATS: vdl.0 cache, locks:2
18.01 18:25:47 TIMER: Check auto-disconnect...
18.01 18:25:47 NET: Client (name:uid162 conid:80644896 TCP) disconnected from vdl.0 (clients:0)
18.01 18:25:47 DB: SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true
18.01 18:25:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true, _type => core/server.query }
18.01 18:25:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.01 18:25:47 STATS: vdl.0 cache connection, 27 calls, total 0.0303053855895996 sec spent, avg 1.12 ms
18.01 18:25:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:25:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.01 18:25:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:25:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
18.01 18:25:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 162, _type => core/cache.update }
18.01 18:25:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.01 18:25:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 162, _type => core/cache.update }
18.01 18:25:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:25:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 162, _type => core/user.logoutPost }
18.01 18:25:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.01 18:25:48 STATS: vdl.0 cache, locks:0
18.01 18:26:47 TIMER: Check auto-disconnect...
18.01 18:26:48 STATS: vdl.0 cache, locks:0
18.01 18:27:47 TIMER: Check auto-disconnect...
18.01 18:27:48 STATS: vdl.0 cache, locks:0
18.01 18:28:47 TIMER: Check auto-disconnect...
18.01 18:28:48 STATS: vdl.0 cache, locks:0
18.01 18:29:47 TIMER: Check auto-disconnect...
18.01 18:29:48 STATS: vdl.0 cache, locks:0
18.01 18:30:47 TIMER: Check auto-disconnect...
18.01 18:30:48 STATS: vdl.0 cache, locks:0
18.01 18:31:47 TIMER: Check auto-disconnect...
18.01 18:31:48 STATS: vdl.0 cache, locks:0
18.01 18:32:47 TIMER: Check auto-disconnect...
18.01 18:32:48 STATS: vdl.0 cache, locks:0
18.01 18:33:47 TIMER: Check auto-disconnect...
18.01 18:33:48 STATS: vdl.0 cache, locks:0
18.01 18:34:47 TIMER: Check auto-disconnect...
18.01 18:34:48 STATS: vdl.0 cache, locks:0
18.01 18:35:47 TIMER: Check auto-disconnect...
18.01 18:35:48 STATS: vdl.0 cache, locks:0
18.01 18:36:47 TIMER: Check auto-disconnect...
18.01 18:36:48 STATS: vdl.0 cache, locks:0
18.01 18:37:47 TIMER: Check auto-disconnect...
18.01 18:37:48 STATS: vdl.0 cache, locks:0
18.01 18:38:26 NET: Client (conid:5038705) connected to vdl.0 (clients:1)
18.01 18:38:26 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYy }
18.01 18:38:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162'
18.01 18:38:26 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162', _type => core/server.query }
18.01 18:38:26 -<<-: core/server.query { list => {{ name => uid162, networkid => , isbanned => false, id => 162 }}, errorCode => ok, _type => core/server.query }
18.01 18:38:26 STATS: vdl.0 cache connection, 32 calls, total 0.0373892784118652 sec spent, avg 1.17 ms
18.01 18:38:26 ->>-: core/user.isOnlineID { id => 162, _type => core/user.isOnlineID }
18.01 18:38:26 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.01 18:38:26 ->>-: core/cache.get { type => user, v => -1, id => 162, _type => core/cache.get }
18.01 18:38:26 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid162, deleted => false, email => , networktype =>   , password => uid162, isbanned => false, regdate => 2017-01-18 17:10:44.031496+03, language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484748644, lastLoginDate => 18, lastLoadDate => 119 }, effects => { list => [] } }}, version => 0, id => 162 } }
18.01 18:38:26 ->>-: core/cache.get { type => questdata, v => -1, id => 162, _type => core/cache.get }
18.01 18:38:26 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 162 } }
18.01 18:38:26 NET: Client login (conid:5038705, id:162, name:uid162)
18.01 18:38:26 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 162, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
18.01 18:38:26 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.01 18:38:26 == NET: uid162 ret: user.login { name => uid162, type => user.login, errorCode => ok, id => 162 }
18.01 18:38:26 == NET: uid162 ret: user.join { name => uid162, type => user.join }
18.01 18:38:27 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:38:27 TIME: user.ping 0.27 ms
18.01 18:38:27 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:38:33 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 162, _type => core/cache.update }
18.01 18:38:33 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:38:47 TIMER: Check auto-disconnect...
18.01 18:38:48 STATS: vdl.0 cache, locks:2
18.01 18:39:47 TIMER: Check auto-disconnect...
18.01 18:39:48 STATS: vdl.0 cache, locks:2
18.01 18:40:04 NET: Client (name:uid162 conid:5038705 TCP) disconnected from vdl.0 (clients:0)
18.01 18:40:04 DB: SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true
18.01 18:40:04 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true, _type => core/server.query }
18.01 18:40:04 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.01 18:40:04 STATS: vdl.0 cache connection, 38 calls, total 0.0449752807617188 sec spent, avg 1.18 ms
18.01 18:40:04 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:40:04 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.01 18:40:04 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:40:04 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
18.01 18:40:04 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 162, _type => core/cache.update }
18.01 18:40:04 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.01 18:40:04 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 162, _type => core/cache.update }
18.01 18:40:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:40:04 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 162, _type => core/user.logoutPost }
18.01 18:40:04 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.01 18:40:06 NET: Client (conid:97345226) connected to vdl.0 (clients:1)
18.01 18:40:07 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYy }
18.01 18:40:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162'
18.01 18:40:07 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162', _type => core/server.query }
18.01 18:40:07 -<<-: core/server.query { list => {{ name => uid162, networkid => , isbanned => false, id => 162 }}, errorCode => ok, _type => core/server.query }
18.01 18:40:07 ->>-: core/user.isOnlineID { id => 162, _type => core/user.isOnlineID }
18.01 18:40:07 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.01 18:40:07 ->>-: core/cache.get { type => user, v => -1, id => 162, _type => core/cache.get }
18.01 18:40:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid162, deleted => false, email => , networktype =>   , password => uid162, isbanned => false, regdate => 2017-01-18 17:10:44.031496+03, language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484748644, lastLoginDate => 18, lastLoadDate => 119 }, effects => { list => [] } }}, version => 2, id => 162 } }
18.01 18:40:07 ->>-: core/cache.get { type => questdata, v => -1, id => 162, _type => core/cache.get }
18.01 18:40:07 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 162 } }
18.01 18:40:07 NET: Client login (conid:97345226, id:162, name:uid162)
18.01 18:40:07 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 162, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
18.01 18:40:07 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.01 18:40:07 == NET: uid162 ret: user.login { name => uid162, type => user.login, errorCode => ok, id => 162 }
18.01 18:40:07 == NET: uid162 ret: user.join { name => uid162, type => user.join }
18.01 18:40:11 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:40:11 TIME: user.ping 0.29 ms
18.01 18:40:11 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:40:13 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 162, _type => core/cache.update }
18.01 18:40:13 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
18.01 18:40:47 TIMER: Check auto-disconnect...
18.01 18:40:48 STATS: vdl.0 cache, locks:2
18.01 18:41:47 TIMER: Check auto-disconnect...
18.01 18:41:48 STATS: vdl.0 cache, locks:2
18.01 18:42:47 TIMER: Check auto-disconnect...
18.01 18:42:48 STATS: vdl.0 cache, locks:2
18.01 18:43:47 TIMER: Check auto-disconnect...
18.01 18:43:47 NET: Client (name:uid162 conid:97345226 TCP) disconnected from vdl.0 (clients:0)
18.01 18:43:47 DB: SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true
18.01 18:43:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true, _type => core/server.query }
18.01 18:43:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.01 18:43:47 STATS: vdl.0 cache connection, 49 calls, total 0.057772159576416 sec spent, avg 1.18 ms
18.01 18:43:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:43:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.01 18:43:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:43:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
18.01 18:43:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 162, _type => core/cache.update }
18.01 18:43:47 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
18.01 18:43:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 162, _type => core/cache.update }
18.01 18:43:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.01 18:43:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 162, _type => core/user.logoutPost }
18.01 18:43:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.01 18:43:48 STATS: vdl.0 cache, locks:0
18.01 18:44:47 TIMER: Check auto-disconnect...
18.01 18:44:48 STATS: vdl.0 cache, locks:0
18.01 18:45:47 TIMER: Check auto-disconnect...
18.01 18:45:48 STATS: vdl.0 cache, locks:0
18.01 18:46:47 TIMER: Check auto-disconnect...
18.01 18:46:48 STATS: vdl.0 cache, locks:0
18.01 18:47:47 TIMER: Check auto-disconnect...
18.01 18:47:48 STATS: vdl.0 cache, locks:0
18.01 18:48:47 TIMER: Check auto-disconnect...
18.01 18:48:48 STATS: vdl.0 cache, locks:0
18.01 18:49:47 TIMER: Check auto-disconnect...
18.01 18:49:48 STATS: vdl.0 cache, locks:0
18.01 18:49:52 NET: Client (conid:51814694) connected to vdl.0 (clients:1)
18.01 18:49:52 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYy }
18.01 18:49:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162'
18.01 18:49:52 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162', _type => core/server.query }
18.01 18:49:52 -<<-: core/server.query { list => {{ name => uid162, networkid => , isbanned => false, id => 162 }}, errorCode => ok, _type => core/server.query }
18.01 18:49:52 STATS: vdl.0 cache connection, 54 calls, total 0.066605806350708 sec spent, avg 1.23 ms
18.01 18:49:52 ->>-: core/user.isOnlineID { id => 162, _type => core/user.isOnlineID }
18.01 18:49:52 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.01 18:49:52 ->>-: core/cache.get { type => user, v => -1, id => 162, _type => core/cache.get }
18.01 18:49:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid162, deleted => false, email => , networktype =>   , password => uid162, isbanned => false, regdate => 2017-01-18 17:10:44.031496+03, language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484748644, lastLoginDate => 18, lastLoadDate => 119 }, effects => { list => [] } }}, version => 0, id => 162 } }
18.01 18:49:52 ->>-: core/cache.get { type => questdata, v => -1, id => 162, _type => core/cache.get }
18.01 18:49:52 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 162 } }
18.01 18:49:52 NET: Client login (conid:51814694, id:162, name:uid162)
18.01 18:49:52 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 162, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
18.01 18:49:52 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.01 18:49:52 == NET: uid162 ret: user.login { name => uid162, type => user.login, errorCode => ok, id => 162 }
18.01 18:49:52 == NET: uid162 ret: user.join { name => uid162, type => user.join }
18.01 18:49:56 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:49:56 TIME: user.ping 0.07 ms
18.01 18:49:56 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:50:09 ->>-: core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
18.01 18:50:09 -<<-: server.login ok
18.01 18:50:09 DB: SELECT * FROM LocalizationStrings
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 TIMER: Starting timer...
18.01 18:50:09 TIMER: Timer running...
18.01 18:50:09 DB: SELECT * FROM GameVars
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
18.01 18:50:09 -<<-: core/quest.getDaily ok
18.01 18:50:09 DB: SELECT * FROM UserAttributeTypes
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM UserVariableTypes
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
18.01 18:50:09 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM ItemGroups
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM Bundles ORDER BY ID
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM BundleItems ORDER BY ID
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 SHOP: loading items...
18.01 18:50:09 ->>-: core/shop.getList { _type => core/shop.getList }
18.01 18:50:09 -<<-: core/shop.getList ok
18.01 18:50:09 SHOP: 0 items loaded (0 sec)
18.01 18:50:09 DB: SELECT * FROM EffectAttributeTypes
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM Effects
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.01 18:50:09 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.01 18:50:09 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 DB: SELECT * FROM Badges
18.01 18:50:09 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
18.01 18:50:09 -<<-: core/server.query ok
18.01 18:50:09 TIMER: Check auto-disconnect...
18.01 18:50:09 STATS: vdl.0 cache, locks:0
18.01 18:50:09 TIMER: Check auto-disconnect...
18.01 18:50:09 STATS: vdl.0 cache, locks:0
18.01 18:50:09 TIMER: Check auto-disconnect...
18.01 18:50:09 STATS: vdl.0 cache, locks:0
18.01 18:50:09 TIMER: Check auto-disconnect...
18.01 18:50:09 STATS: vdl.0 cache, locks:0
18.01 18:50:09 TIMER: Check auto-disconnect...
18.01 18:50:09 STATS: vdl.0 cache, locks:0
18.01 18:55:43 NET: Client (conid:8078861) connected to vdl.0 (clients:1)
18.01 18:55:44 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYy }
18.01 18:55:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162'
18.01 18:55:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162', _type => core/server.query }
18.01 18:55:44 -<<-: core/server.query ok
18.01 18:55:44 STATS: vdl.0 cache connection, 21 calls, total 0.020251989364624 sec spent, avg 0.96 ms
18.01 18:55:44 ->>-: core/user.isOnlineID { id => 162, _type => core/user.isOnlineID }
18.01 18:55:44 -<<-: core/user.isOnlineID ok
18.01 18:55:44 ->>-: core/cache.get { type => user, v => -1, id => 162, _type => core/cache.get }
18.01 18:55:44 -<<-: core/cache.get ok
18.01 18:55:44 ->>-: core/cache.get { type => questdata, v => -1, id => 162, _type => core/cache.get }
18.01 18:55:44 -<<-: core/cache.get ok
18.01 18:55:44 NET: Client login (conid:8078861, id:162, name:uid162)
18.01 18:55:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 162, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
18.01 18:55:44 -<<-: core/user.loginPost null
18.01 18:55:44 == NET: uid162 ret: user.login { name => uid162, type => user.login, errorCode => ok, id => 162 }
18.01 18:55:44 == NET: uid162 ret: user.join { name => uid162, type => user.join }
18.01 18:55:48 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:55:48 TIME: user.ping 0.18 ms
18.01 18:55:48 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:55:49 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 162, _type => core/cache.update }
18.01 18:55:49 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:56:09 TIMER: Check auto-disconnect...
18.01 18:56:09 STATS: vdl.0 cache, locks:2
18.01 18:56:09 TIMER: Check auto-disconnect...
18.01 18:56:09 STATS: vdl.0 cache, locks:2
18.01 18:57:43 NET: Client (name:uid162 conid:8078861 TCP) disconnected from vdl.0 (clients:0)
18.01 18:57:43 DB: SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true
18.01 18:57:43 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true, _type => core/server.query }
18.01 18:57:43 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.01 18:57:43 STATS: vdl.0 cache connection, 27 calls, total 0.0307397842407227 sec spent, avg 1.14 ms
18.01 18:57:43 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:57:43 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.01 18:57:43 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:57:43 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
18.01 18:57:43 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 162, _type => core/cache.update }
18.01 18:57:43 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.01 18:57:43 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 162, _type => core/cache.update }
18.01 18:57:43 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:57:43 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 162, _type => core/user.logoutPost }
18.01 18:57:43 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.01 18:57:55 NET: Client (conid:5486940) connected to vdl.0 (clients:1)
18.01 18:57:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYy }
18.01 18:57:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162'
18.01 18:57:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162', _type => core/server.query }
18.01 18:57:55 -<<-: core/server.query { list => {{ name => uid162, networkid => , isbanned => false, id => 162 }}, errorCode => ok, _type => core/server.query }
18.01 18:57:55 ->>-: core/user.isOnlineID { id => 162, _type => core/user.isOnlineID }
18.01 18:57:55 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.01 18:57:55 ->>-: core/cache.get { type => user, v => -1, id => 162, _type => core/cache.get }
18.01 18:57:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid162, deleted => false, email => , networktype =>   , password => uid162, isbanned => false, regdate => 2017-01-18 17:10:44.031496+03, language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484748644, lastLoginDate => 18, lastLoadDate => 119 }, effects => { list => [] } }}, version => 0, id => 162 } }
18.01 18:57:55 ->>-: core/cache.get { type => questdata, v => -1, id => 162, _type => core/cache.get }
18.01 18:57:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 162 } }
18.01 18:57:55 NET: Client login (conid:5486940, id:162, name:uid162)
18.01 18:57:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 162, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
18.01 18:57:55 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.01 18:57:55 == NET: uid162 ret: user.login { name => uid162, type => user.login, errorCode => ok, id => 162 }
18.01 18:57:55 == NET: uid162 ret: user.join { name => uid162, type => user.join }
18.01 18:57:57 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:57:57 TIME: user.ping 0.06 ms
18.01 18:57:57 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:57:59 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:57:59 TIME: user.ping 0.16 ms
18.01 18:57:59 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:58:02 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:58:02 TIME: user.ping 0.13 ms
18.01 18:58:02 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:58:02 ++ NET: uid162 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
18.01 18:58:02 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 162 }, _type => vdl/cache.battle.findRandom }
18.01 18:58:02 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
18.01 18:58:02 TIME: battle.find 0.63 ms
18.01 18:58:02 == NET: uid162 ret: battle.find { type => battle.find, errorCode => ok }
18.01 18:58:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 162, _type => core/cache.update }
18.01 18:58:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:58:09 TIMER: Check auto-disconnect...
18.01 18:58:09 STATS: vdl.0 cache, locks:2
18.01 18:58:36 NET: Client (conid:61415143) connected to vdl.0 (clients:2)
18.01 18:58:37 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYy }
18.01 18:58:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162'
18.01 18:58:37 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162', _type => core/server.query }
18.01 18:58:37 -<<-: core/server.query { list => {{ name => uid162, networkid => , isbanned => false, id => 162 }}, errorCode => ok, _type => core/server.query }
18.01 18:58:37 ->>-: core/user.isOnlineID { id => 162, _type => core/user.isOnlineID }
18.01 18:58:37 -<<-: core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
18.01 18:58:37 -<<- LOCAL: core/user.disconnectEvent { _fromServerID => 1, _type => core/user.disconnectEvent, _id => 162 }
18.01 18:58:37 == NET: null ret: user.login { type => user.login, errorCode => userDisconnecting }
18.01 18:58:37 NET: Client (name:uid162 conid:5486940 TCP) disconnected from vdl.0 (clients:1)
18.01 18:58:37 DB: SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true
18.01 18:58:37 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=162 OR secondid=162 AND finished <> true, _type => core/server.query }
18.01 18:58:37 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.01 18:58:37 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:58:37 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.01 18:58:37 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.01 18:58:37 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 994
18.01 18:58:37 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 162, _type => core/cache.update }
18.01 18:58:37 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.01 18:58:37 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 162, _type => core/cache.update }
18.01 18:58:37 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:58:37 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 162, _type => core/user.logoutPost }
18.01 18:58:37 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.01 18:58:43 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
18.01 18:58:43 TRACE: User not logon yet.
18.01 18:58:58 NET: Client (name:null conid:61415143 TCP) disconnected from vdl.0 (clients:0)
18.01 18:58:58 NET: Client (conid:48967691) connected to vdl.0 (clients:1)
18.01 18:58:58 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTYy }
18.01 18:58:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162'
18.01 18:58:58 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid162' AND Password = E'uid162', _type => core/server.query }
18.01 18:58:58 -<<-: core/server.query { list => {{ name => uid162, networkid => , isbanned => false, id => 162 }}, errorCode => ok, _type => core/server.query }
18.01 18:58:58 STATS: vdl.0 cache connection, 46 calls, total 0.0556318759918213 sec spent, avg 1.21 ms
18.01 18:58:58 ->>-: core/user.isOnlineID { id => 162, _type => core/user.isOnlineID }
18.01 18:58:58 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.01 18:58:58 ->>-: core/cache.get { type => user, v => -1, id => 162, _type => core/cache.get }
18.01 18:58:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid162, deleted => false, email => , networktype =>   , password => uid162, isbanned => false, regdate => 2017-01-18 17:10:44.031496+03, language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484748644, lastLoginDate => 18, lastLoadDate => 119 }, effects => { list => [] } }}, version => 0, id => 162 } }
18.01 18:58:58 ->>-: core/cache.get { type => questdata, v => -1, id => 162, _type => core/cache.get }
18.01 18:58:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 162 } }
18.01 18:58:58 NET: Client login (conid:48967691, id:162, name:uid162)
18.01 18:58:58 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 162, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
18.01 18:58:58 -<<-: core/user.loginPost { _type => core/user.loginPost }
18.01 18:58:58 == NET: uid162 ret: user.login { name => uid162, type => user.login, errorCode => ok, id => 162 }
18.01 18:58:58 == NET: uid162 ret: user.join { name => uid162, type => user.join }
18.01 18:59:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 162, _type => core/cache.update }
18.01 18:59:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.01 18:59:07 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:59:07 TIME: user.ping 0.21 ms
18.01 18:59:07 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:59:09 TIMER: Check auto-disconnect...
18.01 18:59:09 STATS: vdl.0 cache, locks:2
18.01 18:59:29 ++ NET: uid162 req: user.ping { messageType => user.ping, msg => ok }
18.01 18:59:29 TIME: user.ping 0.21 ms
18.01 18:59:29 == NET: uid162 ret: user.ping { type => user.ping, errorCode => ok }
18.01 18:59:30 ++ NET: uid162 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
18.01 18:59:30 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 162 }, _type => vdl/cache.battle.findRandom }
18.01 18:59:30 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
18.01 18:59:30 TIME: battle.find 0.6 ms
18.01 18:59:30 == NET: uid162 ret: battle.find { type => battle.find, errorCode => ok }
