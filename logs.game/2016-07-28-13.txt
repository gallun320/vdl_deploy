28.07 13:03:46 ->>-: core/server.login { host => 127.0.0.1, name => Test1.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
28.07 13:03:46 -<<-: server.login ok
28.07 13:03:46 DB: SELECT * FROM LocalizationStrings
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 TIMER: Starting timer...
28.07 13:03:46 TIMER: Timer running...
28.07 13:03:46 DB: SELECT * FROM GameVars
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
28.07 13:03:46 -<<-: core/quest.getDaily ok
28.07 13:03:46 DB: SELECT * FROM UserAttributeTypes
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM UserVariableTypes
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
28.07 13:03:46 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM ItemGroups
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM Bundles ORDER BY ID
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM BundleItems ORDER BY ID
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 SHOP: loading items...
28.07 13:03:46 ->>-: core/shop.getList { _type => core/shop.getList }
28.07 13:03:46 -<<-: core/shop.getList ok
28.07 13:03:46 SHOP: 0 items loaded (0 sec)
28.07 13:03:46 DB: SELECT * FROM EffectAttributeTypes
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM Effects
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
28.07 13:03:46 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
28.07 13:03:46 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 DB: SELECT * FROM Badges
28.07 13:03:46 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
28.07 13:03:46 -<<-: core/server.query ok
28.07 13:03:46 TIMER: Check auto-disconnect...
28.07 13:03:46 STATS: Test1.0 cache, locks:0
28.07 13:03:46 TIMER: Check auto-disconnect...
28.07 13:03:46 STATS: Test1.0 cache, locks:0
28.07 13:03:46 TIMER: Check auto-disconnect...
28.07 13:03:46 STATS: Test1.0 cache, locks:0
28.07 13:03:46 TIMER: Check auto-disconnect...
28.07 13:03:46 STATS: Test1.0 cache, locks:0
28.07 13:03:46 TIMER: Check auto-disconnect...
28.07 13:03:46 STATS: Test1.0 cache, locks:0
28.07 13:09:20 NET: Client (conid:64647944) connected to Test1.0 (clients:1)
28.07 13:09:20 TRACE: Invalid message 'GET / HTTP/1.1
Host: 127.0.0.1:2010
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive

'
28.07 13:09:20 TRACE: 
Called from snipe/slave/MetaServer.hx line 494
Called from snipe/slave/ThreadServerModified.hx line 135
Called from snipe/slave/ThreadServerModified.hx line 160
28.07 13:09:20 NET: Client (name:null conid:64647944 TCP) disconnected from Test1.0 (clients:0)
28.07 13:09:20 NET: Client (conid:55649155) connected to Test1.0 (clients:1)
28.07 13:09:20 TRACE: Invalid message 'GET / HTTP/1.1
Host: 127.0.0.1:2010
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive

'
28.07 13:09:20 TRACE: 
Called from snipe/slave/MetaServer.hx line 494
Called from snipe/slave/ThreadServerModified.hx line 135
Called from snipe/slave/ThreadServerModified.hx line 160
28.07 13:09:20 NET: Client (name:null conid:55649155 TCP) disconnected from Test1.0 (clients:0)
28.07 13:09:20 NET: Client (conid:94101713) connected to Test1.0 (clients:1)
28.07 13:09:20 TRACE: Invalid message 'GET / HTTP/1.1
Host: 127.0.0.1:2010
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive

'
28.07 13:09:20 TRACE: 
Called from snipe/slave/MetaServer.hx line 494
Called from snipe/slave/ThreadServerModified.hx line 135
Called from snipe/slave/ThreadServerModified.hx line 160
28.07 13:09:20 NET: Client (name:null conid:94101713 TCP) disconnected from Test1.0 (clients:0)
28.07 13:09:20 NET: Client (conid:95559636) connected to Test1.0 (clients:1)
28.07 13:09:20 TRACE: Invalid message 'GET / HTTP/1.1
Host: 127.0.0.1:2010
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive

'
28.07 13:09:20 TRACE: 
Called from snipe/slave/MetaServer.hx line 494
Called from snipe/slave/ThreadServerModified.hx line 135
Called from snipe/slave/ThreadServerModified.hx line 160
28.07 13:09:20 NET: Client (name:null conid:95559636 TCP) disconnected from Test1.0 (clients:0)
28.07 13:09:20 NET: Client (conid:4481812) connected to Test1.0 (clients:1)
28.07 13:09:20 TRACE: Invalid message 'GET / HTTP/1.1
Host: 127.0.0.1:2010
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive

'
28.07 13:09:20 TRACE: 
Called from snipe/slave/MetaServer.hx line 494
Called from snipe/slave/ThreadServerModified.hx line 135
Called from snipe/slave/ThreadServerModified.hx line 160
28.07 13:09:20 NET: Client (name:null conid:4481812 TCP) disconnected from Test1.0 (clients:0)
28.07 13:09:20 NET: Client (conid:45840340) connected to Test1.0 (clients:1)
28.07 13:09:20 TRACE: Invalid message 'GET / HTTP/1.1
Host: 127.0.0.1:2010
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive

'
28.07 13:09:20 TRACE: 
Called from snipe/slave/MetaServer.hx line 494
Called from snipe/slave/ThreadServerModified.hx line 135
Called from snipe/slave/ThreadServerModified.hx line 160
28.07 13:09:20 NET: Client (name:null conid:45840340 TCP) disconnected from Test1.0 (clients:0)
28.07 13:19:56 ->>-: core/server.login { host => 127.0.0.1, name => Test1.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
28.07 13:19:56 -<<-: server.login ok
28.07 13:19:56 DB: SELECT * FROM LocalizationStrings
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 TIMER: Starting timer...
28.07 13:19:56 TIMER: Timer running...
28.07 13:19:56 DB: SELECT * FROM GameVars
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
28.07 13:19:56 -<<-: core/quest.getDaily ok
28.07 13:19:56 DB: SELECT * FROM UserAttributeTypes
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM UserVariableTypes
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
28.07 13:19:56 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM ItemGroups
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM Bundles ORDER BY ID
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM BundleItems ORDER BY ID
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 SHOP: loading items...
28.07 13:19:56 ->>-: core/shop.getList { _type => core/shop.getList }
28.07 13:19:56 -<<-: core/shop.getList ok
28.07 13:19:56 SHOP: 0 items loaded (0 sec)
28.07 13:19:56 DB: SELECT * FROM EffectAttributeTypes
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT * FROM Effects
28.07 13:19:56 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
28.07 13:19:56 -<<-: core/server.query ok
28.07 13:19:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epo28.07 13:35:55 ->>-: core/server.login { host => 127.0.0.1, name => Test1.0, port => 2010, type => game, _type => core/server.login, externalHost => 127.0.0.1, externalPort => 2010 }
28.07 13:35:55 -<<-: server.login ok
28.07 13:35:55 DB: SELECT * FROM LocalizationStrings
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 TIMER: Starting timer...
28.07 13:35:55 TIMER: Timer running...
28.07 13:35:55 DB: SELECT * FROM GameVars
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
28.07 13:35:55 -<<-: core/quest.getDaily ok
28.07 13:35:55 DB: SELECT * FROM UserAttributeTypes
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM UserVariableTypes
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
28.07 13:35:55 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM ItemGroups
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM Bundles ORDER BY ID
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM BundleItems ORDER BY ID
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 SHOP: loading items...
28.07 13:35:55 ->>-: core/shop.getList { _type => core/shop.getList }
28.07 13:35:55 -<<-: core/shop.getList ok
28.07 13:35:55 SHOP: 0 items loaded (0 sec)
28.07 13:35:55 DB: SELECT * FROM EffectAttributeTypes
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT * FROM Effects
28.07 13:35:55 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
28.07 13:35:55 -<<-: core/server.query ok
28.07 13:35:55 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
28.07 13:35:55 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
