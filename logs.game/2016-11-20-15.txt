20.11 15:00:08 TIMER: Check auto-disconnect...
20.11 15:00:15 STATS: vdl.0 cache, locks:2
20.11 15:01:08 TIMER: Check auto-disconnect...
20.11 15:01:15 STATS: vdl.0 cache, locks:2
20.11 15:02:08 TIMER: Check auto-disconnect...
20.11 15:02:15 STATS: vdl.0 cache, locks:2
20.11 15:03:08 TIMER: Check auto-disconnect...
20.11 15:03:15 STATS: vdl.0 cache, locks:2
20.11 15:04:08 TIMER: Check auto-disconnect...
20.11 15:04:15 STATS: vdl.0 cache, locks:2
20.11 15:05:08 TIMER: Check auto-disconnect...
20.11 15:05:15 STATS: vdl.0 cache, locks:2
20.11 15:06:08 TIMER: Check auto-disconnect...
20.11 15:06:15 STATS: vdl.0 cache, locks:2
20.11 15:07:08 TIMER: Check auto-disconnect...
20.11 15:07:15 STATS: vdl.0 cache, locks:2
20.11 15:08:08 TIMER: Check auto-disconnect...
20.11 15:08:15 STATS: vdl.0 cache, locks:2
20.11 15:09:08 TIMER: Check auto-disconnect...
20.11 15:09:15 STATS: vdl.0 cache, locks:2
20.11 15:10:08 TIMER: Check auto-disconnect...
20.11 15:10:15 STATS: vdl.0 cache, locks:2
20.11 15:11:08 TIMER: Check auto-disconnect...
20.11 15:11:15 STATS: vdl.0 cache, locks:2
20.11 15:12:08 TIMER: Check auto-disconnect...
20.11 15:12:15 STATS: vdl.0 cache, locks:2
20.11 15:13:08 TIMER: Check auto-disconnect...
20.11 15:13:15 STATS: vdl.0 cache, locks:2
20.11 15:14:08 TIMER: Check auto-disconnect...
20.11 15:14:15 STATS: vdl.0 cache, locks:2
20.11 15:15:08 TIMER: Check auto-disconnect...
20.11 15:15:15 STATS: vdl.0 cache, locks:2
20.11 15:16:08 TIMER: Check auto-disconnect...
20.11 15:16:15 STATS: vdl.0 cache, locks:2
20.11 15:17:08 TIMER: Check auto-disconnect...
20.11 15:17:15 STATS: vdl.0 cache, locks:2
20.11 15:18:08 TIMER: Check auto-disconnect...
20.11 15:18:15 STATS: vdl.0 cache, locks:2
20.11 15:19:08 TIMER: Check auto-disconnect...
20.11 15:19:15 STATS: vdl.0 cache, locks:2
20.11 15:20:08 TIMER: Check auto-disconnect...
20.11 15:20:15 STATS: vdl.0 cache, locks:2
20.11 15:21:08 TIMER: Check auto-disconnect...
20.11 15:21:15 STATS: vdl.0 cache, locks:2
20.11 15:22:08 TIMER: Check auto-disconnect...
20.11 15:22:15 STATS: vdl.0 cache, locks:2
20.11 15:23:08 TIMER: Check auto-disconnect...
20.11 15:23:15 STATS: vdl.0 cache, locks:2
20.11 15:23:16 NET: Client (conid:264605) connected to vdl.0 (clients:2)
20.11 15:23:18 ++ NET: null req: user.login { messageType => user.login, token => dWlkMjA= }
20.11 15:23:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid20' AND Password = 'uid20'
20.11 15:23:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'uid20' AND Password = 'uid20', _type => core/server.query }
20.11 15:23:18 -<<-: core/server.query { list => {{ name => uid20, networkid => , isbanned => false, id => 20 }}, errorCode => ok, _type => core/server.query }
20.11 15:23:18 STATS: vdl.0 cache connection, 511 calls, total 0.340312957763672 sec spent, avg 0.67 ms
20.11 15:23:18 ->>-: core/user.isOnlineID { id => 20, _type => core/user.isOnlineID }
20.11 15:23:18 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.11 15:23:18 ->>-: core/cache.get { type => user, v => -1, id => 20, _type => core/cache.get }
20.11 15:23:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid20, deleted => false, year => , email => mail, networktype =>   , password => uid20, isbanned => false, regdate => 2016-11-19 15:34:13.927466+00, city => , language =>   , networkid => , params => {}}, version => 0, id => 20 } }
20.11 15:23:18 ->>-: core/cache.get { type => questdata, v => -1, id => 20, _type => core/cache.get }
20.11 15:23:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 20 } }
20.11 15:23:18 NET: Client login (conid:264605, id:20, name:uid20)
20.11 15:23:18 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 20, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.11 15:23:18 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.11 15:23:18 DB: SELECT token FROM tokens WHERE userid = 20
20.11 15:23:18 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 20, _type => core/server.query }
20.11 15:23:18 -<<-: core/server.query { list => {{ token => 5ecf68942b60d11a1f9404e4081eeca8 }, { token => 8cefaec45a4385707189afbc25f9d951 }}, errorCode => ok, _type => core/server.query }
20.11 15:23:18 DB: SELECT ID FROM TempUserLogins WHERE UserID = 20 AND Date = 'today'::timestamp
20.11 15:23:18 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 20 AND Date = 'today'::timestamp, _type => core/server.query }
20.11 15:23:18 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 15:23:18 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (20, 'today'::timestamp)
20.11 15:23:18 == NET: uid20 ret: user.login { name => uid20, type => user.login, errorCode => ok, id => 20, token => 5ecf68942b60d11a1f9404e4081eeca8 }
20.11 15:23:18 == NET: uid20 ret: user.join { name => uid20, type => user.join }
20.11 15:23:18 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (20, 'today'::timestamp), _type => core/server.pending }} }
20.11 15:23:18 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
20.11 15:23:25 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479655398, lastLoginDate => 325, lastLoadDate => 1121 }, effects => { list => [] } }}, type => user, unlock => false, id => 20, _type => core/cache.update }
20.11 15:23:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.11 15:23:25 ++ NET: uid20 req: user.ping { messageType => user.ping, msg => ok }
20.11 15:23:25 TIME: user.ping 0.1 ms
20.11 15:23:25 == NET: uid20 ret: user.ping { type => user.ping, errorCode => ok }
20.11 15:23:49 NET: Client (name:uid20 conid:264605 TCP) disconnected from vdl.0 (clients:1)
20.11 15:23:49 DB: SELECT id FROM battle WHERE firstid=20 OR secondid=20 AND finished <> true
20.11 15:23:49 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=20 OR secondid=20 AND finished <> true, _type => core/server.query }
20.11 15:23:49 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 15:23:49 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 15:23:49 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.11 15:23:49 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 15:23:49 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.11 15:23:49 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 20, _type => core/cache.update }
20.11 15:23:49 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.11 15:23:49 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 20, _type => core/cache.update }
20.11 15:23:49 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.11 15:23:49 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 20, _type => core/user.logoutPost }
20.11 15:23:49 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.11 15:23:49 NET: Client (conid:46845480) connected to vdl.0 (clients:2)
20.11 15:23:49 ++ NET: null req: user.login { password => kO2YJdf, name => Aimer, messageType => user.login }
20.11 15:23:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf'
20.11 15:23:49 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = 'Aimer' AND Password = 'kO2YJdf', _type => core/server.query }
20.11 15:23:49 -<<-: core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 28 }}, errorCode => ok, _type => core/server.query }
20.11 15:23:49 ->>-: core/user.isOnlineID { id => 28, _type => core/user.isOnlineID }
20.11 15:23:49 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.11 15:23:49 ->>-: core/cache.get { type => user, v => -1, id => 28, _type => core/cache.get }
20.11 15:23:49 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, year => , email => raBpoLL1@ya.ru, networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-11-20 13:52:24.495988+00, city => , language => en, networkid => , params => { attrs => { _lastTime.24hr => 1479649963, lastLoginDate => 325, lastLoadDate => 1121 }, effects => { list => [] } }}, version => 0, id => 28 } }
20.11 15:23:49 ->>-: core/cache.get { type => questdata, v => -1, id => 28, _type => core/cache.get }
20.11 15:23:49 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 28 } }
20.11 15:23:49 NET: Client login (conid:46845480, id:28, name:Aimer)
20.11 15:23:49 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 28, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
20.11 15:23:49 -<<-: core/user.loginPost { _type => core/user.loginPost }
20.11 15:23:49 DB: SELECT token FROM tokens WHERE userid = 28
20.11 15:23:49 ->>-: core/server.query { q => SELECT token FROM tokens WHERE userid = 28, _type => core/server.query }
20.11 15:23:49 -<<-: core/server.query { list => {{ token => f8036965bfbe74fbafeb175107a122c4 }, { token => f430b4db749d48ed955ce2b85103338c }}, errorCode => ok, _type => core/server.query }
20.11 15:23:49 == NET: Aimer ret: user.login { name => Aimer, type => user.login, errorCode => ok, id => 28, token => f8036965bfbe74fbafeb175107a122c4 }
20.11 15:23:49 == NET: Aimer ret: user.join { name => Aimer, type => user.join }
20.11 15:23:49 ++ NET: Aimer req: user.data { messageType => user.data }
20.11 15:23:49 ->>-: vdl/cache.user.getData { userId => 28, _type => vdl/cache.user.getData, money => 0 }
20.11 15:23:49 -<<-: vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.11 15:23:49 TIME: user.data 0.3 ms
20.11 15:23:49 == NET: Aimer ret: user.data { info => { city => null, year => null, email => null }, type => user.data, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.11 15:23:55 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 28, _type => core/cache.update }
20.11 15:23:55 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.11 15:24:08 TIMER: Check auto-disconnect...
20.11 15:24:08 NET: Client (name:uid30 conid:90742080 TCP) disconnected from vdl.0 (clients:1)
20.11 15:24:08 DB: SELECT id FROM battle WHERE firstid=30 OR secondid=30 AND finished <> true
20.11 15:24:08 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=30 OR secondid=30 AND finished <> true, _type => core/server.query }
20.11 15:24:08 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.11 15:24:08 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 15:24:08 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.11 15:24:08 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.11 15:24:08 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 502
Called from modules/VDLBattleModule.hx line 515
Called from snipe/slave/Server.hx line 1009
20.11 15:24:08 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 30, _type => core/cache.update }
20.11 15:24:08 -<<-: core/cache.update { errorCode => ok, version => 22, _type => core/cache.update }
20.11 15:24:08 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 30, _type => core/cache.update }
20.11 15:24:08 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.11 15:24:08 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 30, _type => core/user.logoutPost }
20.11 15:24:08 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.11 15:24:15 STATS: vdl.0 cache, locks:2
20.11 15:25:08 TIMER: Check auto-disconnect...
20.11 15:25:15 STATS: vdl.0 cache, locks:2
20.11 15:26:07 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.11 15:26:07 TIME: user.ping 0.12 ms
20.11 15:26:07 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.11 15:26:08 TIMER: Check auto-disconnect...
20.11 15:26:15 STATS: vdl.0 cache, locks:2
20.11 15:27:08 TIMER: Check auto-disconnect...
20.11 15:27:15 STATS: vdl.0 cache, locks:2
20.11 15:28:08 TIMER: Check auto-disconnect...
20.11 15:28:15 STATS: vdl.0 cache, locks:2
20.11 15:29:08 TIMER: Check auto-disconnect...
20.11 15:29:15 STATS: vdl.0 cache, locks:2
20.11 15:29:33 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.11 15:29:33 TIME: user.ping 0.12 ms
20.11 15:29:33 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.11 15:30:08 TIMER: Check auto-disconnect...
20.11 15:30:15 STATS: vdl.0 cache, locks:2
20.11 15:31:08 TIMER: Check auto-disconnect...
20.11 15:31:15 STATS: vdl.0 cache, locks:2
20.11 15:32:08 TIMER: Check auto-disconnect...
20.11 15:32:15 STATS: vdl.0 cache, locks:2
20.11 15:33:08 TIMER: Check auto-disconnect...
20.11 15:33:15 STATS: vdl.0 cache, locks:2
20.11 15:34:00 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.11 15:34:00 TIME: user.ping 0.12 ms
20.11 15:34:00 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.11 15:34:08 TIMER: Check auto-disconnect...
20.11 15:34:15 STATS: vdl.0 cache, locks:2
20.11 15:35:04 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.11 15:35:04 TIME: user.ping 0.1 ms
20.11 15:35:04 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.11 15:35:08 TIMER: Check auto-disconnect...
20.11 15:35:15 STATS: vdl.0 cache, locks:2
20.11 15:36:08 TIMER: Check auto-disconnect...
20.11 15:36:15 STATS: vdl.0 cache, locks:2
20.11 15:37:08 TIMER: Check auto-disconnect...
20.11 15:37:15 STATS: vdl.0 cache, locks:2
20.11 15:38:08 TIMER: Check auto-disconnect...
20.11 15:38:15 STATS: vdl.0 cache, locks:2
20.11 15:39:08 TIMER: Check auto-disconnect...
20.11 15:39:15 STATS: vdl.0 cache, locks:2
20.11 15:40:08 TIMER: Check auto-disconnect...
20.11 15:40:15 STATS: vdl.0 cache, locks:2
20.11 15:41:08 TIMER: Check auto-disconnect...
20.11 15:41:15 STATS: vdl.0 cache, locks:2
20.11 15:42:08 TIMER: Check auto-disconnect...
20.11 15:42:15 STATS: vdl.0 cache, locks:2
20.11 15:43:08 TIMER: Check auto-disconnect...
20.11 15:43:15 STATS: vdl.0 cache, locks:2
20.11 15:44:08 TIMER: Check auto-disconnect...
20.11 15:44:15 STATS: vdl.0 cache, locks:2
20.11 15:45:08 TIMER: Check auto-disconnect...
20.11 15:45:15 STATS: vdl.0 cache, locks:2
20.11 15:46:08 TIMER: Check auto-disconnect...
20.11 15:46:15 STATS: vdl.0 cache, locks:2
20.11 15:47:08 TIMER: Check auto-disconnect...
20.11 15:47:15 STATS: vdl.0 cache, locks:2
20.11 15:48:08 TIMER: Check auto-disconnect...
20.11 15:48:15 STATS: vdl.0 cache, locks:2
20.11 15:49:08 TIMER: Check auto-disconnect...
20.11 15:49:15 STATS: vdl.0 cache, locks:2
20.11 15:50:08 TIMER: Check auto-disconnect...
20.11 15:50:15 STATS: vdl.0 cache, locks:2
20.11 15:51:08 TIMER: Check auto-disconnect...
20.11 15:51:15 STATS: vdl.0 cache, locks:2
20.11 15:52:08 TIMER: Check auto-disconnect...
20.11 15:52:15 STATS: vdl.0 cache, locks:2
20.11 15:52:49 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.11 15:52:49 TIME: user.ping 0.2 ms
20.11 15:52:49 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.11 15:53:08 TIMER: Check auto-disconnect...
20.11 15:53:15 STATS: vdl.0 cache, locks:2
20.11 15:54:08 TIMER: Check auto-disconnect...
20.11 15:54:15 STATS: vdl.0 cache, locks:2
20.11 15:55:08 TIMER: Check auto-disconnect...
20.11 15:55:15 STATS: vdl.0 cache, locks:2
20.11 15:55:27 ++ NET: Aimer req: user.ping { messageType => user.ping, msg => ok }
20.11 15:55:27 TIME: user.ping 0.1 ms
20.11 15:55:27 == NET: Aimer ret: user.ping { type => user.ping, errorCode => ok }
20.11 15:56:08 TIMER: Check auto-disconnect...
20.11 15:56:15 STATS: vdl.0 cache, locks:2
20.11 15:57:08 TIMER: Check auto-disconnect...
20.11 15:57:15 STATS: vdl.0 cache, locks:2
20.11 15:58:08 TIMER: Check auto-disconnect...
20.11 15:58:15 STATS: vdl.0 cache, locks:2
20.11 15:59:08 TIMER: Check auto-disconnect...
20.11 15:59:15 STATS: vdl.0 cache, locks:2
