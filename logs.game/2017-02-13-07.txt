13.02 07:00:32 STATS: vdl.0 cache, locks:0
13.02 07:00:47 TIMER: Check auto-disconnect...
13.02 07:01:32 STATS: vdl.0 cache, locks:0
13.02 07:01:47 TIMER: Check auto-disconnect...
13.02 07:02:32 STATS: vdl.0 cache, locks:0
13.02 07:02:47 TIMER: Check auto-disconnect...
13.02 07:03:32 STATS: vdl.0 cache, locks:0
13.02 07:03:47 TIMER: Check auto-disconnect...
13.02 07:04:32 STATS: vdl.0 cache, locks:0
13.02 07:04:47 TIMER: Check auto-disconnect...
13.02 07:05:32 STATS: vdl.0 cache, locks:0
13.02 07:05:47 TIMER: Check auto-disconnect...
13.02 07:06:32 STATS: vdl.0 cache, locks:0
13.02 07:06:47 TIMER: Check auto-disconnect...
13.02 07:07:32 STATS: vdl.0 cache, locks:0
13.02 07:07:47 TIMER: Check auto-disconnect...
13.02 07:08:32 STATS: vdl.0 cache, locks:0
13.02 07:08:47 TIMER: Check auto-disconnect...
13.02 07:09:32 STATS: vdl.0 cache, locks:0
13.02 07:09:47 TIMER: Check auto-disconnect...
13.02 07:10:32 STATS: vdl.0 cache, locks:0
13.02 07:10:47 TIMER: Check auto-disconnect...
13.02 07:11:32 STATS: vdl.0 cache, locks:0
13.02 07:11:47 TIMER: Check auto-disconnect...
13.02 07:12:32 STATS: vdl.0 cache, locks:0
13.02 07:12:47 TIMER: Check auto-disconnect...
13.02 07:13:32 STATS: vdl.0 cache, locks:0
13.02 07:13:47 TIMER: Check auto-disconnect...
13.02 07:14:32 STATS: vdl.0 cache, locks:0
13.02 07:14:47 TIMER: Check auto-disconnect...
13.02 07:15:32 STATS: vdl.0 cache, locks:0
13.02 07:15:47 TIMER: Check auto-disconnect...
13.02 07:16:32 STATS: vdl.0 cache, locks:0
13.02 07:16:47 TIMER: Check auto-disconnect...
13.02 07:17:32 STATS: vdl.0 cache, locks:0
13.02 07:17:47 TIMER: Check auto-disconnect...
13.02 07:18:32 STATS: vdl.0 cache, locks:0
13.02 07:18:47 TIMER: Check auto-disconnect...
13.02 07:19:32 STATS: vdl.0 cache, locks:0
13.02 07:19:47 TIMER: Check auto-disconnect...
13.02 07:20:32 STATS: vdl.0 cache, locks:0
13.02 07:20:47 TIMER: Check auto-disconnect...
13.02 07:20:53 NET: Client (conid:9288801) connected to vdl.0 (clients:1)
13.02 07:20:54 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
13.02 07:20:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
13.02 07:20:54 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
13.02 07:20:54 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
13.02 07:20:54 STATS: vdl.0 cache connection, 480 calls, total 0.439371347427368 sec spent, avg 0.92 ms
13.02 07:20:54 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
13.02 07:20:54 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
13.02 07:20:54 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
13.02 07:20:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1486978966, lastLoginDate => 44, lastLoadDate => 214 }, effects => { list => [] } }}, version => 0, id => 60 } }
13.02 07:20:54 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
13.02 07:20:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
13.02 07:20:54 NET: Client login (conid:9288801, id:60, name:uid60)
13.02 07:20:54 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
13.02 07:20:54 -<<-: core/user.loginPost { _type => core/user.loginPost }
13.02 07:20:54 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
13.02 07:20:54 == NET: uid60 ret: user.join { name => uid60, type => user.join }
13.02 07:20:57 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
13.02 07:20:57 TIME: user.ping 0.11 ms
13.02 07:20:57 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
13.02 07:21:02 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
13.02 07:21:02 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.02 07:21:32 STATS: vdl.0 cache, locks:2
13.02 07:21:47 TIMER: Check auto-disconnect...
13.02 07:22:32 STATS: vdl.0 cache, locks:2
13.02 07:22:47 TIMER: Check auto-disconnect...
13.02 07:23:32 STATS: vdl.0 cache, locks:2
13.02 07:23:47 TIMER: Check auto-disconnect...
13.02 07:24:32 STATS: vdl.0 cache, locks:2
13.02 07:24:47 TIMER: Check auto-disconnect...
13.02 07:24:47 NET: Client (name:uid60 conid:9288801 TCP) disconnected from vdl.0 (clients:0)
13.02 07:24:47 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
13.02 07:24:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
13.02 07:24:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.02 07:24:47 STATS: vdl.0 cache connection, 486 calls, total 0.444392442703247 sec spent, avg 0.91 ms
13.02 07:24:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.02 07:24:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
13.02 07:24:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.02 07:24:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
13.02 07:24:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
13.02 07:24:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
13.02 07:24:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
13.02 07:24:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.02 07:24:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
13.02 07:24:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
13.02 07:25:32 STATS: vdl.0 cache, locks:0
13.02 07:25:47 TIMER: Check auto-disconnect...
13.02 07:26:32 STATS: vdl.0 cache, locks:0
13.02 07:26:47 TIMER: Check auto-disconnect...
13.02 07:27:32 STATS: vdl.0 cache, locks:0
13.02 07:27:47 TIMER: Check auto-disconnect...
13.02 07:28:32 STATS: vdl.0 cache, locks:0
13.02 07:28:47 TIMER: Check auto-disconnect...
13.02 07:29:32 STATS: vdl.0 cache, locks:0
13.02 07:29:47 TIMER: Check auto-disconnect...
13.02 07:30:32 STATS: vdl.0 cache, locks:0
13.02 07:30:47 TIMER: Check auto-disconnect...
13.02 07:31:32 STATS: vdl.0 cache, locks:0
13.02 07:31:47 TIMER: Check auto-disconnect...
13.02 07:32:32 STATS: vdl.0 cache, locks:0
13.02 07:32:47 TIMER: Check auto-disconnect...
13.02 07:33:32 STATS: vdl.0 cache, locks:0
13.02 07:33:47 TIMER: Check auto-disconnect...
13.02 07:34:32 STATS: vdl.0 cache, locks:0
13.02 07:34:47 TIMER: Check auto-disconnect...
13.02 07:35:32 STATS: vdl.0 cache, locks:0
13.02 07:35:47 TIMER: Check auto-disconnect...
13.02 07:36:32 STATS: vdl.0 cache, locks:0
13.02 07:36:47 TIMER: Check auto-disconnect...
13.02 07:37:32 STATS: vdl.0 cache, locks:0
13.02 07:37:47 TIMER: Check auto-disconnect...
13.02 07:38:32 STATS: vdl.0 cache, locks:0
13.02 07:38:47 TIMER: Check auto-disconnect...
13.02 07:39:32 STATS: vdl.0 cache, locks:0
13.02 07:39:47 TIMER: Check auto-disconnect...
13.02 07:40:32 STATS: vdl.0 cache, locks:0
13.02 07:40:47 TIMER: Check auto-disconnect...
13.02 07:41:32 STATS: vdl.0 cache, locks:0
13.02 07:41:47 TIMER: Check auto-disconnect...
13.02 07:42:32 STATS: vdl.0 cache, locks:0
13.02 07:42:47 TIMER: Check auto-disconnect...
13.02 07:43:32 STATS: vdl.0 cache, locks:0
13.02 07:43:47 TIMER: Check auto-disconnect...
13.02 07:44:32 STATS: vdl.0 cache, locks:0
13.02 07:44:47 TIMER: Check auto-disconnect...
13.02 07:45:32 STATS: vdl.0 cache, locks:0
13.02 07:45:47 TIMER: Check auto-disconnect...
13.02 07:46:32 STATS: vdl.0 cache, locks:0
13.02 07:46:47 TIMER: Check auto-disconnect...
13.02 07:47:32 STATS: vdl.0 cache, locks:0
13.02 07:47:47 TIMER: Check auto-disconnect...
13.02 07:48:33 STATS: vdl.0 cache, locks:0
13.02 07:48:47 TIMER: Check auto-disconnect...
13.02 07:49:33 STATS: vdl.0 cache, locks:0
13.02 07:49:47 TIMER: Check auto-disconnect...
13.02 07:50:33 STATS: vdl.0 cache, locks:0
13.02 07:50:47 TIMER: Check auto-disconnect...
13.02 07:51:33 STATS: vdl.0 cache, locks:0
13.02 07:51:47 TIMER: Check auto-disconnect...
13.02 07:52:33 STATS: vdl.0 cache, locks:0
13.02 07:52:47 TIMER: Check auto-disconnect...
13.02 07:52:54 NET: Client (conid:38479474) connected to vdl.0 (clients:1)
13.02 07:52:54 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
13.02 07:52:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
13.02 07:52:54 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
13.02 07:52:54 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
13.02 07:52:54 STATS: vdl.0 cache connection, 491 calls, total 0.446027278900146 sec spent, avg 0.91 ms
13.02 07:52:54 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
13.02 07:52:54 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
13.02 07:52:54 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
13.02 07:52:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1486978966, lastLoginDate => 44, lastLoadDate => 214 }, effects => { list => [] } }}, version => 0, id => 60 } }
13.02 07:52:54 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
13.02 07:52:54 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
13.02 07:52:54 NET: Client login (conid:38479474, id:60, name:uid60)
13.02 07:52:54 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
13.02 07:52:54 -<<-: core/user.loginPost { _type => core/user.loginPost }
13.02 07:52:54 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
13.02 07:52:54 == NET: uid60 ret: user.join { name => uid60, type => user.join }
13.02 07:52:56 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
13.02 07:52:56 TIME: user.ping 0.11 ms
13.02 07:52:56 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
13.02 07:53:03 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
13.02 07:53:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.02 07:53:12 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
13.02 07:53:12 TIME: user.ping 0.08 ms
13.02 07:53:12 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
13.02 07:53:29 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
13.02 07:53:29 TIME: user.ping 0.11 ms
13.02 07:53:29 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
13.02 07:53:33 STATS: vdl.0 cache, locks:2
13.02 07:53:47 TIMER: Check auto-disconnect...
13.02 07:54:33 STATS: vdl.0 cache, locks:2
13.02 07:54:47 TIMER: Check auto-disconnect...
13.02 07:55:33 STATS: vdl.0 cache, locks:2
13.02 07:55:47 TIMER: Check auto-disconnect...
13.02 07:56:33 STATS: vdl.0 cache, locks:2
13.02 07:56:47 TIMER: Check auto-disconnect...
13.02 07:56:47 NET: Client (name:uid60 conid:38479474 TCP) disconnected from vdl.0 (clients:0)
13.02 07:56:47 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
13.02 07:56:47 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
13.02 07:56:47 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
13.02 07:56:47 STATS: vdl.0 cache connection, 497 calls, total 0.450071573257446 sec spent, avg 0.91 ms
13.02 07:56:47 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.02 07:56:47 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
13.02 07:56:47 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
13.02 07:56:47 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
13.02 07:56:47 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
13.02 07:56:47 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
13.02 07:56:47 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
13.02 07:56:47 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
13.02 07:56:47 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
13.02 07:56:47 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
13.02 07:57:33 STATS: vdl.0 cache, locks:0
13.02 07:57:47 TIMER: Check auto-disconnect...
13.02 07:58:33 STATS: vdl.0 cache, locks:0
13.02 07:58:47 TIMER: Check auto-disconnect...
13.02 07:59:33 STATS: vdl.0 cache, locks:0
13.02 07:59:47 TIMER: Check auto-disconnect...
