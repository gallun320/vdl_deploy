03.11 20:00:29 NET: Client (conid:37401507) connected to vdl.0 (clients:1)
03.11 20:00:30 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:00:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:00:30 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:00:30 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:00:30 STATS: vdl.0 cache connection, 42 calls, total 0.0376112461090088 sec spent, avg 0.9 ms
03.11 20:00:30 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:00:30 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:00:30 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:00:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:00:30 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:00:30 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:00:30 NET: Client login (conid:37401507, id:107, name:uid107)
03.11 20:00:30 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:00:30 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:00:30 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:00:30 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:00:34 TIMER: Check auto-disconnect...
03.11 20:00:34 STATS: vdl.0 cache, locks:2
03.11 20:00:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:00:35 TIME: user.ping 0.14 ms
03.11 20:00:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:00:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:00:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:00:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:00:42 TIME: user.ping 0.23 ms
03.11 20:00:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:00:50 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:00:50 TIME: user.ping 0.23 ms
03.11 20:00:50 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:00:58 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:00:58 TIME: user.ping 0.11 ms
03.11 20:00:58 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:01:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:01:12 TIME: user.ping 0.19 ms
03.11 20:01:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:01:22 NET: Client (name:uid107 conid:37401507 TCP) disconnected from vdl.0 (clients:0)
03.11 20:01:22 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:01:22 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:01:22 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:01:22 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:01:22 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:01:22 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:01:22 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:01:22 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:01:22 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:01:22 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:01:22 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:01:22 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:01:22 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:01:30 NET: Client (conid:23332431) connected to vdl.0 (clients:1)
03.11 20:01:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:01:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:01:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:01:31 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:01:31 STATS: vdl.0 cache connection, 53 calls, total 0.0489253997802734 sec spent, avg 0.92 ms
03.11 20:01:31 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:01:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:01:31 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:01:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 107 } }
03.11 20:01:31 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:01:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 107 } }
03.11 20:01:31 NET: Client login (conid:23332431, id:107, name:uid107)
03.11 20:01:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:01:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:01:31 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:01:31 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:01:34 TIMER: Check auto-disconnect...
03.11 20:01:34 STATS: vdl.0 cache, locks:2
03.11 20:01:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:01:35 TIME: user.ping 0.08 ms
03.11 20:01:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:01:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:01:39 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 20:01:43 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:01:43 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:01:43 TIME: user.ping 0.09 ms
03.11 20:01:56 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:01:56 TIME: user.ping 0.09 ms
03.11 20:01:56 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:01:58 NET: Client (name:uid107 conid:23332431 TCP) disconnected from vdl.0 (clients:0)
03.11 20:01:58 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:01:58 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:01:58 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:01:58 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:01:58 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:01:58 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:01:58 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:01:58 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:01:58 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 20:01:58 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:01:58 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:01:58 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:01:58 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:02:34 TIMER: Check auto-disconnect...
03.11 20:02:34 STATS: vdl.0 cache, locks:0
03.11 20:02:50 NET: Client (conid:72818543) connected to vdl.0 (clients:1)
03.11 20:02:50 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:02:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:02:50 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:02:50 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:02:50 STATS: vdl.0 cache connection, 64 calls, total 0.0605416297912598 sec spent, avg 0.95 ms
03.11 20:02:50 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:02:50 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:02:50 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:02:50 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:02:50 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:02:50 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:02:50 NET: Client login (conid:72818543, id:107, name:uid107)
03.11 20:02:50 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:02:50 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:02:50 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:02:50 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:02:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:02:55 TIME: user.ping 0.1 ms
03.11 20:02:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:02:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:02:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:03:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:03:05 TIME: user.ping 0.2 ms
03.11 20:03:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:03:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:03:16 TIME: user.ping 0.12 ms
03.11 20:03:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:03:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:03:24 TIME: user.ping 0.19 ms
03.11 20:03:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:03:31 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:03:31 TIME: user.ping 0.17 ms
03.11 20:03:31 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:03:31 NET: Client (name:uid107 conid:72818543 TCP) disconnected from vdl.0 (clients:0)
03.11 20:03:31 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:03:31 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:03:31 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:03:31 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:03:31 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:03:31 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:03:31 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:03:31 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:03:31 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:03:31 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:03:31 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:03:31 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:03:31 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:03:34 TIMER: Check auto-disconnect...
03.11 20:03:34 STATS: vdl.0 cache, locks:0
03.11 20:04:22 NET: Client (conid:81753060) connected to vdl.0 (clients:1)
03.11 20:04:23 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:04:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:04:23 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:04:23 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:04:23 STATS: vdl.0 cache connection, 75 calls, total 0.0704364776611328 sec spent, avg 0.94 ms
03.11 20:04:23 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:04:23 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:04:23 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:04:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:04:23 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:04:23 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:04:23 NET: Client login (conid:81753060, id:107, name:uid107)
03.11 20:04:23 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:04:23 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:04:23 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:04:23 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:04:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:04:27 TIME: user.ping 0.14 ms
03.11 20:04:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:04:29 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:04:29 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:04:34 TIMER: Check auto-disconnect...
03.11 20:04:34 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:04:34 TIME: user.ping 0.08 ms
03.11 20:04:34 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:04:34 STATS: vdl.0 cache, locks:2
03.11 20:04:48 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:04:48 TIME: user.ping 0.1 ms
03.11 20:04:48 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:05:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:05:02 TIME: user.ping 0.11 ms
03.11 20:05:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:05:07 NET: Client (name:uid107 conid:81753060 TCP) disconnected from vdl.0 (clients:0)
03.11 20:05:07 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:05:07 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:05:07 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:05:07 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:05:07 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:05:07 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:05:07 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:05:07 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:05:07 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:05:07 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:05:07 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:05:07 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:05:07 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:05:34 TIMER: Check auto-disconnect...
03.11 20:05:34 STATS: vdl.0 cache, locks:0
03.11 20:06:11 NET: Client (conid:11784118) connected to vdl.0 (clients:1)
03.11 20:06:12 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:06:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:06:12 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:06:12 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:06:12 STATS: vdl.0 cache connection, 86 calls, total 0.0819988250732422 sec spent, avg 0.95 ms
03.11 20:06:12 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:06:12 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:06:12 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:06:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:06:12 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:06:12 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:06:12 NET: Client login (conid:11784118, id:107, name:uid107)
03.11 20:06:12 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:06:12 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:06:12 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:06:12 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:06:16 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:06:16 TIME: user.ping 0.2 ms
03.11 20:06:16 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:06:19 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:06:19 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:06:24 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:06:24 TIME: user.ping 0.15 ms
03.11 20:06:24 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:06:31 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:06:31 TIME: user.ping 0.13 ms
03.11 20:06:31 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:06:34 TIMER: Check auto-disconnect...
03.11 20:06:34 STATS: vdl.0 cache, locks:2
03.11 20:06:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:06:44 TIME: user.ping 0.09 ms
03.11 20:06:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:06:46 NET: Client (name:uid107 conid:11784118 TCP) disconnected from vdl.0 (clients:0)
03.11 20:06:46 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:06:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:06:46 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:06:46 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:06:46 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:06:46 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:06:46 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:06:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:06:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:06:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:06:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:06:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:06:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:06:57 NET: Client (conid:41891251) connected to vdl.0 (clients:1)
03.11 20:06:58 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:06:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:06:58 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:06:58 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:06:58 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:06:58 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:06:58 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:06:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:06:58 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:06:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:06:58 NET: Client login (conid:41891251, id:107, name:uid107)
03.11 20:06:58 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:06:58 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:06:58 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:06:58 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:07:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:07:02 TIME: user.ping 0.1 ms
03.11 20:07:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:07:04 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:07:04 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:07:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:07:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:07:10 TIME: user.ping 0.13 ms
03.11 20:07:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:07:18 TIME: user.ping 0.08 ms
03.11 20:07:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:07:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:07:25 TIME: user.ping 0.07 ms
03.11 20:07:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:07:30 NET: Client (name:uid107 conid:41891251 TCP) disconnected from vdl.0 (clients:0)
03.11 20:07:30 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:07:30 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:07:30 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:07:30 STATS: vdl.0 cache connection, 103 calls, total 0.0985047817230225 sec spent, avg 0.96 ms
03.11 20:07:30 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:07:30 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:07:30 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:07:30 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:07:30 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:07:30 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:07:30 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:07:30 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:07:30 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:07:30 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:07:34 TIMER: Check auto-disconnect...
03.11 20:07:34 STATS: vdl.0 cache, locks:0
03.11 20:07:53 NET: Client (conid:33420972) connected to vdl.0 (clients:1)
03.11 20:07:53 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:07:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:07:53 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:07:53 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:07:53 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:07:53 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:07:53 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:07:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:07:53 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:07:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:07:53 NET: Client login (conid:33420972, id:107, name:uid107)
03.11 20:07:53 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:07:53 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:07:53 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:07:53 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:07:58 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:07:58 TIME: user.ping 0.08 ms
03.11 20:07:58 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:07:59 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:07:59 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:08:05 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:08:05 TIME: user.ping 0.08 ms
03.11 20:08:05 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:08:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:08:12 TIME: user.ping 0.21 ms
03.11 20:08:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:08:17 NET: Client (name:uid107 conid:33420972 TCP) disconnected from vdl.0 (clients:0)
03.11 20:08:17 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:08:17 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:08:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:08:17 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:08:17 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:08:17 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:08:17 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:08:17 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:08:17 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:08:17 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:08:17 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:08:17 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:08:17 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:08:34 TIMER: Check auto-disconnect...
03.11 20:08:34 STATS: vdl.0 cache, locks:0
03.11 20:08:34 TIMER: Check auto-disconnect...
03.11 20:08:34 STATS: vdl.0 cache, locks:0
03.11 20:09:36 NET: Client (conid:63769196) connected to vdl.0 (clients:1)
03.11 20:09:38 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:09:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:09:38 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:09:38 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:09:38 STATS: vdl.0 cache connection, 119 calls, total 0.112019777297974 sec spent, avg 0.94 ms
03.11 20:09:38 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:09:38 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:09:38 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:09:38 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:09:38 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:09:38 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:09:38 NET: Client login (conid:63769196, id:107, name:uid107)
03.11 20:09:38 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:09:38 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:09:38 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:09:38 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:09:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:09:42 TIME: user.ping 0.11 ms
03.11 20:09:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:09:44 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:09:44 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:09:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:09:49 TIME: user.ping 0.16 ms
03.11 20:09:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:09:57 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:09:57 TIME: user.ping 0.2 ms
03.11 20:09:57 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:04 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:04 TIME: user.ping 0.16 ms
03.11 20:10:04 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:11 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:11 TIME: user.ping 0.18 ms
03.11 20:10:11 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:18 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:18 TIME: user.ping 0.16 ms
03.11 20:10:18 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:25 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:25 TIME: user.ping 0.17 ms
03.11 20:10:25 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:32 TIME: user.ping 0.15 ms
03.11 20:10:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:34 TIMER: Check auto-disconnect...
03.11 20:10:34 STATS: vdl.0 cache, locks:2
03.11 20:10:39 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:39 TIME: user.ping 0.17 ms
03.11 20:10:39 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:46 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:46 TIME: user.ping 0.14 ms
03.11 20:10:46 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:53 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:53 TIME: user.ping 0.18 ms
03.11 20:10:53 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:10:59 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:10:59 TIME: user.ping 0.16 ms
03.11 20:10:59 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:11:08 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:11:08 TIME: user.ping 0.18 ms
03.11 20:11:08 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:11:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:11:15 TIME: user.ping 0.14 ms
03.11 20:11:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:11:26 NET: Client (name:uid107 conid:63769196 TCP) disconnected from vdl.0 (clients:0)
03.11 20:11:26 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:11:26 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:11:26 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:11:26 STATS: vdl.0 cache connection, 125 calls, total 0.117512941360474 sec spent, avg 0.94 ms
03.11 20:11:26 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:11:26 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:11:26 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:11:26 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:11:26 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:11:26 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:11:26 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:11:26 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:11:26 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:11:26 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:11:34 TIMER: Check auto-disconnect...
03.11 20:11:34 STATS: vdl.0 cache, locks:0
03.11 20:22:18 NET: Client (conid:7793618) connected to vdl.0 (clients:1)
03.11 20:22:18 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 20:22:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:22:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:22:18 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 20:22:18 STATS: vdl.0 cache connection, 130 calls, total 0.123010873794556 sec spent, avg 0.95 ms
03.11 20:22:18 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:22:18 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:22:18 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:22:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 20:22:18 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:22:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 20:22:18 NET: Client login (conid:7793618, id:114, name:uid114)
03.11 20:22:18 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:22:18 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:22:18 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 20:22:18 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 20:22:22 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:22:22 TIME: user.ping 0.15 ms
03.11 20:22:22 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:22:25 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 20:22:25 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:22:29 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:22:29 TIME: user.ping 0.15 ms
03.11 20:22:29 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:22:34 TIMER: Check auto-disconnect...
03.11 20:22:35 STATS: vdl.0 cache, locks:2
03.11 20:22:36 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:22:36 TIME: user.ping 0.16 ms
03.11 20:22:36 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:22:43 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:22:43 TIME: user.ping 0.12 ms
03.11 20:22:43 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:22:51 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:22:51 TIME: user.ping 0.18 ms
03.11 20:22:51 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:22:57 NET: Client (conid:48945089) connected to vdl.0 (clients:2)
03.11 20:22:58 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:22:58 TIME: user.ping 0.16 ms
03.11 20:22:58 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:22:58 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:22:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:22:58 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:22:58 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:22:58 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:22:58 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:22:58 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:22:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:22:58 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:22:58 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:22:58 NET: Client login (conid:48945089, id:107, name:uid107)
03.11 20:22:58 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:22:58 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:22:58 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:22:58 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 20:22:58 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 20:22:58 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:23:03 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:23:03 TIME: user.ping 0.17 ms
03.11 20:23:03 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:23:05 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:23:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:23:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:23:10 TIME: user.ping 0.19 ms
03.11 20:23:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:23:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:23:23 TIME: user.ping 0.17 ms
03.11 20:23:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:23:34 TIMER: Check auto-disconnect...
03.11 20:23:35 STATS: vdl.0 cache, locks:4
03.11 20:24:17 NET: Client (name:uid107 conid:48945089 TCP) disconnected from vdl.0 (clients:1)
03.11 20:24:17 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:24:17 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:24:17 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:24:17 STATS: vdl.0 cache connection, 142 calls, total 0.139484643936157 sec spent, avg 0.98 ms
03.11 20:24:17 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:24:17 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:24:17 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:24:17 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:24:17 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:24:17 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:24:17 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:24:17 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:24:17 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:24:17 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:24:34 TIMER: Check auto-disconnect...
03.11 20:24:35 STATS: vdl.0 cache, locks:2
03.11 20:25:34 TIMER: Check auto-disconnect...
03.11 20:25:35 STATS: vdl.0 cache, locks:2
03.11 20:26:34 TIMER: Check auto-disconnect...
03.11 20:26:34 NET: Client (name:uid114 conid:7793618 TCP) disconnected from vdl.0 (clients:0)
03.11 20:26:34 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 20:26:34 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 20:26:34 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:26:34 STATS: vdl.0 cache connection, 147 calls, total 0.148427248001099 sec spent, avg 1.01 ms
03.11 20:26:34 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:26:34 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:26:34 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:26:34 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:26:34 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 20:26:34 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:26:34 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 20:26:34 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:26:34 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 20:26:34 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:26:35 STATS: vdl.0 cache, locks:0
03.11 20:27:30 NET: Client (conid:35512200) connected to vdl.0 (clients:1)
03.11 20:27:32 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:27:32 TRACE: User not logon yet.
03.11 20:27:34 TIMER: Check auto-disconnect...
03.11 20:27:35 STATS: vdl.0 cache, locks:0
03.11 20:27:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:27:40 TRACE: User not logon yet.
03.11 20:27:40 NET: Client (name:null conid:35512200 TCP) disconnected from vdl.0 (clients:0)
03.11 20:28:08 NET: Client (conid:47329787) connected to vdl.0 (clients:1)
03.11 20:28:09 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:28:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:28:09 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:28:09 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:28:09 STATS: vdl.0 cache connection, 152 calls, total 0.153823375701904 sec spent, avg 1.01 ms
03.11 20:28:09 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:28:09 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:28:09 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:28:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:28:09 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:28:09 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:28:09 NET: Client login (conid:47329787, id:107, name:uid107)
03.11 20:28:09 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:28:09 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:28:09 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:28:09 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:28:14 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:28:14 TIME: user.ping 0.18 ms
03.11 20:28:14 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:28:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:28:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:28:19 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 20:28:19 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 20:28:19 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 20:28:19 TIME: battle.find 0.55 ms
03.11 20:28:19 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 20:28:27 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:28:27 TIME: user.ping 0.18 ms
03.11 20:28:27 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:28:34 TIMER: Check auto-disconnect...
03.11 20:28:35 STATS: vdl.0 cache, locks:2
03.11 20:28:40 NET: Client (conid:24816311) connected to vdl.0 (clients:2)
03.11 20:28:42 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:28:42 TIME: user.ping 0.2 ms
03.11 20:28:42 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:28:44 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE1 }
03.11 20:28:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
03.11 20:28:44 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
03.11 20:28:44 -<<-: core/server.query { list => {{ name => uid115, networkid => , isbanned => false, id => 115 }}, errorCode => ok, _type => core/server.query }
03.11 20:28:44 ->>-: core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
03.11 20:28:44 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:28:44 ->>-: core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
03.11 20:28:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid115, deleted => false, email => , networktype =>   , password => uid115, isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478188735, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 115 } }
03.11 20:28:44 ->>-: core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
03.11 20:28:44 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 115 } }
03.11 20:28:44 NET: Client login (conid:24816311, id:115, name:uid115)
03.11 20:28:44 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 20:28:44 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:28:44 == NET: uid115 ret: user.login { name => uid115, type => user.login, errorCode => ok, id => 115 }
03.11 20:28:44 == NET: uid107 ret: user.join { name => uid115, type => user.join }
03.11 20:28:44 == NET: uid115 ret: user.join { name => uid107, type => user.join }
03.11 20:28:44 == NET: uid115 ret: user.join { name => uid115, type => user.join }
03.11 20:28:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 115, _type => core/cache.update }
03.11 20:28:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:28:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:28:55 TIME: user.ping 0.18 ms
03.11 20:28:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:28:55 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:28:55 TIME: user.ping 0.17 ms
03.11 20:28:55 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:29:08 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:29:08 TIME: user.ping 0.17 ms
03.11 20:29:08 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:29:13 ++ NET: uid115 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 20:29:13 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 115 }, _type => vdl/cache.battle.findRandom }
03.11 20:29:13 -<<-: battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 2, battleId => 7, player => 1 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 20:29:13 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 1, battleId => 7, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 20:29:13 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 20:29:13 STATS: vdl.0 cache connection, 165 calls, total 0.252580404281616 sec spent, avg 1.53 ms
03.11 20:29:13 TIME: battle.find 81.77 ms
03.11 20:29:13 == NET: uid115 ret: battle.find { type => battle.find, errorCode => ok }
03.11 20:29:13 == NET: uid115 ret: battle.enemy { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 2, battleId => 7, player => 1 }, type => battle.enemy }
03.11 20:29:13 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 1, battleId => 7, player => 2 }, type => battle.enemy }
03.11 20:29:20 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:29:20 TIME: user.ping 0.15 ms
03.11 20:29:20 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:29:22 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:29:22 TIME: user.ping 0.17 ms
03.11 20:29:22 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:29:25 ++ NET: uid115 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 7 }
03.11 20:29:25 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
03.11 20:29:25 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 20:29:25 TIME: battle.sendtask 0.66 ms
03.11 20:29:25 == NET: uid115 ret: battle.cubes { name => throw, type => battle.task, dices => [3,4,3,5,2,2], errorCode => ok }
03.11 20:29:25 == NET: uid115 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 20:29:25 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [3,4,3,5,2,2], errorCode => ok }
03.11 20:29:34 TIMER: Check auto-disconnect...
03.11 20:29:35 STATS: vdl.0 cache, locks:4
03.11 20:29:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:29:35 TIME: user.ping 0.17 ms
03.11 20:29:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:29:44 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:29:44 TIME: user.ping 0.17 ms
03.11 20:29:44 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:29:49 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:29:49 TIME: user.ping 0.2 ms
03.11 20:29:49 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:30:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:30:02 TIME: user.ping 0.22 ms
03.11 20:30:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:30:08 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:30:08 TIME: user.ping 0.17 ms
03.11 20:30:08 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:30:15 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:30:15 TIME: user.ping 0.18 ms
03.11 20:30:15 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:30:28 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:30:28 TIME: user.ping 0.18 ms
03.11 20:30:28 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:30:33 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:30:33 TIME: user.ping 0.17 ms
03.11 20:30:33 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:30:34 TIMER: Check auto-disconnect...
03.11 20:30:35 STATS: vdl.0 cache, locks:4
03.11 20:30:57 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:30:57 TIME: user.ping 0.19 ms
03.11 20:30:57 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:31:07 NET: Client (conid:28718613) connected to vdl.0 (clients:3)
03.11 20:31:08 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 20:31:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:31:08 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:31:08 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 20:31:08 STATS: vdl.0 cache connection, 167 calls, total 0.254337549209595 sec spent, avg 1.52 ms
03.11 20:31:08 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:31:08 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:31:08 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:31:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 20:31:08 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:31:08 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 20:31:08 NET: Client login (conid:28718613, id:114, name:uid114)
03.11 20:31:08 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:31:08 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:31:08 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 20:31:08 == NET: uid115 ret: user.join { name => uid114, type => user.join }
03.11 20:31:08 == NET: uid107 ret: user.join { name => uid114, type => user.join }
03.11 20:31:08 == NET: uid114 ret: user.join { name => uid107, type => user.join }
03.11 20:31:08 == NET: uid114 ret: user.join { name => uid115, type => user.join }
03.11 20:31:08 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 20:31:10 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:31:10 TIME: user.ping 0.19 ms
03.11 20:31:10 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:31:11 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:31:11 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:31:11 TIME: user.ping 0.14 ms
03.11 20:31:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 20:31:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:31:19 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:31:19 TIME: user.ping 0.15 ms
03.11 20:31:19 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:31:21 ++ NET: uid115 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 7 }
03.11 20:31:21 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
03.11 20:31:21 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 20:31:21 TIME: battle.sendtask 2.38 ms
03.11 20:31:21 == NET: uid115 ret: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, type => battle.sendtask, messageType => battle.sendtask, to => [0,0], battleId => 7 }
03.11 20:31:22 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:31:22 TIME: user.ping 0.16 ms
03.11 20:31:22 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:31:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:31:23 TIME: user.ping 0.16 ms
03.11 20:31:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:31:40 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 20:31:40 -<<-: server.login ok
03.11 20:31:40 DB: SELECT * FROM LocalizationStrings
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 TIMER: Starting timer...
03.11 20:31:40 TIMER: Timer running...
03.11 20:31:40 DB: SELECT * FROM GameVars
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
03.11 20:31:40 -<<-: core/quest.getDaily ok
03.11 20:31:40 DB: SELECT * FROM UserAttributeTypes
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM UserVariableTypes
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 20:31:40 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM ItemGroups
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM Bundles ORDER BY ID
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 SHOP: loading items...
03.11 20:31:40 ->>-: core/shop.getList { _type => core/shop.getList }
03.11 20:31:40 -<<-: core/shop.getList ok
03.11 20:31:40 SHOP: 0 items loaded (0.001 sec)
03.11 20:31:40 DB: SELECT * FROM EffectAttributeTypes
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM Effects
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 20:31:40 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 20:31:40 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:40 DB: SELECT * FROM Badges
03.11 20:31:40 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 20:31:40 -<<-: core/server.query ok
03.11 20:31:49 NET: Client (conid:30898397) connected to vdl.0 (clients:1)
03.11 20:31:50 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:31:50 TRACE: User not logon yet.
03.11 20:31:58 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:31:58 TRACE: User not logon yet.
03.11 20:32:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:05 TRACE: User not logon yet.
03.11 20:32:12 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:12 TRACE: User not logon yet.
03.11 20:32:19 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:19 TRACE: User not logon yet.
03.11 20:32:27 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:27 TRACE: User not logon yet.
03.11 20:32:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:34 TRACE: User not logon yet.
03.11 20:32:35 NET: Client (conid:70903436) connected to vdl.0 (clients:2)
03.11 20:32:40 TIMER: Check auto-disconnect...
03.11 20:32:40 STATS: vdl.0 cache, locks:0
03.11 20:32:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:41 TRACE: User not logon yet.
03.11 20:32:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:41 TRACE: User not logon yet.
03.11 20:32:41 NET: Client (conid:38703159) connected to vdl.0 (clients:3)
03.11 20:32:44 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:44 TRACE: User not logon yet.
03.11 20:32:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:48 TRACE: User not logon yet.
03.11 20:32:56 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:32:56 TRACE: User not logon yet.
03.11 20:32:58 NET: Client (name:null conid:30898397 TCP) disconnected from vdl.0 (clients:2)
03.11 20:33:01 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:33:01 TRACE: User not logon yet.
03.11 20:33:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:33:06 TRACE: User not logon yet.
03.11 20:33:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:33:15 TRACE: User not logon yet.
03.11 20:33:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:33:28 TRACE: User not logon yet.
03.11 20:33:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:33:31 TRACE: User not logon yet.
03.11 20:33:40 TIMER: Check auto-disconnect...
03.11 20:33:40 STATS: vdl.0 cache, locks:0
03.11 20:33:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:33:41 TRACE: User not logon yet.
03.11 20:33:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:33:54 TRACE: User not logon yet.
03.11 20:33:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:33:55 TRACE: User not logon yet.
03.11 20:34:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:34:07 TRACE: User not logon yet.
03.11 20:34:10 NET: Client (conid:18706395) connected to vdl.0 (clients:3)
03.11 20:34:11 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 20:34:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:34:11 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:34:11 -<<-: core/server.query ok
03.11 20:34:11 STATS: vdl.0 cache connection, 21 calls, total 0.0740594863891602 sec spent, avg 3.53 ms
03.11 20:34:11 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:34:11 -<<-: core/user.isOnlineID ok
03.11 20:34:11 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:34:11 -<<-: core/cache.get ok
03.11 20:34:11 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:34:11 -<<-: core/cache.get ok
03.11 20:34:11 NET: Client login (conid:18706395, id:114, name:uid114)
03.11 20:34:11 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:34:11 -<<-: core/user.loginPost null
03.11 20:34:11 == NET: null ret: user.join { name => uid114, type => user.join }
03.11 20:34:11 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 20:34:11 == NET: null ret: user.join { name => uid114, type => user.join }
03.11 20:34:11 == NET: uid114 ret: user.join { name => null, type => user.join }
03.11 20:34:11 == NET: uid114 ret: user.join { name => null, type => user.join }
03.11 20:34:11 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 20:34:14 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:34:14 TIME: user.ping 0.18 ms
03.11 20:34:14 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:34:16 NET: Client (name:uid114 conid:18706395 TCP) disconnected from vdl.0 (clients:2)
03.11 20:34:16 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 20:34:16 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 20:34:16 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:34:16 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:34:16 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:34:16 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:34:16 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:34:16 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 20:34:16 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:34:16 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 20:34:16 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:34:16 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 20:34:16 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:34:20 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:34:20 TRACE: User not logon yet.
03.11 20:34:21 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:34:21 TRACE: User not logon yet.
03.11 20:34:34 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:34:34 TRACE: User not logon yet.
03.11 20:34:40 TIMER: Check auto-disconnect...
03.11 20:34:40 STATS: vdl.0 cache, locks:0
03.11 20:34:44 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:34:44 TRACE: User not logon yet.
03.11 20:34:47 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:34:47 TRACE: User not logon yet.
03.11 20:34:52 NET: Client (conid:43260923) connected to vdl.0 (clients:3)
03.11 20:34:53 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 20:34:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:34:53 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:34:53 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 20:34:53 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:34:53 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:34:53 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:34:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 20:34:53 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:34:53 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 20:34:53 NET: Client login (conid:43260923, id:114, name:uid114)
03.11 20:34:53 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:34:53 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:34:53 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 20:34:53 == NET: null ret: user.join { name => uid114, type => user.join }
03.11 20:34:53 == NET: null ret: user.join { name => uid114, type => user.join }
03.11 20:34:53 == NET: uid114 ret: user.join { name => null, type => user.join }
03.11 20:34:53 == NET: uid114 ret: user.join { name => null, type => user.join }
03.11 20:34:53 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 20:34:57 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:34:57 TIME: user.ping 0.14 ms
03.11 20:34:57 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:35:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:35:00 TRACE: User not logon yet.
03.11 20:35:00 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 20:35:00 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:35:04 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:35:04 TIME: user.ping 0.15 ms
03.11 20:35:04 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:35:06 NET: Client (name:uid114 conid:43260923 TCP) disconnected from vdl.0 (clients:2)
03.11 20:35:06 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 20:35:06 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 20:35:06 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:35:06 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:35:06 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:35:06 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:35:06 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:35:06 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 20:35:06 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:35:06 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 20:35:06 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:35:06 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 20:35:06 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:35:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:35:13 TRACE: User not logon yet.
03.11 20:35:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:35:26 TRACE: User not logon yet.
03.11 20:35:30 NET: Client (conid:52161392) connected to vdl.0 (clients:3)
03.11 20:35:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE0 }
03.11 20:35:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:35:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:35:31 -<<-: core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 20:35:31 STATS: vdl.0 cache connection, 42 calls, total 0.101452589035034 sec spent, avg 2.42 ms
03.11 20:35:31 ->>-: core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:35:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:35:31 ->>-: core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:35:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 20:35:31 ->>-: core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:35:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 20:35:31 NET: Client login (conid:52161392, id:114, name:uid114)
03.11 20:35:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:35:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:35:31 == NET: uid114 ret: user.login { name => uid114, type => user.login, errorCode => ok, id => 114 }
03.11 20:35:31 == NET: uid114 ret: user.join { name => null, type => user.join }
03.11 20:35:31 == NET: uid114 ret: user.join { name => null, type => user.join }
03.11 20:35:31 == NET: uid114 ret: user.join { name => uid114, type => user.join }
03.11 20:35:31 == NET: null ret: user.join { name => uid114, type => user.join }
03.11 20:35:31 == NET: null ret: user.join { name => uid114, type => user.join }
03.11 20:35:35 ++ NET: uid114 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:35:35 TIME: user.ping 0.18 ms
03.11 20:35:35 == NET: uid114 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:35:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:35:39 TRACE: User not logon yet.
03.11 20:35:40 TIMER: Check auto-disconnect...
03.11 20:35:40 STATS: vdl.0 cache, locks:2
03.11 20:35:40 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 20:35:40 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:35:52 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:35:52 TRACE: User not logon yet.
03.11 20:36:33 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 20:36:33 -<<-: server.login ok
03.11 20:36:33 DB: SELECT * FROM LocalizationStrings
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 TIMER: Starting timer...
03.11 20:36:33 TIMER: Timer running...
03.11 20:36:33 DB: SELECT * FROM GameVars
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
03.11 20:36:33 -<<-: core/quest.getDaily ok
03.11 20:36:33 DB: SELECT * FROM UserAttributeTypes
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM UserVariableTypes
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 20:36:33 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM ItemGroups
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM Bundles ORDER BY ID
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 SHOP: loading items...
03.11 20:36:33 ->>-: core/shop.getList { _type => core/shop.getList }
03.11 20:36:33 -<<-: core/shop.getList ok
03.11 20:36:33 SHOP: 0 items loaded (0 sec)
03.11 20:36:33 DB: SELECT * FROM EffectAttributeTypes
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM Effects
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 20:36:33 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 20:36:33 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 DB: SELECT * FROM Badges
03.11 20:36:33 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 20:36:33 -<<-: core/server.query ok
03.11 20:36:33 NET: Client (conid:32739438) connected to vdl.0 (clients:1)
03.11 20:36:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:36:36 TRACE: User not logon yet.
03.11 20:36:44 NET: Client (conid:1182271) connected to vdl.0 (clients:2)
03.11 20:36:46 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:36:46 TRACE: User not logon yet.
03.11 20:36:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:36:49 TRACE: User not logon yet.
03.11 20:36:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:36:53 TRACE: User not logon yet.
03.11 20:37:00 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:00 TRACE: User not logon yet.
03.11 20:37:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:02 TRACE: User not logon yet.
03.11 20:37:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:07 TRACE: User not logon yet.
03.11 20:37:14 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:14 TRACE: User not logon yet.
03.11 20:37:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:15 TRACE: User not logon yet.
03.11 20:37:17 NET: Client (name:null conid:32739438 TCP) disconnected from vdl.0 (clients:1)
03.11 20:37:22 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:22 TRACE: User not logon yet.
03.11 20:37:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:29 TRACE: User not logon yet.
03.11 20:37:33 TIMER: Check auto-disconnect...
03.11 20:37:33 STATS: vdl.0 cache, locks:0
03.11 20:37:36 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:36 TRACE: User not logon yet.
03.11 20:37:44 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:44 TRACE: User not logon yet.
03.11 20:37:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:51 TRACE: User not logon yet.
03.11 20:37:59 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:37:59 TRACE: User not logon yet.
03.11 20:38:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:38:06 TRACE: User not logon yet.
03.11 20:38:13 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:38:13 TRACE: User not logon yet.
03.11 20:38:21 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:38:21 TRACE: User not logon yet.
03.11 20:38:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:38:28 TRACE: User not logon yet.
03.11 20:38:33 TIMER: Check auto-disconnect...
03.11 20:38:33 STATS: vdl.0 cache, locks:0
03.11 20:38:35 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:38:35 TRACE: User not logon yet.
03.11 20:38:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:38:42 TRACE: User not logon yet.
03.11 20:38:49 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:38:49 TRACE: User not logon yet.
03.11 20:38:57 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:38:57 TRACE: User not logon yet.
03.11 20:39:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:39:04 TRACE: User not logon yet.
03.11 20:39:11 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:39:11 TRACE: User not logon yet.
03.11 20:39:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:39:18 TRACE: User not logon yet.
03.11 20:39:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:39:26 TRACE: User not logon yet.
03.11 20:39:33 TIMER: Check auto-disconnect...
03.11 20:39:33 STATS: vdl.0 cache, locks:0
03.11 20:39:33 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:39:33 TRACE: User not logon yet.
03.11 20:39:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:39:41 TRACE: User not logon yet.
03.11 20:39:48 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:39:48 TRACE: User not logon yet.
03.11 20:39:55 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:39:55 TRACE: User not logon yet.
03.11 20:40:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:40:02 TRACE: User not logon yet.
03.11 20:40:09 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:40:09 TRACE: User not logon yet.
03.11 20:40:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:40:16 TRACE: User not logon yet.
03.11 20:40:24 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:40:24 TRACE: User not logon yet.
03.11 20:40:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:40:31 TRACE: User not logon yet.
03.11 20:40:33 TIMER: Check auto-disconnect...
03.11 20:40:33 STATS: vdl.0 cache, locks:0
03.11 20:40:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:40:39 TRACE: User not logon yet.
03.11 20:40:44 NET: Client (name:null conid:1182271 TCP) disconnected from vdl.0 (clients:0)
03.11 20:41:33 TIMER: Check auto-disconnect...
03.11 20:41:33 STATS: vdl.0 cache, locks:0
03.11 20:41:33 TIMER: Check auto-disconnect...
03.11 20:41:33 STATS: vdl.0 cache, locks:0
03.11 20:41:33 TIMER: Check auto-disconnect...
03.11 20:41:33 STATS: vdl.0 cache, locks:0
03.11 20:41:33 TIMER: Check auto-disconnect...
03.11 20:41:33 STATS: vdl.0 cache, locks:0
03.11 20:44:38 NET: Client (conid:36763268) connected to vdl.0 (clients:1)
03.11 20:44:39 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:44:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:44:39 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:44:39 -<<-: core/server.query ok
03.11 20:44:39 STATS: vdl.0 cache connection, 21 calls, total 0.0462958812713623 sec spent, avg 2.2 ms
03.11 20:44:39 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:44:39 -<<-: core/user.isOnlineID ok
03.11 20:44:39 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:44:39 -<<-: core/cache.get ok
03.11 20:44:39 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:44:39 -<<-: core/cache.get ok
03.11 20:44:39 NET: Client login (conid:36763268, id:107, name:uid107)
03.11 20:44:39 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:44:39 -<<-: core/user.loginPost null
03.11 20:44:39 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:44:39 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:44:44 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:44:44 TIME: user.ping 0.21 ms
03.11 20:44:44 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:44:48 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:44:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:44:55 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:44:55 TIME: user.ping 0.19 ms
03.11 20:44:55 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:45:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:45:23 TIME: user.ping 0.17 ms
03.11 20:45:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:45:32 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:45:32 TIME: user.ping 0.15 ms
03.11 20:45:32 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:45:33 TIMER: Check auto-disconnect...
03.11 20:45:33 STATS: vdl.0 cache, locks:2
03.11 20:45:46 NET: Client (name:uid107 conid:36763268 TCP) disconnected from vdl.0 (clients:0)
03.11 20:45:46 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:45:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:45:46 -<<-: core/server.query { list => {{ id => 7 }}, errorCode => ok, _type => core/server.query }
03.11 20:45:46 STATS: vdl.0 cache connection, 27 calls, total 0.0576086044311523 sec spent, avg 2.13 ms
03.11 20:45:46 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
03.11 20:45:46 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 20:45:46 ->>-: vdl/cache.battle.finishRoom { roomId => 7, _type => vdl/cache.battle.finishRoom }
03.11 20:45:46 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 20:45:46 ->>-: core/user.sendTo { id => 115, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 20:45:46 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 20:45:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:45:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:45:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:45:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:45:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:45:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:45:57 NET: Client (conid:91293544) connected to vdl.0 (clients:1)
03.11 20:45:57 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:45:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:45:57 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:45:57 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:45:57 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:45:57 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:45:57 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:45:57 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:45:57 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:45:57 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:45:57 NET: Client login (conid:91293544, id:107, name:uid107)
03.11 20:45:57 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:45:57 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:45:57 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:45:57 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:46:02 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:46:02 TIME: user.ping 0.16 ms
03.11 20:46:02 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:46:03 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:46:03 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:46:13 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:46:13 TIME: user.ping 0.18 ms
03.11 20:46:13 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:46:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:46:23 TIME: user.ping 0.19 ms
03.11 20:46:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:46:23 NET: Client (name:uid107 conid:91293544 TCP) disconnected from vdl.0 (clients:0)
03.11 20:46:23 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:46:23 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:46:23 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:46:23 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:46:23 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:46:23 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:46:23 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 408
Called from modules/VDLBattleModule.hx line 421
Called from snipe/slave/Server.hx line 994
03.11 20:46:23 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:46:23 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:46:23 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:46:23 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:46:23 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:46:23 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:46:33 TIMER: Check auto-disconnect...
03.11 20:46:33 STATS: vdl.0 cache, locks:0
03.11 20:47:01 NET: Client (conid:40517448) connected to vdl.0 (clients:1)
03.11 20:47:07 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:47:07 TRACE: User not logon yet.
03.11 20:47:31 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:47:31 TRACE: User not logon yet.
03.11 20:47:33 TIMER: Check auto-disconnect...
03.11 20:47:33 STATS: vdl.0 cache, locks:0
03.11 20:47:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:47:54 TRACE: User not logon yet.
03.11 20:48:18 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:48:18 TRACE: User not logon yet.
03.11 20:48:33 TIMER: Check auto-disconnect...
03.11 20:48:33 STATS: vdl.0 cache, locks:0
03.11 20:48:42 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:48:42 TRACE: User not logon yet.
03.11 20:49:06 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:49:06 TRACE: User not logon yet.
03.11 20:49:30 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:49:30 TRACE: User not logon yet.
03.11 20:49:33 TIMER: Check auto-disconnect...
03.11 20:49:33 STATS: vdl.0 cache, locks:0
03.11 20:49:54 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:49:54 TRACE: User not logon yet.
03.11 20:50:17 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:50:17 TRACE: User not logon yet.
03.11 20:50:33 TIMER: Check auto-disconnect...
03.11 20:50:33 STATS: vdl.0 cache, locks:0
03.11 20:50:41 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:50:41 TRACE: User not logon yet.
03.11 20:51:05 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:51:05 TRACE: User not logon yet.
03.11 20:51:29 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:51:29 TRACE: User not logon yet.
03.11 20:51:33 TIMER: Check auto-disconnect...
03.11 20:51:33 STATS: vdl.0 cache, locks:0
03.11 20:51:53 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:51:53 TRACE: User not logon yet.
03.11 20:52:16 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:52:16 TRACE: User not logon yet.
03.11 20:52:33 TIMER: Check auto-disconnect...
03.11 20:52:33 STATS: vdl.0 cache, locks:0
03.11 20:52:40 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:52:40 TRACE: User not logon yet.
03.11 20:53:04 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:53:04 TRACE: User not logon yet.
03.11 20:53:28 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:53:28 TRACE: User not logon yet.
03.11 20:53:33 TIMER: Check auto-disconnect...
03.11 20:53:33 STATS: vdl.0 cache, locks:0
03.11 20:53:51 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:53:51 TRACE: User not logon yet.
03.11 20:54:15 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:54:15 TRACE: User not logon yet.
03.11 20:54:33 TIMER: Check auto-disconnect...
03.11 20:54:33 STATS: vdl.0 cache, locks:0
03.11 20:54:39 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:54:39 TRACE: User not logon yet.
03.11 20:55:03 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:55:03 TRACE: User not logon yet.
03.11 20:55:26 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:55:26 TRACE: User not logon yet.
03.11 20:55:33 TIMER: Check auto-disconnect...
03.11 20:55:33 STATS: vdl.0 cache, locks:0
03.11 20:55:50 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:55:50 TRACE: User not logon yet.
03.11 20:56:14 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:56:14 TRACE: User not logon yet.
03.11 20:56:33 TIMER: Check auto-disconnect...
03.11 20:56:33 STATS: vdl.0 cache, locks:0
03.11 20:56:38 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:56:38 TRACE: User not logon yet.
03.11 20:57:02 ++ NET: null req: user.ping { messageType => user.ping, msg => ok }
03.11 20:57:02 TRACE: User not logon yet.
03.11 20:57:15 NET: Client (name:null conid:40517448 TCP) disconnected from vdl.0 (clients:0)
03.11 20:57:33 NET: Client (conid:86388419) connected to vdl.0 (clients:1)
03.11 20:57:33 TIMER: Check auto-disconnect...
03.11 20:57:33 STATS: vdl.0 cache, locks:0
03.11 20:57:34 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTA3 }
03.11 20:57:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:57:34 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:57:34 -<<-: core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:57:34 STATS: vdl.0 cache connection, 45 calls, total 0.0766425132751465 sec spent, avg 1.7 ms
03.11 20:57:34 ->>-: core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:57:34 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:57:34 ->>-: core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:57:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:57:34 ->>-: core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:57:34 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:57:34 NET: Client login (conid:86388419, id:107, name:uid107)
03.11 20:57:34 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:57:34 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:57:34 == NET: uid107 ret: user.login { name => uid107, type => user.login, errorCode => ok, id => 107 }
03.11 20:57:34 == NET: uid107 ret: user.join { name => uid107, type => user.join }
03.11 20:57:37 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:57:37 TIME: user.ping 0.22 ms
03.11 20:57:37 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:57:42 NET: Client (conid:47951249) connected to vdl.0 (clients:2)
03.11 20:57:43 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:57:43 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:57:45 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:57:45 TIME: user.ping 0.19 ms
03.11 20:57:45 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:57:46 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTE1 }
03.11 20:57:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
03.11 20:57:46 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
03.11 20:57:46 -<<-: core/server.query { list => {{ name => uid115, networkid => , isbanned => false, id => 115 }}, errorCode => ok, _type => core/server.query }
03.11 20:57:46 ->>-: core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
03.11 20:57:46 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:57:46 ->>-: core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
03.11 20:57:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid115, deleted => false, email => , networktype =>   , password => uid115, isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478188735, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 115 } }
03.11 20:57:46 ->>-: core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
03.11 20:57:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 115 } }
03.11 20:57:46 NET: Client login (conid:47951249, id:115, name:uid115)
03.11 20:57:46 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 20:57:46 -<<-: core/user.loginPost { _type => core/user.loginPost }
03.11 20:57:46 == NET: uid115 ret: user.login { name => uid115, type => user.login, errorCode => ok, id => 115 }
03.11 20:57:46 == NET: uid107 ret: user.join { name => uid115, type => user.join }
03.11 20:57:46 == NET: uid115 ret: user.join { name => uid107, type => user.join }
03.11 20:57:46 == NET: uid115 ret: user.join { name => uid115, type => user.join }
03.11 20:57:52 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:57:52 TIME: user.ping 0.17 ms
03.11 20:57:52 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:57:53 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 115, _type => core/cache.update }
03.11 20:57:53 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:57:59 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:57:59 TIME: user.ping 0.18 ms
03.11 20:57:59 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:57:59 ++ NET: uid107 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 20:57:59 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 20:57:59 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 20:57:59 TIME: battle.find 0.55 ms
03.11 20:57:59 == NET: uid107 ret: battle.find { type => battle.find, errorCode => ok }
03.11 20:58:00 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:58:00 TIME: user.ping 0.13 ms
03.11 20:58:00 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:58:06 ++ NET: uid115 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
03.11 20:58:06 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 115 }, _type => vdl/cache.battle.findRandom }
03.11 20:58:06 -<<-: battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 2, battleId => 8, player => 1 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 20:58:06 -<<-: battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 1, battleId => 8, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 20:58:06 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 20:58:06 TIME: battle.find 46.87 ms
03.11 20:58:06 == NET: uid115 ret: battle.find { type => battle.find, errorCode => ok }
03.11 20:58:06 == NET: uid115 ret: battle.enemy { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 2, battleId => 8, player => 1 }, type => battle.enemy }
03.11 20:58:06 == NET: uid107 ret: battle.enemy { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 1, battleId => 8, player => 2 }, type => battle.enemy }
03.11 20:58:12 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:58:12 TIME: user.ping 0.18 ms
03.11 20:58:12 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:58:21 ++ NET: uid115 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 8 }
03.11 20:58:21 ->>-: vdl/cache.battle.infoRoom { roomId => 8, _type => vdl/cache.battle.infoRoom }
03.11 20:58:21 -<<-: vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 20:58:21 TIME: battle.sendtask 0.64 ms
03.11 20:58:21 == NET: uid115 ret: battle.sendtask { name => throw, type => battle.task, dices => [0,0,2,2,3,0], errorCode => ok }
03.11 20:58:21 == NET: uid115 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
03.11 20:58:21 == NET: uid107 ret: battle.task { name => throw, type => battle.task, dices => [0,0,2,2,3,0], errorCode => ok }
03.11 20:58:23 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:58:23 TIME: user.ping 0.15 ms
03.11 20:58:23 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:58:23 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:58:23 TIME: user.ping 0.2 ms
03.11 20:58:23 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:58:33 TIMER: Check auto-disconnect...
03.11 20:58:33 STATS: vdl.0 cache, locks:4
03.11 20:58:35 ++ NET: uid107 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:58:35 TIME: user.ping 0.17 ms
03.11 20:58:35 == NET: uid107 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:58:48 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:58:48 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:58:48 TIME: user.ping 0.17 ms
03.11 20:59:12 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:59:12 TIME: user.ping 0.18 ms
03.11 20:59:12 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
03.11 20:59:33 TIMER: Check auto-disconnect...
03.11 20:59:33 STATS: vdl.0 cache, locks:4
03.11 20:59:36 ++ NET: uid115 req: user.ping { messageType => user.ping, msg => ok }
03.11 20:59:36 TIME: user.ping 0.19 ms
03.11 20:59:36 == NET: uid115 ret: user.ping { type => user.ping, errorCode => ok }
