19.11 16:00:30 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:00:30 TIME: user.ping 0.18 ms
19.11 16:00:30 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:00:32 TIMER: Check auto-disconnect...
19.11 16:00:33 STATS: vdl.0 cache, locks:4
19.11 16:01:31 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:01:31 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:01:31 TIME: user.ping 0.19 ms
19.11 16:01:32 TIMER: Check auto-disconnect...
19.11 16:01:33 STATS: vdl.0 cache, locks:4
19.11 16:02:31 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:02:31 TIME: user.ping 3.73 ms
19.11 16:02:31 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:02:32 TIMER: Check auto-disconnect...
19.11 16:02:33 STATS: vdl.0 cache, locks:4
19.11 16:03:32 TIMER: Check auto-disconnect...
19.11 16:03:32 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:03:32 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:03:32 TIME: user.ping 0.15 ms
19.11 16:03:33 STATS: vdl.0 cache, locks:4
19.11 16:04:32 TIMER: Check auto-disconnect...
19.11 16:04:33 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:04:33 TIME: user.ping 0.1 ms
19.11 16:04:33 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:04:33 STATS: vdl.0 cache, locks:4
19.11 16:05:32 TIMER: Check auto-disconnect...
19.11 16:05:33 STATS: vdl.0 cache, locks:4
19.11 16:05:33 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:05:33 TIME: user.ping 0.21 ms
19.11 16:05:33 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:06:32 TIMER: Check auto-disconnect...
19.11 16:06:33 STATS: vdl.0 cache, locks:4
19.11 16:06:34 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:06:34 TIME: user.ping 0.22 ms
19.11 16:06:34 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:07:32 TIMER: Check auto-disconnect...
19.11 16:07:33 STATS: vdl.0 cache, locks:4
19.11 16:07:34 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:07:34 TIME: user.ping 0.16 ms
19.11 16:07:34 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:08:32 TIMER: Check auto-disconnect...
19.11 16:08:33 STATS: vdl.0 cache, locks:4
19.11 16:09:05 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 16:09:05 -<<-: server.login ok
19.11 16:09:05 DB: SELECT * FROM LocalizationStrings
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 TIMER: Starting timer...
19.11 16:09:05 TIMER: Timer running...
19.11 16:09:05 DB: SELECT * FROM GameVars
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 16:09:05 -<<-: core/quest.getDaily ok
19.11 16:09:05 DB: SELECT * FROM UserAttributeTypes
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM UserVariableTypes
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 16:09:05 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM ItemGroups
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM Bundles ORDER BY ID
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 SHOP: loading items...
19.11 16:09:05 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 16:09:05 -<<-: core/shop.getList ok
19.11 16:09:05 SHOP: 0 items loaded (0 sec)
19.11 16:09:05 DB: SELECT * FROM EffectAttributeTypes
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM Effects
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 16:09:05 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 16:09:05 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:05 DB: SELECT * FROM Badges
19.11 16:09:05 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 16:09:05 -<<-: core/server.query ok
19.11 16:09:13 NET: Client (conid:79700565) connected to vdl.0 (clients:1)
19.11 16:09:13 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 16:09:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18'
19.11 16:09:13 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18', _type => core/server.query }
19.11 16:09:13 -<<-: core/server.query ok
19.11 16:09:13 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 16:09:13 -<<-: core/user.isOnlineID ok
19.11 16:09:13 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 16:09:13 -<<-: core/cache.get ok
19.11 16:09:13 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 16:09:13 -<<-: core/cache.get ok
19.11 16:09:13 NET: Client login (conid:79700565, id:18, name:uid18)
19.11 16:09:13 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 16:09:13 -<<-: core/user.loginPost null
19.11 16:09:13 DB: SELECT ID FROM TempUserLogins WHERE UserID = 18 AND Date = 'today'::timestamp
19.11 16:09:13 ->>-: core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 18 AND Date = 'today'::timestamp, _type => core/server.query }
19.11 16:09:13 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 16:09:13 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (18, 'today'::timestamp)
19.11 16:09:13 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18 }
19.11 16:09:13 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 16:09:14 ->>-: core/server.ping { _type => core/server.ping, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (18, 'today'::timestamp), _type => core/server.pending }} }
19.11 16:09:14 -<<-: core/server.ping { errorCode => ok, _type => core/server.ping }
19.11 16:09:15 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:09:15 TIME: user.ping 0.16 ms
19.11 16:09:15 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:09:20 ->>-: core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1479560953, lastLoginDate => 324, lastLoadDate => 1120 } }}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 16:09:20 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:09:23 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:09:23 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 18 }, _type => vdl/cache.battle.findRandom }
19.11 16:09:23 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:09:23 TIME: battle.find 0.75 ms
19.11 16:09:23 == NET: uid18 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:09:32 NET: Client (conid:69115140) connected to vdl.0 (clients:2)
19.11 16:09:33 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 16:09:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 16:09:33 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 16:09:33 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 16:09:33 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 16:09:33 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:09:33 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 16:09:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 16:09:33 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 16:09:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 19 } }
19.11 16:09:33 NET: Client login (conid:69115140, id:19, name:uid19)
19.11 16:09:33 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 16:09:33 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:09:33 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 16:09:33 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 16:09:33 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 16:09:33 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 16:09:33 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:09:33 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:09:33 TIME: user.ping 0.22 ms
19.11 16:09:38 ++ NET: uid19 req: battle.end { type => closeGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 0 }
19.11 16:09:38 ->>-: vdl/cache.battle.closeFind { userId => 19, _type => vdl/cache.battle.closeFind }
19.11 16:09:38 -<<-: vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
19.11 16:09:38 TIME: battle.end 0.81 ms
19.11 16:09:38 == NET: uid19 ret: battle.end { type => battle.end, errorCode => ok }
19.11 16:09:40 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 16:09:40 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:09:41 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:09:41 TIME: user.ping 0.22 ms
19.11 16:09:41 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:09:43 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:09:43 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 16:09:43 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 2, battleId => 3, player => 1 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 16:09:43 -<<-: battle.enemyEvent { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 1, battleId => 3, player => 2 }, _isNotify => true, id => 18, _type => battle.enemyEvent }
19.11 16:09:43 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:09:43 TIME: battle.find 66.75 ms
19.11 16:09:43 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:09:43 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 2, battleId => 3, player => 1 }, type => battle.enemy }
19.11 16:09:43 == NET: uid18 ret: battle.enemy { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 1, battleId => 3, player => 2 }, type => battle.enemy }
19.11 16:09:50 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:09:50 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:09:50 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:09:50 TIME: battle.sendtask 0.89 ms
19.11 16:09:50 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,3,0,5,5,4], errorCode => ok, _type => battle.task }
19.11 16:09:50 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [5,3,0,5,5,4], errorCode => ok }
19.11 16:09:50 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:09:50 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:09:50 TIME: user.ping 0.15 ms
19.11 16:09:50 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:09:59 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,5], name => swap, side => 2, messageType => battle.sendtask, to => [8,5], battleId => 3 }
19.11 16:09:59 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:09:59 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:09:59 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:09:59 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:09:59 TIME: battle.sendtask 3.61 ms
19.11 16:09:59 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:09:59 == NET: uid18 ret: battle.task { dice => 5, from => [7,5], name => swap, side => 2, type => battle.task, dices => [3,0,5,5,4], messageType => battle.sendtask, to => [8,5], battleId => 3 }
19.11 16:10:03 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [8,5], name => swap, side => 2, messageType => battle.sendtask, to => [9,5], battleId => 3 }
19.11 16:10:03 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:03 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:03 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:10:03 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:10:03 TIME: battle.sendtask 3.14 ms
19.11 16:10:03 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:03 == NET: uid18 ret: battle.task { dice => 5, from => [8,5], name => swap, side => 2, type => battle.task, dices => [3,0,5,4], messageType => battle.sendtask, to => [9,5], battleId => 3 }
19.11 16:10:05 TIMER: Check auto-disconnect...
19.11 16:10:05 STATS: vdl.0 cache, locks:4
19.11 16:10:07 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 3 }
19.11 16:10:07 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:07 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:07 STATS: vdl.0 cache connection, 43 calls, total 0.118475914001465 sec spent, avg 2.76 ms
19.11 16:10:07 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:10:07 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:10:07 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:07 TIME: battle.sendtask 3.94 ms
19.11 16:10:07 == NET: uid18 ret: battle.task { dice => 5, from => [7,4], name => swap, side => 2, type => battle.task, dices => [3,0,4], messageType => battle.sendtask, to => [8,4], battleId => 3 }
19.11 16:10:07 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:10:07 TIME: user.ping 0.16 ms
19.11 16:10:07 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:10:10 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:10:10 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:10 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:10 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:10:10 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 18 }
19.11 16:10:10 TIME: battle.sendtask 1.28 ms
19.11 16:10:10 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:10 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:10:14 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:10:14 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:14 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:10:14 TIME: battle.sendtask 0.77 ms
19.11 16:10:14 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,5,2,2,2,1], errorCode => ok, _type => battle.task }
19.11 16:10:14 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [0,5,2,2,2,1], errorCode => ok }
19.11 16:10:14 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:19 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [2,6], name => swap, side => 1, messageType => battle.sendtask, to => [1,6], battleId => 3 }
19.11 16:10:19 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:19 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:10:19 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:10:19 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:10:19 TIME: battle.sendtask 3.62 ms
19.11 16:10:19 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:19 == NET: uid19 ret: battle.task { dice => 5, from => [2,6], name => swap, side => 1, type => battle.task, dices => [0,2,2,2,1], messageType => battle.sendtask, to => [1,6], battleId => 3 }
19.11 16:10:24 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:10:24 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:24 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:10:24 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:10:24 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:10:24 TIME: battle.sendtask 1.52 ms
19.11 16:10:24 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:24 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:10:25 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:10:25 TIME: user.ping 0.14 ms
19.11 16:10:25 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:10:28 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:10:28 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:28 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:28 TIME: battle.sendtask 0.81 ms
19.11 16:10:28 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [1,0,3,1,5,1], errorCode => ok, _type => battle.task }
19.11 16:10:28 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [1,0,3,1,5,1], errorCode => ok }
19.11 16:10:28 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:33 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 3 }
19.11 16:10:33 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:33 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:33 ->>-: vdl/cache.battle.setScores { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:10:33 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:10:33 TIME: battle.sendtask 2.96 ms
19.11 16:10:33 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:33 == NET: uid18 ret: battle.task { dice => 5, from => [8,4], name => swap, side => 2, type => battle.task, dices => [1,0,3,1,1], messageType => battle.sendtask, to => [9,4], battleId => 3 }
19.11 16:10:40 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [7,2], name => swap, side => 2, messageType => battle.sendtask, to => [8,2], battleId => 3 }
19.11 16:10:40 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:40 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:40 ->>-: vdl/cache.battle.setScores { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:10:40 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:10:40 TIME: battle.sendtask 6.13 ms
19.11 16:10:40 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:40 == NET: uid18 ret: battle.task { dice => 3, from => [7,2], name => swap, side => 2, type => battle.task, dices => [1,0,1,1], messageType => battle.sendtask, to => [8,2], battleId => 3 }
19.11 16:10:43 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:10:43 TIME: user.ping 0.18 ms
19.11 16:10:43 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:10:45 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [8,2], name => swap, side => 2, messageType => battle.sendtask, to => [7,2], battleId => 3 }
19.11 16:10:45 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:45 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:45 ->>-: vdl/cache.battle.setScores { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:10:45 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:10:45 TIME: battle.sendtask 2.69 ms
19.11 16:10:45 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:45 == NET: uid18 ret: battle.task { dice => 1, from => [8,2], name => swap, side => 2, type => battle.task, dices => [0,1,1], messageType => battle.sendtask, to => [7,2], battleId => 3 }
19.11 16:10:47 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [8,2], name => swap, side => 2, messageType => battle.sendtask, to => [9,2], battleId => 3 }
19.11 16:10:47 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:47 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:47 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:10:47 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:10:47 TIME: battle.sendtask 2.83 ms
19.11 16:10:47 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:47 == NET: uid18 ret: battle.task { dice => 1, from => [8,2], name => swap, side => 2, type => battle.task, dices => [0,1], messageType => battle.sendtask, to => [9,2], battleId => 3 }
19.11 16:10:51 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [9,2], name => swap, side => 2, messageType => battle.sendtask, to => [9,1], battleId => 3 }
19.11 16:10:51 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:51 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:51 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:10:51 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:10:51 TIME: battle.sendtask 3.67 ms
19.11 16:10:51 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:51 == NET: uid18 ret: battle.task { dice => 1, from => [9,2], name => swap, side => 2, type => battle.task, dices => [0], messageType => battle.sendtask, to => [9,1], battleId => 3 }
19.11 16:10:52 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:10:52 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:10:52 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:10:52 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:10:52 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 18 }
19.11 16:10:52 TIME: battle.sendtask 1.32 ms
19.11 16:10:52 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:10:52 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:11:00 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:11:00 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:11:00 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:11:00 TIME: battle.sendtask 0.77 ms
19.11 16:11:00 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [3,1,2,4,3,0], errorCode => ok, _type => battle.task }
19.11 16:11:00 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:11:00 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [3,1,2,4,3,0], errorCode => ok }
19.11 16:11:01 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:11:01 TIME: user.ping 0.19 ms
19.11 16:11:01 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:11:05 TIMER: Check auto-disconnect...
19.11 16:11:05 STATS: vdl.0 cache, locks:4
19.11 16:11:06 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [2,5], name => swap, side => 1, messageType => battle.sendtask, to => [1,5], battleId => 3 }
19.11 16:11:06 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:11:06 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:11:06 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:11:06 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:11:06 TIME: battle.sendtask 3.26 ms
19.11 16:11:06 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:11:06 == NET: uid19 ret: battle.task { dice => 3, from => [2,5], name => swap, side => 1, type => battle.task, dices => [1,2,4,3,0], messageType => battle.sendtask, to => [1,5], battleId => 3 }
19.11 16:11:09 ++ NET: uid18 req: battle.sendtask { dice => 2, from => [2,5], name => swap, side => 1, messageType => battle.sendtask, to => [1,5], battleId => 3 }
19.11 16:11:09 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:11:09 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:11:09 STATS: vdl.0 cache connection, 68 calls, total 0.135789155960083 sec spent, avg 2 ms
19.11 16:11:09 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:11:09 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:11:09 TIME: battle.sendtask 3.17 ms
19.11 16:11:09 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:11:09 == NET: uid19 ret: battle.task { dice => 2, from => [2,5], name => swap, side => 1, type => battle.task, dices => [1,4,3,0], messageType => battle.sendtask, to => [1,5], battleId => 3 }
19.11 16:11:13 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [2,2], name => swap, side => 1, messageType => battle.sendtask, to => [1,2], battleId => 3 }
19.11 16:11:13 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:11:13 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:11:13 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:11:13 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:11:13 TIME: battle.sendtask 3.23 ms
19.11 16:11:13 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:11:13 == NET: uid19 ret: battle.task { dice => 3, from => [2,2], name => swap, side => 1, type => battle.task, dices => [1,4,0], messageType => battle.sendtask, to => [1,2], battleId => 3 }
19.11 16:11:14 ++ NET: uid18 req: battle.sendtask { dice => 1, from => [1,2], name => swap, side => 1, messageType => battle.sendtask, to => [2,2], battleId => 3 }
19.11 16:11:14 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:11:14 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:11:14 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:11:14 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:11:14 TIME: battle.sendtask 3.27 ms
19.11 16:11:14 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:11:14 == NET: uid19 ret: battle.task { dice => 1, from => [1,2], name => swap, side => 1, type => battle.task, dices => [4,0], messageType => battle.sendtask, to => [2,2], battleId => 3 }
19.11 16:11:14 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:11:14 TIME: user.ping 0.29 ms
19.11 16:11:14 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:11:16 ++ NET: uid18 req: battle.sendtask { dice => 4, from => [2,2], name => swap, side => 1, messageType => battle.sendtask, to => [2,1], battleId => 3 }
19.11 16:11:16 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:11:16 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:11:16 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:11:16 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:11:16 TIME: battle.sendtask 3.24 ms
19.11 16:11:16 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:11:16 == NET: uid19 ret: battle.task { dice => 4, from => [2,2], name => swap, side => 1, type => battle.task, dices => [0], messageType => battle.sendtask, to => [2,1], battleId => 3 }
19.11 16:11:21 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:11:21 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:11:21 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:11:21 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:11:21 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:11:21 TIME: battle.sendtask 1.49 ms
19.11 16:11:21 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:11:21 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:11:21 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:11:21 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:11:21 TIME: user.ping 0.13 ms
19.11 16:11:31 ++ NET: uid19 req: battle.message { messageType => battle.message, message => nhgf, battleId => 3 }
19.11 16:11:31 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:11:31 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:11:31 TIME: battle.message 0.64 ms
19.11 16:11:31 == NET: uid19 ret: battle.message { type => battle.message, errorCode => ok }
19.11 16:11:31 == NET: uid18 ret: battle.message { type => battle.message, message => nhgf, player => 1 }
19.11 16:11:38 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:11:38 TIME: user.ping 0.2 ms
19.11 16:11:38 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:11:56 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:11:56 TIME: user.ping 0.18 ms
19.11 16:11:56 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:12:05 TIMER: Check auto-disconnect...
19.11 16:12:05 STATS: vdl.0 cache, locks:4
19.11 16:12:10 ++ NET: uid18 req: battle.message { messageType => battle.message, message => jvjh, battleId => 3 }
19.11 16:12:10 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:12:10 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:12:10 STATS: vdl.0 cache connection, 79 calls, total 0.143483877182007 sec spent, avg 1.82 ms
19.11 16:12:10 TIME: battle.message 2.15 ms
19.11 16:12:10 == NET: uid18 ret: battle.message { type => battle.message, errorCode => ok }
19.11 16:12:10 == NET: uid19 ret: battle.message { type => battle.message, message => jvjh, player => 2 }
19.11 16:12:14 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:12:14 TIME: user.ping 0.14 ms
19.11 16:12:14 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:12:18 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:12:18 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:12:18 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:12:18 TIME: battle.sendtask 0.86 ms
19.11 16:12:18 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [4,5,3,4,0,2], errorCode => ok, _type => battle.task }
19.11 16:12:18 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [4,5,3,4,0,2], errorCode => ok }
19.11 16:12:18 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:12:22 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 3 }
19.11 16:12:22 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:12:22 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:12:22 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:12:22 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:12:22 TIME: battle.sendtask 3.36 ms
19.11 16:12:22 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:12:22 == NET: uid18 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [4,3,4,0,2], messageType => battle.sendtask, to => [8,3], battleId => 3 }
19.11 16:12:30 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [1,6], name => swap, side => 2, messageType => battle.sendtask, to => [2,6], battleId => 3 }
19.11 16:12:30 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:12:30 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:12:30 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:12:30 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:12:30 TIME: battle.sendtask 2.72 ms
19.11 16:12:30 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:12:30 == NET: uid18 ret: battle.task { dice => 3, from => [1,6], name => swap, side => 2, type => battle.task, dices => [4,4,0,2], messageType => battle.sendtask, to => [2,6], battleId => 3 }
19.11 16:12:32 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:12:32 TIME: user.ping 0.22 ms
19.11 16:12:32 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:12:36 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [1,6], name => swap, side => 2, messageType => battle.sendtask, to => [2,6], battleId => 3 }
19.11 16:12:36 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:12:36 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:12:36 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:12:36 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:12:36 TIME: battle.sendtask 3.63 ms
19.11 16:12:36 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:12:36 == NET: uid18 ret: battle.task { dice => 2, from => [1,6], name => swap, side => 2, type => battle.task, dices => [4,4,0], messageType => battle.sendtask, to => [2,6], battleId => 3 }
19.11 16:12:43 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:12:43 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:12:43 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:12:43 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:12:43 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:12:43 TIME: battle.sendtask 1.41 ms
19.11 16:12:43 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:12:43 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:12:50 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:12:50 TIME: user.ping 0.18 ms
19.11 16:12:50 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:12:52 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:12:52 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:12:52 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:12:52 TIME: battle.sendtask 0.73 ms
19.11 16:12:52 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [4,1,2,2,4,1], errorCode => ok, _type => battle.task }
19.11 16:12:52 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [4,1,2,2,4,1], errorCode => ok }
19.11 16:12:52 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:12:55 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:12:55 TIME: user.ping 0.27 ms
19.11 16:12:55 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:12:56 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:12:56 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:12:56 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:12:56 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:12:56 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:12:56 TIME: battle.sendtask 1.44 ms
19.11 16:12:56 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:12:56 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:13:05 TIMER: Check auto-disconnect...
19.11 16:13:05 STATS: vdl.0 cache, locks:4
19.11 16:13:07 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:13:07 TIME: user.ping 0.19 ms
19.11 16:13:07 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:13:10 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:13:10 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:10 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:13:10 TIME: battle.sendtask 1.91 ms
19.11 16:13:10 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,5,1,5,2,5], errorCode => ok, _type => battle.task }
19.11 16:13:10 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:10 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [0,5,1,5,2,5], errorCode => ok }
19.11 16:13:13 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 3 }
19.11 16:13:13 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:13 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:13:13 STATS: vdl.0 cache connection, 93 calls, total 0.153089046478271 sec spent, avg 1.65 ms
19.11 16:13:13 ->>-: vdl/cache.battle.setScores { scores => [4,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:13 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:13 TIME: battle.sendtask 2.74 ms
19.11 16:13:13 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:13 == NET: uid18 ret: battle.task { dice => 5, from => [8,3], name => swap, side => 2, type => battle.task, dices => [0,1,5,2,5], messageType => battle.sendtask, to => [9,3], battleId => 3 }
19.11 16:13:15 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,6], name => swap, side => 2, messageType => battle.sendtask, to => [8,6], battleId => 3 }
19.11 16:13:15 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:15 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:13:15 ->>-: vdl/cache.battle.setScores { scores => [4,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:15 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:15 TIME: battle.sendtask 2.92 ms
19.11 16:13:15 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:15 == NET: uid18 ret: battle.task { dice => 5, from => [7,6], name => swap, side => 2, type => battle.task, dices => [0,1,2,5], messageType => battle.sendtask, to => [8,6], battleId => 3 }
19.11 16:13:17 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [8,6], name => swap, side => 2, messageType => battle.sendtask, to => [9,6], battleId => 3 }
19.11 16:13:17 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:17 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:13:17 ->>-: vdl/cache.battle.setScores { scores => [5,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:17 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:17 TIME: battle.sendtask 3.31 ms
19.11 16:13:17 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:17 == NET: uid18 ret: battle.task { dice => 5, from => [8,6], name => swap, side => 2, type => battle.task, dices => [0,1,2], messageType => battle.sendtask, to => [9,6], battleId => 3 }
19.11 16:13:25 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:13:25 TIME: user.ping 0.18 ms
19.11 16:13:25 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:13:33 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:13:33 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:33 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:13:33 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:13:33 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:13:33 TIME: battle.sendtask 2.45 ms
19.11 16:13:33 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:33 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:13:36 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:13:36 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:36 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:13:36 TIME: battle.sendtask 0.73 ms
19.11 16:13:36 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,4,2,0,5,4], errorCode => ok, _type => null }
19.11 16:13:36 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [5,4,2,0,5,4], errorCode => ok }
19.11 16:13:36 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:41 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [1,5], name => swap, side => 1, messageType => battle.sendtask, to => [0,5], battleId => 3 }
19.11 16:13:41 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:41 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:13:41 ->>-: vdl/cache.battle.setScores { scores => [5,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:41 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:41 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:41 TIME: battle.sendtask 3.49 ms
19.11 16:13:41 == NET: uid19 ret: battle.task { dice => 5, from => [1,5], name => swap, side => 1, type => battle.task, dices => [4,2,0,5,4], messageType => battle.sendtask, to => [0,5], battleId => 3 }
19.11 16:13:42 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [2,4], name => swap, side => 1, messageType => battle.sendtask, to => [1,4], battleId => 3 }
19.11 16:13:42 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:42 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:13:42 ->>-: vdl/cache.battle.setScores { scores => [5,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:42 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:42 TIME: battle.sendtask 2.89 ms
19.11 16:13:42 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:42 == NET: uid19 ret: battle.task { dice => 5, from => [2,4], name => swap, side => 1, type => battle.task, dices => [4,2,0,4], messageType => battle.sendtask, to => [1,4], battleId => 3 }
19.11 16:13:44 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:13:44 TIME: user.ping 0.16 ms
19.11 16:13:44 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:13:45 ++ NET: uid18 req: battle.sendtask { dice => 4, from => [2,1], name => swap, side => 1, messageType => battle.sendtask, to => [3,1], battleId => 3 }
19.11 16:13:45 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:45 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:13:45 ->>-: vdl/cache.battle.setScores { scores => [5,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:45 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:45 TIME: battle.sendtask 3.38 ms
19.11 16:13:45 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:45 == NET: uid19 ret: battle.task { dice => 4, from => [2,1], name => swap, side => 1, type => battle.task, dices => [2,0,4], messageType => battle.sendtask, to => [3,1], battleId => 3 }
19.11 16:13:46 ++ NET: uid18 req: battle.sendtask { dice => 4, from => [3,1], name => swap, side => 1, messageType => battle.sendtask, to => [4,1], battleId => 3 }
19.11 16:13:46 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:46 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:13:46 ->>-: vdl/cache.battle.setScores { scores => [5,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:46 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:46 TIME: battle.sendtask 3.19 ms
19.11 16:13:46 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:46 == NET: uid19 ret: battle.task { dice => 4, from => [3,1], name => swap, side => 1, type => battle.task, dices => [2,0], messageType => battle.sendtask, to => [4,1], battleId => 3 }
19.11 16:13:47 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:13:47 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:47 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:13:47 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:13:47 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:13:47 TIME: battle.sendtask 1.1 ms
19.11 16:13:47 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:47 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:13:51 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:13:51 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:51 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:13:51 TIME: battle.sendtask 0.65 ms
19.11 16:13:51 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,4,4,5,0,3], errorCode => ok, _type => battle.task }
19.11 16:13:51 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [5,4,4,5,0,3], errorCode => ok }
19.11 16:13:51 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:56 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [6,7], name => swap, side => 2, messageType => battle.sendtask, to => [6,8], battleId => 3 }
19.11 16:13:56 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:56 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:13:56 ->>-: vdl/cache.battle.setScores { scores => [5,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:56 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:56 TIME: battle.sendtask 3.34 ms
19.11 16:13:56 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:56 == NET: uid18 ret: battle.task { dice => 5, from => [6,7], name => swap, side => 2, type => battle.task, dices => [4,4,5,0,3], messageType => battle.sendtask, to => [6,8], battleId => 3 }
19.11 16:13:57 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [6,8], name => swap, side => 2, messageType => battle.sendtask, to => [6,9], battleId => 3 }
19.11 16:13:57 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:13:57 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:13:57 ->>-: vdl/cache.battle.setScores { scores => [6,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:13:57 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:13:57 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:13:57 TIME: battle.sendtask 3.03 ms
19.11 16:13:57 == NET: uid18 ret: battle.task { dice => 5, from => [6,8], name => swap, side => 2, type => battle.task, dices => [4,4,0,3], messageType => battle.sendtask, to => [6,9], battleId => 3 }
19.11 16:14:03 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:14:03 TIME: user.ping 0.18 ms
19.11 16:14:03 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:14:05 TIMER: Check auto-disconnect...
19.11 16:14:05 STATS: vdl.0 cache, locks:4
19.11 16:14:20 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:14:20 TIME: user.ping 0.2 ms
19.11 16:14:20 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:14:27 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:14:27 TIME: user.ping 0.15 ms
19.11 16:14:27 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:14:31 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [5,7], name => swap, side => 2, messageType => battle.sendtask, to => [5,8], battleId => 3 }
19.11 16:14:31 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:14:31 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:14:31 STATS: vdl.0 cache connection, 117 calls, total 0.168488502502441 sec spent, avg 1.44 ms
19.11 16:14:31 ->>-: vdl/cache.battle.setScores { scores => [6,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:14:31 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:14:31 TIME: battle.sendtask 4.93 ms
19.11 16:14:31 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:14:31 == NET: uid18 ret: battle.task { dice => 3, from => [5,7], name => swap, side => 2, type => battle.task, dices => [4,4,0], messageType => battle.sendtask, to => [5,8], battleId => 3 }
19.11 16:14:32 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:14:32 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:14:32 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:14:32 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:14:32 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:14:32 TIME: battle.sendtask 1.41 ms
19.11 16:14:32 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:14:32 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:14:36 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:14:36 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:14:36 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:14:36 TIME: battle.sendtask 0.73 ms
19.11 16:14:36 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [1,2,2,1,5,4], errorCode => ok, _type => null }
19.11 16:14:36 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [1,2,2,1,5,4], errorCode => ok }
19.11 16:14:36 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:14:39 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:14:39 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:14:39 TIME: user.ping 0.19 ms
19.11 16:14:46 ++ NET: uid18 req: battle.sendtask { dice => 2, from => [5,7], name => swap, side => 1, messageType => battle.sendtask, to => [5,8], battleId => 3 }
19.11 16:14:46 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:14:46 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:14:46 ->>-: vdl/cache.battle.setScores { scores => [6,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:14:46 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:14:46 TIME: battle.sendtask 2.75 ms
19.11 16:14:46 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:14:46 == NET: uid19 ret: battle.task { dice => 2, from => [5,7], name => swap, side => 1, type => battle.task, dices => [1,2,1,5,4], messageType => battle.sendtask, to => [5,8], battleId => 3 }
19.11 16:14:48 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [5,8], name => swap, side => 1, messageType => battle.sendtask, to => [5,9], battleId => 3 }
19.11 16:14:48 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:14:48 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:14:48 ->>-: vdl/cache.battle.setScores { scores => [7,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:14:48 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:14:48 TIME: battle.sendtask 2.16 ms
19.11 16:14:48 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:14:48 == NET: uid19 ret: battle.task { dice => 5, from => [5,8], name => swap, side => 1, type => battle.task, dices => [1,2,1,4], messageType => battle.sendtask, to => [5,9], battleId => 3 }
19.11 16:14:53 ++ NET: uid18 req: battle.sendtask { dice => 4, from => [7,2], name => swap, side => 1, messageType => battle.sendtask, to => [7,1], battleId => 3 }
19.11 16:14:53 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:14:53 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:14:53 ->>-: vdl/cache.battle.setScores { scores => [7,1], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:14:53 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:14:53 TIME: battle.sendtask 2.74 ms
19.11 16:14:53 == NET: uid19 ret: battle.task { dice => 4, from => [7,2], name => swap, side => 1, type => battle.task, dices => [1,2,1], messageType => battle.sendtask, to => [7,1], battleId => 3 }
19.11 16:14:53 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:14:57 ++ NET: uid18 req: battle.sendtask { dice => 1, from => [1,2], name => swap, side => 1, messageType => battle.sendtask, to => [0,2], battleId => 3 }
19.11 16:14:57 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:14:57 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:14:57 ->>-: vdl/cache.battle.setScores { scores => [7,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:14:57 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:14:57 TIME: battle.sendtask 2.83 ms
19.11 16:14:57 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:14:57 == NET: uid19 ret: battle.task { dice => 1, from => [1,2], name => swap, side => 1, type => battle.task, dices => [2,1], messageType => battle.sendtask, to => [0,2], battleId => 3 }
19.11 16:14:58 ++ NET: uid18 req: battle.sendtask { dice => 1, from => [0,2], name => swap, side => 1, messageType => battle.sendtask, to => [0,1], battleId => 3 }
19.11 16:14:58 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:14:58 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:14:58 ->>-: vdl/cache.battle.setScores { scores => [7,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:14:58 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:14:58 TIME: battle.sendtask 7.24 ms
19.11 16:14:58 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:14:58 == NET: uid19 ret: battle.task { dice => 1, from => [0,2], name => swap, side => 1, type => battle.task, dices => [2], messageType => battle.sendtask, to => [0,1], battleId => 3 }
19.11 16:14:59 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:14:59 TIME: user.ping 0.16 ms
19.11 16:14:59 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:15:00 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:00 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:00 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:15:00 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:15:00 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:15:00 TIME: battle.sendtask 1.07 ms
19.11 16:15:00 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:00 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:03 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:03 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:03 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:03 TIME: battle.sendtask 0.82 ms
19.11 16:15:03 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,2,3,0,4,5], errorCode => ok, _type => battle.task }
19.11 16:15:03 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [0,2,3,0,4,5], errorCode => ok }
19.11 16:15:03 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:05 TIMER: Check auto-disconnect...
19.11 16:15:05 STATS: vdl.0 cache, locks:4
19.11 16:15:08 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [6,2], name => swap, side => 2, messageType => battle.sendtask, to => [6,1], battleId => 3 }
19.11 16:15:08 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:08 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:08 ->>-: vdl/cache.battle.setScores { scores => [7,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:08 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:08 TIME: battle.sendtask 3.19 ms
19.11 16:15:08 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:08 == NET: uid18 ret: battle.task { dice => 5, from => [6,2], name => swap, side => 2, type => battle.task, dices => [0,2,3,0,4], messageType => battle.sendtask, to => [6,1], battleId => 3 }
19.11 16:15:10 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [6,1], name => swap, side => 2, messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:15:10 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:10 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:10 ->>-: vdl/cache.battle.setScores { scores => [7,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:10 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:10 TIME: battle.sendtask 3.26 ms
19.11 16:15:10 == NET: uid18 ret: battle.task { dice => 3, from => [6,1], name => swap, side => 2, type => battle.task, dices => [0,2,0,4], messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:15:10 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:12 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [6,1], name => swap, side => 2, messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:15:12 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:12 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:12 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:12 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:12 TIME: battle.sendtask 3.23 ms
19.11 16:15:12 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:12 == NET: uid18 ret: battle.task { dice => 2, from => [6,1], name => swap, side => 2, type => battle.task, dices => [0,0,4], messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:15:15 ++ NET: uid19 req: battle.sendtask { dice => 4, from => [7,1], name => swap, side => 2, messageType => battle.sendtask, to => [8,1], battleId => 3 }
19.11 16:15:15 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:15 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:15 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:15 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:15 TIME: battle.sendtask 2.57 ms
19.11 16:15:15 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:15 == NET: uid18 ret: battle.task { dice => 4, from => [7,1], name => swap, side => 2, type => battle.task, dices => [0,0], messageType => battle.sendtask, to => [8,1], battleId => 3 }
19.11 16:15:16 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:16 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:16 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:16 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:15:16 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:15:16 TIME: battle.sendtask 1.3 ms
19.11 16:15:16 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:16 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:18 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:15:18 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:15:18 TIME: user.ping 0.18 ms
19.11 16:15:21 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:21 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:21 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:15:21 TIME: battle.sendtask 0.75 ms
19.11 16:15:21 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [0,3,3,3,0,3], errorCode => ok }
19.11 16:15:21 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.task, dices => [0,3,3,3,0,3], errorCode => ok }
19.11 16:15:21 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:33 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [6,5], name => swap, side => 1, messageType => battle.sendtask, to => [7,5], battleId => 3 }
19.11 16:15:33 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:33 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:15:33 STATS: vdl.0 cache connection, 146 calls, total 0.18867039680481 sec spent, avg 1.29 ms
19.11 16:15:33 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:33 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:33 TIME: battle.sendtask 4.77 ms
19.11 16:15:33 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:33 == NET: uid19 ret: battle.task { dice => 3, from => [6,5], name => swap, side => 1, type => battle.task, dices => [0,3,3,0,3], messageType => battle.sendtask, to => [7,5], battleId => 3 }
19.11 16:15:35 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [7,5], name => swap, side => 1, messageType => battle.sendtask, to => [7,6], battleId => 3 }
19.11 16:15:35 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:35 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:15:35 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:35 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:35 TIME: battle.sendtask 2.84 ms
19.11 16:15:35 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:35 == NET: uid19 ret: battle.task { dice => 3, from => [7,5], name => swap, side => 1, type => battle.task, dices => [0,3,0,3], messageType => battle.sendtask, to => [7,6], battleId => 3 }
19.11 16:15:36 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [7,6], name => swap, side => 1, messageType => battle.sendtask, to => [8,6], battleId => 3 }
19.11 16:15:36 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:36 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:15:36 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:36 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:36 TIME: battle.sendtask 3.63 ms
19.11 16:15:36 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:36 == NET: uid19 ret: battle.task { dice => 3, from => [7,6], name => swap, side => 1, type => battle.task, dices => [0,0,3], messageType => battle.sendtask, to => [8,6], battleId => 3 }
19.11 16:15:37 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [8,6], name => swap, side => 1, messageType => battle.sendtask, to => [8,7], battleId => 3 }
19.11 16:15:37 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:37 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:15:37 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:37 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:37 TIME: battle.sendtask 2.67 ms
19.11 16:15:37 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:37 == NET: uid19 ret: battle.task { dice => 3, from => [8,6], name => swap, side => 1, type => battle.task, dices => [0,0], messageType => battle.sendtask, to => [8,7], battleId => 3 }
19.11 16:15:37 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:15:37 TIME: user.ping 0.16 ms
19.11 16:15:37 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:15:38 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:38 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:38 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:15:38 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:15:38 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:15:38 TIME: battle.sendtask 1.58 ms
19.11 16:15:38 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:38 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:42 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:15:42 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:42 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:42 TIME: battle.sendtask 0.72 ms
19.11 16:15:42 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [4,1,1,1,5,5], errorCode => ok, _type => battle.task }
19.11 16:15:42 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [4,1,1,1,5,5], errorCode => ok }
19.11 16:15:42 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:53 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [6,0], name => swap, side => 2, messageType => battle.sendtask, to => [7,0], battleId => 3 }
19.11 16:15:53 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:53 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:53 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:53 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:53 TIME: battle.sendtask 4.13 ms
19.11 16:15:53 == NET: uid18 ret: battle.task { dice => 5, from => [6,0], name => swap, side => 2, type => battle.task, dices => [4,1,1,1,5], messageType => battle.sendtask, to => [7,0], battleId => 3 }
19.11 16:15:53 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:54 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,0], name => swap, side => 2, messageType => battle.sendtask, to => [8,0], battleId => 3 }
19.11 16:15:54 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:15:54 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:15:54 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:15:54 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:15:54 TIME: battle.sendtask 3.6 ms
19.11 16:15:54 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:15:54 == NET: uid18 ret: battle.task { dice => 5, from => [7,0], name => swap, side => 2, type => battle.task, dices => [4,1,1,1], messageType => battle.sendtask, to => [8,0], battleId => 3 }
19.11 16:15:56 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:15:56 TIME: user.ping 0.16 ms
19.11 16:15:56 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:16:03 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:16:03 TIME: user.ping 0.17 ms
19.11 16:16:03 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:16:03 ++ NET: uid19 req: battle.sendtask { dice => 4, from => [4,1], name => swap, side => 2, messageType => battle.sendtask, to => [3,1], battleId => 3 }
19.11 16:16:03 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:03 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:16:03 ->>-: vdl/cache.battle.setScores { scores => [8,2], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:16:03 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:16:03 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:03 TIME: battle.sendtask 2.8 ms
19.11 16:16:03 == NET: uid18 ret: battle.task { dice => 4, from => [4,1], name => swap, side => 2, type => battle.task, dices => [1,1,1], messageType => battle.sendtask, to => [3,1], battleId => 3 }
19.11 16:16:05 TIMER: Check auto-disconnect...
19.11 16:16:05 STATS: vdl.0 cache, locks:4
19.11 16:16:05 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:16:05 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:05 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:16:05 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:16:05 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:16:05 TIME: battle.sendtask 1.04 ms
19.11 16:16:05 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:05 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:16:08 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:16:08 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:08 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:16:08 TIME: battle.sendtask 0.77 ms
19.11 16:16:08 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [1,1,3,5,2,5], errorCode => ok, _type => null }
19.11 16:16:08 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [1,1,3,5,2,5], errorCode => ok }
19.11 16:16:08 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:13 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [1,4], name => swap, side => 1, messageType => battle.sendtask, to => [0,4], battleId => 3 }
19.11 16:16:13 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:13 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:16:13 ->>-: vdl/cache.battle.setScores { scores => [8,3], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:16:13 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:16:13 TIME: battle.sendtask 3.88 ms
19.11 16:16:13 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:13 == NET: uid19 ret: battle.task { dice => 5, from => [1,4], name => swap, side => 1, type => battle.task, dices => [1,1,3,2,5], messageType => battle.sendtask, to => [0,4], battleId => 3 }
19.11 16:16:14 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:16:14 TIME: user.ping 0.11 ms
19.11 16:16:14 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:16:22 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [2,3], name => swap, side => 1, messageType => battle.sendtask, to => [1,3], battleId => 3 }
19.11 16:16:22 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:22 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:16:22 ->>-: vdl/cache.battle.setScores { scores => [8,3], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:16:22 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:16:22 TIME: battle.sendtask 2.99 ms
19.11 16:16:22 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:22 == NET: uid19 ret: battle.task { dice => 5, from => [2,3], name => swap, side => 1, type => battle.task, dices => [1,1,3,2], messageType => battle.sendtask, to => [1,3], battleId => 3 }
19.11 16:16:23 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [1,3], name => swap, side => 1, messageType => battle.sendtask, to => [0,3], battleId => 3 }
19.11 16:16:23 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:23 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:16:23 ->>-: vdl/cache.battle.setScores { scores => [8,3], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:16:24 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:16:24 TIME: battle.sendtask 3.46 ms
19.11 16:16:24 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:24 == NET: uid19 ret: battle.task { dice => 3, from => [1,3], name => swap, side => 1, type => battle.task, dices => [1,1,2], messageType => battle.sendtask, to => [0,3], battleId => 3 }
19.11 16:16:25 ++ NET: uid18 req: battle.sendtask { dice => 2, from => [1,3], name => swap, side => 1, messageType => battle.sendtask, to => [0,3], battleId => 3 }
19.11 16:16:25 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:25 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:16:25 ->>-: vdl/cache.battle.setScores { scores => [8,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:16:25 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:16:25 TIME: battle.sendtask 3.58 ms
19.11 16:16:25 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:25 == NET: uid19 ret: battle.task { dice => 2, from => [1,3], name => swap, side => 1, type => battle.task, dices => [1,1], messageType => battle.sendtask, to => [0,3], battleId => 3 }
19.11 16:16:30 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:16:30 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:30 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:16:30 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:16:30 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:16:30 TIME: battle.sendtask 1.07 ms
19.11 16:16:30 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:30 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:16:33 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:16:33 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:33 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:16:33 TIME: battle.sendtask 0.83 ms
19.11 16:16:33 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,4,5,5,1,0], errorCode => ok, _type => battle.task }
19.11 16:16:33 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [2,4,5,5,1,0], errorCode => ok }
19.11 16:16:33 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:33 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:16:33 TIME: user.ping 0.17 ms
19.11 16:16:33 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:16:49 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [5,2], name => swap, side => 2, messageType => battle.sendtask, to => [5,1], battleId => 3 }
19.11 16:16:49 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:49 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:16:49 STATS: vdl.0 cache connection, 177 calls, total 0.207383155822754 sec spent, avg 1.17 ms
19.11 16:16:49 ->>-: vdl/cache.battle.setScores { scores => [8,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:16:49 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:16:49 TIME: battle.sendtask 4.36 ms
19.11 16:16:49 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:49 == NET: uid18 ret: battle.task { dice => 5, from => [5,2], name => swap, side => 2, type => battle.task, dices => [2,4,5,1,0], messageType => battle.sendtask, to => [5,1], battleId => 3 }
19.11 16:16:51 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:16:51 TIME: user.ping 0.16 ms
19.11 16:16:51 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:16:51 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [5,1], name => swap, side => 2, messageType => battle.sendtask, to => [5,0], battleId => 3 }
19.11 16:16:51 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:16:51 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:16:51 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:16:51 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:16:51 TIME: battle.sendtask 2.46 ms
19.11 16:16:51 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:16:51 == NET: uid18 ret: battle.task { dice => 5, from => [5,1], name => swap, side => 2, type => battle.task, dices => [2,4,1,0], messageType => battle.sendtask, to => [5,0], battleId => 3 }
19.11 16:17:01 ++ NET: uid19 req: battle.sendtask { dice => 4, from => [3,1], name => swap, side => 2, messageType => battle.sendtask, to => [2,1], battleId => 3 }
19.11 16:17:01 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:01 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:17:01 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:01 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:01 TIME: battle.sendtask 3.32 ms
19.11 16:17:01 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:01 == NET: uid18 ret: battle.task { dice => 4, from => [3,1], name => swap, side => 2, type => battle.task, dices => [2,1,0], messageType => battle.sendtask, to => [2,1], battleId => 3 }
19.11 16:17:05 TIMER: Check auto-disconnect...
19.11 16:17:05 STATS: vdl.0 cache, locks:4
19.11 16:17:09 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:17:09 TIME: user.ping 0.18 ms
19.11 16:17:09 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:17:10 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [6,5], name => swap, side => 2, messageType => battle.sendtask, to => [7,5], battleId => 3 }
19.11 16:17:10 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:10 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:17:10 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:10 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:10 TIME: battle.sendtask 3.51 ms
19.11 16:17:10 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:10 == NET: uid18 ret: battle.task { dice => 2, from => [6,5], name => swap, side => 2, type => battle.task, dices => [1,0], messageType => battle.sendtask, to => [7,5], battleId => 3 }
19.11 16:17:13 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:17:13 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:13 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:17:13 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:17:13 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:17:13 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:13 TIME: battle.sendtask 1.57 ms
19.11 16:17:13 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:17:18 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:17:18 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:18 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:17:18 TIME: battle.sendtask 0.78 ms
19.11 16:17:18 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.task, dices => [3,1,5,1,4,0], errorCode => ok }
19.11 16:17:18 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [3,1,5,1,4,0], errorCode => ok }
19.11 16:17:18 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:26 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [5,0], name => swap, side => 1, messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:17:26 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:26 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:17:26 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:26 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:26 TIME: battle.sendtask 3.93 ms
19.11 16:17:26 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:26 == NET: uid19 ret: battle.task { dice => 5, from => [5,0], name => swap, side => 1, type => battle.task, dices => [3,1,1,4,0], messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:17:28 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:17:28 TIME: user.ping 0.17 ms
19.11 16:17:28 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:17:30 ++ NET: uid18 req: battle.sendtask { dice => 4, from => [8,1], name => swap, side => 1, messageType => battle.sendtask, to => [9,1], battleId => 3 }
19.11 16:17:30 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:30 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:17:30 ->>-: vdl/cache.battle.setScores { scores => [8,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:30 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:30 TIME: battle.sendtask 3.92 ms
19.11 16:17:30 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:30 == NET: uid19 ret: battle.task { dice => 4, from => [8,1], name => swap, side => 1, type => battle.task, dices => [3,1,1,0], messageType => battle.sendtask, to => [9,1], battleId => 3 }
19.11 16:17:35 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:17:35 TIME: user.ping 0.18 ms
19.11 16:17:35 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:17:40 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [8,7], name => swap, side => 1, messageType => battle.sendtask, to => [8,8], battleId => 3 }
19.11 16:17:40 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:40 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:17:40 ->>-: vdl/cache.battle.setScores { scores => [8,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:40 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:40 TIME: battle.sendtask 3.48 ms
19.11 16:17:40 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:40 == NET: uid19 ret: battle.task { dice => 3, from => [8,7], name => swap, side => 1, type => battle.task, dices => [1,1,0], messageType => battle.sendtask, to => [8,8], battleId => 3 }
19.11 16:17:41 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:17:41 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:41 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:17:41 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:17:41 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:17:41 TIME: battle.sendtask 1.24 ms
19.11 16:17:41 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:41 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:17:45 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:17:45 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:45 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:17:45 TIME: battle.sendtask 0.85 ms
19.11 16:17:45 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,3,4,5,0,1], errorCode => ok, _type => battle.task }
19.11 16:17:45 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [0,3,4,5,0,1], errorCode => ok }
19.11 16:17:45 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:47 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:17:47 TIME: user.ping 0.23 ms
19.11 16:17:47 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:17:49 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [6,0], name => swap, side => 2, messageType => battle.sendtask, to => [7,0], battleId => 3 }
19.11 16:17:49 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:49 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:17:49 STATS: vdl.0 cache connection, 197 calls, total 0.218754529953003 sec spent, avg 1.11 ms
19.11 16:17:49 ->>-: vdl/cache.battle.setScores { scores => [8,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:49 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:49 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:49 TIME: battle.sendtask 4.47 ms
19.11 16:17:49 == NET: uid18 ret: battle.task { dice => 5, from => [6,0], name => swap, side => 2, type => battle.task, dices => [0,3,4,0,1], messageType => battle.sendtask, to => [7,0], battleId => 3 }
19.11 16:17:53 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [9,1], name => swap, side => 2, messageType => battle.sendtask, to => [9,0], battleId => 3 }
19.11 16:17:53 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:53 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:17:53 ->>-: vdl/cache.battle.setScores { scores => [8,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:53 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:53 TIME: battle.sendtask 2.95 ms
19.11 16:17:53 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:53 == NET: uid18 ret: battle.task { dice => 3, from => [9,1], name => swap, side => 2, type => battle.task, dices => [0,4,0,1], messageType => battle.sendtask, to => [9,0], battleId => 3 }
19.11 16:17:55 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [9,0], name => swap, side => 2, messageType => battle.sendtask, to => [9,1], battleId => 3 }
19.11 16:17:55 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:55 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:17:55 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:55 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:55 TIME: battle.sendtask 2.48 ms
19.11 16:17:55 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:55 == NET: uid18 ret: battle.task { dice => 1, from => [9,0], name => swap, side => 2, type => battle.task, dices => [0,4,0], messageType => battle.sendtask, to => [9,1], battleId => 3 }
19.11 16:17:57 ++ NET: uid19 req: battle.sendtask { dice => 4, from => [9,1], name => swap, side => 2, messageType => battle.sendtask, to => [8,1], battleId => 3 }
19.11 16:17:57 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:17:57 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:17:57 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:17:57 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:17:57 TIME: battle.sendtask 3.2 ms
19.11 16:17:57 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:17:57 == NET: uid18 ret: battle.task { dice => 4, from => [9,1], name => swap, side => 2, type => battle.task, dices => [0,0], messageType => battle.sendtask, to => [8,1], battleId => 3 }
19.11 16:18:03 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:18:03 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:03 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:18:03 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:18:03 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:18:03 TIME: battle.sendtask 1.04 ms
19.11 16:18:03 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:03 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:18:05 TIMER: Check auto-disconnect...
19.11 16:18:05 STATS: vdl.0 cache, locks:4
19.11 16:18:06 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:18:06 TIME: user.ping 0.17 ms
19.11 16:18:06 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:18:09 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:18:09 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:09 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:18:09 TIME: battle.sendtask 0.9 ms
19.11 16:18:09 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,3,5,3,2,2], errorCode => ok, _type => battle.task }
19.11 16:18:09 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [0,3,5,3,2,2], errorCode => ok }
19.11 16:18:09 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:14 ++ NET: uid18 req: battle.sendtask { dice => 2, from => [7,5], name => swap, side => 1, messageType => battle.sendtask, to => [8,5], battleId => 3 }
19.11 16:18:14 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:14 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:18:14 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:18:14 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:18:14 TIME: battle.sendtask 2.97 ms
19.11 16:18:14 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:14 == NET: uid19 ret: battle.task { dice => 2, from => [7,5], name => swap, side => 1, type => battle.task, dices => [0,3,5,3,2], messageType => battle.sendtask, to => [8,5], battleId => 3 }
19.11 16:18:17 ++ NET: uid18 req: battle.sendtask { dice => 2, from => [8,5], name => swap, side => 1, messageType => battle.sendtask, to => [8,6], battleId => 3 }
19.11 16:18:17 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:17 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:18:17 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:18:17 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:18:17 TIME: battle.sendtask 3.41 ms
19.11 16:18:17 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:17 == NET: uid19 ret: battle.task { dice => 2, from => [8,5], name => swap, side => 1, type => battle.task, dices => [0,3,5,3], messageType => battle.sendtask, to => [8,6], battleId => 3 }
19.11 16:18:20 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [8,8], name => swap, side => 1, messageType => battle.sendtask, to => [8,9], battleId => 3 }
19.11 16:18:20 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:20 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:18:20 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:18:20 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:18:20 TIME: battle.sendtask 2.7 ms
19.11 16:18:20 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:20 == NET: uid19 ret: battle.task { dice => 3, from => [8,8], name => swap, side => 1, type => battle.task, dices => [0,5,3], messageType => battle.sendtask, to => [8,9], battleId => 3 }
19.11 16:18:25 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:18:25 TIME: user.ping 0.19 ms
19.11 16:18:25 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:18:30 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [5,6], name => swap, side => 1, messageType => battle.sendtask, to => [5,7], battleId => 3 }
19.11 16:18:30 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:30 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:18:30 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:18:30 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:18:30 TIME: battle.sendtask 3.44 ms
19.11 16:18:30 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:30 == NET: uid19 ret: battle.task { dice => 5, from => [5,6], name => swap, side => 1, type => battle.task, dices => [0,3], messageType => battle.sendtask, to => [5,7], battleId => 3 }
19.11 16:18:32 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:18:32 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:32 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:18:32 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:18:32 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:18:32 TIME: battle.sendtask 1.15 ms
19.11 16:18:32 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:32 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:18:36 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:18:36 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:36 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:18:36 TIME: battle.sendtask 0.93 ms
19.11 16:18:36 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.task, dices => [4,3,1,3,1,4], errorCode => ok }
19.11 16:18:36 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:36 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [4,3,1,3,1,4], errorCode => ok }
19.11 16:18:43 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:18:43 TIME: user.ping 0.39 ms
19.11 16:18:43 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:18:43 ++ NET: uid19 req: battle.sendtask { dice => 4, from => [8,1], name => swap, side => 2, messageType => battle.sendtask, to => [7,1], battleId => 3 }
19.11 16:18:43 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:43 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:18:43 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:18:43 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:18:43 TIME: battle.sendtask 4.39 ms
19.11 16:18:43 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:43 == NET: uid18 ret: battle.task { dice => 4, from => [8,1], name => swap, side => 2, type => battle.task, dices => [3,1,3,1,4], messageType => battle.sendtask, to => [7,1], battleId => 3 }
19.11 16:18:50 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [6,3], name => swap, side => 2, messageType => battle.sendtask, to => [7,3], battleId => 3 }
19.11 16:18:50 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:50 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:18:50 STATS: vdl.0 cache connection, 221 calls, total 0.231577396392822 sec spent, avg 1.05 ms
19.11 16:18:50 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:18:50 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:18:50 TIME: battle.sendtask 3.63 ms
19.11 16:18:50 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:50 == NET: uid18 ret: battle.task { dice => 3, from => [6,3], name => swap, side => 2, type => battle.task, dices => [1,3,1,4], messageType => battle.sendtask, to => [7,3], battleId => 3 }
19.11 16:18:54 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [6,3], battleId => 3 }
19.11 16:18:54 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:54 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:18:54 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:18:54 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:18:54 TIME: battle.sendtask 3.34 ms
19.11 16:18:54 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:54 == NET: uid18 ret: battle.task { dice => 1, from => [7,3], name => swap, side => 2, type => battle.task, dices => [3,1,4], messageType => battle.sendtask, to => [6,3], battleId => 3 }
19.11 16:18:55 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 3 }
19.11 16:18:55 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:18:55 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:18:55 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:18:55 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:18:55 TIME: battle.sendtask 2.75 ms
19.11 16:18:55 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:18:55 == NET: uid18 ret: battle.task { dice => 1, from => [7,3], name => swap, side => 2, type => battle.task, dices => [3,4], messageType => battle.sendtask, to => [8,3], battleId => 3 }
19.11 16:19:01 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:19:01 TIME: user.ping 0.2 ms
19.11 16:19:01 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:19:02 ++ NET: uid19 req: battle.sendtask { dice => 4, from => [6,3], name => swap, side => 2, messageType => battle.sendtask, to => [7,3], battleId => 3 }
19.11 16:19:02 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:02 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:02 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:02 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:02 TIME: battle.sendtask 3.21 ms
19.11 16:19:02 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:02 == NET: uid18 ret: battle.task { dice => 4, from => [6,3], name => swap, side => 2, type => battle.task, dices => [3], messageType => battle.sendtask, to => [7,3], battleId => 3 }
19.11 16:19:05 TIMER: Check auto-disconnect...
19.11 16:19:05 STATS: vdl.0 cache, locks:4
19.11 16:19:07 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:07 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:07 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:07 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:19:07 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:19:07 TIME: battle.sendtask 1.21 ms
19.11 16:19:07 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:07 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:09 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:19:09 TIME: user.ping 0.14 ms
19.11 16:19:09 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:19:10 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:10 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:10 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:10 TIME: battle.sendtask 0.66 ms
19.11 16:19:10 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.task, dices => [5,5,4,1,3,0], errorCode => ok }
19.11 16:19:10 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:10 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [5,5,4,1,3,0], errorCode => ok }
19.11 16:19:15 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [5,7], name => swap, side => 1, messageType => battle.sendtask, to => [6,7], battleId => 3 }
19.11 16:19:15 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:15 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:15 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:15 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:15 TIME: battle.sendtask 3 ms
19.11 16:19:15 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:15 == NET: uid19 ret: battle.task { dice => 5, from => [5,7], name => swap, side => 1, type => battle.task, dices => [5,4,1,3,0], messageType => battle.sendtask, to => [6,7], battleId => 3 }
19.11 16:19:16 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [6,7], name => swap, side => 1, messageType => battle.sendtask, to => [6,8], battleId => 3 }
19.11 16:19:16 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:16 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:16 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:16 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:16 TIME: battle.sendtask 2.91 ms
19.11 16:19:16 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:16 == NET: uid19 ret: battle.task { dice => 5, from => [6,7], name => swap, side => 1, type => battle.task, dices => [4,1,3,0], messageType => battle.sendtask, to => [6,8], battleId => 3 }
19.11 16:19:17 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [6,8], name => swap, side => 1, messageType => battle.sendtask, to => [7,8], battleId => 3 }
19.11 16:19:17 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:17 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:17 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:17 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:17 TIME: battle.sendtask 2.8 ms
19.11 16:19:17 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:17 == NET: uid19 ret: battle.task { dice => 3, from => [6,8], name => swap, side => 1, type => battle.task, dices => [4,1,0], messageType => battle.sendtask, to => [7,8], battleId => 3 }
19.11 16:19:19 ++ NET: uid18 req: battle.sendtask { dice => 1, from => [7,8], name => swap, side => 1, messageType => battle.sendtask, to => [6,8], battleId => 3 }
19.11 16:19:19 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:19 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:19 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:19 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:19 TIME: battle.sendtask 3.2 ms
19.11 16:19:19 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:19 == NET: uid19 ret: battle.task { dice => 1, from => [7,8], name => swap, side => 1, type => battle.task, dices => [4,0], messageType => battle.sendtask, to => [6,8], battleId => 3 }
19.11 16:19:20 ++ NET: uid18 req: battle.sendtask { dice => 4, from => [6,8], name => swap, side => 1, messageType => battle.sendtask, to => [7,8], battleId => 3 }
19.11 16:19:20 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:20 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:20 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:20 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:20 TIME: battle.sendtask 3.27 ms
19.11 16:19:20 == NET: uid19 ret: battle.task { dice => 4, from => [6,8], name => swap, side => 1, type => battle.task, dices => [0], messageType => battle.sendtask, to => [7,8], battleId => 3 }
19.11 16:19:20 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:21 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:21 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:21 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:21 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:19:21 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:19:21 TIME: battle.sendtask 1.44 ms
19.11 16:19:21 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:21 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:22 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:19:22 TIME: user.ping 0.17 ms
19.11 16:19:22 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:19:24 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:24 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:24 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:24 TIME: battle.sendtask 0.96 ms
19.11 16:19:24 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,1,2,0,1,5], errorCode => ok, _type => null }
19.11 16:19:24 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [2,1,2,0,1,5], errorCode => ok }
19.11 16:19:24 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:37 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [6,4], name => swap, side => 2, messageType => battle.sendtask, to => [6,3], battleId => 3 }
19.11 16:19:37 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:37 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:37 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:37 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:37 TIME: battle.sendtask 3.7 ms
19.11 16:19:37 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:37 == NET: uid18 ret: battle.task { dice => 5, from => [6,4], name => swap, side => 2, type => battle.task, dices => [2,1,2,0,1], messageType => battle.sendtask, to => [6,3], battleId => 3 }
19.11 16:19:40 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:19:40 TIME: user.ping 0.34 ms
19.11 16:19:40 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:19:42 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [8,6], name => swap, side => 2, messageType => battle.sendtask, to => [8,7], battleId => 3 }
19.11 16:19:42 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:42 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:42 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:42 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:42 TIME: battle.sendtask 3.51 ms
19.11 16:19:42 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:42 == NET: uid18 ret: battle.task { dice => 2, from => [8,6], name => swap, side => 2, type => battle.task, dices => [1,2,0,1], messageType => battle.sendtask, to => [8,7], battleId => 3 }
19.11 16:19:45 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [8,7], name => swap, side => 2, messageType => battle.sendtask, to => [8,8], battleId => 3 }
19.11 16:19:45 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:45 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:45 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:45 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:45 TIME: battle.sendtask 2.43 ms
19.11 16:19:45 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:45 == NET: uid18 ret: battle.task { dice => 2, from => [8,7], name => swap, side => 2, type => battle.task, dices => [1,0,1], messageType => battle.sendtask, to => [8,8], battleId => 3 }
19.11 16:19:46 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,2], battleId => 3 }
19.11 16:19:46 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:46 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:46 ->>-: vdl/cache.battle.setScores { scores => [9,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:46 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:46 TIME: battle.sendtask 3.21 ms
19.11 16:19:46 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:46 == NET: uid18 ret: battle.task { dice => 1, from => [8,3], name => swap, side => 2, type => battle.task, dices => [0,1], messageType => battle.sendtask, to => [8,2], battleId => 3 }
19.11 16:19:48 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [8,2], name => swap, side => 2, messageType => battle.sendtask, to => [9,2], battleId => 3 }
19.11 16:19:48 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:48 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:48 ->>-: vdl/cache.battle.setScores { scores => [10,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:48 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:48 TIME: battle.sendtask 2.97 ms
19.11 16:19:48 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:48 == NET: uid18 ret: battle.task { dice => 1, from => [8,2], name => swap, side => 2, type => battle.task, dices => [0], messageType => battle.sendtask, to => [9,2], battleId => 3 }
19.11 16:19:49 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:49 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:49 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:19:49 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:19:49 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:19:49 TIME: battle.sendtask 1.17 ms
19.11 16:19:49 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:49 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:53 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:19:53 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:53 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:53 STATS: vdl.0 cache connection, 257 calls, total 0.252228260040283 sec spent, avg 0.98 ms
19.11 16:19:53 TIME: battle.sendtask 0.96 ms
19.11 16:19:53 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [5,0,1,5,0,3], errorCode => ok }
19.11 16:19:53 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.task, dices => [5,0,1,5,0,3], errorCode => ok }
19.11 16:19:53 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:58 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [7,8], name => swap, side => 1, messageType => battle.sendtask, to => [7,9], battleId => 3 }
19.11 16:19:58 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:19:58 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:19:58 ->>-: vdl/cache.battle.setScores { scores => [11,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:19:58 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:19:58 TIME: battle.sendtask 3.26 ms
19.11 16:19:58 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:19:58 == NET: uid19 ret: battle.task { dice => 5, from => [7,8], name => swap, side => 1, type => battle.task, dices => [0,1,5,0,3], messageType => battle.sendtask, to => [7,9], battleId => 3 }
19.11 16:19:59 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:19:59 TIME: user.ping 0.16 ms
19.11 16:19:59 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:20:05 TIMER: Check auto-disconnect...
19.11 16:20:05 STATS: vdl.0 cache, locks:4
19.11 16:20:06 ++ NET: uid18 req: battle.sendtask { dice => 1, from => [8,9], name => swap, side => 1, messageType => battle.sendtask, to => [8,8], battleId => 3 }
19.11 16:20:06 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:06 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:20:06 ->>-: vdl/cache.battle.setScores { scores => [11,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:20:06 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:20:06 TIME: battle.sendtask 3.35 ms
19.11 16:20:06 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:06 == NET: uid19 ret: battle.task { dice => 1, from => [8,9], name => swap, side => 1, type => battle.task, dices => [0,5,0,3], messageType => battle.sendtask, to => [8,8], battleId => 3 }
19.11 16:20:14 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [5,3], name => swap, side => 1, messageType => battle.sendtask, to => [5,2], battleId => 3 }
19.11 16:20:14 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:14 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:20:14 ->>-: vdl/cache.battle.setScores { scores => [11,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:20:14 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:20:14 TIME: battle.sendtask 3.47 ms
19.11 16:20:14 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:14 == NET: uid19 ret: battle.task { dice => 5, from => [5,3], name => swap, side => 1, type => battle.task, dices => [0,0,3], messageType => battle.sendtask, to => [5,2], battleId => 3 }
19.11 16:20:17 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [6,3], name => swap, side => 1, messageType => battle.sendtask, to => [6,2], battleId => 3 }
19.11 16:20:17 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:17 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:20:17 ->>-: vdl/cache.battle.setScores { scores => [11,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:20:17 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:20:17 TIME: battle.sendtask 2.78 ms
19.11 16:20:17 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:17 == NET: uid19 ret: battle.task { dice => 3, from => [6,3], name => swap, side => 1, type => battle.task, dices => [0,0], messageType => battle.sendtask, to => [6,2], battleId => 3 }
19.11 16:20:17 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:20:17 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:17 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:20:17 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:20:17 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:20:17 TIME: battle.sendtask 1.28 ms
19.11 16:20:17 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:17 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:20:18 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:20:18 TIME: user.ping 0.14 ms
19.11 16:20:18 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:20:21 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:20:21 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:21 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:20:21 TIME: battle.sendtask 0.83 ms
19.11 16:20:21 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [4,2,2,2,3,5], errorCode => ok, _type => battle.task }
19.11 16:20:21 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [4,2,2,2,3,5], errorCode => ok }
19.11 16:20:21 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:25 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [6,3], name => swap, side => 2, messageType => battle.sendtask, to => [6,2], battleId => 3 }
19.11 16:20:25 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:25 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:20:25 ->>-: vdl/cache.battle.setScores { scores => [11,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:20:25 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:20:25 TIME: battle.sendtask 2.9 ms
19.11 16:20:25 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:25 == NET: uid18 ret: battle.task { dice => 2, from => [6,3], name => swap, side => 2, type => battle.task, dices => [4,2,2,3,5], messageType => battle.sendtask, to => [6,2], battleId => 3 }
19.11 16:20:28 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [6,2], name => swap, side => 2, messageType => battle.sendtask, to => [6,1], battleId => 3 }
19.11 16:20:28 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:28 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:20:28 ->>-: vdl/cache.battle.setScores { scores => [11,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:20:28 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:20:28 TIME: battle.sendtask 2.96 ms
19.11 16:20:28 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:28 == NET: uid18 ret: battle.task { dice => 5, from => [6,2], name => swap, side => 2, type => battle.task, dices => [4,2,2,3], messageType => battle.sendtask, to => [6,1], battleId => 3 }
19.11 16:20:30 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [6,1], name => swap, side => 2, messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:20:30 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:30 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:20:30 ->>-: vdl/cache.battle.setScores { scores => [11,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:20:30 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:20:30 TIME: battle.sendtask 3.36 ms
19.11 16:20:30 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:30 == NET: uid18 ret: battle.task { dice => 3, from => [6,1], name => swap, side => 2, type => battle.task, dices => [4,2,2], messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:20:32 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [6,1], name => swap, side => 2, messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:20:32 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:32 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:20:32 ->>-: vdl/cache.battle.setScores { scores => [12,4], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 3 }
19.11 16:20:32 -<<-: battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 19, battleId => 3 }
19.11 16:20:32 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:20:32 TIME: battle.sendtask 3.22 ms
19.11 16:20:32 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:20:32 ->>-: core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
19.11 16:20:32 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => --- DEFAULT ATTRIBUTES ---, deleted => false, email => , networktype =>   , password => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , networkid => , params => { inventory => { list => [] }, attrs => {}, effects => { list => [] } }}, version => 0, id => 1 } }
19.11 16:20:32 ->>-: core/cache.get { type => questdata, v => -1, id => 1, _type => core/cache.get }
19.11 16:20:32 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 1 } }
19.11 16:20:32 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:20:32 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:20:32 ->>-: vdl/cache.battle.finishRoom { roomId => 3, _type => vdl/cache.battle.finishRoom }
19.11 16:20:32 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 16:20:32 == NET: uid18 ret: battle.task { dice => 2, from => [6,1], name => swap, side => 2, type => battle.task, dices => [4,2], messageType => battle.sendtask, to => [6,0], battleId => 3 }
19.11 16:20:32 == NET: uid18 ret: battle.end { type => battle.end }
19.11 16:20:37 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:20:37 TIME: user.ping 0.19 ms
19.11 16:20:37 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:20:46 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:20:46 TIME: user.ping 0.18 ms
19.11 16:20:46 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:20:59 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:20:59 TIME: user.ping 0.19 ms
19.11 16:20:59 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:21:05 TIMER: Check auto-disconnect...
19.11 16:21:05 STATS: vdl.0 cache, locks:6
19.11 16:21:21 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:21:21 TIME: user.ping 0.17 ms
19.11 16:21:21 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:21:42 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:21:42 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:21:42 TIME: user.ping 0.17 ms
19.11 16:22:04 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:22:04 TIME: user.ping 0.17 ms
19.11 16:22:04 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:22:05 TIMER: Check auto-disconnect...
19.11 16:22:05 STATS: vdl.0 cache, locks:6
19.11 16:22:22 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:22:22 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:22:22 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:22:22 STATS: vdl.0 cache connection, 281 calls, total 0.269706010818481 sec spent, avg 0.96 ms
19.11 16:22:22 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 3, _type => vdl/cache.battle.makeTurn }
19.11 16:22:22 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:22:22 TIME: battle.sendtask 2.82 ms
19.11 16:22:22 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:22:22 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 3 }
19.11 16:22:25 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:22:25 TIME: user.ping 0.15 ms
19.11 16:22:25 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:22:25 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:22:25 TIME: user.ping 0.17 ms
19.11 16:22:25 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:22:47 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:22:47 TIME: user.ping 0.17 ms
19.11 16:22:47 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:23:05 TIMER: Check auto-disconnect...
19.11 16:23:05 STATS: vdl.0 cache, locks:6
19.11 16:23:08 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:23:08 TIME: user.ping 0.17 ms
19.11 16:23:08 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:23:30 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:23:30 TIME: user.ping 0.2 ms
19.11 16:23:30 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:23:52 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:23:52 TIME: user.ping 0.16 ms
19.11 16:23:52 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:24:05 TIMER: Check auto-disconnect...
19.11 16:24:05 STATS: vdl.0 cache, locks:6
19.11 16:24:13 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:24:13 TIME: user.ping 0.22 ms
19.11 16:24:13 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:24:35 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:24:35 TIME: user.ping 0.17 ms
19.11 16:24:35 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:24:57 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:24:57 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:24:57 TIME: user.ping 0.17 ms
19.11 16:25:05 TIMER: Check auto-disconnect...
19.11 16:25:06 STATS: vdl.0 cache, locks:6
19.11 16:25:18 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:25:18 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:25:18 TIME: user.ping 0.18 ms
19.11 16:25:40 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:25:40 TIME: user.ping 0.17 ms
19.11 16:25:40 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:26:01 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:26:01 TIME: user.ping 0.19 ms
19.11 16:26:01 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:26:05 TIMER: Check auto-disconnect...
19.11 16:26:05 NET: Client (name:uid19 conid:69115140 TCP) disconnected from vdl.0 (clients:1)
19.11 16:26:05 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 16:26:05 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
19.11 16:26:05 -<<-: core/server.query { list => {{ id => 3 }}, errorCode => ok, _type => core/server.query }
19.11 16:26:05 STATS: vdl.0 cache connection, 283 calls, total 0.271628141403198 sec spent, avg 0.96 ms
19.11 16:26:05 ->>-: vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
19.11 16:26:05 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:26:05 ->>-: vdl/cache.battle.deleteRoom { roomId => 3, _type => vdl/cache.battle.deleteRoom }
19.11 16:26:05 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 16:26:05 ->>-: vdl/cache.battle.finishRoom { roomId => 3, _type => vdl/cache.battle.finishRoom }
19.11 16:26:05 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 16:26:05 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 16:26:05 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 16:26:05 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 16:26:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:26:05 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 16:26:05 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 16:26:05 == NET: uid18 ret: battle.leave { type => battle.leave }
19.11 16:26:06 STATS: vdl.0 cache, locks:4
19.11 16:26:23 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:26:23 TIME: user.ping 0.17 ms
19.11 16:26:23 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:26:45 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:26:45 TIME: user.ping 0.16 ms
19.11 16:26:45 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:27:05 TIMER: Check auto-disconnect...
19.11 16:27:06 STATS: vdl.0 cache, locks:4
19.11 16:27:06 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:27:06 TIME: user.ping 0.17 ms
19.11 16:27:06 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:27:28 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:27:28 TIME: user.ping 0.19 ms
19.11 16:27:28 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:27:50 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:27:50 TIME: user.ping 0.2 ms
19.11 16:27:50 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:28:05 TIMER: Check auto-disconnect...
19.11 16:28:06 STATS: vdl.0 cache, locks:4
19.11 16:28:11 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:28:11 TIME: user.ping 0.17 ms
19.11 16:28:11 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:28:33 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:28:33 TIME: user.ping 0.16 ms
19.11 16:28:33 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:28:55 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:28:55 TIME: user.ping 0.49 ms
19.11 16:28:55 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:29:05 TIMER: Check auto-disconnect...
19.11 16:29:06 STATS: vdl.0 cache, locks:4
19.11 16:29:16 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:29:16 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:29:16 TIME: user.ping 4.15 ms
19.11 16:29:38 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:29:38 TIME: user.ping 0.17 ms
19.11 16:29:38 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:29:59 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:29:59 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:29:59 TIME: user.ping 0.19 ms
19.11 16:30:05 TIMER: Check auto-disconnect...
19.11 16:30:06 STATS: vdl.0 cache, locks:4
19.11 16:30:21 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:30:21 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:30:21 TIME: user.ping 0.17 ms
19.11 16:30:42 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:30:42 TIME: user.ping 0.08 ms
19.11 16:30:42 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:31:04 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:31:04 TIME: user.ping 0.13 ms
19.11 16:31:04 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:31:05 TIMER: Check auto-disconnect...
19.11 16:31:06 STATS: vdl.0 cache, locks:4
19.11 16:31:26 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:31:26 TIME: user.ping 0.2 ms
19.11 16:31:26 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:31:47 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:31:47 TIME: user.ping 0.16 ms
19.11 16:31:47 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:32:05 TIMER: Check auto-disconnect...
19.11 16:32:06 STATS: vdl.0 cache, locks:4
19.11 16:32:36 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 16:32:36 -<<-: server.login ok
19.11 16:32:36 DB: SELECT * FROM LocalizationStrings
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 TIMER: Starting timer...
19.11 16:32:36 TIMER: Timer running...
19.11 16:32:36 DB: SELECT * FROM GameVars
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 16:32:36 -<<-: core/quest.getDaily ok
19.11 16:32:36 DB: SELECT * FROM UserAttributeTypes
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM UserVariableTypes
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 16:32:36 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM ItemGroups
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM Bundles ORDER BY ID
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 SHOP: loading items...
19.11 16:32:36 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 16:32:36 -<<-: core/shop.getList ok
19.11 16:32:36 SHOP: 0 items loaded (0 sec)
19.11 16:32:36 DB: SELECT * FROM EffectAttributeTypes
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM Effects
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 16:32:36 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 16:32:36 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:36 DB: SELECT * FROM Badges
19.11 16:32:36 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 16:32:36 -<<-: core/server.query ok
19.11 16:32:52 NET: Client (conid:35600294) connected to vdl.0 (clients:1)
19.11 16:32:52 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 16:32:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18'
19.11 16:32:52 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18', _type => core/server.query }
19.11 16:32:52 -<<-: core/server.query ok
19.11 16:32:52 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 16:32:52 -<<-: core/user.isOnlineID ok
19.11 16:32:52 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 16:32:52 -<<-: core/cache.get ok
19.11 16:32:52 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 16:32:52 -<<-: core/cache.get ok
19.11 16:32:52 NET: Client login (conid:35600294, id:18, name:uid18)
19.11 16:32:52 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 16:32:52 -<<-: core/user.loginPost null
19.11 16:32:52 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18 }
19.11 16:32:52 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 16:32:54 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:32:54 TIME: user.ping 0.2 ms
19.11 16:32:54 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:33:01 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 16:33:01 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:33:15 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:33:15 TIME: user.ping 0.22 ms
19.11 16:33:15 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:33:36 TIMER: Check auto-disconnect...
19.11 16:33:36 STATS: vdl.0 cache, locks:2
19.11 16:33:37 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:33:37 TIME: user.ping 0.17 ms
19.11 16:33:37 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:33:58 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:33:58 TIME: user.ping 0.15 ms
19.11 16:33:58 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:34:21 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:34:21 TIME: user.ping 0.16 ms
19.11 16:34:21 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:34:36 TIMER: Check auto-disconnect...
19.11 16:34:36 STATS: vdl.0 cache, locks:2
19.11 16:34:42 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:34:42 TIME: user.ping 0.17 ms
19.11 16:34:42 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:35:36 TIMER: Check auto-disconnect...
19.11 16:35:36 STATS: vdl.0 cache, locks:2
19.11 16:35:36 TIMER: Check auto-disconnect...
19.11 16:35:36 STATS: vdl.0 cache, locks:2
19.11 16:37:11 NET: Client (name:uid18 conid:35600294 TCP) disconnected from vdl.0 (clients:0)
19.11 16:37:11 DB: SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true
19.11 16:37:11 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true, _type => core/server.query }
19.11 16:37:11 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 16:37:11 STATS: vdl.0 cache connection, 27 calls, total 0.0333118438720703 sec spent, avg 1.23 ms
19.11 16:37:11 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 16:37:11 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 16:37:11 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 16:37:11 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 994
19.11 16:37:11 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 18, _type => core/cache.update }
19.11 16:37:11 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 16:37:11 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 18, _type => core/cache.update }
19.11 16:37:11 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:37:11 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 18, _type => core/user.logoutPost }
19.11 16:37:11 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 16:37:17 NET: Client (conid:414199) connected to vdl.0 (clients:1)
19.11 16:37:18 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 16:37:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 16:37:18 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 16:37:18 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 16:37:18 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 16:37:18 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:37:18 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 16:37:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 16:37:18 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 16:37:18 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 16:37:18 NET: Client login (conid:414199, id:19, name:uid19)
19.11 16:37:18 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 16:37:18 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:37:18 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 16:37:18 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 16:37:26 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 16:37:26 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:37:26 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:37:26 TIME: user.ping 0.16 ms
19.11 16:37:26 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:37:30 NET: Client (conid:33860940) connected to vdl.0 (clients:2)
19.11 16:37:31 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 16:37:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18'
19.11 16:37:31 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18', _type => core/server.query }
19.11 16:37:31 -<<-: core/server.query { list => {{ name => uid18, networkid => , isbanned => false, id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 16:37:31 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 16:37:31 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:37:31 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 16:37:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid18, deleted => false, email => , networktype =>   , password => uid18, isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560953, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 18 } }
19.11 16:37:31 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 16:37:31 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 18 } }
19.11 16:37:31 NET: Client login (conid:33860940, id:18, name:uid18)
19.11 16:37:31 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 16:37:31 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:37:31 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 16:37:31 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18 }
19.11 16:37:31 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 16:37:31 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 16:37:35 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:37:35 TIME: user.ping 0.18 ms
19.11 16:37:35 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:37:36 TIMER: Check auto-disconnect...
19.11 16:37:36 STATS: vdl.0 cache, locks:4
19.11 16:37:39 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:37:39 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 18 }, _type => vdl/cache.battle.findRandom }
19.11 16:37:39 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:37:39 TIME: battle.find 0.58 ms
19.11 16:37:39 == NET: uid18 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:37:41 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 16:37:41 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:37:43 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:37:43 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 16:37:43 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 2, battleId => 4, player => 1 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 16:37:43 -<<-: battle.enemyEvent { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 1, battleId => 4, player => 2 }, _isNotify => true, id => 18, _type => battle.enemyEvent }
19.11 16:37:43 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:37:43 TIME: battle.find 22.58 ms
19.11 16:37:43 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:37:43 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 2, battleId => 4, player => 1 }, type => battle.enemy }
19.11 16:37:43 == NET: uid18 ret: battle.enemy { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 1, battleId => 4, player => 2 }, type => battle.enemy }
19.11 16:37:52 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:37:52 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:37:52 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:37:52 TIME: battle.sendtask 0.83 ms
19.11 16:37:52 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [0,0,5,5,4,3], errorCode => ok, _type => battle.task }
19.11 16:37:52 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [0,0,5,5,4,3], errorCode => ok }
19.11 16:37:52 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:37:53 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:37:53 TIME: user.ping 0.18 ms
19.11 16:37:53 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:37:58 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 4 }
19.11 16:37:58 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:37:58 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:37:58 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:37:58 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:37:58 TIME: battle.sendtask 3.12 ms
19.11 16:37:58 == NET: uid18 ret: battle.task { dice => 5, from => [7,4], name => swap, side => 2, type => battle.task, dices => [0,0,5,4,3], messageType => battle.sendtask, to => [8,4], battleId => 4 }
19.11 16:37:58 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:37:59 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 4 }
19.11 16:37:59 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:37:59 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:37:59 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:37:59 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:37:59 TIME: battle.sendtask 7.07 ms
19.11 16:37:59 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:37:59 == NET: uid18 ret: battle.task { dice => 5, from => [8,4], name => swap, side => 2, type => battle.task, dices => [0,0,4,3], messageType => battle.sendtask, to => [9,4], battleId => 4 }
19.11 16:38:01 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:01 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:01 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:38:01 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 4, _type => vdl/cache.battle.makeTurn }
19.11 16:38:01 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 18 }
19.11 16:38:01 TIME: battle.sendtask 1.27 ms
19.11 16:38:01 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:01 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:04 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:04 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:04 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:04 TIME: battle.sendtask 0.84 ms
19.11 16:38:04 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [5,5,2,2,5,0], errorCode => ok, _type => battle.task }
19.11 16:38:04 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [5,5,2,2,5,0], errorCode => ok }
19.11 16:38:04 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:08 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [7,5], name => swap, side => 1, messageType => battle.sendtask, to => [8,5], battleId => 4 }
19.11 16:38:08 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:08 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:08 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:38:08 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:38:08 TIME: battle.sendtask 2.56 ms
19.11 16:38:08 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:08 == NET: uid19 ret: battle.task { dice => 5, from => [7,5], name => swap, side => 1, type => battle.task, dices => [5,2,2,5,0], messageType => battle.sendtask, to => [8,5], battleId => 4 }
19.11 16:38:09 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [8,5], name => swap, side => 1, messageType => battle.sendtask, to => [9,5], battleId => 4 }
19.11 16:38:09 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:09 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:09 ->>-: vdl/cache.battle.setScores { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:38:09 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:38:09 TIME: battle.sendtask 2.58 ms
19.11 16:38:09 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:09 == NET: uid19 ret: battle.task { dice => 5, from => [8,5], name => swap, side => 1, type => battle.task, dices => [2,2,5,0], messageType => battle.sendtask, to => [9,5], battleId => 4 }
19.11 16:38:10 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [7,6], name => swap, side => 1, messageType => battle.sendtask, to => [8,6], battleId => 4 }
19.11 16:38:10 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:10 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:10 ->>-: vdl/cache.battle.setScores { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:38:10 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:38:10 TIME: battle.sendtask 2.77 ms
19.11 16:38:10 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:10 == NET: uid19 ret: battle.task { dice => 5, from => [7,6], name => swap, side => 1, type => battle.task, dices => [2,2,0], messageType => battle.sendtask, to => [8,6], battleId => 4 }
19.11 16:38:11 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:11 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:11 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:11 STATS: vdl.0 cache connection, 60 calls, total 0.0899925231933594 sec spent, avg 1.5 ms
19.11 16:38:11 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 4, _type => vdl/cache.battle.makeTurn }
19.11 16:38:11 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:38:11 TIME: battle.sendtask 1.42 ms
19.11 16:38:11 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:11 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 1, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:12 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:38:12 TIME: user.ping 0.12 ms
19.11 16:38:12 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:38:15 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:15 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:15 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:38:15 TIME: battle.sendtask 1.24 ms
19.11 16:38:15 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,4,2,2,5,2], errorCode => ok, _type => null }
19.11 16:38:15 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [2,4,2,2,5,2], errorCode => ok }
19.11 16:38:15 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:19 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [8,6], name => swap, side => 2, messageType => battle.sendtask, to => [9,6], battleId => 4 }
19.11 16:38:19 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:19 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:38:19 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:38:19 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:38:19 TIME: battle.sendtask 2.82 ms
19.11 16:38:19 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:19 == NET: uid18 ret: battle.task { dice => 5, from => [8,6], name => swap, side => 2, type => battle.task, dices => [2,4,2,2,2], messageType => battle.sendtask, to => [9,6], battleId => 4 }
19.11 16:38:22 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:22 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:22 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:38:22 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 4, _type => vdl/cache.battle.makeTurn }
19.11 16:38:22 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 18 }
19.11 16:38:22 TIME: battle.sendtask 1.74 ms
19.11 16:38:22 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:22 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:25 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 4 }
19.11 16:38:25 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:25 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:25 TIME: battle.sendtask 0.86 ms
19.11 16:38:25 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [2,1,2,0,5,3], errorCode => ok, _type => battle.task }
19.11 16:38:25 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [2,1,2,0,5,3], errorCode => ok }
19.11 16:38:25 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:28 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:38:28 TIME: user.ping 0.24 ms
19.11 16:38:28 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:38:29 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 1, messageType => battle.sendtask, to => [8,3], battleId => 4 }
19.11 16:38:29 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:29 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:29 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:38:29 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:38:29 TIME: battle.sendtask 3.38 ms
19.11 16:38:29 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:29 == NET: uid19 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 1, type => battle.task, dices => [2,1,2,0,3], messageType => battle.sendtask, to => [8,3], battleId => 4 }
19.11 16:38:30 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [8,3], name => swap, side => 1, messageType => battle.sendtask, to => [9,3], battleId => 4 }
19.11 16:38:30 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:30 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:30 ->>-: vdl/cache.battle.setScores { scores => [3,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:38:30 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:38:30 TIME: battle.sendtask 3.83 ms
19.11 16:38:30 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:38:30 == NET: uid19 ret: battle.task { dice => 3, from => [8,3], name => swap, side => 1, type => battle.task, dices => [2,1,2,0], messageType => battle.sendtask, to => [9,3], battleId => 4 }
19.11 16:38:31 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:38:31 TIME: user.ping 0.11 ms
19.11 16:38:31 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:38:33 ++ NET: uid18 req: battle.sendtask { dice => 2, from => [8,3], name => swap, side => 1, messageType => battle.sendtask, to => [9,3], battleId => 4 }
19.11 16:38:33 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:33 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:33 ->>-: vdl/cache.battle.setScores { scores => [4,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:38:33 -<<-: battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 19, battleId => 4 }
19.11 16:38:33 -<<-: vdl/cache.battle.setScores { errorCode => _requestException, _type => vdl/cache.battle.setScores }
19.11 16:38:33 TRACE: battle.sendtask : cacheRequest exception { scores => [4,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 4 }
19.11 16:38:33 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 432
Called from modules/VDLBattleModule.hx line 388
Called from modules/VDLBattleModule.hx line 64
Called from modules/VDLBattleModule.hx line 42
Called from snipe/slave/Server.hx line 1176
19.11 16:38:33 ->>-: core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
19.11 16:38:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => --- DEFAULT ATTRIBUTES ---, deleted => false, email => , networktype =>   , password => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , networkid => , params => { inventory => { list => [] }, attrs => {}, effects => { list => [] } }}, version => 0, id => 1 } }
19.11 16:38:33 ->>-: core/cache.get { type => questdata, v => -1, id => 1, _type => core/cache.get }
19.11 16:38:33 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 1 } }
19.11 16:38:33 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:38:33 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:38:33 ->>-: vdl/cache.battle.finishRoom { roomId => 4, _type => vdl/cache.battle.finishRoom }
19.11 16:38:33 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 16:38:33 == NET: uid18 ret: battle.end { type => battle.end }
19.11 16:38:36 TIMER: Check auto-disconnect...
19.11 16:38:36 STATS: vdl.0 cache, locks:6
19.11 16:38:52 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:38:52 TIME: user.ping 0.19 ms
19.11 16:38:52 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:45:00 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 16:45:00 -<<-: server.login ok
19.11 16:45:00 DB: SELECT * FROM LocalizationStrings
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 TIMER: Starting timer...
19.11 16:45:00 TIMER: Timer running...
19.11 16:45:00 DB: SELECT * FROM GameVars
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 16:45:00 -<<-: core/quest.getDaily ok
19.11 16:45:00 DB: SELECT * FROM UserAttributeTypes
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM UserVariableTypes
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 16:45:00 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM ItemGroups
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM Bundles ORDER BY ID
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 SHOP: loading items...
19.11 16:45:00 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 16:45:00 -<<-: core/shop.getList ok
19.11 16:45:00 SHOP: 0 items loaded (0 sec)
19.11 16:45:00 DB: SELECT * FROM EffectAttributeTypes
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM Effects
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 16:45:00 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 16:45:00 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:00 DB: SELECT * FROM Badges
19.11 16:45:00 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 16:45:00 -<<-: core/server.query ok
19.11 16:45:27 NET: Client (conid:8601618) connected to vdl.0 (clients:1)
19.11 16:45:28 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 16:45:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18'
19.11 16:45:28 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18', _type => core/server.query }
19.11 16:45:28 -<<-: core/server.query ok
19.11 16:45:28 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 16:45:28 -<<-: core/user.isOnlineID ok
19.11 16:45:28 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 16:45:28 -<<-: core/cache.get ok
19.11 16:45:28 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 16:45:28 -<<-: core/cache.get ok
19.11 16:45:28 NET: Client login (conid:8601618, id:18, name:uid18)
19.11 16:45:28 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 16:45:28 -<<-: core/user.loginPost null
19.11 16:45:28 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18 }
19.11 16:45:28 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 16:45:29 NET: Client (conid:42862659) connected to vdl.0 (clients:2)
19.11 16:45:29 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 16:45:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 16:45:29 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 16:45:29 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 16:45:29 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 16:45:29 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:45:29 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 16:45:29 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 16:45:29 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 16:45:29 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 16:45:29 NET: Client login (conid:42862659, id:19, name:uid19)
19.11 16:45:29 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 16:45:29 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:45:29 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 16:45:29 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 16:45:29 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 16:45:29 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 16:45:31 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:45:31 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 16:45:31 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:45:31 TIME: battle.find 0.83 ms
19.11 16:45:31 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:45:32 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:45:32 TIME: user.ping 0.23 ms
19.11 16:45:32 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:45:34 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:45:34 TIME: user.ping 0.22 ms
19.11 16:45:34 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:45:36 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 16:45:36 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:45:36 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 16:45:36 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:45:39 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:45:39 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 18 }, _type => vdl/cache.battle.findRandom }
19.11 16:45:39 -<<-: battle.enemyEvent { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 2, battleId => 5, player => 1 }, _isNotify => true, id => 18, _type => battle.enemyEvent }
19.11 16:45:39 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 1, battleId => 5, player => 2 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 16:45:39 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:45:39 TIME: battle.find 41.94 ms
19.11 16:45:39 == NET: uid18 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:45:39 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 1, battleId => 5, player => 2 }, type => battle.enemy }
19.11 16:45:39 == NET: uid18 ret: battle.enemy { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 2, battleId => 5, player => 1 }, type => battle.enemy }
19.11 16:45:45 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 5 }
19.11 16:45:45 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:45:45 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:45:45 TIME: battle.sendtask 0.63 ms
19.11 16:45:45 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [0,4,5,0,4,3], errorCode => ok }
19.11 16:45:45 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.task, dices => [0,4,5,0,4,3], errorCode => ok }
19.11 16:45:45 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:45:51 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:45:51 TIME: user.ping 0.17 ms
19.11 16:45:51 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:45:51 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [7,3], name => swap, side => 2, messageType => battle.sendtask, to => [8,3], battleId => 5 }
19.11 16:45:51 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:45:51 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:45:51 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 18, player2 => 19, battleId => 5 }
19.11 16:45:51 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:45:51 TIME: battle.sendtask 3.47 ms
19.11 16:45:51 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:45:51 == NET: uid19 ret: battle.task { dice => 5, from => [7,3], name => swap, side => 2, type => battle.task, dices => [0,4,0,4,3], messageType => battle.sendtask, to => [8,3], battleId => 5 }
19.11 16:45:54 ++ NET: uid18 req: battle.sendtask { dice => 3, from => [8,3], name => swap, side => 2, messageType => battle.sendtask, to => [9,3], battleId => 5 }
19.11 16:45:54 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:45:54 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:45:54 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 18, player2 => 19, battleId => 5 }
19.11 16:45:54 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:45:54 TIME: battle.sendtask 3.72 ms
19.11 16:45:54 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:45:54 == NET: uid19 ret: battle.task { dice => 3, from => [8,3], name => swap, side => 2, type => battle.task, dices => [0,4,0,4], messageType => battle.sendtask, to => [9,3], battleId => 5 }
19.11 16:45:55 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 5 }
19.11 16:45:55 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:45:55 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:45:55 ->>-: vdl/cache.battle.makeTurn { userId => 18, roomId => 5, _type => vdl/cache.battle.makeTurn }
19.11 16:45:55 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 19 }
19.11 16:45:55 TIME: battle.sendtask 1.52 ms
19.11 16:45:55 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:45:55 == NET: uid19 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 5 }
19.11 16:45:58 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 5 }
19.11 16:45:58 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:45:58 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:45:58 TIME: battle.sendtask 0.71 ms
19.11 16:45:58 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.sendtask, dices => [3,2,5,1,3,2], errorCode => ok, _type => null }
19.11 16:45:58 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [3,2,5,1,3,2], errorCode => ok }
19.11 16:45:58 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:46:00 TIMER: Check auto-disconnect...
19.11 16:46:01 STATS: vdl.0 cache, locks:4
19.11 16:46:04 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [8,3], name => swap, side => 1, messageType => battle.sendtask, to => [9,3], battleId => 5 }
19.11 16:46:04 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:46:04 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:46:04 STATS: vdl.0 cache connection, 43 calls, total 0.0895659923553467 sec spent, avg 2.08 ms
19.11 16:46:04 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 18, player2 => 19, battleId => 5 }
19.11 16:46:04 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:46:04 TIME: battle.sendtask 3.21 ms
19.11 16:46:04 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:46:04 == NET: uid18 ret: battle.task { dice => 2, from => [8,3], name => swap, side => 1, type => battle.task, dices => [3,5,1,3,2], messageType => battle.sendtask, to => [9,3], battleId => 5 }
19.11 16:46:07 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 1, messageType => battle.sendtask, to => [8,4], battleId => 5 }
19.11 16:46:07 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:46:07 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:46:07 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 18, player2 => 19, battleId => 5 }
19.11 16:46:07 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:46:07 TIME: battle.sendtask 3.49 ms
19.11 16:46:07 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:46:07 == NET: uid18 ret: battle.task { dice => 5, from => [7,4], name => swap, side => 1, type => battle.task, dices => [3,1,3,2], messageType => battle.sendtask, to => [8,4], battleId => 5 }
19.11 16:46:08 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [8,4], name => swap, side => 1, messageType => battle.sendtask, to => [9,4], battleId => 5 }
19.11 16:46:08 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:46:08 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:46:08 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 18, player2 => 19, battleId => 5 }
19.11 16:46:08 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:46:08 TIME: battle.sendtask 2.13 ms
19.11 16:46:08 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:46:08 == NET: uid18 ret: battle.task { dice => 3, from => [8,4], name => swap, side => 1, type => battle.task, dices => [1,3,2], messageType => battle.sendtask, to => [9,4], battleId => 5 }
19.11 16:46:09 ++ NET: uid19 req: battle.sendtask { dice => 2, from => [8,4], name => swap, side => 1, messageType => battle.sendtask, to => [9,4], battleId => 5 }
19.11 16:46:09 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:46:09 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:46:09 ->>-: vdl/cache.battle.setScores { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 18, player2 => 19, battleId => 5 }
19.11 16:46:11 -<<-: vdl/cache.battle.setScores { errorCode => _requestException, _type => vdl/cache.battle.setScores }
19.11 16:46:11 TRACE: battle.sendtask : cacheRequest exception { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 18, player2 => 19, battleId => 5 }
19.11 16:46:11 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 432
Called from modules/VDLBattleModule.hx line 388
Called from modules/VDLBattleModule.hx line 64
Called from modules/VDLBattleModule.hx line 42
Called from snipe/slave/Server.hx line 1176
19.11 16:46:11 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:46:11 TIME: user.ping 0.05 ms
19.11 16:46:11 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:46:12 NET: Client (name:uid19 conid:42862659 TCP) disconnected from vdl.0 (clients:1)
19.11 16:46:12 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 16:46:12 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
19.11 16:46:12 -<<-: core/server.query { list => {{ id => 4 }, { id => 5 }}, errorCode => ok, _type => core/server.query }
19.11 16:46:12 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:46:12 -<<-: vdl/cache.battle.infoRoom { secondId => 19, firstId => 18, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:46:12 ->>-: vdl/cache.battle.deleteRoom { roomId => 5, _type => vdl/cache.battle.deleteRoom }
19.11 16:46:12 NET: Client (conid:29017837) connected to vdl.0 (clients:2)
19.11 16:46:12 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 16:46:12 ->>-: vdl/cache.battle.finishRoom { roomId => 5, _type => vdl/cache.battle.finishRoom }
19.11 16:46:12 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 16:46:12 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 16:46:12 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 16:46:12 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 16:46:12 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:46:12 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 16:46:12 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 16:46:12 == NET: uid18 ret: battle.leave { type => battle.leave }
19.11 16:46:13 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 16:46:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 16:46:13 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 16:46:13 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 16:46:13 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 16:46:13 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:46:13 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 16:46:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 2, id => 19 } }
19.11 16:46:13 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 16:46:13 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 19 } }
19.11 16:46:13 NET: Client login (conid:29017837, id:19, name:uid19)
19.11 16:46:13 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 16:46:13 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:46:13 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 16:46:13 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 16:46:13 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 16:46:13 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 16:46:21 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 16:46:21 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.11 16:46:31 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:46:31 TIME: user.ping 0.18 ms
19.11 16:46:31 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:47:40 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 16:47:40 -<<-: server.login ok
19.11 16:47:40 DB: SELECT * FROM LocalizationStrings
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 TIMER: Starting timer...
19.11 16:47:40 TIMER: Timer running...
19.11 16:47:40 DB: SELECT * FROM GameVars
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 16:47:40 -<<-: core/quest.getDaily ok
19.11 16:47:40 DB: SELECT * FROM UserAttributeTypes
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM UserVariableTypes
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 16:47:40 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM ItemGroups
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM Bundles ORDER BY ID
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 SHOP: loading items...
19.11 16:47:40 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 16:47:40 -<<-: core/shop.getList ok
19.11 16:47:40 SHOP: 0 items loaded (0 sec)
19.11 16:47:40 DB: SELECT * FROM EffectAttributeTypes
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM Effects
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 16:47:40 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 16:47:40 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 DB: SELECT * FROM Badges
19.11 16:47:40 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 NET: Client (conid:95667148) connected to vdl.0 (clients:1)
19.11 16:47:40 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 16:47:40 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18'
19.11 16:47:40 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18', _type => core/server.query }
19.11 16:47:40 -<<-: core/server.query ok
19.11 16:47:40 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 16:47:40 -<<-: core/user.isOnlineID ok
19.11 16:47:40 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 16:47:40 -<<-: core/cache.get ok
19.11 16:47:40 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 16:47:40 -<<-: core/cache.get ok
19.11 16:47:40 NET: Client login (conid:95667148, id:18, name:uid18)
19.11 16:47:40 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 16:47:40 -<<-: core/user.loginPost null
19.11 16:47:40 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18 }
19.11 16:47:40 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 16:47:41 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:47:41 TIME: user.ping 0.14 ms
19.11 16:47:41 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:47:50 NET: Client (conid:67177373) connected to vdl.0 (clients:2)
19.11 16:47:50 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 16:47:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 16:47:50 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 16:47:50 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 16:47:50 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 16:47:50 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:47:50 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 16:47:50 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 16:47:50 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 16:47:50 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 16:47:50 NET: Client login (conid:67177373, id:19, name:uid19)
19.11 16:47:50 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 16:47:50 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:47:50 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 16:47:50 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 16:47:50 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 16:47:50 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 16:47:50 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 16:47:50 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:47:55 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 16:47:55 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:47:56 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:47:56 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 18 }, _type => vdl/cache.battle.findRandom }
19.11 16:47:56 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:47:56 TIME: battle.find 0.64 ms
19.11 16:47:56 == NET: uid18 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:48:01 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:48:01 TIME: user.ping 0.15 ms
19.11 16:48:01 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:48:03 ++ NET: uid19 req: battle.end { type => leaveGame, typeBattle => battle, tournamentId => 0, messageType => battle.end, battleId => 5 }
19.11 16:48:03 ->>-: vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:48:03 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 16:48:03 TRACE: battle.end : cacheRequest exception { roomId => 5, _type => vdl/cache.battle.infoRoom }
19.11 16:48:03 TRACE: battle.end : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 92
Called from modules/VDLBattleModule.hx line 50
Called from snipe/slave/Server.hx line 1176
19.11 16:48:06 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:48:06 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 16:48:06 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 2, battleId => 6, player => 1 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 16:48:06 -<<-: battle.enemyEvent { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 1, battleId => 6, player => 2 }, _isNotify => true, id => 18, _type => battle.enemyEvent }
19.11 16:48:06 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:48:06 TIME: battle.find 25.06 ms
19.11 16:48:06 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:48:06 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 2, battleId => 6, player => 1 }, type => battle.enemy }
19.11 16:48:06 == NET: uid18 ret: battle.enemy { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 1, battleId => 6, player => 2 }, type => battle.enemy }
19.11 16:48:18 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:48:18 TIME: user.ping 0.17 ms
19.11 16:48:18 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:48:34 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:48:34 TIME: user.ping 0.18 ms
19.11 16:48:34 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:48:40 TIMER: Check auto-disconnect...
19.11 16:48:40 STATS: vdl.0 cache, locks:4
19.11 16:48:53 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:48:53 TIME: user.ping 0.18 ms
19.11 16:48:53 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:49:10 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:49:10 TIME: user.ping 0.16 ms
19.11 16:49:10 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:49:17 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:49:17 TIME: user.ping 0.16 ms
19.11 16:49:17 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:49:28 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:49:28 TIME: user.ping 0.2 ms
19.11 16:49:28 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:49:40 TIMER: Check auto-disconnect...
19.11 16:49:40 STATS: vdl.0 cache, locks:4
19.11 16:49:46 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:49:46 TIME: user.ping 0.22 ms
19.11 16:49:46 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:50:02 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:50:02 TIME: user.ping 0.19 ms
19.11 16:50:02 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:50:19 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:50:19 TIME: user.ping 0.19 ms
19.11 16:50:19 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:50:37 NET: Client (name:uid18 conid:95667148 TCP) disconnected from vdl.0 (clients:1)
19.11 16:50:37 DB: SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true
19.11 16:50:37 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true, _type => core/server.query }
19.11 16:50:37 -<<-: core/server.query { list => {{ id => 6 }}, errorCode => ok, _type => core/server.query }
19.11 16:50:37 STATS: vdl.0 cache connection, 36 calls, total 0.075836181640625 sec spent, avg 2.11 ms
19.11 16:50:37 ->>-: vdl/cache.battle.infoRoom { roomId => 6, _type => vdl/cache.battle.infoRoom }
19.11 16:50:37 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:50:37 ->>-: vdl/cache.battle.deleteRoom { roomId => 6, _type => vdl/cache.battle.deleteRoom }
19.11 16:50:37 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 16:50:37 ->>-: vdl/cache.battle.finishRoom { roomId => 6, _type => vdl/cache.battle.finishRoom }
19.11 16:50:37 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 16:50:37 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 18, _type => core/cache.update }
19.11 16:50:37 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 16:50:37 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 18, _type => core/cache.update }
19.11 16:50:37 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:50:37 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 18, _type => core/user.logoutPost }
19.11 16:50:37 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 16:50:37 == NET: uid19 ret: battle.leave { type => battle.leave }
19.11 16:50:40 TIMER: Check auto-disconnect...
19.11 16:50:40 STATS: vdl.0 cache, locks:2
19.11 16:50:44 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:50:44 TIME: user.ping 0.19 ms
19.11 16:50:44 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:50:48 NET: Client (name:uid19 conid:67177373 TCP) disconnected from vdl.0 (clients:0)
19.11 16:50:48 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 16:50:48 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
19.11 16:50:48 -<<-: core/server.query { list => {{ id => 4 }}, errorCode => ok, _type => core/server.query }
19.11 16:50:48 ->>-: vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
19.11 16:50:48 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:50:48 ->>-: vdl/cache.battle.deleteRoom { roomId => 4, _type => vdl/cache.battle.deleteRoom }
19.11 16:50:48 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 16:50:48 ->>-: vdl/cache.battle.finishRoom { roomId => 4, _type => vdl/cache.battle.finishRoom }
19.11 16:50:48 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 16:50:48 ->>-: core/user.sendTo { id => 18, _type => core/user.sendTo, msg => { _type => battle.leave } }
19.11 16:50:48 -<<-: core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
19.11 16:50:48 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 16:50:48 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 16:50:48 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 16:50:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:50:48 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 16:50:48 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 16:50:56 NET: Client (conid:73924646) connected to vdl.0 (clients:1)
19.11 16:50:57 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 16:50:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18'
19.11 16:50:57 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18', _type => core/server.query }
19.11 16:50:57 -<<-: core/server.query { list => {{ name => uid18, networkid => , isbanned => false, id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 16:50:57 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 16:50:57 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:50:57 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 16:50:57 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid18, deleted => false, email => , networktype =>   , password => uid18, isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560953, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 18 } }
19.11 16:50:57 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 16:50:57 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 18 } }
19.11 16:50:57 NET: Client login (conid:73924646, id:18, name:uid18)
19.11 16:50:57 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 16:50:57 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:50:57 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18 }
19.11 16:50:57 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 16:51:01 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:51:01 TIME: user.ping 0.33 ms
19.11 16:51:01 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:51:04 NET: Client (conid:20335818) connected to vdl.0 (clients:2)
19.11 16:51:04 ++ NET: uid18 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:51:04 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 18 }, _type => vdl/cache.battle.findRandom }
19.11 16:51:04 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:51:04 TIME: battle.find 0.73 ms
19.11 16:51:04 == NET: uid18 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:51:05 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 16:51:05 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:51:06 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 16:51:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 16:51:06 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 16:51:06 -<<-: core/server.query { list => {{ name => uid19, networkid => , isbanned => false, id => 19 }}, errorCode => ok, _type => core/server.query }
19.11 16:51:06 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 16:51:06 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:51:06 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 16:51:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid19, deleted => false, email => , networktype =>   , password => uid19, isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560179, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 19 } }
19.11 16:51:06 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 16:51:06 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 19 } }
19.11 16:51:06 NET: Client login (conid:20335818, id:19, name:uid19)
19.11 16:51:06 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 16:51:06 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:51:06 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 16:51:06 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 16:51:06 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 16:51:06 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 16:51:15 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 16:51:15 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:51:16 ++ NET: uid19 req: battle.find { type => random, messageType => battle.find, roundTime => 60 }
19.11 16:51:16 ->>-: vdl/cache.battle.findRandom { user => { time => 60, player => 19 }, _type => vdl/cache.battle.findRandom }
19.11 16:51:16 -<<-: battle.enemyEvent { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 2, battleId => 7, player => 1 }, _isNotify => true, id => 19, _type => battle.enemyEvent }
19.11 16:51:16 -<<-: battle.enemyEvent { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 1, battleId => 7, player => 2 }, _isNotify => true, id => 18, _type => battle.enemyEvent }
19.11 16:51:16 -<<-: vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
19.11 16:51:16 TIME: battle.find 20.24 ms
19.11 16:51:16 == NET: uid19 ret: battle.find { type => battle.find, errorCode => ok }
19.11 16:51:16 == NET: uid18 ret: battle.enemy { data => { name => uid18, enemy.id => 19, enemy.name => uid19, id => 18, enemy.num => 1, battleId => 7, player => 2 }, type => battle.enemy }
19.11 16:51:16 == NET: uid19 ret: battle.enemy { data => { name => uid19, enemy.id => 18, enemy.name => uid18, id => 19, enemy.num => 2, battleId => 7, player => 1 }, type => battle.enemy }
19.11 16:51:18 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:51:18 TIME: user.ping 0.23 ms
19.11 16:51:18 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:51:19 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:51:19 TIME: user.ping 0.18 ms
19.11 16:51:19 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:51:22 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 7 }
19.11 16:51:22 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:22 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:51:22 TIME: battle.sendtask 0.85 ms
19.11 16:51:22 == NET: uid19 ret: battle.sendtask { name => throw, type => battle.task, dices => [5,4,5,3,1,4], errorCode => ok }
19.11 16:51:22 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:51:22 == NET: uid18 ret: battle.task { name => throw, type => battle.task, dices => [5,4,5,3,1,4], errorCode => ok }
19.11 16:51:26 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [7,4], name => swap, side => 2, messageType => battle.sendtask, to => [8,4], battleId => 7 }
19.11 16:51:26 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:26 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:51:26 ->>-: vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 7 }
19.11 16:51:26 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:51:26 TIME: battle.sendtask 3.11 ms
19.11 16:51:26 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:51:26 == NET: uid18 ret: battle.task { dice => 5, from => [7,4], name => swap, side => 2, type => battle.task, dices => [4,5,3,1,4], messageType => battle.sendtask, to => [8,4], battleId => 7 }
19.11 16:51:27 ++ NET: uid19 req: battle.sendtask { dice => 5, from => [8,4], name => swap, side => 2, messageType => battle.sendtask, to => [9,4], battleId => 7 }
19.11 16:51:27 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:27 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:51:27 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 7 }
19.11 16:51:27 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:51:27 TIME: battle.sendtask 3.73 ms
19.11 16:51:27 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:51:27 == NET: uid18 ret: battle.task { dice => 5, from => [8,4], name => swap, side => 2, type => battle.task, dices => [4,3,1,4], messageType => battle.sendtask, to => [9,4], battleId => 7 }
19.11 16:51:32 ++ NET: uid19 req: battle.sendtask { dice => 3, from => [7,5], name => swap, side => 2, messageType => battle.sendtask, to => [8,5], battleId => 7 }
19.11 16:51:32 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:32 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:51:32 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 7 }
19.11 16:51:32 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:51:32 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:51:32 TIME: battle.sendtask 3.26 ms
19.11 16:51:32 == NET: uid18 ret: battle.task { dice => 3, from => [7,5], name => swap, side => 2, type => battle.task, dices => [4,1,4], messageType => battle.sendtask, to => [8,5], battleId => 7 }
19.11 16:51:34 ++ NET: uid19 req: battle.sendtask { dice => 1, from => [8,5], name => swap, side => 2, messageType => battle.sendtask, to => [7,5], battleId => 7 }
19.11 16:51:34 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:34 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:51:34 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 7 }
19.11 16:51:34 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:51:34 TIME: battle.sendtask 3.33 ms
19.11 16:51:34 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:51:34 == NET: uid18 ret: battle.task { dice => 1, from => [8,5], name => swap, side => 2, type => battle.task, dices => [4,4], messageType => battle.sendtask, to => [7,5], battleId => 7 }
19.11 16:51:35 ++ NET: uid19 req: battle.sendtask { dice => 4, from => [7,5], name => swap, side => 2, messageType => battle.sendtask, to => [8,5], battleId => 7 }
19.11 16:51:35 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:35 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:51:35 ->>-: vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 7 }
19.11 16:51:35 -<<-: vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
19.11 16:51:35 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:51:35 TIME: battle.sendtask 3.12 ms
19.11 16:51:35 == NET: uid18 ret: battle.task { dice => 4, from => [7,5], name => swap, side => 2, type => battle.task, dices => [4], messageType => battle.sendtask, to => [8,5], battleId => 7 }
19.11 16:51:36 ++ NET: uid19 req: battle.sendtask { dice => 0, from => [0,0], name => skip, side => 2, messageType => battle.sendtask, to => [0,0], battleId => 7 }
19.11 16:51:36 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:36 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 19 }
19.11 16:51:36 ->>-: vdl/cache.battle.makeTurn { userId => 19, roomId => 7, _type => vdl/cache.battle.makeTurn }
19.11 16:51:36 -<<-: vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 18 }
19.11 16:51:36 TIME: battle.sendtask 1.36 ms
19.11 16:51:36 == NET: uid19 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:51:36 == NET: uid18 ret: battle.task { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], battleId => 7 }
19.11 16:51:37 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:51:37 TIME: user.ping 0.22 ms
19.11 16:51:37 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:51:40 ++ NET: uid18 req: battle.sendtask { dice => 0, from => [0,0], name => throw, side => 1, messageType => battle.sendtask, to => [0,0], battleId => 7 }
19.11 16:51:40 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:40 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:51:40 STATS: vdl.0 cache connection, 78 calls, total 0.187193393707275 sec spent, avg 2.4 ms
19.11 16:51:40 TIME: battle.sendtask 1.21 ms
19.11 16:51:40 == NET: uid19 ret: battle.task { name => throw, type => battle.task, dices => [0,5,2,0,0,4], errorCode => ok }
19.11 16:51:40 == NET: uid18 ret: battle.sendtask { name => throw, type => battle.task, dices => [0,5,2,0,0,4], errorCode => ok }
19.11 16:51:40 == NET: uid18 ret: battle.sendtask { type => battle.sendtask, errorCode => ok }
19.11 16:51:40 TIMER: Check auto-disconnect...
19.11 16:51:40 STATS: vdl.0 cache, locks:4
19.11 16:51:43 ++ NET: uid18 req: battle.sendtask { dice => 5, from => [8,5], name => swap, side => 1, messageType => battle.sendtask, to => [9,5], battleId => 7 }
19.11 16:51:43 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:43 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:51:43 ->>-: vdl/cache.battle.setScores { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 7 }
19.11 16:51:44 -<<-: vdl/cache.battle.setScores { errorCode => _requestException, _type => vdl/cache.battle.setScores }
19.11 16:51:44 TRACE: battle.sendtask : cacheRequest exception { scores => [2,0], _type => vdl/cache.battle.setScores, player1 => 19, player2 => 18, battleId => 7 }
19.11 16:51:44 TRACE: battle.sendtask : 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 432
Called from modules/VDLBattleModule.hx line 388
Called from modules/VDLBattleModule.hx line 64
Called from modules/VDLBattleModule.hx line 42
Called from snipe/slave/Server.hx line 1176
19.11 16:51:46 NET: Client (name:uid18 conid:73924646 TCP) disconnected from vdl.0 (clients:1)
19.11 16:51:46 DB: SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true
19.11 16:51:46 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true, _type => core/server.query }
19.11 16:51:46 NET: Client (conid:42723071) connected to vdl.0 (clients:2)
19.11 16:51:46 -<<-: core/server.query { list => {{ id => 7 }}, errorCode => ok, _type => core/server.query }
19.11 16:51:46 ->>-: vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
19.11 16:51:46 -<<-: vdl/cache.battle.infoRoom { secondId => 18, firstId => 19, _type => vdl/cache.battle.infoRoom, turnId => 18 }
19.11 16:51:46 ->>-: vdl/cache.battle.deleteRoom { roomId => 7, _type => vdl/cache.battle.deleteRoom }
19.11 16:51:46 -<<-: vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
19.11 16:51:46 ->>-: vdl/cache.battle.finishRoom { roomId => 7, _type => vdl/cache.battle.finishRoom }
19.11 16:51:46 -<<-: vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
19.11 16:51:46 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 18, _type => core/cache.update }
19.11 16:51:46 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 16:51:46 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 18, _type => core/cache.update }
19.11 16:51:46 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:51:46 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 18, _type => core/user.logoutPost }
19.11 16:51:46 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 16:51:46 == NET: uid19 ret: battle.leave { type => battle.leave }
19.11 16:51:46 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 16:51:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18'
19.11 16:51:46 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18', _type => core/server.query }
19.11 16:51:46 -<<-: core/server.query { list => {{ name => uid18, networkid => , isbanned => false, id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 16:51:46 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 16:51:46 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:51:46 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 16:51:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid18, deleted => false, email => , networktype =>   , password => uid18, isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560953, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 2, id => 18 } }
19.11 16:51:46 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 16:51:46 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 18 } }
19.11 16:51:46 NET: Client login (conid:42723071, id:18, name:uid18)
19.11 16:51:46 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 16:51:46 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:51:46 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18 }
19.11 16:51:46 == NET: uid19 ret: user.join { name => uid18, type => user.join }
19.11 16:51:46 == NET: uid18 ret: user.join { name => uid19, type => user.join }
19.11 16:51:46 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 16:51:55 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 18, _type => core/cache.update }
19.11 16:51:55 -<<-: core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.11 16:51:56 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:51:56 TIME: user.ping 0.15 ms
19.11 16:51:56 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:52:13 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:52:13 TIME: user.ping 0.17 ms
19.11 16:52:13 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:52:29 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:52:29 TIME: user.ping 0.25 ms
19.11 16:52:29 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:52:29 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:52:29 TIME: user.ping 0.18 ms
19.11 16:52:29 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:52:40 TIMER: Check auto-disconnect...
19.11 16:52:40 STATS: vdl.0 cache, locks:4
19.11 16:52:46 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:52:46 TIME: user.ping 0.24 ms
19.11 16:52:46 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:53:02 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:53:02 TIME: user.ping 0.18 ms
19.11 16:53:02 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:53:20 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:53:20 TIME: user.ping 0.19 ms
19.11 16:53:20 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:53:29 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:53:29 TIME: user.ping 0.27 ms
19.11 16:53:29 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:53:36 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:53:36 TIME: user.ping 0.17 ms
19.11 16:53:36 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:53:40 TIMER: Check auto-disconnect...
19.11 16:53:40 STATS: vdl.0 cache, locks:4
19.11 16:53:52 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:53:52 TIME: user.ping 0.21 ms
19.11 16:53:52 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:54:08 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:54:08 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:54:08 TIME: user.ping 0.15 ms
19.11 16:54:16 NET: Client (name:uid18 conid:42723071 TCP) disconnected from vdl.0 (clients:1)
19.11 16:54:16 DB: SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true
19.11 16:54:16 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=18 OR secondid=18 AND finished <> true, _type => core/server.query }
19.11 16:54:16 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 16:54:16 STATS: vdl.0 cache connection, 94 calls, total 1.43142986297607 sec spent, avg 15.23 ms
19.11 16:54:16 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 16:54:16 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 16:54:16 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 16:54:16 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 994
19.11 16:54:16 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 18, _type => core/cache.update }
19.11 16:54:16 -<<-: core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
19.11 16:54:16 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 18, _type => core/cache.update }
19.11 16:54:16 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 16:54:16 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 18, _type => core/user.logoutPost }
19.11 16:54:16 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 16:54:30 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:54:30 TIME: user.ping 0.23 ms
19.11 16:54:30 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:54:40 TIMER: Check auto-disconnect...
19.11 16:54:40 STATS: vdl.0 cache, locks:2
19.11 16:55:30 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:55:30 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:55:30 TIME: user.ping 0.24 ms
19.11 16:55:40 TIMER: Check auto-disconnect...
19.11 16:55:40 STATS: vdl.0 cache, locks:2
19.11 16:56:31 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:56:31 TIME: user.ping 0.2 ms
19.11 16:56:31 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:57:11 ->>-: core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
19.11 16:57:11 -<<-: server.login ok
19.11 16:57:11 DB: SELECT * FROM LocalizationStrings
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 TIMER: Starting timer...
19.11 16:57:11 TIMER: Timer running...
19.11 16:57:11 DB: SELECT * FROM GameVars
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
19.11 16:57:11 -<<-: core/quest.getDaily ok
19.11 16:57:11 DB: SELECT * FROM UserAttributeTypes
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM UserVariableTypes
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.11 16:57:11 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM ItemGroups
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM Bundles ORDER BY ID
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM BundleItems ORDER BY ID
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 SHOP: loading items...
19.11 16:57:11 ->>-: core/shop.getList { _type => core/shop.getList }
19.11 16:57:11 -<<-: core/shop.getList ok
19.11 16:57:11 SHOP: 0 items loaded (0 sec)
19.11 16:57:11 DB: SELECT * FROM EffectAttributeTypes
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM Effects
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.11 16:57:11 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.11 16:57:11 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:11 DB: SELECT * FROM Badges
19.11 16:57:11 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.11 16:57:11 -<<-: core/server.query ok
19.11 16:57:35 NET: Client (conid:25125538) connected to vdl.0 (clients:1)
19.11 16:57:35 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTk= }
19.11 16:57:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19'
19.11 16:57:35 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid19' AND Password = E'uid19', _type => core/server.query }
19.11 16:57:35 -<<-: core/server.query ok
19.11 16:57:35 ->>-: core/user.isOnlineID { id => 19, _type => core/user.isOnlineID }
19.11 16:57:35 -<<-: core/user.isOnlineID ok
19.11 16:57:35 ->>-: core/cache.get { type => user, v => -1, id => 19, _type => core/cache.get }
19.11 16:57:35 -<<-: core/cache.get ok
19.11 16:57:35 ->>-: core/cache.get { type => questdata, v => -1, id => 19, _type => core/cache.get }
19.11 16:57:35 -<<-: core/cache.get ok
19.11 16:57:35 NET: Client login (conid:25125538, id:19, name:uid19)
19.11 16:57:35 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 19, _type => core/user.loginPost, ipAddr => 172.16.20.65 }
19.11 16:57:35 -<<-: core/user.loginPost null
19.11 16:57:35 == NET: uid19 ret: user.login { name => uid19, type => user.login, errorCode => ok, id => 19 }
19.11 16:57:35 == NET: uid19 ret: user.join { name => uid19, type => user.join }
19.11 16:57:41 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 19, _type => core/cache.update }
19.11 16:57:41 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:58:11 TIMER: Check auto-disconnect...
19.11 16:58:11 STATS: vdl.0 cache, locks:2
19.11 16:58:32 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:58:32 TIME: user.ping 0.18 ms
19.11 16:58:32 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:59:11 TIMER: Check auto-disconnect...
19.11 16:59:11 STATS: vdl.0 cache, locks:2
19.11 16:59:33 ++ NET: uid19 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:59:33 TIME: user.ping 0.28 ms
19.11 16:59:33 == NET: uid19 ret: user.ping { type => user.ping, errorCode => ok }
19.11 16:59:54 NET: Client (conid:94131699) connected to vdl.0 (clients:2)
19.11 16:59:54 NET: Client (name:uid19 conid:25125538 TCP) disconnected from vdl.0 (clients:1)
19.11 16:59:54 DB: SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true
19.11 16:59:54 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=19 OR secondid=19 AND finished <> true, _type => core/server.query }
19.11 16:59:54 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.11 16:59:54 STATS: vdl.0 cache connection, 27 calls, total 0.0300998687744141 sec spent, avg 1.11 ms
19.11 16:59:54 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 16:59:54 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.11 16:59:54 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.11 16:59:54 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 498
Called from modules/VDLBattleModule.hx line 511
Called from snipe/slave/Server.hx line 994
19.11 16:59:54 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 19, _type => core/cache.update }
19.11 16:59:54 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.11 16:59:54 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 19, _type => core/cache.update }
19.11 16:59:54 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.11 16:59:54 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 19, _type => core/user.logoutPost }
19.11 16:59:54 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.11 16:59:55 ++ NET: null req: user.login { messageType => user.login, token => dWlkMTg= }
19.11 16:59:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18'
19.11 16:59:55 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid18' AND Password = E'uid18', _type => core/server.query }
19.11 16:59:55 -<<-: core/server.query { list => {{ name => uid18, networkid => , isbanned => false, id => 18 }}, errorCode => ok, _type => core/server.query }
19.11 16:59:55 ->>-: core/user.isOnlineID { id => 18, _type => core/user.isOnlineID }
19.11 16:59:55 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.11 16:59:55 ->>-: core/cache.get { type => user, v => -1, id => 18, _type => core/cache.get }
19.11 16:59:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid18, deleted => false, email => , networktype =>   , password => uid18, isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479560953, lastLoginDate => 324, lastLoadDate => 1120 }, effects => { list => [] } }}, version => 0, id => 18 } }
19.11 16:59:55 ->>-: core/cache.get { type => questdata, v => -1, id => 18, _type => core/cache.get }
19.11 16:59:55 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 18 } }
19.11 16:59:55 NET: Client login (conid:94131699, id:18, name:uid18)
19.11 16:59:55 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 18, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
19.11 16:59:55 -<<-: core/user.loginPost { _type => core/user.loginPost }
19.11 16:59:55 == NET: uid18 ret: user.login { name => uid18, type => user.login, errorCode => ok, id => 18 }
19.11 16:59:55 == NET: uid18 ret: user.join { name => uid18, type => user.join }
19.11 16:59:58 ++ NET: uid18 req: user.ping { messageType => user.ping, msg => ok }
19.11 16:59:58 TIME: user.ping 0.15 ms
19.11 16:59:58 == NET: uid18 ret: user.ping { type => user.ping, errorCode => ok }
