14.02 12:00:16 NET: Client (conid:15049937) connected to vdl.0 (clients:1)
14.02 12:00:17 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
14.02 12:00:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
14.02 12:00:17 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
14.02 12:00:17 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
14.02 12:00:17 STATS: vdl.0 cache connection, 672 calls, total 0.573361158370972 sec spent, avg 0.85 ms
14.02 12:00:17 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
14.02 12:00:17 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.02 12:00:17 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
14.02 12:00:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487069442, lastLoginDate => 45, lastLoadDate => 215 }, effects => { list => [] } }}, version => 0, id => 60 } }
14.02 12:00:17 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
14.02 12:00:17 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
14.02 12:00:17 NET: Client login (conid:15049937, id:60, name:uid60)
14.02 12:00:17 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.02 12:00:17 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.02 12:00:17 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
14.02 12:00:17 == NET: uid60 ret: user.join { name => uid60, type => user.join }
14.02 12:00:21 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:00:21 TIME: user.ping 0.08 ms
14.02 12:00:21 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:00:23 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
14.02 12:00:23 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.02 12:00:48 TIMER: Check auto-disconnect...
14.02 12:00:53 STATS: vdl.0 cache, locks:2
14.02 12:01:48 TIMER: Check auto-disconnect...
14.02 12:01:53 STATS: vdl.0 cache, locks:2
14.02 12:02:48 TIMER: Check auto-disconnect...
14.02 12:02:53 STATS: vdl.0 cache, locks:2
14.02 12:03:48 TIMER: Check auto-disconnect...
14.02 12:03:48 NET: Client (name:uid60 conid:15049937 TCP) disconnected from vdl.0 (clients:0)
14.02 12:03:48 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
14.02 12:03:48 ->>-: core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
14.02 12:03:48 -<<-: core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.02 12:03:48 STATS: vdl.0 cache connection, 678 calls, total 0.579742908477783 sec spent, avg 0.86 ms
14.02 12:03:48 ->>-: vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.02 12:03:48 -<<-: vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.02 12:03:48 TRACE: logoutPost battle exception: cacheRequest exception { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.02 12:03:48 TRACE: 
Called from snipe/slave/CacheConnection.hx line 199
Called from modules/VDLBattleModule.hx line 523
Called from modules/VDLBattleModule.hx line 536
Called from snipe/slave/Server.hx line 994
14.02 12:03:48 ->>-: core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
14.02 12:03:48 -<<-: core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.02 12:03:48 ->>-: core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
14.02 12:03:48 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.02 12:03:48 ->>-: core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
14.02 12:03:48 -<<-: core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.02 12:03:53 STATS: vdl.0 cache, locks:0
14.02 12:04:48 TIMER: Check auto-disconnect...
14.02 12:04:53 STATS: vdl.0 cache, locks:0
14.02 12:05:48 TIMER: Check auto-disconnect...
14.02 12:05:53 STATS: vdl.0 cache, locks:0
14.02 12:06:48 TIMER: Check auto-disconnect...
14.02 12:06:53 STATS: vdl.0 cache, locks:0
14.02 12:07:48 TIMER: Check auto-disconnect...
14.02 12:07:53 STATS: vdl.0 cache, locks:0
14.02 12:08:48 TIMER: Check auto-disconnect...
14.02 12:08:53 STATS: vdl.0 cache, locks:0
14.02 12:09:48 TIMER: Check auto-disconnect...
14.02 12:09:53 STATS: vdl.0 cache, locks:0
14.02 12:10:48 TIMER: Check auto-disconnect...
14.02 12:10:53 STATS: vdl.0 cache, locks:0
14.02 12:11:48 TIMER: Check auto-disconnect...
14.02 12:11:53 STATS: vdl.0 cache, locks:0
14.02 12:12:48 TIMER: Check auto-disconnect...
14.02 12:12:53 STATS: vdl.0 cache, locks:0
14.02 12:13:48 TIMER: Check auto-disconnect...
14.02 12:13:53 STATS: vdl.0 cache, locks:0
14.02 12:14:48 TIMER: Check auto-disconnect...
14.02 12:14:53 STATS: vdl.0 cache, locks:0
14.02 12:15:48 TIMER: Check auto-disconnect...
14.02 12:15:53 STATS: vdl.0 cache, locks:0
14.02 12:16:48 TIMER: Check auto-disconnect...
14.02 12:16:53 STATS: vdl.0 cache, locks:0
14.02 12:17:21 NET: Client (conid:27604924) connected to vdl.0 (clients:1)
14.02 12:17:21 ++ NET: null req: user.login { messageType => user.login, token => dWlkNjA= }
14.02 12:17:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
14.02 12:17:21 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
14.02 12:17:21 -<<-: core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
14.02 12:17:21 STATS: vdl.0 cache connection, 683 calls, total 0.583092927932739 sec spent, avg 0.85 ms
14.02 12:17:21 ->>-: core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
14.02 12:17:21 -<<-: core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.02 12:17:21 ->>-: core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
14.02 12:17:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487069442, lastLoginDate => 45, lastLoadDate => 215 }, effects => { list => [] } }}, version => 0, id => 60 } }
14.02 12:17:21 ->>-: core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
14.02 12:17:21 -<<-: core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
14.02 12:17:21 NET: Client login (conid:27604924, id:60, name:uid60)
14.02 12:17:21 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
14.02 12:17:21 -<<-: core/user.loginPost { _type => core/user.loginPost }
14.02 12:17:21 == NET: uid60 ret: user.login { name => uid60, type => user.login, errorCode => ok, id => 60 }
14.02 12:17:21 == NET: uid60 ret: user.join { name => uid60, type => user.join }
14.02 12:17:27 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:17:27 TIME: user.ping 0.16 ms
14.02 12:17:27 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:17:28 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
14.02 12:17:28 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.02 12:17:48 TIMER: Check auto-disconnect...
14.02 12:17:48 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:17:48 TIME: user.ping 0.11 ms
14.02 12:17:48 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:17:53 STATS: vdl.0 cache, locks:2
14.02 12:18:10 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:18:10 TIME: user.ping 0.12 ms
14.02 12:18:10 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:18:31 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:18:31 TIME: user.ping 0.16 ms
14.02 12:18:31 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:18:48 TIMER: Check auto-disconnect...
14.02 12:18:53 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:18:53 TIME: user.ping 0.16 ms
14.02 12:18:53 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:18:53 STATS: vdl.0 cache, locks:2
14.02 12:19:14 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:19:14 TIME: user.ping 0.13 ms
14.02 12:19:14 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:19:35 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:19:35 TIME: user.ping 0.12 ms
14.02 12:19:35 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:19:48 TIMER: Check auto-disconnect...
14.02 12:19:53 STATS: vdl.0 cache, locks:2
14.02 12:19:57 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:19:57 TIME: user.ping 0.14 ms
14.02 12:19:57 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:20:18 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:20:18 TIME: user.ping 0.17 ms
14.02 12:20:18 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:20:40 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:20:40 TIME: user.ping 0.14 ms
14.02 12:20:40 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:20:48 TIMER: Check auto-disconnect...
14.02 12:20:53 STATS: vdl.0 cache, locks:2
14.02 12:21:01 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:21:01 TIME: user.ping 0.07 ms
14.02 12:21:01 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:21:23 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:21:23 TIME: user.ping 0.14 ms
14.02 12:21:23 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:21:45 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:21:45 TIME: user.ping 0.12 ms
14.02 12:21:45 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:21:48 TIMER: Check auto-disconnect...
14.02 12:21:53 STATS: vdl.0 cache, locks:2
14.02 12:22:06 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:22:06 TIME: user.ping 0.16 ms
14.02 12:22:06 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:22:28 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:22:28 TIME: user.ping 0.09 ms
14.02 12:22:28 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:22:48 TIMER: Check auto-disconnect...
14.02 12:22:49 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:22:49 TIME: user.ping 0.12 ms
14.02 12:22:49 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:22:53 STATS: vdl.0 cache, locks:2
14.02 12:23:10 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:23:10 TIME: user.ping 0.14 ms
14.02 12:23:10 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:23:31 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:23:31 TIME: user.ping 0.12 ms
14.02 12:23:31 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:23:48 TIMER: Check auto-disconnect...
14.02 12:23:53 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:23:53 TIME: user.ping 0.11 ms
14.02 12:23:53 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:23:53 STATS: vdl.0 cache, locks:2
14.02 12:24:14 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:24:14 TIME: user.ping 0.12 ms
14.02 12:24:14 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:24:35 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:24:35 TIME: user.ping 0.13 ms
14.02 12:24:35 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:24:48 TIMER: Check auto-disconnect...
14.02 12:24:53 STATS: vdl.0 cache, locks:2
14.02 12:24:57 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:24:57 TIME: user.ping 0.11 ms
14.02 12:24:57 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:25:18 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:25:18 TIME: user.ping 0.08 ms
14.02 12:25:18 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:25:39 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:25:39 TIME: user.ping 0.12 ms
14.02 12:25:39 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:25:48 TIMER: Check auto-disconnect...
14.02 12:25:53 STATS: vdl.0 cache, locks:2
14.02 12:26:00 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:26:00 TIME: user.ping 0.13 ms
14.02 12:26:00 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:26:22 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:26:22 TIME: user.ping 0.13 ms
14.02 12:26:22 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:26:43 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:26:43 TIME: user.ping 0.1 ms
14.02 12:26:43 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:26:48 TIMER: Check auto-disconnect...
14.02 12:26:53 STATS: vdl.0 cache, locks:2
14.02 12:27:04 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:27:04 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:27:04 TIME: user.ping 0.14 ms
14.02 12:27:26 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:27:26 TIME: user.ping 0.12 ms
14.02 12:27:26 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:27:47 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:27:47 TIME: user.ping 0.12 ms
14.02 12:27:47 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:27:48 TIMER: Check auto-disconnect...
14.02 12:27:53 STATS: vdl.0 cache, locks:2
14.02 12:28:08 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:28:08 TIME: user.ping 0.12 ms
14.02 12:28:08 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:28:29 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:28:29 TIME: user.ping 0.11 ms
14.02 12:28:29 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:28:48 TIMER: Check auto-disconnect...
14.02 12:28:51 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:28:51 TIME: user.ping 0.12 ms
14.02 12:28:51 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:28:53 STATS: vdl.0 cache, locks:2
14.02 12:29:12 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:29:12 TIME: user.ping 0.12 ms
14.02 12:29:12 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:29:33 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:29:33 TIME: user.ping 0.17 ms
14.02 12:29:33 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:29:48 TIMER: Check auto-disconnect...
14.02 12:29:53 STATS: vdl.0 cache, locks:2
14.02 12:29:55 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:29:55 TIME: user.ping 0.12 ms
14.02 12:29:55 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:30:16 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:30:16 TIME: user.ping 0.08 ms
14.02 12:30:16 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:30:38 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:30:38 TIME: user.ping 0.1 ms
14.02 12:30:38 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:30:48 TIMER: Check auto-disconnect...
14.02 12:30:53 STATS: vdl.0 cache, locks:2
14.02 12:30:59 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:30:59 TIME: user.ping 0.08 ms
14.02 12:30:59 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:31:21 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:31:21 TIME: user.ping 0.13 ms
14.02 12:31:21 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:31:42 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:31:42 TIME: user.ping 0.12 ms
14.02 12:31:42 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:31:48 TIMER: Check auto-disconnect...
14.02 12:31:53 STATS: vdl.0 cache, locks:2
14.02 12:32:04 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:32:04 TIME: user.ping 0.17 ms
14.02 12:32:04 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:32:25 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:32:25 TIME: user.ping 0.14 ms
14.02 12:32:25 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:32:46 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:32:46 TIME: user.ping 0.15 ms
14.02 12:32:46 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:32:48 TIMER: Check auto-disconnect...
14.02 12:32:53 STATS: vdl.0 cache, locks:2
14.02 12:33:08 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:33:08 TIME: user.ping 0.14 ms
14.02 12:33:08 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:33:29 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:33:29 TIME: user.ping 0.2 ms
14.02 12:33:29 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:33:48 TIMER: Check auto-disconnect...
14.02 12:33:50 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:33:50 TIME: user.ping 0.08 ms
14.02 12:33:50 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:33:53 STATS: vdl.0 cache, locks:2
14.02 12:34:12 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:34:12 TIME: user.ping 0.13 ms
14.02 12:34:12 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:34:33 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:34:33 TIME: user.ping 0.14 ms
14.02 12:34:33 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:34:48 TIMER: Check auto-disconnect...
14.02 12:34:53 STATS: vdl.0 cache, locks:2
14.02 12:34:55 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:34:55 TIME: user.ping 0.12 ms
14.02 12:34:55 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:35:16 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:35:16 TIME: user.ping 0.17 ms
14.02 12:35:16 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:35:37 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:35:37 TIME: user.ping 0.17 ms
14.02 12:35:37 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:35:48 TIMER: Check auto-disconnect...
14.02 12:35:53 STATS: vdl.0 cache, locks:2
14.02 12:35:59 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:35:59 TIME: user.ping 0.1 ms
14.02 12:35:59 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:36:20 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:36:20 TIME: user.ping 0.15 ms
14.02 12:36:20 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:36:41 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:36:41 TIME: user.ping 0.12 ms
14.02 12:36:41 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:36:48 TIMER: Check auto-disconnect...
14.02 12:36:53 STATS: vdl.0 cache, locks:2
14.02 12:37:03 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:37:03 TIME: user.ping 0.07 ms
14.02 12:37:03 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:37:24 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:37:24 TIME: user.ping 0.12 ms
14.02 12:37:24 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:37:46 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:37:46 TIME: user.ping 0.1 ms
14.02 12:37:46 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:37:48 TIMER: Check auto-disconnect...
14.02 12:37:53 STATS: vdl.0 cache, locks:2
14.02 12:38:07 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:38:07 TIME: user.ping 0.13 ms
14.02 12:38:07 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:38:29 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:38:29 TIME: user.ping 0.14 ms
14.02 12:38:29 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:38:48 TIMER: Check auto-disconnect...
14.02 12:38:50 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:38:50 TIME: user.ping 0.12 ms
14.02 12:38:50 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:38:53 STATS: vdl.0 cache, locks:2
14.02 12:39:11 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:39:11 TIME: user.ping 0.09 ms
14.02 12:39:11 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:39:33 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:39:33 TIME: user.ping 0.11 ms
14.02 12:39:33 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:39:48 TIMER: Check auto-disconnect...
14.02 12:39:53 STATS: vdl.0 cache, locks:2
14.02 12:39:54 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:39:54 TIME: user.ping 0.12 ms
14.02 12:39:54 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:40:16 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:40:16 TIME: user.ping 0.12 ms
14.02 12:40:16 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:40:37 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:40:37 TIME: user.ping 0.12 ms
14.02 12:40:37 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:40:48 TIMER: Check auto-disconnect...
14.02 12:40:53 STATS: vdl.0 cache, locks:2
14.02 12:40:58 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:40:58 TIME: user.ping 0.13 ms
14.02 12:40:58 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:41:20 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:41:20 TIME: user.ping 0.1 ms
14.02 12:41:20 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:41:41 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:41:41 TIME: user.ping 0.11 ms
14.02 12:41:41 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:41:48 TIMER: Check auto-disconnect...
14.02 12:41:53 STATS: vdl.0 cache, locks:2
14.02 12:42:02 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:42:02 TIME: user.ping 0.13 ms
14.02 12:42:02 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:42:24 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:42:24 TIME: user.ping 0.12 ms
14.02 12:42:24 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:42:45 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:42:45 TIME: user.ping 0.15 ms
14.02 12:42:45 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:42:48 TIMER: Check auto-disconnect...
14.02 12:42:53 STATS: vdl.0 cache, locks:2
14.02 12:43:07 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:43:07 TIME: user.ping 0.16 ms
14.02 12:43:07 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:43:28 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:43:28 TIME: user.ping 0.18 ms
14.02 12:43:28 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:43:48 TIMER: Check auto-disconnect...
14.02 12:43:49 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:43:49 TIME: user.ping 0.14 ms
14.02 12:43:49 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:43:53 STATS: vdl.0 cache, locks:2
14.02 12:44:11 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:44:11 TIME: user.ping 0.17 ms
14.02 12:44:11 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:44:32 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:44:32 TIME: user.ping 0.18 ms
14.02 12:44:32 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:44:48 TIMER: Check auto-disconnect...
14.02 12:44:53 STATS: vdl.0 cache, locks:2
14.02 12:44:54 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:44:54 TIME: user.ping 0.1 ms
14.02 12:44:54 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:45:15 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:45:15 TIME: user.ping 0.11 ms
14.02 12:45:15 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:45:36 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:45:36 TIME: user.ping 0.12 ms
14.02 12:45:36 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:45:48 TIMER: Check auto-disconnect...
14.02 12:45:53 STATS: vdl.0 cache, locks:2
14.02 12:45:58 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:45:58 TIME: user.ping 0.12 ms
14.02 12:45:58 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:46:19 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:46:19 TIME: user.ping 0.18 ms
14.02 12:46:19 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:46:41 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:46:41 TIME: user.ping 0.12 ms
14.02 12:46:41 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:46:48 TIMER: Check auto-disconnect...
14.02 12:46:53 STATS: vdl.0 cache, locks:2
14.02 12:47:02 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:47:02 TIME: user.ping 0.32 ms
14.02 12:47:02 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:47:23 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:47:23 TIME: user.ping 0.11 ms
14.02 12:47:23 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:47:45 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:47:45 TIME: user.ping 0.08 ms
14.02 12:47:45 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:47:48 TIMER: Check auto-disconnect...
14.02 12:47:53 STATS: vdl.0 cache, locks:2
14.02 12:48:06 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:48:06 TIME: user.ping 0.15 ms
14.02 12:48:06 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:48:28 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:48:28 TIME: user.ping 0.09 ms
14.02 12:48:28 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:48:48 TIMER: Check auto-disconnect...
14.02 12:48:49 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:48:49 TIME: user.ping 0.11 ms
14.02 12:48:49 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:48:53 STATS: vdl.0 cache, locks:2
14.02 12:49:10 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:49:10 TIME: user.ping 0.14 ms
14.02 12:49:10 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:49:32 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:49:32 TIME: user.ping 10.44 ms
14.02 12:49:32 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:49:48 TIMER: Check auto-disconnect...
14.02 12:49:53 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:49:53 TIME: user.ping 0.22 ms
14.02 12:49:53 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:49:53 STATS: vdl.0 cache, locks:2
14.02 12:50:15 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:50:15 TIME: user.ping 0.17 ms
14.02 12:50:15 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:50:36 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:50:36 TIME: user.ping 0.12 ms
14.02 12:50:36 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:50:48 TIMER: Check auto-disconnect...
14.02 12:50:53 STATS: vdl.0 cache, locks:2
14.02 12:50:57 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:50:57 TIME: user.ping 0.12 ms
14.02 12:50:57 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:51:19 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:51:19 TIME: user.ping 0.13 ms
14.02 12:51:19 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:51:40 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:51:40 TIME: user.ping 0.17 ms
14.02 12:51:40 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:51:48 TIMER: Check auto-disconnect...
14.02 12:51:53 STATS: vdl.0 cache, locks:2
14.02 12:52:01 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:52:01 TIME: user.ping 7.49 ms
14.02 12:52:01 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:52:23 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:52:23 TIME: user.ping 0.12 ms
14.02 12:52:23 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:52:44 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:52:44 TIME: user.ping 0.18 ms
14.02 12:52:44 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:52:48 TIMER: Check auto-disconnect...
14.02 12:52:53 STATS: vdl.0 cache, locks:2
14.02 12:53:05 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:53:05 TIME: user.ping 0.12 ms
14.02 12:53:05 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:53:27 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:53:27 TIME: user.ping 0.12 ms
14.02 12:53:27 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:53:48 TIMER: Check auto-disconnect...
14.02 12:53:48 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:53:48 TIME: user.ping 0.14 ms
14.02 12:53:48 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:53:53 STATS: vdl.0 cache, locks:2
14.02 12:54:09 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:54:09 TIME: user.ping 0.19 ms
14.02 12:54:09 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:54:31 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:54:31 TIME: user.ping 0.11 ms
14.02 12:54:31 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:54:48 TIMER: Check auto-disconnect...
14.02 12:54:52 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:54:52 TIME: user.ping 0.11 ms
14.02 12:54:52 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:54:53 STATS: vdl.0 cache, locks:2
14.02 12:55:13 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:55:13 TIME: user.ping 0.12 ms
14.02 12:55:13 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:55:35 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:55:35 TIME: user.ping 0.13 ms
14.02 12:55:35 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:55:48 TIMER: Check auto-disconnect...
14.02 12:55:53 STATS: vdl.0 cache, locks:2
14.02 12:55:56 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:55:56 TIME: user.ping 0.12 ms
14.02 12:55:56 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:56:18 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:56:18 TIME: user.ping 0.12 ms
14.02 12:56:18 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:56:39 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:56:39 TIME: user.ping 0.12 ms
14.02 12:56:39 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:56:48 TIMER: Check auto-disconnect...
14.02 12:56:53 STATS: vdl.0 cache, locks:2
14.02 12:57:00 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:57:00 TIME: user.ping 0.1 ms
14.02 12:57:00 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:57:22 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:57:22 TIME: user.ping 0.13 ms
14.02 12:57:22 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:57:43 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:57:43 TIME: user.ping 0.12 ms
14.02 12:57:43 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:57:48 TIMER: Check auto-disconnect...
14.02 12:57:53 STATS: vdl.0 cache, locks:2
14.02 12:58:04 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:58:04 TIME: user.ping 0.09 ms
14.02 12:58:04 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:58:26 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:58:26 TIME: user.ping 0.1 ms
14.02 12:58:26 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:58:47 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:58:47 TIME: user.ping 0.13 ms
14.02 12:58:47 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:58:48 TIMER: Check auto-disconnect...
14.02 12:58:54 STATS: vdl.0 cache, locks:2
14.02 12:59:09 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:59:09 TIME: user.ping 0.08 ms
14.02 12:59:09 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:59:30 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:59:30 TIME: user.ping 0.13 ms
14.02 12:59:30 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:59:48 TIMER: Check auto-disconnect...
14.02 12:59:51 ++ NET: uid60 req: user.ping { messageType => user.ping, msg => ok }
14.02 12:59:51 TIME: user.ping 0.22 ms
14.02 12:59:51 == NET: uid60 ret: user.ping { type => user.ping, errorCode => ok }
14.02 12:59:54 STATS: vdl.0 cache, locks:2
