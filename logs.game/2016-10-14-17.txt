14.10 17:09:25 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:09:25 -<<-: server.login ok
14.10 17:09:25 DB: SELECT * FROM LocalizationStrings
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 TIMER: Starting timer...
14.10 17:09:25 DB: SELECT * FROM GameVars
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:09:25 TIMER: Timer running...
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:09:25 -<<-: core/quest.getDaily ok
14.10 17:09:25 DB: SELECT * FROM UserAttributeTypes
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM UserVariableTypes
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:09:25 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM ItemGroups
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 SHOP: loading items...
14.10 17:09:25 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 17:09:25 -<<-: core/shop.getList ok
14.10 17:09:25 SHOP: 0 items loaded (0 sec)
14.10 17:09:25 DB: SELECT * FROM EffectAttributeTypes
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT * FROM Effects
14.10 17:09:25 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:09:25 -<<-: core/server.query ok
14.10 17:09:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(14.10 17:26:14 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:26:14 -<<-: server.login ok
14.10 17:26:14 DB: SELECT * FROM LocalizationStrings
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 TIMER: Starting timer...
14.10 17:26:14 TIMER: Timer running...
14.10 17:26:14 DB: SELECT * FROM GameVars
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:26:14 -<<-: core/quest.getDaily ok
14.10 17:26:14 DB: SELECT * FROM UserAttributeTypes
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM UserVariableTypes
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:26:14 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM ItemGroups
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 SHOP: loading items...
14.10 17:26:14 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 17:26:14 -<<-: core/shop.getList ok
14.10 17:26:14 SHOP: 0 items loaded (0 sec)
14.10 17:26:14 DB: SELECT * FROM EffectAttributeTypes
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM Effects
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:26:14 ->>-: core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:26:14 ->>-: core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 DB: SELECT * FROM Badges
14.10 17:26:14 ->>-: core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 17:26:14 -<<-: core/server.query ok
14.10 17:26:14 TIMER: Check auto-disconnect...
14.10 17:26:14 STATS: vdl.0 cache, locks:0
14.10 17:26:14 TIMER: Check auto-disconnect...
14.10 17:26:14 STATS: vdl.0 cache, locks:0
14.10 17:26:14 TIMER: Check auto-disconnect...
14.10 17:26:14 STATS: vdl.0 cache, locks:0
14.10 17:26:14 TIMER: Check auto-disconnect...
14.10 17:26:14 STATS: vdl.0 cache, locks:0
14.10 17:26:14 TIMER: Check auto-disconnect...
14.10 17:26:14 STATS: vdl.0 cache, locks:0
14.10 17:31:31 NET: Client (conid:45499381) connected to vdl.0 (clients:1)
14.10 17:31:32 ++ NET: null req: user.login { messageType => user.login, token => dWlkMzQ= }
14.10 17:31:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 17:31:32 ->>-: core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 17:31:32 -<<-: core/server.query ok
14.10 17:31:32 STATS: vdl.0 cache connection, 21 calls, total 0.0434882640838623 sec spent, avg 2.07 ms
14.10 17:31:32 ->>-: core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 17:31:32 -<<-: core/user.isOnlineID ok
14.10 17:31:32 ->>-: core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 17:31:32 -<<-: core/cache.get ok
14.10 17:31:32 ->>-: core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 17:31:32 -<<-: core/cache.get ok
14.10 17:31:32 NET: Client login (conid:45499381, id:34, name:uid34)
14.10 17:31:32 ->>-: core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 17:31:32 -<<-: core/user.loginPost null
14.10 17:31:32 == NET: uid34 ret: user.login { name => uid34, type => user.login, errorCode => ok, id => 34 }
14.10 17:31:32 == NET: uid34 ret: user.join { name => uid34, type => user.join }
14.10 17:31:37 ++ NET: uid34 req: tournament.getAvailableTournament { messageType => tournament.getAvailableTournament }
14.10 17:31:37 ->>-: vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 17:31:37 -<<-: vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_17:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 17:31:37 TIME: tournament.getAvailableTournament 5.48 ms
14.10 17:31:37 == NET: uid34 ret: tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_17:30 }], count => 1, type => tournament.getAvailableTournament, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 17:31:39 ->>-: core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 17:31:39 -<<-: core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 17:32:39 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:32:39 -<<-: server.login ok
14.10 17:32:39 DB: SELECT * FROM LocalizationStrings
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 TIMER: Starting timer...
14.10 17:32:39 TIMER: Timer running...
14.10 17:32:39 DB: SELECT * FROM GameVars
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:32:39 -<<-: core/quest.getDaily ok
14.10 17:32:39 DB: SELECT * FROM UserAttributeTypes
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM UserVariableTypes
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:32:39 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM ItemGroups
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 SHOP: loading items...
14.10 17:32:39 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 17:32:39 -<<-: core/shop.getList ok
14.10 17:32:39 SHOP: 0 items loaded (0 sec)
14.10 17:32:39 DB: SELECT * FROM EffectAttributeTypes
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT * FROM Effects
14.10 17:32:39 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:32:39 -<<-: core/server.query ok
14.10 17:32:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(14.10 17:33:35 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:33:35 -<<-: server.login ok
14.10 17:33:35 DB: SELECT * FROM LocalizationStrings
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 TIMER: Starting timer...
14.10 17:33:35 TIMER: Timer running...
14.10 17:33:35 DB: SELECT * FROM GameVars
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:33:35 -<<-: core/quest.getDaily ok
14.10 17:33:35 DB: SELECT * FROM UserAttributeTypes
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM UserVariableTypes
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:33:35 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM ItemGroups
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 SHOP: loading items...
14.10 17:33:35 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 17:33:35 -<<-: core/shop.getList ok
14.10 17:33:35 SHOP: 0 items loaded (0 sec)
14.10 17:33:35 DB: SELECT * FROM EffectAttributeTypes
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT * FROM Effects
14.10 17:33:35 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:33:35 -<<-: core/server.query ok
14.10 17:33:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(14.10 17:48:35 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:48:35 -<<-: server.login ok
14.10 17:48:35 DB: SELECT * FROM LocalizationStrings
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 TIMER: Starting timer...
14.10 17:48:35 TIMER: Timer running...
14.10 17:48:35 DB: SELECT * FROM GameVars
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:48:35 -<<-: core/quest.getDaily ok
14.10 17:48:35 DB: SELECT * FROM UserAttributeTypes
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM UserVariableTypes
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:48:35 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM ItemGroups
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 SHOP: loading items...
14.10 17:48:35 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 17:48:35 -<<-: core/shop.getList ok
14.10 17:48:35 SHOP: 0 items loaded (0 sec)
14.10 17:48:35 DB: SELECT * FROM EffectAttributeTypes
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT * FROM Effects
14.10 17:48:35 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:48:35 -<<-: core/server.query ok
14.10 17:48:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(14.10 17:49:06 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:49:06 -<<-: server.login ok
14.10 17:49:06 DB: SELECT * FROM LocalizationStrings
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 TIMER: Starting timer...
14.10 17:49:06 TIMER: Timer running...
14.10 17:49:06 DB: SELECT * FROM GameVars
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:49:06 -<<-: core/quest.getDaily ok
14.10 17:49:06 DB: SELECT * FROM UserAttributeTypes
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM UserVariableTypes
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:49:06 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM ItemGroups
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 SHOP: loading items...
14.10 17:49:06 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 17:49:06 -<<-: core/shop.getList ok
14.10 17:49:06 SHOP: 0 items loaded (0 sec)
14.10 17:49:06 DB: SELECT * FROM EffectAttributeTypes
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT * FROM Effects
14.10 17:49:06 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:49:06 -<<-: core/server.query ok
14.10 17:49:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(14.10 17:49:39 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:49:39 -<<-: server.login ok
14.10 17:49:39 DB: SELECT * FROM LocalizationStrings
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 TIMER: Starting timer...
14.10 17:49:39 TIMER: Timer running...
14.10 17:49:39 DB: SELECT * FROM GameVars
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:49:39 -<<-: core/quest.getDaily ok
14.10 17:49:39 DB: SELECT * FROM UserAttributeTypes
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM UserVariableTypes
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:49:39 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM ItemGroups
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 SHOP: loading items...
14.10 17:49:39 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 17:49:39 -<<-: core/shop.getList ok
14.10 17:49:39 SHOP: 0 items loaded (0 sec)
14.10 17:49:39 DB: SELECT * FROM EffectAttributeTypes
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT * FROM Effects
14.10 17:49:39 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:49:39 -<<-: core/server.query ok
14.10 17:49:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(14.10 17:50:09 ->>-: core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:50:09 -<<-: server.login ok
14.10 17:50:09 DB: SELECT * FROM LocalizationStrings
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 TIMER: Starting timer...
14.10 17:50:09 TIMER: Timer running...
14.10 17:50:09 DB: SELECT * FROM GameVars
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 ->>-: core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:50:09 -<<-: core/quest.getDaily ok
14.10 17:50:09 DB: SELECT * FROM UserAttributeTypes
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM UserVariableTypes
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:50:09 ->>-: core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM ItemGroups
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 SHOP: loading items...
14.10 17:50:09 ->>-: core/shop.getList { _type => core/shop.getList }
14.10 17:50:09 -<<-: core/shop.getList ok
14.10 17:50:09 SHOP: 0 items loaded (0 sec)
14.10 17:50:09 DB: SELECT * FROM EffectAttributeTypes
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT * FROM Effects
14.10 17:50:09 ->>-: core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:50:09 -<<-: core/server.query ok
14.10 17:50:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part(