12.10 18:00:10 BLOCKREMOVE: tournament 1 removed
12.10 18:00:45 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
12.10 18:00:45 TIMER: Clans cache...
12.10 18:00:45 TIMER: Clans cache: 0ms
12.10 18:01:34 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 18:01:34 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 18:01:34 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 18:01:34 TIME: core/server.query : 1.16 ms
12.10 18:01:34 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 18:01:34 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
12.10 18:01:34 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
12.10 18:01:34 STATS: cache [battle], database [889 calls, 2 reads, 0 writes]
12.10 18:01:34 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 18:01:34 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 18:01:34 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 18:01:34 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 18:01:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 18:01:34 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 18:01:34 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
12.10 18:01:34 STATS: cache [user], segments [14 calls, 9 hits, 4 misses]
12.10 18:01:34 STATS: cache [user], database [889 calls, 2 reads, 5 writes]
12.10 18:01:34 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
12.10 18:01:34 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1.38 ms]
12.10 18:01:34 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.3 ms]
12.10 18:01:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
12.10 18:01:34 TIME: core/cache.update : 0.57 ms
12.10 18:01:34 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 18:01:34 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
12.10 18:01:34 STATS: cache [questdata], segments [11 calls, 6 hits, 4 misses]
12.10 18:01:34 STATS: cache [questdata], database [889 calls, 2 reads, 2 writes]
12.10 18:01:34 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
12.10 18:01:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 18:01:34 TIME: core/cache.update : 0.43 ms
12.10 18:01:34 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 18:01:34 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 18:01:34 TIME: core/user.logoutPost : 0.12 ms
12.10 18:01:35 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:01:35 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 18:01:45 BLOCKREMOVE: user 33 removed
12.10 18:01:45 BLOCKREMOVE: questdata 33 removed
12.10 18:01:45 TIMER: Clans cache...
12.10 18:01:45 TIMER: Clans cache: 0ms
12.10 18:02:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:02:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:02:23 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid33, networkid => , isbanned => false, id => 33 }}, errorCode => ok, _type => core/server.query }
12.10 18:02:23 TIME: core/server.query : 1.85 ms
12.10 18:02:23 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:02:23 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
12.10 18:02:23 TIME: core/user.isOnlineID : 0.11 ms
12.10 18:02:23 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:02:23 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:02:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid33, deleted => false, email => , networktype =>   , password => uid33, isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476272110, lastLoginDate => 286, lastLoadDate => 1013 }, effects => { list => [] } }}, version => 0, id => 33 } }
12.10 18:02:23 TIME: core/cache.get : 2.5 ms
12.10 18:02:23 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:02:23 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:02:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 33 } }
12.10 18:02:23 TIME: core/cache.get : 1.08 ms
12.10 18:02:23 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:02:23 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:02:23 TIME: core/user.loginPost : 0.16 ms
12.10 18:02:28 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:02:28 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:02:28 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:02:28 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => , id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:02:28 TIME: vdl/cache.tournament.getAvailableTournament : 2.86 ms
12.10 18:02:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:02:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:02:30 TIME: core/cache.update : 0.19 ms
12.10 18:02:31 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:02:35 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 18:02:35 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 1 not found]
12.10 18:02:35 STATS: cache [tournament], segments [3 calls, 0 hits, 2 misses]
12.10 18:02:35 STATS: cache [tournament], database [950 calls, 2 reads, 0 writes]
12.10 18:02:35 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
12.10 18:02:35 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:02:35 DB: SELECT name FROM users WHERE id = 33
12.10 18:02:35 TRACE: vdl/cache.tournament.addUsers : Invalid field access : length
12.10 18:02:35 TRACE: vdl/cache.tournament.addUsers : 
Called from modules/VDLCache.hx line 250
Called from modules/VDLCache.hx line 136
Called from modules/VDLCache.hx line 76
Called from snipe/cache/CacheServer.hx line 487
12.10 18:02:35 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => _requestException, _type => vdl/cache.tournament.addUsers }
12.10 18:02:45 TIMER: Clans cache...
12.10 18:02:45 TIMER: Clans cache: 0ms
12.10 18:02:46 BLOCKREMOVE: tournament 1 removed
12.10 18:05:01 TIMER: Starting timer...
12.10 18:05:01 DB: SELECT * FROM GameVars
12.10 18:05:01 TIMER: Timer running...
12.10 18:05:01 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:05:01 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:05:01 DB: SELECT * FROM Shops WHERE ID = 1
12.10 18:05:01 TEMP: load ./tmp/quest_daily_ids
12.10 18:05:01 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 18:05:01 TEMP: save ./tmp/quest_daily_ids
12.10 18:05:01 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 18:05:01 QUEUE: vdl.0 (thread) response server.login
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM LocalizationStrings
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 27.94 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM GameVars
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 5.3 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 5.02 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.33 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 2.34 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 2.47 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 18:05:01 TIME: core/quest.getDaily : 0.08 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM UserAttributeTypes
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.5 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM UserVariableTypes
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.15 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 18:05:01 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 3.65 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM ItemGroups
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.32 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM Bundles ORDER BY ID
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.78 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.5 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 18:05:01 TIME: core/shop.getList : 0.08 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM EffectAttributeTypes
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.19 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM Effects
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.29 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 18:05:01 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 2.26 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 18:05:01 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.86 ms
12.10 18:05:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 18:05:01 DB: SELECT * FROM Badges
12.10 18:05:01 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:05:01 TIME: core/server.query : 1.15 ms
12.10 18:05:01 TIMER: Clans cache...
12.10 18:05:01 TIMER: Clans cache: 0ms
12.10 18:05:01 TIMER: Clans cache...
12.10 18:05:01 TIMER: Clans cache: 0ms
12.10 18:05:01 TIMER: Clans cache...
12.10 18:05:01 TIMER: Clans cache: 0ms
12.10 18:08:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:08:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:08:50 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:08:50 TIME: core/server.query : 2.51 ms
12.10 18:08:50 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:08:50 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 18:08:50 TIME: core/user.isOnlineID : 0.08 ms
12.10 18:08:50 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:08:50 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:08:50 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
12.10 18:08:50 STATS: cache [user], database [229 calls, 0 reads, 0 writes]
12.10 18:08:50 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 18:08:50 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:08:50 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 6.18 ms]
12.10 18:08:50 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
12.10 18:08:50 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:08:50 TIME: core/cache.get : 6.41 ms
12.10 18:08:50 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:08:50 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:08:50 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
12.10 18:08:50 STATS: cache [questdata], database [229 calls, 0 reads, 0 writes]
12.10 18:08:50 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 18:08:50 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:08:50 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:08:50 TIME: core/cache.get : 3.98 ms
12.10 18:08:50 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:08:50 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:08:50 TIME: core/user.loginPost : 0.14 ms
12.10 18:08:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:08:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:08:56 TIME: core/cache.update : 0.2 ms
12.10 18:08:57 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:08:58 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:08:58 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:08:58 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:08:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => , id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:08:58 TIME: vdl/cache.tournament.getAvailableTournament : 3.06 ms
12.10 18:09:01 TIMER: Clans cache...
12.10 18:09:01 TIMER: Clans cache: 0ms
12.10 18:09:02 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 18:09:02 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:09:02 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
12.10 18:09:02 STATS: cache [tournament], database [242 calls, 0 reads, 0 writes]
12.10 18:09:02 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
12.10 18:09:02 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:09:02 DB: SELECT name FROM users WHERE id = 33
12.10 18:09:02 TRACE: vdl/cache.tournament.addUsers : Invalid field access : length
12.10 18:09:02 TRACE: vdl/cache.tournament.addUsers : 
Called from modules/VDLCache.hx line 251
Called from modules/VDLCache.hx line 136
Called from modules/VDLCache.hx line 76
Called from snipe/cache/CacheServer.hx line 487
12.10 18:09:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => _requestException, _type => vdl/cache.tournament.addUsers }
12.10 18:09:13 BLOCKREMOVE: tournament 1 removed
12.10 18:11:16 TIMER: Starting timer...
12.10 18:11:16 TIMER: Timer running...
12.10 18:11:16 DB: SELECT * FROM GameVars
12.10 18:11:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:11:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:11:16 DB: SELECT * FROM Shops WHERE ID = 1
12.10 18:11:17 TEMP: load ./tmp/quest_daily_ids
12.10 18:11:17 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 18:11:17 TEMP: save ./tmp/quest_daily_ids
12.10 18:11:17 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 18:11:17 QUEUE: vdl.0 (thread) response server.login
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM LocalizationStrings
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 28.81 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM GameVars
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 1.7 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 2.01 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 1.24 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 1.14 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 2.81 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 18:11:17 TIME: core/quest.getDaily : 0.04 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM UserAttributeTypes
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 2.41 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM UserVariableTypes
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 1.18 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 18:11:17 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 3.26 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM ItemGroups
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 1.32 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM Bundles ORDER BY ID
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 1.41 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 2.56 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 18:11:17 TIME: core/shop.getList : 0.34 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM EffectAttributeTypes
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 1.25 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM Effects
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 3.04 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 18:11:17 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 2.49 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 18:11:17 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 2.29 ms
12.10 18:11:17 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 18:11:17 DB: SELECT * FROM Badges
12.10 18:11:17 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:17 TIME: core/server.query : 1.9 ms
12.10 18:11:56 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:11:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:11:56 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:11:56 TIME: core/server.query : 2.96 ms
12.10 18:11:56 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:11:56 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 18:11:56 TIME: core/user.isOnlineID : 0.09 ms
12.10 18:11:56 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:11:56 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:11:56 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:11:56 TIME: core/cache.get : 3.73 ms
12.10 18:11:56 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:11:56 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:11:56 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:11:56 TIME: core/cache.get : 1.51 ms
12.10 18:11:56 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:11:56 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:11:56 TIME: core/user.loginPost : 0.13 ms
12.10 18:12:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:12:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:12:02 TIME: core/cache.update : 0.21 ms
12.10 18:12:03 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:12:04 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:12:04 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:12:04 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:12:04 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => , id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:12:04 TIME: vdl/cache.tournament.getAvailableTournament : 3.3 ms
12.10 18:12:08 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 18:12:08 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:12:08 DB: SELECT name FROM users WHERE id = 33
12.10 18:12:08 TRACE: vdl/cache.tournament.addUsers : Invalid field access : length
12.10 18:12:08 TRACE: vdl/cache.tournament.addUsers : 
Called from modules/VDLCache.hx line 250
Called from modules/VDLCache.hx line 136
Called from modules/VDLCache.hx line 76
Called from snipe/cache/CacheServer.hx line 487
12.10 18:12:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => _requestException, _type => vdl/cache.tournament.addUsers }
12.10 18:12:17 TIMER: Clans cache...
12.10 18:12:17 TIMER: Clans cache: 0ms
12.10 18:12:18 BLOCKREMOVE: tournament 1 removed
12.10 18:13:17 TIMER: Clans cache...
12.10 18:13:17 TIMER: Clans cache: 0ms
12.10 18:13:17 TIMER: Clans cache...
12.10 18:13:17 TIMER: Clans cache: 0ms
12.10 18:13:17 TIMER: Clans cache...
12.10 18:13:17 TIMER: Clans cache: 0ms
12.10 18:13:17 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 18:13:17 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 18:13:17 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 18:13:17 TIME: core/server.query : 2.46 ms
12.10 18:13:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 18:13:17 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:13:17 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
12.10 18:13:17 STATS: cache [battle], database [241 calls, 0 reads, 0 writes]
12.10 18:13:17 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 18:13:17 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 18:13:17 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 18:13:17 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 18:13:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 18:13:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 18:13:17 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:13:17 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
12.10 18:13:17 STATS: cache [user], database [241 calls, 1 reads, 1 writes]
12.10 18:13:17 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 18:13:17 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.53 ms]
12.10 18:13:17 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.2 ms]
12.10 18:13:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 18:13:17 TIME: core/cache.update : 0.59 ms
12.10 18:13:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 18:13:17 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:13:17 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
12.10 18:13:17 STATS: cache [questdata], database [241 calls, 1 reads, 0 writes]
12.10 18:13:17 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 18:13:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:13:17 TIME: core/cache.update : 0.33 ms
12.10 18:13:17 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 18:13:17 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 18:13:17 TIME: core/user.logoutPost : 0.12 ms
12.10 18:15:18 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:15:18 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 18:16:11 TIMER: Starting timer...
12.10 18:16:11 DB: SELECT * FROM GameVars
12.10 18:16:11 TIMER: Timer running...
12.10 18:16:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:16:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:16:11 DB: SELECT * FROM Shops WHERE ID = 1
12.10 18:16:11 TEMP: load ./tmp/quest_daily_ids
12.10 18:16:11 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 18:16:11 TEMP: save ./tmp/quest_daily_ids
12.10 18:16:11 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 18:16:11 QUEUE: vdl.0 (thread) response server.login
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM LocalizationStrings
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 50.5 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM GameVars
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 2.6 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 3.15 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 3.3 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 3.08 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 2.59 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 18:16:11 TIME: core/quest.getDaily : 0.04 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM UserAttributeTypes
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 1.23 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM UserVariableTypes
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 1.23 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 18:16:11 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 3.03 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM ItemGroups
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 1.64 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM Bundles ORDER BY ID
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 1.67 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 1.67 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 18:16:11 TIME: core/shop.getList : 0.48 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM EffectAttributeTypes
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 1.37 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM Effects
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 1.41 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 18:16:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 2.39 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 18:16:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 2.4 ms
12.10 18:16:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 18:16:11 DB: SELECT * FROM Badges
12.10 18:16:11 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:11 TIME: core/server.query : 1.88 ms
12.10 18:16:46 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:16:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:16:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:16:46 TIME: core/server.query : 6.37 ms
12.10 18:16:46 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:16:46 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 18:16:46 TIME: core/user.isOnlineID : 0.11 ms
12.10 18:16:46 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:16:46 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:16:46 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:16:46 TIME: core/cache.get : 6.19 ms
12.10 18:16:46 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:16:46 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:16:46 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:16:46 TIME: core/cache.get : 3.13 ms
12.10 18:16:46 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:16:46 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:16:46 TIME: core/user.loginPost : 0.13 ms
12.10 18:16:55 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:16:55 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:16:55 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:16:55 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => , id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:16:55 TIME: vdl/cache.tournament.getAvailableTournament : 3.26 ms
12.10 18:16:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:16:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:16:56 TIME: core/cache.update : 0.19 ms
12.10 18:16:57 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:17:03 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 18:17:03 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:17:03 DB: SELECT name FROM users WHERE id = 33
12.10 18:17:03 TRACE: vdl/cache.tournament.addUsers : Invalid field access : length
12.10 18:17:03 TRACE: vdl/cache.tournament.addUsers : 
Called from modules/VDLCache.hx line 251
Called from modules/VDLCache.hx line 136
Called from modules/VDLCache.hx line 76
Called from snipe/cache/CacheServer.hx line 487
12.10 18:17:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => _requestException, _type => vdl/cache.tournament.addUsers }
12.10 18:17:11 TIMER: Clans cache...
12.10 18:17:11 TIMER: Clans cache: 0ms
12.10 18:17:13 BLOCKREMOVE: tournament 1 removed
12.10 18:18:52 TIMER: Starting timer...
12.10 18:18:52 DB: SELECT * FROM GameVars
12.10 18:18:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:18:52 TIMER: Timer running...
12.10 18:18:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:18:52 DB: SELECT * FROM Shops WHERE ID = 1
12.10 18:18:52 TEMP: load ./tmp/quest_daily_ids
12.10 18:18:52 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 18:18:52 TEMP: save ./tmp/quest_daily_ids
12.10 18:18:52 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 18:18:52 QUEUE: vdl.0 (thread) response server.login
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM LocalizationStrings
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 26.33 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM GameVars
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 0.95 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 2.18 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 0.98 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 3.84 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 3.56 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 18:18:52 TIME: core/quest.getDaily : 0.08 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM UserAttributeTypes
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 2.53 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM UserVariableTypes
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 1.08 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 18:18:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 3.56 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM ItemGroups
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 1.16 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM Bundles ORDER BY ID
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 1.64 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 1.36 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 18:18:52 TIME: core/shop.getList : 0.17 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM EffectAttributeTypes
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 1.5 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM Effects
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 1.27 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 18:18:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 2.06 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 18:18:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 2.08 ms
12.10 18:18:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 18:18:52 DB: SELECT * FROM Badges
12.10 18:18:52 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:18:52 TIME: core/server.query : 2.16 ms
12.10 18:18:52 TIMER: Clans cache...
12.10 18:18:52 TIMER: Clans cache: 0ms
12.10 18:19:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:19:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:19:59 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:19:59 TIME: core/server.query : 2.82 ms
12.10 18:19:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:19:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 18:19:59 TIME: core/user.isOnlineID : 0.09 ms
12.10 18:19:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:19:59 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:19:59 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
12.10 18:19:59 STATS: cache [user], database [68 calls, 0 reads, 0 writes]
12.10 18:19:59 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 18:19:59 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:19:59 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.3 ms]
12.10 18:19:59 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
12.10 18:19:59 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:19:59 TIME: core/cache.get : 4.54 ms
12.10 18:19:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:19:59 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:19:59 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
12.10 18:19:59 STATS: cache [questdata], database [68 calls, 0 reads, 0 writes]
12.10 18:19:59 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 18:19:59 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:19:59 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:19:59 TIME: core/cache.get : 1.67 ms
12.10 18:19:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:19:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:19:59 TIME: core/user.loginPost : 0.09 ms
12.10 18:20:06 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:20:06 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:20:06 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:20:06 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => , id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:20:06 TIME: vdl/cache.tournament.getAvailableTournament : 3.54 ms
12.10 18:20:07 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:20:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:20:07 TIME: core/cache.update : 0.14 ms
12.10 18:20:08 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:20:10 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 18:20:10 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:20:10 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
12.10 18:20:10 STATS: cache [tournament], database [79 calls, 0 reads, 0 writes]
12.10 18:20:10 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
12.10 18:20:10 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:20:10 DB: SELECT name FROM users WHERE id = 33
12.10 18:20:10 TRACE: vdl/cache.tournament.addUsers : Invalid field access : indexOf
12.10 18:20:10 TRACE: vdl/cache.tournament.addUsers : 
Called from snipe/cache/Block.hx line 132
Called from modules/VDLCache.hx line 262
Called from modules/VDLCache.hx line 136
Called from modules/VDLCache.hx line 76
Called from snipe/cache/CacheServer.hx line 487
12.10 18:20:10 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => _requestException, _type => vdl/cache.tournament.addUsers }
12.10 18:20:21 BLOCKREMOVE: tournament 1 removed
12.10 18:21:34 TIMER: Starting timer...
12.10 18:21:34 DB: SELECT * FROM GameVars
12.10 18:21:34 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:21:34 TIMER: Timer running...
12.10 18:21:34 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:21:34 DB: SELECT * FROM Shops WHERE ID = 1
12.10 18:21:34 TEMP: load ./tmp/quest_daily_ids
12.10 18:21:34 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 18:21:34 TEMP: save ./tmp/quest_daily_ids
12.10 18:21:34 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 18:21:34 QUEUE: vdl.0 (thread) response server.login
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM LocalizationStrings
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 36.91 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM GameVars
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 1.46 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 2.13 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 1.97 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 2.21 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 4.35 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 18:21:34 TIME: core/quest.getDaily : 0.76 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM UserAttributeTypes
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 1.95 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM UserVariableTypes
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 11.12 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 18:21:34 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 3.55 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM ItemGroups
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 1.48 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM Bundles ORDER BY ID
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 1.62 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 1.56 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 18:21:34 TIME: core/shop.getList : 0.16 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM EffectAttributeTypes
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 1.79 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM Effects
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 1.21 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 18:21:34 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 2.5 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 18:21:34 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 2.23 ms
12.10 18:21:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 18:21:34 DB: SELECT * FROM Badges
12.10 18:21:34 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:34 TIME: core/server.query : 5.17 ms
12.10 18:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:21:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:21:58 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:21:58 TIME: core/server.query : 3.75 ms
12.10 18:21:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:21:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 18:21:58 TIME: core/user.isOnlineID : 0.11 ms
12.10 18:21:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:21:58 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:21:58 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:21:58 TIME: core/cache.get : 4.84 ms
12.10 18:21:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:21:58 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:21:58 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:21:58 TIME: core/cache.get : 1.54 ms
12.10 18:21:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:21:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:21:58 TIME: core/user.loginPost : 0.12 ms
12.10 18:22:02 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:22:02 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:22:02 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:22:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => , id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:22:02 TIME: vdl/cache.tournament.getAvailableTournament : 3.18 ms
12.10 18:22:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:22:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:22:04 TIME: core/cache.update : 0.23 ms
12.10 18:22:05 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:22:06 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 18:22:06 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:22:06 DB: SELECT name FROM users WHERE id = 33
12.10 18:22:06 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
12.10 18:22:06 TIME: vdl/cache.tournament.addUsers : 3.48 ms
12.10 18:22:12 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', round = E'1', startdate = E'1476144000', params = E'{"params":{"usersList":[{"name":"uid33","id":33}]}}' WHERE ID = 1
12.10 18:22:20 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:22:20 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:22:20 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:22:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => {"params":{"usersList":[{"name":"uid33","id":33}]}}, id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:22:20 TIME: vdl/cache.tournament.getAvailableTournament : 2.57 ms
12.10 18:22:22 BLOCKREMOVE: tournament 1 removed
12.10 18:22:34 TIMER: Clans cache...
12.10 18:22:34 TIMER: Clans cache: 0ms
12.10 18:22:34 TIMER: Clans cache...
12.10 18:22:34 TIMER: Clans cache: 0ms
12.10 18:22:34 TIMER: Clans cache...
12.10 18:22:34 TIMER: Clans cache: 0ms
12.10 18:24:45 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 18:24:45 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 18:24:45 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 18:24:45 TIME: core/server.query : 1.76 ms
12.10 18:24:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 18:24:45 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:24:45 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
12.10 18:24:45 STATS: cache [battle], database [192 calls, 0 reads, 0 writes]
12.10 18:24:45 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 18:24:45 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 18:24:45 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 18:24:45 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 18:24:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 18:24:45 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 18:24:45 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:24:45 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
12.10 18:24:45 STATS: cache [user], database [192 calls, 1 reads, 1 writes]
12.10 18:24:45 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 18:24:45 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 3.1 ms]
12.10 18:24:45 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.21 ms]
12.10 18:24:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 18:24:45 TIME: core/cache.update : 0.59 ms
12.10 18:24:45 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 18:24:45 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:24:45 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
12.10 18:24:45 STATS: cache [questdata], database [192 calls, 1 reads, 0 writes]
12.10 18:24:45 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 18:24:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:24:45 TIME: core/cache.update : 0.41 ms
12.10 18:24:45 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 18:24:45 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 18:24:45 TIME: core/user.logoutPost : 0.16 ms
12.10 18:24:46 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:24:46 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 18:24:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:24:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:24:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid33, networkid => , isbanned => false, id => 33 }}, errorCode => ok, _type => core/server.query }
12.10 18:24:51 TIME: core/server.query : 2.79 ms
12.10 18:24:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:24:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
12.10 18:24:51 TIME: core/user.isOnlineID : 0.11 ms
12.10 18:24:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:24:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid33, deleted => false, email => , networktype =>   , password => uid33, isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476272110, lastLoginDate => 286, lastLoadDate => 1013 }, effects => { list => [] } }}, version => 2, id => 33 } }
12.10 18:24:51 TIME: core/cache.get : 0.39 ms
12.10 18:24:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:24:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 33 } }
12.10 18:24:51 TIME: core/cache.get : 0.2 ms
12.10 18:24:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:24:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:24:51 TIME: core/user.loginPost : 0.12 ms
12.10 18:24:55 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:24:55 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:24:55 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:24:55 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => {"params":{"usersList":[{"name":"uid33","id":33}]}}, id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:24:55 TIME: vdl/cache.tournament.getAvailableTournament : 2.24 ms
12.10 18:24:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:24:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
12.10 18:24:59 TIME: core/cache.update : 0.15 ms
12.10 18:25:00 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:25:06 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 18:25:06 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:25:06 STATS: cache [tournament], segments [3 calls, 1 hits, 1 misses]
12.10 18:25:06 STATS: cache [tournament], database [213 calls, 1 reads, 1 writes]
12.10 18:25:06 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
12.10 18:25:06 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:25:06 DB: SELECT name FROM users WHERE id = 33
12.10 18:25:06 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => userExist, _type => vdl/cache.tournament.addUsers }
12.10 18:25:06 TIME: vdl/cache.tournament.addUsers : 3.92 ms
12.10 18:25:17 BLOCKREMOVE: tournament 1 removed
12.10 18:25:34 TIMER: Clans cache...
12.10 18:25:34 TIMER: Clans cache: 0ms
12.10 18:25:34 TIMER: Clans cache...
12.10 18:25:34 TIMER: Clans cache: 0ms
12.10 18:25:34 TIMER: Clans cache...
12.10 18:25:34 TIMER: Clans cache: 0ms
12.10 18:25:34 TIMER: Clans cache...
12.10 18:25:34 TIMER: Clans cache: 0ms
12.10 18:25:34 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 18:25:34 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 18:25:34 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 18:25:34 TIME: core/server.query : 1.32 ms
12.10 18:25:34 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 18:25:34 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
12.10 18:25:34 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
12.10 18:25:34 STATS: cache [battle], database [420 calls, 1 reads, 0 writes]
12.10 18:25:34 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 18:25:34 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 18:25:34 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 18:25:34 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 18:25:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 18:25:34 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 18:25:34 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:25:34 STATS: cache [user], segments [9 calls, 6 hits, 2 misses]
12.10 18:25:34 STATS: cache [user], database [420 calls, 1 reads, 3 writes]
12.10 18:25:34 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
12.10 18:25:34 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.57 ms]
12.10 18:25:34 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.21 ms]
12.10 18:25:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
12.10 18:25:34 TIME: core/cache.update : 0.56 ms
12.10 18:25:34 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 18:25:34 STATS: cache [questdata], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:25:34 STATS: cache [questdata], segments [7 calls, 4 hits, 2 misses]
12.10 18:25:34 STATS: cache [questdata], database [420 calls, 1 reads, 1 writes]
12.10 18:25:34 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
12.10 18:25:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 18:25:34 TIME: core/cache.update : 0.43 ms
12.10 18:25:34 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 18:25:34 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 18:25:34 TIME: core/user.logoutPost : 0.12 ms
12.10 18:25:34 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:25:34 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 18:28:44 BLOCKREMOVE: user 33 removed
12.10 18:28:44 BLOCKREMOVE: questdata 33 removed
12.10 18:40:40 TIMER: Starting timer...
12.10 18:40:40 TIMER: Timer running...
12.10 18:40:40 DB: SELECT * FROM GameVars
12.10 18:40:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:40:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:40:40 DB: SELECT * FROM Shops WHERE ID = 1
12.10 18:40:40 TEMP: load ./tmp/quest_daily_ids
12.10 18:40:40 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 18:40:40 TEMP: save ./tmp/quest_daily_ids
12.10 18:40:40 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 18:40:40 QUEUE: vdl.0 (thread) response server.login
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM LocalizationStrings
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 27.81 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM GameVars
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 1.42 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 2.13 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 1.18 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 1.65 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 2.54 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 18:40:40 TIME: core/quest.getDaily : 0.04 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM UserAttributeTypes
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 1 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM UserVariableTypes
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 0.94 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 18:40:40 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 2.49 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM ItemGroups
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 1.02 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM Bundles ORDER BY ID
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 1.25 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:40 TIME: core/server.query : 1.45 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 18:40:40 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 18:40:40 TIME: core/shop.getList : 0.04 ms
12.10 18:40:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 18:40:40 DB: SELECT * FROM EffectAttributeTypes
12.10 18:40:41 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:41 TIME: core/server.query : 1.01 ms
12.10 18:40:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 18:40:41 DB: SELECT * FROM Effects
12.10 18:40:41 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:41 TIME: core/server.query : 1 ms
12.10 18:40:41 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 18:40:41 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:40:41 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:41 TIME: core/server.query : 1.93 ms
12.10 18:40:41 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 18:40:41 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:40:41 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:41 TIME: core/server.query : 1.84 ms
12.10 18:40:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 18:40:41 DB: SELECT * FROM Badges
12.10 18:40:41 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:40:41 TIME: core/server.query : 1.39 ms
12.10 18:41:40 TIMER: Clans cache...
12.10 18:41:40 TIMER: Clans cache: 0ms
12.10 18:41:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:41:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:41:53 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:41:53 TIME: core/server.query : 4.03 ms
12.10 18:41:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:41:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 18:41:53 TIME: core/user.isOnlineID : 0.09 ms
12.10 18:41:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:41:53 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:41:53 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
12.10 18:41:53 STATS: cache [user], database [73 calls, 0 reads, 0 writes]
12.10 18:41:53 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 18:41:53 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:41:53 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 5.17 ms]
12.10 18:41:53 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
12.10 18:41:53 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:41:53 TIME: core/cache.get : 5.42 ms
12.10 18:41:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:41:53 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:41:53 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
12.10 18:41:53 STATS: cache [questdata], database [73 calls, 0 reads, 0 writes]
12.10 18:41:53 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 18:41:53 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:41:53 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:41:53 TIME: core/cache.get : 5.84 ms
12.10 18:41:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:41:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:41:53 TIME: core/user.loginPost : 0.13 ms
12.10 18:42:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:42:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:42:01 TIME: core/cache.update : 0.19 ms
12.10 18:42:01 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:42:02 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:42:02 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:42:02 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:42:02 STATS: cache [tournament], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:42:02 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
12.10 18:42:02 STATS: cache [tournament], database [82 calls, 0 reads, 0 writes]
12.10 18:42:02 STATS: cache [tournament], lock [1 calls, 1 attempts, 0 failures]
12.10 18:42:02 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:42:02 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.3 ms]
12.10 18:42:02 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
12.10 18:42:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, userList => [], battleActive => [], startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:42:02 TIME: vdl/cache.tournament.getAvailableTournament : 4.88 ms
12.10 18:43:46 TIMER: Starting timer...
12.10 18:43:46 TIMER: Timer running...
12.10 18:43:46 DB: SELECT * FROM GameVars
12.10 18:43:46 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:43:46 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:43:46 DB: SELECT * FROM Shops WHERE ID = 1
12.10 18:43:46 TEMP: load ./tmp/quest_daily_ids
12.10 18:43:46 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 18:43:46 TEMP: save ./tmp/quest_daily_ids
12.10 18:43:46 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 18:43:46 QUEUE: vdl.0 (thread) response server.login
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM LocalizationStrings
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 29.35 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM GameVars
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 1.44 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 3.66 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 2.11 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 2.17 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 2.9 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 18:43:46 TIME: core/quest.getDaily : 0.06 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM UserAttributeTypes
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 1.03 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM UserVariableTypes
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 1.16 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 18:43:46 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 5.21 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM ItemGroups
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 1.14 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM Bundles ORDER BY ID
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 2.04 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 1.51 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 18:43:46 TIME: core/shop.getList : 0.18 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM EffectAttributeTypes
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 1.16 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM Effects
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 1.25 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 18:43:46 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 2.09 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 18:43:46 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 2.03 ms
12.10 18:43:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 18:43:46 DB: SELECT * FROM Badges
12.10 18:43:46 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:43:46 TIME: core/server.query : 1.31 ms
12.10 18:43:46 TIMER: Clans cache...
12.10 18:43:46 TIMER: Clans cache: 0ms
12.10 18:43:46 TIMER: Clans cache...
12.10 18:43:46 TIMER: Clans cache: 0ms
12.10 18:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:46:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:46:31 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:46:31 TIME: core/server.query : 2.65 ms
12.10 18:46:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:46:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 18:46:31 TIME: core/user.isOnlineID : 0.1 ms
12.10 18:46:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:46:31 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:46:31 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
12.10 18:46:31 STATS: cache [user], database [166 calls, 0 reads, 0 writes]
12.10 18:46:31 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 18:46:31 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:46:31 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.56 ms]
12.10 18:46:31 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
12.10 18:46:31 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:46:31 TIME: core/cache.get : 4.88 ms
12.10 18:46:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:46:31 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:46:31 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
12.10 18:46:31 STATS: cache [questdata], database [166 calls, 0 reads, 0 writes]
12.10 18:46:31 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 18:46:31 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:46:31 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:46:31 TIME: core/cache.get : 2.54 ms
12.10 18:46:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:46:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:46:31 TIME: core/user.loginPost : 0.11 ms
12.10 18:46:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:46:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:46:36 TIME: core/cache.update : 0.17 ms
12.10 18:46:37 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:46:39 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:46:39 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:46:39 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:46:39 STATS: cache [tournament], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:46:39 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
12.10 18:46:39 STATS: cache [tournament], database [174 calls, 0 reads, 0 writes]
12.10 18:46:39 STATS: cache [tournament], lock [1 calls, 1 attempts, 0 failures]
12.10 18:46:39 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:46:39 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.03 ms]
12.10 18:46:39 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
12.10 18:46:39 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:46:39 TIME: vdl/cache.tournament.getAvailableTournament : 4.1 ms
12.10 18:46:46 TIMER: Clans cache...
12.10 18:46:46 TIMER: Clans cache: 0ms
12.10 18:46:48 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 18:46:48 DB: SELECT name FROM users WHERE id = 33
12.10 18:46:48 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => userExist, _type => vdl/cache.tournament.addUsers }
12.10 18:46:48 TIME: vdl/cache.tournament.addUsers : 2.09 ms
12.10 18:48:00 TIMER: Starting timer...
12.10 18:48:00 TIMER: Timer running...
12.10 18:48:00 DB: SELECT * FROM GameVars
12.10 18:48:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:48:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:48:00 DB: SELECT * FROM Shops WHERE ID = 1
12.10 18:48:00 TEMP: load ./tmp/quest_daily_ids
12.10 18:48:00 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 18:48:00 TEMP: save ./tmp/quest_daily_ids
12.10 18:48:00 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 18:48:00 QUEUE: vdl.0 (thread) response server.login
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM LocalizationStrings
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 25.26 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM GameVars
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 1.59 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 2.64 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 1.62 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 9.98 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 2.76 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 18:48:00 TIME: core/quest.getDaily : 0.15 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM UserAttributeTypes
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 1.27 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM UserVariableTypes
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 0.98 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 18:48:00 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 2.31 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM ItemGroups
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 3.02 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM Bundles ORDER BY ID
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 2.03 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 1.53 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 18:48:00 TIME: core/shop.getList : 0.1 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM EffectAttributeTypes
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 1.29 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM Effects
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 1.18 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 18:48:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 1.96 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 18:48:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 2.18 ms
12.10 18:48:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 18:48:00 DB: SELECT * FROM Badges
12.10 18:48:00 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:00 TIME: core/server.query : 1.57 ms
12.10 18:48:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 18:48:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 18:48:58 QUEUE: vdl.0 (thread) response core/server.query
12.10 18:48:58 TIME: core/server.query : 2.81 ms
12.10 18:48:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 18:48:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 18:48:58 TIME: core/user.isOnlineID : 0.07 ms
12.10 18:48:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 18:48:58 READDB: SELECT * FROM Users WHERE ID = 33
12.10 18:48:58 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:48:58 TIME: core/cache.get : 4.51 ms
12.10 18:48:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 18:48:58 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 18:48:58 QUEUE: vdl.0 (thread) response core/cache.get
12.10 18:48:58 TIME: core/cache.get : 1.38 ms
12.10 18:48:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 18:48:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 18:48:58 TIME: core/user.loginPost : 0.13 ms
12.10 18:49:00 TIMER: Clans cache...
12.10 18:49:00 TIMER: Clans cache: 0ms
12.10 18:49:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 18:49:05 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:49:05 STATS: cache [user], segments [3 calls, 0 hits, 2 misses]
12.10 18:49:05 STATS: cache [user], database [66 calls, 1 reads, 0 writes]
12.10 18:49:05 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 18:49:05 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.87 ms]
12.10 18:49:05 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.38 ms]
12.10 18:49:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:49:05 TIME: core/cache.update : 0.64 ms
12.10 18:49:05 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:49:05 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 18:49:05 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 18:49:05 STATS: cache [tournament], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:49:05 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
12.10 18:49:05 STATS: cache [tournament], database [66 calls, 0 reads, 0 writes]
12.10 18:49:05 STATS: cache [tournament], lock [1 calls, 1 attempts, 0 failures]
12.10 18:49:05 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 18:49:05 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.02 ms]
12.10 18:49:05 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
12.10 18:49:05 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid33, id => 33 }], battleActive => null, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 18:49:05 TIME: vdl/cache.tournament.getAvailableTournament : 3.9 ms
12.10 18:49:06 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:50:00 TIMER: Clans cache...
12.10 18:50:00 TIMER: Clans cache: 0ms
12.10 18:50:00 TIMER: Clans cache...
12.10 18:50:00 TIMER: Clans cache: 0ms
12.10 18:50:00 TIMER: Clans cache...
12.10 18:50:00 TIMER: Clans cache: 0ms
12.10 18:50:00 TIMER: Clans cache...
12.10 18:50:00 TIMER: Clans cache: 0ms
12.10 18:50:00 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 18:50:00 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 18:50:00 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 18:50:00 TIME: core/server.query : 2.33 ms
12.10 18:50:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 18:50:00 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 18:50:00 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
12.10 18:50:00 STATS: cache [battle], database [301 calls, 0 reads, 0 writes]
12.10 18:50:00 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 18:50:00 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 18:50:00 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 18:50:00 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 18:50:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 18:50:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 18:50:00 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:50:00 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
12.10 18:50:00 STATS: cache [user], database [301 calls, 1 reads, 1 writes]
12.10 18:50:00 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 18:50:00 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.87 ms]
12.10 18:50:00 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.36 ms]
12.10 18:50:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 18:50:00 TIME: core/cache.update : 0.59 ms
12.10 18:50:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 18:50:00 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 18:50:00 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
12.10 18:50:00 STATS: cache [questdata], database [301 calls, 1 reads, 0 writes]
12.10 18:50:00 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 18:50:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 18:50:00 TIME: core/cache.update : 0.4 ms
12.10 18:50:00 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 18:50:00 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 18:50:00 TIME: core/user.logoutPost : 0.13 ms
12.10 18:53:01 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 18:53:01 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 18:53:11 BLOCKREMOVE: user 33 removed
12.10 18:53:11 BLOCKREMOVE: questdata 33 removed
12.10 18:54:00 TIMER: Clans cache...
12.10 18:54:00 TIMER: Clans cache: 0ms
12.10 18:54:00 TIMER: Clans cache...
12.10 18:54:00 TIMER: Clans cache: 0ms
12.10 18:54:00 TIMER: Clans cache...
12.10 18:54:00 TIMER: Clans cache: 0ms
12.10 18:54:00 TIMER: Clans cache...
12.10 18:54:00 TIMER: Clans cache: 0ms
12.10 18:54:00 TIMER: Clans cache...
12.10 18:54:00 TIMER: Clans cache: 0ms
12.10 18:54:00 TIMER: Clans cache...
12.10 18:54:00 TIMER: Clans cache: 0ms
12.10 18:54:00 TIMER: Clans cache...
12.10 18:54:00 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
12.10 18:54:00 TIMER: Clans cache: 0ms
