19.10 14:05:52 TIMER: Starting timer...
19.10 14:05:52 DB: SELECT * FROM GameVars
19.10 14:05:52 TIMER: Timer running...
19.10 14:05:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:05:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:05:52 DB: SELECT * FROM Shops WHERE ID = 1
19.10 14:05:52 TEMP: load ./tmp/quest_daily_ids
19.10 14:05:52 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
19.10 14:05:52 TEMP: save ./tmp/quest_daily_ids
19.10 14:05:52 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:05:52 QUEUE: vdl.0 (thread) response server.login
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM LocalizationStrings
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 20.07 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM GameVars
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 2.22 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 1.49 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 0.88 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 0.95 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 2.62 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/quest.getDaily
19.10 14:05:52 TIME: core/quest.getDaily : 0.06 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM UserAttributeTypes
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 30.51 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM UserVariableTypes
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 0.77 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:05:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 4.46 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM ItemGroups
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 1.06 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 1.47 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 1.56 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/shop.getList
19.10 14:05:52 TIME: core/shop.getList : 0.07 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM EffectAttributeTypes
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 1.35 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM Effects
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 0.94 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:05:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 1.94 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:05:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 2.92 ms
19.10 14:05:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:05:52 DB: SELECT * FROM Badges
19.10 14:05:52 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:05:52 TIME: core/server.query : 1.99 ms
19.10 14:05:52 TIMER: Clans cache...
19.10 14:05:52 TIMER: Clans cache: 0ms
19.10 14:05:52 TIMER: Check tournament...
19.10 14:05:52 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:06' AND status = 'starting'
19.10 14:05:52 TIMER: Check tournament: 20ms
19.10 14:07:18 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
19.10 14:07:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
19.10 14:07:18 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:07:18 TIME: core/server.query : 2.24 ms
19.10 14:07:18 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
19.10 14:07:18 QUEUE: vdl.0 (thread) response core/user.isOnlineID
19.10 14:07:18 TIME: core/user.isOnlineID : 0.09 ms
19.10 14:07:18 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
19.10 14:07:18 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:07:18 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
19.10 14:07:18 STATS: cache [user], database [86 calls, 0 reads, 0 writes]
19.10 14:07:18 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
19.10 14:07:18 READDB: SELECT * FROM Users WHERE ID = 2
19.10 14:07:18 STATS: cache manager [1], get [1 calls, total 0.07 sec spent, avg 67.04 ms]
19.10 14:07:18 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
19.10 14:07:18 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:07:18 TIME: core/cache.get : 67.29 ms
19.10 14:07:18 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
19.10 14:07:18 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:07:18 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
19.10 14:07:18 STATS: cache [questdata], database [86 calls, 0 reads, 0 writes]
19.10 14:07:18 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
19.10 14:07:18 READDB: SELECT * FROM UserQuests WHERE ID = 2
19.10 14:07:18 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:07:18 TIME: core/cache.get : 1.64 ms
19.10 14:07:18 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:07:18 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:07:18 QUEUE: vdl.0 (thread) response core/user.loginPost { info => null, _type => core/user.loginPost }
19.10 14:07:18 TIME: core/user.loginPost : 1.21 ms
19.10 14:07:27 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
19.10 14:07:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:07:27 TIME: core/cache.update : 0.12 ms
19.10 14:07:28 BLOCKREMOVE: user 1 removed
19.10 14:07:28 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 2
19.10 14:07:52 TIMER: Clans cache...
19.10 14:07:52 TIMER: Clans cache: 0ms
19.10 14:07:52 TIMER: Check tournament...
19.10 14:07:52 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:07' AND status = 'starting'
19.10 14:07:52 TIMER: Check tournament: 1ms
19.10 14:07:52 TIMER: Clans cache...
19.10 14:07:52 TIMER: Clans cache: 0ms
19.10 14:07:52 TIMER: Check tournament...
19.10 14:07:52 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:08' AND status = 'starting'
19.10 14:07:52 TIMER: Check tournament: 1ms
19.10 14:07:52 TIMER: Clans cache...
19.10 14:07:52 TIMER: Clans cache: 0ms
19.10 14:07:52 TIMER: Check tournament...
19.10 14:07:52 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:09' AND status = 'starting'
19.10 14:07:52 TIMER: Check tournament: 0ms
19.10 14:07:52 TIMER: Clans cache...
19.10 14:07:52 TIMER: Clans cache: 0ms
19.10 14:07:52 TIMER: Check tournament...
19.10 14:07:52 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:10' AND status = 'starting'
19.10 14:07:52 TIMER: Check tournament: 1ms
19.10 14:07:52 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
19.10 14:07:52 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
19.10 14:07:52 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:07:52 TIME: core/server.query : 1.81 ms
19.10 14:07:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:07:52 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:07:52 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
19.10 14:07:52 STATS: cache [battle], database [301 calls, 0 reads, 0 writes]
19.10 14:07:52 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
19.10 14:07:52 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:07:52 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:07:52 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:07:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:07:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
19.10 14:07:52 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
19.10 14:07:52 STATS: cache [user], segments [5 calls, 1 hits, 3 misses]
19.10 14:07:52 STATS: cache [user], database [301 calls, 2 reads, 1 writes]
19.10 14:07:52 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
19.10 14:07:52 STATS: cache manager [1], get [2 calls, total 0.07 sec spent, avg 34.29 ms]
19.10 14:07:52 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.14 ms]
19.10 14:07:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:07:52 TIME: core/cache.update : 0.44 ms
19.10 14:07:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
19.10 14:07:52 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
19.10 14:07:52 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
19.10 14:07:52 STATS: cache [questdata], database [301 calls, 1 reads, 0 writes]
19.10 14:07:52 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
19.10 14:07:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:07:52 TIME: core/cache.update : 0.27 ms
19.10 14:07:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
19.10 14:07:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:07:52 TIME: core/user.logoutPost : 0.11 ms
19.10 14:10:53 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 2
19.10 14:10:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
19.10 14:11:03 BLOCKREMOVE: user 2 removed
19.10 14:11:03 BLOCKREMOVE: questdata 2 removed
19.10 14:13:14 TIMER: Starting timer...
19.10 14:13:14 TIMER: Timer running...
19.10 14:13:14 DB: SELECT * FROM GameVars
19.10 14:13:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:13:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:13:14 DB: SELECT * FROM Shops WHERE ID = 1
19.10 14:13:14 TEMP: load ./tmp/quest_daily_ids
19.10 14:13:14 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
19.10 14:13:14 TEMP: save ./tmp/quest_daily_ids
19.10 14:13:14 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:13:14 QUEUE: vdl.0 (thread) response server.login
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM LocalizationStrings
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 13.74 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM GameVars
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.11 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.17 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.22 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.54 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.95 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/quest.getDaily
19.10 14:13:14 TIME: core/quest.getDaily : 0.05 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM UserAttributeTypes
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 0.8 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM UserVariableTypes
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 0.65 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:13:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 2.33 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM ItemGroups
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 0.76 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.24 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.54 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/shop.getList
19.10 14:13:14 TIME: core/shop.getList : 0.04 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM EffectAttributeTypes
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 0.87 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM Effects
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 0.74 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:13:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.87 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:13:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 3.9 ms
19.10 14:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:13:14 DB: SELECT * FROM Badges
19.10 14:13:14 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:13:14 TIME: core/server.query : 1.55 ms
19.10 14:13:14 TIMER: Clans cache...
19.10 14:13:14 TIMER: Clans cache: 0ms
19.10 14:13:14 TIMER: Check tournament...
19.10 14:13:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:14' AND status = 'starting'
19.10 14:13:14 TIMER: Check tournament: 1ms
19.10 14:13:14 TIMER: Clans cache...
19.10 14:13:14 TIMER: Clans cache: 0ms
19.10 14:13:14 TIMER: Check tournament...
19.10 14:13:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:15' AND status = 'starting'
19.10 14:13:14 TIMER: Check tournament: 1ms
19.10 14:13:14 TIMER: Clans cache...
19.10 14:13:14 TIMER: Clans cache: 0ms
19.10 14:13:14 TIMER: Check tournament...
19.10 14:13:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:16' AND status = 'starting'
19.10 14:13:14 TIMER: Check tournament: 1ms
19.10 14:17:02 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
19.10 14:17:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
19.10 14:17:02 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:17:02 TIME: core/server.query : 2.45 ms
19.10 14:17:02 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
19.10 14:17:02 QUEUE: vdl.0 (thread) response core/user.isOnlineID
19.10 14:17:02 TIME: core/user.isOnlineID : 0.09 ms
19.10 14:17:02 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
19.10 14:17:02 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:17:02 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
19.10 14:17:02 STATS: cache [user], database [228 calls, 0 reads, 0 writes]
19.10 14:17:02 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
19.10 14:17:02 READDB: SELECT * FROM Users WHERE ID = 2
19.10 14:17:02 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.9 ms]
19.10 14:17:02 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
19.10 14:17:02 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:17:02 TIME: core/cache.get : 4.15 ms
19.10 14:17:02 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
19.10 14:17:02 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:17:02 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
19.10 14:17:02 STATS: cache [questdata], database [228 calls, 0 reads, 0 writes]
19.10 14:17:02 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
19.10 14:17:02 READDB: SELECT * FROM UserQuests WHERE ID = 2
19.10 14:17:02 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:17:02 TIME: core/cache.get : 2.28 ms
19.10 14:17:02 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:17:02 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:17:02 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:17:02 TIME: core/user.loginPost : 5.24 ms
19.10 14:17:09 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
19.10 14:17:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:17:09 TIME: core/cache.update : 0.13 ms
19.10 14:17:10 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 2
19.10 14:17:12 BLOCKREMOVE: user 1 removed
19.10 14:17:14 TIMER: Clans cache...
19.10 14:17:14 TIMER: Clans cache: 0ms
19.10 14:17:14 TIMER: Check tournament...
19.10 14:17:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:17' AND status = 'starting'
19.10 14:17:14 TIMER: Check tournament: 0ms
19.10 14:17:14 TIMER: Clans cache...
19.10 14:17:14 TIMER: Clans cache: 0ms
19.10 14:17:14 TIMER: Check tournament...
19.10 14:17:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:18' AND status = 'starting'
19.10 14:17:14 TIMER: Check tournament: 0ms
19.10 14:17:14 TIMER: Clans cache...
19.10 14:17:14 TIMER: Clans cache: 0ms
19.10 14:17:14 TIMER: Check tournament...
19.10 14:17:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:19' AND status = 'starting'
19.10 14:17:14 TIMER: Check tournament: 1ms
19.10 14:17:14 TIMER: Clans cache...
19.10 14:17:14 TIMER: Clans cache: 0ms
19.10 14:17:14 TIMER: Check tournament...
19.10 14:17:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:20' AND status = 'starting'
19.10 14:17:14 TIMER: Check tournament: 1ms
19.10 14:17:14 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
19.10 14:17:14 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
19.10 14:17:14 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:17:14 TIME: core/server.query : 1.36 ms
19.10 14:17:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:17:14 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:17:14 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
19.10 14:17:14 STATS: cache [battle], database [421 calls, 0 reads, 0 writes]
19.10 14:17:14 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
19.10 14:17:14 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:17:14 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:17:14 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:17:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:17:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
19.10 14:17:14 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
19.10 14:17:14 STATS: cache [user], segments [5 calls, 1 hits, 3 misses]
19.10 14:17:14 STATS: cache [user], database [421 calls, 2 reads, 1 writes]
19.10 14:17:14 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
19.10 14:17:14 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.98 ms]
19.10 14:17:14 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.13 ms]
19.10 14:17:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:17:14 TIME: core/cache.update : 0.41 ms
19.10 14:17:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
19.10 14:17:14 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
19.10 14:17:14 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
19.10 14:17:14 STATS: cache [questdata], database [421 calls, 1 reads, 0 writes]
19.10 14:17:14 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
19.10 14:17:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:17:14 TIME: core/cache.update : 0.31 ms
19.10 14:17:14 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
19.10 14:17:14 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:17:14 TIME: core/user.logoutPost : 0.11 ms
19.10 14:20:15 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 2
19.10 14:20:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
19.10 14:20:25 BLOCKREMOVE: user 2 removed
19.10 14:20:25 BLOCKREMOVE: questdata 2 removed
19.10 14:21:14 TIMER: Clans cache...
19.10 14:21:14 TIMER: Clans cache: 0ms
19.10 14:21:14 TIMER: Check tournament...
19.10 14:21:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:21' AND status = 'starting'
19.10 14:21:14 TIMER: Check tournament: 0ms
19.10 14:21:14 TIMER: Clans cache...
19.10 14:21:14 TIMER: Clans cache: 0ms
19.10 14:21:14 TIMER: Check tournament...
19.10 14:21:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:22' AND status = 'starting'
19.10 14:21:14 TIMER: Check tournament: 0ms
19.10 14:21:14 TIMER: Clans cache...
19.10 14:21:14 TIMER: Clans cache: 0ms
19.10 14:21:14 TIMER: Check tournament...
19.10 14:21:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:23' AND status = 'starting'
19.10 14:21:14 TIMER: Check tournament: 0ms
19.10 14:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
19.10 14:23:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
19.10 14:23:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
19.10 14:23:31 TIME: core/server.query : 2.5 ms
19.10 14:23:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
19.10 14:23:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:23:31 TIME: core/user.isOnlineID : 0.1 ms
19.10 14:23:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
19.10 14:23:31 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
19.10 14:23:31 STATS: cache [user], segments [7 calls, 3 hits, 3 misses]
19.10 14:23:31 STATS: cache [user], database [617 calls, 2 reads, 2 writes]
19.10 14:23:31 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
19.10 14:23:31 READDB: SELECT * FROM Users WHERE ID = 2
19.10 14:23:31 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.48 ms]
19.10 14:23:31 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.16 ms]
19.10 14:23:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 2 } }
19.10 14:23:31 TIME: core/cache.get : 1.9 ms
19.10 14:23:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
19.10 14:23:31 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
19.10 14:23:31 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
19.10 14:23:31 STATS: cache [questdata], database [617 calls, 1 reads, 1 writes]
19.10 14:23:31 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
19.10 14:23:31 READDB: SELECT * FROM UserQuests WHERE ID = 2
19.10 14:23:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
19.10 14:23:31 TIME: core/cache.get : 1.17 ms
19.10 14:23:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:23:31 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:23:31 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:23:31 TIME: core/user.loginPost : 1.06 ms
19.10 14:23:36 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
19.10 14:23:36 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
19.10 14:23:36 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:23:36 TIME: core/server.query : 1.29 ms
19.10 14:23:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:23:36 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
19.10 14:23:36 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
19.10 14:23:36 STATS: cache [battle], database [623 calls, 1 reads, 0 writes]
19.10 14:23:36 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
19.10 14:23:36 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:23:36 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:23:36 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:23:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:23:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
19.10 14:23:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:23:36 TIME: core/cache.update : 0.16 ms
19.10 14:23:36 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
19.10 14:23:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:23:36 TIME: core/cache.update : 0.13 ms
19.10 14:23:36 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
19.10 14:23:36 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:23:36 TIME: core/user.logoutPost : 0.19 ms
19.10 14:23:37 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 2
19.10 14:23:37 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
19.10 14:23:41 BLOCKREMOVE: user 1 removed
19.10 14:23:47 BLOCKREMOVE: user 2 removed
19.10 14:23:47 BLOCKREMOVE: questdata 2 removed
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:24' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 0ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:25' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 0ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:26' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:27' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:28' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:29' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:30' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 0ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:31' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 0ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:32' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 0ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:33' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:34' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 0ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:35' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:36' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:37' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:38' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 1ms
19.10 14:24:14 TIMER: Clans cache...
19.10 14:24:14 TIMER: Clans cache: 0ms
19.10 14:24:14 TIMER: Check tournament...
19.10 14:24:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:39' AND status = 'starting'
19.10 14:24:14 TIMER: Check tournament: 0ms
19.10 14:39:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
19.10 14:39:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
19.10 14:39:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
19.10 14:39:30 TIME: core/server.query : 5.64 ms
19.10 14:39:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
19.10 14:39:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:39:30 TIME: core/user.isOnlineID : 0.1 ms
19.10 14:39:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
19.10 14:39:30 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
19.10 14:39:30 STATS: cache [user], segments [12 calls, 5 hits, 6 misses]
19.10 14:39:30 STATS: cache [user], database [1577 calls, 4 reads, 3 writes]
19.10 14:39:30 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
19.10 14:39:30 READDB: SELECT * FROM Users WHERE ID = 2
19.10 14:39:30 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.98 ms]
19.10 14:39:30 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.12 ms]
19.10 14:39:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 2 } }
19.10 14:39:30 TIME: core/cache.get : 1.85 ms
19.10 14:39:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
19.10 14:39:30 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
19.10 14:39:30 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
19.10 14:39:30 STATS: cache [questdata], database [1577 calls, 2 reads, 2 writes]
19.10 14:39:30 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
19.10 14:39:30 READDB: SELECT * FROM UserQuests WHERE ID = 2
19.10 14:39:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
19.10 14:39:30 TIME: core/cache.get : 1.08 ms
19.10 14:39:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:39:30 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:39:30 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:39:30 TIME: core/user.loginPost : 1.05 ms
19.10 14:39:38 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
19.10 14:39:38 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
19.10 14:39:38 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:39:38 TIME: core/server.query : 1.47 ms
19.10 14:39:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:39:38 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
19.10 14:39:38 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
19.10 14:39:38 STATS: cache [battle], database [1584 calls, 2 reads, 0 writes]
19.10 14:39:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
19.10 14:39:38 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:39:38 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:39:38 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:39:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:39:38 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
19.10 14:39:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:39:38 TIME: core/cache.update : 0.19 ms
19.10 14:39:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
19.10 14:39:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:39:38 TIME: core/cache.update : 0.16 ms
19.10 14:39:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
19.10 14:39:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:39:38 TIME: core/user.logoutPost : 0.15 ms
19.10 14:39:38 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 2
19.10 14:39:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
19.10 14:39:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
19.10 14:39:41 DB: SELECT * FROM users
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/server.query { list => {{ password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language =>   , id => 44, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 TIME: core/server.query : 4.51 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid64', _type => core/server.query }
19.10 14:39:41 DB: SELECT ID FROM Users WHERE Name = E'uid64'
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 TIME: core/server.query : 2.15 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
19.10 14:39:41 DB: SELECT nextval('Users_id_seq') AS id
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 TIME: core/server.query : 79.38 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/user.register { password => uid64, name => uid64, fullParams => { password => uid64, name => uid64, networkid => , networktype => , messageType => user.register, id => 64 }, networkid => , connectionID => 66994745, networktype => , email => , id => 64, _type => core/user.register }
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/user.register { errorCode => ok, _type => core/user.register }
19.10 14:39:41 TIME: core/user.register : 0.08 ms
19.10 14:39:41 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (64,E'uid64',E'',E'',E'uid64',E'', now())
19.10 14:39:41 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (64, 0)
19.10 14:39:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:39:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 TIME: core/server.query : 1.56 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:39:41 TIME: core/user.isOnlineID : 0.1 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:39:41 READDB: SELECT * FROM Users WHERE ID = 64
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language =>   , networkid => , params => {}}, version => 0, id => 64 } }
19.10 14:39:41 TIME: core/cache.get : 1.57 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:39:41 READDB: SELECT * FROM UserQuests WHERE ID = 64
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => notFound, _type => core/cache.get }
19.10 14:39:41 TIME: core/cache.get : 0.9 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/cache.create { type => questdata, id => 64, _type => core/cache.create }
19.10 14:39:41 READDB: SELECT ID FROM UserQuests WHERE ID = 64
19.10 14:39:41 READDB: INSERT INTO UserQuests (ID) VALUES (64)
19.10 14:39:41 BLOCKREMOVE: user 1 removed
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/cache.create { errorCode => ok, _type => core/cache.create }
19.10 14:39:41 TIME: core/cache.create : 51.29 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:39:41 READDB: SELECT * FROM UserQuests WHERE ID = 64
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 64 } }
19.10 14:39:41 TIME: core/cache.get : 0.87 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:39:41 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:39:41 TIME: core/user.loginPost : 1.44 ms
19.10 14:39:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 64 AND Date = 'today'::timestamp, _type => core/server.query }
19.10 14:39:41 DB: SELECT ID FROM TempUserLogins WHERE UserID = 64 AND Date = 'today'::timestamp
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:39:41 TIME: core/server.query : 1.91 ms
19.10 14:39:41 CACHE: cache block locked: user.64
19.10 14:39:41 READDB: SELECT ID FROM UserQuests WHERE ID = 64
19.10 14:39:41 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid64, name => uid64, _isNotify => true, fullParams => { password => uid64, name => uid64, networkid => , networktype => , messageType => user.register, id => 64 }, networkid => , connectionID => 66994745, networktype => , email => , id => 64, _type => core/user.registerResponse }
19.10 14:39:41 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (64, 'today'::timestamp)
19.10 14:39:46 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:39:48 BLOCKREMOVE: user 2 removed
19.10 14:39:48 BLOCKREMOVE: questdata 2 removed
19.10 14:39:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:39:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:39:49 TIME: core/cache.update : 0.14 ms
19.10 14:39:52 BLOCKREMOVE: user 1 removed
19.10 14:39:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:39:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:39:54 TIME: core/cache.update : 0.14 ms
19.10 14:39:56 BLOCKREMOVE: user 64 removed
19.10 14:39:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:39:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:39:59 TIME: core/cache.update : 0.12 ms
19.10 14:40:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:04 TIME: core/cache.update : 0.19 ms
19.10 14:40:09 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:09 TIME: core/cache.update : 0.11 ms
19.10 14:40:14 TIMER: Clans cache...
19.10 14:40:14 TIMER: Clans cache: 0ms
19.10 14:40:14 TIMER: Check tournament...
19.10 14:40:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:40' AND status = 'starting'
19.10 14:40:14 TIMER: Check tournament: 0ms
19.10 14:40:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:14 TIME: core/cache.update : 0.09 ms
19.10 14:40:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:19 TIME: core/cache.update : 0.13 ms
19.10 14:40:24 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:24 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:24 TIME: core/cache.update : 0.1 ms
19.10 14:40:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:29 TIME: core/cache.update : 0.15 ms
19.10 14:40:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:34 STATS: cache [user], get [9 calls, 1 cache hits, 8 cache misses, 0 same version, 0 not found]
19.10 14:40:34 STATS: cache [user], segments [33 calls, 12 hits, 19 misses]
19.10 14:40:34 STATS: cache [user], database [1640 calls, 8 reads, 5 writes]
19.10 14:40:34 STATS: cache [user], lock [5 calls, 5 attempts, 1 failures]
19.10 14:40:34 STATS: cache manager [1], get [9 calls, total 0.01 sec spent, avg 1.5 ms]
19.10 14:40:34 STATS: cache manager [1], update [18 calls, total 0 sec spent, avg 0.08 ms]
19.10 14:40:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:34 TIME: core/cache.update : 0.5 ms
19.10 14:40:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:39 TIME: core/cache.update : 0.12 ms
19.10 14:40:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:44 TIME: core/cache.update : 0.12 ms
19.10 14:40:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:49 TIME: core/cache.update : 0.12 ms
19.10 14:40:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:54 TIME: core/cache.update : 0.13 ms
19.10 14:40:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:40:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:40:59 TIME: core/cache.update : 0.15 ms
19.10 14:41:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:41:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:41:04 TIME: core/cache.update : 0.11 ms
19.10 14:41:04 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:41:04 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:41:04 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:41:04 TIME: core/server.query : 1.42 ms
19.10 14:41:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:41:04 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
19.10 14:41:04 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
19.10 14:41:05 STATS: cache [battle], database [1671 calls, 3 reads, 0 writes]
19.10 14:41:05 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
19.10 14:41:05 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:41:05 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:41:05 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:41:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:41:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:41:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:41:05 TIME: core/cache.update : 0.1 ms
19.10 14:41:05 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:41:05 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 1 not found]
19.10 14:41:05 STATS: cache [questdata], segments [18 calls, 6 hits, 11 misses]
19.10 14:41:05 STATS: cache [questdata], database [1671 calls, 5 reads, 3 writes]
19.10 14:41:05 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
19.10 14:41:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:41:05 TIME: core/cache.update : 0.28 ms
19.10 14:41:05 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:41:05 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:41:05 TIME: core/user.logoutPost : 0.09 ms
19.10 14:41:05 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 64
19.10 14:41:09 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:41:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
19.10 14:41:09 TIME: core/cache.update : 0.14 ms
19.10 14:41:14 TIMER: Clans cache...
19.10 14:41:14 TIMER: Clans cache: 0ms
19.10 14:41:14 TIMER: Check tournament...
19.10 14:41:14 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:41' AND status = 'starting'
19.10 14:41:14 TIMER: Check tournament: 0ms
19.10 14:41:14 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:41:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:41:14 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:41:14 TIME: core/server.query : 2.05 ms
19.10 14:41:14 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:41:14 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:41:14 TIME: core/user.isOnlineID : 0.1 ms
19.10 14:41:14 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:41:14 READDB: SELECT * FROM Users WHERE ID = 64
19.10 14:41:14 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 64 } }
19.10 14:41:14 TIME: core/cache.get : 1.63 ms
19.10 14:41:14 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:41:14 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 64 } }
19.10 14:41:14 TIME: core/cache.get : 0.22 ms
19.10 14:41:14 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:41:14 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:41:14 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:41:14 TIME: core/user.loginPost : 1.42 ms
19.10 14:41:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:41:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:41:14 TIME: core/cache.update : 0.16 ms
19.10 14:41:41 TIMER: Starting timer...
19.10 14:41:41 DB: SELECT * FROM GameVars
19.10 14:41:41 TIMER: Timer running...
19.10 14:41:41 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:41:41 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:41:41 DB: SELECT * FROM Shops WHERE ID = 1
19.10 14:41:41 TEMP: load ./tmp/quest_daily_ids
19.10 14:41:41 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
19.10 14:41:41 TEMP: save ./tmp/quest_daily_ids
19.10 14:41:41 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:41:41 QUEUE: vdl.0 (thread) response server.login
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM LocalizationStrings
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 31.03 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM GameVars
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.73 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.77 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.07 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.71 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 2.26 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/quest.getDaily
19.10 14:41:41 TIME: core/quest.getDaily : 0.09 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM UserAttributeTypes
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.33 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM UserVariableTypes
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.25 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:41:41 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 3.55 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM ItemGroups
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.51 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.27 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.21 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/shop.getList
19.10 14:41:41 TIME: core/shop.getList : 0.07 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM EffectAttributeTypes
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 0.92 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM Effects
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.01 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:41:41 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 2.92 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:41:41 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.82 ms
19.10 14:41:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:41:41 DB: SELECT * FROM Badges
19.10 14:41:41 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:41:41 TIME: core/server.query : 1.08 ms
19.10 14:42:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:42:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:42:11 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:42:11 TIME: core/server.query : 2.59 ms
19.10 14:42:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:42:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID
19.10 14:42:11 TIME: core/user.isOnlineID : 0.06 ms
19.10 14:42:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:42:11 READDB: SELECT * FROM Users WHERE ID = 64
19.10 14:42:11 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:42:11 TIME: core/cache.get : 3.32 ms
19.10 14:42:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:42:11 READDB: SELECT * FROM UserQuests WHERE ID = 64
19.10 14:42:11 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:42:11 TIME: core/cache.get : 1.29 ms
19.10 14:42:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:42:11 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:42:11 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:42:11 TIME: core/user.loginPost : 1.56 ms
19.10 14:42:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:42:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:42:11 TIME: core/cache.update : 0.15 ms
19.10 14:42:11 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:42:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:42:11 TIME: core/cache.update : 0.14 ms
19.10 14:42:11 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:42:11 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:42:11 TIME: core/user.logoutPost : 0.35 ms
19.10 14:42:17 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:42:17 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 64
19.10 14:42:22 BLOCKREMOVE: user 1 removed
19.10 14:42:27 BLOCKREMOVE: user 64 removed
19.10 14:42:27 BLOCKREMOVE: questdata 64 removed
19.10 14:45:19 TIMER: Starting timer...
19.10 14:45:19 DB: SELECT * FROM GameVars
19.10 14:45:19 TIMER: Timer running...
19.10 14:45:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:45:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:45:19 DB: SELECT * FROM Shops WHERE ID = 1
19.10 14:45:19 TEMP: load ./tmp/quest_daily_ids
19.10 14:45:19 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
19.10 14:45:19 TEMP: save ./tmp/quest_daily_ids
19.10 14:45:19 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:45:19 QUEUE: vdl.0 (thread) response server.login
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM LocalizationStrings
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 21.12 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM GameVars
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 1.03 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 2.06 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 1.53 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 2.53 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 2.67 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/quest.getDaily
19.10 14:45:19 TIME: core/quest.getDaily : 0.07 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM UserAttributeTypes
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 0.96 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM UserVariableTypes
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 1.12 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:45:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 2.52 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM ItemGroups
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 1.08 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 1.85 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 3.18 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/shop.getList
19.10 14:45:19 TIME: core/shop.getList : 1.54 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM EffectAttributeTypes
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 1.15 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM Effects
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 1.67 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:45:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 2.48 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:45:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 1.86 ms
19.10 14:45:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:45:19 DB: SELECT * FROM Badges
19.10 14:45:19 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:45:19 TIME: core/server.query : 2.03 ms
19.10 14:45:19 TIMER: Clans cache...
19.10 14:45:19 TIMER: Clans cache: 0ms
19.10 14:45:19 TIMER: Check tournament...
19.10 14:45:19 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:46' AND status = 'starting'
19.10 14:45:19 TIMER: Check tournament: 1ms
19.10 14:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:46:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:46:48 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:46:48 TIME: core/server.query : 3.31 ms
19.10 14:46:48 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:46:48 QUEUE: vdl.0 (thread) response core/user.isOnlineID
19.10 14:46:48 TIME: core/user.isOnlineID : 0.09 ms
19.10 14:46:48 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:46:48 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:46:48 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
19.10 14:46:48 STATS: cache [user], database [90 calls, 0 reads, 0 writes]
19.10 14:46:48 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
19.10 14:46:48 READDB: SELECT * FROM Users WHERE ID = 64
19.10 14:46:48 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.04 ms]
19.10 14:46:48 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
19.10 14:46:48 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:46:48 TIME: core/cache.get : 4.33 ms
19.10 14:46:48 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:46:48 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:46:48 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
19.10 14:46:48 STATS: cache [questdata], database [90 calls, 0 reads, 0 writes]
19.10 14:46:48 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
19.10 14:46:48 READDB: SELECT * FROM UserQuests WHERE ID = 64
19.10 14:46:48 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:46:48 TIME: core/cache.get : 1.54 ms
19.10 14:46:48 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:46:48 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:46:48 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:46:48 TIME: core/user.loginPost : 4.71 ms
19.10 14:46:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:46:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:46:54 TIME: core/cache.update : 0.12 ms
19.10 14:46:55 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:46:59 BLOCKREMOVE: user 1 removed
19.10 14:48:08 TIMER: Starting timer...
19.10 14:48:08 DB: SELECT * FROM GameVars
19.10 14:48:08 TIMER: Timer running...
19.10 14:48:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:48:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:48:08 DB: SELECT * FROM Shops WHERE ID = 1
19.10 14:48:08 TEMP: load ./tmp/quest_daily_ids
19.10 14:48:08 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
19.10 14:48:08 TEMP: save ./tmp/quest_daily_ids
19.10 14:48:08 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
19.10 14:48:08 QUEUE: vdl.0 (thread) response server.login
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM LocalizationStrings
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 17.32 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM GameVars
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.21 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.62 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.48 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.49 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.78 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/quest.getDaily
19.10 14:48:08 TIME: core/quest.getDaily : 0.07 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM UserAttributeTypes
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 0.75 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM UserVariableTypes
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 0.8 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
19.10 14:48:08 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 2.17 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM ItemGroups
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 0.52 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM Bundles ORDER BY ID
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 0.99 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM BundleItems ORDER BY ID
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.05 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/shop.getList
19.10 14:48:08 TIME: core/shop.getList : 0.1 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM EffectAttributeTypes
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.25 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM Effects
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 0.76 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
19.10 14:48:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.42 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
19.10 14:48:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1.08 ms
19.10 14:48:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
19.10 14:48:08 DB: SELECT * FROM Badges
19.10 14:48:08 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:08 TIME: core/server.query : 1 ms
19.10 14:48:24 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:48:24 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:48:24 QUEUE: vdl.0 (thread) response core/server.query
19.10 14:48:24 TIME: core/server.query : 2.18 ms
19.10 14:48:24 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:48:24 QUEUE: vdl.0 (thread) response core/user.isOnlineID
19.10 14:48:24 TIME: core/user.isOnlineID : 0.07 ms
19.10 14:48:24 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:48:24 READDB: SELECT * FROM Users WHERE ID = 64
19.10 14:48:24 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:48:24 TIME: core/cache.get : 3.75 ms
19.10 14:48:24 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:48:24 READDB: SELECT * FROM UserQuests WHERE ID = 64
19.10 14:48:24 QUEUE: vdl.0 (thread) response core/cache.get
19.10 14:48:24 TIME: core/cache.get : 1.4 ms
19.10 14:48:24 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:48:24 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:48:24 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:48:24 TIME: core/user.loginPost : 2.12 ms
19.10 14:48:33 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:48:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:48:33 TIME: core/cache.update : 0.18 ms
19.10 14:48:34 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:48:35 BLOCKREMOVE: user 1 removed
19.10 14:49:08 TIMER: Clans cache...
19.10 14:49:08 TIMER: Clans cache: 0ms
19.10 14:49:08 TIMER: Check tournament...
19.10 14:49:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:49' AND status = 'starting'
19.10 14:49:08 TIMER: Check tournament: 1ms
19.10 14:49:08 TIMER: Clans cache...
19.10 14:49:08 TIMER: Clans cache: 0ms
19.10 14:49:08 TIMER: Check tournament...
19.10 14:49:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:50' AND status = 'starting'
19.10 14:49:08 TIMER: Check tournament: 1ms
19.10 14:49:08 TIMER: Clans cache...
19.10 14:49:08 TIMER: Clans cache: 0ms
19.10 14:49:08 TIMER: Check tournament...
19.10 14:49:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:51' AND status = 'starting'
19.10 14:49:08 TIMER: Check tournament: 0ms
19.10 14:49:08 TIMER: Clans cache...
19.10 14:49:08 TIMER: Clans cache: 0ms
19.10 14:49:08 TIMER: Check tournament...
19.10 14:49:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:52' AND status = 'starting'
19.10 14:49:08 TIMER: Check tournament: 1ms
19.10 14:49:08 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:49:08 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:49:08 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:49:08 TIME: core/server.query : 1.24 ms
19.10 14:49:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:49:08 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
19.10 14:49:08 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
19.10 14:49:08 STATS: cache [battle], database [241 calls, 0 reads, 0 writes]
19.10 14:49:08 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
19.10 14:49:08 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:49:08 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:49:08 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:49:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:49:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:49:08 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
19.10 14:49:08 STATS: cache [user], segments [5 calls, 1 hits, 3 misses]
19.10 14:49:08 STATS: cache [user], database [241 calls, 2 reads, 1 writes]
19.10 14:49:08 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
19.10 14:49:08 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.46 ms]
19.10 14:49:08 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.13 ms]
19.10 14:49:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:49:08 TIME: core/cache.update : 0.39 ms
19.10 14:49:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:49:08 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
19.10 14:49:08 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
19.10 14:49:08 STATS: cache [questdata], database [241 calls, 1 reads, 0 writes]
19.10 14:49:08 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
19.10 14:49:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:49:08 TIME: core/cache.update : 0.27 ms
19.10 14:49:08 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:49:08 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:49:08 TIME: core/user.logoutPost : 0.08 ms
19.10 14:52:09 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:52:09 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 64
19.10 14:52:19 BLOCKREMOVE: user 64 removed
19.10 14:52:19 BLOCKREMOVE: questdata 64 removed
19.10 14:53:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:53:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:53:05 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:53:05 TIME: core/server.query : 2.08 ms
19.10 14:53:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:53:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:53:05 TIME: core/user.isOnlineID : 0.1 ms
19.10 14:53:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:05 READDB: SELECT * FROM Users WHERE ID = 64
19.10 14:53:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 64 } }
19.10 14:53:05 TIME: core/cache.get : 1.5 ms
19.10 14:53:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:05 READDB: SELECT * FROM UserQuests WHERE ID = 64
19.10 14:53:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 64 } }
19.10 14:53:05 TIME: core/cache.get : 1.37 ms
19.10 14:53:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:53:05 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:53:05 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:53:05 TIME: core/user.loginPost : 1.07 ms
19.10 14:53:08 TIMER: Clans cache...
19.10 14:53:08 TIMER: Clans cache: 0ms
19.10 14:53:08 TIMER: Check tournament...
19.10 14:53:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:53' AND status = 'starting'
19.10 14:53:08 TIMER: Check tournament: 0ms
19.10 14:53:13 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:53:13 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
19.10 14:53:13 STATS: cache [user], segments [10 calls, 3 hits, 6 misses]
19.10 14:53:13 STATS: cache [user], database [306 calls, 4 reads, 2 writes]
19.10 14:53:13 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
19.10 14:53:13 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.83 ms]
19.10 14:53:13 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.18 ms]
19.10 14:53:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:53:13 TIME: core/cache.update : 4.35 ms
19.10 14:53:14 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:53:14 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:53:14 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:53:14 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:53:14 TIME: core/server.query : 1.29 ms
19.10 14:53:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:14 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
19.10 14:53:14 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
19.10 14:53:14 STATS: cache [battle], database [307 calls, 1 reads, 0 writes]
19.10 14:53:14 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
19.10 14:53:14 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:53:14 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:53:14 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:53:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:53:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:53:14 TIME: core/cache.update : 0.1 ms
19.10 14:53:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:14 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
19.10 14:53:14 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
19.10 14:53:14 STATS: cache [questdata], database [307 calls, 2 reads, 1 writes]
19.10 14:53:14 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
19.10 14:53:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:53:14 TIME: core/cache.update : 0.18 ms
19.10 14:53:14 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:53:14 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:53:14 TIME: core/user.logoutPost : 0.08 ms
19.10 14:53:15 BLOCKREMOVE: user 1 removed
19.10 14:53:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 64
19.10 14:53:19 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:53:19 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:53:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:53:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:53:19 TIME: core/server.query : 1.95 ms
19.10 14:53:19 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:53:19 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:53:19 TIME: core/user.isOnlineID : 0.07 ms
19.10 14:53:19 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 2, id => 64 } }
19.10 14:53:19 TIME: core/cache.get : 0.3 ms
19.10 14:53:19 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 64 } }
19.10 14:53:19 TIME: core/cache.get : 0.14 ms
19.10 14:53:19 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:53:19 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:53:19 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:53:19 TIME: core/user.loginPost : 1.42 ms
19.10 14:53:28 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:53:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.10 14:53:28 TIME: core/cache.update : 0.17 ms
19.10 14:53:28 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:53:30 BLOCKREMOVE: user 1 removed
19.10 14:53:46 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:53:46 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:53:46 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:53:46 TIME: core/server.query : 1.58 ms
19.10 14:53:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:46 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:53:46 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:53:46 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:53:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:53:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
19.10 14:53:46 TIME: core/cache.update : 0.15 ms
19.10 14:53:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:53:46 TIME: core/cache.update : 0.15 ms
19.10 14:53:46 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:53:46 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:53:46 TIME: core/user.logoutPost : 0.11 ms
19.10 14:53:47 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:53:47 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 64
19.10 14:53:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:53:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:53:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:53:55 TIME: core/server.query : 1.79 ms
19.10 14:53:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:53:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:53:55 TIME: core/user.isOnlineID : 0.09 ms
19.10 14:53:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 4, id => 64 } }
19.10 14:53:55 TIME: core/cache.get : 0.28 ms
19.10 14:53:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:53:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 64 } }
19.10 14:53:55 TIME: core/cache.get : 0.15 ms
19.10 14:53:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:53:55 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:53:55 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:53:55 TIME: core/user.loginPost : 1.03 ms
19.10 14:53:58 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:53:58 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:53:58 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:53:58 TIME: core/server.query : 0.85 ms
19.10 14:53:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:53:58 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:53:58 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:53:58 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:53:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:53:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
19.10 14:53:58 TIME: core/cache.update : 0.19 ms
19.10 14:53:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:53:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
19.10 14:53:58 TIME: core/cache.update : 0.11 ms
19.10 14:53:58 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:53:58 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:53:58 TIME: core/user.logoutPost : 0.09 ms
19.10 14:53:58 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:53:58 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 64
19.10 14:54:05 BLOCKREMOVE: user 1 removed
19.10 14:54:08 TIMER: Clans cache...
19.10 14:54:08 TIMER: Clans cache: 0ms
19.10 14:54:08 TIMER: Check tournament...
19.10 14:54:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:54' AND status = 'starting'
19.10 14:54:08 TIMER: Check tournament: 0ms
19.10 14:54:08 BLOCKREMOVE: user 64 removed
19.10 14:54:08 BLOCKREMOVE: questdata 64 removed
19.10 14:54:08 TIMER: Clans cache...
19.10 14:54:08 TIMER: Clans cache: 0ms
19.10 14:54:08 TIMER: Check tournament...
19.10 14:54:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:55' AND status = 'starting'
19.10 14:54:08 TIMER: Check tournament: 1ms
19.10 14:54:08 TIMER: Clans cache...
19.10 14:54:08 TIMER: Clans cache: 0ms
19.10 14:54:08 TIMER: Check tournament...
19.10 14:54:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:56' AND status = 'starting'
19.10 14:54:08 TIMER: Check tournament: 0ms
19.10 14:54:08 TIMER: Clans cache...
19.10 14:54:08 TIMER: Clans cache: 0ms
19.10 14:54:08 TIMER: Check tournament...
19.10 14:54:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:57' AND status = 'starting'
19.10 14:54:08 TIMER: Check tournament: 0ms
19.10 14:57:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64', _type => core/server.query }
19.10 14:57:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid64' AND Password = E'uid64'
19.10 14:57:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid64, networkid => , isbanned => false, id => 64 }}, errorCode => ok, _type => core/server.query }
19.10 14:57:42 TIME: core/server.query : 1.19 ms
19.10 14:57:42 NET: vdl.0 (thread) request core/user.isOnlineID { id => 64, _type => core/user.isOnlineID }
19.10 14:57:42 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
19.10 14:57:42 TIME: core/user.isOnlineID : 0.08 ms
19.10 14:57:42 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 64, _type => core/cache.get }
19.10 14:57:42 STATS: cache [user], get [8 calls, 2 cache hits, 6 cache misses, 0 same version, 0 not found]
19.10 14:57:42 STATS: cache [user], segments [24 calls, 15 hits, 8 misses]
19.10 14:57:42 STATS: cache [user], database [574 calls, 6 reads, 7 writes]
19.10 14:57:42 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
19.10 14:57:42 READDB: SELECT * FROM Users WHERE ID = 64
19.10 14:57:42 STATS: cache manager [1], get [9 calls, total 0.01 sec spent, avg 1.01 ms]
19.10 14:57:42 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.1 ms]
19.10 14:57:42 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid64, deleted => false, email => , networktype =>   , password => uid64, isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476877181, lastLoginDate => 293, lastLoadDate => 1020 }, effects => { list => [] } }}, version => 0, id => 64 } }
19.10 14:57:42 TIME: core/cache.get : 2.03 ms
19.10 14:57:42 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 64, _type => core/cache.get }
19.10 14:57:42 STATS: cache [questdata], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
19.10 14:57:42 STATS: cache [questdata], segments [17 calls, 12 hits, 4 misses]
19.10 14:57:42 STATS: cache [questdata], database [574 calls, 2 reads, 4 writes]
19.10 14:57:42 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
19.10 14:57:42 READDB: SELECT * FROM UserQuests WHERE ID = 64
19.10 14:57:42 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 64 } }
19.10 14:57:42 TIME: core/cache.get : 1.28 ms
19.10 14:57:42 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 64, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
19.10 14:57:42 READDB: SELECT * FROM Users WHERE ID = 1
19.10 14:57:42 QUEUE: vdl.0 (thread) response core/user.loginPost { info => { city => null, year => null, email => null }, _type => core/user.loginPost }
19.10 14:57:42 TIME: core/user.loginPost : 0.86 ms
19.10 14:57:48 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 64, _type => core/cache.update }
19.10 14:57:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:57:48 TIME: core/cache.update : 0.16 ms
19.10 14:57:48 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:57:52 BLOCKREMOVE: user 1 removed
19.10 14:58:08 TIMER: Clans cache...
19.10 14:58:08 TIMER: Clans cache: 0ms
19.10 14:58:08 TIMER: Check tournament...
19.10 14:58:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:58' AND status = 'starting'
19.10 14:58:08 TIMER: Check tournament: 1ms
19.10 14:58:08 TIMER: Clans cache...
19.10 14:58:08 TIMER: Clans cache: 0ms
19.10 14:58:08 TIMER: Check tournament...
19.10 14:58:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 14:59' AND status = 'starting'
19.10 14:58:08 TIMER: Check tournament: 0ms
19.10 14:58:08 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
19.10 14:58:08 TIMER: Clans cache...
19.10 14:58:08 TIMER: Clans cache: 0ms
19.10 14:58:08 TIMER: Check tournament...
19.10 14:58:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 15:00' AND status = 'starting'
19.10 14:58:08 TIMER: Check tournament: 1ms
19.10 14:58:08 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true, _type => core/server.query }
19.10 14:58:08 DB: SELECT id FROM battle WHERE firstid=64 OR secondid=64 AND finished <> true
19.10 14:58:08 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
19.10 14:58:08 TIME: core/server.query : 0.59 ms
19.10 14:58:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
19.10 14:58:08 STATS: cache [battle], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 4 not found]
19.10 14:58:08 STATS: cache [battle], segments [5 calls, 0 hits, 4 misses]
19.10 14:58:08 STATS: cache [battle], database [780 calls, 4 reads, 0 writes]
19.10 14:58:08 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
19.10 14:58:08 READDB: SELECT * FROM Battle WHERE ID = 0
19.10 14:58:08 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
19.10 14:58:08 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 119
Called from modules/VDLCache.hx line 80
Called from snipe/cache/CacheServer.hx line 487
19.10 14:58:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
19.10 14:58:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 64, _type => core/cache.update }
19.10 14:58:08 STATS: cache [user], get [10 calls, 2 cache hits, 8 cache misses, 0 same version, 0 not found]
19.10 14:58:08 STATS: cache [user], segments [28 calls, 16 hits, 11 misses]
19.10 14:58:08 STATS: cache [user], database [780 calls, 8 reads, 8 writes]
19.10 14:58:08 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
19.10 14:58:08 STATS: cache manager [1], get [10 calls, total 0.01 sec spent, avg 1.03 ms]
19.10 14:58:08 STATS: cache manager [1], update [13 calls, total 0 sec spent, avg 0.11 ms]
19.10 14:58:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
19.10 14:58:08 TIME: core/cache.update : 0.41 ms
19.10 14:58:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 64, _type => core/cache.update }
19.10 14:58:08 STATS: cache [questdata], get [5 calls, 2 cache hits, 3 cache misses, 0 same version, 0 not found]
19.10 14:58:08 STATS: cache [questdata], segments [19 calls, 12 hits, 6 misses]
19.10 14:58:08 STATS: cache [questdata], database [780 calls, 3 reads, 4 writes]
19.10 14:58:08 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
19.10 14:58:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
19.10 14:58:08 TIME: core/cache.update : 0.28 ms
19.10 14:58:08 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 64, _type => core/user.logoutPost }
19.10 14:58:08 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
19.10 14:58:08 TIME: core/user.logoutPost : 0.08 ms
19.10 14:58:08 TIMER: Clans cache...
19.10 14:58:08 TIMER: Clans cache: 0ms
19.10 14:58:08 TIMER: Check tournament...
19.10 14:58:08 DB: SELECT * FROM tournament WHERE startdate = '2016-19-10 15:01' AND status = 'starting'
19.10 14:58:08 TIMER: Check tournament: 0ms
19.10 14:58:08 WRITEDB: UPDATE Users SET name = E'uid64', deleted = E'false', email = E'', networktype = E'  ', password = E'uid64', isbanned = E'false', regdate = E'2016-10-19 14:39:41.700061+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}' WHERE ID = 64
19.10 14:58:08 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 64
