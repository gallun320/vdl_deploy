04.11 00:00:21 TIMER: Starting timer...
04.11 00:00:21 TIMER: Timer running...
04.11 00:00:21 DB: SELECT * FROM GameVars
04.11 00:00:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:00:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:00:21 DB: SELECT * FROM Shops WHERE ID = 1
04.11 00:00:21 TEMP: load ./tmp/quest_daily_ids
04.11 00:00:21 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 00:00:21 TEMP: save ./tmp/quest_daily_ids
04.11 00:00:21 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 00:00:21 QUEUE: vdl.0 (thread) response server.login
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM LocalizationStrings
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 6.79 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM GameVars
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.56 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.89 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.62 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.57 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.8 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 00:00:21 TIME: core/quest.getDaily : 0.03 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM UserAttributeTypes
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.54 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM UserVariableTypes
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.39 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 00:00:21 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.97 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM ItemGroups
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.3 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM Bundles ORDER BY ID
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.52 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.45 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 00:00:21 TIME: core/shop.getList : 0.02 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM EffectAttributeTypes
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.55 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM Effects
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.44 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 00:00:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.62 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 00:00:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.62 ms
04.11 00:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 00:00:21 DB: SELECT * FROM Badges
04.11 00:00:21 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:00:21 TIME: core/server.query : 0.32 ms
04.11 00:00:21 TIMER: Clans cache...
04.11 00:00:21 TIMER: Clans cache: 0ms
04.11 00:00:21 TIMER: Check tournament...
04.11 00:00:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:01' OR rounddate = '2016-04-11 00:01' AND status <> 'finished'
04.11 00:00:21 DB: SELECT * FROM battle WHERE endtime >= '1478206.88115104' AND avaliable = true AND finished <> true
04.11 00:00:21 TIMER: Check tournament: 2ms
04.11 00:00:21 TIMER: Clans cache...
04.11 00:00:21 TIMER: Clans cache: 0ms
04.11 00:00:21 TIMER: Check tournament...
04.11 00:00:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:02' OR rounddate = '2016-04-11 00:02' AND status <> 'finished'
04.11 00:00:21 DB: SELECT * FROM battle WHERE endtime >= '1478206.94116291' AND avaliable = true AND finished <> true
04.11 00:00:21 TIMER: Check tournament: 4ms
04.11 00:03:20 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:03:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:03:20 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:03:20 TIME: core/server.query : 1.61 ms
04.11 00:03:20 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:03:20 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 00:03:20 TIME: core/user.isOnlineID : 0.06 ms
04.11 00:03:20 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:03:20 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:03:20 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 00:03:20 STATS: cache [user], database [180 calls, 0 reads, 0 writes]
04.11 00:03:20 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 00:03:20 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:03:20 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.36 ms]
04.11 00:03:20 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 00:03:20 QUEUE: vdl.0 (thread) response core/cache.get
04.11 00:03:20 TIME: core/cache.get : 2.44 ms
04.11 00:03:20 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:03:20 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:03:20 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 00:03:20 STATS: cache [questdata], database [180 calls, 0 reads, 0 writes]
04.11 00:03:20 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 00:03:20 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:03:20 QUEUE: vdl.0 (thread) response core/cache.get
04.11 00:03:20 TIME: core/cache.get : 0.76 ms
04.11 00:03:20 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:03:20 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:03:20 TIME: core/user.loginPost : 0.05 ms
04.11 00:03:20 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 107 AND Date = 'today'::timestamp, _type => core/server.query }
04.11 00:03:20 DB: SELECT ID FROM TempUserLogins WHERE UserID = 107 AND Date = 'today'::timestamp
04.11 00:03:20 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 00:03:20 TIME: core/server.query : 0.73 ms
04.11 00:03:20 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (107, 'today'::timestamp)
04.11 00:03:21 TIMER: Clans cache...
04.11 00:03:21 TIMER: Clans cache: 0ms
04.11 00:03:21 TIMER: Check tournament...
04.11 00:03:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:03' OR rounddate = '2016-04-11 00:03' AND status <> 'finished'
04.11 00:03:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.00117293' AND avaliable = true AND finished <> true
04.11 00:03:21 TIMER: Check tournament: 0ms
04.11 00:03:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 309, lastLoadDate => 1105 } }}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:03:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:03:26 TIME: core/cache.update : 0.1 ms
04.11 00:03:27 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:03:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:03:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:03:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:03:44 TIME: core/server.query : 0.78 ms
04.11 00:03:44 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:03:44 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:03:44 TIME: core/user.isOnlineID : 0.08 ms
04.11 00:03:44 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:03:44 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:03:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:03:44 TIME: core/cache.get : 0.9 ms
04.11 00:03:44 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:03:44 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:03:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:03:44 TIME: core/cache.get : 0.52 ms
04.11 00:03:44 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:03:44 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:03:44 TIME: core/user.loginPost : 0.12 ms
04.11 00:03:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 116 AND Date = 'today'::timestamp, _type => core/server.query }
04.11 00:03:44 DB: SELECT ID FROM TempUserLogins WHERE UserID = 116 AND Date = 'today'::timestamp
04.11 00:03:44 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
04.11 00:03:44 TIME: core/server.query : 0.63 ms
04.11 00:03:44 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (116, 'today'::timestamp)
04.11 00:03:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 309, lastLoadDate => 1105 } }}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:03:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:03:51 TIME: core/cache.update : 0.11 ms
04.11 00:03:52 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:04:07 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:04:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:04:07 TIME: vdl/cache.battle.findRandom : 0.15 ms
04.11 00:04:21 TIMER: Clans cache...
04.11 00:04:21 TIMER: Clans cache: 0ms
04.11 00:04:21 TIMER: Check tournament...
04.11 00:04:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:04' OR rounddate = '2016-04-11 00:04' AND status <> 'finished'
04.11 00:04:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.06118265' AND avaliable = true AND finished <> true
04.11 00:04:21 TIMER: Check tournament: 1ms
04.11 00:04:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:04:44 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:04:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }, { id => 21 }, { id => 23 }}, errorCode => ok, _type => core/server.query }
04.11 00:04:44 TIME: core/server.query : 1.02 ms
04.11 00:04:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 23, _type => vdl/cache.battle.infoRoom }
04.11 00:04:44 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:04:44 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 00:04:44 STATS: cache [battle], database [264 calls, 0 reads, 0 writes]
04.11 00:04:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:04:44 READDB: SELECT * FROM Battle WHERE ID = 23
04.11 00:04:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:04:44 TIME: vdl/cache.battle.infoRoom : 1.12 ms
04.11 00:04:44 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 23, _type => vdl/cache.battle.finishRoom }
04.11 00:04:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:04:44 TIME: vdl/cache.battle.finishRoom : 0.08 ms
04.11 00:04:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:04:44 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 00:04:44 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
04.11 00:04:44 STATS: cache [user], database [264 calls, 2 reads, 2 writes]
04.11 00:04:44 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 00:04:44 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.07 ms]
04.11 00:04:44 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.08 ms]
04.11 00:04:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:04:44 TIME: core/cache.update : 0.25 ms
04.11 00:04:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:04:44 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 00:04:44 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
04.11 00:04:44 STATS: cache [questdata], database [264 calls, 2 reads, 0 writes]
04.11 00:04:44 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 00:04:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:04:44 TIME: core/cache.update : 0.19 ms
04.11 00:04:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:04:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:04:44 TIME: core/user.logoutPost : 0.06 ms
04.11 00:04:45 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:04:45 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:04:47 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:04:47 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:04:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 17 }, { id => 18 }, { id => 19 }, { id => 20 }, { id => 22 }, { id => 23 }}, errorCode => ok, _type => core/server.query }
04.11 00:04:47 TIME: core/server.query : 0.93 ms
04.11 00:04:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 23, _type => vdl/cache.battle.infoRoom }
04.11 00:04:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:04:47 TIME: vdl/cache.battle.infoRoom : 0.09 ms
04.11 00:04:47 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 23, _type => vdl/cache.battle.finishRoom }
04.11 00:04:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:04:47 TIME: vdl/cache.battle.finishRoom : 0.08 ms
04.11 00:04:47 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
04.11 00:04:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:04:47 TIME: core/user.sendTo : 0.07 ms
04.11 00:04:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:04:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:04:47 TIME: core/cache.update : 0.09 ms
04.11 00:04:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:04:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:04:47 TIME: core/cache.update : 0.08 ms
04.11 00:04:47 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:04:47 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:04:47 TIME: core/user.logoutPost : 0.07 ms
04.11 00:04:48 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:04:48 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 00:04:50 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 23
04.11 00:04:55 BLOCKREMOVE: user 107 removed
04.11 00:04:55 BLOCKREMOVE: questdata 107 removed
04.11 00:04:58 BLOCKREMOVE: user 116 removed
04.11 00:04:58 BLOCKREMOVE: questdata 116 removed
04.11 00:05:00 BLOCKREMOVE: battle 23 removed
04.11 00:05:03 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:05:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:05:03 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:05:03 TIME: core/server.query : 1.55 ms
04.11 00:05:03 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:05:03 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:05:03 TIME: core/user.isOnlineID : 0.05 ms
04.11 00:05:03 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:05:03 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:05:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:05:03 TIME: core/cache.get : 0.88 ms
04.11 00:05:03 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:05:03 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:05:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:05:03 TIME: core/cache.get : 0.65 ms
04.11 00:05:03 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:05:03 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:05:03 TIME: core/user.loginPost : 0.06 ms
04.11 00:05:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:05:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:05:11 TIME: core/cache.update : 0.11 ms
04.11 00:05:11 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:05:18 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:05:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:05:18 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:05:18 TIME: core/server.query : 1.87 ms
04.11 00:05:18 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:05:18 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:05:18 TIME: core/user.isOnlineID : 0.09 ms
04.11 00:05:18 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:05:18 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:05:18 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:05:18 TIME: core/cache.get : 1.01 ms
04.11 00:05:18 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:05:18 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:05:18 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:05:18 TIME: core/cache.get : 0.6 ms
04.11 00:05:18 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:05:18 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:05:18 TIME: core/user.loginPost : 0.07 ms
04.11 00:05:21 TIMER: Clans cache...
04.11 00:05:21 TIMER: Clans cache: 0ms
04.11 00:05:21 TIMER: Check tournament...
04.11 00:05:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:05' OR rounddate = '2016-04-11 00:05' AND status <> 'finished'
04.11 00:05:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.12119431' AND avaliable = true AND finished <> true
04.11 00:05:21 TIMER: Check tournament: 1ms
04.11 00:05:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:05:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:05:26 TIME: core/cache.update : 0.19 ms
04.11 00:05:26 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:05:30 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:05:30 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:05:30 READDB: SELECT ID FROM Battle WHERE ID = 24
04.11 00:05:30 READDB: INSERT INTO Battle (ID) VALUES (24)
04.11 00:05:30 READDB: SELECT * FROM Battle WHERE ID = 24
04.11 00:05:30 DB: SELECT name FROM users WHERE id=116
04.11 00:05:30 DB: SELECT name FROM users WHERE id=107
04.11 00:05:30 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 24, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:05:30 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 24, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:05:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:05:30 TIME: vdl/cache.battle.findRandom : 111.09 ms
04.11 00:05:36 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481807.13042875', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 24
04.11 00:05:46 BLOCKREMOVE: battle 24 removed
04.11 00:06:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:06:19 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:06:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }, { id => 21 }, { id => 23 }, { id => 24 }}, errorCode => ok, _type => core/server.query }
04.11 00:06:19 TIME: core/server.query : 0.94 ms
04.11 00:06:19 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 24, _type => vdl/cache.battle.infoRoom }
04.11 00:06:19 STATS: cache [battle], get [6 calls, 3 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 00:06:19 STATS: cache [battle], segments [10 calls, 7 hits, 2 misses]
04.11 00:06:19 STATS: cache [battle], database [358 calls, 2 reads, 2 writes]
04.11 00:06:19 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:06:19 READDB: SELECT * FROM Battle WHERE ID = 24
04.11 00:06:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:06:19 TIME: vdl/cache.battle.infoRoom : 0.98 ms
04.11 00:06:19 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 24, _type => vdl/cache.battle.finishRoom }
04.11 00:06:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:06:19 TIME: vdl/cache.battle.finishRoom : 0.12 ms
04.11 00:06:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:06:19 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:06:19 STATS: cache [user], segments [17 calls, 8 hits, 8 misses]
04.11 00:06:19 STATS: cache [user], database [358 calls, 4 reads, 6 writes]
04.11 00:06:19 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
04.11 00:06:19 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 0.87 ms]
04.11 00:06:19 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.09 ms]
04.11 00:06:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:06:19 TIME: core/cache.update : 0.4 ms
04.11 00:06:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:06:19 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:06:19 STATS: cache [questdata], segments [13 calls, 4 hits, 8 misses]
04.11 00:06:19 STATS: cache [questdata], database [358 calls, 4 reads, 2 writes]
04.11 00:06:19 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
04.11 00:06:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:06:19 TIME: core/cache.update : 0.25 ms
04.11 00:06:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:06:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:06:19 TIME: core/user.logoutPost : 0.1 ms
04.11 00:06:19 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:06:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:06:21 TIMER: Clans cache...
04.11 00:06:21 TIMER: Clans cache: 0ms
04.11 00:06:21 TIMER: Check tournament...
04.11 00:06:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:06' OR rounddate = '2016-04-11 00:06' AND status <> 'finished'
04.11 00:06:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.18120416' AND avaliable = true AND finished <> true
04.11 00:06:21 TIMER: Check tournament: 1ms
04.11 00:06:24 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481810', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 24
04.11 00:06:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:06:26 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:06:26 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 17 }, { id => 18 }, { id => 19 }, { id => 20 }, { id => 22 }, { id => 24 }}, errorCode => ok, _type => core/server.query }
04.11 00:06:26 TIME: core/server.query : 0.56 ms
04.11 00:06:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 24, _type => vdl/cache.battle.infoRoom }
04.11 00:06:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:06:26 TIME: vdl/cache.battle.infoRoom : 0.05 ms
04.11 00:06:26 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 24, _type => vdl/cache.battle.finishRoom }
04.11 00:06:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:06:26 TIME: vdl/cache.battle.finishRoom : 0.07 ms
04.11 00:06:26 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
04.11 00:06:26 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:06:26 TIME: core/user.sendTo : 0.06 ms
04.11 00:06:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:06:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:06:26 TIME: core/cache.update : 0.08 ms
04.11 00:06:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:06:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:06:26 TIME: core/cache.update : 0.08 ms
04.11 00:06:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:06:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:06:26 TIME: core/user.logoutPost : 0.06 ms
04.11 00:06:27 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:06:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 00:06:29 BLOCKREMOVE: user 107 removed
04.11 00:06:29 BLOCKREMOVE: questdata 107 removed
04.11 00:06:29 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481810', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 24
04.11 00:06:33 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:06:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:06:33 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:06:33 TIME: core/server.query : 2.64 ms
04.11 00:06:33 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:06:33 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:06:33 TIME: core/user.isOnlineID : 0.1 ms
04.11 00:06:33 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:06:33 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:06:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:06:33 TIME: core/cache.get : 1.6 ms
04.11 00:06:33 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:06:33 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:06:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:06:33 TIME: core/cache.get : 1.14 ms
04.11 00:06:33 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:06:33 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:06:33 TIME: core/user.loginPost : 0.04 ms
04.11 00:06:37 BLOCKREMOVE: user 116 removed
04.11 00:06:37 BLOCKREMOVE: questdata 116 removed
04.11 00:06:39 BLOCKREMOVE: battle 24 removed
04.11 00:06:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:06:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:06:41 TIME: core/cache.update : 0.08 ms
04.11 00:06:41 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:06:54 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:06:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:06:54 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:06:54 TIME: core/server.query : 0.68 ms
04.11 00:06:54 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:06:54 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:06:54 TIME: core/user.isOnlineID : 0.08 ms
04.11 00:06:54 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:06:54 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:06:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:06:54 TIME: core/cache.get : 0.74 ms
04.11 00:06:54 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:06:54 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:06:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:06:54 TIME: core/cache.get : 0.44 ms
04.11 00:06:54 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:06:54 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:06:54 TIME: core/user.loginPost : 0.04 ms
04.11 00:07:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:07:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:07:01 TIME: core/cache.update : 0.07 ms
04.11 00:07:01 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:07:08 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:07:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:07:08 TIME: vdl/cache.battle.findRandom : 0.1 ms
04.11 00:07:16 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:07:16 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:07:16 READDB: SELECT ID FROM Battle WHERE ID = 25
04.11 00:07:16 READDB: INSERT INTO Battle (ID) VALUES (25)
04.11 00:07:16 READDB: SELECT * FROM Battle WHERE ID = 25
04.11 00:07:16 DB: SELECT name FROM users WHERE id=107
04.11 00:07:16 DB: SELECT name FROM users WHERE id=116
04.11 00:07:16 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 25, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:07:16 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 25, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:07:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:07:16 TIME: vdl/cache.battle.findRandom : 20.93 ms
04.11 00:07:21 TIMER: Clans cache...
04.11 00:07:21 TIMER: Clans cache: 0ms
04.11 00:07:21 TIMER: Check tournament...
04.11 00:07:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:07' OR rounddate = '2016-04-11 00:07' AND status <> 'finished'
04.11 00:07:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.24121527' AND avaliable = true AND finished <> true
04.11 00:07:21 TIMER: Check tournament: 0ms
04.11 00:07:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481807.23674639', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 25
04.11 00:07:23 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 25, _type => vdl/cache.battle.infoRoom }
04.11 00:07:23 STATS: cache [battle], get [11 calls, 6 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:07:23 STATS: cache [battle], segments [19 calls, 14 hits, 4 misses]
04.11 00:07:23 STATS: cache [battle], database [422 calls, 4 reads, 5 writes]
04.11 00:07:23 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:07:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:07:23 TIME: vdl/cache.battle.infoRoom : 0.22 ms
04.11 00:07:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 25, _type => vdl/cache.battle.infoRoom }
04.11 00:07:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:07:33 TIME: vdl/cache.battle.infoRoom : 0.06 ms
04.11 00:07:33 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 25 }
04.11 00:07:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 00:07:33 TIME: vdl/cache.battle.setScores : 0.06 ms
04.11 00:07:43 BLOCKREMOVE: battle 25 removed
04.11 00:08:21 TIMER: Clans cache...
04.11 00:08:21 TIMER: Clans cache: 0ms
04.11 00:08:21 TIMER: Check tournament...
04.11 00:08:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:08' OR rounddate = '2016-04-11 00:08' AND status <> 'finished'
04.11 00:08:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.30122416' AND avaliable = true AND finished <> true
04.11 00:08:21 TIMER: Check tournament: 0ms
04.11 00:08:21 TIMER: Clans cache...
04.11 00:08:21 TIMER: Clans cache: 0ms
04.11 00:08:21 TIMER: Check tournament...
04.11 00:08:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:09' OR rounddate = '2016-04-11 00:09' AND status <> 'finished'
04.11 00:08:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.36123534' AND avaliable = true AND finished <> true
04.11 00:08:21 TIMER: Check tournament: 1ms
04.11 00:08:21 TIMER: Clans cache...
04.11 00:08:21 TIMER: Clans cache: 0ms
04.11 00:08:21 TIMER: Check tournament...
04.11 00:08:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:10' OR rounddate = '2016-04-11 00:10' AND status <> 'finished'
04.11 00:08:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.42124441' AND avaliable = true AND finished <> true
04.11 00:08:21 TIMER: Check tournament: 1ms
04.11 00:08:21 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:08:21 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:08:21 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 17 }, { id => 18 }, { id => 19 }, { id => 20 }, { id => 22 }, { id => 24 }, { id => 25 }}, errorCode => ok, _type => core/server.query }
04.11 00:08:21 TIME: core/server.query : 2.29 ms
04.11 00:08:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 25, _type => vdl/cache.battle.infoRoom }
04.11 00:08:21 STATS: cache [battle], get [13 calls, 8 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:08:21 STATS: cache [battle], segments [21 calls, 16 hits, 4 misses]
04.11 00:08:21 STATS: cache [battle], database [660 calls, 4 reads, 5 writes]
04.11 00:08:21 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:08:21 READDB: SELECT * FROM Battle WHERE ID = 25
04.11 00:08:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:08:21 TIME: vdl/cache.battle.infoRoom : 1.76 ms
04.11 00:08:21 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 25, _type => vdl/cache.battle.finishRoom }
04.11 00:08:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:08:21 TIME: vdl/cache.battle.finishRoom : 0.15 ms
04.11 00:08:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:08:21 STATS: cache [user], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:08:21 STATS: cache [user], segments [27 calls, 14 hits, 12 misses]
04.11 00:08:21 STATS: cache [user], database [660 calls, 6 reads, 10 writes]
04.11 00:08:21 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
04.11 00:08:21 STATS: cache manager [1], get [12 calls, total 0.01 sec spent, avg 0.84 ms]
04.11 00:08:21 STATS: cache manager [1], update [15 calls, total 0 sec spent, avg 0.09 ms]
04.11 00:08:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:08:21 TIME: core/cache.update : 0.46 ms
04.11 00:08:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:08:21 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:08:21 STATS: cache [questdata], segments [21 calls, 8 hits, 12 misses]
04.11 00:08:21 STATS: cache [questdata], database [660 calls, 6 reads, 4 writes]
04.11 00:08:21 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
04.11 00:08:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:08:21 TIME: core/cache.update : 0.36 ms
04.11 00:08:21 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:08:21 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:08:21 TIME: core/user.logoutPost : 0.1 ms
04.11 00:08:21 TIMER: Clans cache...
04.11 00:08:21 TIMER: Clans cache: 0ms
04.11 00:08:21 TIMER: Check tournament...
04.11 00:08:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:11' OR rounddate = '2016-04-11 00:11' AND status <> 'finished'
04.11 00:08:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.48125411' AND avaliable = true AND finished <> true
04.11 00:08:21 TIMER: Check tournament: 1ms
04.11 00:08:21 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:08:21 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 00:11:26 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 25
04.11 00:11:31 BLOCKREMOVE: user 116 removed
04.11 00:11:31 BLOCKREMOVE: questdata 116 removed
04.11 00:11:36 BLOCKREMOVE: battle 25 removed
04.11 00:12:21 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:12:21 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:12:21 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }, { id => 21 }, { id => 23 }}, errorCode => ok, _type => core/server.query }
04.11 00:12:21 TIME: core/server.query : 0.93 ms
04.11 00:12:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 23, _type => vdl/cache.battle.infoRoom }
04.11 00:12:21 READDB: SELECT * FROM Battle WHERE ID = 23
04.11 00:12:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:12:21 TIME: vdl/cache.battle.infoRoom : 0.65 ms
04.11 00:12:21 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 23, _type => vdl/cache.battle.finishRoom }
04.11 00:12:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:12:21 TIME: vdl/cache.battle.finishRoom : 0.05 ms
04.11 00:12:21 NET: vdl.0 (thread) request core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.end } }
04.11 00:12:21 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:12:21 TIME: core/user.sendTo : 0.04 ms
04.11 00:12:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:12:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:12:21 TIME: core/cache.update : 0.06 ms
04.11 00:12:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:12:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:12:21 TIME: core/cache.update : 0.06 ms
04.11 00:12:21 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:12:21 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:12:21 TIME: core/user.logoutPost : 0.07 ms
04.11 00:12:21 TIMER: Clans cache...
04.11 00:12:21 TIMER: Clans cache: 0ms
04.11 00:12:21 TIMER: Check tournament...
04.11 00:12:21 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:12' OR rounddate = '2016-04-11 00:12' AND status <> 'finished'
04.11 00:12:21 DB: SELECT * FROM battle WHERE endtime >= '1478207.54126418' AND avaliable = true AND finished <> true
04.11 00:12:21 TIMER: Check tournament: 1ms
04.11 00:12:21 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:12:21 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:12:26 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 23
04.11 00:12:31 BLOCKREMOVE: user 107 removed
04.11 00:12:31 BLOCKREMOVE: questdata 107 removed
04.11 00:12:36 BLOCKREMOVE: battle 23 removed
04.11 00:14:21 TIMER: Starting timer...
04.11 00:14:21 TIMER: Timer running...
04.11 00:14:21 DB: SELECT * FROM GameVars
04.11 00:14:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:14:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:14:21 DB: SELECT * FROM Shops WHERE ID = 1
04.11 00:14:21 TEMP: load ./tmp/quest_daily_ids
04.11 00:14:21 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 00:14:21 TEMP: save ./tmp/quest_daily_ids
04.11 00:14:22 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 00:14:22 QUEUE: vdl.0 (thread) response server.login
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM LocalizationStrings
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 6.59 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM GameVars
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.54 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.59 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.37 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.45 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.89 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 00:14:22 TIME: core/quest.getDaily : 0.02 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM UserAttributeTypes
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.31 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM UserVariableTypes
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.43 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 00:14:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.92 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM ItemGroups
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.32 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM Bundles ORDER BY ID
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.46 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.38 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 00:14:22 TIME: core/shop.getList : 0.03 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM EffectAttributeTypes
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.34 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM Effects
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.47 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 00:14:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.6 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 00:14:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.67 ms
04.11 00:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 00:14:22 DB: SELECT * FROM Badges
04.11 00:14:22 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:14:22 TIME: core/server.query : 0.3 ms
04.11 00:14:22 TIMER: Clans cache...
04.11 00:14:22 TIMER: Clans cache: 0ms
04.11 00:14:22 TIMER: Check tournament...
04.11 00:14:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:15' OR rounddate = '2016-04-11 00:15' AND status <> 'finished'
04.11 00:14:22 DB: SELECT * FROM battle WHERE endtime >= '1478207.72210415' AND avaliable = true AND finished <> true
04.11 00:14:22 TIMER: Check tournament: 2ms
04.11 00:14:22 TIMER: Clans cache...
04.11 00:14:22 TIMER: Clans cache: 0ms
04.11 00:14:22 TIMER: Check tournament...
04.11 00:14:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:16' OR rounddate = '2016-04-11 00:16' AND status <> 'finished'
04.11 00:14:22 DB: SELECT * FROM battle WHERE endtime >= '1478207.78211328' AND avaliable = true AND finished <> true
04.11 00:14:22 TIMER: Check tournament: 1ms
04.11 00:16:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:16:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:16:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:16:45 TIME: core/server.query : 2.17 ms
04.11 00:16:45 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:16:45 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 00:16:45 TIME: core/user.isOnlineID : 0.04 ms
04.11 00:16:45 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:16:45 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:16:45 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 00:16:45 STATS: cache [user], database [144 calls, 0 reads, 0 writes]
04.11 00:16:45 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 00:16:45 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:16:45 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.15 ms]
04.11 00:16:45 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 00:16:45 QUEUE: vdl.0 (thread) response core/cache.get
04.11 00:16:45 TIME: core/cache.get : 2.25 ms
04.11 00:16:45 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:16:45 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:16:45 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 00:16:45 STATS: cache [questdata], database [144 calls, 0 reads, 0 writes]
04.11 00:16:45 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 00:16:45 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:16:45 QUEUE: vdl.0 (thread) response core/cache.get
04.11 00:16:45 TIME: core/cache.get : 0.66 ms
04.11 00:16:45 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:16:45 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:16:45 TIME: core/user.loginPost : 0.08 ms
04.11 00:16:46 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:16:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:16:46 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:16:46 TIME: core/server.query : 2.34 ms
04.11 00:16:46 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:16:46 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:16:46 TIME: core/user.isOnlineID : 0.05 ms
04.11 00:16:46 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:16:46 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:16:46 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:16:46 TIME: core/cache.get : 1.02 ms
04.11 00:16:46 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:16:46 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:16:46 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:16:46 TIME: core/cache.get : 1.11 ms
04.11 00:16:46 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:16:46 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:16:46 TIME: core/user.loginPost : 0.12 ms
04.11 00:16:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:16:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:16:52 TIME: core/cache.update : 0.07 ms
04.11 00:16:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:16:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:16:52 TIME: core/cache.update : 0.05 ms
04.11 00:16:53 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:16:53 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:17:01 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:17:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:17:01 TIME: vdl/cache.battle.findRandom : 0.09 ms
04.11 00:17:09 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:17:09 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:17:09 READDB: SELECT ID FROM Battle WHERE ID = 26
04.11 00:17:09 READDB: INSERT INTO Battle (ID) VALUES (26)
04.11 00:17:09 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:17:09 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 00:17:09 STATS: cache [battle], database [168 calls, 0 reads, 0 writes]
04.11 00:17:09 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:17:09 READDB: SELECT * FROM Battle WHERE ID = 26
04.11 00:17:09 DB: SELECT name FROM users WHERE id=107
04.11 00:17:09 DB: SELECT name FROM users WHERE id=116
04.11 00:17:09 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 26, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:17:09 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 26, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:17:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:17:09 TIME: vdl/cache.battle.findRandom : 33.5 ms
04.11 00:17:15 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481807.82997448', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 26
04.11 00:17:22 TIMER: Clans cache...
04.11 00:17:22 TIMER: Clans cache: 0ms
04.11 00:17:22 TIMER: Check tournament...
04.11 00:17:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:17' OR rounddate = '2016-04-11 00:17' AND status <> 'finished'
04.11 00:17:22 DB: SELECT * FROM battle WHERE endtime >= '1478207.84212412' AND avaliable = true AND finished <> true
04.11 00:17:22 TIMER: Check tournament: 1ms
04.11 00:17:25 BLOCKREMOVE: battle 26 removed
04.11 00:17:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 26, _type => vdl/cache.battle.infoRoom }
04.11 00:17:31 READDB: SELECT * FROM Battle WHERE ID = 26
04.11 00:17:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:17:31 TIME: vdl/cache.battle.infoRoom : 1.21 ms
04.11 00:17:41 BLOCKREMOVE: battle 26 removed
04.11 00:18:22 TIMER: Clans cache...
04.11 00:18:22 TIMER: Clans cache: 0ms
04.11 00:18:22 TIMER: Check tournament...
04.11 00:18:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:18' OR rounddate = '2016-04-11 00:18' AND status <> 'finished'
04.11 00:18:22 DB: SELECT * FROM battle WHERE endtime >= '1478207.9021345' AND avaliable = true AND finished <> true
04.11 00:18:22 TIMER: Check tournament: 1ms
04.11 00:18:22 TIMER: Clans cache...
04.11 00:18:22 TIMER: Clans cache: 0ms
04.11 00:18:22 TIMER: Check tournament...
04.11 00:18:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:19' OR rounddate = '2016-04-11 00:19' AND status <> 'finished'
04.11 00:18:22 DB: SELECT * FROM battle WHERE endtime >= '1478207.96214617' AND avaliable = true AND finished <> true
04.11 00:18:22 TIMER: Check tournament: 1ms
04.11 00:19:32 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:19:32 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:19:32 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }, { id => 21 }}, errorCode => ok, _type => core/server.query }
04.11 00:19:32 TIME: core/server.query : 0.98 ms
04.11 00:19:32 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 21, _type => vdl/cache.battle.infoRoom }
04.11 00:19:32 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 00:19:32 STATS: cache [battle], segments [5 calls, 2 hits, 2 misses]
04.11 00:19:32 STATS: cache [battle], database [311 calls, 2 reads, 1 writes]
04.11 00:19:32 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:19:32 READDB: SELECT * FROM Battle WHERE ID = 21
04.11 00:19:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:19:32 TIME: vdl/cache.battle.infoRoom : 1.17 ms
04.11 00:19:32 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 21, _type => vdl/cache.battle.finishRoom }
04.11 00:19:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:19:32 TIME: vdl/cache.battle.finishRoom : 0.12 ms
04.11 00:19:32 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:19:32 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 00:19:32 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
04.11 00:19:32 STATS: cache [user], database [311 calls, 2 reads, 2 writes]
04.11 00:19:32 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 00:19:32 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.14 ms]
04.11 00:19:32 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.09 ms]
04.11 00:19:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:19:32 TIME: core/cache.update : 0.41 ms
04.11 00:19:32 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:19:32 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 00:19:32 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
04.11 00:19:32 STATS: cache [questdata], database [311 calls, 2 reads, 0 writes]
04.11 00:19:32 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 00:19:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:19:32 TIME: core/cache.update : 0.3 ms
04.11 00:19:32 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:19:32 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:19:32 TIME: core/user.logoutPost : 0.1 ms
04.11 00:19:33 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:19:33 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:19:38 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 21
04.11 00:19:39 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:19:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:19:39 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:19:39 TIME: core/server.query : 0.91 ms
04.11 00:19:39 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:19:39 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:19:39 TIME: core/user.isOnlineID : 0.06 ms
04.11 00:19:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:19:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 2, id => 107 } }
04.11 00:19:39 TIME: core/cache.get : 0.18 ms
04.11 00:19:39 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:19:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 107 } }
04.11 00:19:39 TIME: core/cache.get : 0.1 ms
04.11 00:19:39 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:19:39 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:19:39 TIME: core/user.loginPost : 0.06 ms
04.11 00:19:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:19:42 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:19:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 26 }, { id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 17 }, { id => 18 }, { id => 19 }, { id => 20 }, { id => 22 }, { id => 24 }}, errorCode => ok, _type => core/server.query }
04.11 00:19:42 TIME: core/server.query : 0.68 ms
04.11 00:19:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 24, _type => vdl/cache.battle.infoRoom }
04.11 00:19:42 READDB: SELECT * FROM Battle WHERE ID = 24
04.11 00:19:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:19:42 TIME: vdl/cache.battle.infoRoom : 0.57 ms
04.11 00:19:42 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 24, _type => vdl/cache.battle.finishRoom }
04.11 00:19:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:19:42 TIME: vdl/cache.battle.finishRoom : 0.05 ms
04.11 00:19:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:19:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:19:42 TIME: core/cache.update : 0.05 ms
04.11 00:19:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:19:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:19:42 TIME: core/cache.update : 0.05 ms
04.11 00:19:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:19:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:19:42 TIME: core/user.logoutPost : 0.04 ms
04.11 00:19:43 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:19:43 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 00:19:47 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:19:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
04.11 00:19:47 TIME: core/cache.update : 0.09 ms
04.11 00:19:47 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:19:48 BLOCKREMOVE: battle 21 removed
04.11 00:19:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481810', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 24
04.11 00:19:53 BLOCKREMOVE: user 116 removed
04.11 00:19:53 BLOCKREMOVE: questdata 116 removed
04.11 00:19:58 BLOCKREMOVE: battle 24 removed
04.11 00:20:02 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:20:02 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:20:02 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }, { id => 18 }}, errorCode => ok, _type => core/server.query }
04.11 00:20:02 TIME: core/server.query : 1.1 ms
04.11 00:20:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
04.11 00:20:02 READDB: SELECT * FROM Battle WHERE ID = 18
04.11 00:20:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:20:02 TIME: vdl/cache.battle.infoRoom : 0.58 ms
04.11 00:20:02 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 18, _type => vdl/cache.battle.finishRoom }
04.11 00:20:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:20:02 TIME: vdl/cache.battle.finishRoom : 0.08 ms
04.11 00:20:02 NET: vdl.0 (thread) request core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:20:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:20:02 TIME: core/user.sendTo : 0.04 ms
04.11 00:20:02 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:20:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
04.11 00:20:02 TIME: core/cache.update : 0.08 ms
04.11 00:20:02 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:20:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:20:02 TIME: core/cache.update : 0.08 ms
04.11 00:20:02 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:20:02 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:20:02 TIME: core/user.logoutPost : 0.06 ms
04.11 00:20:02 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:20:02 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:20:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481800', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 18
04.11 00:20:07 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:20:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:20:07 TIME: core/server.query : 0.85 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:20:07 TIME: core/user.isOnlineID : 0.05 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 4, id => 107 } }
04.11 00:20:07 TIME: core/cache.get : 0.2 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 107 } }
04.11 00:20:07 TIME: core/cache.get : 0.11 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:20:07 TIME: core/user.loginPost : 0.07 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:20:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:20:07 TIME: core/server.query : 0.6 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:20:07 TIME: core/user.isOnlineID : 0.06 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:20:07 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:20:07 TIME: core/cache.get : 0.74 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:20:07 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:20:07 TIME: core/cache.get : 0.52 ms
04.11 00:20:07 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:20:07 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:20:07 TIME: core/user.loginPost : 0.06 ms
04.11 00:20:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:20:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
04.11 00:20:17 TIME: core/cache.update : 0.07 ms
04.11 00:20:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:20:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:20:17 TIME: core/cache.update : 0.07 ms
04.11 00:20:17 BLOCKREMOVE: battle 18 removed
04.11 00:20:17 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:20:17 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:20:22 TIMER: Clans cache...
04.11 00:20:22 TIMER: Clans cache: 0ms
04.11 00:20:22 TIMER: Check tournament...
04.11 00:20:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:20' OR rounddate = '2016-04-11 00:20' AND status <> 'finished'
04.11 00:20:22 DB: SELECT * FROM battle WHERE endtime >= '1478208.02215638' AND avaliable = true AND finished <> true
04.11 00:20:22 TIMER: Check tournament: 0ms
04.11 00:20:26 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:20:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:20:26 TIME: vdl/cache.battle.findRandom : 0.13 ms
04.11 00:20:31 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:20:31 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:20:31 READDB: SELECT ID FROM Battle WHERE ID = 27
04.11 00:20:31 READDB: INSERT INTO Battle (ID) VALUES (27)
04.11 00:20:31 READDB: SELECT * FROM Battle WHERE ID = 27
04.11 00:20:31 DB: SELECT name FROM users WHERE id=107
04.11 00:20:31 DB: SELECT name FROM users WHERE id=116
04.11 00:20:31 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 27, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:20:31 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 27, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:20:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:20:31 TIME: vdl/cache.battle.findRandom : 34.82 ms
04.11 00:20:36 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481808.03107201', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 27
04.11 00:20:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 27, _type => vdl/cache.battle.infoRoom }
04.11 00:20:39 STATS: cache [battle], get [10 calls, 3 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:20:39 STATS: cache [battle], segments [17 calls, 10 hits, 6 misses]
04.11 00:20:39 STATS: cache [battle], database [377 calls, 6 reads, 5 writes]
04.11 00:20:39 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:20:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:20:39 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 00:20:49 BLOCKREMOVE: battle 27 removed
04.11 00:21:22 TIMER: Clans cache...
04.11 00:21:22 TIMER: Clans cache: 0ms
04.11 00:21:22 TIMER: Check tournament...
04.11 00:21:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:21' OR rounddate = '2016-04-11 00:21' AND status <> 'finished'
04.11 00:21:22 DB: SELECT * FROM battle WHERE endtime >= '1478208.08216677' AND avaliable = true AND finished <> true
04.11 00:21:22 TIMER: Check tournament: 0ms
04.11 00:21:22 TIMER: Clans cache...
04.11 00:21:22 TIMER: Clans cache: 0ms
04.11 00:21:22 TIMER: Check tournament...
04.11 00:21:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:22' OR rounddate = '2016-04-11 00:22' AND status <> 'finished'
04.11 00:21:22 DB: SELECT * FROM battle WHERE endtime >= '1478208.14217669' AND avaliable = true AND finished <> true
04.11 00:21:22 TIMER: Check tournament: 1ms
04.11 00:21:22 TIMER: Clans cache...
04.11 00:21:22 TIMER: Clans cache: 0ms
04.11 00:21:22 TIMER: Check tournament...
04.11 00:21:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:23' OR rounddate = '2016-04-11 00:23' AND status <> 'finished'
04.11 00:21:22 DB: SELECT * FROM battle WHERE endtime >= '1478208.20218908' AND avaliable = true AND finished <> true
04.11 00:21:22 TIMER: Check tournament: 1ms
04.11 00:21:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:21:22 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:21:22 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }, { id => 17 }}, errorCode => ok, _type => core/server.query }
04.11 00:21:22 TIME: core/server.query : 0.69 ms
04.11 00:21:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
04.11 00:21:22 STATS: cache [battle], get [11 calls, 4 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:21:22 STATS: cache [battle], segments [18 calls, 11 hits, 6 misses]
04.11 00:21:22 STATS: cache [battle], database [600 calls, 6 reads, 5 writes]
04.11 00:21:22 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:21:22 READDB: SELECT * FROM Battle WHERE ID = 17
04.11 00:21:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:21:22 TIME: vdl/cache.battle.infoRoom : 0.83 ms
04.11 00:21:22 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 17, _type => vdl/cache.battle.finishRoom }
04.11 00:21:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:21:22 TIME: vdl/cache.battle.finishRoom : 0.07 ms
04.11 00:21:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:21:22 STATS: cache [user], get [5 calls, 2 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 00:21:22 STATS: cache [user], segments [22 calls, 15 hits, 6 misses]
04.11 00:21:22 STATS: cache [user], database [600 calls, 3 reads, 8 writes]
04.11 00:21:22 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
04.11 00:21:22 STATS: cache manager [1], get [10 calls, total 0.01 sec spent, avg 0.57 ms]
04.11 00:21:22 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.06 ms]
04.11 00:21:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
04.11 00:21:22 TIME: core/cache.update : 0.17 ms
04.11 00:21:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:21:22 STATS: cache [questdata], get [5 calls, 2 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 00:21:22 STATS: cache [questdata], segments [17 calls, 10 hits, 6 misses]
04.11 00:21:22 STATS: cache [questdata], database [600 calls, 3 reads, 3 writes]
04.11 00:21:22 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
04.11 00:21:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
04.11 00:21:22 TIME: core/cache.update : 0.14 ms
04.11 00:21:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:21:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:21:22 TIME: core/user.logoutPost : 0.05 ms
04.11 00:21:22 TIMER: Clans cache...
04.11 00:21:22 TIMER: Clans cache: 0ms
04.11 00:21:22 TIMER: Check tournament...
04.11 00:21:22 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:24' OR rounddate = '2016-04-11 00:24' AND status <> 'finished'
04.11 00:21:22 DB: SELECT * FROM battle WHERE endtime >= '1478208.26219978' AND avaliable = true AND finished <> true
04.11 00:21:22 TIMER: Check tournament: 1ms
04.11 00:21:22 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:21:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:24:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 17
04.11 00:24:32 BLOCKREMOVE: user 107 removed
04.11 00:24:32 BLOCKREMOVE: questdata 107 removed
04.11 00:24:49 TIMER: Starting timer...
04.11 00:24:49 TIMER: Timer running...
04.11 00:24:49 DB: SELECT * FROM GameVars
04.11 00:24:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:24:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:24:49 DB: SELECT * FROM Shops WHERE ID = 1
04.11 00:24:49 TEMP: load ./tmp/quest_daily_ids
04.11 00:24:49 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 00:24:49 TEMP: save ./tmp/quest_daily_ids
04.11 00:24:49 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 00:24:49 QUEUE: vdl.0 (thread) response server.login
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM LocalizationStrings
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 5.66 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM GameVars
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.48 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.55 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.37 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.72 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.79 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 00:24:49 TIME: core/quest.getDaily : 0.02 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM UserAttributeTypes
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.33 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM UserVariableTypes
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.35 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 00:24:49 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 1.04 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM ItemGroups
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.28 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM Bundles ORDER BY ID
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.43 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.39 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 00:24:49 TIME: core/shop.getList : 0.02 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM EffectAttributeTypes
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.31 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM Effects
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.44 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 00:24:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 1.04 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 00:24:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.62 ms
04.11 00:24:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 00:24:49 DB: SELECT * FROM Badges
04.11 00:24:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:24:49 TIME: core/server.query : 0.58 ms
04.11 00:24:49 TIMER: Clans cache...
04.11 00:24:49 TIMER: Clans cache: 0ms
04.11 00:24:49 TIMER: Check tournament...
04.11 00:24:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:25' OR rounddate = '2016-04-11 00:25' AND status <> 'finished'
04.11 00:24:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.34972718' AND avaliable = true AND finished <> true
04.11 00:24:49 TIMER: Check tournament: 3ms
04.11 00:26:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:26:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:26:31 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:26:31 TIME: core/server.query : 1.1 ms
04.11 00:26:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:26:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 00:26:31 TIME: core/user.isOnlineID : 0.04 ms
04.11 00:26:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:26:31 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:26:31 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 00:26:31 STATS: cache [user], database [102 calls, 0 reads, 0 writes]
04.11 00:26:31 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 00:26:31 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:26:31 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 1.75 ms]
04.11 00:26:31 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 00:26:31 QUEUE: vdl.0 (thread) response core/cache.get
04.11 00:26:31 TIME: core/cache.get : 1.84 ms
04.11 00:26:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:26:31 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:26:31 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 00:26:31 STATS: cache [questdata], database [102 calls, 0 reads, 0 writes]
04.11 00:26:31 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 00:26:31 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:26:31 QUEUE: vdl.0 (thread) response core/cache.get
04.11 00:26:31 TIME: core/cache.get : 0.78 ms
04.11 00:26:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:26:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:26:31 TIME: core/user.loginPost : 0.05 ms
04.11 00:26:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:26:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:26:39 TIME: core/cache.update : 0.07 ms
04.11 00:26:40 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:26:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:26:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:26:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:26:43 TIME: core/server.query : 1.28 ms
04.11 00:26:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:26:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:26:43 TIME: core/user.isOnlineID : 0.04 ms
04.11 00:26:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:26:43 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:26:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:26:43 TIME: core/cache.get : 0.86 ms
04.11 00:26:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:26:43 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:26:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:26:43 TIME: core/cache.get : 0.46 ms
04.11 00:26:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:26:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:26:43 TIME: core/user.loginPost : 0.05 ms
04.11 00:26:43 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:26:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:26:43 TIME: vdl/cache.battle.findRandom : 0.08 ms
04.11 00:26:49 TIMER: Clans cache...
04.11 00:26:49 TIMER: Clans cache: 0ms
04.11 00:26:49 TIMER: Check tournament...
04.11 00:26:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:26' OR rounddate = '2016-04-11 00:26' AND status <> 'finished'
04.11 00:26:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.40973884' AND avaliable = true AND finished <> true
04.11 00:26:49 TIMER: Check tournament: 0ms
04.11 00:26:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:26:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:26:49 TIME: core/cache.update : 0.07 ms
04.11 00:26:50 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:26:56 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:26:56 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:26:56 READDB: SELECT ID FROM Battle WHERE ID = 28
04.11 00:26:56 READDB: INSERT INTO Battle (ID) VALUES (28)
04.11 00:26:56 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:26:56 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 00:26:56 STATS: cache [battle], database [128 calls, 0 reads, 0 writes]
04.11 00:26:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:26:56 READDB: SELECT * FROM Battle WHERE ID = 28
04.11 00:26:56 DB: SELECT name FROM users WHERE id=107
04.11 00:26:56 DB: SELECT name FROM users WHERE id=116
04.11 00:26:56 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 28, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:26:56 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 28, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:26:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:26:56 TIME: vdl/cache.battle.findRandom : 42.33 ms
04.11 00:27:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481808.41695', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 28
04.11 00:27:06 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:27:06 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:27:06 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 19 }, { id => 20 }, { id => 22 }}, errorCode => ok, _type => core/server.query }
04.11 00:27:06 TIME: core/server.query : 0.67 ms
04.11 00:27:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 22, _type => vdl/cache.battle.infoRoom }
04.11 00:27:06 READDB: SELECT * FROM Battle WHERE ID = 22
04.11 00:27:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:27:06 TIME: vdl/cache.battle.infoRoom : 0.69 ms
04.11 00:27:06 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 22, _type => vdl/cache.battle.deleteRoom }
04.11 00:27:06 ROOM: deleted room 22
04.11 00:27:06 DB: DELETE FROM Battle WHERE ID = 22
04.11 00:27:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:27:06 TIME: vdl/cache.battle.deleteRoom : 15.75 ms
04.11 00:27:06 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 22, _type => vdl/cache.battle.finishRoom }
04.11 00:27:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:27:06 TIME: vdl/cache.battle.finishRoom : 0.09 ms
04.11 00:27:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:27:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:27:06 TIME: core/cache.update : 0.08 ms
04.11 00:27:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:27:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:27:06 TIME: core/cache.update : 0.08 ms
04.11 00:27:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:27:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:27:06 TIME: core/user.logoutPost : 0.05 ms
04.11 00:27:06 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:27:06 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 00:27:10 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:27:10 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:27:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }}, errorCode => ok, _type => core/server.query }
04.11 00:27:10 TIME: core/server.query : 1.2 ms
04.11 00:27:10 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
04.11 00:27:10 READDB: SELECT * FROM Battle WHERE ID = 15
04.11 00:27:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:27:10 TIME: vdl/cache.battle.infoRoom : 0.73 ms
04.11 00:27:10 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 15, _type => vdl/cache.battle.deleteRoom }
04.11 00:27:10 ROOM: deleted room 15
04.11 00:27:10 DB: DELETE FROM Battle WHERE ID = 15
04.11 00:27:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:27:10 TIME: vdl/cache.battle.deleteRoom : 20.9 ms
04.11 00:27:10 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
04.11 00:27:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:27:10 TIME: vdl/cache.battle.finishRoom : 0.06 ms
04.11 00:27:10 NET: vdl.0 (thread) request core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:27:10 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:27:10 TIME: core/user.sendTo : 0.04 ms
04.11 00:27:10 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:27:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:27:10 TIME: core/cache.update : 0.05 ms
04.11 00:27:10 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:27:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:27:10 TIME: core/cache.update : 0.07 ms
04.11 00:27:10 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:27:10 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:27:10 TIME: core/user.logoutPost : 0.07 ms
04.11 00:27:10 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:27:10 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:27:11 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481810', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 22
04.11 00:27:12 BLOCKREMOVE: battle 28 removed
04.11 00:27:15 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481800', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 15
04.11 00:27:16 BLOCKREMOVE: user 116 removed
04.11 00:27:16 BLOCKREMOVE: questdata 116 removed
04.11 00:27:20 BLOCKREMOVE: user 107 removed
04.11 00:27:20 BLOCKREMOVE: questdata 107 removed
04.11 00:27:21 BLOCKREMOVE: battle 22 removed
04.11 00:27:25 BLOCKREMOVE: battle 15 removed
04.11 00:27:28 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:27:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:27:28 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:27:28 TIME: core/server.query : 1.34 ms
04.11 00:27:28 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:27:28 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:27:28 TIME: core/user.isOnlineID : 0.04 ms
04.11 00:27:28 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:27:28 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:27:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:27:28 TIME: core/cache.get : 0.8 ms
04.11 00:27:28 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:27:28 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:27:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:27:28 TIME: core/cache.get : 0.61 ms
04.11 00:27:28 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:27:28 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:27:28 TIME: core/user.loginPost : 0.06 ms
04.11 00:27:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:27:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:27:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:27:31 TIME: core/server.query : 0.64 ms
04.11 00:27:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:27:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:27:31 TIME: core/user.isOnlineID : 0.04 ms
04.11 00:27:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:27:31 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 00:27:31 STATS: cache [user], segments [13 calls, 6 hits, 6 misses]
04.11 00:27:31 STATS: cache [user], database [162 calls, 3 reads, 4 writes]
04.11 00:27:31 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
04.11 00:27:31 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:27:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:27:31 TIME: core/cache.get : 0.74 ms
04.11 00:27:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:27:31 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:27:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:27:31 TIME: core/cache.get : 0.35 ms
04.11 00:27:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:27:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:27:31 TIME: core/user.loginPost : 0.07 ms
04.11 00:27:33 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:27:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:27:33 TIME: vdl/cache.battle.findRandom : 0.14 ms
04.11 00:27:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:27:34 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 0.71 ms]
04.11 00:27:34 STATS: cache manager [1], update [7 calls, total 0 sec spent, avg 0.02 ms]
04.11 00:27:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:27:34 TIME: core/cache.update : 0.11 ms
04.11 00:27:34 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:27:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:27:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:27:39 TIME: core/cache.update : 0.11 ms
04.11 00:27:39 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:27:43 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:27:43 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:27:43 READDB: SELECT ID FROM Battle WHERE ID = 29
04.11 00:27:43 READDB: INSERT INTO Battle (ID) VALUES (29)
04.11 00:27:43 READDB: SELECT * FROM Battle WHERE ID = 29
04.11 00:27:43 DB: SELECT name FROM users WHERE id=116
04.11 00:27:43 DB: SELECT name FROM users WHERE id=107
04.11 00:27:43 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 29, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:27:43 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 29, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:27:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:27:43 TIME: vdl/cache.battle.findRandom : 20.45 ms
04.11 00:27:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481808.46351462', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 29
04.11 00:27:49 TIMER: Clans cache...
04.11 00:27:49 TIMER: Clans cache: 0ms
04.11 00:27:49 TIMER: Check tournament...
04.11 00:27:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:27' OR rounddate = '2016-04-11 00:27' AND status <> 'finished'
04.11 00:27:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.46975117' AND avaliable = true AND finished <> true
04.11 00:27:49 TIMER: Check tournament: 1ms
04.11 00:27:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 29, _type => vdl/cache.battle.infoRoom }
04.11 00:27:58 STATS: cache [battle], get [7 calls, 2 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:27:58 STATS: cache [battle], segments [15 calls, 10 hits, 4 misses]
04.11 00:27:58 STATS: cache [battle], database [189 calls, 4 reads, 4 writes]
04.11 00:27:58 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:27:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:27:58 TIME: vdl/cache.battle.infoRoom : 0.35 ms
04.11 00:28:08 BLOCKREMOVE: battle 29 removed
04.11 00:28:37 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:28:37 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:28:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 9 }, { id => 11 }, { id => 12 }}, errorCode => ok, _type => core/server.query }
04.11 00:28:37 TIME: core/server.query : 0.88 ms
04.11 00:28:37 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 12, _type => vdl/cache.battle.infoRoom }
04.11 00:28:37 READDB: SELECT * FROM Battle WHERE ID = 12
04.11 00:28:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:28:37 TIME: vdl/cache.battle.infoRoom : 0.63 ms
04.11 00:28:37 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 12, _type => vdl/cache.battle.deleteRoom }
04.11 00:28:37 ROOM: deleted room 12
04.11 00:28:37 DB: DELETE FROM Battle WHERE ID = 12
04.11 00:28:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:28:37 TIME: vdl/cache.battle.deleteRoom : 11.06 ms
04.11 00:28:37 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 12, _type => vdl/cache.battle.finishRoom }
04.11 00:28:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:28:37 TIME: vdl/cache.battle.finishRoom : 0.08 ms
04.11 00:28:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:28:37 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:28:37 STATS: cache [user], segments [17 calls, 8 hits, 8 misses]
04.11 00:28:37 STATS: cache [user], database [229 calls, 4 reads, 6 writes]
04.11 00:28:37 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
04.11 00:28:37 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 0.71 ms]
04.11 00:28:37 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.03 ms]
04.11 00:28:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:28:37 TIME: core/cache.update : 0.18 ms
04.11 00:28:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:28:37 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:28:37 STATS: cache [questdata], segments [13 calls, 4 hits, 8 misses]
04.11 00:28:37 STATS: cache [questdata], database [229 calls, 4 reads, 2 writes]
04.11 00:28:37 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
04.11 00:28:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:28:37 TIME: core/cache.update : 0.14 ms
04.11 00:28:37 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:28:37 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:28:37 TIME: core/user.logoutPost : 0.04 ms
04.11 00:28:38 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:28:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:28:43 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 12
04.11 00:28:48 BLOCKREMOVE: user 107 removed
04.11 00:28:48 BLOCKREMOVE: questdata 107 removed
04.11 00:28:49 TIMER: Clans cache...
04.11 00:28:49 TIMER: Clans cache: 0ms
04.11 00:28:49 TIMER: Check tournament...
04.11 00:28:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:28' OR rounddate = '2016-04-11 00:28' AND status <> 'finished'
04.11 00:28:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.52975989' AND avaliable = true AND finished <> true
04.11 00:28:49 TIMER: Check tournament: 1ms
04.11 00:28:53 BLOCKREMOVE: battle 12 removed
04.11 00:29:49 TIMER: Clans cache...
04.11 00:29:49 TIMER: Clans cache: 0ms
04.11 00:29:49 TIMER: Check tournament...
04.11 00:29:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:29' OR rounddate = '2016-04-11 00:29' AND status <> 'finished'
04.11 00:29:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.58977032' AND avaliable = true AND finished <> true
04.11 00:29:49 TIMER: Check tournament: 1ms
04.11 00:29:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 29, _type => vdl/cache.battle.infoRoom }
04.11 00:29:50 STATS: cache [battle], get [10 calls, 4 cache hits, 5 cache misses, 0 same version, 0 not found]
04.11 00:29:50 STATS: cache [battle], segments [20 calls, 14 hits, 5 misses]
04.11 00:29:50 STATS: cache [battle], database [301 calls, 5 reads, 5 writes]
04.11 00:29:50 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:29:50 READDB: SELECT * FROM Battle WHERE ID = 29
04.11 00:29:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:29:50 TIME: vdl/cache.battle.infoRoom : 0.84 ms
04.11 00:30:00 BLOCKREMOVE: battle 29 removed
04.11 00:30:49 TIMER: Clans cache...
04.11 00:30:49 TIMER: Clans cache: 0ms
04.11 00:30:49 TIMER: Check tournament...
04.11 00:30:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:30' OR rounddate = '2016-04-11 00:30' AND status <> 'finished'
04.11 00:30:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.6497799' AND avaliable = true AND finished <> true
04.11 00:30:49 TIMER: Check tournament: 0ms
04.11 00:31:15 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:31:15 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:31:15 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 10 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 19 }, { id => 20 }}, errorCode => ok, _type => core/server.query }
04.11 00:31:15 TIME: core/server.query : 0.82 ms
04.11 00:31:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 20, _type => vdl/cache.battle.infoRoom }
04.11 00:31:15 STATS: cache [battle], get [11 calls, 4 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:31:15 STATS: cache [battle], segments [21 calls, 14 hits, 6 misses]
04.11 00:31:15 STATS: cache [battle], database [386 calls, 6 reads, 5 writes]
04.11 00:31:15 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:31:15 READDB: SELECT * FROM Battle WHERE ID = 20
04.11 00:31:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:31:15 TIME: vdl/cache.battle.infoRoom : 1.12 ms
04.11 00:31:15 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 20, _type => vdl/cache.battle.deleteRoom }
04.11 00:31:15 ROOM: deleted room 20
04.11 00:31:15 DB: DELETE FROM Battle WHERE ID = 20
04.11 00:31:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:31:15 TIME: vdl/cache.battle.deleteRoom : 23.29 ms
04.11 00:31:15 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 20, _type => vdl/cache.battle.finishRoom }
04.11 00:31:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:31:15 TIME: vdl/cache.battle.finishRoom : 0.08 ms
04.11 00:31:15 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:31:15 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:31:15 TIME: core/user.sendTo : 0.05 ms
04.11 00:31:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:31:15 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:31:15 STATS: cache [user], segments [19 calls, 10 hits, 8 misses]
04.11 00:31:15 STATS: cache [user], database [386 calls, 4 reads, 7 writes]
04.11 00:31:15 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
04.11 00:31:15 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 0.71 ms]
04.11 00:31:15 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.05 ms]
04.11 00:31:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:31:15 TIME: core/cache.update : 0.26 ms
04.11 00:31:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:31:15 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:31:15 STATS: cache [questdata], segments [15 calls, 6 hits, 8 misses]
04.11 00:31:15 STATS: cache [questdata], database [386 calls, 4 reads, 3 writes]
04.11 00:31:15 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
04.11 00:31:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:31:15 TIME: core/cache.update : 0.19 ms
04.11 00:31:15 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:31:15 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:31:15 TIME: core/user.logoutPost : 0.07 ms
04.11 00:31:15 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:31:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 00:31:21 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 20
04.11 00:31:26 BLOCKREMOVE: user 116 removed
04.11 00:31:26 BLOCKREMOVE: questdata 116 removed
04.11 00:31:31 BLOCKREMOVE: battle 20 removed
04.11 00:31:49 TIMER: Clans cache...
04.11 00:31:49 TIMER: Clans cache: 0ms
04.11 00:31:49 TIMER: Check tournament...
04.11 00:31:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:31' OR rounddate = '2016-04-11 00:31' AND status <> 'finished'
04.11 00:31:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.70978828' AND avaliable = true AND finished <> true
04.11 00:31:49 TIMER: Check tournament: 1ms
04.11 00:31:49 TIMER: Clans cache...
04.11 00:31:49 TIMER: Clans cache: 0ms
04.11 00:31:49 TIMER: Check tournament...
04.11 00:31:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:32' OR rounddate = '2016-04-11 00:32' AND status <> 'finished'
04.11 00:31:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.7697977' AND avaliable = true AND finished <> true
04.11 00:31:49 TIMER: Check tournament: 0ms
04.11 00:31:49 TIMER: Clans cache...
04.11 00:31:49 TIMER: Clans cache: 0ms
04.11 00:31:49 TIMER: Check tournament...
04.11 00:31:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:33' OR rounddate = '2016-04-11 00:33' AND status <> 'finished'
04.11 00:31:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.82980889' AND avaliable = true AND finished <> true
04.11 00:31:49 TIMER: Check tournament: 1ms
04.11 00:31:49 TIMER: Clans cache...
04.11 00:31:49 TIMER: Clans cache: 0ms
04.11 00:31:49 TIMER: Check tournament...
04.11 00:31:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:34' OR rounddate = '2016-04-11 00:34' AND status <> 'finished'
04.11 00:31:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.88981831' AND avaliable = true AND finished <> true
04.11 00:31:49 TIMER: Check tournament: 0ms
04.11 00:31:49 TIMER: Clans cache...
04.11 00:31:49 TIMER: Clans cache: 0ms
04.11 00:31:49 TIMER: Check tournament...
04.11 00:31:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:35' OR rounddate = '2016-04-11 00:35' AND status <> 'finished'
04.11 00:31:49 DB: SELECT * FROM battle WHERE endtime >= '1478208.94982706' AND avaliable = true AND finished <> true
04.11 00:31:49 TIMER: Check tournament: 1ms
04.11 00:31:49 TIMER: Clans cache...
04.11 00:31:49 TIMER: Clans cache: 0ms
04.11 00:31:49 TIMER: Check tournament...
04.11 00:31:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:36' OR rounddate = '2016-04-11 00:36' AND status <> 'finished'
04.11 00:31:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.00983812' AND avaliable = true AND finished <> true
04.11 00:31:49 TIMER: Check tournament: 2ms
04.11 00:31:49 TIMER: Clans cache...
04.11 00:31:49 TIMER: Clans cache: 0ms
04.11 00:31:49 TIMER: Check tournament...
04.11 00:31:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:37' OR rounddate = '2016-04-11 00:37' AND status <> 'finished'
04.11 00:31:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.06984765' AND avaliable = true AND finished <> true
04.11 00:31:49 TIMER: Check tournament: 0ms
04.11 00:31:49 TIMER: Clans cache...
04.11 00:31:49 TIMER: Clans cache: 0ms
04.11 00:31:49 TIMER: Check tournament...
04.11 00:31:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:38' OR rounddate = '2016-04-11 00:38' AND status <> 'finished'
04.11 00:31:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.12985646' AND avaliable = true AND finished <> true
04.11 00:31:49 TIMER: Check tournament: 0ms
04.11 00:38:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:38:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:38:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:38:55 TIME: core/server.query : 0.95 ms
04.11 00:38:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:38:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:38:55 TIME: core/user.isOnlineID : 0.07 ms
04.11 00:38:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:38:55 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:38:55 STATS: cache [user], segments [21 calls, 12 hits, 8 misses]
04.11 00:38:55 STATS: cache [user], database [846 calls, 4 reads, 8 writes]
04.11 00:38:55 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
04.11 00:38:55 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:38:55 STATS: cache manager [1], get [9 calls, total 0.01 sec spent, avg 0.77 ms]
04.11 00:38:55 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.06 ms]
04.11 00:38:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:38:55 TIME: core/cache.get : 1.47 ms
04.11 00:38:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:38:55 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
04.11 00:38:55 STATS: cache [questdata], segments [17 calls, 8 hits, 8 misses]
04.11 00:38:55 STATS: cache [questdata], database [846 calls, 4 reads, 4 writes]
04.11 00:38:55 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
04.11 00:38:55 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:38:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:38:55 TIME: core/cache.get : 0.5 ms
04.11 00:38:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:38:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:38:55 TIME: core/user.loginPost : 0.04 ms
04.11 00:38:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:38:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:38:59 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:38:59 TIME: core/server.query : 0.82 ms
04.11 00:38:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:38:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:38:59 TIME: core/user.isOnlineID : 0.04 ms
04.11 00:38:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:38:59 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:38:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:38:59 TIME: core/cache.get : 1.61 ms
04.11 00:38:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:38:59 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:38:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:38:59 TIME: core/cache.get : 0.54 ms
04.11 00:38:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:38:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:38:59 TIME: core/user.loginPost : 0.04 ms
04.11 00:39:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:39:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:39:04 TIME: core/cache.update : 0.1 ms
04.11 00:39:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:39:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:39:04 TIME: core/cache.update : 0.09 ms
04.11 00:39:05 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:39:05 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:39:17 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:39:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:39:17 TIME: vdl/cache.battle.findRandom : 0.1 ms
04.11 00:39:20 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:39:20 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:39:20 READDB: SELECT ID FROM Battle WHERE ID = 30
04.11 00:39:20 READDB: INSERT INTO Battle (ID) VALUES (30)
04.11 00:39:20 STATS: cache [battle], get [13 calls, 5 cache hits, 7 cache misses, 0 same version, 0 not found]
04.11 00:39:20 STATS: cache [battle], segments [25 calls, 17 hits, 7 misses]
04.11 00:39:20 STATS: cache [battle], database [871 calls, 7 reads, 6 writes]
04.11 00:39:20 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:39:20 READDB: SELECT * FROM Battle WHERE ID = 30
04.11 00:39:20 DB: SELECT name FROM users WHERE id=107
04.11 00:39:20 DB: SELECT name FROM users WHERE id=116
04.11 00:39:20 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 30, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:39:20 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 30, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:39:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:39:20 TIME: vdl/cache.battle.findRandom : 33.4 ms
04.11 00:39:26 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481809.1604385', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 30
04.11 00:39:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 30, _type => vdl/cache.battle.infoRoom }
04.11 00:39:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:39:30 TIME: vdl/cache.battle.infoRoom : 0.09 ms
04.11 00:39:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 30, _type => vdl/cache.battle.infoRoom }
04.11 00:39:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:39:40 TIME: vdl/cache.battle.infoRoom : 0.14 ms
04.11 00:39:40 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 30 }
04.11 00:39:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 00:39:40 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 00:39:49 TIMER: Clans cache...
04.11 00:39:49 TIMER: Clans cache: 0ms
04.11 00:39:49 TIMER: Check tournament...
04.11 00:39:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:39' OR rounddate = '2016-04-11 00:39' AND status <> 'finished'
04.11 00:39:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.18986793' AND avaliable = true AND finished <> true
04.11 00:39:49 TIMER: Check tournament: 1ms
04.11 00:39:51 BLOCKREMOVE: battle 30 removed
04.11 00:40:49 TIMER: Clans cache...
04.11 00:40:49 TIMER: Clans cache: 0ms
04.11 00:40:49 TIMER: Check tournament...
04.11 00:40:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:40' OR rounddate = '2016-04-11 00:40' AND status <> 'finished'
04.11 00:40:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.24987779' AND avaliable = true AND finished <> true
04.11 00:40:49 TIMER: Check tournament: 1ms
04.11 00:40:49 TIMER: Clans cache...
04.11 00:40:49 TIMER: Clans cache: 0ms
04.11 00:40:49 TIMER: Check tournament...
04.11 00:40:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:41' OR rounddate = '2016-04-11 00:41' AND status <> 'finished'
04.11 00:40:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.30988956' AND avaliable = true AND finished <> true
04.11 00:40:49 TIMER: Check tournament: 1ms
04.11 00:40:49 TIMER: Clans cache...
04.11 00:40:49 TIMER: Clans cache: 0ms
04.11 00:40:49 TIMER: Check tournament...
04.11 00:40:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:42' OR rounddate = '2016-04-11 00:42' AND status <> 'finished'
04.11 00:40:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.3698993' AND avaliable = true AND finished <> true
04.11 00:40:49 TIMER: Check tournament: 1ms
04.11 00:43:40 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:43:40 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:43:40 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 9 }, { id => 11 }}, errorCode => ok, _type => core/server.query }
04.11 00:43:40 TIME: core/server.query : 0.63 ms
04.11 00:43:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 11, _type => vdl/cache.battle.infoRoom }
04.11 00:43:40 STATS: cache [battle], get [16 calls, 7 cache hits, 8 cache misses, 0 same version, 0 not found]
04.11 00:43:40 STATS: cache [battle], segments [30 calls, 21 hits, 8 misses]
04.11 00:43:40 STATS: cache [battle], database [1131 calls, 8 reads, 7 writes]
04.11 00:43:40 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:43:40 READDB: SELECT * FROM Battle WHERE ID = 11
04.11 00:43:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:43:40 TIME: vdl/cache.battle.infoRoom : 0.54 ms
04.11 00:43:40 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 11, _type => vdl/cache.battle.deleteRoom }
04.11 00:43:40 ROOM: deleted room 11
04.11 00:43:40 DB: DELETE FROM Battle WHERE ID = 11
04.11 00:43:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:43:40 TIME: vdl/cache.battle.deleteRoom : 21.43 ms
04.11 00:43:40 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 11, _type => vdl/cache.battle.finishRoom }
04.11 00:43:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:43:40 TIME: vdl/cache.battle.finishRoom : 0.09 ms
04.11 00:43:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:43:40 STATS: cache [user], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:43:40 STATS: cache [user], segments [27 calls, 14 hits, 12 misses]
04.11 00:43:40 STATS: cache [user], database [1131 calls, 6 reads, 10 writes]
04.11 00:43:40 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
04.11 00:43:40 STATS: cache manager [1], get [12 calls, total 0.01 sec spent, avg 0.77 ms]
04.11 00:43:40 STATS: cache manager [1], update [15 calls, total 0 sec spent, avg 0.06 ms]
04.11 00:43:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:43:40 TIME: core/cache.update : 0.29 ms
04.11 00:43:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:43:40 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:43:40 STATS: cache [questdata], segments [21 calls, 8 hits, 12 misses]
04.11 00:43:40 STATS: cache [questdata], database [1131 calls, 6 reads, 4 writes]
04.11 00:43:40 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
04.11 00:43:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:43:40 TIME: core/cache.update : 0.2 ms
04.11 00:43:40 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:43:40 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:43:40 TIME: core/user.logoutPost : 0.06 ms
04.11 00:43:41 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:43:41 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:43:45 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:43:45 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:43:45 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 10 }, { id => 13 }, { id => 14 }, { id => 16 }, { id => 19 }}, errorCode => ok, _type => core/server.query }
04.11 00:43:45 TIME: core/server.query : 0.99 ms
04.11 00:43:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 19, _type => vdl/cache.battle.infoRoom }
04.11 00:43:45 READDB: SELECT * FROM Battle WHERE ID = 19
04.11 00:43:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:43:45 TIME: vdl/cache.battle.infoRoom : 0.82 ms
04.11 00:43:45 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 19, _type => vdl/cache.battle.deleteRoom }
04.11 00:43:45 ROOM: deleted room 19
04.11 00:43:45 DB: DELETE FROM Battle WHERE ID = 19
04.11 00:43:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:43:45 TIME: vdl/cache.battle.deleteRoom : 22.42 ms
04.11 00:43:45 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 19, _type => vdl/cache.battle.finishRoom }
04.11 00:43:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:43:45 TIME: vdl/cache.battle.finishRoom : 0.06 ms
04.11 00:43:45 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:43:45 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:43:45 TIME: core/user.sendTo : 0.04 ms
04.11 00:43:45 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:43:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:43:45 TIME: core/cache.update : 0.09 ms
04.11 00:43:45 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:43:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:43:45 TIME: core/cache.update : 0.05 ms
04.11 00:43:45 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:43:45 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:43:45 TIME: core/user.logoutPost : 0.04 ms
04.11 00:43:46 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:43:46 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 00:43:46 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481800', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 11
04.11 00:43:49 TIMER: Clans cache...
04.11 00:43:49 TIMER: Clans cache: 0ms
04.11 00:43:49 TIMER: Check tournament...
04.11 00:43:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:43' OR rounddate = '2016-04-11 00:43' AND status <> 'finished'
04.11 00:43:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.42990966' AND avaliable = true AND finished <> true
04.11 00:43:49 TIMER: Check tournament: 1ms
04.11 00:43:51 BLOCKREMOVE: user 107 removed
04.11 00:43:51 BLOCKREMOVE: questdata 107 removed
04.11 00:43:51 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 19
04.11 00:43:56 BLOCKREMOVE: user 116 removed
04.11 00:43:56 BLOCKREMOVE: questdata 116 removed
04.11 00:43:56 BLOCKREMOVE: battle 11 removed
04.11 00:44:01 BLOCKREMOVE: battle 19 removed
04.11 00:44:49 TIMER: Clans cache...
04.11 00:44:49 TIMER: Clans cache: 0ms
04.11 00:44:49 TIMER: Check tournament...
04.11 00:44:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:44' OR rounddate = '2016-04-11 00:44' AND status <> 'finished'
04.11 00:44:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.48991933' AND avaliable = true AND finished <> true
04.11 00:44:49 TIMER: Check tournament: 2ms
04.11 00:44:49 TIMER: Clans cache...
04.11 00:44:49 TIMER: Clans cache: 0ms
04.11 00:44:49 TIMER: Check tournament...
04.11 00:44:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:45' OR rounddate = '2016-04-11 00:45' AND status <> 'finished'
04.11 00:44:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.54992857' AND avaliable = true AND finished <> true
04.11 00:44:49 TIMER: Check tournament: 1ms
04.11 00:46:22 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:46:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:46:22 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:46:22 TIME: core/server.query : 0.9 ms
04.11 00:46:22 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:46:22 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:46:22 TIME: core/user.isOnlineID : 0.06 ms
04.11 00:46:22 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:46:22 STATS: cache [user], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:46:22 STATS: cache [user], segments [31 calls, 18 hits, 12 misses]
04.11 00:46:22 STATS: cache [user], database [1293 calls, 6 reads, 12 writes]
04.11 00:46:22 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
04.11 00:46:22 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:46:22 STATS: cache manager [1], get [13 calls, total 0.01 sec spent, avg 0.77 ms]
04.11 00:46:22 STATS: cache manager [1], update [18 calls, total 0 sec spent, avg 0.06 ms]
04.11 00:46:22 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:46:22 TIME: core/cache.get : 0.9 ms
04.11 00:46:22 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:46:22 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 00:46:22 STATS: cache [questdata], segments [25 calls, 12 hits, 12 misses]
04.11 00:46:22 STATS: cache [questdata], database [1293 calls, 6 reads, 6 writes]
04.11 00:46:22 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
04.11 00:46:22 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:46:22 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:46:22 TIME: core/cache.get : 0.5 ms
04.11 00:46:22 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:46:22 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:46:22 TIME: core/user.loginPost : 0.07 ms
04.11 00:46:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:46:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:46:23 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:46:23 TIME: core/server.query : 0.63 ms
04.11 00:46:23 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:46:23 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:46:23 TIME: core/user.isOnlineID : 0.07 ms
04.11 00:46:23 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:46:23 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:46:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:46:23 TIME: core/cache.get : 0.63 ms
04.11 00:46:23 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:46:23 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:46:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:46:23 TIME: core/cache.get : 0.4 ms
04.11 00:46:23 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:46:23 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:46:23 TIME: core/user.loginPost : 0.04 ms
04.11 00:46:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:46:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:46:29 TIME: core/cache.update : 0.1 ms
04.11 00:46:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:46:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:46:29 TIME: core/cache.update : 0.07 ms
04.11 00:46:30 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:46:30 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:46:35 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:46:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:46:35 TIME: vdl/cache.battle.findRandom : 0.07 ms
04.11 00:46:42 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:46:42 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:46:42 READDB: SELECT ID FROM Battle WHERE ID = 31
04.11 00:46:42 READDB: INSERT INTO Battle (ID) VALUES (31)
04.11 00:46:42 STATS: cache [battle], get [20 calls, 9 cache hits, 10 cache misses, 0 same version, 0 not found]
04.11 00:46:42 STATS: cache [battle], segments [38 calls, 27 hits, 10 misses]
04.11 00:46:42 STATS: cache [battle], database [1313 calls, 10 reads, 9 writes]
04.11 00:46:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:46:42 READDB: SELECT * FROM Battle WHERE ID = 31
04.11 00:46:42 DB: SELECT name FROM users WHERE id=107
04.11 00:46:42 DB: SELECT name FROM users WHERE id=116
04.11 00:46:42 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 31, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:46:42 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 31, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:46:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:46:42 TIME: vdl/cache.battle.findRandom : 37.34 ms
04.11 00:46:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481809.60295275', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 31
04.11 00:46:49 TIMER: Clans cache...
04.11 00:46:49 TIMER: Clans cache: 0ms
04.11 00:46:49 TIMER: Check tournament...
04.11 00:46:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:46' OR rounddate = '2016-04-11 00:46' AND status <> 'finished'
04.11 00:46:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.60993995' AND avaliable = true AND finished <> true
04.11 00:46:49 TIMER: Check tournament: 1ms
04.11 00:46:51 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 31, _type => vdl/cache.battle.infoRoom }
04.11 00:46:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:46:51 TIME: vdl/cache.battle.infoRoom : 0.08 ms
04.11 00:47:02 BLOCKREMOVE: battle 31 removed
04.11 00:47:49 TIMER: Clans cache...
04.11 00:47:49 TIMER: Clans cache: 0ms
04.11 00:47:49 TIMER: Check tournament...
04.11 00:47:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:47' OR rounddate = '2016-04-11 00:47' AND status <> 'finished'
04.11 00:47:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.66994788' AND avaliable = true AND finished <> true
04.11 00:47:49 TIMER: Check tournament: 1ms
04.11 00:47:49 TIMER: Clans cache...
04.11 00:47:49 TIMER: Clans cache: 0ms
04.11 00:47:49 TIMER: Check tournament...
04.11 00:47:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:48' OR rounddate = '2016-04-11 00:48' AND status <> 'finished'
04.11 00:47:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.72995618' AND avaliable = true AND finished <> true
04.11 00:47:49 TIMER: Check tournament: 0ms
04.11 00:47:49 TIMER: Clans cache...
04.11 00:47:49 TIMER: Clans cache: 0ms
04.11 00:47:49 TIMER: Check tournament...
04.11 00:47:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:49' OR rounddate = '2016-04-11 00:49' AND status <> 'finished'
04.11 00:47:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.78996684' AND avaliable = true AND finished <> true
04.11 00:47:49 TIMER: Check tournament: 3ms
04.11 00:47:49 TIMER: Clans cache...
04.11 00:47:49 TIMER: Clans cache: 0ms
04.11 00:47:49 TIMER: Check tournament...
04.11 00:47:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:50' OR rounddate = '2016-04-11 00:50' AND status <> 'finished'
04.11 00:47:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.84997551' AND avaliable = true AND finished <> true
04.11 00:47:49 TIMER: Check tournament: 0ms
04.11 00:50:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 31, _type => vdl/cache.battle.infoRoom }
04.11 00:50:57 STATS: cache [battle], get [22 calls, 10 cache hits, 11 cache misses, 0 same version, 0 not found]
04.11 00:50:57 STATS: cache [battle], segments [42 calls, 30 hits, 11 misses]
04.11 00:50:57 STATS: cache [battle], database [1568 calls, 11 reads, 10 writes]
04.11 00:50:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:50:57 READDB: SELECT * FROM Battle WHERE ID = 31
04.11 00:50:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:50:57 TIME: vdl/cache.battle.infoRoom : 0.9 ms
04.11 00:51:08 BLOCKREMOVE: battle 31 removed
04.11 00:51:49 TIMER: Clans cache...
04.11 00:51:49 TIMER: Clans cache: 0ms
04.11 00:51:49 TIMER: Check tournament...
04.11 00:51:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:51' OR rounddate = '2016-04-11 00:51' AND status <> 'finished'
04.11 00:51:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.9099846' AND avaliable = true AND finished <> true
04.11 00:51:49 TIMER: Check tournament: 4ms
04.11 00:51:55 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:51:55 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:51:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 9 }, { id => 31 }}, errorCode => ok, _type => core/server.query }
04.11 00:51:55 TIME: core/server.query : 2.39 ms
04.11 00:51:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 31, _type => vdl/cache.battle.infoRoom }
04.11 00:51:55 READDB: SELECT * FROM Battle WHERE ID = 31
04.11 00:51:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:51:55 TIME: vdl/cache.battle.infoRoom : 1.88 ms
04.11 00:51:55 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 31, _type => vdl/cache.battle.deleteRoom }
04.11 00:51:55 ROOM: deleted room 31
04.11 00:51:55 DB: DELETE FROM Battle WHERE ID = 31
04.11 00:51:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:51:55 TIME: vdl/cache.battle.deleteRoom : 20.7 ms
04.11 00:51:55 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 31, _type => vdl/cache.battle.finishRoom }
04.11 00:51:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:51:55 TIME: vdl/cache.battle.finishRoom : 0.17 ms
04.11 00:51:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:51:55 STATS: cache [user], get [8 calls, 0 cache hits, 8 cache misses, 0 same version, 0 not found]
04.11 00:51:55 STATS: cache [user], segments [37 calls, 20 hits, 16 misses]
04.11 00:51:55 STATS: cache [user], database [1626 calls, 8 reads, 14 writes]
04.11 00:51:55 STATS: cache [user], lock [8 calls, 8 attempts, 0 failures]
04.11 00:51:55 STATS: cache manager [1], get [16 calls, total 0.01 sec spent, avg 0.7 ms]
04.11 00:51:55 STATS: cache manager [1], update [21 calls, total 0 sec spent, avg 0.07 ms]
04.11 00:51:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:51:55 TIME: core/cache.update : 0.59 ms
04.11 00:51:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:51:55 STATS: cache [questdata], get [8 calls, 0 cache hits, 8 cache misses, 0 same version, 0 not found]
04.11 00:51:55 STATS: cache [questdata], segments [29 calls, 12 hits, 16 misses]
04.11 00:51:55 STATS: cache [questdata], database [1626 calls, 8 reads, 6 writes]
04.11 00:51:55 STATS: cache [questdata], lock [8 calls, 8 attempts, 0 failures]
04.11 00:51:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:51:55 TIME: core/cache.update : 0.42 ms
04.11 00:51:55 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:51:55 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:51:55 TIME: core/user.logoutPost : 0.13 ms
04.11 00:51:56 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:51:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:52:01 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 31
04.11 00:52:02 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 00:52:02 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 00:52:02 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 10 }, { id => 13 }, { id => 14 }, { id => 16 }}, errorCode => ok, _type => core/server.query }
04.11 00:52:02 TIME: core/server.query : 1.29 ms
04.11 00:52:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
04.11 00:52:02 STATS: cache [battle], get [25 calls, 11 cache hits, 13 cache misses, 0 same version, 0 not found]
04.11 00:52:02 STATS: cache [battle], segments [47 calls, 33 hits, 13 misses]
04.11 00:52:02 STATS: cache [battle], database [1633 calls, 13 reads, 11 writes]
04.11 00:52:02 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:52:02 READDB: SELECT * FROM Battle WHERE ID = 16
04.11 00:52:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 00:52:02 TIME: vdl/cache.battle.infoRoom : 1.5 ms
04.11 00:52:02 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 16, _type => vdl/cache.battle.deleteRoom }
04.11 00:52:02 ROOM: deleted room 16
04.11 00:52:02 DB: DELETE FROM Battle WHERE ID = 16
04.11 00:52:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:52:03 TIME: vdl/cache.battle.deleteRoom : 26.64 ms
04.11 00:52:03 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 16, _type => vdl/cache.battle.finishRoom }
04.11 00:52:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:52:03 TIME: vdl/cache.battle.finishRoom : 0.2 ms
04.11 00:52:03 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:52:03 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:52:03 TIME: core/user.sendTo : 0.12 ms
04.11 00:52:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 00:52:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 00:52:03 TIME: core/cache.update : 0.2 ms
04.11 00:52:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 00:52:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:52:03 TIME: core/cache.update : 0.39 ms
04.11 00:52:03 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 00:52:03 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:52:03 TIME: core/user.logoutPost : 0.33 ms
04.11 00:52:03 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:52:03 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 00:52:06 BLOCKREMOVE: user 107 removed
04.11 00:52:06 BLOCKREMOVE: questdata 107 removed
04.11 00:52:08 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 16
04.11 00:52:08 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:52:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:52:08 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:52:08 TIME: core/server.query : 1.09 ms
04.11 00:52:08 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:52:08 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:52:08 TIME: core/user.isOnlineID : 0.11 ms
04.11 00:52:08 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:52:08 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:52:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:52:08 TIME: core/cache.get : 1.5 ms
04.11 00:52:08 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:52:08 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:52:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:52:08 TIME: core/cache.get : 0.92 ms
04.11 00:52:08 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:52:08 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:52:08 TIME: core/user.loginPost : 0.13 ms
04.11 00:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 00:52:10 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 00:52:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 9 }}, errorCode => ok, _type => core/server.query }
04.11 00:52:10 TIME: core/server.query : 1.1 ms
04.11 00:52:10 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 9, _type => vdl/cache.battle.infoRoom }
04.11 00:52:10 READDB: SELECT * FROM Battle WHERE ID = 9
04.11 00:52:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 115, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:52:10 TIME: vdl/cache.battle.infoRoom : 1.25 ms
04.11 00:52:10 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 9, _type => vdl/cache.battle.deleteRoom }
04.11 00:52:10 ROOM: deleted room 9
04.11 00:52:10 DB: DELETE FROM Battle WHERE ID = 9
04.11 00:52:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 00:52:10 TIME: vdl/cache.battle.deleteRoom : 24.97 ms
04.11 00:52:10 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 9, _type => vdl/cache.battle.finishRoom }
04.11 00:52:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 00:52:10 TIME: vdl/cache.battle.finishRoom : 0.17 ms
04.11 00:52:10 NET: vdl.0 (thread) request core/user.sendTo { id => 115, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 00:52:10 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 00:52:10 TIME: core/user.sendTo : 0.13 ms
04.11 00:52:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 00:52:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:52:10 TIME: core/cache.update : 0.19 ms
04.11 00:52:10 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 00:52:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:52:10 TIME: core/cache.update : 0.16 ms
04.11 00:52:10 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 00:52:10 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 00:52:10 TIME: core/user.logoutPost : 0.14 ms
04.11 00:52:11 BLOCKREMOVE: battle 31 removed
04.11 00:52:13 BLOCKREMOVE: user 116 removed
04.11 00:52:13 BLOCKREMOVE: questdata 116 removed
04.11 00:52:14 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:52:14 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 00:52:16 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'115', turnid = E'107', finished = E'true', endtime = E'1481800', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 9
04.11 00:52:18 BLOCKREMOVE: battle 16 removed
04.11 00:52:24 BLOCKREMOVE: user 107 removed
04.11 00:52:24 BLOCKREMOVE: questdata 107 removed
04.11 00:52:26 BLOCKREMOVE: battle 9 removed
04.11 00:52:49 TIMER: Clans cache...
04.11 00:52:49 TIMER: Clans cache: 0ms
04.11 00:52:49 TIMER: Check tournament...
04.11 00:52:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:52' OR rounddate = '2016-04-11 00:52' AND status <> 'finished'
04.11 00:52:49 DB: SELECT * FROM battle WHERE endtime >= '1478209.97000269' AND avaliable = true AND finished <> true
04.11 00:52:49 TIMER: Check tournament: 1ms
04.11 00:53:50 TIMER: Clans cache...
04.11 00:53:50 TIMER: Clans cache: 0ms
04.11 00:53:50 TIMER: Check tournament...
04.11 00:53:50 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:53' OR rounddate = '2016-04-11 00:53' AND status <> 'finished'
04.11 00:53:50 DB: SELECT * FROM battle WHERE endtime >= '1478210.03001719' AND avaliable = true AND finished <> true
04.11 00:53:50 TIMER: Check tournament: 2ms
04.11 00:54:34 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:54:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:54:34 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:54:34 TIME: core/server.query : 1.37 ms
04.11 00:54:34 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:54:34 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:54:34 TIME: core/user.isOnlineID : 0.15 ms
04.11 00:54:34 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:54:34 STATS: cache [user], get [9 calls, 0 cache hits, 9 cache misses, 0 same version, 0 not found]
04.11 00:54:34 STATS: cache [user], segments [45 calls, 26 hits, 18 misses]
04.11 00:54:34 STATS: cache [user], database [1784 calls, 9 reads, 17 writes]
04.11 00:54:34 STATS: cache [user], lock [10 calls, 10 attempts, 0 failures]
04.11 00:54:34 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:54:34 STATS: cache manager [1], get [19 calls, total 0.02 sec spent, avg 0.79 ms]
04.11 00:54:34 STATS: cache manager [1], update [26 calls, total 0 sec spent, avg 0.08 ms]
04.11 00:54:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:54:34 TIME: core/cache.get : 2.06 ms
04.11 00:54:34 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:54:34 STATS: cache [questdata], get [9 calls, 0 cache hits, 9 cache misses, 0 same version, 0 not found]
04.11 00:54:34 STATS: cache [questdata], segments [37 calls, 18 hits, 18 misses]
04.11 00:54:34 STATS: cache [questdata], database [1784 calls, 9 reads, 9 writes]
04.11 00:54:34 STATS: cache [questdata], lock [10 calls, 10 attempts, 0 failures]
04.11 00:54:34 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:54:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:54:34 TIME: core/cache.get : 1.35 ms
04.11 00:54:34 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:54:34 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:54:34 TIME: core/user.loginPost : 0.09 ms
04.11 00:54:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:54:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:54:40 TIME: core/cache.update : 0.2 ms
04.11 00:54:40 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:54:50 TIMER: Clans cache...
04.11 00:54:50 TIMER: Clans cache: 0ms
04.11 00:54:50 TIMER: Check tournament...
04.11 00:54:50 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:54' OR rounddate = '2016-04-11 00:54' AND status <> 'finished'
04.11 00:54:50 DB: SELECT * FROM battle WHERE endtime >= '1478210.09003089' AND avaliable = true AND finished <> true
04.11 00:54:50 TIMER: Check tournament: 2ms
04.11 00:54:51 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:54:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:54:51 TIME: vdl/cache.battle.findRandom : 0.11 ms
04.11 00:54:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:54:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:54:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 00:54:52 TIME: core/server.query : 1.71 ms
04.11 00:54:52 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:54:52 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:54:52 TIME: core/user.isOnlineID : 0.12 ms
04.11 00:54:52 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:54:52 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:54:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 00:54:52 TIME: core/cache.get : 1.93 ms
04.11 00:54:52 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:54:52 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:54:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 00:54:52 TIME: core/cache.get : 1.2 ms
04.11 00:54:52 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:54:52 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:54:52 TIME: core/user.loginPost : 0.13 ms
04.11 00:55:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:55:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:55:00 TIME: core/cache.update : 0.13 ms
04.11 00:55:00 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:55:01 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:55:01 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:55:01 READDB: SELECT ID FROM Battle WHERE ID = 32
04.11 00:55:01 READDB: INSERT INTO Battle (ID) VALUES (32)
04.11 00:55:01 STATS: cache [battle], get [29 calls, 13 cache hits, 15 cache misses, 0 same version, 0 not found]
04.11 00:55:01 STATS: cache [battle], segments [55 calls, 39 hits, 15 misses]
04.11 00:55:01 STATS: cache [battle], database [1812 calls, 15 reads, 13 writes]
04.11 00:55:01 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:55:01 READDB: SELECT * FROM Battle WHERE ID = 32
04.11 00:55:01 DB: SELECT name FROM users WHERE id=107
04.11 00:55:01 DB: SELECT name FROM users WHERE id=116
04.11 00:55:01 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 32, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:55:01 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 32, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:55:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:55:01 TIME: vdl/cache.battle.findRandom : 25.66 ms
04.11 00:55:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481810.10189809', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 32
04.11 00:55:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 32, _type => vdl/cache.battle.infoRoom }
04.11 00:55:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:55:08 TIME: vdl/cache.battle.infoRoom : 0.11 ms
04.11 00:55:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 32, _type => vdl/cache.battle.infoRoom }
04.11 00:55:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:55:16 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 00:55:16 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 32 }
04.11 00:55:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 00:55:16 TIME: vdl/cache.battle.setScores : 0.13 ms
04.11 00:55:26 BLOCKREMOVE: battle 32 removed
04.11 00:55:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 32, _type => vdl/cache.battle.infoRoom }
04.11 00:55:38 READDB: SELECT * FROM Battle WHERE ID = 32
04.11 00:55:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 00:55:38 TIME: vdl/cache.battle.infoRoom : 1.17 ms
04.11 00:55:48 BLOCKREMOVE: battle 32 removed
04.11 00:57:45 TIMER: Starting timer...
04.11 00:57:45 TIMER: Timer running...
04.11 00:57:45 DB: SELECT * FROM GameVars
04.11 00:57:45 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:57:45 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:57:45 DB: SELECT * FROM Shops WHERE ID = 1
04.11 00:57:45 TEMP: load ./tmp/quest_daily_ids
04.11 00:57:45 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 00:57:45 TEMP: save ./tmp/quest_daily_ids
04.11 00:57:46 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 00:57:46 QUEUE: vdl.0 (thread) response server.login
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM LocalizationStrings
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 24.84 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM GameVars
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.42 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 2.35 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 3.28 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.84 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 3.01 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 00:57:46 TIME: core/quest.getDaily : 0.07 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM UserAttributeTypes
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.14 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM UserVariableTypes
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 0.96 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 00:57:46 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 2.82 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM ItemGroups
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.05 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM Bundles ORDER BY ID
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.52 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.27 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 00:57:46 TIME: core/shop.getList : 0.37 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM EffectAttributeTypes
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.28 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM Effects
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.6 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 00:57:46 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 2.2 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 00:57:46 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.8 ms
04.11 00:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 00:57:46 DB: SELECT * FROM Badges
04.11 00:57:46 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:57:46 TIME: core/server.query : 1.3 ms
04.11 00:58:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 00:58:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 00:58:38 QUEUE: vdl.0 (thread) response core/server.query
04.11 00:58:38 TIME: core/server.query : 2.05 ms
04.11 00:58:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 00:58:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 00:58:38 TIME: core/user.isOnlineID : 0.07 ms
04.11 00:58:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 00:58:38 READDB: SELECT * FROM Users WHERE ID = 107
04.11 00:58:38 QUEUE: vdl.0 (thread) response core/cache.get
04.11 00:58:38 TIME: core/cache.get : 2.95 ms
04.11 00:58:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 00:58:38 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 00:58:38 QUEUE: vdl.0 (thread) response core/cache.get
04.11 00:58:38 TIME: core/cache.get : 1.28 ms
04.11 00:58:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 00:58:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:58:38 TIME: core/user.loginPost : 0.14 ms
04.11 00:58:46 TIMER: Clans cache...
04.11 00:58:46 TIMER: Clans cache: 0ms
04.11 00:58:46 TIMER: Check tournament...
04.11 00:58:46 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:58' OR rounddate = '2016-04-11 00:58' AND status <> 'finished'
04.11 00:58:46 DB: SELECT * FROM battle WHERE endtime >= '1478210.32605536' AND avaliable = true AND finished <> true
04.11 00:58:46 TIMER: Check tournament: 2ms
04.11 00:58:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 00:58:46 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 00:58:46 STATS: cache [user], segments [3 calls, 0 hits, 2 misses]
04.11 00:58:46 STATS: cache [user], database [61 calls, 1 reads, 0 writes]
04.11 00:58:46 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 00:58:46 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.02 ms]
04.11 00:58:46 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.35 ms]
04.11 00:58:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:58:46 TIME: core/cache.update : 0.64 ms
04.11 00:58:47 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 00:58:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 00:58:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 00:58:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 00:58:51 TIME: core/server.query : 5.38 ms
04.11 00:58:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 00:58:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 00:58:51 TIME: core/user.isOnlineID : 0.12 ms
04.11 00:58:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 00:58:51 READDB: SELECT * FROM Users WHERE ID = 116
04.11 00:58:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 00:58:51 TIME: core/cache.get : 1.78 ms
04.11 00:58:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 00:58:51 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 00:58:51 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
04.11 00:58:51 STATS: cache [questdata], database [66 calls, 1 reads, 0 writes]
04.11 00:58:51 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 00:58:51 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 00:58:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 00:58:51 TIME: core/cache.get : 1.28 ms
04.11 00:58:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 00:58:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 00:58:51 TIME: core/user.loginPost : 0.13 ms
04.11 00:59:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 00:59:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 00:59:01 TIME: core/cache.update : 0.19 ms
04.11 00:59:02 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 00:59:46 TIMER: Clans cache...
04.11 00:59:46 TIMER: Clans cache: 0ms
04.11 00:59:46 TIMER: Check tournament...
04.11 00:59:46 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 00:59' OR rounddate = '2016-04-11 00:59' AND status <> 'finished'
04.11 00:59:46 DB: SELECT * FROM battle WHERE endtime >= '1478210.38607064' AND avaliable = true AND finished <> true
04.11 00:59:46 TIMER: Check tournament: 4ms
04.11 00:59:52 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 00:59:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:59:52 TIME: vdl/cache.battle.findRandom : 0.17 ms
04.11 00:59:56 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 00:59:56 DB: SELECT nextval('Battle_id_seq') AS id
04.11 00:59:56 READDB: SELECT ID FROM Battle WHERE ID = 33
04.11 00:59:56 READDB: INSERT INTO Battle (ID) VALUES (33)
04.11 00:59:56 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 00:59:56 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 00:59:56 STATS: cache [battle], database [130 calls, 0 reads, 0 writes]
04.11 00:59:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 00:59:56 READDB: SELECT * FROM Battle WHERE ID = 33
04.11 00:59:56 DB: SELECT name FROM users WHERE id=107
04.11 00:59:56 DB: SELECT name FROM users WHERE id=116
04.11 00:59:56 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 33, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 00:59:56 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 33, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 00:59:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 00:59:56 TIME: vdl/cache.battle.findRandom : 33.75 ms
