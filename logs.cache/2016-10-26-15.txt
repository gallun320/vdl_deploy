26.10 15:01:45 TIMER: Starting timer...
26.10 15:01:45 DB: SELECT * FROM GameVars
26.10 15:01:45 TIMER: Timer running...
26.10 15:01:45 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 15:01:45 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 15:01:45 DB: SELECT * FROM Shops WHERE ID = 1
26.10 15:01:45 TEMP: load ./tmp/quest_daily_ids
26.10 15:01:45 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 15:01:45 TEMP: save ./tmp/quest_daily_ids
26.10 15:01:45 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 15:01:45 QUEUE: vdl.0 (thread) response server.login
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM LocalizationStrings
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 16.01 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM GameVars
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 0.9 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.79 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.69 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.53 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 3.6 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 15:01:45 TIME: core/quest.getDaily : 0.06 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM UserAttributeTypes
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.51 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM UserVariableTypes
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.23 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 15:01:45 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 3.1 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM ItemGroups
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.12 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM Bundles ORDER BY ID
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.39 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.26 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 15:01:45 TIME: core/shop.getList : 0.09 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM EffectAttributeTypes
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 4.26 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM Effects
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.54 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 15:01:45 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.66 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 15:01:45 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 1.75 ms
26.10 15:01:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 15:01:45 DB: SELECT * FROM Badges
26.10 15:01:45 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:45 TIME: core/server.query : 0.99 ms
26.10 15:01:54 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 15:01:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 15:01:54 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:01:54 TIME: core/server.query : 2.28 ms
26.10 15:01:54 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 15:01:54 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 15:01:54 TIME: core/user.isOnlineID : 0.11 ms
26.10 15:01:54 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 15:01:54 READDB: SELECT * FROM Users WHERE ID = 76
26.10 15:01:54 QUEUE: vdl.0 (thread) response core/cache.get
26.10 15:01:54 TIME: core/cache.get : 4.38 ms
26.10 15:01:54 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 15:01:54 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 15:01:54 QUEUE: vdl.0 (thread) response core/cache.get
26.10 15:01:54 TIME: core/cache.get : 1.36 ms
26.10 15:01:54 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 15:01:54 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 15:01:54 TIME: core/user.loginPost : 0.09 ms
26.10 15:01:54 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 87, _type => vdl/cache.battle.finishRoom }
26.10 15:01:54 READDB: SELECT * FROM Battle WHERE ID = 87
26.10 15:01:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
26.10 15:01:54 TIME: vdl/cache.battle.finishRoom : 5.2 ms
26.10 15:01:54 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
26.10 15:01:54 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
26.10 15:01:54 TIME: vdl/cache.user.getData : 0.16 ms
26.10 15:01:59 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'true', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 87
26.10 15:02:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.10 15:02:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:02:00 TIME: core/cache.update : 0.14 ms
26.10 15:02:01 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399027,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 15:02:09 BLOCKREMOVE: battle 87 removed
26.10 15:02:45 TIMER: Clans cache...
26.10 15:02:45 TIMER: Clans cache: 0ms
26.10 15:02:45 TIMER: Check tournament...
26.10 15:02:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:02' OR rounddate = '2016-26-10 15:02' AND status <> 'finished'
26.10 15:02:45 TIMER: Check tournament: 1ms
26.10 15:02:52 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
26.10 15:02:52 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
26.10 15:02:52 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 15:02:52 TIME: core/server.query : 1.67 ms
26.10 15:02:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 15:02:52 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 15:02:52 STATS: cache [battle], segments [3 calls, 1 hits, 1 misses]
26.10 15:02:52 STATS: cache [battle], database [67 calls, 1 reads, 1 writes]
26.10 15:02:52 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 15:02:52 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 15:02:52 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 15:02:52 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 15:02:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 15:02:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 15:02:52 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 15:02:52 STATS: cache [user], segments [5 calls, 1 hits, 2 misses]
26.10 15:02:52 STATS: cache [user], database [67 calls, 1 reads, 1 writes]
26.10 15:02:52 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
26.10 15:02:52 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.78 ms]
26.10 15:02:52 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.16 ms]
26.10 15:02:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 15:02:52 TIME: core/cache.update : 0.51 ms
26.10 15:02:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 15:02:52 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 15:02:52 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
26.10 15:02:52 STATS: cache [questdata], database [67 calls, 1 reads, 0 writes]
26.10 15:02:52 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
26.10 15:02:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:02:52 TIME: core/cache.update : 0.39 ms
26.10 15:02:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 15:02:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 15:02:52 TIME: core/user.logoutPost : 0.15 ms
26.10 15:02:52 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399027,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 15:02:52 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 15:03:02 BLOCKREMOVE: user 76 removed
26.10 15:03:02 BLOCKREMOVE: questdata 76 removed
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:03' OR rounddate = '2016-26-10 15:03' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:04' OR rounddate = '2016-26-10 15:04' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:05' OR rounddate = '2016-26-10 15:05' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 0ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:06' OR rounddate = '2016-26-10 15:06' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 2ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:07' OR rounddate = '2016-26-10 15:07' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:08' OR rounddate = '2016-26-10 15:08' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:09' OR rounddate = '2016-26-10 15:09' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:10' OR rounddate = '2016-26-10 15:10' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:11' OR rounddate = '2016-26-10 15:11' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:12' OR rounddate = '2016-26-10 15:12' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:13' OR rounddate = '2016-26-10 15:13' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 0ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:14' OR rounddate = '2016-26-10 15:14' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:15' OR rounddate = '2016-26-10 15:15' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:16' OR rounddate = '2016-26-10 15:16' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:17' OR rounddate = '2016-26-10 15:17' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:18' OR rounddate = '2016-26-10 15:18' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:19' OR rounddate = '2016-26-10 15:19' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 0ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:20' OR rounddate = '2016-26-10 15:20' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 0ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:21' OR rounddate = '2016-26-10 15:21' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:22' OR rounddate = '2016-26-10 15:22' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:23' OR rounddate = '2016-26-10 15:23' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:24' OR rounddate = '2016-26-10 15:24' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 0ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:25' OR rounddate = '2016-26-10 15:25' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:26' OR rounddate = '2016-26-10 15:26' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 0ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:27' OR rounddate = '2016-26-10 15:27' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 0ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:28' OR rounddate = '2016-26-10 15:28' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 1ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:29' OR rounddate = '2016-26-10 15:29' AND status <> 'finished'
26.10 15:03:45 TIMER: Check tournament: 0ms
26.10 15:03:45 TIMER: Clans cache...
26.10 15:03:45 TIMER: Clans cache: 0ms
26.10 15:03:45 TIMER: Check tournament...
26.10 15:03:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:30' OR rounddate = '2016-26-10 15:30' AND status <> 'finished'
26.10 15:03:45 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 15:03:45 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
26.10 15:03:45 STATS: cache [tournament], database [1740 calls, 0 reads, 0 writes]
26.10 15:03:45 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 15:03:45 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 15:03:45 TIMER: Check tournament: 3ms
26.10 15:30:55 BLOCKREMOVE: tournament 1 removed
26.10 15:31:45 TIMER: Clans cache...
26.10 15:31:45 TIMER: Clans cache: 0ms
26.10 15:31:45 TIMER: Check tournament...
26.10 15:31:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:31' OR rounddate = '2016-26-10 15:31' AND status <> 'finished'
26.10 15:31:45 TIMER: Check tournament: 0ms
26.10 15:32:00 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 15:32:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 15:32:00 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
26.10 15:32:00 TIME: core/server.query : 1.3 ms
26.10 15:32:00 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 15:32:00 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 15:32:00 TIME: core/user.isOnlineID : 0.11 ms
26.10 15:32:00 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 15:32:00 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 15:32:00 STATS: cache [user], segments [7 calls, 3 hits, 2 misses]
26.10 15:32:00 STATS: cache [user], database [1815 calls, 1 reads, 2 writes]
26.10 15:32:00 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
26.10 15:32:00 READDB: SELECT * FROM Users WHERE ID = 95
26.10 15:32:00 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.43 ms]
26.10 15:32:00 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.2 ms]
26.10 15:32:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 95 } }
26.10 15:32:00 TIME: core/cache.get : 2.19 ms
26.10 15:32:00 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 15:32:00 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 15:32:00 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
26.10 15:32:00 STATS: cache [questdata], database [1815 calls, 1 reads, 1 writes]
26.10 15:32:00 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
26.10 15:32:00 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 15:32:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
26.10 15:32:00 TIME: core/cache.get : 1.73 ms
26.10 15:32:00 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 15:32:00 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 15:32:00 TIME: core/user.loginPost : 0.13 ms
26.10 15:32:00 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 87, _type => vdl/cache.battle.finishRoom }
26.10 15:32:00 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 1 not found]
26.10 15:32:00 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
26.10 15:32:00 STATS: cache [battle], database [1815 calls, 2 reads, 1 writes]
26.10 15:32:00 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 15:32:00 READDB: SELECT * FROM Battle WHERE ID = 87
26.10 15:32:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
26.10 15:32:00 TIME: vdl/cache.battle.finishRoom : 2.49 ms
26.10 15:32:03 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
26.10 15:32:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
26.10 15:32:03 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
26.10 15:32:03 TIME: core/server.query : 2.61 ms
26.10 15:32:03 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
26.10 15:32:03 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 15:32:03 TIME: core/user.isOnlineID : 0.08 ms
26.10 15:32:03 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
26.10 15:32:03 READDB: SELECT * FROM Users WHERE ID = 94
26.10 15:32:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 94 } }
26.10 15:32:03 TIME: core/cache.get : 1.44 ms
26.10 15:32:03 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
26.10 15:32:03 READDB: SELECT * FROM UserQuests WHERE ID = 94
26.10 15:32:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
26.10 15:32:03 TIME: core/cache.get : 0.94 ms
26.10 15:32:03 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
26.10 15:32:03 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 15:32:03 TIME: core/user.loginPost : 0.12 ms
26.10 15:32:03 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 87, _type => vdl/cache.battle.finishRoom }
26.10 15:32:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
26.10 15:32:03 TIME: vdl/cache.battle.finishRoom : 0.16 ms
26.10 15:32:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 15:32:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:32:05 TIME: core/cache.update : 0.18 ms
26.10 15:32:05 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 15:32:06 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'true', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 87
26.10 15:32:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
26.10 15:32:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:32:10 TIME: core/cache.update : 0.17 ms
26.10 15:32:11 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 15:32:16 BLOCKREMOVE: battle 87 removed
26.10 15:32:20 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 15:32:20 DB: SELECT * FROM tournament
26.10 15:32:20 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 15:32:20 STATS: cache [tournament], segments [2 calls, 0 hits, 1 misses]
26.10 15:32:20 STATS: cache [tournament], database [1835 calls, 1 reads, 0 writes]
26.10 15:32:20 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 15:32:20 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 15:32:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-26-10 15:30, startdate => 2016-26-10 15:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 15:32:20 TIME: vdl/cache.tournament.getAvailableTournament : 2.24 ms
26.10 15:32:30 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 15:32:30 DB: SELECT * FROM tournament
26.10 15:32:30 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-26-10 15:30, startdate => 2016-26-10 15:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 15:32:30 TIME: vdl/cache.tournament.getAvailableTournament : 1.21 ms
26.10 15:32:41 BLOCKREMOVE: tournament 1 removed
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:32' OR rounddate = '2016-26-10 15:32' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 0ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:33' OR rounddate = '2016-26-10 15:33' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 1ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:34' OR rounddate = '2016-26-10 15:34' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 0ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:35' OR rounddate = '2016-26-10 15:35' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 1ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:36' OR rounddate = '2016-26-10 15:36' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 1ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:37' OR rounddate = '2016-26-10 15:37' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 0ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:38' OR rounddate = '2016-26-10 15:38' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 1ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:39' OR rounddate = '2016-26-10 15:39' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 1ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:40' OR rounddate = '2016-26-10 15:40' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 0ms
26.10 15:32:45 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 15:32:45 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 15:32:45 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 15:32:45 TIME: core/server.query : 1.71 ms
26.10 15:32:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 15:32:45 STATS: cache [battle], get [5 calls, 1 cache hits, 3 cache misses, 0 same version, 1 not found]
26.10 15:32:45 STATS: cache [battle], segments [8 calls, 4 hits, 3 misses]
26.10 15:32:45 STATS: cache [battle], database [2400 calls, 3 reads, 2 writes]
26.10 15:32:45 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 15:32:45 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 15:32:45 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 15:32:45 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 15:32:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 15:32:45 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 15:32:45 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
26.10 15:32:45 STATS: cache [user], segments [13 calls, 5 hits, 6 misses]
26.10 15:32:45 STATS: cache [user], database [2400 calls, 3 reads, 4 writes]
26.10 15:32:45 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
26.10 15:32:45 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1.73 ms]
26.10 15:32:45 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.17 ms]
26.10 15:32:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 15:32:45 TIME: core/cache.update : 0.53 ms
26.10 15:32:45 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 15:32:45 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
26.10 15:32:45 STATS: cache [questdata], segments [9 calls, 2 hits, 6 misses]
26.10 15:32:45 STATS: cache [questdata], database [2400 calls, 3 reads, 1 writes]
26.10 15:32:45 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
26.10 15:32:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:32:45 TIME: core/cache.update : 0.39 ms
26.10 15:32:45 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 15:32:45 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 15:32:45 TIME: core/user.logoutPost : 0.48 ms
26.10 15:32:45 TIMER: Clans cache...
26.10 15:32:45 TIMER: Clans cache: 0ms
26.10 15:32:45 TIMER: Check tournament...
26.10 15:32:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:41' OR rounddate = '2016-26-10 15:41' AND status <> 'finished'
26.10 15:32:45 TIMER: Check tournament: 1ms
26.10 15:41:46 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 15:41:46 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 15:41:56 BLOCKREMOVE: user 95 removed
26.10 15:41:56 BLOCKREMOVE: questdata 95 removed
26.10 15:42:45 TIMER: Clans cache...
26.10 15:42:45 TIMER: Clans cache: 0ms
26.10 15:42:45 TIMER: Check tournament...
26.10 15:42:45 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:42' OR rounddate = '2016-26-10 15:42' AND status <> 'finished'
26.10 15:42:45 TIMER: Check tournament: 1ms
26.10 15:43:46 TIMER: Clans cache...
26.10 15:43:46 TIMER: Clans cache: 0ms
26.10 15:43:46 TIMER: Check tournament...
26.10 15:43:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:43' OR rounddate = '2016-26-10 15:43' AND status <> 'finished'
26.10 15:43:46 TIMER: Check tournament: 1ms
26.10 15:43:46 TIMER: Clans cache...
26.10 15:43:46 TIMER: Clans cache: 0ms
26.10 15:43:46 TIMER: Check tournament...
26.10 15:43:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:44' OR rounddate = '2016-26-10 15:44' AND status <> 'finished'
26.10 15:43:46 TIMER: Check tournament: 3ms
26.10 15:43:46 TIMER: Clans cache...
26.10 15:43:46 TIMER: Clans cache: 0ms
26.10 15:43:46 TIMER: Check tournament...
26.10 15:43:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:45' OR rounddate = '2016-26-10 15:45' AND status <> 'finished'
26.10 15:43:46 TIMER: Check tournament: 1ms
26.10 15:43:46 TIMER: Clans cache...
26.10 15:43:46 TIMER: Clans cache: 0ms
26.10 15:43:46 TIMER: Check tournament...
26.10 15:43:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:46' OR rounddate = '2016-26-10 15:46' AND status <> 'finished'
26.10 15:43:46 TIMER: Check tournament: 1ms
26.10 15:43:46 TIMER: Clans cache...
26.10 15:43:46 TIMER: Clans cache: 0ms
26.10 15:43:46 TIMER: Check tournament...
26.10 15:43:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:47' OR rounddate = '2016-26-10 15:47' AND status <> 'finished'
26.10 15:43:46 TIMER: Check tournament: 1ms
26.10 15:43:46 TIMER: Clans cache...
26.10 15:43:46 TIMER: Clans cache: 0ms
26.10 15:43:46 TIMER: Check tournament...
26.10 15:43:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:48' OR rounddate = '2016-26-10 15:48' AND status <> 'finished'
26.10 15:43:46 TIMER: Check tournament: 1ms
26.10 15:49:04 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 15:49:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 15:49:04 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
26.10 15:49:04 TIME: core/server.query : 2.84 ms
26.10 15:49:04 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 15:49:04 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 15:49:04 TIME: core/user.isOnlineID : 0.11 ms
26.10 15:49:04 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 15:49:04 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
26.10 15:49:04 STATS: cache [user], segments [15 calls, 7 hits, 6 misses]
26.10 15:49:04 STATS: cache [user], database [2838 calls, 3 reads, 5 writes]
26.10 15:49:04 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
26.10 15:49:04 READDB: SELECT * FROM Users WHERE ID = 95
26.10 15:49:04 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.73 ms]
26.10 15:49:04 STATS: cache manager [1], update [7 calls, total 0 sec spent, avg 0.18 ms]
26.10 15:49:04 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 95 } }
26.10 15:49:04 TIME: core/cache.get : 2.16 ms
26.10 15:49:04 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 15:49:04 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
26.10 15:49:04 STATS: cache [questdata], segments [11 calls, 4 hits, 6 misses]
26.10 15:49:04 STATS: cache [questdata], database [2838 calls, 3 reads, 2 writes]
26.10 15:49:04 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
26.10 15:49:04 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 15:49:04 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
26.10 15:49:04 TIME: core/cache.get : 1.51 ms
26.10 15:49:04 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 15:49:04 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 15:49:04 TIME: core/user.loginPost : 0.31 ms
26.10 15:49:04 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 87, _type => vdl/cache.battle.finishRoom }
26.10 15:49:04 STATS: cache [battle], get [6 calls, 1 cache hits, 4 cache misses, 0 same version, 2 not found]
26.10 15:49:04 STATS: cache [battle], segments [9 calls, 4 hits, 4 misses]
26.10 15:49:04 STATS: cache [battle], database [2838 calls, 4 reads, 2 writes]
26.10 15:49:04 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 15:49:04 READDB: SELECT * FROM Battle WHERE ID = 87
26.10 15:49:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
26.10 15:49:04 TIME: vdl/cache.battle.finishRoom : 1.55 ms
26.10 15:49:09 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'true', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 87
26.10 15:49:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 15:49:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:49:11 TIME: core/cache.update : 0.15 ms
26.10 15:49:11 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 15:49:19 BLOCKREMOVE: battle 87 removed
26.10 15:49:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 15:49:37 DB: SELECT * FROM tournament
26.10 15:49:37 STATS: cache [tournament], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 15:49:37 STATS: cache [tournament], segments [4 calls, 1 hits, 2 misses]
26.10 15:49:37 STATS: cache [tournament], database [2872 calls, 2 reads, 0 writes]
26.10 15:49:37 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 15:49:37 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 15:49:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-26-10 15:30, startdate => 2016-26-10 15:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 15:49:37 TIME: vdl/cache.tournament.getAvailableTournament : 2.11 ms
26.10 15:49:46 TIMER: Clans cache...
26.10 15:49:46 TIMER: Clans cache: 0ms
26.10 15:49:46 TIMER: Check tournament...
26.10 15:49:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:49' OR rounddate = '2016-26-10 15:49' AND status <> 'finished'
26.10 15:49:46 TIMER: Check tournament: 1ms
26.10 15:49:48 BLOCKREMOVE: tournament 1 removed
26.10 15:49:52 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 15:49:52 DB: SELECT * FROM tournament
26.10 15:49:52 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 15:49:52 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-26-10 15:30, startdate => 2016-26-10 15:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 15:49:52 TIME: vdl/cache.tournament.getAvailableTournament : 2.03 ms
26.10 15:50:02 BLOCKREMOVE: tournament 1 removed
26.10 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 15:50:31 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 15:50:31 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 15:50:31 TIME: core/server.query : 1.01 ms
26.10 15:50:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 15:50:31 STATS: cache [battle], get [7 calls, 1 cache hits, 5 cache misses, 0 same version, 2 not found]
26.10 15:50:31 STATS: cache [battle], segments [11 calls, 5 hits, 5 misses]
26.10 15:50:31 STATS: cache [battle], database [2925 calls, 5 reads, 3 writes]
26.10 15:50:31 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 15:50:31 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 15:50:31 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 15:50:31 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 15:50:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 15:50:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 15:50:31 STATS: cache [user], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 15:50:31 STATS: cache [user], segments [18 calls, 8 hits, 8 misses]
26.10 15:50:31 STATS: cache [user], database [2925 calls, 4 reads, 6 writes]
26.10 15:50:31 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
26.10 15:50:31 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.68 ms]
26.10 15:50:31 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.18 ms]
26.10 15:50:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 15:50:31 TIME: core/cache.update : 0.5 ms
26.10 15:50:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 15:50:31 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 15:50:31 STATS: cache [questdata], segments [13 calls, 4 hits, 8 misses]
26.10 15:50:31 STATS: cache [questdata], database [2925 calls, 4 reads, 2 writes]
26.10 15:50:31 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
26.10 15:50:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:50:31 TIME: core/cache.update : 0.41 ms
26.10 15:50:31 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 15:50:31 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 15:50:31 TIME: core/user.logoutPost : 0.12 ms
26.10 15:50:31 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 15:50:31 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 15:50:41 BLOCKREMOVE: user 95 removed
26.10 15:50:41 BLOCKREMOVE: questdata 95 removed
26.10 15:50:46 TIMER: Clans cache...
26.10 15:50:46 TIMER: Clans cache: 0ms
26.10 15:50:46 TIMER: Check tournament...
26.10 15:50:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:50' OR rounddate = '2016-26-10 15:50' AND status <> 'finished'
26.10 15:50:46 TIMER: Check tournament: 0ms
26.10 15:50:46 TIMER: Clans cache...
26.10 15:50:46 TIMER: Clans cache: 0ms
26.10 15:50:46 TIMER: Check tournament...
26.10 15:50:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:51' OR rounddate = '2016-26-10 15:51' AND status <> 'finished'
26.10 15:50:46 TIMER: Check tournament: 0ms
26.10 15:50:46 TIMER: Clans cache...
26.10 15:50:46 TIMER: Clans cache: 0ms
26.10 15:50:46 TIMER: Check tournament...
26.10 15:50:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:52' OR rounddate = '2016-26-10 15:52' AND status <> 'finished'
26.10 15:50:46 TIMER: Check tournament: 0ms
26.10 15:50:46 TIMER: Clans cache...
26.10 15:50:46 TIMER: Clans cache: 0ms
26.10 15:50:46 TIMER: Check tournament...
26.10 15:50:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:53' OR rounddate = '2016-26-10 15:53' AND status <> 'finished'
26.10 15:50:46 TIMER: Check tournament: 1ms
26.10 15:50:46 TIMER: Clans cache...
26.10 15:50:46 TIMER: Clans cache: 0ms
26.10 15:50:46 TIMER: Check tournament...
26.10 15:50:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:54' OR rounddate = '2016-26-10 15:54' AND status <> 'finished'
26.10 15:50:46 TIMER: Check tournament: 1ms
26.10 15:50:46 TIMER: Clans cache...
26.10 15:50:46 TIMER: Clans cache: 0ms
26.10 15:50:46 TIMER: Check tournament...
26.10 15:50:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:55' OR rounddate = '2016-26-10 15:55' AND status <> 'finished'
26.10 15:50:46 TIMER: Check tournament: 0ms
26.10 15:50:46 TIMER: Clans cache...
26.10 15:50:46 TIMER: Clans cache: 0ms
26.10 15:50:46 TIMER: Check tournament...
26.10 15:50:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:56' OR rounddate = '2016-26-10 15:56' AND status <> 'finished'
26.10 15:50:46 TIMER: Check tournament: 1ms
26.10 15:50:46 TIMER: Clans cache...
26.10 15:50:46 TIMER: Clans cache: 0ms
26.10 15:50:46 TIMER: Check tournament...
26.10 15:50:46 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 15:57' OR rounddate = '2016-26-10 15:57' AND status <> 'finished'
26.10 15:50:46 TIMER: Check tournament: 0ms
26.10 15:50:46 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 15:50:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 15:50:46 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
26.10 15:50:46 TIME: core/server.query : 2.16 ms
26.10 15:50:46 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 15:50:46 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 15:50:46 TIME: core/user.isOnlineID : 0.13 ms
26.10 15:50:46 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 15:50:46 STATS: cache [user], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 15:50:46 STATS: cache [user], segments [20 calls, 10 hits, 8 misses]
26.10 15:50:46 STATS: cache [user], database [3361 calls, 4 reads, 7 writes]
26.10 15:50:46 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
26.10 15:50:46 READDB: SELECT * FROM Users WHERE ID = 76
26.10 15:50:46 STATS: cache manager [1], get [9 calls, total 0.02 sec spent, avg 1.69 ms]
26.10 15:50:46 STATS: cache manager [1], update [10 calls, total 0 sec spent, avg 0.19 ms]
26.10 15:50:46 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477399027, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 76 } }
26.10 15:50:46 TIME: core/cache.get : 2.16 ms
26.10 15:50:46 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 15:50:46 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 15:50:46 STATS: cache [questdata], segments [15 calls, 6 hits, 8 misses]
26.10 15:50:46 STATS: cache [questdata], database [3361 calls, 4 reads, 3 writes]
26.10 15:50:46 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
26.10 15:50:46 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 15:50:46 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
26.10 15:50:46 TIME: core/cache.get : 1.35 ms
26.10 15:50:46 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 15:50:46 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 15:50:46 TIME: core/user.loginPost : 0.11 ms
26.10 15:50:46 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 87, _type => vdl/cache.battle.finishRoom }
26.10 15:50:46 STATS: cache [battle], get [8 calls, 1 cache hits, 6 cache misses, 0 same version, 3 not found]
26.10 15:50:46 STATS: cache [battle], segments [12 calls, 5 hits, 6 misses]
26.10 15:50:46 STATS: cache [battle], database [3361 calls, 6 reads, 3 writes]
26.10 15:50:46 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 15:50:46 READDB: SELECT * FROM Battle WHERE ID = 87
26.10 15:50:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
26.10 15:50:46 TIME: vdl/cache.battle.finishRoom : 1.24 ms
26.10 15:57:47 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
26.10 15:57:47 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
26.10 15:57:47 TIME: vdl/cache.user.getData : 0.17 ms
26.10 15:57:49 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
26.10 15:57:49 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
26.10 15:57:49 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 15:57:49 TIME: core/server.query : 1.75 ms
26.10 15:57:49 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 15:57:49 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 15:57:49 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 15:57:49 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 15:57:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 15:57:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477486666 } }}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 15:57:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:57:49 TIME: core/cache.update : 0.21 ms
26.10 15:57:49 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 15:57:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 15:57:49 TIME: core/cache.update : 0.15 ms
26.10 15:57:49 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 15:57:49 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 15:57:49 TIME: core/user.logoutPost : 0.11 ms
26.10 15:57:52 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 15:57:52 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 15:57:52 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'true', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 87
26.10 15:58:02 BLOCKREMOVE: user 76 removed
26.10 15:58:02 BLOCKREMOVE: questdata 76 removed
26.10 15:58:02 BLOCKREMOVE: battle 87 removed
26.10 15:59:30 TIMER: Starting timer...
26.10 15:59:30 TIMER: Timer running...
26.10 15:59:30 DB: SELECT * FROM GameVars
26.10 15:59:30 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 15:59:30 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 15:59:30 DB: SELECT * FROM Shops WHERE ID = 1
26.10 15:59:30 TEMP: load ./tmp/quest_daily_ids
26.10 15:59:30 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 15:59:30 TEMP: save ./tmp/quest_daily_ids
26.10 15:59:30 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 15:59:30 QUEUE: vdl.0 (thread) response server.login
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM LocalizationStrings
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 27.69 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM GameVars
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.23 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.98 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.18 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 4.26 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 3.06 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 15:59:30 TIME: core/quest.getDaily : 0.07 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM UserAttributeTypes
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.22 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM UserVariableTypes
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.09 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 15:59:30 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 3.21 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM ItemGroups
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.41 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM Bundles ORDER BY ID
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.58 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.61 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 15:59:30 TIME: core/shop.getList : 0.12 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM EffectAttributeTypes
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 3.07 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM Effects
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.24 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 15:59:30 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 2.06 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 15:59:30 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 2.89 ms
26.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 15:59:30 DB: SELECT * FROM Badges
26.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 15:59:30 TIME: core/server.query : 1.32 ms
