14.10 14:19:48 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:19:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:19:48 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:19:48 TIME: core/server.query : 1.47 ms
14.10 14:19:48 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:19:48 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 14:19:48 TIME: core/user.isOnlineID : 0.04 ms
14.10 14:19:48 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:19:48 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 14:19:48 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 14:19:48 STATS: cache [user], database [1887 calls, 0 reads, 0 writes]
14.10 14:19:48 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 14:19:48 READDB: SELECT * FROM Users WHERE ID = 34
14.10 14:19:48 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 1.87 ms]
14.10 14:19:48 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 14:19:48 QUEUE: vdl.0 (thread) response core/cache.get
14.10 14:19:48 TIME: core/cache.get : 1.95 ms
14.10 14:19:48 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:19:48 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 14:19:48 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
14.10 14:19:48 STATS: cache [questdata], database [1887 calls, 0 reads, 0 writes]
14.10 14:19:48 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 14:19:48 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 14:19:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 14:19:48 TIME: core/cache.get : 0.7 ms
14.10 14:19:48 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:19:48 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:19:48 TIME: core/user.loginPost : 0.08 ms
14.10 14:19:53 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:19:53 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 14:19:53 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 14:19:53 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 14:19:53 STATS: cache [tournament], database [1892 calls, 0 reads, 0 writes]
14.10 14:19:53 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 14:19:53 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:19:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:19:53 TIME: vdl/cache.tournament.getAvailableTournament : 2.16 ms
14.10 14:19:57 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:19:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:19:57 TIME: core/cache.update : 0.1 ms
14.10 14:19:58 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:20:04 BLOCKREMOVE: tournament 1 removed
14.10 14:20:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:20:16 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:20:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:20:16 TIME: core/server.query : 1.13 ms
14.10 14:20:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:20:16 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 14:20:16 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 14:20:16 STATS: cache [battle], database [1914 calls, 0 reads, 0 writes]
14.10 14:20:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 14:20:16 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:20:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:20:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:20:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:20:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:20:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:20:16 TIME: core/cache.update : 0.07 ms
14.10 14:20:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:20:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:20:16 TIME: core/cache.update : 0.05 ms
14.10 14:20:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:20:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:20:16 TIME: core/user.logoutPost : 0.07 ms
14.10 14:20:16 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:20:16 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:20:22 TIMER: Clans cache...
14.10 14:20:22 TIMER: Clans cache: 0ms
14.10 14:20:26 BLOCKREMOVE: user 34 removed
14.10 14:20:26 BLOCKREMOVE: questdata 34 removed
14.10 14:20:28 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:20:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:20:28 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:20:28 TIME: core/server.query : 2.09 ms
14.10 14:20:28 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:20:28 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:20:28 TIME: core/user.isOnlineID : 0.07 ms
14.10 14:20:28 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:20:28 READDB: SELECT * FROM Users WHERE ID = 34
14.10 14:20:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 14:20:28 TIME: core/cache.get : 1.1 ms
14.10 14:20:28 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:20:28 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 14:20:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 14:20:28 TIME: core/cache.get : 0.68 ms
14.10 14:20:28 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:20:28 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:20:28 TIME: core/user.loginPost : 0.04 ms
14.10 14:20:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:20:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:20:37 TIME: core/cache.update : 0.1 ms
14.10 14:20:37 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:20:41 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:20:41 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 14:20:41 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:20:41 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:20:41 TIME: vdl/cache.tournament.getAvailableTournament : 1.43 ms
14.10 14:20:52 BLOCKREMOVE: tournament 1 removed
14.10 14:21:22 TIMER: Clans cache...
14.10 14:21:22 TIMER: Clans cache: 0ms
14.10 14:21:22 TIMER: Clans cache...
14.10 14:21:22 TIMER: Clans cache: 0ms
14.10 14:21:22 TIMER: Clans cache...
14.10 14:21:22 TIMER: Clans cache: 0ms
14.10 14:23:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:23:26 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:23:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:23:26 TIME: core/server.query : 1.24 ms
14.10 14:23:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:23:26 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
14.10 14:23:26 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
14.10 14:23:26 STATS: cache [battle], database [2105 calls, 1 reads, 0 writes]
14.10 14:23:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 14:23:26 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:23:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:23:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:23:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:23:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:23:26 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:23:26 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
14.10 14:23:26 STATS: cache [user], database [2105 calls, 2 reads, 3 writes]
14.10 14:23:26 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
14.10 14:23:26 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.02 ms]
14.10 14:23:26 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.05 ms]
14.10 14:23:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:23:26 TIME: core/cache.update : 0.26 ms
14.10 14:23:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:23:26 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:23:26 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
14.10 14:23:26 STATS: cache [questdata], database [2105 calls, 2 reads, 1 writes]
14.10 14:23:26 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 14:23:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:23:26 TIME: core/cache.update : 0.21 ms
14.10 14:23:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:23:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:23:26 TIME: core/user.logoutPost : 0.08 ms
14.10 14:23:27 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:23:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:23:33 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:23:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:23:33 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:23:33 TIME: core/server.query : 2.57 ms
14.10 14:23:33 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:23:33 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:23:33 TIME: core/user.isOnlineID : 0.08 ms
14.10 14:23:33 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:23:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 2, id => 34 } }
14.10 14:23:33 TIME: core/cache.get : 0.27 ms
14.10 14:23:33 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:23:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 34 } }
14.10 14:23:33 TIME: core/cache.get : 0.11 ms
14.10 14:23:33 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:23:33 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:23:33 TIME: core/user.loginPost : 0.1 ms
14.10 14:23:40 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:23:40 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 14:23:40 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:23:40 STATS: cache [tournament], segments [3 calls, 0 hits, 2 misses]
14.10 14:23:40 STATS: cache [tournament], database [2119 calls, 2 reads, 0 writes]
14.10 14:23:40 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 14:23:40 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:23:40 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:23:40 TIME: vdl/cache.tournament.getAvailableTournament : 2.95 ms
14.10 14:23:42 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:23:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.10 14:23:42 TIME: core/cache.update : 0.19 ms
14.10 14:23:42 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:23:51 BLOCKREMOVE: tournament 1 removed
14.10 14:24:22 TIMER: Clans cache...
14.10 14:24:22 TIMER: Clans cache: 0ms
14.10 14:24:22 TIMER: Clans cache...
14.10 14:24:22 TIMER: Clans cache: 0ms
14.10 14:25:53 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:25:53 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:25:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:25:53 TIME: core/server.query : 1.02 ms
14.10 14:25:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:25:53 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
14.10 14:25:53 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
14.10 14:25:53 STATS: cache [battle], database [2251 calls, 2 reads, 0 writes]
14.10 14:25:53 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 14:25:53 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:25:53 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:25:53 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:25:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:25:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:25:53 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:25:53 STATS: cache [user], segments [14 calls, 9 hits, 4 misses]
14.10 14:25:53 STATS: cache [user], database [2251 calls, 2 reads, 5 writes]
14.10 14:25:53 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
14.10 14:25:53 STATS: cache manager [1], get [6 calls, total 0 sec spent, avg 0.69 ms]
14.10 14:25:53 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.09 ms]
14.10 14:25:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
14.10 14:25:53 TIME: core/cache.update : 0.43 ms
14.10 14:25:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:25:53 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:25:53 STATS: cache [questdata], segments [11 calls, 6 hits, 4 misses]
14.10 14:25:53 STATS: cache [questdata], database [2251 calls, 2 reads, 2 writes]
14.10 14:25:53 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
14.10 14:25:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:25:53 TIME: core/cache.update : 0.18 ms
14.10 14:25:53 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:25:53 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:25:53 TIME: core/user.logoutPost : 0.04 ms
14.10 14:25:53 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:25:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:26:00 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:26:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:26:00 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:26:00 TIME: core/server.query : 1.18 ms
14.10 14:26:00 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:26:00 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:26:00 TIME: core/user.isOnlineID : 0.04 ms
14.10 14:26:00 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:26:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 4, id => 34 } }
14.10 14:26:00 TIME: core/cache.get : 0.22 ms
14.10 14:26:00 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:26:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 34 } }
14.10 14:26:00 TIME: core/cache.get : 0.09 ms
14.10 14:26:00 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:26:00 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:26:00 TIME: core/user.loginPost : 0.06 ms
14.10 14:26:06 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:26:06 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 14:26:06 STATS: cache [tournament], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 14:26:06 STATS: cache [tournament], segments [4 calls, 0 hits, 3 misses]
14.10 14:26:06 STATS: cache [tournament], database [2264 calls, 3 reads, 0 writes]
14.10 14:26:06 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 14:26:06 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:26:06 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:26:06 TIME: vdl/cache.tournament.getAvailableTournament : 1.31 ms
14.10 14:26:07 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:26:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
14.10 14:26:07 TIME: core/cache.update : 0.09 ms
14.10 14:26:07 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:26:16 BLOCKREMOVE: tournament 1 removed
14.10 14:26:22 TIMER: Clans cache...
14.10 14:26:22 TIMER: Clans cache: 0ms
14.10 14:26:22 TIMER: Clans cache...
14.10 14:26:22 TIMER: Clans cache: 0ms
14.10 14:27:41 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:27:41 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:27:41 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:27:41 TIME: core/server.query : 1.78 ms
14.10 14:27:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:27:41 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
14.10 14:27:41 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
14.10 14:27:41 STATS: cache [battle], database [2360 calls, 3 reads, 0 writes]
14.10 14:27:41 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 14:27:41 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:27:41 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:27:41 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:27:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:27:41 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:27:41 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:27:41 STATS: cache [user], segments [19 calls, 14 hits, 4 misses]
14.10 14:27:41 STATS: cache [user], database [2360 calls, 2 reads, 7 writes]
14.10 14:27:41 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
14.10 14:27:41 STATS: cache manager [1], get [8 calls, total 0 sec spent, avg 0.53 ms]
14.10 14:27:41 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.1 ms]
14.10 14:27:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
14.10 14:27:41 TIME: core/cache.update : 0.37 ms
14.10 14:27:41 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:27:41 STATS: cache [questdata], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:27:41 STATS: cache [questdata], segments [15 calls, 10 hits, 4 misses]
14.10 14:27:41 STATS: cache [questdata], database [2360 calls, 2 reads, 3 writes]
14.10 14:27:41 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
14.10 14:27:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.10 14:27:41 TIME: core/cache.update : 0.56 ms
14.10 14:27:41 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:27:41 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:27:41 TIME: core/user.logoutPost : 0.06 ms
14.10 14:27:42 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:27:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:27:48 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:27:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:27:48 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:27:48 TIME: core/server.query : 0.82 ms
14.10 14:27:48 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:27:48 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:27:48 TIME: core/user.isOnlineID : 0.06 ms
14.10 14:27:48 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:27:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 6, id => 34 } }
14.10 14:27:48 TIME: core/cache.get : 0.21 ms
14.10 14:27:48 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:27:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 3, id => 34 } }
14.10 14:27:48 TIME: core/cache.get : 0.07 ms
14.10 14:27:48 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:27:48 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:27:48 TIME: core/user.loginPost : 0.12 ms
14.10 14:27:55 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:27:55 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 14:27:55 STATS: cache [tournament], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
14.10 14:27:55 STATS: cache [tournament], segments [5 calls, 0 hits, 4 misses]
14.10 14:27:55 STATS: cache [tournament], database [2373 calls, 4 reads, 0 writes]
14.10 14:27:55 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 14:27:55 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:27:55 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:27:55 TIME: vdl/cache.tournament.getAvailableTournament : 1.05 ms
14.10 14:27:57 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:27:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
14.10 14:27:57 TIME: core/cache.update : 0.07 ms
14.10 14:27:57 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:28:05 BLOCKREMOVE: tournament 1 removed
14.10 14:28:22 TIMER: Clans cache...
14.10 14:28:22 TIMER: Clans cache: 0ms
14.10 14:28:25 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:28:25 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:28:25 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:28:25 TIME: core/server.query : 0.5 ms
14.10 14:28:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:28:25 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:28:25 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:28:25 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:28:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:28:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:28:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 8, _type => core/cache.update }
14.10 14:28:25 TIME: core/cache.update : 0.06 ms
14.10 14:28:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:28:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
14.10 14:28:25 TIME: core/cache.update : 0.09 ms
14.10 14:28:25 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:28:25 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:28:25 TIME: core/user.logoutPost : 0.04 ms
14.10 14:28:26 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:28:26 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:28:33 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:28:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:28:33 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:28:33 TIME: core/server.query : 0.73 ms
14.10 14:28:33 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:28:33 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:28:33 TIME: core/user.isOnlineID : 0.06 ms
14.10 14:28:33 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:28:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 8, id => 34 } }
14.10 14:28:33 TIME: core/cache.get : 0.23 ms
14.10 14:28:33 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:28:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 4, id => 34 } }
14.10 14:28:33 TIME: core/cache.get : 0.09 ms
14.10 14:28:33 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:28:33 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:28:33 TIME: core/user.loginPost : 0.06 ms
14.10 14:28:39 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:28:39 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 14:28:39 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:28:39 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:28:39 TIME: vdl/cache.tournament.getAvailableTournament : 1.76 ms
14.10 14:28:42 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:28:42 STATS: cache [user], get [6 calls, 4 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:28:42 STATS: cache [user], segments [28 calls, 23 hits, 4 misses]
14.10 14:28:42 STATS: cache [user], database [2420 calls, 2 reads, 10 writes]
14.10 14:28:42 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
14.10 14:28:42 STATS: cache manager [1], get [12 calls, total 0 sec spent, avg 0.36 ms]
14.10 14:28:42 STATS: cache manager [1], update [16 calls, total 0 sec spent, avg 0.11 ms]
14.10 14:28:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 9, _type => core/cache.update }
14.10 14:28:42 TIME: core/cache.update : 0.32 ms
14.10 14:28:42 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:28:59 TIMER: Starting timer...
14.10 14:28:59 TIMER: Timer running...
14.10 14:28:59 DB: SELECT * FROM GameVars
14.10 14:28:59 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 14:28:59 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 14:28:59 DB: SELECT * FROM Shops WHERE ID = 1
14.10 14:28:59 TEMP: load ./tmp/quest_daily_ids
14.10 14:28:59 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 14:28:59 TEMP: save ./tmp/quest_daily_ids
14.10 14:28:59 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 14:28:59 QUEUE: vdl.0 (thread) response server.login
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM LocalizationStrings
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 6.25 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM GameVars
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.54 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.65 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.53 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.55 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.89 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 14:28:59 TIME: core/quest.getDaily : 0.02 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM UserAttributeTypes
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.44 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM UserVariableTypes
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.48 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 14:28:59 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 1.21 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM ItemGroups
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.35 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM Bundles ORDER BY ID
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.48 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.4 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 14:28:59 TIME: core/shop.getList : 0.03 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM EffectAttributeTypes
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.41 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM Effects
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.44 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 14:28:59 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.65 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 14:28:59 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.62 ms
14.10 14:28:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 14:28:59 DB: SELECT * FROM Badges
14.10 14:28:59 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:28:59 TIME: core/server.query : 0.47 ms
14.10 14:28:59 TIMER: Clans cache...
14.10 14:28:59 TIMER: Clans cache: 0ms
14.10 14:28:59 TIMER: Clans cache...
14.10 14:28:59 TIMER: Clans cache: 0ms
14.10 14:28:59 TIMER: Clans cache...
14.10 14:28:59 TIMER: Clans cache: 0ms
14.10 14:28:59 TIMER: Clans cache...
14.10 14:28:59 TIMER: Clans cache: 0ms
14.10 14:28:59 TIMER: Clans cache...
14.10 14:28:59 TIMER: Clans cache: 0ms
14.10 14:28:59 TIMER: Clans cache...
14.10 14:28:59 TIMER: Clans cache: 0ms
14.10 14:35:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:35:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:35:10 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:35:10 TIME: core/server.query : 1.83 ms
14.10 14:35:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:35:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 14:35:10 TIME: core/user.isOnlineID : 0.03 ms
14.10 14:35:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:35:10 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 14:35:10 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 14:35:10 STATS: cache [user], database [372 calls, 0 reads, 0 writes]
14.10 14:35:10 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 14:35:10 READDB: SELECT * FROM Users WHERE ID = 34
14.10 14:35:10 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.65 ms]
14.10 14:35:10 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 14:35:10 QUEUE: vdl.0 (thread) response core/cache.get
14.10 14:35:10 TIME: core/cache.get : 2.74 ms
14.10 14:35:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:35:10 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 14:35:10 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
14.10 14:35:10 STATS: cache [questdata], database [372 calls, 0 reads, 0 writes]
14.10 14:35:10 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 14:35:10 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 14:35:10 QUEUE: vdl.0 (thread) response core/cache.get
14.10 14:35:10 TIME: core/cache.get : 0.82 ms
14.10 14:35:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:35:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:35:10 TIME: core/user.loginPost : 0.06 ms
14.10 14:35:18 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:35:18 DB: SELECT * FROM tournament
14.10 14:35:18 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 14:35:18 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 14:35:18 STATS: cache [tournament], database [380 calls, 0 reads, 0 writes]
14.10 14:35:18 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 14:35:18 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:35:18 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:35:18 TIME: vdl/cache.tournament.getAvailableTournament : 3.88 ms
14.10 14:35:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:35:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:35:19 TIME: core/cache.update : 0.15 ms
14.10 14:35:20 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:35:29 BLOCKREMOVE: tournament 1 removed
14.10 14:35:59 TIMER: Clans cache...
14.10 14:35:59 TIMER: Clans cache: 0ms
14.10 14:35:59 TIMER: Clans cache...
14.10 14:35:59 TIMER: Clans cache: 0ms
14.10 14:35:59 TIMER: Clans cache...
14.10 14:35:59 TIMER: Clans cache: 0ms
14.10 14:35:59 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:35:59 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:35:59 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:35:59 TIME: core/server.query : 2.17 ms
14.10 14:35:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:35:59 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 14:35:59 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 14:35:59 STATS: cache [battle], database [600 calls, 0 reads, 0 writes]
14.10 14:35:59 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 14:35:59 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:35:59 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:35:59 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:35:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:35:59 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:35:59 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 14:35:59 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
14.10 14:35:59 STATS: cache [user], database [600 calls, 1 reads, 1 writes]
14.10 14:35:59 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 14:35:59 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.72 ms]
14.10 14:35:59 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.22 ms]
14.10 14:35:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:35:59 TIME: core/cache.update : 0.72 ms
14.10 14:35:59 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:35:59 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 14:35:59 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
14.10 14:35:59 STATS: cache [questdata], database [600 calls, 1 reads, 0 writes]
14.10 14:35:59 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 14:35:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:35:59 TIME: core/cache.update : 0.5 ms
14.10 14:35:59 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:35:59 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:35:59 TIME: core/user.logoutPost : 0.22 ms
14.10 14:35:59 TIMER: Clans cache...
14.10 14:35:59 TIMER: Clans cache: 0ms
14.10 14:35:59 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:35:59 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:39:09 BLOCKREMOVE: user 34 removed
14.10 14:39:09 BLOCKREMOVE: questdata 34 removed
14.10 14:39:59 TIMER: Clans cache...
14.10 14:39:59 TIMER: Clans cache: 0ms
14.10 14:40:34 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:40:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:40:34 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:40:34 TIME: core/server.query : 2.59 ms
14.10 14:40:34 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:40:34 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:40:34 TIME: core/user.isOnlineID : 0.07 ms
14.10 14:40:34 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:40:34 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 14:40:34 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
14.10 14:40:34 STATS: cache [user], database [695 calls, 1 reads, 2 writes]
14.10 14:40:34 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
14.10 14:40:34 READDB: SELECT * FROM Users WHERE ID = 34
14.10 14:40:34 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 1.64 ms]
14.10 14:40:34 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.26 ms]
14.10 14:40:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 14:40:34 TIME: core/cache.get : 1.91 ms
14.10 14:40:34 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:40:34 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 14:40:34 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
14.10 14:40:34 STATS: cache [questdata], database [695 calls, 1 reads, 1 writes]
14.10 14:40:34 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 14:40:34 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 14:40:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 14:40:34 TIME: core/cache.get : 1.17 ms
14.10 14:40:34 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:40:34 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:40:34 TIME: core/user.loginPost : 0.17 ms
14.10 14:40:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:40:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:40:39 TIME: core/cache.update : 0.18 ms
14.10 14:40:39 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:40:39 DB: SELECT * FROM tournament
14.10 14:40:39 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 14:40:39 STATS: cache [tournament], segments [2 calls, 0 hits, 1 misses]
14.10 14:40:39 STATS: cache [tournament], database [701 calls, 1 reads, 0 writes]
14.10 14:40:39 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 14:40:39 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:40:39 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:40:39 TIME: vdl/cache.tournament.getAvailableTournament : 2.7 ms
14.10 14:40:40 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:40:50 BLOCKREMOVE: tournament 1 removed
14.10 14:40:59 TIMER: Clans cache...
14.10 14:40:59 TIMER: Clans cache: 0ms
14.10 14:40:59 TIMER: Clans cache...
14.10 14:40:59 TIMER: Clans cache: 0ms
14.10 14:42:24 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:42:24 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:42:24 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:42:24 TIME: core/server.query : 1.85 ms
14.10 14:42:24 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:42:24 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
14.10 14:42:24 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
14.10 14:42:24 STATS: cache [battle], database [805 calls, 1 reads, 0 writes]
14.10 14:42:24 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 14:42:24 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:42:24 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:42:24 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:42:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:42:24 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:42:24 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:42:24 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
14.10 14:42:24 STATS: cache [user], database [805 calls, 2 reads, 3 writes]
14.10 14:42:24 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
14.10 14:42:24 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.48 ms]
14.10 14:42:24 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.22 ms]
14.10 14:42:24 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:42:24 TIME: core/cache.update : 0.55 ms
14.10 14:42:24 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:42:24 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:42:24 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
14.10 14:42:24 STATS: cache [questdata], database [805 calls, 2 reads, 1 writes]
14.10 14:42:24 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 14:42:24 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:42:24 TIME: core/cache.update : 0.74 ms
14.10 14:42:24 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:42:24 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:42:24 TIME: core/user.logoutPost : 0.3 ms
14.10 14:42:24 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:42:24 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:42:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:42:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:42:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:42:31 TIME: core/server.query : 1.76 ms
14.10 14:42:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:42:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:42:31 TIME: core/user.isOnlineID : 0.06 ms
14.10 14:42:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:42:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 2, id => 34 } }
14.10 14:42:31 TIME: core/cache.get : 0.19 ms
14.10 14:42:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:42:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 34 } }
14.10 14:42:31 TIME: core/cache.get : 0.07 ms
14.10 14:42:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:42:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:42:31 TIME: core/user.loginPost : 0.04 ms
14.10 14:42:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:37 DB: SELECT * FROM tournament
14.10 14:42:37 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:42:37 STATS: cache [tournament], segments [3 calls, 0 hits, 2 misses]
14.10 14:42:37 STATS: cache [tournament], database [818 calls, 2 reads, 0 writes]
14.10 14:42:37 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 14:42:37 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:42:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:37 TIME: vdl/cache.tournament.getAvailableTournament : 1.24 ms
14.10 14:42:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:42:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
14.10 14:42:39 TIME: core/cache.update : 0.18 ms
14.10 14:42:39 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:42:47 BLOCKREMOVE: tournament 1 removed
14.10 14:42:49 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 34, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 14:42:49 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:42:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 14:42:49 TIME: vdl/cache.tournament.addUsers : 1.22 ms
14.10 14:42:49 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:49 DB: SELECT * FROM tournament
14.10 14:42:49 DB: SELECT name FROM users WHERE id = 34
14.10 14:42:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:42:49 TIME: vdl/cache.tournament.getAvailableTournament : 1.97 ms
14.10 14:42:54 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', round = E'1', startdate = E'2016-14-10 15:00', params = E'{"params":{"usersList":[34]}}' WHERE ID = 1
14.10 14:42:59 TIMER: Clans cache...
14.10 14:42:59 TIMER: Clans cache: 0ms
14.10 14:43:04 BLOCKREMOVE: tournament 1 removed
14.10 14:43:59 TIMER: Clans cache...
14.10 14:43:59 TIMER: Clans cache: 0ms
14.10 14:43:59 TIMER: Clans cache...
14.10 14:43:59 TIMER: Clans cache: 0ms
14.10 14:43:59 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:43:59 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:43:59 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:43:59 TIME: core/server.query : 1.17 ms
14.10 14:43:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:43:59 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
14.10 14:43:59 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
14.10 14:43:59 STATS: cache [battle], database [1020 calls, 2 reads, 0 writes]
14.10 14:43:59 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 14:43:59 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:43:59 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:43:59 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:43:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:43:59 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:43:59 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:43:59 STATS: cache [user], segments [14 calls, 9 hits, 4 misses]
14.10 14:43:59 STATS: cache [user], database [1020 calls, 2 reads, 5 writes]
14.10 14:43:59 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
14.10 14:43:59 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1 ms]
14.10 14:43:59 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.24 ms]
14.10 14:43:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
14.10 14:43:59 TIME: core/cache.update : 0.44 ms
14.10 14:43:59 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:43:59 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:43:59 STATS: cache [questdata], segments [11 calls, 6 hits, 4 misses]
14.10 14:43:59 STATS: cache [questdata], database [1020 calls, 2 reads, 2 writes]
14.10 14:43:59 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
14.10 14:43:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:43:59 TIME: core/cache.update : 0.5 ms
14.10 14:43:59 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:43:59 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:43:59 TIME: core/user.logoutPost : 0.16 ms
14.10 14:43:59 TIMER: Clans cache...
14.10 14:43:59 TIMER: Clans cache: 0ms
14.10 14:43:59 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:43:59 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:46:09 BLOCKREMOVE: user 34 removed
14.10 14:46:09 BLOCKREMOVE: questdata 34 removed
14.10 14:46:59 TIMER: Clans cache...
14.10 14:46:59 TIMER: Clans cache: 0ms
14.10 14:46:59 TIMER: Clans cache...
14.10 14:46:59 TIMER: Clans cache: 0ms
14.10 14:46:59 TIMER: Clans cache...
14.10 14:46:59 TIMER: Clans cache: 0ms
14.10 14:46:59 TIMER: Clans cache...
14.10 14:46:59 TIMER: Clans cache: 0ms
14.10 14:46:59 TIMER: Clans cache...
14.10 14:46:59 TIMER: Clans cache: 0ms
14.10 14:46:59 TIMER: Clans cache...
14.10 14:46:59 TIMER: Clans cache: 0ms
14.10 14:46:59 TIMER: Clans cache...
14.10 14:46:59 TIMER: Clans cache: 0ms
14.10 14:46:59 TIMER: Clans cache...
14.10 14:46:59 TIMER: Clans cache: 0ms
14.10 14:54:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 14:54:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 14:54:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 14:54:11 TIME: core/server.query : 0.92 ms
14.10 14:54:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 14:54:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 14:54:11 TIME: core/user.isOnlineID : 0.07 ms
14.10 14:54:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 14:54:11 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:54:11 STATS: cache [user], segments [16 calls, 11 hits, 4 misses]
14.10 14:54:11 STATS: cache [user], database [1512 calls, 2 reads, 6 writes]
14.10 14:54:11 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
14.10 14:54:11 READDB: SELECT * FROM Users WHERE ID = 34
14.10 14:54:11 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.05 ms]
14.10 14:54:11 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.25 ms]
14.10 14:54:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 14:54:11 TIME: core/cache.get : 1.66 ms
14.10 14:54:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 14:54:11 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 14:54:11 STATS: cache [questdata], segments [13 calls, 8 hits, 4 misses]
14.10 14:54:11 STATS: cache [questdata], database [1512 calls, 2 reads, 3 writes]
14.10 14:54:11 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
14.10 14:54:11 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 14:54:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 14:54:11 TIME: core/cache.get : 0.97 ms
14.10 14:54:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 14:54:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 14:54:11 TIME: core/user.loginPost : 0.08 ms
14.10 14:54:17 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:54:17 DB: SELECT * FROM tournament
14.10 14:54:17 STATS: cache [tournament], get [6 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
14.10 14:54:17 STATS: cache [tournament], segments [7 calls, 2 hits, 4 misses]
14.10 14:54:17 STATS: cache [tournament], database [1518 calls, 4 reads, 1 writes]
14.10 14:54:17 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 14:54:17 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 14:54:17 DB: SELECT name FROM users WHERE id = 34
14.10 14:54:17 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 14:54:17 TIME: vdl/cache.tournament.getAvailableTournament : 2.76 ms
14.10 14:54:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 14:54:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:54:19 TIME: core/cache.update : 0.21 ms
14.10 14:54:19 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:54:22 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 14:54:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [34] }
14.10 14:54:22 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.17 ms
14.10 14:54:22 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], _type => vdl/cache.tournament.setGrid }
14.10 14:54:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 14:54:22 TIME: vdl/cache.tournament.setGrid : 0.21 ms
14.10 14:54:32 BLOCKREMOVE: tournament 1 removed
14.10 14:54:59 TIMER: Clans cache...
14.10 14:54:59 TIMER: Clans cache: 0ms
14.10 14:54:59 TIMER: Clans cache...
14.10 14:54:59 TIMER: Clans cache: 0ms
14.10 14:54:59 TIMER: Clans cache...
14.10 14:54:59 TIMER: Clans cache: 0ms
14.10 14:57:56 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 14:57:56 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 14:57:56 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 14:57:56 TIME: core/server.query : 1.09 ms
14.10 14:57:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 14:57:56 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
14.10 14:57:56 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
14.10 14:57:56 STATS: cache [battle], database [1737 calls, 3 reads, 0 writes]
14.10 14:57:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 14:57:56 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 14:57:56 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 14:57:56 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 14:57:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 14:57:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 14:57:56 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 14:57:56 STATS: cache [user], segments [19 calls, 12 hits, 6 misses]
14.10 14:57:56 STATS: cache [user], database [1737 calls, 3 reads, 7 writes]
14.10 14:57:56 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
14.10 14:57:56 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.03 ms]
14.10 14:57:56 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.24 ms]
14.10 14:57:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 14:57:56 TIME: core/cache.update : 0.7 ms
14.10 14:57:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 14:57:56 STATS: cache [questdata], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 14:57:56 STATS: cache [questdata], segments [15 calls, 8 hits, 6 misses]
14.10 14:57:56 STATS: cache [questdata], database [1737 calls, 3 reads, 3 writes]
14.10 14:57:56 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
14.10 14:57:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 14:57:56 TIME: core/cache.update : 0.51 ms
14.10 14:57:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 14:57:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 14:57:56 TIME: core/user.logoutPost : 0.14 ms
14.10 14:57:57 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 14:57:57 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 14:57:59 TIMER: Clans cache...
14.10 14:57:59 TIMER: Clans cache: 0ms
14.10 14:58:29 TIMER: Starting timer...
14.10 14:58:29 TIMER: Timer running...
14.10 14:58:29 DB: SELECT * FROM GameVars
14.10 14:58:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 14:58:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 14:58:29 DB: SELECT * FROM Shops WHERE ID = 1
14.10 14:58:29 TEMP: load ./tmp/quest_daily_ids
14.10 14:58:29 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 14:58:29 TEMP: save ./tmp/quest_daily_ids
14.10 14:58:29 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 14:58:29 QUEUE: vdl.0 (thread) response server.login
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM LocalizationStrings
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 6.88 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM GameVars
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.58 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.74 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.39 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.47 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 1.6 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 14:58:29 TIME: core/quest.getDaily : 0.03 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM UserAttributeTypes
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.4 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM UserVariableTypes
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.51 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 14:58:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.99 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM ItemGroups
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.4 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM Bundles ORDER BY ID
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.45 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.6 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 14:58:29 TIME: core/shop.getList : 0.02 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM EffectAttributeTypes
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.92 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM Effects
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.43 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 14:58:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.67 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 14:58:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.86 ms
14.10 14:58:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 14:58:29 DB: SELECT * FROM Badges
14.10 14:58:29 QUEUE: vdl.0 (thread) response core/server.query
14.10 14:58:29 TIME: core/server.query : 0.33 ms
14.10 14:58:29 TIMER: Clans cache...
14.10 14:58:29 TIMER: Clans cache: 0ms
