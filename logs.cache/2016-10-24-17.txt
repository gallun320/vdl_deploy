24.10 17:15:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 17:15:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 17:15:45 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:15:45 TIME: core/server.query : 1.48 ms
24.10 17:15:45 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 17:15:45 QUEUE: vdl.0 (thread) response core/user.isOnlineID
24.10 17:15:45 TIME: core/user.isOnlineID : 0.11 ms
24.10 17:15:45 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 17:15:45 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 17:15:45 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
24.10 17:15:45 STATS: cache [user], database [1086 calls, 0 reads, 0 writes]
24.10 17:15:45 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
24.10 17:15:45 READDB: SELECT * FROM Users WHERE ID = 76
24.10 17:15:45 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.23 ms]
24.10 17:15:45 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
24.10 17:15:45 QUEUE: vdl.0 (thread) response core/cache.get
24.10 17:15:45 TIME: core/cache.get : 3.41 ms
24.10 17:15:45 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 17:15:45 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 17:15:45 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
24.10 17:15:45 STATS: cache [questdata], database [1086 calls, 0 reads, 0 writes]
24.10 17:15:45 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
24.10 17:15:45 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 17:15:45 QUEUE: vdl.0 (thread) response core/cache.get
24.10 17:15:45 TIME: core/cache.get : 1.7 ms
24.10 17:15:45 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 17:15:45 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 17:15:45 TIME: core/user.loginPost : 0.09 ms
24.10 17:15:47 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 17:15:47 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 17:15:47 TIME: vdl/cache.user.getData : 0.12 ms
24.10 17:15:48 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
24.10 17:15:48 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
24.10 17:15:48 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 17:15:48 TIME: core/server.query : 1.26 ms
24.10 17:15:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 17:15:48 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 17:15:48 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
24.10 17:15:48 STATS: cache [battle], database [1089 calls, 0 reads, 0 writes]
24.10 17:15:48 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 17:15:48 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 17:15:48 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 17:15:48 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 135
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 17:15:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 17:15:48 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
24.10 17:15:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 17:15:48 TIME: core/cache.update : 0.23 ms
24.10 17:15:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
24.10 17:15:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 17:15:48 TIME: core/cache.update : 0.11 ms
24.10 17:15:48 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
24.10 17:15:48 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 17:15:48 TIME: core/user.logoutPost : 0.08 ms
24.10 17:15:51 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 17:15:51 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
24.10 17:16:01 BLOCKREMOVE: user 76 removed
24.10 17:16:01 BLOCKREMOVE: questdata 76 removed
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:16' OR rounddate = '2016-24-10 17:16' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:17' OR rounddate = '2016-24-10 17:17' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:18' OR rounddate = '2016-24-10 17:18' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:19' OR rounddate = '2016-24-10 17:19' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:20' OR rounddate = '2016-24-10 17:20' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:21' OR rounddate = '2016-24-10 17:21' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:22' OR rounddate = '2016-24-10 17:22' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:23' OR rounddate = '2016-24-10 17:23' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:24' OR rounddate = '2016-24-10 17:24' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:25' OR rounddate = '2016-24-10 17:25' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:16:40 TIMER: Clans cache...
24.10 17:16:40 TIMER: Clans cache: 0ms
24.10 17:16:40 TIMER: Check tournament...
24.10 17:16:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:26' OR rounddate = '2016-24-10 17:26' AND status <> 'finished'
24.10 17:16:40 TIMER: Check tournament: 0ms
24.10 17:26:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 17:26:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 17:26:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
24.10 17:26:58 TIME: core/server.query : 1.9 ms
24.10 17:26:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 17:26:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 17:26:58 TIME: core/user.isOnlineID : 0.09 ms
24.10 17:26:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 17:26:58 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 17:26:58 STATS: cache [user], segments [6 calls, 2 hits, 2 misses]
24.10 17:26:58 STATS: cache [user], database [1758 calls, 1 reads, 1 writes]
24.10 17:26:58 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 17:26:58 READDB: SELECT * FROM Users WHERE ID = 76
24.10 17:26:58 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 1.99 ms]
24.10 17:26:58 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.06 ms]
24.10 17:26:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477308408, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 76 } }
24.10 17:26:58 TIME: core/cache.get : 1.42 ms
24.10 17:26:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 17:26:58 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 17:26:58 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
24.10 17:26:58 STATS: cache [questdata], database [1758 calls, 1 reads, 1 writes]
24.10 17:26:58 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 17:26:58 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 17:26:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
24.10 17:26:58 TIME: core/cache.get : 1.24 ms
24.10 17:26:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 17:26:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 17:26:58 TIME: core/user.loginPost : 0.08 ms
24.10 17:26:59 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 17:26:59 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 17:26:59 TIME: vdl/cache.user.getData : 0.11 ms
24.10 17:27:03 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 17:27:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 17:27:03 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 17:27:03 TIME: core/server.query : 1.89 ms
24.10 17:27:03 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 17:27:03 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 17:27:03 TIME: core/user.isOnlineID : 0.07 ms
24.10 17:27:03 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 17:27:03 READDB: SELECT * FROM Users WHERE ID = 2
24.10 17:27:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 17:27:03 TIME: core/cache.get : 0.87 ms
24.10 17:27:03 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 17:27:03 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 17:27:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 17:27:03 TIME: core/cache.get : 0.59 ms
24.10 17:27:03 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 17:27:03 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 17:27:03 TIME: core/user.loginPost : 0.09 ms
24.10 17:27:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 17:27:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 17:27:05 TIME: core/cache.update : 0.12 ms
24.10 17:27:05 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 17:27:09 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 17:27:09 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 17:27:09 TIME: vdl/cache.user.getData : 0.14 ms
24.10 17:27:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 17:27:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 17:27:10 TIME: core/cache.update : 0.1 ms
24.10 17:27:10 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 17:27:40 TIMER: Clans cache...
24.10 17:27:40 TIMER: Clans cache: 0ms
24.10 17:27:40 TIMER: Check tournament...
24.10 17:27:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:27' OR rounddate = '2016-24-10 17:27' AND status <> 'finished'
24.10 17:27:40 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 17:27:40 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
24.10 17:27:40 STATS: cache [tournament], database [1800 calls, 0 reads, 0 writes]
24.10 17:27:40 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 17:27:40 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 17:27:40 DB: SELECT nextval('Battle_id_seq') AS id
24.10 17:27:40 READDB: SELECT ID FROM Battle WHERE ID = 70
24.10 17:27:40 READDB: INSERT INTO Battle (ID) VALUES (70)
24.10 17:27:40 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
24.10 17:27:40 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
24.10 17:27:40 STATS: cache [battle], database [1800 calls, 1 reads, 0 writes]
24.10 17:27:40 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 17:27:40 READDB: SELECT * FROM Battle WHERE ID = 70
24.10 17:27:40 DB: SELECT name FROM users WHERE id=2
24.10 17:27:40 DB: SELECT name FROM users WHERE id=null
24.10 17:27:40 TRACE: Check tournament timer exception:
24.10 17:27:40 TRACE: Invalid field access : name

24.10 17:27:40 TIMER: Check tournament: 48ms
24.10 17:27:45 WRITEDB: UPDATE Battle SET secondid = E'null', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 70
24.10 17:27:50 BLOCKREMOVE: tournament 1 removed
24.10 17:27:55 BLOCKREMOVE: battle 70 removed
24.10 17:28:40 TIMER: Clans cache...
24.10 17:28:40 TIMER: Clans cache: 0ms
24.10 17:28:40 TIMER: Check tournament...
24.10 17:28:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:28' OR rounddate = '2016-24-10 17:28' AND status <> 'finished'
24.10 17:28:40 TIMER: Check tournament: 0ms
24.10 17:28:40 TIMER: Clans cache...
24.10 17:28:40 TIMER: Clans cache: 0ms
24.10 17:28:40 TIMER: Check tournament...
24.10 17:28:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:29' OR rounddate = '2016-24-10 17:29' AND status <> 'finished'
24.10 17:28:40 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 17:28:40 STATS: cache [tournament], segments [2 calls, 0 hits, 1 misses]
24.10 17:28:40 STATS: cache [tournament], database [1920 calls, 1 reads, 0 writes]
24.10 17:28:40 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 17:28:40 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 17:28:40 DB: SELECT nextval('Battle_id_seq') AS id
24.10 17:28:40 READDB: SELECT ID FROM Battle WHERE ID = 71
24.10 17:28:40 READDB: INSERT INTO Battle (ID) VALUES (71)
24.10 17:28:40 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 1 not found]
24.10 17:28:40 STATS: cache [battle], segments [5 calls, 2 hits, 2 misses]
24.10 17:28:40 STATS: cache [battle], database [1921 calls, 2 reads, 1 writes]
24.10 17:28:40 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 17:28:40 READDB: SELECT * FROM Battle WHERE ID = 71
24.10 17:28:40 DB: SELECT name FROM users WHERE id=2
24.10 17:28:40 DB: SELECT name FROM users WHERE id=null
24.10 17:28:40 TRACE: Check tournament timer exception:
24.10 17:28:40 TRACE: Invalid field access : name

24.10 17:28:40 TIMER: Check tournament: 55ms
24.10 17:29:46 WRITEDB: UPDATE Battle SET secondid = E'null', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 71
24.10 17:29:50 BLOCKREMOVE: tournament 1 removed
24.10 17:29:56 BLOCKREMOVE: battle 71 removed
24.10 17:30:40 TIMER: Clans cache...
24.10 17:30:40 TIMER: Clans cache: 0ms
24.10 17:30:40 TIMER: Check tournament...
24.10 17:30:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:30' OR rounddate = '2016-24-10 17:30' AND status <> 'finished'
24.10 17:30:40 TIMER: Check tournament: 0ms
24.10 17:30:40 TIMER: Clans cache...
24.10 17:30:40 TIMER: Clans cache: 0ms
24.10 17:30:40 TIMER: Check tournament...
24.10 17:30:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:31' OR rounddate = '2016-24-10 17:31' AND status <> 'finished'
24.10 17:30:40 TIMER: Check tournament: 0ms
24.10 17:32:09 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 17:32:09 DB: SELECT * FROM tournament
24.10 17:32:09 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 17:32:09 STATS: cache [tournament], segments [3 calls, 0 hits, 2 misses]
24.10 17:32:09 STATS: cache [tournament], database [2070 calls, 2 reads, 0 writes]
24.10 17:32:09 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 17:32:09 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 17:32:09 DB: SELECT name FROM users WHERE id = 2
24.10 17:32:09 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [69], round => 1, id => 1, status => starting, userList => [{ name => test1, id => 2 }], battleActive => [], rounddate => 2016-24-10 17:34, startdate => 2016-24-10 17:34 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 17:32:09 TIME: vdl/cache.tournament.getAvailableTournament : 2.14 ms
24.10 17:32:15 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 76, tournament => 1, _type => vdl/cache.tournament.addUsers }
24.10 17:32:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
24.10 17:32:15 TIME: vdl/cache.tournament.addUsers : 0.11 ms
24.10 17:32:15 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 17:32:15 DB: SELECT * FROM tournament
24.10 17:32:15 DB: SELECT name FROM users WHERE id = 2
24.10 17:32:15 DB: SELECT name FROM users WHERE id = 76
24.10 17:32:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [69], round => 1, id => 1, status => starting, userList => [{ name => test1, id => 2 },{ name => Aimer, id => 76 }], battleActive => [], rounddate => 2016-24-10 17:34, startdate => 2016-24-10 17:34 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 17:32:15 TIME: vdl/cache.tournament.getAvailableTournament : 1.6 ms
24.10 17:32:16 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 17:34', roundinterval = E'60', params = E'{"params":{"battleFinished":[69],"usersList":[2,76],"battleActive":[]}}', rounddate = E'2016-24-10 17:34' WHERE ID = 1
24.10 17:32:16 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 17:32:16 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [2,76] }
24.10 17:32:16 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.11 ms
24.10 17:32:16 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 17:32:16 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 17:32:16 TIME: vdl/cache.tournament.setGrid : 0.1 ms
24.10 17:32:27 BLOCKREMOVE: tournament 1 removed
24.10 17:32:40 TIMER: Clans cache...
24.10 17:32:40 TIMER: Clans cache: 0ms
24.10 17:32:40 TIMER: Check tournament...
24.10 17:32:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:32' OR rounddate = '2016-24-10 17:32' AND status <> 'finished'
24.10 17:32:40 TIMER: Check tournament: 1ms
24.10 17:32:40 TIMER: Clans cache...
24.10 17:32:40 TIMER: Clans cache: 0ms
24.10 17:32:40 TIMER: Check tournament...
24.10 17:32:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:33' OR rounddate = '2016-24-10 17:33' AND status <> 'finished'
24.10 17:32:40 TIMER: Check tournament: 0ms
24.10 17:32:40 TIMER: Clans cache...
24.10 17:32:40 TIMER: Clans cache: 0ms
24.10 17:32:40 TIMER: Check tournament...
24.10 17:32:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:34' OR rounddate = '2016-24-10 17:34' AND status <> 'finished'
24.10 17:32:40 STATS: cache [tournament], get [7 calls, 3 cache hits, 3 cache misses, 0 same version, 0 not found]
24.10 17:32:40 STATS: cache [tournament], segments [9 calls, 5 hits, 3 misses]
24.10 17:32:40 STATS: cache [tournament], database [2220 calls, 3 reads, 1 writes]
24.10 17:32:40 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 17:32:40 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 17:32:40 DB: SELECT nextval('Battle_id_seq') AS id
24.10 17:32:40 READDB: SELECT ID FROM Battle WHERE ID = 72
24.10 17:32:40 READDB: INSERT INTO Battle (ID) VALUES (72)
24.10 17:32:40 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 1 not found]
24.10 17:32:40 STATS: cache [battle], segments [8 calls, 4 hits, 3 misses]
24.10 17:32:40 STATS: cache [battle], database [2221 calls, 3 reads, 2 writes]
24.10 17:32:40 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 17:32:40 READDB: SELECT * FROM Battle WHERE ID = 72
24.10 17:32:40 DB: SELECT name FROM users WHERE id=76
24.10 17:32:40 DB: SELECT name FROM users WHERE id=2
24.10 17:32:40 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 17:34, id => 76, enemy.num => 2, battleId => 72, player => 1 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 17:32:40 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 17:34, id => 2, enemy.num => 1, battleId => 72, player => 2 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 17:32:40 TIMER: Check tournament: 119ms
24.10 17:34:45 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 17:34', roundinterval = E'60', params = E'{"params":{"battleFinished":[69],"usersList":[2,76],"battleActive":[72]}}', rounddate = E'2016-24-10 17:34' WHERE ID = 1
24.10 17:34:46 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'76', finished = E'false', firstid = E'76', params = E'{}', avaliable = E'false' WHERE ID = 72
24.10 17:34:51 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 72, _type => vdl/cache.battle.infoRoom }
24.10 17:34:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 76 }
24.10 17:34:51 TIME: vdl/cache.battle.infoRoom : 0.1 ms
24.10 17:34:55 BLOCKREMOVE: tournament 1 removed
24.10 17:35:01 BLOCKREMOVE: battle 72 removed
24.10 17:35:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 72, _type => vdl/cache.battle.infoRoom }
24.10 17:35:15 READDB: SELECT * FROM Battle WHERE ID = 72
24.10 17:35:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 76 }
24.10 17:35:15 TIME: vdl/cache.battle.infoRoom : 1.09 ms
24.10 17:35:25 BLOCKREMOVE: battle 72 removed
24.10 17:38:53 TIMER: Starting timer...
24.10 17:38:53 TIMER: Timer running...
24.10 17:38:53 DB: SELECT * FROM GameVars
24.10 17:38:53 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 17:38:53 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 17:38:53 DB: SELECT * FROM Shops WHERE ID = 1
24.10 17:38:53 TEMP: load ./tmp/quest_daily_ids
24.10 17:38:53 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 17:38:53 TEMP: save ./tmp/quest_daily_ids
24.10 17:38:53 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 17:38:53 QUEUE: vdl.0 (thread) response server.login
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM LocalizationStrings
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 10.92 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM GameVars
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.63 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.89 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.59 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.96 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 1.65 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 17:38:53 TIME: core/quest.getDaily : 0.04 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM UserAttributeTypes
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.76 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM UserVariableTypes
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.95 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 17:38:53 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 2.21 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM ItemGroups
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.63 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM Bundles ORDER BY ID
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 1.15 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM BundleItems ORDER BY ID
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.87 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/shop.getList
24.10 17:38:53 TIME: core/shop.getList : 0.04 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM EffectAttributeTypes
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.54 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM Effects
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.71 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
24.10 17:38:53 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 1.3 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
24.10 17:38:53 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 1.2 ms
24.10 17:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
24.10 17:38:53 DB: SELECT * FROM Badges
24.10 17:38:53 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:38:53 TIME: core/server.query : 0.66 ms
24.10 17:39:36 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 17:39:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 17:39:36 QUEUE: vdl.0 (thread) response core/server.query
24.10 17:39:36 TIME: core/server.query : 1.88 ms
24.10 17:39:36 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 17:39:36 QUEUE: vdl.0 (thread) response core/user.isOnlineID
24.10 17:39:36 TIME: core/user.isOnlineID : 0.04 ms
24.10 17:39:36 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 17:39:36 READDB: SELECT * FROM Users WHERE ID = 76
24.10 17:39:36 QUEUE: vdl.0 (thread) response core/cache.get
24.10 17:39:36 TIME: core/cache.get : 2.45 ms
24.10 17:39:36 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 17:39:36 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 17:39:36 QUEUE: vdl.0 (thread) response core/cache.get
24.10 17:39:36 TIME: core/cache.get : 1.07 ms
24.10 17:39:36 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 17:39:36 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 17:39:36 TIME: core/user.loginPost : 0.12 ms
24.10 17:39:38 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 17:39:38 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 17:39:38 TIME: vdl/cache.user.getData : 0.19 ms
24.10 17:39:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 17:39:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 17:39:43 TIME: core/cache.update : 0.1 ms
24.10 17:39:44 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 17:39:53 TIMER: Clans cache...
24.10 17:39:53 TIMER: Clans cache: 0ms
24.10 17:39:53 TIMER: Check tournament...
24.10 17:39:53 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:39' OR rounddate = '2016-24-10 17:39' AND status <> 'finished'
24.10 17:39:53 TIMER: Check tournament: 1ms
24.10 17:40:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 17:40:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 17:40:09 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 17:40:09 TIME: core/server.query : 1.85 ms
24.10 17:40:09 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 17:40:09 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 17:40:09 TIME: core/user.isOnlineID : 0.05 ms
24.10 17:40:09 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 17:40:09 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 17:40:09 STATS: cache [user], segments [5 calls, 1 hits, 2 misses]
24.10 17:40:09 STATS: cache [user], database [77 calls, 1 reads, 1 writes]
24.10 17:40:09 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 17:40:09 READDB: SELECT * FROM Users WHERE ID = 2
24.10 17:40:09 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 1.39 ms]
24.10 17:40:09 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.03 ms]
24.10 17:40:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 17:40:09 TIME: core/cache.get : 1.02 ms
24.10 17:40:09 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 17:40:09 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 17:40:09 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
24.10 17:40:09 STATS: cache [questdata], database [77 calls, 1 reads, 0 writes]
24.10 17:40:09 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 17:40:09 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 17:40:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 17:40:09 TIME: core/cache.get : 0.59 ms
24.10 17:40:09 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 17:40:09 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 17:40:09 TIME: core/user.loginPost : 0.09 ms
24.10 17:40:15 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 17:40:15 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 17:40:15 TIME: vdl/cache.user.getData : 0.12 ms
24.10 17:40:18 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 17:40:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 17:40:18 TIME: core/cache.update : 0.12 ms
24.10 17:40:19 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 17:40:53 TIMER: Clans cache...
24.10 17:40:53 TIMER: Clans cache: 0ms
24.10 17:40:53 TIMER: Check tournament...
24.10 17:40:53 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:40' OR rounddate = '2016-24-10 17:40' AND status <> 'finished'
24.10 17:40:53 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 17:40:53 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
24.10 17:40:53 STATS: cache [tournament], database [120 calls, 0 reads, 0 writes]
24.10 17:40:53 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 17:40:53 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 17:40:53 DB: SELECT nextval('Battle_id_seq') AS id
24.10 17:40:53 READDB: SELECT ID FROM Battle WHERE ID = 73
24.10 17:40:53 READDB: INSERT INTO Battle (ID) VALUES (73)
24.10 17:40:53 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 17:40:53 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
24.10 17:40:53 STATS: cache [battle], database [121 calls, 0 reads, 0 writes]
24.10 17:40:53 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 17:40:53 READDB: SELECT * FROM Battle WHERE ID = 73
24.10 17:40:53 DB: SELECT name FROM users WHERE id=76
24.10 17:40:53 DB: SELECT name FROM users WHERE id=2
24.10 17:40:53 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 17:40, id => 76, enemy.num => 2, battleId => 73, player => 1 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 17:40:53 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 17:40, id => 2, enemy.num => 1, battleId => 73, player => 2 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 17:40:53 TIMER: Check tournament: 60ms
24.10 17:40:58 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 17:40', roundinterval = E'60', params = E'{"params":{"battleFinished":[69],"usersList":[2,76],"battleActive":[73]}}', rounddate = E'2016-24-10 17:40' WHERE ID = 1
24.10 17:40:59 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'76', finished = E'false', firstid = E'76', params = E'{}', avaliable = E'false' WHERE ID = 73
24.10 17:41:03 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 17:41:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [73]
24.10 17:41:03 TIME: vdl/cache.tournament.getBattlesTournaments : 0.14 ms
24.10 17:41:03 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 17:41:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [2,76] }
24.10 17:41:03 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.11 ms
24.10 17:41:03 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 73, _type => vdl/cache.battle.finishRoom }
24.10 17:41:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 17:41:03 TIME: vdl/cache.battle.finishRoom : 0.12 ms
24.10 17:41:03 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 73, _type => vdl/cache.battle.deleteRoom }
24.10 17:41:03 ROOM: deleted room 73
24.10 17:41:03 DB: DELETE FROM Battle WHERE ID = 73
24.10 17:41:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 17:41:03 TIME: vdl/cache.battle.deleteRoom : 11.86 ms
24.10 17:41:03 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [73] }
24.10 17:41:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
24.10 17:41:03 TIME: vdl/cache.tournament.setBattlesTournaments : 0.21 ms
24.10 17:41:03 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [76], _type => vdl/cache.tournament.setUsersTournament }
24.10 17:41:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
24.10 17:41:03 TIME: vdl/cache.tournament.setUsersTournament : 0.09 ms
24.10 17:41:03 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 76, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 17:41:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 76, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 17:41:03 TIME: vdl/cache.tournament.setGrid : 0.12 ms
24.10 17:41:03 NET: vdl.0 (thread) request vdl/cache.tournament.finish { tournamentId => 1, _type => vdl/cache.tournament.finish }
24.10 17:41:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
24.10 17:41:03 TIME: vdl/cache.tournament.finish : 0.12 ms
24.10 17:41:04 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'76', finished = E'true', firstid = E'76', params = E'{}', avaliable = E'false' WHERE ID = 73
24.10 17:41:04 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'finished', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 17:40', roundinterval = E'60', params = E'{"params":{"battleFinished":[69,73],"usersList":[76],"battleActive":[]}}', rounddate = E'2016-24-10 17:40' WHERE ID = 1
24.10 17:41:14 BLOCKREMOVE: battle 73 removed
24.10 17:41:14 BLOCKREMOVE: tournament 1 removed
