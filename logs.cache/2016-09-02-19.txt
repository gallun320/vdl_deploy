02.09 19:00:56 TIMER: Starting timer...
02.09 19:00:56 TIMER: Timer running...
02.09 19:00:56 DB: SELECT * FROM GameVars
02.09 19:00:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 19:00:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 19:00:56 DB: SELECT * FROM Shops WHERE ID = 1
02.09 19:00:56 TEMP: load ./tmp/quest_daily_ids
02.09 19:00:56 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 19:00:56 TEMP: save ./tmp/quest_daily_ids
02.09 19:00:56 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 19:00:56 QUEUE: vdl.0 (thread) response server.login
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM LocalizationStrings
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 14.36 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM GameVars
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 1.21 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 1.5 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 1.01 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 1.14 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 1.57 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 19:00:56 TIME: core/quest.getDaily : 0.03 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM UserAttributeTypes
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 0.67 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM UserVariableTypes
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 0.51 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 19:00:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 1.43 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM ItemGroups
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 0.56 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM Bundles ORDER BY ID
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 0.81 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 0.59 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 19:00:56 TIME: core/shop.getList : 0.04 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM EffectAttributeTypes
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 0.59 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM Effects
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 0.7 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 19:00:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 1.02 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 19:00:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 1.05 ms
02.09 19:00:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 19:00:56 DB: SELECT * FROM Badges
02.09 19:00:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:00:56 TIME: core/server.query : 0.52 ms
02.09 19:00:56 TIMER: Clans cache...
02.09 19:00:56 TIMER: Clans cache: 0ms
02.09 19:00:56 TIMER: Clans cache...
02.09 19:00:56 TIMER: Clans cache: 0ms
02.09 19:00:56 TIMER: Clans cache...
02.09 19:00:56 TIMER: Clans cache: 0ms
02.09 19:04:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 19:04:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 19:04:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:04:37 TIME: core/server.query : 2.77 ms
02.09 19:04:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 19:04:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 19:04:37 TIME: core/user.isOnlineID : 0.09 ms
02.09 19:04:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 19:04:37 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:04:37 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 19:04:37 STATS: cache [user], database [222 calls, 0 reads, 0 writes]
02.09 19:04:37 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 19:04:37 READDB: SELECT * FROM Users WHERE ID = 3
02.09 19:04:37 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.22 ms]
02.09 19:04:37 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 19:04:37 QUEUE: vdl.0 (thread) response core/cache.get
02.09 19:04:37 TIME: core/cache.get : 4.42 ms
02.09 19:04:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 19:04:37 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:04:37 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 19:04:37 STATS: cache [questdata], database [222 calls, 0 reads, 0 writes]
02.09 19:04:37 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 19:04:37 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 19:04:37 QUEUE: vdl.0 (thread) response core/cache.get
02.09 19:04:37 TIME: core/cache.get : 1.52 ms
02.09 19:04:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 19:04:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 19:04:37 TIME: core/user.loginPost : 0.12 ms
02.09 19:04:37 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 19:04:37 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 19:04:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 19:04:37 TIME: vdl/cache.battle.find : 1.07 ms
02.09 19:04:37 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
02.09 19:04:37 DB: SELECT nextval('Battle_id_seq') AS id
02.09 19:04:37 READDB: SELECT ID FROM Battle WHERE ID = 37
02.09 19:04:37 READDB: INSERT INTO Battle (ID) VALUES (37)
02.09 19:04:37 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:04:37 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.09 19:04:37 STATS: cache [battle], database [222 calls, 0 reads, 0 writes]
02.09 19:04:37 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:04:37 READDB: SELECT * FROM Battle WHERE ID = 37
02.09 19:04:37 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.04 ms]
02.09 19:04:37 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 19:04:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 37, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 19:04:37 TIME: vdl/cache.battle.create : 30.23 ms
02.09 19:04:43 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 37
02.09 19:04:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 19:04:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:04:46 TIME: core/cache.update : 0.14 ms
02.09 19:04:47 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 19:04:56 TIMER: Clans cache...
02.09 19:04:56 TIMER: Clans cache: 0ms
02.09 19:05:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 19:05:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 19:05:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
02.09 19:05:11 TIME: core/server.query : 2.46 ms
02.09 19:05:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 19:05:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 19:05:11 TIME: core/user.isOnlineID : 0.1 ms
02.09 19:05:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 19:05:11 READDB: SELECT * FROM Users WHERE ID = 2
02.09 19:05:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472829608, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 2 } }
02.09 19:05:11 TIME: core/cache.get : 1.58 ms
02.09 19:05:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 19:05:11 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 19:05:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
02.09 19:05:11 TIME: core/cache.get : 1.01 ms
02.09 19:05:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 19:05:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 19:05:11 TIME: core/user.loginPost : 0.12 ms
02.09 19:05:11 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 19:05:11 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 19:05:11 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 19:05:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 37, first => 3 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 19:05:11 TIME: vdl/cache.battle.find : 2.77 ms
02.09 19:05:11 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 37, selfId => 2, _type => vdl/cache.battle.join }
02.09 19:05:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 37, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 19:05:11 TIME: vdl/cache.battle.join : 0.14 ms
02.09 19:05:11 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 19:05:11 DB: SELECT name FROM users WHERE id=2
02.09 19:05:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 19:05:11 TIME: core/server.query : 2.28 ms
02.09 19:05:11 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 19:05:11 DB: SELECT name FROM users WHERE id=3
02.09 19:05:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 19:05:11 TIME: core/server.query : 0.84 ms
02.09 19:05:12 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 37
02.09 19:05:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 19:05:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:05:21 TIME: core/cache.update : 0.17 ms
02.09 19:05:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 37, _type => vdl/cache.battle.infoRoom }
02.09 19:05:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:05:21 TIME: vdl/cache.battle.infoRoom : 0.13 ms
02.09 19:05:22 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 19:05:56 TIMER: Clans cache...
02.09 19:05:56 TIMER: Clans cache: 0ms
02.09 19:05:56 TIMER: Clans cache...
02.09 19:05:56 TIMER: Clans cache: 0ms
02.09 19:05:56 TIMER: Clans cache...
02.09 19:05:56 TIMER: Clans cache: 0ms
02.09 19:05:56 TIMER: Clans cache...
02.09 19:05:56 TIMER: Clans cache: 0ms
02.09 19:05:56 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
02.09 19:05:56 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
02.09 19:05:56 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 37 }, { id => 36 }}, errorCode => ok, _type => core/server.query }
02.09 19:05:56 TIME: core/server.query : 2.01 ms
02.09 19:05:56 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 36, _type => vdl/cache.battle.deleteRoom }
02.09 19:05:56 ROOM: deleted room 36
02.09 19:05:56 STATS: cache [battle], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 19:05:56 STATS: cache [battle], segments [6 calls, 3 hits, 2 misses]
02.09 19:05:56 STATS: cache [battle], database [480 calls, 1 reads, 2 writes]
02.09 19:05:56 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:05:56 DB: DELETE FROM Battle WHERE ID = 36
02.09 19:05:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 19:05:56 TIME: vdl/cache.battle.deleteRoom : 24.24 ms
02.09 19:05:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 19:05:56 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 19:05:56 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
02.09 19:05:56 STATS: cache [user], database [480 calls, 2 reads, 2 writes]
02.09 19:05:56 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 19:05:56 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.94 ms]
02.09 19:05:56 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.1 ms]
02.09 19:05:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 19:05:56 TIME: core/cache.update : 0.36 ms
02.09 19:05:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 19:05:56 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 19:05:56 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
02.09 19:05:56 STATS: cache [questdata], database [480 calls, 2 reads, 0 writes]
02.09 19:05:56 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 19:05:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:05:56 TIME: core/cache.update : 0.4 ms
02.09 19:05:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 19:05:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 19:05:56 TIME: core/user.logoutPost : 0.1 ms
02.09 19:05:56 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 19:05:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 19:09:06 BLOCKREMOVE: user 2 removed
02.09 19:09:06 BLOCKREMOVE: questdata 2 removed
02.09 19:10:35 TIMER: Starting timer...
02.09 19:10:35 TIMER: Timer running...
02.09 19:10:35 DB: SELECT * FROM GameVars
02.09 19:10:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 19:10:35 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 19:10:35 DB: SELECT * FROM Shops WHERE ID = 1
02.09 19:10:35 TEMP: load ./tmp/quest_daily_ids
02.09 19:10:35 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 19:10:35 TEMP: save ./tmp/quest_daily_ids
02.09 19:10:35 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 19:10:35 QUEUE: vdl.0 (thread) response server.login
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM LocalizationStrings
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 7.96 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM GameVars
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.47 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.58 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.39 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.51 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.72 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 19:10:35 TIME: core/quest.getDaily : 0.03 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM UserAttributeTypes
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.31 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM UserVariableTypes
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.3 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 19:10:35 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.92 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM ItemGroups
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.41 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM Bundles ORDER BY ID
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.41 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.52 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 19:10:35 TIME: core/shop.getList : 0.02 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM EffectAttributeTypes
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.3 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM Effects
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.29 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 19:10:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.89 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 19:10:35 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.71 ms
02.09 19:10:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 19:10:35 DB: SELECT * FROM Badges
02.09 19:10:35 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:10:35 TIME: core/server.query : 0.3 ms
02.09 19:10:35 TIMER: Clans cache...
02.09 19:10:35 TIMER: Clans cache: 0ms
02.09 19:10:35 TIMER: Clans cache...
02.09 19:10:35 TIMER: Clans cache: 0ms
02.09 19:13:04 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 19:13:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 19:13:04 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:13:04 TIME: core/server.query : 2.54 ms
02.09 19:13:04 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 19:13:04 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 19:13:04 TIME: core/user.isOnlineID : 0.1 ms
02.09 19:13:04 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 19:13:04 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:13:04 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 19:13:04 STATS: cache [user], database [150 calls, 0 reads, 0 writes]
02.09 19:13:04 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 19:13:04 READDB: SELECT * FROM Users WHERE ID = 3
02.09 19:13:04 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.27 ms]
02.09 19:13:04 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 19:13:04 QUEUE: vdl.0 (thread) response core/cache.get
02.09 19:13:04 TIME: core/cache.get : 4.59 ms
02.09 19:13:04 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 19:13:04 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:13:04 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 19:13:04 STATS: cache [questdata], database [150 calls, 0 reads, 0 writes]
02.09 19:13:04 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 19:13:04 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 19:13:04 QUEUE: vdl.0 (thread) response core/cache.get
02.09 19:13:04 TIME: core/cache.get : 1.85 ms
02.09 19:13:04 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 19:13:04 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 19:13:04 TIME: core/user.loginPost : 0.21 ms
02.09 19:13:05 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 19:13:05 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 19:13:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 19:13:05 TIME: vdl/cache.battle.find : 1.93 ms
02.09 19:13:05 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
02.09 19:13:05 DB: SELECT nextval('Battle_id_seq') AS id
02.09 19:13:05 READDB: SELECT ID FROM Battle WHERE ID = 38
02.09 19:13:05 READDB: INSERT INTO Battle (ID) VALUES (38)
02.09 19:13:05 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:13:05 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.09 19:13:05 STATS: cache [battle], database [150 calls, 0 reads, 0 writes]
02.09 19:13:05 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:13:05 READDB: SELECT * FROM Battle WHERE ID = 38
02.09 19:13:05 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.37 ms]
02.09 19:13:05 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 19:13:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 38, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 19:13:05 TIME: vdl/cache.battle.create : 39.31 ms
02.09 19:13:10 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 38
02.09 19:13:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 19:13:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:13:10 TIME: core/cache.update : 0.14 ms
02.09 19:13:11 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 19:13:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 19:13:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 19:13:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
02.09 19:13:30 TIME: core/server.query : 2.91 ms
02.09 19:13:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 19:13:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 19:13:30 TIME: core/user.isOnlineID : 0.11 ms
02.09 19:13:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 19:13:30 READDB: SELECT * FROM Users WHERE ID = 2
02.09 19:13:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472829608, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 2 } }
02.09 19:13:30 TIME: core/cache.get : 1.74 ms
02.09 19:13:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 19:13:30 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 19:13:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
02.09 19:13:30 TIME: core/cache.get : 0.95 ms
02.09 19:13:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 19:13:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 19:13:30 TIME: core/user.loginPost : 0.16 ms
02.09 19:13:32 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 19:13:32 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 19:13:32 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 19:13:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 38, first => 3 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 19:13:32 TIME: vdl/cache.battle.find : 2.82 ms
02.09 19:13:32 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 38, selfId => 2, _type => vdl/cache.battle.join }
02.09 19:13:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 38, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 19:13:32 TIME: vdl/cache.battle.join : 0.2 ms
02.09 19:13:32 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 19:13:32 DB: SELECT name FROM users WHERE id=2
02.09 19:13:32 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 19:13:32 TIME: core/server.query : 2.18 ms
02.09 19:13:32 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 19:13:32 DB: SELECT name FROM users WHERE id=3
02.09 19:13:32 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 19:13:32 TIME: core/server.query : 1.1 ms
02.09 19:13:32 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 38
02.09 19:13:35 TIMER: Clans cache...
02.09 19:13:35 TIMER: Clans cache: 0ms
02.09 19:13:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 38, _type => vdl/cache.battle.infoRoom }
02.09 19:13:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:13:36 TIME: vdl/cache.battle.infoRoom : 0.21 ms
02.09 19:13:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 19:13:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:13:40 TIME: core/cache.update : 0.17 ms
02.09 19:13:41 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 19:14:35 TIMER: Clans cache...
02.09 19:14:35 TIMER: Clans cache: 0ms
02.09 19:14:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 38, _type => vdl/cache.battle.infoRoom }
02.09 19:14:42 STATS: cache [battle], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 19:14:42 STATS: cache [battle], segments [6 calls, 3 hits, 2 misses]
02.09 19:14:42 STATS: cache [battle], database [247 calls, 1 reads, 2 writes]
02.09 19:14:42 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:14:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:14:42 TIME: vdl/cache.battle.infoRoom : 0.32 ms
02.09 19:14:42 NET: vdl.0 (thread) request core/server.query { q => INSERT INTO statistics VALUES ('', 3,2,38,{ scoresSecond => null, scoresFirst => null }), _type => core/server.query }
02.09 19:14:42 DB: INSERT INTO statistics VALUES ('', 3,2,38,{ scoresSecond => null, scoresFirst => null })
02.09 19:14:42 QUEUE: vdl.0 (thread) response core/server.query { errorCode => ok, _type => core/server.query }
02.09 19:14:42 TIME: core/server.query : 43 ms
02.09 19:14:42 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 38, _type => vdl/cache.battle.finishRoom }
02.09 19:14:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => true, _type => vdl/cache.battle.finishRoom }
02.09 19:14:42 TIME: vdl/cache.battle.finishRoom : 0.11 ms
02.09 19:14:42 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 38, _type => vdl/cache.battle.deleteRoom }
02.09 19:14:42 ROOM: deleted room 38
02.09 19:14:42 DB: DELETE FROM Battle WHERE ID = 38
02.09 19:14:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 19:14:42 TIME: vdl/cache.battle.deleteRoom : 16.44 ms
02.09 19:14:42 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'true', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 38
02.09 19:14:52 BLOCKREMOVE: battle 38 removed
02.09 19:15:35 TIMER: Clans cache...
02.09 19:15:35 TIMER: Clans cache: 0ms
02.09 19:15:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 38, _type => vdl/cache.battle.infoRoom }
02.09 19:15:48 STATS: cache [battle], get [5 calls, 3 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 19:15:48 STATS: cache [battle], segments [10 calls, 7 hits, 2 misses]
02.09 19:15:48 STATS: cache [battle], database [314 calls, 1 reads, 3 writes]
02.09 19:15:48 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:15:48 READDB: SELECT * FROM Battle WHERE ID = 38
02.09 19:15:48 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
02.09 19:15:48 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 85
Called from modules/VDLCache.hx line 78
Called from modules/VDLCache.hx line 63
Called from snipe/cache/CacheServer.hx line 487
02.09 19:15:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
02.09 19:16:35 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
02.09 19:16:35 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
02.09 19:16:35 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 37 }}, errorCode => ok, _type => core/server.query }
02.09 19:16:35 TIME: core/server.query : 2.07 ms
02.09 19:16:35 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 37, _type => vdl/cache.battle.deleteRoom }
02.09 19:16:35 ROOM: deleted room 37
02.09 19:16:35 DB: DELETE FROM Battle WHERE ID = 37
02.09 19:16:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 19:16:35 TIME: vdl/cache.battle.deleteRoom : 20.72 ms
02.09 19:16:35 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 19:16:35 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 19:16:35 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
02.09 19:16:35 STATS: cache [user], database [360 calls, 2 reads, 2 writes]
02.09 19:16:35 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 19:16:35 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.07 ms]
02.09 19:16:35 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.13 ms]
02.09 19:16:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 19:16:35 TIME: core/cache.update : 0.59 ms
02.09 19:16:35 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 19:16:35 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 19:16:35 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
02.09 19:16:35 STATS: cache [questdata], database [360 calls, 2 reads, 0 writes]
02.09 19:16:35 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 19:16:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:16:35 TIME: core/cache.update : 0.49 ms
02.09 19:16:35 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 19:16:35 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 19:16:35 TIME: core/user.logoutPost : 0.13 ms
02.09 19:16:35 TIMER: Clans cache...
02.09 19:16:35 TIMER: Clans cache: 0ms
02.09 19:16:35 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 19:16:35 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 19:16:45 BLOCKREMOVE: user 2 removed
02.09 19:16:45 BLOCKREMOVE: questdata 2 removed
02.09 19:17:35 TIMER: Clans cache...
02.09 19:17:35 TIMER: Clans cache: 0ms
02.09 19:17:49 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.09 19:17:49 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.09 19:17:49 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.09 19:17:49 TIME: core/server.query : 2.34 ms
02.09 19:17:49 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
02.09 19:17:49 ROOM: deleted room 0
02.09 19:17:49 STATS: cache [battle], get [5 calls, 3 cache hits, 2 cache misses, 0 same version, 1 not found]
02.09 19:17:49 STATS: cache [battle], segments [12 calls, 7 hits, 4 misses]
02.09 19:17:49 STATS: cache [battle], database [434 calls, 2 reads, 3 writes]
02.09 19:17:49 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:17:49 DB: DELETE FROM Battle WHERE ID = 0
02.09 19:17:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 19:17:49 TIME: vdl/cache.battle.deleteRoom : 1.5 ms
02.09 19:17:49 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.09 19:17:49 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 19:17:49 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
02.09 19:17:49 STATS: cache [user], database [434 calls, 2 reads, 3 writes]
02.09 19:17:49 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 19:17:49 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.07 ms]
02.09 19:17:49 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.23 ms]
02.09 19:17:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 19:17:49 TIME: core/cache.update : 0.67 ms
02.09 19:17:49 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.09 19:17:49 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 19:17:49 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
02.09 19:17:49 STATS: cache [questdata], database [434 calls, 2 reads, 1 writes]
02.09 19:17:49 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 19:17:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:17:49 TIME: core/cache.update : 0.5 ms
02.09 19:17:49 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.09 19:17:49 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 19:17:49 TIME: core/user.logoutPost : 0.21 ms
02.09 19:17:49 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 19:17:49 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.09 19:24:20 TIMER: Starting timer...
02.09 19:24:20 TIMER: Timer running...
02.09 19:24:20 DB: SELECT * FROM GameVars
02.09 19:24:20 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 19:24:20 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 19:24:20 DB: SELECT * FROM Shops WHERE ID = 1
02.09 19:24:20 TEMP: load ./tmp/quest_daily_ids
02.09 19:24:20 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 19:24:20 TEMP: save ./tmp/quest_daily_ids
02.09 19:24:20 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 19:24:20 QUEUE: vdl.0 (thread) response server.login
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 19:24:20 DB: SELECT * FROM LocalizationStrings
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:24:20 TIME: core/server.query : 6.11 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 19:24:20 DB: SELECT * FROM GameVars
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:24:20 TIME: core/server.query : 0.53 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 19:24:20 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:24:20 TIME: core/server.query : 0.59 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 19:24:20 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:24:20 TIME: core/server.query : 0.48 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 19:24:20 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:24:20 TIME: core/server.query : 0.5 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 19:24:20 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:24:20 TIME: core/server.query : 0.81 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 19:24:20 TIME: core/quest.getDaily : 0.02 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 19:24:20 DB: SELECT * FROM UserAttributeTypes
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:24:20 TIME: core/server.query : 0.29 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 19:24:20 DB: SELECT * FROM UserVariableTypes
02.09 19:24:20 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:24:20 TIME: core/server.query : 0.27 ms
02.09 19:24:20 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 19:24:20 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.02.09 19:25:38 TIMER: Starting timer...
02.09 19:25:38 TIMER: Timer running...
02.09 19:25:38 DB: SELECT * FROM GameVars
02.09 19:25:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 19:25:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 19:25:38 DB: SELECT * FROM Shops WHERE ID = 1
02.09 19:25:38 TEMP: load ./tmp/quest_daily_ids
02.09 19:25:38 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 19:25:38 TEMP: save ./tmp/quest_daily_ids
02.09 19:25:38 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 19:25:38 QUEUE: vdl.0 (thread) response server.login
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM LocalizationStrings
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 8.43 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM GameVars
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.96 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 1.19 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.79 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.53 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.78 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 19:25:38 TIME: core/quest.getDaily : 0.03 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM UserAttributeTypes
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.35 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM UserVariableTypes
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.44 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 19:25:38 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 1 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM ItemGroups
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.32 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM Bundles ORDER BY ID
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.59 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.43 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 19:25:38 TIME: core/shop.getList : 0.03 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM EffectAttributeTypes
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.32 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM Effects
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.47 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 19:25:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.59 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 19:25:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.59 ms
02.09 19:25:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 19:25:38 DB: SELECT * FROM Badges
02.09 19:25:38 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:25:38 TIME: core/server.query : 0.31 ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:25:38 TIMER: Clans cache...
02.09 19:25:38 TIMER: Clans cache: 0ms
02.09 19:50:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 19:50:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 19:50:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 19:50:10 TIME: core/server.query : 3.21 ms
02.09 19:50:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 19:50:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 19:50:10 TIME: core/user.isOnlineID : 0.09 ms
02.09 19:50:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 19:50:10 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:50:10 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 19:50:10 STATS: cache [user], database [1472 calls, 0 reads, 0 writes]
02.09 19:50:10 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 19:50:10 READDB: SELECT * FROM Users WHERE ID = 3
02.09 19:50:10 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.51 ms]
02.09 19:50:10 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 19:50:10 QUEUE: vdl.0 (thread) response core/cache.get
02.09 19:50:10 TIME: core/cache.get : 4.74 ms
02.09 19:50:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 19:50:10 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:50:10 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 19:50:10 STATS: cache [questdata], database [1472 calls, 0 reads, 0 writes]
02.09 19:50:10 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 19:50:10 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 19:50:10 QUEUE: vdl.0 (thread) response core/cache.get
02.09 19:50:10 TIME: core/cache.get : 1.63 ms
02.09 19:50:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 19:50:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 19:50:10 TIME: core/user.loginPost : 0.15 ms
02.09 19:50:10 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 19:50:10 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 19:50:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 19:50:10 TIME: vdl/cache.battle.find : 2.39 ms
02.09 19:50:10 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
02.09 19:50:10 DB: SELECT nextval('Battle_id_seq') AS id
02.09 19:50:10 READDB: SELECT ID FROM Battle WHERE ID = 39
02.09 19:50:10 READDB: INSERT INTO Battle (ID) VALUES (39)
02.09 19:50:10 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 19:50:10 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.09 19:50:10 STATS: cache [battle], database [1472 calls, 0 reads, 0 writes]
02.09 19:50:10 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:50:10 READDB: SELECT * FROM Battle WHERE ID = 39
02.09 19:50:10 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.39 ms]
02.09 19:50:10 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 19:50:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 39, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 19:50:10 TIME: vdl/cache.battle.create : 27.08 ms
02.09 19:50:15 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 39
02.09 19:50:18 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 19:50:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:50:18 TIME: core/cache.update : 0.17 ms
02.09 19:50:19 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 19:50:38 TIMER: Clans cache...
02.09 19:50:38 TIMER: Clans cache: 0ms
02.09 19:50:38 TIMER: Clans cache...
02.09 19:50:38 TIMER: Clans cache: 0ms
02.09 19:52:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 19:52:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 19:52:05 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
02.09 19:52:05 TIME: core/server.query : 2.78 ms
02.09 19:52:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 19:52:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 19:52:05 TIME: core/user.isOnlineID : 0.15 ms
02.09 19:52:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 19:52:05 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 19:52:05 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
02.09 19:52:05 STATS: cache [user], database [1587 calls, 1 reads, 1 writes]
02.09 19:52:05 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 19:52:05 READDB: SELECT * FROM Users WHERE ID = 2
02.09 19:52:05 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.55 ms]
02.09 19:52:05 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.06 ms]
02.09 19:52:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472829608, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 2 } }
02.09 19:52:05 TIME: core/cache.get : 2 ms
02.09 19:52:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 19:52:05 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 19:52:05 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
02.09 19:52:05 STATS: cache [questdata], database [1587 calls, 1 reads, 0 writes]
02.09 19:52:05 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 19:52:05 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 19:52:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
02.09 19:52:05 TIME: core/cache.get : 1.54 ms
02.09 19:52:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 19:52:05 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 19:52:05 TIME: core/user.loginPost : 0.11 ms
02.09 19:52:06 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 19:52:06 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 19:52:06 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 19:52:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 39, first => 3 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 19:52:06 TIME: vdl/cache.battle.find : 3.18 ms
02.09 19:52:06 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 39, selfId => 2, _type => vdl/cache.battle.join }
02.09 19:52:06 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 19:52:06 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
02.09 19:52:06 STATS: cache [battle], database [1588 calls, 1 reads, 1 writes]
02.09 19:52:06 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:52:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 39, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 19:52:06 TIME: vdl/cache.battle.join : 0.35 ms
02.09 19:52:06 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 19:52:06 DB: SELECT name FROM users WHERE id=2
02.09 19:52:06 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 19:52:06 TIME: core/server.query : 2.97 ms
02.09 19:52:06 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 19:52:06 DB: SELECT name FROM users WHERE id=3
02.09 19:52:06 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 19:52:06 TIME: core/server.query : 0.9 ms
02.09 19:52:06 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 39
02.09 19:52:13 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 19:52:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:52:13 TIME: core/cache.update : 0.17 ms
02.09 19:52:13 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 19:52:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:52:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:52:21 TIME: vdl/cache.battle.infoRoom : 0.15 ms
02.09 19:52:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:52:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:52:29 TIME: vdl/cache.battle.infoRoom : 0.14 ms
02.09 19:52:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:52:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:52:31 TIME: vdl/cache.battle.infoRoom : 0.16 ms
02.09 19:52:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:52:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:52:36 TIME: vdl/cache.battle.infoRoom : 0.14 ms
02.09 19:52:38 TIMER: Clans cache...
02.09 19:52:38 TIMER: Clans cache: 0ms
02.09 19:53:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:30 STATS: cache [battle], get [6 calls, 4 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 19:53:30 STATS: cache [battle], segments [9 calls, 6 hits, 2 misses]
02.09 19:53:30 STATS: cache [battle], database [1672 calls, 1 reads, 2 writes]
02.09 19:53:30 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:53:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:30 TIME: vdl/cache.battle.infoRoom : 0.33 ms
02.09 19:53:32 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:32 TIME: vdl/cache.battle.infoRoom : 0.15 ms
02.09 19:53:34 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:34 TIME: vdl/cache.battle.infoRoom : 0.16 ms
02.09 19:53:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:36 TIME: vdl/cache.battle.infoRoom : 0.18 ms
02.09 19:53:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:38 TIME: vdl/cache.battle.infoRoom : 0.12 ms
02.09 19:53:38 TIMER: Clans cache...
02.09 19:53:38 TIMER: Clans cache: 0ms
02.09 19:53:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:39 TIME: vdl/cache.battle.infoRoom : 0.14 ms
02.09 19:53:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:39 TIME: vdl/cache.battle.infoRoom : 0.15 ms
02.09 19:53:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:42 TIME: vdl/cache.battle.infoRoom : 0.15 ms
02.09 19:53:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:42 TIME: vdl/cache.battle.infoRoom : 0.15 ms
02.09 19:53:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 39, _type => vdl/cache.battle.infoRoom }
02.09 19:53:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 19:53:59 TIME: vdl/cache.battle.infoRoom : 0.19 ms
02.09 19:53:59 NET: vdl.0 (thread) request core/server.query { q => INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 3,2,39,{ scoresSecond => null, scoresFirst => null }), _type => core/server.query }
02.09 19:53:59 DB: INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 3,2,39,{ scoresSecond => null, scoresFirst => null })
02.09 19:53:59 QUEUE: vdl.0 (thread) response core/server.query { errorCode => ok, _type => core/server.query }
02.09 19:53:59 TIME: core/server.query : 19.9 ms
02.09 19:53:59 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 39, _type => vdl/cache.battle.finishRoom }
02.09 19:53:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => true, _type => vdl/cache.battle.finishRoom }
02.09 19:53:59 TIME: vdl/cache.battle.finishRoom : 0.15 ms
02.09 19:53:59 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 39, _type => vdl/cache.battle.deleteRoom }
02.09 19:53:59 ROOM: deleted room 39
02.09 19:53:59 DB: DELETE FROM Battle WHERE ID = 39
02.09 19:53:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 19:53:59 TIME: vdl/cache.battle.deleteRoom : 16.46 ms
02.09 19:53:59 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'true', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 39
02.09 19:54:09 BLOCKREMOVE: battle 39 removed
02.09 19:54:38 TIMER: Clans cache...
02.09 19:54:38 TIMER: Clans cache: 0ms
02.09 19:54:38 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
02.09 19:54:38 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
02.09 19:54:38 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.09 19:54:38 TIME: core/server.query : 1.72 ms
02.09 19:54:38 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
02.09 19:54:38 ROOM: deleted room 0
02.09 19:54:38 STATS: cache [battle], get [16 calls, 15 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 19:54:38 STATS: cache [battle], segments [22 calls, 19 hits, 2 misses]
02.09 19:54:38 STATS: cache [battle], database [1800 calls, 1 reads, 3 writes]
02.09 19:54:38 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 19:54:38 DB: DELETE FROM Battle WHERE ID = 0
02.09 19:54:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 19:54:38 TIME: vdl/cache.battle.deleteRoom : 1.53 ms
02.09 19:54:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 19:54:38 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 19:54:38 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
02.09 19:54:38 STATS: cache [user], database [1800 calls, 2 reads, 2 writes]
02.09 19:54:38 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 19:54:38 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.25 ms]
02.09 19:54:38 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.13 ms]
02.09 19:54:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 19:54:38 TIME: core/cache.update : 0.75 ms
02.09 19:54:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 19:54:38 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 19:54:38 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
02.09 19:54:38 STATS: cache [questdata], database [1800 calls, 2 reads, 0 writes]
02.09 19:54:38 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 19:54:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:54:38 TIME: core/cache.update : 0.55 ms
02.09 19:54:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 19:54:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 19:54:38 TIME: core/user.logoutPost : 0.18 ms
02.09 19:54:38 TIMER: Clans cache...
02.09 19:54:38 TIMER: Clans cache: 0ms
02.09 19:54:38 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 19:54:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 19:55:48 BLOCKREMOVE: user 2 removed
02.09 19:55:48 BLOCKREMOVE: questdata 2 removed
02.09 19:56:10 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.09 19:56:10 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.09 19:56:10 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.09 19:56:10 TIME: core/server.query : 2.61 ms
02.09 19:56:10 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
02.09 19:56:10 ROOM: deleted room 0
02.09 19:56:10 DB: DELETE FROM Battle WHERE ID = 0
02.09 19:56:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 19:56:10 TIME: vdl/cache.battle.deleteRoom : 0.71 ms
02.09 19:56:10 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.09 19:56:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 19:56:10 TIME: core/cache.update : 0.18 ms
02.09 19:56:10 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.09 19:56:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 19:56:10 TIME: core/cache.update : 0.14 ms
02.09 19:56:10 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.09 19:56:10 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 19:56:10 TIME: core/user.logoutPost : 0.09 ms
02.09 19:56:10 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 19:56:10 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.09 19:56:21 BLOCKREMOVE: user 3 removed
02.09 19:56:21 BLOCKREMOVE: questdata 3 removed
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 2, 0)
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
02.09 19:56:38 TIMER: Clans cache...
02.09 19:56:38 TIMER: Clans cache: 0ms
