03.11 20:00:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:00:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:00:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:00:30 TIME: core/server.query : 0.97 ms
03.11 20:00:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:00:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:00:30 TIME: core/user.isOnlineID : 0.1 ms
03.11 20:00:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:00:30 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 20:00:30 STATS: cache [user], segments [10 calls, 5 hits, 4 misses]
03.11 20:00:30 STATS: cache [user], database [476 calls, 2 reads, 3 writes]
03.11 20:00:30 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
03.11 20:00:30 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:00:30 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.44 ms]
03.11 20:00:30 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.04 ms]
03.11 20:00:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:00:30 TIME: core/cache.get : 1.88 ms
03.11 20:00:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:00:30 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 20:00:30 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
03.11 20:00:30 STATS: cache [questdata], database [476 calls, 2 reads, 2 writes]
03.11 20:00:30 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
03.11 20:00:30 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:00:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:00:30 TIME: core/cache.get : 1.27 ms
03.11 20:00:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:00:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:00:30 TIME: core/user.loginPost : 0.11 ms
03.11 20:00:34 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
03.11 20:00:34 TIMER: Clans cache...
03.11 20:00:34 TIMER: Clans cache: 0ms
03.11 20:00:34 TIMER: Check tournament...
03.11 20:00:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:00' OR rounddate = '2016-03-11 20:00' AND status <> 'finished'
03.11 20:00:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.43477438' AND avaliable = true AND finished <> true
03.11 20:00:34 TIMER: Check tournament: 2ms
03.11 20:00:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:00:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:00:39 TIME: core/cache.update : 0.19 ms
03.11 20:00:39 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:01:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:01:22 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:01:22 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:01:22 TIME: core/server.query : 1.14 ms
03.11 20:01:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:01:22 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
03.11 20:01:22 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
03.11 20:01:22 STATS: cache [battle], database [528 calls, 2 reads, 0 writes]
03.11 20:01:22 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:01:22 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:01:22 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:01:22 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:01:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:01:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:01:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:01:22 TIME: core/cache.update : 0.14 ms
03.11 20:01:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:01:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:01:22 TIME: core/cache.update : 0.13 ms
03.11 20:01:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:01:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:01:22 TIME: core/user.logoutPost : 0.09 ms
03.11 20:01:22 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:01:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:01:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:01:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:01:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:01:31 TIME: core/server.query : 0.95 ms
03.11 20:01:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:01:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:01:31 TIME: core/user.isOnlineID : 0.16 ms
03.11 20:01:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:01:31 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 20:01:31 STATS: cache [user], segments [15 calls, 8 hits, 6 misses]
03.11 20:01:31 STATS: cache [user], database [537 calls, 3 reads, 5 writes]
03.11 20:01:31 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
03.11 20:01:31 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.23 ms]
03.11 20:01:31 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.04 ms]
03.11 20:01:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 107 } }
03.11 20:01:31 TIME: core/cache.get : 0.92 ms
03.11 20:01:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:01:31 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 20:01:31 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
03.11 20:01:31 STATS: cache [questdata], database [537 calls, 3 reads, 3 writes]
03.11 20:01:31 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
03.11 20:01:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 107 } }
03.11 20:01:31 TIME: core/cache.get : 0.26 ms
03.11 20:01:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:01:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:01:31 TIME: core/user.loginPost : 0.07 ms
03.11 20:01:34 TIMER: Clans cache...
03.11 20:01:34 TIMER: Clans cache: 0ms
03.11 20:01:34 TIMER: Check tournament...
03.11 20:01:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:01' OR rounddate = '2016-03-11 20:01' AND status <> 'finished'
03.11 20:01:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.49478698' AND avaliable = true AND finished <> true
03.11 20:01:34 TIMER: Check tournament: 1ms
03.11 20:01:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:01:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 20:01:39 TIME: core/cache.update : 0.16 ms
03.11 20:01:39 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:01:58 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:01:58 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:01:58 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:01:58 TIME: core/server.query : 0.58 ms
03.11 20:01:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:01:58 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:01:58 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:01:58 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:01:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:01:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:01:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 20:01:58 TIME: core/cache.update : 0.19 ms
03.11 20:01:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:01:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:01:58 TIME: core/cache.update : 0.18 ms
03.11 20:01:58 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:01:58 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:01:58 TIME: core/user.logoutPost : 0.06 ms
03.11 20:01:58 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:01:58 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:02:08 BLOCKREMOVE: user 107 removed
03.11 20:02:08 BLOCKREMOVE: questdata 107 removed
03.11 20:02:34 TIMER: Clans cache...
03.11 20:02:34 TIMER: Clans cache: 0ms
03.11 20:02:34 TIMER: Check tournament...
03.11 20:02:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:02' OR rounddate = '2016-03-11 20:02' AND status <> 'finished'
03.11 20:02:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.55479775' AND avaliable = true AND finished <> true
03.11 20:02:34 TIMER: Check tournament: 0ms
03.11 20:02:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:02:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:02:50 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:02:50 TIME: core/server.query : 2.27 ms
03.11 20:02:50 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:02:50 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:02:50 TIME: core/user.isOnlineID : 0.08 ms
03.11 20:02:50 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:02:50 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 20:02:50 STATS: cache [user], segments [20 calls, 13 hits, 6 misses]
03.11 20:02:50 STATS: cache [user], database [617 calls, 3 reads, 7 writes]
03.11 20:02:50 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
03.11 20:02:50 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:02:50 STATS: cache manager [1], get [9 calls, total 0.01 sec spent, avg 1.13 ms]
03.11 20:02:50 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.04 ms]
03.11 20:02:50 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:02:50 TIME: core/cache.get : 1.72 ms
03.11 20:02:50 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:02:50 STATS: cache [questdata], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 20:02:50 STATS: cache [questdata], segments [17 calls, 10 hits, 6 misses]
03.11 20:02:50 STATS: cache [questdata], database [617 calls, 3 reads, 4 writes]
03.11 20:02:50 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
03.11 20:02:50 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:02:50 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:02:50 TIME: core/cache.get : 0.97 ms
03.11 20:02:50 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:02:50 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:02:50 TIME: core/user.loginPost : 0.09 ms
03.11 20:02:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:02:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:02:59 TIME: core/cache.update : 0.18 ms
03.11 20:02:59 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:03:31 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:03:31 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:03:31 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:03:31 TIME: core/server.query : 0.92 ms
03.11 20:03:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:03:31 STATS: cache [battle], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 4 not found]
03.11 20:03:31 STATS: cache [battle], segments [5 calls, 0 hits, 4 misses]
03.11 20:03:31 STATS: cache [battle], database [657 calls, 4 reads, 0 writes]
03.11 20:03:31 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:03:31 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:03:31 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:03:31 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:03:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:03:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:03:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:03:31 TIME: core/cache.update : 0.13 ms
03.11 20:03:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:03:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:03:31 TIME: core/cache.update : 0.11 ms
03.11 20:03:31 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:03:31 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:03:31 TIME: core/user.logoutPost : 0.08 ms
03.11 20:03:32 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:03:32 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:03:34 TIMER: Clans cache...
03.11 20:03:34 TIMER: Clans cache: 0ms
03.11 20:03:34 TIMER: Check tournament...
03.11 20:03:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:03' OR rounddate = '2016-03-11 20:03' AND status <> 'finished'
03.11 20:03:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.61480749' AND avaliable = true AND finished <> true
03.11 20:03:34 TIMER: Check tournament: 0ms
03.11 20:03:42 BLOCKREMOVE: user 107 removed
03.11 20:03:42 BLOCKREMOVE: questdata 107 removed
03.11 20:04:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:04:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:04:23 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:04:23 TIME: core/server.query : 1.55 ms
03.11 20:04:23 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:04:23 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:04:23 TIME: core/user.isOnlineID : 0.15 ms
03.11 20:04:23 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:04:23 STATS: cache [user], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 20:04:23 STATS: cache [user], segments [25 calls, 16 hits, 8 misses]
03.11 20:04:23 STATS: cache [user], database [709 calls, 4 reads, 9 writes]
03.11 20:04:23 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
03.11 20:04:23 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:04:23 STATS: cache manager [1], get [11 calls, total 0.01 sec spent, avg 1.18 ms]
03.11 20:04:23 STATS: cache manager [1], update [14 calls, total 0 sec spent, avg 0.05 ms]
03.11 20:04:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:04:23 TIME: core/cache.get : 2.55 ms
03.11 20:04:23 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:04:23 STATS: cache [questdata], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 20:04:23 STATS: cache [questdata], segments [21 calls, 12 hits, 8 misses]
03.11 20:04:23 STATS: cache [questdata], database [709 calls, 4 reads, 5 writes]
03.11 20:04:23 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
03.11 20:04:23 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:04:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:04:23 TIME: core/cache.get : 1.91 ms
03.11 20:04:23 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:04:23 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:04:23 TIME: core/user.loginPost : 0.11 ms
03.11 20:04:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:04:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:04:29 TIME: core/cache.update : 0.22 ms
03.11 20:04:30 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:04:34 TIMER: Clans cache...
03.11 20:04:34 TIMER: Clans cache: 0ms
03.11 20:04:34 TIMER: Check tournament...
03.11 20:04:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:04' OR rounddate = '2016-03-11 20:04' AND status <> 'finished'
03.11 20:04:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.6748193' AND avaliable = true AND finished <> true
03.11 20:04:34 TIMER: Check tournament: 1ms
03.11 20:05:07 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:05:07 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:05:07 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:05:07 TIME: core/server.query : 0.54 ms
03.11 20:05:07 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:05:07 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 5 not found]
03.11 20:05:07 STATS: cache [battle], segments [6 calls, 0 hits, 5 misses]
03.11 20:05:07 STATS: cache [battle], database [753 calls, 5 reads, 0 writes]
03.11 20:05:07 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:05:07 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:05:07 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:05:07 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:05:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:05:07 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:05:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:05:07 TIME: core/cache.update : 0.09 ms
03.11 20:05:07 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:05:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:05:07 TIME: core/cache.update : 0.08 ms
03.11 20:05:07 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:05:07 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:05:07 TIME: core/user.logoutPost : 0.06 ms
03.11 20:05:08 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:05:08 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:05:18 BLOCKREMOVE: user 107 removed
03.11 20:05:18 BLOCKREMOVE: questdata 107 removed
03.11 20:05:34 TIMER: Clans cache...
03.11 20:05:34 TIMER: Clans cache: 0ms
03.11 20:05:34 TIMER: Check tournament...
03.11 20:05:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:05' OR rounddate = '2016-03-11 20:05' AND status <> 'finished'
03.11 20:05:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.73482879' AND avaliable = true AND finished <> true
03.11 20:05:34 TIMER: Check tournament: 1ms
03.11 20:06:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:06:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:06:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:06:12 TIME: core/server.query : 2.26 ms
03.11 20:06:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:06:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:06:12 TIME: core/user.isOnlineID : 0.16 ms
03.11 20:06:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:06:12 STATS: cache [user], get [6 calls, 1 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 20:06:12 STATS: cache [user], segments [30 calls, 19 hits, 10 misses]
03.11 20:06:12 STATS: cache [user], database [818 calls, 5 reads, 11 writes]
03.11 20:06:12 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
03.11 20:06:12 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:06:12 STATS: cache manager [1], get [13 calls, total 0.02 sec spent, avg 1.37 ms]
03.11 20:06:12 STATS: cache manager [1], update [17 calls, total 0 sec spent, avg 0.04 ms]
03.11 20:06:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:06:12 TIME: core/cache.get : 4.02 ms
03.11 20:06:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:06:12 STATS: cache [questdata], get [6 calls, 1 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 20:06:12 STATS: cache [questdata], segments [25 calls, 14 hits, 10 misses]
03.11 20:06:12 STATS: cache [questdata], database [818 calls, 5 reads, 6 writes]
03.11 20:06:12 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
03.11 20:06:12 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:06:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:06:12 TIME: core/cache.get : 1.45 ms
03.11 20:06:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:06:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:06:12 TIME: core/user.loginPost : 0.12 ms
03.11 20:06:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:06:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:06:19 TIME: core/cache.update : 0.11 ms
03.11 20:06:20 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:06:34 TIMER: Clans cache...
03.11 20:06:34 TIMER: Clans cache: 0ms
03.11 20:06:34 TIMER: Check tournament...
03.11 20:06:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:06' OR rounddate = '2016-03-11 20:06' AND status <> 'finished'
03.11 20:06:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.79484446' AND avaliable = true AND finished <> true
03.11 20:06:34 TIMER: Check tournament: 1ms
03.11 20:06:46 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:06:46 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:06:46 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:06:46 TIME: core/server.query : 0.74 ms
03.11 20:06:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:06:46 STATS: cache [battle], get [7 calls, 0 cache hits, 6 cache misses, 0 same version, 6 not found]
03.11 20:06:46 STATS: cache [battle], segments [7 calls, 0 hits, 6 misses]
03.11 20:06:46 STATS: cache [battle], database [851 calls, 6 reads, 0 writes]
03.11 20:06:46 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:06:46 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:06:46 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:06:46 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:06:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:06:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:06:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:06:46 TIME: core/cache.update : 0.08 ms
03.11 20:06:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:06:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:06:46 TIME: core/cache.update : 0.08 ms
03.11 20:06:46 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:06:46 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:06:46 TIME: core/user.logoutPost : 0.07 ms
03.11 20:06:46 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:06:46 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:06:56 BLOCKREMOVE: user 107 removed
03.11 20:06:56 BLOCKREMOVE: questdata 107 removed
03.11 20:06:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:06:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:06:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:06:58 TIME: core/server.query : 0.89 ms
03.11 20:06:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:06:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:06:58 TIME: core/user.isOnlineID : 0.1 ms
03.11 20:06:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:06:58 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:06:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:06:58 TIME: core/cache.get : 1.3 ms
03.11 20:06:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:06:58 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:06:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:06:58 TIME: core/cache.get : 0.75 ms
03.11 20:06:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:06:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:06:58 TIME: core/user.loginPost : 0.1 ms
03.11 20:07:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:07:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:07:04 TIME: core/cache.update : 0.21 ms
03.11 20:07:05 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:07:30 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:07:30 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:07:30 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:07:30 TIME: core/server.query : 0.44 ms
03.11 20:07:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:07:30 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:07:30 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:07:30 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:07:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:07:30 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:07:30 STATS: cache [user], get [8 calls, 1 cache hits, 7 cache misses, 0 same version, 0 not found]
03.11 20:07:30 STATS: cache [user], segments [38 calls, 23 hits, 14 misses]
03.11 20:07:30 STATS: cache [user], database [896 calls, 7 reads, 14 writes]
03.11 20:07:30 STATS: cache [user], lock [8 calls, 8 attempts, 0 failures]
03.11 20:07:30 STATS: cache manager [1], get [16 calls, total 0.02 sec spent, avg 1.29 ms]
03.11 20:07:30 STATS: cache manager [1], update [22 calls, total 0 sec spent, avg 0.05 ms]
03.11 20:07:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:07:30 TIME: core/cache.update : 0.28 ms
03.11 20:07:30 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:07:30 STATS: cache [questdata], get [8 calls, 1 cache hits, 7 cache misses, 0 same version, 0 not found]
03.11 20:07:30 STATS: cache [questdata], segments [31 calls, 16 hits, 14 misses]
03.11 20:07:30 STATS: cache [questdata], database [896 calls, 7 reads, 7 writes]
03.11 20:07:30 STATS: cache [questdata], lock [8 calls, 8 attempts, 0 failures]
03.11 20:07:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:07:30 TIME: core/cache.update : 0.15 ms
03.11 20:07:30 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:07:30 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:07:30 TIME: core/user.logoutPost : 0.05 ms
03.11 20:07:31 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:07:31 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:07:34 TIMER: Clans cache...
03.11 20:07:34 TIMER: Clans cache: 0ms
03.11 20:07:34 TIMER: Check tournament...
03.11 20:07:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:07' OR rounddate = '2016-03-11 20:07' AND status <> 'finished'
03.11 20:07:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.85485435' AND avaliable = true AND finished <> true
03.11 20:07:34 TIMER: Check tournament: 0ms
03.11 20:07:41 BLOCKREMOVE: user 107 removed
03.11 20:07:41 BLOCKREMOVE: questdata 107 removed
03.11 20:07:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:07:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:07:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:07:53 TIME: core/server.query : 1.29 ms
03.11 20:07:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:07:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:07:53 TIME: core/user.isOnlineID : 0.1 ms
03.11 20:07:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:07:53 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:07:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:07:53 TIME: core/cache.get : 1.54 ms
03.11 20:07:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:07:53 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:07:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:07:53 TIME: core/cache.get : 0.94 ms
03.11 20:07:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:07:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:07:53 TIME: core/user.loginPost : 0.13 ms
03.11 20:07:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:07:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:07:59 TIME: core/cache.update : 0.24 ms
03.11 20:08:00 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:08:17 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:08:17 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:08:17 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:08:17 TIME: core/server.query : 0.96 ms
03.11 20:08:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:08:17 STATS: cache [battle], get [9 calls, 0 cache hits, 8 cache misses, 0 same version, 8 not found]
03.11 20:08:17 STATS: cache [battle], segments [9 calls, 0 hits, 8 misses]
03.11 20:08:17 STATS: cache [battle], database [943 calls, 8 reads, 0 writes]
03.11 20:08:17 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:08:17 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:08:17 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:08:17 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:08:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:08:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:08:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:08:17 TIME: core/cache.update : 0.11 ms
03.11 20:08:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:08:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:08:17 TIME: core/cache.update : 0.09 ms
03.11 20:08:17 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:08:17 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:08:17 TIME: core/user.logoutPost : 0.07 ms
03.11 20:08:18 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:08:18 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:08:28 BLOCKREMOVE: user 107 removed
03.11 20:08:28 BLOCKREMOVE: questdata 107 removed
03.11 20:08:34 TIMER: Clans cache...
03.11 20:08:34 TIMER: Clans cache: 0ms
03.11 20:08:34 TIMER: Check tournament...
03.11 20:08:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:08' OR rounddate = '2016-03-11 20:08' AND status <> 'finished'
03.11 20:08:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.91486547' AND avaliable = true AND finished <> true
03.11 20:08:34 TIMER: Check tournament: 1ms
03.11 20:08:34 TIMER: Clans cache...
03.11 20:08:34 TIMER: Clans cache: 0ms
03.11 20:08:34 TIMER: Check tournament...
03.11 20:08:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:09' OR rounddate = '2016-03-11 20:09' AND status <> 'finished'
03.11 20:08:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.97487437' AND avaliable = true AND finished <> true
03.11 20:08:34 TIMER: Check tournament: 1ms
03.11 20:09:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:09:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:09:38 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:09:38 TIME: core/server.query : 2.02 ms
03.11 20:09:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:09:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:09:38 TIME: core/user.isOnlineID : 0.09 ms
03.11 20:09:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:09:38 STATS: cache [user], get [9 calls, 1 cache hits, 8 cache misses, 0 same version, 0 not found]
03.11 20:09:38 STATS: cache [user], segments [45 calls, 28 hits, 16 misses]
03.11 20:09:38 STATS: cache [user], database [1023 calls, 8 reads, 17 writes]
03.11 20:09:38 STATS: cache [user], lock [10 calls, 10 attempts, 0 failures]
03.11 20:09:38 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:09:38 STATS: cache manager [1], get [19 calls, total 0.02 sec spent, avg 1.27 ms]
03.11 20:09:38 STATS: cache manager [1], update [26 calls, total 0 sec spent, avg 0.05 ms]
03.11 20:09:38 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:09:38 TIME: core/cache.get : 1.74 ms
03.11 20:09:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:09:38 STATS: cache [questdata], get [9 calls, 1 cache hits, 8 cache misses, 0 same version, 0 not found]
03.11 20:09:38 STATS: cache [questdata], segments [37 calls, 20 hits, 16 misses]
03.11 20:09:38 STATS: cache [questdata], database [1023 calls, 8 reads, 9 writes]
03.11 20:09:38 STATS: cache [questdata], lock [10 calls, 10 attempts, 0 failures]
03.11 20:09:38 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:09:38 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:09:38 TIME: core/cache.get : 1.03 ms
03.11 20:09:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:09:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:09:38 TIME: core/user.loginPost : 0.08 ms
03.11 20:09:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:09:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:09:44 TIME: core/cache.update : 0.12 ms
03.11 20:09:45 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:10:34 TIMER: Clans cache...
03.11 20:10:34 TIMER: Clans cache: 0ms
03.11 20:10:34 TIMER: Check tournament...
03.11 20:10:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:10' OR rounddate = '2016-03-11 20:10' AND status <> 'finished'
03.11 20:10:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.03488839' AND avaliable = true AND finished <> true
03.11 20:10:34 TIMER: Check tournament: 3ms
03.11 20:11:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:11:26 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:11:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:11:26 TIME: core/server.query : 0.95 ms
03.11 20:11:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:11:26 STATS: cache [battle], get [10 calls, 0 cache hits, 9 cache misses, 0 same version, 9 not found]
03.11 20:11:26 STATS: cache [battle], segments [10 calls, 0 hits, 9 misses]
03.11 20:11:26 STATS: cache [battle], database [1132 calls, 9 reads, 0 writes]
03.11 20:11:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:11:26 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:11:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:11:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:11:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:11:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:11:26 STATS: cache [user], get [10 calls, 1 cache hits, 9 cache misses, 0 same version, 0 not found]
03.11 20:11:26 STATS: cache [user], segments [48 calls, 29 hits, 18 misses]
03.11 20:11:26 STATS: cache [user], database [1132 calls, 9 reads, 18 writes]
03.11 20:11:26 STATS: cache [user], lock [10 calls, 10 attempts, 0 failures]
03.11 20:11:26 STATS: cache manager [1], get [20 calls, total 0.03 sec spent, avg 1.25 ms]
03.11 20:11:26 STATS: cache manager [1], update [28 calls, total 0 sec spent, avg 0.06 ms]
03.11 20:11:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:11:26 TIME: core/cache.update : 0.55 ms
03.11 20:11:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:11:26 STATS: cache [questdata], get [10 calls, 1 cache hits, 9 cache misses, 0 same version, 0 not found]
03.11 20:11:26 STATS: cache [questdata], segments [39 calls, 20 hits, 18 misses]
03.11 20:11:26 STATS: cache [questdata], database [1132 calls, 9 reads, 9 writes]
03.11 20:11:26 STATS: cache [questdata], lock [10 calls, 10 attempts, 0 failures]
03.11 20:11:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:11:26 TIME: core/cache.update : 0.4 ms
03.11 20:11:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:11:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:11:26 TIME: core/user.logoutPost : 0.12 ms
03.11 20:11:27 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:11:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:11:34 TIMER: Clans cache...
03.11 20:11:34 TIMER: Clans cache: 0ms
03.11 20:11:34 TIMER: Check tournament...
03.11 20:11:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:11' OR rounddate = '2016-03-11 20:11' AND status <> 'finished'
03.11 20:11:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.09490589' AND avaliable = true AND finished <> true
03.11 20:11:34 TIMER: Check tournament: 2ms
03.11 20:11:37 BLOCKREMOVE: user 107 removed
03.11 20:11:37 BLOCKREMOVE: questdata 107 removed
03.11 20:12:34 TIMER: Clans cache...
03.11 20:12:34 TIMER: Clans cache: 0ms
03.11 20:12:34 TIMER: Check tournament...
03.11 20:12:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:12' OR rounddate = '2016-03-11 20:12' AND status <> 'finished'
03.11 20:12:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.154917' AND avaliable = true AND finished <> true
03.11 20:12:34 TIMER: Check tournament: 2ms
03.11 20:12:34 TIMER: Clans cache...
03.11 20:12:34 TIMER: Clans cache: 0ms
03.11 20:12:34 TIMER: Check tournament...
03.11 20:12:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:13' OR rounddate = '2016-03-11 20:13' AND status <> 'finished'
03.11 20:12:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.21493123' AND avaliable = true AND finished <> true
03.11 20:12:34 TIMER: Check tournament: 2ms
03.11 20:12:34 TIMER: Clans cache...
03.11 20:12:34 TIMER: Clans cache: 0ms
03.11 20:12:34 TIMER: Check tournament...
03.11 20:12:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:14' OR rounddate = '2016-03-11 20:14' AND status <> 'finished'
03.11 20:12:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.27494189' AND avaliable = true AND finished <> true
03.11 20:12:34 TIMER: Check tournament: 1ms
03.11 20:12:34 TIMER: Clans cache...
03.11 20:12:34 TIMER: Clans cache: 0ms
03.11 20:12:34 TIMER: Check tournament...
03.11 20:12:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:15' OR rounddate = '2016-03-11 20:15' AND status <> 'finished'
03.11 20:12:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.33495578' AND avaliable = true AND finished <> true
03.11 20:12:34 TIMER: Check tournament: 1ms
03.11 20:12:34 TIMER: Clans cache...
03.11 20:12:34 TIMER: Clans cache: 0ms
03.11 20:12:34 TIMER: Check tournament...
03.11 20:12:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:16' OR rounddate = '2016-03-11 20:16' AND status <> 'finished'
03.11 20:12:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.39497288' AND avaliable = true AND finished <> true
03.11 20:12:34 TIMER: Check tournament: 1ms
03.11 20:12:34 TIMER: Clans cache...
03.11 20:12:34 TIMER: Clans cache: 0ms
03.11 20:12:34 TIMER: Check tournament...
03.11 20:12:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:17' OR rounddate = '2016-03-11 20:17' AND status <> 'finished'
03.11 20:12:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.454988' AND avaliable = true AND finished <> true
03.11 20:12:34 TIMER: Check tournament: 1ms
03.11 20:12:34 TIMER: Clans cache...
03.11 20:12:34 TIMER: Clans cache: 0ms
03.11 20:12:34 TIMER: Check tournament...
03.11 20:12:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:18' OR rounddate = '2016-03-11 20:18' AND status <> 'finished'
03.11 20:12:34 DB: SELECT * FROM battle WHERE endtime >= '1478193.51500245' AND avaliable = true AND finished <> true
03.11 20:12:34 TIMER: Check tournament: 3ms
03.11 20:19:35 TIMER: Clans cache...
03.11 20:19:35 TIMER: Clans cache: 0ms
03.11 20:19:35 TIMER: Check tournament...
03.11 20:19:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:19' OR rounddate = '2016-03-11 20:19' AND status <> 'finished'
03.11 20:19:35 DB: SELECT * FROM battle WHERE endtime >= '1478193.57501532' AND avaliable = true AND finished <> true
03.11 20:19:35 TIMER: Check tournament: 3ms
03.11 20:19:35 TIMER: Clans cache...
03.11 20:19:35 TIMER: Clans cache: 0ms
03.11 20:19:35 TIMER: Check tournament...
03.11 20:19:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:20' OR rounddate = '2016-03-11 20:20' AND status <> 'finished'
03.11 20:19:35 DB: SELECT * FROM battle WHERE endtime >= '1478193.63502775' AND avaliable = true AND finished <> true
03.11 20:19:35 TIMER: Check tournament: 2ms
03.11 20:19:35 TIMER: Clans cache...
03.11 20:19:35 TIMER: Clans cache: 0ms
03.11 20:19:35 TIMER: Check tournament...
03.11 20:19:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:21' OR rounddate = '2016-03-11 20:21' AND status <> 'finished'
03.11 20:19:35 DB: SELECT * FROM battle WHERE endtime >= '1478193.6950397' AND avaliable = true AND finished <> true
03.11 20:19:35 TIMER: Check tournament: 2ms
03.11 20:22:18 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:22:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:22:18 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 20:22:18 TIME: core/server.query : 1.44 ms
03.11 20:22:18 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:22:18 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:22:18 TIME: core/user.isOnlineID : 0.1 ms
03.11 20:22:18 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:22:18 STATS: cache [user], get [10 calls, 1 cache hits, 9 cache misses, 0 same version, 0 not found]
03.11 20:22:18 STATS: cache [user], segments [50 calls, 31 hits, 18 misses]
03.11 20:22:18 STATS: cache [user], database [1784 calls, 9 reads, 19 writes]
03.11 20:22:18 STATS: cache [user], lock [11 calls, 11 attempts, 0 failures]
03.11 20:22:18 READDB: SELECT * FROM Users WHERE ID = 114
03.11 20:22:18 STATS: cache manager [1], get [21 calls, total 0.03 sec spent, avg 1.34 ms]
03.11 20:22:18 STATS: cache manager [1], update [29 calls, total 0 sec spent, avg 0.07 ms]
03.11 20:22:18 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 20:22:18 TIME: core/cache.get : 3.48 ms
03.11 20:22:18 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:22:18 STATS: cache [questdata], get [10 calls, 1 cache hits, 9 cache misses, 0 same version, 0 not found]
03.11 20:22:18 STATS: cache [questdata], segments [41 calls, 22 hits, 18 misses]
03.11 20:22:18 STATS: cache [questdata], database [1784 calls, 9 reads, 10 writes]
03.11 20:22:18 STATS: cache [questdata], lock [11 calls, 11 attempts, 0 failures]
03.11 20:22:18 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 20:22:18 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 20:22:18 TIME: core/cache.get : 1.68 ms
03.11 20:22:18 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:22:18 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:22:18 TIME: core/user.loginPost : 0.12 ms
03.11 20:22:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 20:22:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:22:25 TIME: core/cache.update : 0.17 ms
03.11 20:22:25 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 20:22:35 TIMER: Clans cache...
03.11 20:22:35 TIMER: Clans cache: 0ms
03.11 20:22:35 TIMER: Check tournament...
03.11 20:22:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:22' OR rounddate = '2016-03-11 20:22' AND status <> 'finished'
03.11 20:22:35 DB: SELECT * FROM battle WHERE endtime >= '1478193.75505568' AND avaliable = true AND finished <> true
03.11 20:22:35 TIMER: Check tournament: 1ms
03.11 20:22:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:22:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:22:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:22:58 TIME: core/server.query : 2.57 ms
03.11 20:22:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:22:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:22:58 TIME: core/user.isOnlineID : 0.16 ms
03.11 20:22:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:22:58 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:22:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:22:58 TIME: core/cache.get : 1.77 ms
03.11 20:22:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:22:58 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:22:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:22:58 TIME: core/cache.get : 1.11 ms
03.11 20:22:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:22:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:22:58 TIME: core/user.loginPost : 0.13 ms
03.11 20:23:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:23:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:23:05 TIME: core/cache.update : 0.19 ms
03.11 20:23:05 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:23:35 TIMER: Clans cache...
03.11 20:23:35 TIMER: Clans cache: 0ms
03.11 20:23:35 TIMER: Check tournament...
03.11 20:23:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:23' OR rounddate = '2016-03-11 20:23' AND status <> 'finished'
03.11 20:23:35 DB: SELECT * FROM battle WHERE endtime >= '1478193.81506874' AND avaliable = true AND finished <> true
03.11 20:23:35 TIMER: Check tournament: 1ms
03.11 20:24:17 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:24:17 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:24:17 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:24:17 TIME: core/server.query : 1.08 ms
03.11 20:24:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:24:17 STATS: cache [battle], get [11 calls, 0 cache hits, 10 cache misses, 0 same version, 10 not found]
03.11 20:24:17 STATS: cache [battle], segments [11 calls, 0 hits, 10 misses]
03.11 20:24:17 STATS: cache [battle], database [1903 calls, 10 reads, 0 writes]
03.11 20:24:17 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:24:17 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:24:17 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:24:17 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:24:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:24:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:24:17 STATS: cache [user], get [12 calls, 1 cache hits, 11 cache misses, 0 same version, 0 not found]
03.11 20:24:17 STATS: cache [user], segments [56 calls, 33 hits, 22 misses]
03.11 20:24:17 STATS: cache [user], database [1903 calls, 11 reads, 21 writes]
03.11 20:24:17 STATS: cache [user], lock [12 calls, 12 attempts, 0 failures]
03.11 20:24:17 STATS: cache manager [1], get [24 calls, total 0.03 sec spent, avg 1.33 ms]
03.11 20:24:17 STATS: cache manager [1], update [32 calls, total 0 sec spent, avg 0.07 ms]
03.11 20:24:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:24:17 TIME: core/cache.update : 4.32 ms
03.11 20:24:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:24:17 STATS: cache [questdata], get [12 calls, 1 cache hits, 11 cache misses, 0 same version, 0 not found]
03.11 20:24:17 STATS: cache [questdata], segments [45 calls, 22 hits, 22 misses]
03.11 20:24:17 STATS: cache [questdata], database [1903 calls, 11 reads, 10 writes]
03.11 20:24:17 STATS: cache [questdata], lock [12 calls, 12 attempts, 0 failures]
03.11 20:24:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:24:17 TIME: core/cache.update : 0.41 ms
03.11 20:24:17 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:24:17 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:24:17 TIME: core/user.logoutPost : 0.12 ms
03.11 20:24:18 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:24:18 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:24:28 BLOCKREMOVE: user 107 removed
03.11 20:24:28 BLOCKREMOVE: questdata 107 removed
03.11 20:24:35 TIMER: Clans cache...
03.11 20:24:35 TIMER: Clans cache: 0ms
03.11 20:24:35 TIMER: Check tournament...
03.11 20:24:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:24' OR rounddate = '2016-03-11 20:24' AND status <> 'finished'
03.11 20:24:35 DB: SELECT * FROM battle WHERE endtime >= '1478193.87508214' AND avaliable = true AND finished <> true
03.11 20:24:35 TIMER: Check tournament: 1ms
03.11 20:24:35 TIMER: Clans cache...
03.11 20:24:35 TIMER: Clans cache: 0ms
03.11 20:24:35 TIMER: Check tournament...
03.11 20:24:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:25' OR rounddate = '2016-03-11 20:25' AND status <> 'finished'
03.11 20:24:35 DB: SELECT * FROM battle WHERE endtime >= '1478193.93509347' AND avaliable = true AND finished <> true
03.11 20:24:35 TIMER: Check tournament: 2ms
03.11 20:26:34 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 20:26:34 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 20:26:34 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:26:34 TIME: core/server.query : 1 ms
03.11 20:26:34 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:26:34 STATS: cache [battle], get [12 calls, 0 cache hits, 11 cache misses, 0 same version, 11 not found]
03.11 20:26:34 STATS: cache [battle], segments [12 calls, 0 hits, 11 misses]
03.11 20:26:34 STATS: cache [battle], database [2039 calls, 11 reads, 0 writes]
03.11 20:26:34 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:26:34 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:26:34 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:26:34 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:26:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:26:34 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 20:26:34 STATS: cache [user], get [12 calls, 1 cache hits, 11 cache misses, 0 same version, 0 not found]
03.11 20:26:34 STATS: cache [user], segments [58 calls, 35 hits, 22 misses]
03.11 20:26:34 STATS: cache [user], database [2039 calls, 11 reads, 22 writes]
03.11 20:26:34 STATS: cache [user], lock [12 calls, 12 attempts, 0 failures]
03.11 20:26:34 STATS: cache manager [1], get [24 calls, total 0.03 sec spent, avg 1.33 ms]
03.11 20:26:34 STATS: cache manager [1], update [34 calls, total 0 sec spent, avg 0.09 ms]
03.11 20:26:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:26:34 TIME: core/cache.update : 0.56 ms
03.11 20:26:34 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 20:26:34 STATS: cache [questdata], get [12 calls, 1 cache hits, 11 cache misses, 0 same version, 0 not found]
03.11 20:26:34 STATS: cache [questdata], segments [47 calls, 24 hits, 22 misses]
03.11 20:26:34 STATS: cache [questdata], database [2039 calls, 11 reads, 11 writes]
03.11 20:26:34 STATS: cache [questdata], lock [12 calls, 12 attempts, 0 failures]
03.11 20:26:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:26:34 TIME: core/cache.update : 0.42 ms
03.11 20:26:34 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 20:26:34 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:26:34 TIME: core/user.logoutPost : 0.12 ms
03.11 20:26:34 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 20:26:34 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 20:26:35 TIMER: Clans cache...
03.11 20:26:35 TIMER: Clans cache: 0ms
03.11 20:26:35 TIMER: Check tournament...
03.11 20:26:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:26' OR rounddate = '2016-03-11 20:26' AND status <> 'finished'
03.11 20:26:35 DB: SELECT * FROM battle WHERE endtime >= '1478193.99511113' AND avaliable = true AND finished <> true
03.11 20:26:35 TIMER: Check tournament: 1ms
03.11 20:26:44 BLOCKREMOVE: user 114 removed
03.11 20:26:44 BLOCKREMOVE: questdata 114 removed
03.11 20:27:35 TIMER: Clans cache...
03.11 20:27:35 TIMER: Clans cache: 0ms
03.11 20:27:35 TIMER: Check tournament...
03.11 20:27:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:27' OR rounddate = '2016-03-11 20:27' AND status <> 'finished'
03.11 20:27:35 DB: SELECT * FROM battle WHERE endtime >= '1478194.05512628' AND avaliable = true AND finished <> true
03.11 20:27:35 TIMER: Check tournament: 3ms
03.11 20:28:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:28:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:28:09 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:28:09 TIME: core/server.query : 1.3 ms
03.11 20:28:09 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:28:09 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:28:09 TIME: core/user.isOnlineID : 0.11 ms
03.11 20:28:09 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:28:09 STATS: cache [user], get [12 calls, 1 cache hits, 11 cache misses, 0 same version, 0 not found]
03.11 20:28:09 STATS: cache [user], segments [60 calls, 37 hits, 22 misses]
03.11 20:28:09 STATS: cache [user], database [2134 calls, 11 reads, 23 writes]
03.11 20:28:09 STATS: cache [user], lock [13 calls, 13 attempts, 0 failures]
03.11 20:28:09 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:28:09 STATS: cache manager [1], get [25 calls, total 0.03 sec spent, avg 1.36 ms]
03.11 20:28:09 STATS: cache manager [1], update [35 calls, total 0 sec spent, avg 0.09 ms]
03.11 20:28:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:28:09 TIME: core/cache.get : 6.82 ms
03.11 20:28:09 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:28:09 STATS: cache [questdata], get [12 calls, 1 cache hits, 11 cache misses, 0 same version, 0 not found]
03.11 20:28:09 STATS: cache [questdata], segments [49 calls, 26 hits, 22 misses]
03.11 20:28:09 STATS: cache [questdata], database [2134 calls, 11 reads, 12 writes]
03.11 20:28:09 STATS: cache [questdata], lock [13 calls, 13 attempts, 0 failures]
03.11 20:28:09 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:28:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:28:09 TIME: core/cache.get : 2.2 ms
03.11 20:28:09 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:28:09 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:28:09 TIME: core/user.loginPost : 0.36 ms
03.11 20:28:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:28:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:28:15 TIME: core/cache.update : 0.14 ms
03.11 20:28:15 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:28:19 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 20:28:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 20:28:19 TIME: vdl/cache.battle.findRandom : 0.14 ms
03.11 20:28:35 TIMER: Clans cache...
03.11 20:28:35 TIMER: Clans cache: 0ms
03.11 20:28:35 TIMER: Check tournament...
03.11 20:28:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:28' OR rounddate = '2016-03-11 20:28' AND status <> 'finished'
03.11 20:28:35 DB: SELECT * FROM battle WHERE endtime >= '1478194.11514164' AND avaliable = true AND finished <> true
03.11 20:28:35 TIMER: Check tournament: 1ms
03.11 20:28:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
03.11 20:28:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
03.11 20:28:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid115, networkid => , isbanned => false, id => 115 }}, errorCode => ok, _type => core/server.query }
03.11 20:28:44 TIME: core/server.query : 1.14 ms
03.11 20:28:44 NET: vdl.0 (thread) request core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
03.11 20:28:44 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:28:44 TIME: core/user.isOnlineID : 0.11 ms
03.11 20:28:44 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
03.11 20:28:44 READDB: SELECT * FROM Users WHERE ID = 115
03.11 20:28:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid115, deleted => false, email => , networktype =>   , password => uid115, isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478188735, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 115 } }
03.11 20:28:44 TIME: core/cache.get : 1.77 ms
03.11 20:28:44 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
03.11 20:28:44 READDB: SELECT * FROM UserQuests WHERE ID = 115
03.11 20:28:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 115 } }
03.11 20:28:44 TIME: core/cache.get : 1.34 ms
03.11 20:28:44 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 20:28:44 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:28:44 TIME: core/user.loginPost : 0.4 ms
03.11 20:28:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 115, _type => core/cache.update }
03.11 20:28:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:28:50 TIME: core/cache.update : 0.16 ms
03.11 20:28:50 WRITEDB: UPDATE Users SET name = E'uid115', deleted = E'false', email = E'', networktype = E'  ', password = E'uid115', isbanned = E'false', regdate = E'2016-11-03 18:37:16.527174+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 115
03.11 20:29:13 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 115 }, _type => vdl/cache.battle.findRandom }
03.11 20:29:13 DB: SELECT nextval('Battle_id_seq') AS id
03.11 20:29:13 READDB: SELECT ID FROM Battle WHERE ID = 7
03.11 20:29:13 READDB: INSERT INTO Battle (ID) VALUES (7)
03.11 20:29:13 STATS: cache [battle], get [13 calls, 0 cache hits, 12 cache misses, 0 same version, 12 not found]
03.11 20:29:13 STATS: cache [battle], segments [13 calls, 0 hits, 12 misses]
03.11 20:29:13 STATS: cache [battle], database [2198 calls, 12 reads, 0 writes]
03.11 20:29:13 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:29:13 READDB: SELECT * FROM Battle WHERE ID = 7
03.11 20:29:13 DB: SELECT name FROM users WHERE id=115
03.11 20:29:13 DB: SELECT name FROM users WHERE id=107
03.11 20:29:13 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 2, battleId => 7, player => 1 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 20:29:13 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 1, battleId => 7, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 20:29:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 20:29:13 TIME: vdl/cache.battle.findRandom : 81.11 ms
03.11 20:29:18 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'115', finished = E'false', endtime = E'1481794.15350533', firstid = E'115', params = E'{}', avaliable = E'false' WHERE ID = 7
03.11 20:29:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
03.11 20:29:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 20:29:25 TIME: vdl/cache.battle.infoRoom : 0.16 ms
03.11 20:29:35 TIMER: Clans cache...
03.11 20:29:35 TIMER: Clans cache: 0ms
03.11 20:29:35 TIMER: Check tournament...
03.11 20:29:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:29' OR rounddate = '2016-03-11 20:29' AND status <> 'finished'
03.11 20:29:35 DB: SELECT * FROM battle WHERE endtime >= '1478194.17515224' AND avaliable = true AND finished <> true
03.11 20:29:35 TIMER: Check tournament: 1ms
03.11 20:29:35 BLOCKREMOVE: battle 7 removed
03.11 20:29:35 TIMER: Clans cache...
03.11 20:29:35 TIMER: Clans cache: 0ms
03.11 20:29:35 TIMER: Check tournament...
03.11 20:29:35 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:30' OR rounddate = '2016-03-11 20:30' AND status <> 'finished'
03.11 20:29:35 DB: SELECT * FROM battle WHERE endtime >= '1478194.23516726' AND avaliable = true AND finished <> true
03.11 20:29:35 TIMER: Check tournament: 1ms
03.11 20:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:31:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:31:08 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 20:31:08 TIME: core/server.query : 1.01 ms
03.11 20:31:08 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:31:08 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:31:08 TIME: core/user.isOnlineID : 0.11 ms
03.11 20:31:08 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:31:08 STATS: cache [user], get [14 calls, 1 cache hits, 13 cache misses, 0 same version, 0 not found]
03.11 20:31:08 STATS: cache [user], segments [66 calls, 39 hits, 26 misses]
03.11 20:31:08 STATS: cache [user], database [2313 calls, 13 reads, 25 writes]
03.11 20:31:08 STATS: cache [user], lock [15 calls, 15 attempts, 0 failures]
03.11 20:31:08 READDB: SELECT * FROM Users WHERE ID = 114
03.11 20:31:08 STATS: cache manager [1], get [29 calls, total 0.04 sec spent, avg 1.36 ms]
03.11 20:31:08 STATS: cache manager [1], update [37 calls, total 0 sec spent, avg 0.09 ms]
03.11 20:31:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 20:31:08 TIME: core/cache.get : 1.94 ms
03.11 20:31:08 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:31:08 STATS: cache [questdata], get [14 calls, 1 cache hits, 13 cache misses, 0 same version, 0 not found]
03.11 20:31:08 STATS: cache [questdata], segments [53 calls, 26 hits, 26 misses]
03.11 20:31:08 STATS: cache [questdata], database [2313 calls, 13 reads, 12 writes]
03.11 20:31:08 STATS: cache [questdata], lock [15 calls, 15 attempts, 0 failures]
03.11 20:31:08 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 20:31:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 20:31:08 TIME: core/cache.get : 1.12 ms
03.11 20:31:08 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:31:08 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:31:08 TIME: core/user.loginPost : 0.1 ms
03.11 20:31:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 20:31:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:31:15 TIME: core/cache.update : 0.13 ms
03.11 20:31:15 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 20:31:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
03.11 20:31:21 STATS: cache [battle], get [15 calls, 1 cache hits, 13 cache misses, 0 same version, 12 not found]
03.11 20:31:21 STATS: cache [battle], segments [17 calls, 3 hits, 13 misses]
03.11 20:31:21 STATS: cache [battle], database [2326 calls, 13 reads, 1 writes]
03.11 20:31:21 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:31:21 READDB: SELECT * FROM Battle WHERE ID = 7
03.11 20:31:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 20:31:21 TIME: vdl/cache.battle.infoRoom : 1.45 ms
03.11 20:31:40 TIMER: Starting timer...
03.11 20:31:40 TIMER: Timer running...
03.11 20:31:40 DB: SELECT * FROM GameVars
03.11 20:31:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 20:31:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 20:31:40 DB: SELECT * FROM Shops WHERE ID = 1
03.11 20:31:40 TEMP: load ./tmp/quest_daily_ids
03.11 20:31:40 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
03.11 20:31:40 TEMP: save ./tmp/quest_daily_ids
03.11 20:31:40 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 20:31:40 QUEUE: vdl.0 (thread) response server.login
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM LocalizationStrings
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 19.96 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM GameVars
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.11 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.68 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.72 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.27 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 2 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/quest.getDaily
03.11 20:31:40 TIME: core/quest.getDaily : 0.04 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM UserAttributeTypes
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.48 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM UserVariableTypes
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.32 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 20:31:40 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 3.32 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM ItemGroups
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 0.86 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM Bundles ORDER BY ID
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.25 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 2.25 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/shop.getList
03.11 20:31:40 TIME: core/shop.getList : 0.15 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM EffectAttributeTypes
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 4.33 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM Effects
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.07 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 20:31:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 2.22 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 20:31:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.44 ms
03.11 20:31:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 20:31:40 DB: SELECT * FROM Badges
03.11 20:31:40 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:31:40 TIME: core/server.query : 1.03 ms
03.11 20:31:40 TIMER: Clans cache...
03.11 20:31:40 TIMER: Clans cache: 0ms
03.11 20:31:40 TIMER: Check tournament...
03.11 20:31:40 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:32' OR rounddate = '2016-03-11 20:32' AND status <> 'finished'
03.11 20:31:40 DB: SELECT * FROM battle WHERE endtime >= '1478194.36037435' AND avaliable = true AND finished <> true
03.11 20:31:40 TIMER: Check tournament: 3ms
03.11 20:31:40 TIMER: Clans cache...
03.11 20:31:40 TIMER: Clans cache: 0ms
03.11 20:31:40 TIMER: Check tournament...
03.11 20:31:40 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:33' OR rounddate = '2016-03-11 20:33' AND status <> 'finished'
03.11 20:31:40 DB: SELECT * FROM battle WHERE endtime >= '1478194.42038716' AND avaliable = true AND finished <> true
03.11 20:31:40 TIMER: Check tournament: 3ms
03.11 20:34:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:34:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:34:11 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:34:11 TIME: core/server.query : 1.98 ms
03.11 20:34:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:34:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID
03.11 20:34:11 TIME: core/user.isOnlineID : 0.09 ms
03.11 20:34:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:34:11 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 20:34:11 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
03.11 20:34:11 STATS: cache [user], database [151 calls, 0 reads, 0 writes]
03.11 20:34:11 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
03.11 20:34:11 READDB: SELECT * FROM Users WHERE ID = 114
03.11 20:34:11 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 6.12 ms]
03.11 20:34:11 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
03.11 20:34:11 QUEUE: vdl.0 (thread) response core/cache.get
03.11 20:34:11 TIME: core/cache.get : 6.38 ms
03.11 20:34:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:34:11 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 20:34:11 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
03.11 20:34:11 STATS: cache [questdata], database [151 calls, 0 reads, 0 writes]
03.11 20:34:11 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
03.11 20:34:11 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 20:34:11 QUEUE: vdl.0 (thread) response core/cache.get
03.11 20:34:11 TIME: core/cache.get : 1.46 ms
03.11 20:34:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:34:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:34:11 TIME: core/user.loginPost : 0.15 ms
03.11 20:34:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 20:34:16 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 20:34:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:34:16 TIME: core/server.query : 1.02 ms
03.11 20:34:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:34:16 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 20:34:16 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
03.11 20:34:16 STATS: cache [battle], database [156 calls, 0 reads, 0 writes]
03.11 20:34:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:34:16 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:34:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:34:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:34:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:34:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 20:34:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:34:16 TIME: core/cache.update : 0.18 ms
03.11 20:34:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 20:34:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:34:16 TIME: core/cache.update : 0.15 ms
03.11 20:34:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 20:34:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:34:16 TIME: core/user.logoutPost : 0.12 ms
03.11 20:34:16 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 20:34:16 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 20:34:26 BLOCKREMOVE: user 114 removed
03.11 20:34:26 BLOCKREMOVE: questdata 114 removed
03.11 20:34:40 TIMER: Clans cache...
03.11 20:34:40 TIMER: Clans cache: 0ms
03.11 20:34:40 TIMER: Check tournament...
03.11 20:34:40 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:34' OR rounddate = '2016-03-11 20:34' AND status <> 'finished'
03.11 20:34:40 DB: SELECT * FROM battle WHERE endtime >= '1478194.48040819' AND avaliable = true AND finished <> true
03.11 20:34:40 TIMER: Check tournament: 1ms
03.11 20:34:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:34:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:34:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 20:34:53 TIME: core/server.query : 1.52 ms
03.11 20:34:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:34:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:34:53 TIME: core/user.isOnlineID : 0.12 ms
03.11 20:34:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:34:53 READDB: SELECT * FROM Users WHERE ID = 114
03.11 20:34:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 20:34:53 TIME: core/cache.get : 1.31 ms
03.11 20:34:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:34:53 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 20:34:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 20:34:53 TIME: core/cache.get : 0.76 ms
03.11 20:34:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:34:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:34:53 TIME: core/user.loginPost : 0.09 ms
03.11 20:35:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 20:35:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:35:00 TIME: core/cache.update : 0.2 ms
03.11 20:35:01 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 20:35:06 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 20:35:06 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 20:35:06 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:35:06 TIME: core/server.query : 0.98 ms
03.11 20:35:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:35:06 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:35:06 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:35:06 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:35:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:35:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 20:35:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:35:06 TIME: core/cache.update : 0.2 ms
03.11 20:35:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 20:35:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:35:06 TIME: core/cache.update : 0.23 ms
03.11 20:35:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 20:35:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:35:06 TIME: core/user.logoutPost : 0.17 ms
03.11 20:35:07 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 20:35:07 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 20:35:17 BLOCKREMOVE: user 114 removed
03.11 20:35:17 BLOCKREMOVE: questdata 114 removed
03.11 20:35:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 20:35:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 20:35:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 20:35:31 TIME: core/server.query : 2.67 ms
03.11 20:35:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 20:35:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:35:31 TIME: core/user.isOnlineID : 0.11 ms
03.11 20:35:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 20:35:31 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 20:35:31 STATS: cache [user], segments [10 calls, 5 hits, 4 misses]
03.11 20:35:31 STATS: cache [user], database [231 calls, 2 reads, 3 writes]
03.11 20:35:31 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
03.11 20:35:31 READDB: SELECT * FROM Users WHERE ID = 114
03.11 20:35:31 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2.09 ms]
03.11 20:35:31 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.06 ms]
03.11 20:35:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 20:35:31 TIME: core/cache.get : 1.55 ms
03.11 20:35:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 20:35:31 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 20:35:31 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
03.11 20:35:31 STATS: cache [questdata], database [231 calls, 2 reads, 2 writes]
03.11 20:35:31 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
03.11 20:35:31 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 20:35:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 20:35:31 TIME: core/cache.get : 1.58 ms
03.11 20:35:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:35:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:35:31 TIME: core/user.loginPost : 1.24 ms
03.11 20:35:40 TIMER: Clans cache...
03.11 20:35:40 TIMER: Clans cache: 0ms
03.11 20:35:40 TIMER: Check tournament...
03.11 20:35:40 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:35' OR rounddate = '2016-03-11 20:35' AND status <> 'finished'
03.11 20:35:40 DB: SELECT * FROM battle WHERE endtime >= '1478194.5404236' AND avaliable = true AND finished <> true
03.11 20:35:40 TIMER: Check tournament: 3ms
03.11 20:35:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 20:35:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:35:40 TIME: core/cache.update : 0.19 ms
03.11 20:36:33 TIMER: Starting timer...
03.11 20:36:33 TIMER: Timer running...
03.11 20:36:33 DB: SELECT * FROM GameVars
03.11 20:36:33 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 20:36:33 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 20:36:33 DB: SELECT * FROM Shops WHERE ID = 1
03.11 20:36:33 TEMP: load ./tmp/quest_daily_ids
03.11 20:36:33 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
03.11 20:36:33 TEMP: save ./tmp/quest_daily_ids
03.11 20:36:33 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 20:36:33 QUEUE: vdl.0 (thread) response server.login
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM LocalizationStrings
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 12.89 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM GameVars
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 2.68 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 1.58 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 0.79 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 0.96 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 2.3 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/quest.getDaily
03.11 20:36:33 TIME: core/quest.getDaily : 0.33 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM UserAttributeTypes
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 1.08 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM UserVariableTypes
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 0.76 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 20:36:33 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 1.93 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM ItemGroups
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 0.8 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM Bundles ORDER BY ID
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 1.07 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 0.88 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/shop.getList
03.11 20:36:33 TIME: core/shop.getList : 0.07 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM EffectAttributeTypes
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 0.9 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM Effects
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 1.05 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 20:36:33 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 2.41 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 20:36:33 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 1.33 ms
03.11 20:36:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 20:36:33 DB: SELECT * FROM Badges
03.11 20:36:33 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:36:33 TIME: core/server.query : 1.67 ms
03.11 20:36:33 TIMER: Clans cache...
03.11 20:36:33 TIMER: Clans cache: 0ms
03.11 20:36:33 TIMER: Check tournament...
03.11 20:36:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:37' OR rounddate = '2016-03-11 20:37' AND status <> 'finished'
03.11 20:36:33 DB: SELECT * FROM battle WHERE endtime >= '1478194.65350307' AND avaliable = true AND finished <> true
03.11 20:36:33 TIMER: Check tournament: 4ms
03.11 20:36:33 TIMER: Clans cache...
03.11 20:36:33 TIMER: Clans cache: 0ms
03.11 20:36:33 TIMER: Check tournament...
03.11 20:36:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:38' OR rounddate = '2016-03-11 20:38' AND status <> 'finished'
03.11 20:36:33 DB: SELECT * FROM battle WHERE endtime >= '1478194.71352028' AND avaliable = true AND finished <> true
03.11 20:36:33 TIMER: Check tournament: 4ms
03.11 20:36:33 TIMER: Clans cache...
03.11 20:36:33 TIMER: Clans cache: 0ms
03.11 20:36:33 TIMER: Check tournament...
03.11 20:36:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:39' OR rounddate = '2016-03-11 20:39' AND status <> 'finished'
03.11 20:36:33 DB: SELECT * FROM battle WHERE endtime >= '1478194.77353565' AND avaliable = true AND finished <> true
03.11 20:36:33 TIMER: Check tournament: 1ms
03.11 20:36:33 TIMER: Clans cache...
03.11 20:36:33 TIMER: Clans cache: 0ms
03.11 20:36:33 TIMER: Check tournament...
03.11 20:36:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:40' OR rounddate = '2016-03-11 20:40' AND status <> 'finished'
03.11 20:36:33 DB: SELECT * FROM battle WHERE endtime >= '1478194.83354595' AND avaliable = true AND finished <> true
03.11 20:36:33 TIMER: Check tournament: 1ms
03.11 20:36:33 TIMER: Clans cache...
03.11 20:36:33 TIMER: Clans cache: 0ms
03.11 20:36:33 TIMER: Check tournament...
03.11 20:36:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:41' OR rounddate = '2016-03-11 20:41' AND status <> 'finished'
03.11 20:36:33 DB: SELECT * FROM battle WHERE endtime >= '1478194.89355836' AND avaliable = true AND finished <> true
03.11 20:36:33 TIMER: Check tournament: 2ms
03.11 20:36:33 TIMER: Clans cache...
03.11 20:36:33 TIMER: Clans cache: 0ms
03.11 20:36:33 TIMER: Check tournament...
03.11 20:36:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:42' OR rounddate = '2016-03-11 20:42' AND status <> 'finished'
03.11 20:36:33 DB: SELECT * FROM battle WHERE endtime >= '1478194.95356975' AND avaliable = true AND finished <> true
03.11 20:36:33 TIMER: Check tournament: 1ms
03.11 20:36:33 TIMER: Clans cache...
03.11 20:36:33 TIMER: Clans cache: 0ms
03.11 20:36:33 TIMER: Check tournament...
03.11 20:36:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:43' OR rounddate = '2016-03-11 20:43' AND status <> 'finished'
03.11 20:36:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.01358204' AND avaliable = true AND finished <> true
03.11 20:36:33 TIMER: Check tournament: 1ms
03.11 20:36:33 TIMER: Clans cache...
03.11 20:36:33 TIMER: Clans cache: 0ms
03.11 20:36:33 TIMER: Check tournament...
03.11 20:36:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:44' OR rounddate = '2016-03-11 20:44' AND status <> 'finished'
03.11 20:36:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.07359281' AND avaliable = true AND finished <> true
03.11 20:36:33 TIMER: Check tournament: 2ms
03.11 20:44:39 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:44:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:44:39 QUEUE: vdl.0 (thread) response core/server.query
03.11 20:44:39 TIME: core/server.query : 2.18 ms
03.11 20:44:39 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:44:39 QUEUE: vdl.0 (thread) response core/user.isOnlineID
03.11 20:44:39 TIME: core/user.isOnlineID : 0.09 ms
03.11 20:44:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:44:39 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 20:44:39 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
03.11 20:44:39 STATS: cache [user], database [486 calls, 0 reads, 0 writes]
03.11 20:44:39 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
03.11 20:44:39 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:44:39 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.77 ms]
03.11 20:44:39 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
03.11 20:44:39 QUEUE: vdl.0 (thread) response core/cache.get
03.11 20:44:39 TIME: core/cache.get : 5.01 ms
03.11 20:44:39 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:44:39 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 20:44:39 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
03.11 20:44:39 STATS: cache [questdata], database [486 calls, 0 reads, 0 writes]
03.11 20:44:39 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
03.11 20:44:39 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:44:39 QUEUE: vdl.0 (thread) response core/cache.get
03.11 20:44:39 TIME: core/cache.get : 2.75 ms
03.11 20:44:39 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:44:39 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:44:39 TIME: core/user.loginPost : 0.38 ms
03.11 20:44:48 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:44:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:44:48 TIME: core/cache.update : 0.19 ms
03.11 20:44:49 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:45:33 TIMER: Clans cache...
03.11 20:45:33 TIMER: Clans cache: 0ms
03.11 20:45:33 TIMER: Check tournament...
03.11 20:45:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:45' OR rounddate = '2016-03-11 20:45' AND status <> 'finished'
03.11 20:45:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.13361219' AND avaliable = true AND finished <> true
03.11 20:45:33 TIMER: Check tournament: 3ms
03.11 20:45:46 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:45:46 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:45:46 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 7 }}, errorCode => ok, _type => core/server.query }
03.11 20:45:46 TIME: core/server.query : 1.38 ms
03.11 20:45:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 7, _type => vdl/cache.battle.infoRoom }
03.11 20:45:46 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 20:45:46 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
03.11 20:45:46 STATS: cache [battle], database [553 calls, 0 reads, 0 writes]
03.11 20:45:46 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:45:46 READDB: SELECT * FROM Battle WHERE ID = 7
03.11 20:45:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 20:45:46 TIME: vdl/cache.battle.infoRoom : 1.93 ms
03.11 20:45:46 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 7, _type => vdl/cache.battle.finishRoom }
03.11 20:45:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 20:45:46 TIME: vdl/cache.battle.finishRoom : 0.11 ms
03.11 20:45:46 NET: vdl.0 (thread) request core/user.sendTo { id => 115, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 20:45:46 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 20:45:46 TIME: core/user.sendTo : 0.11 ms
03.11 20:45:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:45:46 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 20:45:46 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
03.11 20:45:46 STATS: cache [user], database [553 calls, 1 reads, 1 writes]
03.11 20:45:46 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
03.11 20:45:46 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 3.71 ms]
03.11 20:45:46 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.18 ms]
03.11 20:45:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:45:46 TIME: core/cache.update : 0.52 ms
03.11 20:45:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:45:46 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 20:45:46 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
03.11 20:45:46 STATS: cache [questdata], database [553 calls, 1 reads, 0 writes]
03.11 20:45:46 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
03.11 20:45:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:45:46 TIME: core/cache.update : 0.29 ms
03.11 20:45:46 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:45:46 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:45:46 TIME: core/user.logoutPost : 0.12 ms
03.11 20:45:46 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:45:46 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:45:51 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'115', finished = E'true', endtime = E'1481790', firstid = E'115', params = E'{}', avaliable = E'false' WHERE ID = 7
03.11 20:45:56 BLOCKREMOVE: user 107 removed
03.11 20:45:56 BLOCKREMOVE: questdata 107 removed
03.11 20:45:57 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:45:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:45:57 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:45:57 TIME: core/server.query : 1.34 ms
03.11 20:45:57 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:45:57 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:45:57 TIME: core/user.isOnlineID : 0.11 ms
03.11 20:45:57 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:45:57 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:45:57 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:45:57 TIME: core/cache.get : 1.87 ms
03.11 20:45:57 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:45:57 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:45:57 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:45:57 TIME: core/cache.get : 1.53 ms
03.11 20:45:57 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:45:57 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:45:57 TIME: core/user.loginPost : 0.12 ms
03.11 20:46:01 BLOCKREMOVE: battle 7 removed
03.11 20:46:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:46:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:46:03 TIME: core/cache.update : 0.25 ms
03.11 20:46:04 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:46:23 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 20:46:23 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 20:46:23 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 20:46:23 TIME: core/server.query : 1.09 ms
03.11 20:46:23 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 20:46:23 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 20:46:23 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 20:46:23 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 20:46:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 20:46:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 20:46:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 20:46:23 TIME: core/cache.update : 0.18 ms
03.11 20:46:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 20:46:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:46:23 TIME: core/cache.update : 0.16 ms
03.11 20:46:23 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 20:46:23 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 20:46:23 TIME: core/user.logoutPost : 0.12 ms
03.11 20:46:23 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:46:23 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:46' OR rounddate = '2016-03-11 20:46' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.1936261' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 2ms
03.11 20:46:33 BLOCKREMOVE: user 107 removed
03.11 20:46:33 BLOCKREMOVE: questdata 107 removed
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:47' OR rounddate = '2016-03-11 20:47' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.25364004' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 1ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:48' OR rounddate = '2016-03-11 20:48' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.31365151' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 2ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:49' OR rounddate = '2016-03-11 20:49' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.37366557' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 2ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:50' OR rounddate = '2016-03-11 20:50' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.43367736' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 1ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:51' OR rounddate = '2016-03-11 20:51' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.4936885' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 1ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:52' OR rounddate = '2016-03-11 20:52' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.55370391' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 1ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:53' OR rounddate = '2016-03-11 20:53' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.61371832' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 2ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:54' OR rounddate = '2016-03-11 20:54' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.67372994' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 1ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:55' OR rounddate = '2016-03-11 20:55' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.73374077' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 1ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:56' OR rounddate = '2016-03-11 20:56' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.7937523' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 2ms
03.11 20:46:33 TIMER: Clans cache...
03.11 20:46:33 TIMER: Clans cache: 0ms
03.11 20:46:33 TIMER: Check tournament...
03.11 20:46:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:57' OR rounddate = '2016-03-11 20:57' AND status <> 'finished'
03.11 20:46:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.85376343' AND avaliable = true AND finished <> true
03.11 20:46:33 TIMER: Check tournament: 1ms
03.11 20:57:34 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 20:57:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 20:57:34 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 20:57:34 TIME: core/server.query : 2.35 ms
03.11 20:57:34 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 20:57:34 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:57:34 TIME: core/user.isOnlineID : 0.09 ms
03.11 20:57:34 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 20:57:34 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 20:57:34 STATS: cache [user], segments [11 calls, 6 hits, 4 misses]
03.11 20:57:34 STATS: cache [user], database [1261 calls, 2 reads, 4 writes]
03.11 20:57:34 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
03.11 20:57:34 READDB: SELECT * FROM Users WHERE ID = 107
03.11 20:57:34 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2.39 ms]
03.11 20:57:34 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.12 ms]
03.11 20:57:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 20:57:34 TIME: core/cache.get : 2.04 ms
03.11 20:57:34 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 20:57:34 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 20:57:34 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
03.11 20:57:34 STATS: cache [questdata], database [1261 calls, 2 reads, 2 writes]
03.11 20:57:34 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
03.11 20:57:34 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 20:57:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 20:57:34 TIME: core/cache.get : 1.23 ms
03.11 20:57:34 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 20:57:34 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:57:34 TIME: core/user.loginPost : 0.12 ms
03.11 20:57:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 20:57:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:57:43 TIME: core/cache.update : 0.18 ms
03.11 20:57:43 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 20:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
03.11 20:57:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
03.11 20:57:46 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid115, networkid => , isbanned => false, id => 115 }}, errorCode => ok, _type => core/server.query }
03.11 20:57:46 TIME: core/server.query : 2.92 ms
03.11 20:57:46 NET: vdl.0 (thread) request core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
03.11 20:57:46 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 20:57:46 TIME: core/user.isOnlineID : 0.11 ms
03.11 20:57:46 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
03.11 20:57:46 READDB: SELECT * FROM Users WHERE ID = 115
03.11 20:57:46 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid115, deleted => false, email => , networktype =>   , password => uid115, isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478188735, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 115 } }
03.11 20:57:46 TIME: core/cache.get : 1.78 ms
03.11 20:57:46 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
03.11 20:57:46 READDB: SELECT * FROM UserQuests WHERE ID = 115
03.11 20:57:46 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 115 } }
03.11 20:57:46 TIME: core/cache.get : 1.14 ms
03.11 20:57:46 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 20:57:46 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 20:57:46 TIME: core/user.loginPost : 0.12 ms
03.11 20:57:53 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 115, _type => core/cache.update }
03.11 20:57:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 20:57:53 TIME: core/cache.update : 0.18 ms
03.11 20:57:53 WRITEDB: UPDATE Users SET name = E'uid115', deleted = E'false', email = E'', networktype = E'  ', password = E'uid115', isbanned = E'false', regdate = E'2016-11-03 18:37:16.527174+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 115
03.11 20:57:59 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 20:57:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 20:57:59 TIME: vdl/cache.battle.findRandom : 0.15 ms
03.11 20:58:06 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 115 }, _type => vdl/cache.battle.findRandom }
03.11 20:58:06 DB: SELECT nextval('Battle_id_seq') AS id
03.11 20:58:06 READDB: SELECT ID FROM Battle WHERE ID = 8
03.11 20:58:06 READDB: INSERT INTO Battle (ID) VALUES (8)
03.11 20:58:06 STATS: cache [battle], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 1 not found]
03.11 20:58:06 STATS: cache [battle], segments [5 calls, 2 hits, 2 misses]
03.11 20:58:06 STATS: cache [battle], database [1293 calls, 2 reads, 1 writes]
03.11 20:58:06 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 20:58:06 READDB: SELECT * FROM Battle WHERE ID = 8
03.11 20:58:06 DB: SELECT name FROM users WHERE id=115
03.11 20:58:06 DB: SELECT name FROM users WHERE id=107
03.11 20:58:06 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 2, battleId => 8, player => 1 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 20:58:06 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 1, battleId => 8, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 20:58:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 20:58:06 TIME: vdl/cache.battle.findRandom : 46.5 ms
03.11 20:58:11 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'115', finished = E'false', endtime = E'1481795.88660654', firstid = E'115', params = E'{}', avaliable = E'false' WHERE ID = 8
03.11 20:58:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 8, _type => vdl/cache.battle.infoRoom }
03.11 20:58:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 20:58:21 TIME: vdl/cache.battle.infoRoom : 0.18 ms
03.11 20:58:31 BLOCKREMOVE: battle 8 removed
03.11 20:58:33 TIMER: Clans cache...
03.11 20:58:33 TIMER: Clans cache: 0ms
03.11 20:58:33 TIMER: Check tournament...
03.11 20:58:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:58' OR rounddate = '2016-03-11 20:58' AND status <> 'finished'
03.11 20:58:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.913781' AND avaliable = true AND finished <> true
03.11 20:58:33 TIMER: Check tournament: 4ms
03.11 20:58:33 TIMER: Clans cache...
03.11 20:58:33 TIMER: Clans cache: 0ms
03.11 20:58:33 TIMER: Check tournament...
03.11 20:58:33 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 20:59' OR rounddate = '2016-03-11 20:59' AND status <> 'finished'
03.11 20:58:33 DB: SELECT * FROM battle WHERE endtime >= '1478195.97379551' AND avaliable = true AND finished <> true
03.11 20:58:33 TIMER: Check tournament: 1ms
