14.10 17:09:25 TIMER: Starting timer...
14.10 17:09:25 TIMER: Timer running...
14.10 17:09:25 DB: SELECT * FROM GameVars
14.10 17:09:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:09:25 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:09:25 DB: SELECT * FROM Shops WHERE ID = 1
14.10 17:09:25 TEMP: load ./tmp/quest_daily_ids
14.10 17:09:25 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 17:09:25 TEMP: save ./tmp/quest_daily_ids
14.10 17:09:25 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:09:25 QUEUE: vdl.0 (thread) response server.login
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM LocalizationStrings
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 13.77 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM GameVars
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 0.98 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 1.45 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 0.94 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 1.32 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 2.02 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 17:09:25 TIME: core/quest.getDaily : 0.08 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM UserAttributeTypes
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 0.96 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM UserVariableTypes
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 0.6 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:09:25 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 1.78 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM ItemGroups
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 0.67 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 1.17 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 0.79 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 17:09:25 TIME: core/shop.getList : 0.07 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM EffectAttributeTypes
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 0.9 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM Effects
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 1.25 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 17:09:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 1.79 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 17:09:25 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 1.35 ms
14.10 17:09:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 17:09:25 DB: SELECT * FROM Badges
14.10 17:09:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:09:25 TIME: core/server.query : 0.66 ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Check tournament...
14.10 17:09:25 DB: SELECT * FROM tournament WHERE startdate = cast(2016-14-10_17:10 as text) AND winner = -1 AND status = 'starting'
14.10 17:09:25 TIMER: Check tournament: 21ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cache: 0ms
14.10 17:09:25 TIMER: Clans cache...
14.10 17:09:25 TIMER: Clans cach14.10 17:26:14 TIMER: Starting timer...
14.10 17:26:14 TIMER: Timer running...
14.10 17:26:14 DB: SELECT * FROM GameVars
14.10 17:26:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:26:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:26:14 DB: SELECT * FROM Shops WHERE ID = 1
14.10 17:26:14 TEMP: load ./tmp/quest_daily_ids
14.10 17:26:14 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 17:26:14 TEMP: save ./tmp/quest_daily_ids
14.10 17:26:14 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:26:14 QUEUE: vdl.0 (thread) response server.login
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM LocalizationStrings
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 17.21 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM GameVars
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 1.21 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 1.43 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 1.24 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 1.11 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 2.18 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 17:26:14 TIME: core/quest.getDaily : 0.06 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM UserAttributeTypes
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 0.85 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM UserVariableTypes
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 0.77 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:26:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 1.71 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM ItemGroups
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 0.76 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 0.92 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 0.99 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 17:26:14 TIME: core/shop.getList : 0.04 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM EffectAttributeTypes
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 0.57 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM Effects
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 1.47 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 17:26:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 1.28 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 17:26:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 1.39 ms
14.10 17:26:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 17:26:14 DB: SELECT * FROM Badges
14.10 17:26:14 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:26:14 TIME: core/server.query : 0.83 ms
14.10 17:26:14 TIMER: Clans cache...
14.10 17:26:14 TIMER: Clans cache: 0ms
14.10 17:26:14 TIMER: Clans cache...
14.10 17:26:14 TIMER: Clans cache: 0ms
14.10 17:26:14 TIMER: Clans cache...
14.10 17:26:14 TIMER: Clans cache: 0ms
14.10 17:26:14 TIMER: Clans cache...
14.10 17:26:14 TIMER: Clans cache: 0ms
14.10 17:26:14 TIMER: Clans cache...
14.10 17:26:14 TIMER: Clans cache: 0ms
14.10 17:26:14 TIMER: Check tournament...
14.10 17:26:14 DB: SELECT * FROM tournament WHERE startdate = cast(2016-14-10_17:10 as text) AND winner = -1 AND status = 'starting'
14.10 17:26:14 TIMER: Check tournament: 13ms
14.10 17:31:32 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 17:31:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 17:31:32 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:31:32 TIME: core/server.query : 1.65 ms
14.10 17:31:32 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 17:31:32 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 17:31:32 TIME: core/user.isOnlineID : 0.05 ms
14.10 17:31:32 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 17:31:32 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 17:31:32 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 17:31:32 STATS: cache [user], database [319 calls, 0 reads, 0 writes]
14.10 17:31:32 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 17:31:32 READDB: SELECT * FROM Users WHERE ID = 34
14.10 17:31:32 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.03 ms]
14.10 17:31:32 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 17:31:32 QUEUE: vdl.0 (thread) response core/cache.get
14.10 17:31:32 TIME: core/cache.get : 2.19 ms
14.10 17:31:32 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 17:31:32 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 17:31:32 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
14.10 17:31:32 STATS: cache [questdata], database [319 calls, 0 reads, 0 writes]
14.10 17:31:32 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 17:31:32 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 17:31:32 QUEUE: vdl.0 (thread) response core/cache.get
14.10 17:31:32 TIME: core/cache.get : 0.97 ms
14.10 17:31:32 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 17:31:32 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 17:31:32 TIME: core/user.loginPost : 0.08 ms
14.10 17:31:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 17:31:37 DB: SELECT * FROM tournament
14.10 17:31:37 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 17:31:37 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 17:31:37 STATS: cache [tournament], database [324 calls, 0 reads, 0 writes]
14.10 17:31:37 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 17:31:37 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 17:31:37 DB: SELECT name FROM users WHERE id = 34
14.10 17:31:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_17:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 17:31:37 TIME: vdl/cache.tournament.getAvailableTournament : 5.08 ms
14.10 17:31:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 17:31:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 17:31:39 TIME: core/cache.update : 0.16 ms
14.10 17:31:40 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 17:31:48 BLOCKREMOVE: tournament 1 removed
14.10 17:32:39 TIMER: Starting timer...
14.10 17:32:39 TIMER: Timer running...
14.10 17:32:39 DB: SELECT * FROM GameVars
14.10 17:32:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:32:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:32:39 DB: SELECT * FROM Shops WHERE ID = 1
14.10 17:32:39 TEMP: load ./tmp/quest_daily_ids
14.10 17:32:39 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 17:32:39 TEMP: save ./tmp/quest_daily_ids
14.10 17:32:39 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:32:39 QUEUE: vdl.0 (thread) response server.login
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:32:39 DB: SELECT * FROM LocalizationStrings
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:32:39 TIME: core/server.query : 17.99 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:32:39 DB: SELECT * FROM GameVars
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:32:39 TIME: core/server.query : 0.94 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:32:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:32:39 TIME: core/server.query : 1.2 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:32:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:32:39 TIME: core/server.query : 0.5 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:32:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:32:39 TIME: core/server.query : 1.68 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:32:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:32:39 TIME: core/server.query : 1.22 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 17:32:39 TIME: core/quest.getDaily : 0.04 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:32:39 DB: SELECT * FROM UserAttributeTypes
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:32:39 TIME: core/server.query : 0.46 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:32:39 DB: SELECT * FROM UserVariableTypes
14.10 17:32:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:32:39 TIME: core/server.query : 0.48 ms
14.10 17:32:39 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:32:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.14.10 17:33:35 TIMER: Starting timer...
14.10 17:33:35 TIMER: Timer running...
14.10 17:33:35 DB: SELECT * FROM GameVars
14.10 17:33:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:33:35 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:33:35 DB: SELECT * FROM Shops WHERE ID = 1
14.10 17:33:35 TEMP: load ./tmp/quest_daily_ids
14.10 17:33:35 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 17:33:35 TEMP: save ./tmp/quest_daily_ids
14.10 17:33:35 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:33:35 QUEUE: vdl.0 (thread) response server.login
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM LocalizationStrings
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 14.35 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM GameVars
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 1.11 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 1.26 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 0.84 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 1.14 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 1.55 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 17:33:35 TIME: core/quest.getDaily : 0.03 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM UserAttributeTypes
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 0.75 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM UserVariableTypes
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 0.58 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:33:35 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 1.94 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM ItemGroups
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 0.64 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 1.12 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 0.69 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 17:33:35 TIME: core/shop.getList : 0.05 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM EffectAttributeTypes
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 0.58 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM Effects
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 0.77 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 17:33:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 1.56 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 17:33:35 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 1.37 ms
14.10 17:33:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 17:33:35 DB: SELECT * FROM Badges
14.10 17:33:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:33:35 TIME: core/server.query : 0.55 ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Check tournament...
14.10 17:33:35 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 17:10' AND winner = -1 AND status = 'starting'
14.10 17:33:35 TIMER: Check tournament: 1ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.10 17:33:35 TIMER: Clans cache...
14.10 17:33:35 TIMER: Clans cache: 0ms
14.114.10 17:48:35 TIMER: Starting timer...
14.10 17:48:35 TIMER: Timer running...
14.10 17:48:35 DB: SELECT * FROM GameVars
14.10 17:48:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:48:35 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:48:35 DB: SELECT * FROM Shops WHERE ID = 1
14.10 17:48:35 TEMP: load ./tmp/quest_daily_ids
14.10 17:48:35 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 17:48:35 TEMP: save ./tmp/quest_daily_ids
14.10 17:48:35 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:48:35 QUEUE: vdl.0 (thread) response server.login
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM LocalizationStrings
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 9.57 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM GameVars
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.61 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.77 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.67 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.6 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.93 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 17:48:35 TIME: core/quest.getDaily : 0.03 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM UserAttributeTypes
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.43 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM UserVariableTypes
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.63 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:48:35 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 1.45 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM ItemGroups
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.82 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.55 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 1.07 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 17:48:35 TIME: core/shop.getList : 0.03 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM EffectAttributeTypes
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.83 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM Effects
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.61 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 17:48:35 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.9 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 17:48:35 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 1.02 ms
14.10 17:48:35 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 17:48:35 DB: SELECT * FROM Badges
14.10 17:48:35 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:48:35 TIME: core/server.query : 0.54 ms
14.10 17:48:40 TIMER: Test...
14.10 17:48:40 TIMER: Test: 0ms
14.10 17:48:45 TIMER: Test...
14.10 17:48:45 TIMER: Test: 0ms
14.10 17:49:05 TIMER: Starting timer...
14.10 17:49:05 TIMER: Timer running...
14.10 17:49:05 DB: SELECT * FROM GameVars
14.10 17:49:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:49:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:49:05 DB: SELECT * FROM Shops WHERE ID = 1
14.10 17:49:05 TEMP: load ./tmp/quest_daily_ids
14.10 17:49:05 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 17:49:05 TEMP: save ./tmp/quest_daily_ids
14.10 17:49:06 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:49:06 QUEUE: vdl.0 (thread) response server.login
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM LocalizationStrings
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 8.97 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM GameVars
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.56 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 1.86 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.52 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.65 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 1.08 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 17:49:06 TIME: core/quest.getDaily : 0.03 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM UserAttributeTypes
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.52 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM UserVariableTypes
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.43 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:49:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 1.17 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM ItemGroups
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.41 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.48 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.49 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 17:49:06 TIME: core/shop.getList : 0.06 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM EffectAttributeTypes
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.46 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM Effects
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.38 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 17:49:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.73 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 17:49:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.59 ms
14.10 17:49:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 17:49:06 DB: SELECT * FROM Badges
14.10 17:49:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:06 TIME: core/server.query : 0.67 ms
14.10 17:49:11 TIMER: Test...
14.10 17:49:11 TIMER: Test: 0ms
14.10 17:49:16 TIMER: Test...
14.10 17:49:16 TIMER: Test: 0ms
14.10 17:49:21 TIMER: Test...
14.10 17:49:21 TIMER: Test: 0ms
14.10 17:49:26 TIMER: Test...
14.10 17:49:26 TIMER: Test: 0ms
14.10 17:49:39 TIMER: Starting timer...
14.10 17:49:39 TIMER: Timer running...
14.10 17:49:39 DB: SELECT * FROM GameVars
14.10 17:49:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:49:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:49:39 DB: SELECT * FROM Shops WHERE ID = 1
14.10 17:49:39 TEMP: load ./tmp/quest_daily_ids
14.10 17:49:39 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 17:49:39 TEMP: save ./tmp/quest_daily_ids
14.10 17:49:39 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:49:39 QUEUE: vdl.0 (thread) response server.login
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM LocalizationStrings
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 12.79 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM GameVars
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.86 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.96 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.55 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.84 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 1.36 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 17:49:39 TIME: core/quest.getDaily : 0.03 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM UserAttributeTypes
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.54 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM UserVariableTypes
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.46 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:49:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 5.39 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM ItemGroups
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.78 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.99 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 1.12 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 17:49:39 TIME: core/shop.getList : 0.03 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM EffectAttributeTypes
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.56 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM Effects
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.47 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 17:49:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.82 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 17:49:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.91 ms
14.10 17:49:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 17:49:39 DB: SELECT * FROM Badges
14.10 17:49:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:49:39 TIME: core/server.query : 0.47 ms
14.10 17:49:44 TIMER: Test...
14.10 17:49:44 TIMER: Test: 0ms
14.10 17:49:49 TIMER: Test...
14.10 17:49:49 TIMER: Test: 0ms
14.10 17:49:54 TIMER: Test...
14.10 17:49:54 TIMER: Test: 0ms
14.10 17:50:09 TIMER: Starting timer...
14.10 17:50:09 TIMER: Timer running...
14.10 17:50:09 DB: SELECT * FROM GameVars
14.10 17:50:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:50:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:50:09 DB: SELECT * FROM Shops WHERE ID = 1
14.10 17:50:09 TEMP: load ./tmp/quest_daily_ids
14.10 17:50:09 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 17:50:09 TEMP: save ./tmp/quest_daily_ids
14.10 17:50:09 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 17:50:09 QUEUE: vdl.0 (thread) response server.login
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM LocalizationStrings
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 25.9 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM GameVars
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.33 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.88 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 2.26 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.61 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 2.43 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 17:50:09 TIME: core/quest.getDaily : 0.09 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM UserAttributeTypes
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 2.73 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM UserVariableTypes
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.7 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 17:50:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 3.43 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM ItemGroups
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.42 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM Bundles ORDER BY ID
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.46 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.3 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 17:50:09 TIME: core/shop.getList : 0.15 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM EffectAttributeTypes
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.36 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM Effects
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 1.27 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 17:50:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 3.4 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 17:50:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 3.61 ms
14.10 17:50:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 17:50:09 DB: SELECT * FROM Badges
14.10 17:50:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 17:50:09 TIME: core/server.query : 2.57 ms
