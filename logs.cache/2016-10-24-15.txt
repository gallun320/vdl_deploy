24.10 15:03:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 15:03:44 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 1 not found]
24.10 15:03:44 STATS: cache [battle], segments [5 calls, 2 hits, 2 misses]
24.10 15:03:44 STATS: cache [battle], database [971 calls, 2 reads, 1 writes]
24.10 15:03:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:03:44 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 15:03:44 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 15:03:44 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 15:03:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 15:03:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
24.10 15:03:44 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
24.10 15:03:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 59 }}, errorCode => ok, _type => core/server.query }
24.10 15:03:44 TIME: core/server.query : 1.82 ms
24.10 15:03:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 59, _type => vdl/cache.battle.infoRoom }
24.10 15:03:44 READDB: SELECT * FROM Battle WHERE ID = 59
24.10 15:03:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:03:44 TIME: vdl/cache.battle.infoRoom : 0.93 ms
24.10 15:03:44 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 59, _type => vdl/cache.battle.deleteRoom }
24.10 15:03:44 ROOM: deleted room 59
24.10 15:03:44 DB: DELETE FROM Battle WHERE ID = 59
24.10 15:03:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 15:03:44 TIME: vdl/cache.battle.deleteRoom : 14.42 ms
24.10 15:03:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
24.10 15:03:44 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:03:44 STATS: cache [user], segments [9 calls, 2 hits, 4 misses]
24.10 15:03:44 STATS: cache [user], database [972 calls, 2 reads, 2 writes]
24.10 15:03:44 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 15:03:44 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.66 ms]
24.10 15:03:44 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.13 ms]
24.10 15:03:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 15:03:44 TIME: core/cache.update : 0.54 ms
24.10 15:03:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
24.10 15:03:44 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:03:44 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
24.10 15:03:44 STATS: cache [questdata], database [972 calls, 2 reads, 0 writes]
24.10 15:03:44 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 15:03:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:03:44 TIME: core/cache.update : 0.31 ms
24.10 15:03:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
24.10 15:03:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 15:03:44 TIME: core/user.logoutPost : 0.1 ms
24.10 15:03:45 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:03:45 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
24.10 15:03:55 BLOCKREMOVE: user 76 removed
24.10 15:03:55 BLOCKREMOVE: questdata 76 removed
24.10 15:03:55 BLOCKREMOVE: battle 59 removed
24.10 15:04:33 TIMER: Clans cache...
24.10 15:04:33 TIMER: Clans cache: 0ms
24.10 15:04:33 TIMER: Check tournament...
24.10 15:04:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:04' OR rounddate = '2016-24-10 15:04'
24.10 15:04:33 TIMER: Check tournament: 0ms
24.10 15:04:33 TIMER: Clans cache...
24.10 15:04:33 TIMER: Clans cache: 0ms
24.10 15:04:33 TIMER: Check tournament...
24.10 15:04:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:05' OR rounddate = '2016-24-10 15:05'
24.10 15:04:33 TIMER: Check tournament: 0ms
24.10 15:05:50 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
24.10 15:05:50 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
24.10 15:05:50 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 15:05:50 TIME: core/server.query : 0.46 ms
24.10 15:05:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 15:05:50 STATS: cache [battle], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 2 not found]
24.10 15:05:50 STATS: cache [battle], segments [8 calls, 3 hits, 4 misses]
24.10 15:05:50 STATS: cache [battle], database [1097 calls, 4 reads, 1 writes]
24.10 15:05:50 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:05:50 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 15:05:50 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 15:05:50 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 15:05:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 15:05:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
24.10 15:05:50 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:05:50 STATS: cache [user], segments [11 calls, 4 hits, 4 misses]
24.10 15:05:50 STATS: cache [user], database [1097 calls, 2 reads, 3 writes]
24.10 15:05:50 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 15:05:50 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.66 ms]
24.10 15:05:50 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.15 ms]
24.10 15:05:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 15:05:50 TIME: core/cache.update : 0.28 ms
24.10 15:05:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
24.10 15:05:50 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:05:50 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
24.10 15:05:50 STATS: cache [questdata], database [1097 calls, 2 reads, 1 writes]
24.10 15:05:50 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 15:05:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:05:50 TIME: core/cache.update : 0.2 ms
24.10 15:05:50 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
24.10 15:05:50 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 15:05:50 TIME: core/user.logoutPost : 0.06 ms
24.10 15:05:50 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 15:05:50 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
24.10 15:06:00 BLOCKREMOVE: user 2 removed
24.10 15:06:00 BLOCKREMOVE: questdata 2 removed
24.10 15:06:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 15:06:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 15:06:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 15:06:12 TIME: core/server.query : 1.05 ms
24.10 15:06:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 15:06:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 15:06:12 TIME: core/user.isOnlineID : 0.11 ms
24.10 15:06:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 15:06:12 READDB: SELECT * FROM Users WHERE ID = 2
24.10 15:06:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 15:06:12 TIME: core/cache.get : 1.62 ms
24.10 15:06:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 15:06:12 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 15:06:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 15:06:12 TIME: core/cache.get : 0.74 ms
24.10 15:06:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 15:06:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:06:12 TIME: core/user.loginPost : 0.13 ms
24.10 15:06:18 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 15:06:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:06:18 TIME: core/cache.update : 0.12 ms
24.10 15:06:18 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 15:06:18 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 15:06:18 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:06:18 TIME: vdl/cache.user.getData : 0.14 ms
24.10 15:06:33 TIMER: Clans cache...
24.10 15:06:33 TIMER: Clans cache: 0ms
24.10 15:06:33 TIMER: Check tournament...
24.10 15:06:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:06' OR rounddate = '2016-24-10 15:06'
24.10 15:06:33 TIMER: Check tournament: 0ms
24.10 15:07:13 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 15:07:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 15:07:13 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
24.10 15:07:13 TIME: core/server.query : 1.53 ms
24.10 15:07:13 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 15:07:13 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 15:07:13 TIME: core/user.isOnlineID : 0.12 ms
24.10 15:07:13 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 15:07:13 STATS: cache [user], get [6 calls, 3 cache hits, 3 cache misses, 0 same version, 0 not found]
24.10 15:07:13 STATS: cache [user], segments [17 calls, 7 hits, 6 misses]
24.10 15:07:13 STATS: cache [user], database [1180 calls, 3 reads, 5 writes]
24.10 15:07:13 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
24.10 15:07:13 READDB: SELECT * FROM Users WHERE ID = 76
24.10 15:07:13 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.45 ms]
24.10 15:07:13 STATS: cache manager [1], update [7 calls, total 0 sec spent, avg 0.14 ms]
24.10 15:07:13 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477308408, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 76 } }
24.10 15:07:13 TIME: core/cache.get : 2.04 ms
24.10 15:07:13 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 15:07:13 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
24.10 15:07:13 STATS: cache [questdata], segments [11 calls, 4 hits, 6 misses]
24.10 15:07:13 STATS: cache [questdata], database [1180 calls, 3 reads, 2 writes]
24.10 15:07:13 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
24.10 15:07:13 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 15:07:13 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
24.10 15:07:13 TIME: core/cache.get : 1.21 ms
24.10 15:07:13 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 15:07:13 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:07:13 TIME: core/user.loginPost : 0.1 ms
24.10 15:07:14 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 15:07:14 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:07:14 TIME: vdl/cache.user.getData : 0.14 ms
24.10 15:07:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 15:07:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:07:23 TIME: core/cache.update : 0.12 ms
24.10 15:07:23 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:07:33 TIMER: Clans cache...
24.10 15:07:33 TIMER: Clans cache: 0ms
24.10 15:07:33 TIMER: Check tournament...
24.10 15:07:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:07' OR rounddate = '2016-24-10 15:07'
24.10 15:07:33 TIMER: Check tournament: 0ms
24.10 15:07:54 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 15:07:54 DB: SELECT * FROM tournament
24.10 15:07:54 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 15:07:54 STATS: cache [tournament], segments [3 calls, 1 hits, 1 misses]
24.10 15:07:54 STATS: cache [tournament], database [1222 calls, 1 reads, 1 writes]
24.10 15:07:54 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:07:54 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:07:54 DB: SELECT name FROM users WHERE id = 76
24.10 15:07:54 DB: SELECT name FROM users WHERE id = 2
24.10 15:07:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => [59], rounddate => 2016-24-10 14:55, startdate => 2016-24-10 14:55 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 15:07:54 TIME: vdl/cache.tournament.getAvailableTournament : 2.22 ms
24.10 15:08:05 BLOCKREMOVE: tournament 1 removed
24.10 15:08:33 TIMER: Clans cache...
24.10 15:08:33 TIMER: Clans cache: 0ms
24.10 15:08:33 TIMER: Check tournament...
24.10 15:08:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:08' OR rounddate = '2016-24-10 15:08'
24.10 15:08:33 TIMER: Check tournament: 0ms
24.10 15:09:16 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 15:09:16 DB: SELECT * FROM tournament
24.10 15:09:16 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:09:16 STATS: cache [tournament], segments [4 calls, 1 hits, 2 misses]
24.10 15:09:16 STATS: cache [tournament], database [1304 calls, 2 reads, 1 writes]
24.10 15:09:16 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:09:16 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:09:16 DB: SELECT name FROM users WHERE id = 76
24.10 15:09:16 DB: SELECT name FROM users WHERE id = 2
24.10 15:09:16 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => [59], rounddate => 2016-24-10 15:15, startdate => 2016-24-10 15:15 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 15:09:16 TIME: vdl/cache.tournament.getAvailableTournament : 3.96 ms
24.10 15:09:27 BLOCKREMOVE: tournament 1 removed
24.10 15:09:33 TIMER: Clans cache...
24.10 15:09:33 TIMER: Clans cache: 0ms
24.10 15:09:33 TIMER: Check tournament...
24.10 15:09:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:09' OR rounddate = '2016-24-10 15:09'
24.10 15:09:33 TIMER: Check tournament: 0ms
24.10 15:09:33 TIMER: Clans cache...
24.10 15:09:33 TIMER: Clans cache: 0ms
24.10 15:09:33 TIMER: Check tournament...
24.10 15:09:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:10' OR rounddate = '2016-24-10 15:10'
24.10 15:09:33 TIMER: Check tournament: 1ms
24.10 15:09:33 TIMER: Clans cache...
24.10 15:09:33 TIMER: Clans cache: 0ms
24.10 15:09:33 TIMER: Check tournament...
24.10 15:09:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:11' OR rounddate = '2016-24-10 15:11'
24.10 15:09:33 TIMER: Check tournament: 0ms
24.10 15:09:33 TIMER: Clans cache...
24.10 15:09:33 TIMER: Clans cache: 0ms
24.10 15:09:33 TIMER: Check tournament...
24.10 15:09:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:12' OR rounddate = '2016-24-10 15:12'
24.10 15:09:33 TIMER: Check tournament: 0ms
24.10 15:09:33 TIMER: Clans cache...
24.10 15:09:33 TIMER: Clans cache: 0ms
24.10 15:09:33 TIMER: Check tournament...
24.10 15:09:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:13' OR rounddate = '2016-24-10 15:13'
24.10 15:09:33 TIMER: Check tournament: 0ms
24.10 15:09:33 TIMER: Clans cache...
24.10 15:09:33 TIMER: Clans cache: 0ms
24.10 15:09:33 TIMER: Check tournament...
24.10 15:09:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:14' OR rounddate = '2016-24-10 15:14'
24.10 15:09:33 TIMER: Check tournament: 0ms
24.10 15:09:33 TIMER: Clans cache...
24.10 15:09:33 TIMER: Clans cache: 0ms
24.10 15:09:33 TIMER: Check tournament...
24.10 15:09:33 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:15' OR rounddate = '2016-24-10 15:15'
24.10 15:09:33 STATS: cache [tournament], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
24.10 15:09:33 STATS: cache [tournament], segments [5 calls, 1 hits, 3 misses]
24.10 15:09:33 STATS: cache [tournament], database [1680 calls, 3 reads, 1 writes]
24.10 15:09:33 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:09:33 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:09:33 DB: SELECT nextval('Battle_id_seq') AS id
24.10 15:09:33 READDB: SELECT ID FROM Battle WHERE ID = 60
24.10 15:09:33 READDB: INSERT INTO Battle (ID) VALUES (60)
24.10 15:09:33 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 3 not found]
24.10 15:09:33 STATS: cache [battle], segments [9 calls, 3 hits, 5 misses]
24.10 15:09:33 STATS: cache [battle], database [1680 calls, 5 reads, 1 writes]
24.10 15:09:33 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:09:33 READDB: SELECT * FROM Battle WHERE ID = 60
24.10 15:09:33 DB: SELECT name FROM users WHERE id=2
24.10 15:09:33 DB: SELECT name FROM users WHERE id=76
24.10 15:09:33 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 15:15, id => 2, enemy.num => 2, battleId => 60, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 15:09:33 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 15:15, id => 76, enemy.num => 1, battleId => 60, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 15:09:33 TIMER: Check tournament: 42ms
24.10 15:15:38 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 60
24.10 15:15:38 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 15:15', roundinterval = E'60', params = E'{"params":{"usersList":[76,2],"battleActive":[60]}}', rounddate = E'2016-24-10 15:15' WHERE ID = 1
24.10 15:15:48 BLOCKREMOVE: battle 60 removed
24.10 15:15:48 BLOCKREMOVE: tournament 1 removed
24.10 15:16:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 60, _type => vdl/cache.battle.infoRoom }
24.10 15:16:18 READDB: SELECT * FROM Battle WHERE ID = 60
24.10 15:16:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:16:18 TIME: vdl/cache.battle.infoRoom : 0.57 ms
24.10 15:16:29 BLOCKREMOVE: battle 60 removed
24.10 15:18:29 TIMER: Starting timer...
24.10 15:18:29 TIMER: Timer running...
24.10 15:18:29 DB: SELECT * FROM GameVars
24.10 15:18:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 15:18:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 15:18:29 DB: SELECT * FROM Shops WHERE ID = 1
24.10 15:18:29 TEMP: load ./tmp/quest_daily_ids
24.10 15:18:29 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 15:18:29 TEMP: save ./tmp/quest_daily_ids
24.10 15:18:29 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 15:18:29 QUEUE: vdl.0 (thread) response server.login
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 15:18:29 DB: SELECT * FROM LocalizationStrings
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:18:29 TIME: core/server.query : 7.69 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 15:18:29 DB: SELECT * FROM GameVars
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:18:29 TIME: core/server.query : 0.73 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 15:18:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:18:29 TIME: core/server.query : 1.21 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 15:18:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:18:29 TIME: core/server.query : 0.76 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 15:18:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:18:29 TIME: core/server.query : 0.77 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 15:18:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:18:29 TIME: core/server.query : 1.33 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 15:18:29 TIME: core/quest.getDaily : 0.03 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 15:18:29 DB: SELECT * FROM UserAttributeTypes
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:18:29 TIME: core/server.query : 0.56 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 15:18:29 DB: SELECT * FROM UserVariableTypes
24.10 15:18:29 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:18:29 TIME: core/server.query : 0.62 ms
24.10 15:18:29 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 15:18:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i24.10 15:19:37 TIMER: Starting timer...
24.10 15:19:37 TIMER: Timer running...
24.10 15:19:37 DB: SELECT * FROM GameVars
24.10 15:19:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 15:19:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 15:19:37 DB: SELECT * FROM Shops WHERE ID = 1
24.10 15:19:37 TEMP: load ./tmp/quest_daily_ids
24.10 15:19:37 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 15:19:37 TEMP: save ./tmp/quest_daily_ids
24.10 15:19:38 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 15:19:38 QUEUE: vdl.0 (thread) response server.login
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM LocalizationStrings
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 10.74 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM GameVars
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.58 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.67 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.49 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.88 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 1.33 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 15:19:38 TIME: core/quest.getDaily : 0.03 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM UserAttributeTypes
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.53 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM UserVariableTypes
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.38 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 15:19:38 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 1.94 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM ItemGroups
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 1.19 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM Bundles ORDER BY ID
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.97 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM BundleItems ORDER BY ID
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.8 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/shop.getList
24.10 15:19:38 TIME: core/shop.getList : 0.11 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM EffectAttributeTypes
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.67 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM Effects
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.56 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
24.10 15:19:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 1.08 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
24.10 15:19:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.92 ms
24.10 15:19:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
24.10 15:19:38 DB: SELECT * FROM Badges
24.10 15:19:38 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:19:38 TIME: core/server.query : 0.54 ms
24.10 15:20:25 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 15:20:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 15:20:25 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:20:25 TIME: core/server.query : 1.13 ms
24.10 15:20:25 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 15:20:25 QUEUE: vdl.0 (thread) response core/user.isOnlineID
24.10 15:20:25 TIME: core/user.isOnlineID : 0.04 ms
24.10 15:20:25 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 15:20:25 READDB: SELECT * FROM Users WHERE ID = 76
24.10 15:20:25 QUEUE: vdl.0 (thread) response core/cache.get
24.10 15:20:25 TIME: core/cache.get : 1.9 ms
24.10 15:20:25 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 15:20:25 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 15:20:25 QUEUE: vdl.0 (thread) response core/cache.get
24.10 15:20:25 TIME: core/cache.get : 1.2 ms
24.10 15:20:25 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 15:20:25 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:20:25 TIME: core/user.loginPost : 0.07 ms
24.10 15:20:26 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 15:20:26 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:20:26 TIME: vdl/cache.user.getData : 0.11 ms
24.10 15:20:33 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 15:20:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:20:33 TIME: core/cache.update : 0.09 ms
24.10 15:20:34 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:20:38 TIMER: Clans cache...
24.10 15:20:38 TIMER: Clans cache: 0ms
24.10 15:20:38 TIMER: Check tournament...
24.10 15:20:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:20' OR rounddate = '2016-24-10 15:20'
24.10 15:20:38 TIMER: Check tournament: 1ms
24.10 15:20:49 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 15:20:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 15:20:49 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 15:20:49 TIME: core/server.query : 1.58 ms
24.10 15:20:49 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 15:20:49 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 15:20:49 TIME: core/user.isOnlineID : 0.03 ms
24.10 15:20:49 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 15:20:49 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 15:20:49 STATS: cache [user], segments [5 calls, 1 hits, 2 misses]
24.10 15:20:49 STATS: cache [user], database [72 calls, 1 reads, 1 writes]
24.10 15:20:49 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 15:20:49 READDB: SELECT * FROM Users WHERE ID = 2
24.10 15:20:49 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 1.27 ms]
24.10 15:20:49 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.03 ms]
24.10 15:20:49 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 15:20:49 TIME: core/cache.get : 1.05 ms
24.10 15:20:49 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 15:20:49 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 15:20:49 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
24.10 15:20:49 STATS: cache [questdata], database [72 calls, 1 reads, 0 writes]
24.10 15:20:49 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 15:20:49 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 15:20:49 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 15:20:49 TIME: core/cache.get : 0.66 ms
24.10 15:20:49 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 15:20:49 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:20:49 TIME: core/user.loginPost : 0.06 ms
24.10 15:20:55 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 15:20:55 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:20:55 TIME: vdl/cache.user.getData : 0.1 ms
24.10 15:20:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 15:20:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:20:58 TIME: core/cache.update : 0.1 ms
24.10 15:20:59 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 15:21:38 TIMER: Clans cache...
24.10 15:21:38 TIMER: Clans cache: 0ms
24.10 15:21:38 TIMER: Check tournament...
24.10 15:21:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:21' OR rounddate = '2016-24-10 15:21'
24.10 15:21:38 TIMER: Check tournament: 1ms
24.10 15:21:38 TIMER: Clans cache...
24.10 15:21:38 TIMER: Clans cache: 0ms
24.10 15:21:38 TIMER: Check tournament...
24.10 15:21:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:22' OR rounddate = '2016-24-10 15:22'
24.10 15:21:38 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:21:38 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
24.10 15:21:38 STATS: cache [tournament], database [180 calls, 0 reads, 0 writes]
24.10 15:21:38 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:21:38 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:21:38 DB: SELECT nextval('Battle_id_seq') AS id
24.10 15:21:38 READDB: SELECT ID FROM Battle WHERE ID = 61
24.10 15:21:38 READDB: INSERT INTO Battle (ID) VALUES (61)
24.10 15:21:38 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:21:38 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
24.10 15:21:38 STATS: cache [battle], database [181 calls, 0 reads, 0 writes]
24.10 15:21:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:21:38 READDB: SELECT * FROM Battle WHERE ID = 61
24.10 15:21:38 DB: SELECT name FROM users WHERE id=2
24.10 15:21:38 DB: SELECT name FROM users WHERE id=76
24.10 15:21:38 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 15:22, id => 2, enemy.num => 2, battleId => 61, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 15:21:38 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 15:22, id => 76, enemy.num => 1, battleId => 61, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 15:21:38 TIMER: Check tournament: 33ms
24.10 15:22:43 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 15:22', roundinterval = E'60', params = E'{"params":{"usersList":[76,2],"battleActive":[61]}}', rounddate = E'2016-24-10 15:22' WHERE ID = 1
24.10 15:22:44 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 61
24.10 15:22:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 61, _type => vdl/cache.battle.infoRoom }
24.10 15:22:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:22:47 TIME: vdl/cache.battle.infoRoom : 0.06 ms
24.10 15:22:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 61, _type => vdl/cache.battle.infoRoom }
24.10 15:22:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:22:53 TIME: vdl/cache.battle.infoRoom : 0.09 ms
24.10 15:22:53 BLOCKREMOVE: tournament 1 removed
24.10 15:22:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 61, _type => vdl/cache.battle.infoRoom }
24.10 15:22:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:22:59 TIME: vdl/cache.battle.infoRoom : 0.07 ms
24.10 15:22:59 NET: vdl.0 (thread) request core/server.query { q => INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 2,76,61,{ scoresSecond => null, scoresFirst => null }), _type => core/server.query }
24.10 15:22:59 DB: INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 2,76,61,{ scoresSecond => null, scoresFirst => null })
24.10 15:22:59 QUEUE: vdl.0 (thread) response core/server.query { errorCode => ok, _type => core/server.query }
24.10 15:22:59 TIME: core/server.query : 8.16 ms
24.10 15:22:59 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 61, _type => vdl/cache.battle.finishRoom }
24.10 15:22:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 15:22:59 TIME: vdl/cache.battle.finishRoom : 0.07 ms
24.10 15:22:59 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 61, _type => vdl/cache.battle.deleteRoom }
24.10 15:22:59 ROOM: deleted room 61
24.10 15:22:59 DB: DELETE FROM Battle WHERE ID = 61
24.10 15:22:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 15:22:59 TIME: vdl/cache.battle.deleteRoom : 16.17 ms
24.10 15:23:00 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'true', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 61
24.10 15:23:10 BLOCKREMOVE: battle 61 removed
24.10 15:23:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 15:23:37 DB: SELECT * FROM tournament
24.10 15:23:37 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:23:37 DB: SELECT name FROM users WHERE id = 76
24.10 15:23:37 DB: SELECT name FROM users WHERE id = 2
24.10 15:23:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => [61], rounddate => 2016-24-10 15:22, startdate => 2016-24-10 15:22 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 15:23:37 TIME: vdl/cache.tournament.getAvailableTournament : 3.46 ms
24.10 15:23:38 TIMER: Clans cache...
24.10 15:23:38 TIMER: Clans cache: 0ms
24.10 15:23:38 TIMER: Check tournament...
24.10 15:23:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:23' OR rounddate = '2016-24-10 15:23'
24.10 15:23:38 TIMER: Check tournament: 0ms
24.10 15:23:43 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 15:23:43 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:23:43 STATS: cache [tournament], segments [4 calls, 1 hits, 2 misses]
24.10 15:23:43 STATS: cache [tournament], database [246 calls, 2 reads, 1 writes]
24.10 15:23:43 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:23:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 15:23:43 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.24 ms
24.10 15:23:43 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 15:23:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 76, player2 => 2 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 15:23:43 TIME: vdl/cache.tournament.setGrid : 0.07 ms
24.10 15:23:54 BLOCKREMOVE: tournament 1 removed
24.10 15:24:38 TIMER: Clans cache...
24.10 15:24:38 TIMER: Clans cache: 0ms
24.10 15:24:38 TIMER: Check tournament...
24.10 15:24:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:24' OR rounddate = '2016-24-10 15:24'
24.10 15:24:38 TIMER: Check tournament: 0ms
24.10 15:24:38 TIMER: Clans cache...
24.10 15:24:38 TIMER: Clans cache: 0ms
24.10 15:24:38 TIMER: Check tournament...
24.10 15:24:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:25' OR rounddate = '2016-24-10 15:25'
24.10 15:24:38 TIMER: Check tournament: 0ms
24.10 15:24:38 TIMER: Clans cache...
24.10 15:24:38 TIMER: Clans cache: 0ms
24.10 15:24:38 TIMER: Check tournament...
24.10 15:24:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:26' OR rounddate = '2016-24-10 15:26'
24.10 15:24:38 TIMER: Check tournament: 1ms
24.10 15:27:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 61, _type => vdl/cache.battle.infoRoom }
24.10 15:27:33 STATS: cache [battle], get [6 calls, 4 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 15:27:33 STATS: cache [battle], segments [10 calls, 8 hits, 1 misses]
24.10 15:27:33 STATS: cache [battle], database [476 calls, 1 reads, 2 writes]
24.10 15:27:33 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:27:33 READDB: SELECT * FROM Battle WHERE ID = 61
24.10 15:27:33 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 15:27:33 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 15:27:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 15:27:33 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
24.10 15:27:33 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
24.10 15:27:33 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 60 }}, errorCode => ok, _type => core/server.query }
24.10 15:27:33 TIME: core/server.query : 0.87 ms
24.10 15:27:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 60, _type => vdl/cache.battle.infoRoom }
24.10 15:27:33 READDB: SELECT * FROM Battle WHERE ID = 60
24.10 15:27:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:27:33 TIME: vdl/cache.battle.infoRoom : 0.54 ms
24.10 15:27:33 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 60, _type => vdl/cache.battle.deleteRoom }
24.10 15:27:33 ROOM: deleted room 60
24.10 15:27:33 DB: DELETE FROM Battle WHERE ID = 60
24.10 15:27:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 15:27:33 TIME: vdl/cache.battle.deleteRoom : 16.03 ms
24.10 15:27:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
24.10 15:27:33 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:27:33 STATS: cache [user], segments [9 calls, 2 hits, 4 misses]
24.10 15:27:33 STATS: cache [user], database [476 calls, 2 reads, 2 writes]
24.10 15:27:33 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 15:27:33 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.1 ms]
24.10 15:27:33 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.07 ms]
24.10 15:27:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 15:27:33 TIME: core/cache.update : 0.25 ms
24.10 15:27:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
24.10 15:27:33 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:27:33 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
24.10 15:27:33 STATS: cache [questdata], database [476 calls, 2 reads, 0 writes]
24.10 15:27:33 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 15:27:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:27:33 TIME: core/cache.update : 0.2 ms
24.10 15:27:33 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
24.10 15:27:33 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 15:27:33 TIME: core/user.logoutPost : 0.06 ms
24.10 15:27:34 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:27:34 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
24.10 15:27:38 TIMER: Clans cache...
24.10 15:27:38 TIMER: Clans cache: 0ms
24.10 15:27:38 TIMER: Check tournament...
24.10 15:27:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:27' OR rounddate = '2016-24-10 15:27'
24.10 15:27:38 TIMER: Check tournament: 0ms
24.10 15:27:44 BLOCKREMOVE: user 76 removed
24.10 15:27:44 BLOCKREMOVE: questdata 76 removed
24.10 15:27:44 BLOCKREMOVE: battle 60 removed
24.10 15:28:38 TIMER: Clans cache...
24.10 15:28:38 TIMER: Clans cache: 0ms
24.10 15:28:38 TIMER: Check tournament...
24.10 15:28:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:28' OR rounddate = '2016-24-10 15:28'
24.10 15:28:38 TIMER: Check tournament: 0ms
24.10 15:29:25 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
24.10 15:29:25 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
24.10 15:29:25 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 15:29:25 TIME: core/server.query : 0.63 ms
24.10 15:29:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 15:29:25 STATS: cache [battle], get [8 calls, 4 cache hits, 3 cache misses, 0 same version, 1 not found]
24.10 15:29:25 STATS: cache [battle], segments [13 calls, 9 hits, 3 misses]
24.10 15:29:25 STATS: cache [battle], database [587 calls, 3 reads, 2 writes]
24.10 15:29:25 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:29:25 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 15:29:25 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 15:29:25 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 15:29:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 15:29:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
24.10 15:29:25 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:29:25 STATS: cache [user], segments [11 calls, 4 hits, 4 misses]
24.10 15:29:25 STATS: cache [user], database [587 calls, 2 reads, 3 writes]
24.10 15:29:25 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 15:29:25 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.1 ms]
24.10 15:29:25 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.13 ms]
24.10 15:29:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 15:29:25 TIME: core/cache.update : 0.53 ms
24.10 15:29:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
24.10 15:29:25 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:29:25 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
24.10 15:29:25 STATS: cache [questdata], database [587 calls, 2 reads, 1 writes]
24.10 15:29:25 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 15:29:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:29:25 TIME: core/cache.update : 0.29 ms
24.10 15:29:25 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
24.10 15:29:25 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 15:29:25 TIME: core/user.logoutPost : 0.11 ms
24.10 15:29:25 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 15:29:25 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
24.10 15:29:35 BLOCKREMOVE: user 2 removed
24.10 15:29:35 BLOCKREMOVE: questdata 2 removed
24.10 15:29:38 TIMER: Clans cache...
24.10 15:29:38 TIMER: Clans cache: 0ms
24.10 15:29:38 TIMER: Check tournament...
24.10 15:29:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:29' OR rounddate = '2016-24-10 15:29'
24.10 15:29:38 TIMER: Check tournament: 0ms
24.10 15:29:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 15:29:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 15:29:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
24.10 15:29:44 TIME: core/server.query : 1.98 ms
24.10 15:29:44 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 15:29:44 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 15:29:44 TIME: core/user.isOnlineID : 0.12 ms
24.10 15:29:44 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 15:29:44 READDB: SELECT * FROM Users WHERE ID = 76
24.10 15:29:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477308408, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 76 } }
24.10 15:29:44 TIME: core/cache.get : 1.65 ms
24.10 15:29:44 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 15:29:44 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 15:29:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
24.10 15:29:44 TIME: core/cache.get : 1.22 ms
24.10 15:29:44 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 15:29:44 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:29:44 TIME: core/user.loginPost : 0.13 ms
24.10 15:29:45 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 15:29:45 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:29:45 TIME: vdl/cache.user.getData : 0.09 ms
24.10 15:29:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 15:29:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 15:29:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 15:29:47 TIME: core/server.query : 1.3 ms
24.10 15:29:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 15:29:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 15:29:47 TIME: core/user.isOnlineID : 0.07 ms
24.10 15:29:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 15:29:47 READDB: SELECT * FROM Users WHERE ID = 2
24.10 15:29:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 15:29:47 TIME: core/cache.get : 1.12 ms
24.10 15:29:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 15:29:47 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 15:29:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 15:29:47 TIME: core/cache.get : 0.56 ms
24.10 15:29:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 15:29:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:29:47 TIME: core/user.loginPost : 0.07 ms
24.10 15:29:53 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 15:29:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:29:53 TIME: core/cache.update : 0.13 ms
24.10 15:29:53 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 15:29:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:29:53 TIME: core/cache.update : 0.1 ms
24.10 15:29:53 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:29:53 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 15:29:53 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 15:29:53 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:29:53 TIME: vdl/cache.user.getData : 0.2 ms
24.10 15:30:38 TIMER: Clans cache...
24.10 15:30:38 TIMER: Clans cache: 0ms
24.10 15:30:38 TIMER: Check tournament...
24.10 15:30:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:30' OR rounddate = '2016-24-10 15:30'
24.10 15:30:38 TIMER: Check tournament: 1ms
24.10 15:30:38 TIMER: Clans cache...
24.10 15:30:38 TIMER: Clans cache: 0ms
24.10 15:30:38 TIMER: Check tournament...
24.10 15:30:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:31' OR rounddate = '2016-24-10 15:31'
24.10 15:30:38 TIMER: Check tournament: 0ms
24.10 15:30:38 TIMER: Clans cache...
24.10 15:30:38 TIMER: Clans cache: 0ms
24.10 15:30:38 TIMER: Check tournament...
24.10 15:30:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:32' OR rounddate = '2016-24-10 15:32'
24.10 15:30:38 TIMER: Check tournament: 0ms
24.10 15:30:38 TIMER: Clans cache...
24.10 15:30:38 TIMER: Clans cache: 0ms
24.10 15:30:38 TIMER: Check tournament...
24.10 15:30:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:33' OR rounddate = '2016-24-10 15:33'
24.10 15:30:38 STATS: cache [tournament], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:30:38 STATS: cache [tournament], segments [6 calls, 3 hits, 2 misses]
24.10 15:30:38 STATS: cache [tournament], database [840 calls, 2 reads, 1 writes]
24.10 15:30:38 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:30:38 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:30:38 DB: SELECT nextval('Battle_id_seq') AS id
24.10 15:30:38 READDB: SELECT ID FROM Battle WHERE ID = 62
24.10 15:30:38 READDB: INSERT INTO Battle (ID) VALUES (62)
24.10 15:30:38 STATS: cache [battle], get [9 calls, 4 cache hits, 4 cache misses, 0 same version, 2 not found]
24.10 15:30:38 STATS: cache [battle], segments [14 calls, 9 hits, 4 misses]
24.10 15:30:38 STATS: cache [battle], database [840 calls, 4 reads, 2 writes]
24.10 15:30:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:30:38 READDB: SELECT * FROM Battle WHERE ID = 62
24.10 15:30:38 DB: SELECT name FROM users WHERE id=2
24.10 15:30:38 DB: SELECT name FROM users WHERE id=76
24.10 15:30:38 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 15:33, id => 2, enemy.num => 2, battleId => 62, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 15:30:38 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 15:33, id => 76, enemy.num => 1, battleId => 62, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 15:30:38 TIMER: Check tournament: 54ms
24.10 15:33:43 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 62
24.10 15:33:43 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 15:33', roundinterval = E'60', params = E'{"params":{"usersList":[76,2],"battleActive":[62]}}', rounddate = E'2016-24-10 15:33' WHERE ID = 1
24.10 15:33:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 62, _type => vdl/cache.battle.infoRoom }
24.10 15:33:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:33:46 TIME: vdl/cache.battle.infoRoom : 0.15 ms
24.10 15:33:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 62, _type => vdl/cache.battle.infoRoom }
24.10 15:33:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:33:50 TIME: vdl/cache.battle.infoRoom : 0.12 ms
24.10 15:33:53 BLOCKREMOVE: tournament 1 removed
24.10 15:33:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 62, _type => vdl/cache.battle.infoRoom }
24.10 15:33:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:33:54 TIME: vdl/cache.battle.infoRoom : 0.16 ms
24.10 15:33:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 62, _type => vdl/cache.battle.infoRoom }
24.10 15:33:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:33:59 TIME: vdl/cache.battle.infoRoom : 0.15 ms
24.10 15:34:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 62, _type => vdl/cache.battle.infoRoom }
24.10 15:34:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:34:02 TIME: vdl/cache.battle.infoRoom : 0.12 ms
24.10 15:34:03 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 62, _type => vdl/cache.battle.infoRoom }
24.10 15:34:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:34:03 TIME: vdl/cache.battle.infoRoom : 0.08 ms
24.10 15:34:13 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 15:34:13 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:34:13 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [62]
24.10 15:34:13 TIME: vdl/cache.tournament.getBattlesTournaments : 2.71 ms
24.10 15:34:13 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 15:34:13 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 15:34:13 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.24 ms
24.10 15:34:13 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 62, _type => vdl/cache.battle.finishRoom }
24.10 15:34:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 15:34:13 TIME: vdl/cache.battle.finishRoom : 0.12 ms
24.10 15:34:13 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 62, _type => vdl/cache.battle.deleteRoom }
24.10 15:34:13 ROOM: deleted room 62
24.10 15:34:13 DB: DELETE FROM Battle WHERE ID = 62
24.10 15:34:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 15:34:13 TIME: vdl/cache.battle.deleteRoom : 23.08 ms
24.10 15:34:13 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [62] }
24.10 15:34:13 TRACE: vdl/cache.tournament.setBattlesTournaments : Invalid field access : push
24.10 15:34:13 TRACE: vdl/cache.tournament.setBattlesTournaments : 
Called from modules/VDLCache.hx line 343
Called from modules/VDLCache.hx line 102
Called from snipe/cache/CacheServer.hx line 487
24.10 15:34:13 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => _requestException, _type => vdl/cache.tournament.setBattlesTournaments }
24.10 15:34:13 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'true', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 62
24.10 15:34:23 BLOCKREMOVE: battle 62 removed
24.10 15:34:23 BLOCKREMOVE: tournament 1 removed
24.10 15:34:38 TIMER: Clans cache...
24.10 15:34:38 TIMER: Clans cache: 0ms
24.10 15:34:38 TIMER: Check tournament...
24.10 15:34:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:34' OR rounddate = '2016-24-10 15:34'
24.10 15:34:38 TIMER: Check tournament: 0ms
24.10 15:34:38 TIMER: Clans cache...
24.10 15:34:38 TIMER: Clans cache: 0ms
24.10 15:34:38 TIMER: Check tournament...
24.10 15:34:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:35' OR rounddate = '2016-24-10 15:35'
24.10 15:34:38 TIMER: Check tournament: 0ms
24.10 15:34:38 TIMER: Clans cache...
24.10 15:34:38 TIMER: Clans cache: 0ms
24.10 15:34:38 TIMER: Check tournament...
24.10 15:34:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:36' OR rounddate = '2016-24-10 15:36'
24.10 15:34:38 TIMER: Check tournament: 0ms
24.10 15:34:38 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
24.10 15:34:38 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
24.10 15:34:38 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 15:34:38 TIME: core/server.query : 1.49 ms
24.10 15:34:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 15:34:38 STATS: cache [battle], get [17 calls, 11 cache hits, 5 cache misses, 0 same version, 2 not found]
24.10 15:34:38 STATS: cache [battle], segments [26 calls, 20 hits, 5 misses]
24.10 15:34:38 STATS: cache [battle], database [1080 calls, 5 reads, 4 writes]
24.10 15:34:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:34:38 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 15:34:38 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 15:34:38 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 15:34:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 15:34:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
24.10 15:34:38 STATS: cache [user], get [8 calls, 4 cache hits, 4 cache misses, 0 same version, 0 not found]
24.10 15:34:38 STATS: cache [user], segments [21 calls, 8 hits, 8 misses]
24.10 15:34:38 STATS: cache [user], database [1080 calls, 4 reads, 6 writes]
24.10 15:34:38 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
24.10 15:34:38 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.02 ms]
24.10 15:34:38 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.14 ms]
24.10 15:34:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 15:34:38 TIME: core/cache.update : 0.53 ms
24.10 15:34:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
24.10 15:34:38 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
24.10 15:34:38 STATS: cache [questdata], segments [13 calls, 4 hits, 8 misses]
24.10 15:34:38 STATS: cache [questdata], database [1080 calls, 4 reads, 2 writes]
24.10 15:34:38 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
24.10 15:34:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:34:38 TIME: core/cache.update : 0.44 ms
24.10 15:34:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
24.10 15:34:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 15:34:38 TIME: core/user.logoutPost : 0.12 ms
24.10 15:34:38 TIMER: Clans cache...
24.10 15:34:38 TIMER: Clans cache: 0ms
24.10 15:34:38 TIMER: Check tournament...
24.10 15:34:38 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:37' OR rounddate = '2016-24-10 15:37'
24.10 15:34:38 TIMER: Check tournament: 1ms
24.10 15:34:38 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:34:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
24.10 15:37:49 BLOCKREMOVE: user 76 removed
24.10 15:37:49 BLOCKREMOVE: questdata 76 removed
24.10 15:39:22 TIMER: Starting timer...
24.10 15:39:22 TIMER: Timer running...
24.10 15:39:22 DB: SELECT * FROM GameVars
24.10 15:39:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 15:39:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 15:39:22 DB: SELECT * FROM Shops WHERE ID = 1
24.10 15:39:22 TEMP: load ./tmp/quest_daily_ids
24.10 15:39:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 15:39:22 TEMP: save ./tmp/quest_daily_ids
24.10 15:39:23 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 15:39:23 QUEUE: vdl.0 (thread) response server.login
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM LocalizationStrings
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 19.66 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM GameVars
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.67 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 2.8 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.12 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.73 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 3.6 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 15:39:23 TIME: core/quest.getDaily : 0.47 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM UserAttributeTypes
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.13 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM UserVariableTypes
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.14 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 15:39:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 2.66 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM ItemGroups
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 0.96 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM Bundles ORDER BY ID
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.32 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM BundleItems ORDER BY ID
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.4 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/shop.getList
24.10 15:39:23 TIME: core/shop.getList : 0.08 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM EffectAttributeTypes
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM Effects
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.4 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
24.10 15:39:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 2.72 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
24.10 15:39:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 6.47 ms
24.10 15:39:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
24.10 15:39:23 DB: SELECT * FROM Badges
24.10 15:39:23 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:39:23 TIME: core/server.query : 1.16 ms
24.10 15:40:22 TIMER: Clans cache...
24.10 15:40:22 TIMER: Clans cache: 0ms
24.10 15:40:22 TIMER: Check tournament...
24.10 15:40:22 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:40' OR rounddate = '2016-24-10 15:40'
24.10 15:40:22 TIMER: Check tournament: 1ms
24.10 15:41:23 TIMER: Clans cache...
24.10 15:41:23 TIMER: Clans cache: 0ms
24.10 15:41:23 TIMER: Check tournament...
24.10 15:41:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:41' OR rounddate = '2016-24-10 15:41'
24.10 15:41:23 TIMER: Check tournament: 2ms
24.10 15:41:23 TIMER: Clans cache...
24.10 15:41:23 TIMER: Clans cache: 0ms
24.10 15:41:23 TIMER: Check tournament...
24.10 15:41:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:42' OR rounddate = '2016-24-10 15:42'
24.10 15:41:23 TIMER: Check tournament: 2ms
24.10 15:41:23 TIMER: Clans cache...
24.10 15:41:23 TIMER: Clans cache: 0ms
24.10 15:41:23 TIMER: Check tournament...
24.10 15:41:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:43' OR rounddate = '2016-24-10 15:43'
24.10 15:41:23 TIMER: Check tournament: 1ms
24.10 15:41:23 TIMER: Clans cache...
24.10 15:41:23 TIMER: Clans cache: 0ms
24.10 15:41:23 TIMER: Check tournament...
24.10 15:41:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:44' OR rounddate = '2016-24-10 15:44'
24.10 15:41:23 TIMER: Check tournament: 0ms
24.10 15:41:23 TIMER: Clans cache...
24.10 15:41:23 TIMER: Clans cache: 0ms
24.10 15:41:23 TIMER: Check tournament...
24.10 15:41:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:45' OR rounddate = '2016-24-10 15:45'
24.10 15:41:23 TIMER: Check tournament: 0ms
24.10 15:46:22 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 15:46:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 15:46:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:46:22 TIME: core/server.query : 2.46 ms
24.10 15:46:22 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 15:46:22 QUEUE: vdl.0 (thread) response core/user.isOnlineID
24.10 15:46:22 TIME: core/user.isOnlineID : 0.11 ms
24.10 15:46:22 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 15:46:22 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:46:22 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
24.10 15:46:22 STATS: cache [user], database [420 calls, 0 reads, 0 writes]
24.10 15:46:22 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
24.10 15:46:22 READDB: SELECT * FROM Users WHERE ID = 76
24.10 15:46:22 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.53 ms]
24.10 15:46:22 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
24.10 15:46:22 QUEUE: vdl.0 (thread) response core/cache.get
24.10 15:46:22 TIME: core/cache.get : 4.72 ms
24.10 15:46:22 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 15:46:22 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:46:22 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
24.10 15:46:22 STATS: cache [questdata], database [420 calls, 0 reads, 0 writes]
24.10 15:46:22 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
24.10 15:46:22 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 15:46:22 QUEUE: vdl.0 (thread) response core/cache.get
24.10 15:46:22 TIME: core/cache.get : 1.86 ms
24.10 15:46:22 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 15:46:22 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:46:22 TIME: core/user.loginPost : 0.95 ms
24.10 15:46:23 TIMER: Clans cache...
24.10 15:46:23 TIMER: Clans cache: 0ms
24.10 15:46:23 TIMER: Check tournament...
24.10 15:46:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:46' OR rounddate = '2016-24-10 15:46'
24.10 15:46:23 TIMER: Check tournament: 0ms
24.10 15:46:23 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 15:46:23 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:46:23 TIME: vdl/cache.user.getData : 0.15 ms
24.10 15:46:28 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 15:46:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:46:28 TIME: core/cache.update : 0.16 ms
24.10 15:46:29 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:46:32 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 15:46:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 15:46:32 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 15:46:32 TIME: core/server.query : 2.49 ms
24.10 15:46:32 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 15:46:32 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 15:46:32 TIME: core/user.isOnlineID : 0.1 ms
24.10 15:46:32 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 15:46:32 READDB: SELECT * FROM Users WHERE ID = 2
24.10 15:46:32 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 15:46:32 TIME: core/cache.get : 2.64 ms
24.10 15:46:32 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 15:46:32 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 15:46:32 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 15:46:32 TIME: core/cache.get : 1.07 ms
24.10 15:46:32 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 15:46:32 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:46:32 TIME: core/user.loginPost : 0.12 ms
24.10 15:46:38 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 15:46:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:46:38 TIME: core/cache.update : 0.17 ms
24.10 15:46:38 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 15:46:38 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:46:38 TIME: vdl/cache.user.getData : 0.18 ms
24.10 15:46:39 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 15:47:23 TIMER: Clans cache...
24.10 15:47:23 TIMER: Clans cache: 0ms
24.10 15:47:23 TIMER: Check tournament...
24.10 15:47:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:47' OR rounddate = '2016-24-10 15:47'
24.10 15:47:23 TIMER: Check tournament: 0ms
24.10 15:47:23 TIMER: Clans cache...
24.10 15:47:23 TIMER: Clans cache: 0ms
24.10 15:47:23 TIMER: Check tournament...
24.10 15:47:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:48' OR rounddate = '2016-24-10 15:48'
24.10 15:47:23 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:47:23 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
24.10 15:47:23 STATS: cache [tournament], database [540 calls, 0 reads, 0 writes]
24.10 15:47:23 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:47:23 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:47:23 DB: SELECT nextval('Battle_id_seq') AS id
24.10 15:47:23 READDB: SELECT ID FROM Battle WHERE ID = 63
24.10 15:47:23 READDB: INSERT INTO Battle (ID) VALUES (63)
24.10 15:47:23 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:47:23 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
24.10 15:47:23 STATS: cache [battle], database [541 calls, 0 reads, 0 writes]
24.10 15:47:23 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:47:23 READDB: SELECT * FROM Battle WHERE ID = 63
24.10 15:47:23 DB: SELECT name FROM users WHERE id=2
24.10 15:47:23 DB: SELECT name FROM users WHERE id=76
24.10 15:47:23 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 15:48, id => 2, enemy.num => 2, battleId => 63, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 15:47:23 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 15:48, id => 76, enemy.num => 1, battleId => 63, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 15:47:23 TIMER: Check tournament: 54ms
24.10 15:48:28 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 15:48', roundinterval = E'60', params = E'{"params":{"usersList":[76,2],"battleActive":[63]}}', rounddate = E'2016-24-10 15:48' WHERE ID = 1
24.10 15:48:29 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 63
24.10 15:48:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 63, _type => vdl/cache.battle.infoRoom }
24.10 15:48:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:48:30 TIME: vdl/cache.battle.infoRoom : 0.12 ms
24.10 15:48:34 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 63, _type => vdl/cache.battle.infoRoom }
24.10 15:48:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:48:34 TIME: vdl/cache.battle.infoRoom : 0.12 ms
24.10 15:48:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 63, _type => vdl/cache.battle.infoRoom }
24.10 15:48:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:48:36 TIME: vdl/cache.battle.infoRoom : 0.16 ms
24.10 15:48:38 BLOCKREMOVE: tournament 1 removed
24.10 15:48:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 63, _type => vdl/cache.battle.infoRoom }
24.10 15:48:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:48:39 TIME: vdl/cache.battle.infoRoom : 0.15 ms
24.10 15:48:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 63, _type => vdl/cache.battle.infoRoom }
24.10 15:48:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:48:45 TIME: vdl/cache.battle.infoRoom : 0.17 ms
24.10 15:48:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 63, _type => vdl/cache.battle.infoRoom }
24.10 15:48:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 15:48:52 TIME: vdl/cache.battle.infoRoom : 0.13 ms
24.10 15:48:58 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 15:48:58 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:48:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [63]
24.10 15:48:58 TIME: vdl/cache.tournament.getBattlesTournaments : 1.35 ms
24.10 15:48:58 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 15:48:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 15:48:58 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.15 ms
24.10 15:48:58 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 63, _type => vdl/cache.battle.finishRoom }
24.10 15:48:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 15:48:58 TIME: vdl/cache.battle.finishRoom : 0.1 ms
24.10 15:48:58 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 63, _type => vdl/cache.battle.deleteRoom }
24.10 15:48:58 ROOM: deleted room 63
24.10 15:48:58 DB: DELETE FROM Battle WHERE ID = 63
24.10 15:48:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 15:48:58 TIME: vdl/cache.battle.deleteRoom : 19.93 ms
24.10 15:48:58 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [63] }
24.10 15:48:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
24.10 15:48:58 TIME: vdl/cache.tournament.setBattlesTournaments : 0.23 ms
24.10 15:48:58 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [76,2], _type => vdl/cache.tournament.setUsersTournament }
24.10 15:48:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
24.10 15:48:58 TIME: vdl/cache.tournament.setUsersTournament : 0.18 ms
24.10 15:48:58 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => null, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 15:48:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => null, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 15:48:58 TIME: vdl/cache.tournament.setGrid : 0.11 ms
24.10 15:48:58 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => null, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound }
24.10 15:48:58 TRACE: vdl/cache.tournament.addRound : Invalid operation (-)
24.10 15:48:58 TRACE: vdl/cache.tournament.addRound : 
Called from modules/VDLCache.hx line 723
Called from modules/VDLCache.hx line 240
Called from modules/VDLCache.hx line 112
Called from snipe/cache/CacheServer.hx line 487
24.10 15:48:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => _requestException, _type => vdl/cache.tournament.addRound }
24.10 15:48:59 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'true', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 63
24.10 15:49:04 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 15:48', roundinterval = E'60', params = E'{"params":{"battleFinished":[63],"usersList":[76,2],"battleActive":[]}}', rounddate = E'2016-24-10 15:48' WHERE ID = 1
24.10 15:49:09 BLOCKREMOVE: battle 63 removed
24.10 15:49:14 BLOCKREMOVE: tournament 1 removed
24.10 15:49:23 TIMER: Clans cache...
24.10 15:49:23 TIMER: Clans cache: 0ms
24.10 15:49:23 TIMER: Check tournament...
24.10 15:49:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:49' OR rounddate = '2016-24-10 15:49'
24.10 15:49:23 TIMER: Check tournament: 1ms
24.10 15:49:58 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 15:49:58 STATS: cache [tournament], get [7 calls, 4 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:49:58 STATS: cache [tournament], segments [11 calls, 8 hits, 2 misses]
24.10 15:49:58 STATS: cache [tournament], database [636 calls, 2 reads, 2 writes]
24.10 15:49:58 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:49:58 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:49:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments []
24.10 15:49:58 TIME: vdl/cache.tournament.getBattlesTournaments : 1.46 ms
24.10 15:49:58 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 15:49:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 15:49:58 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.13 ms
24.10 15:49:58 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 63, _type => vdl/cache.battle.finishRoom }
24.10 15:49:58 STATS: cache [battle], get [9 calls, 7 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 15:49:58 STATS: cache [battle], segments [13 calls, 11 hits, 1 misses]
24.10 15:49:58 STATS: cache [battle], database [636 calls, 1 reads, 2 writes]
24.10 15:49:58 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:49:58 READDB: SELECT * FROM Battle WHERE ID = 63
24.10 15:49:58 TRACE: vdl/cache.battle.finishRoom : Invalid field access : set
24.10 15:49:58 TRACE: vdl/cache.battle.finishRoom : 
Called from modules/VDLCache.hx line 607
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 94
Called from snipe/cache/CacheServer.hx line 487
24.10 15:49:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => _requestException, _type => vdl/cache.battle.finishRoom }
24.10 15:49:58 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
24.10 15:49:58 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
24.10 15:49:58 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 15:49:58 TIME: core/server.query : 1.38 ms
24.10 15:49:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 15:49:58 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 15:49:58 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 15:49:58 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 15:49:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 15:49:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
24.10 15:49:58 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:49:58 STATS: cache [user], segments [9 calls, 2 hits, 4 misses]
24.10 15:49:58 STATS: cache [user], database [636 calls, 2 reads, 2 writes]
24.10 15:49:58 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 15:49:58 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.38 ms]
24.10 15:49:58 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.15 ms]
24.10 15:49:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 15:49:58 TIME: core/cache.update : 1.12 ms
24.10 15:49:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
24.10 15:49:58 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:49:58 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
24.10 15:49:58 STATS: cache [questdata], database [636 calls, 2 reads, 0 writes]
24.10 15:49:58 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 15:49:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:49:58 TIME: core/cache.update : 0.28 ms
24.10 15:49:58 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
24.10 15:49:58 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 15:49:58 TIME: core/user.logoutPost : 0.19 ms
24.10 15:49:59 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:49:59 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
24.10 15:50:09 BLOCKREMOVE: user 76 removed
24.10 15:50:09 BLOCKREMOVE: questdata 76 removed
24.10 15:50:09 BLOCKREMOVE: tournament 1 removed
24.10 15:50:23 TIMER: Clans cache...
24.10 15:50:23 TIMER: Clans cache: 0ms
24.10 15:50:23 TIMER: Check tournament...
24.10 15:50:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:50' OR rounddate = '2016-24-10 15:50'
24.10 15:50:23 TIMER: Check tournament: 1ms
24.10 15:50:23 TIMER: Clans cache...
24.10 15:50:23 TIMER: Clans cache: 0ms
24.10 15:50:23 TIMER: Check tournament...
24.10 15:50:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:51' OR rounddate = '2016-24-10 15:51'
24.10 15:50:23 TIMER: Check tournament: 0ms
24.10 15:50:23 TIMER: Clans cache...
24.10 15:50:23 TIMER: Clans cache: 0ms
24.10 15:50:23 TIMER: Check tournament...
24.10 15:50:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:52' OR rounddate = '2016-24-10 15:52'
24.10 15:50:23 TIMER: Check tournament: 0ms
24.10 15:50:23 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
24.10 15:50:23 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
24.10 15:50:23 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 15:50:23 TIME: core/server.query : 0.96 ms
24.10 15:50:23 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 15:50:23 STATS: cache [battle], get [11 calls, 7 cache hits, 3 cache misses, 0 same version, 2 not found]
24.10 15:50:23 STATS: cache [battle], segments [15 calls, 11 hits, 3 misses]
24.10 15:50:23 STATS: cache [battle], database [840 calls, 3 reads, 2 writes]
24.10 15:50:23 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:50:23 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 15:50:23 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 15:50:23 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 15:50:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 15:50:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
24.10 15:50:23 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:50:23 STATS: cache [user], segments [11 calls, 4 hits, 4 misses]
24.10 15:50:23 STATS: cache [user], database [840 calls, 2 reads, 3 writes]
24.10 15:50:23 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 15:50:23 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.38 ms]
24.10 15:50:23 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.19 ms]
24.10 15:50:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 15:50:23 TIME: core/cache.update : 0.54 ms
24.10 15:50:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
24.10 15:50:23 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 15:50:23 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
24.10 15:50:23 STATS: cache [questdata], database [840 calls, 2 reads, 1 writes]
24.10 15:50:23 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 15:50:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:50:23 TIME: core/cache.update : 0.4 ms
24.10 15:50:23 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
24.10 15:50:23 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 15:50:23 TIME: core/user.logoutPost : 0.12 ms
24.10 15:50:23 TIMER: Clans cache...
24.10 15:5024.10 15:53:31 TIMER: Starting timer...
24.10 15:53:31 TIMER: Timer running...
24.10 15:53:31 DB: SELECT * FROM GameVars
24.10 15:53:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 15:53:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 15:53:31 DB: SELECT * FROM Shops WHERE ID = 1
24.10 15:53:31 TEMP: load ./tmp/quest_daily_ids
24.10 15:53:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 15:53:31 TEMP: save ./tmp/quest_daily_ids
24.10 15:53:31 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 15:53:31 QUEUE: vdl.0 (thread) response server.login
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM LocalizationStrings
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 19.1 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM GameVars
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 1.2 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 1.91 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 1.16 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 1.44 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 2.49 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 15:53:31 TIME: core/quest.getDaily : 0.09 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM UserAttributeTypes
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 0.82 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM UserVariableTypes
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 0.96 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 15:53:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 3.71 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM ItemGroups
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 4.56 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM Bundles ORDER BY ID
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 1.89 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM BundleItems ORDER BY ID
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 1.96 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/shop.getList
24.10 15:53:31 TIME: core/shop.getList : 0.18 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM EffectAttributeTypes
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 1.24 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM Effects
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 1.12 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
24.10 15:53:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 2.69 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
24.10 15:53:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 2.28 ms
24.10 15:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
24.10 15:53:31 DB: SELECT * FROM Badges
24.10 15:53:31 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:53:31 TIME: core/server.query : 0.93 ms
24.10 15:53:31 TIMER: Clans cache...
24.10 15:53:31 TIMER: Clans cache: 0ms
24.10 15:53:31 TIMER: Check tournament...
24.10 15:53:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:54' OR rounddate = '2016-24-10 15:54'
24.10 15:53:31 TIMER: Check tournament: 1ms
24.10 15:53:31 TIMER: Clans cache...
24.10 15:53:31 TIMER: Clans cache: 0ms
24.10 15:53:31 TIMER: Check tournament...
24.10 15:53:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:55' OR rounddate = '2016-24-10 15:55'
24.10 15:53:31 TIMER: Check tournament: 1ms
24.10 15:53:31 TIMER: Clans cache...
24.10 15:53:31 TIMER: Clans cache: 0ms
24.10 15:53:31 TIMER: Check tournament...
24.10 15:53:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:56' OR rounddate = '2016-24-10 15:56'
24.10 15:53:31 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:53:31 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
24.10 15:53:31 STATS: cache [tournament], database [181 calls, 0 reads, 0 writes]
24.10 15:53:31 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 15:53:31 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 15:53:31 DB: SELECT nextval('Battle_id_seq') AS id
24.10 15:53:31 READDB: SELECT ID FROM Battle WHERE ID = 64
24.10 15:53:31 READDB: INSERT INTO Battle (ID) VALUES (64)
24.10 15:53:31 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:53:31 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
24.10 15:53:31 STATS: cache [battle], database [181 calls, 0 reads, 0 writes]
24.10 15:53:31 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 15:53:31 READDB: SELECT * FROM Battle WHERE ID = 64
24.10 15:53:31 DB: SELECT name FROM users WHERE id=2
24.10 15:53:31 DB: SELECT name FROM users WHERE id=76
24.10 15:53:31 TIMER: Check tournament: 63ms
24.10 15:56:37 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 64
24.10 15:56:37 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 15:56', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[76,2],"battleActive":[64]}}', rounddate = E'2016-24-10 15:56' WHERE ID = 1
24.10 15:56:47 BLOCKREMOVE: battle 64 removed
24.10 15:56:47 BLOCKREMOVE: tournament 1 removed
24.10 15:57:31 TIMER: Clans cache...
24.10 15:57:31 TIMER: Clans cache: 0ms
24.10 15:57:31 TIMER: Check tournament...
24.10 15:57:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:57' OR rounddate = '2016-24-10 15:57'
24.10 15:57:31 TIMER: Check tournament: 0ms
24.10 15:57:31 TIMER: Clans cache...
24.10 15:57:31 TIMER: Clans cache: 0ms
24.10 15:57:31 TIMER: Check tournament...
24.10 15:57:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:58' OR rounddate = '2016-24-10 15:58'
24.10 15:57:31 TIMER: Check tournament: 1ms
24.10 15:59:03 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 15:59:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 15:59:03 QUEUE: vdl.0 (thread) response core/server.query
24.10 15:59:03 TIME: core/server.query : 1.51 ms
24.10 15:59:03 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 15:59:03 QUEUE: vdl.0 (thread) response core/user.isOnlineID
24.10 15:59:03 TIME: core/user.isOnlineID : 0.09 ms
24.10 15:59:03 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 15:59:03 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:59:03 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
24.10 15:59:03 STATS: cache [user], database [332 calls, 0 reads, 0 writes]
24.10 15:59:03 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
24.10 15:59:03 READDB: SELECT * FROM Users WHERE ID = 76
24.10 15:59:03 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.08 ms]
24.10 15:59:03 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
24.10 15:59:03 QUEUE: vdl.0 (thread) response core/cache.get
24.10 15:59:03 TIME: core/cache.get : 3.3 ms
24.10 15:59:03 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 15:59:03 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 15:59:03 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
24.10 15:59:03 STATS: cache [questdata], database [332 calls, 0 reads, 0 writes]
24.10 15:59:03 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
24.10 15:59:03 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 15:59:03 QUEUE: vdl.0 (thread) response core/cache.get
24.10 15:59:03 TIME: core/cache.get : 1.89 ms
24.10 15:59:03 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 15:59:03 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:59:03 TIME: core/user.loginPost : 0.13 ms
24.10 15:59:05 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 15:59:05 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:59:05 TIME: vdl/cache.user.getData : 0.23 ms
24.10 15:59:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 15:59:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:59:11 TIME: core/cache.update : 0.2 ms
24.10 15:59:12 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 15:59:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 15:59:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 15:59:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 15:59:30 TIME: core/server.query : 1.62 ms
24.10 15:59:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 15:59:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 15:59:30 TIME: core/user.isOnlineID : 0.12 ms
24.10 15:59:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 15:59:30 READDB: SELECT * FROM Users WHERE ID = 2
24.10 15:59:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 15:59:30 TIME: core/cache.get : 1.57 ms
24.10 15:59:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 15:59:30 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 15:59:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 15:59:30 TIME: core/cache.get : 1.41 ms
24.10 15:59:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 15:59:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 15:59:30 TIME: core/user.loginPost : 0.14 ms
24.10 15:59:31 TIMER: Clans cache...
24.10 15:59:31 TIMER: Clans cache: 0ms
24.10 15:59:31 TIMER: Check tournament...
24.10 15:59:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 15:59' OR rounddate = '2016-24-10 15:59'
24.10 15:59:31 TIMER: Check tournament: 7ms
24.10 15:59:36 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 15:59:36 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 15:59:36 TIME: vdl/cache.user.getData : 0.18 ms
24.10 15:59:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 15:59:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 15:59:36 TIME: core/cache.update : 0.17 ms
24.10 15:59:37 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
