03.11 22:01:55 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:01:55 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:01:55 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:01:55 TIME: core/server.query : 1.06 ms
03.11 22:01:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:01:55 STATS: cache [battle], get [6 calls, 1 cache hits, 4 cache misses, 0 same version, 2 not found]
03.11 22:01:55 STATS: cache [battle], segments [8 calls, 3 hits, 4 misses]
03.11 22:01:55 STATS: cache [battle], database [542 calls, 4 reads, 1 writes]
03.11 22:01:55 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:01:55 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:01:55 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:01:55 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:01:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:01:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:01:55 STATS: cache [user], get [5 calls, 2 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 22:01:55 STATS: cache [user], segments [20 calls, 13 hits, 6 misses]
03.11 22:01:55 STATS: cache [user], database [542 calls, 3 reads, 7 writes]
03.11 22:01:55 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
03.11 22:01:55 STATS: cache manager [1], get [10 calls, total 0.01 sec spent, avg 0.96 ms]
03.11 22:01:55 STATS: cache manager [1], update [10 calls, total 0 sec spent, avg 0.14 ms]
03.11 22:01:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
03.11 22:01:55 TIME: core/cache.update : 0.58 ms
03.11 22:01:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:01:55 STATS: cache [questdata], get [5 calls, 2 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 22:01:55 STATS: cache [questdata], segments [15 calls, 8 hits, 6 misses]
03.11 22:01:55 STATS: cache [questdata], database [542 calls, 3 reads, 2 writes]
03.11 22:01:55 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
03.11 22:01:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 22:01:55 TIME: core/cache.update : 0.41 ms
03.11 22:01:55 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:01:55 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:01:55 TIME: core/user.logoutPost : 0.12 ms
03.11 22:01:55 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:01:55 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:02:05 BLOCKREMOVE: user 114 removed
03.11 22:02:05 BLOCKREMOVE: questdata 114 removed
03.11 22:02:53 TIMER: Clans cache...
03.11 22:02:53 TIMER: Clans cache: 0ms
03.11 22:02:53 TIMER: Check tournament...
03.11 22:02:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:02' OR rounddate = '2016-03-11 22:02' AND status <> 'finished'
03.11 22:02:53 DB: SELECT * FROM battle WHERE endtime >= '1478199.77358896' AND avaliable = true AND finished <> true
03.11 22:02:53 TIMER: Check tournament: 2ms
03.11 22:02:53 TIMER: Clans cache...
03.11 22:02:53 TIMER: Clans cache: 0ms
03.11 22:02:53 TIMER: Check tournament...
03.11 22:02:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:03' OR rounddate = '2016-03-11 22:03' AND status <> 'finished'
03.11 22:02:53 DB: SELECT * FROM battle WHERE endtime >= '1478199.83360081' AND avaliable = true AND finished <> true
03.11 22:02:53 TIMER: Check tournament: 1ms
03.11 22:02:53 TIMER: Clans cache...
03.11 22:02:53 TIMER: Clans cache: 0ms
03.11 22:02:53 TIMER: Check tournament...
03.11 22:02:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:04' OR rounddate = '2016-03-11 22:04' AND status <> 'finished'
03.11 22:02:53 DB: SELECT * FROM battle WHERE endtime >= '1478199.89361462' AND avaliable = true AND finished <> true
03.11 22:02:53 TIMER: Check tournament: 1ms
03.11 22:02:53 TIMER: Clans cache...
03.11 22:02:53 TIMER: Clans cache: 0ms
03.11 22:02:53 TIMER: Check tournament...
03.11 22:02:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:05' OR rounddate = '2016-03-11 22:05' AND status <> 'finished'
03.11 22:02:53 DB: SELECT * FROM battle WHERE endtime >= '1478199.95362572' AND avaliable = true AND finished <> true
03.11 22:02:53 TIMER: Check tournament: 1ms
03.11 22:06:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:06:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:06:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:06:30 TIME: core/server.query : 1.18 ms
03.11 22:06:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:06:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:06:30 TIME: core/user.isOnlineID : 0.08 ms
03.11 22:06:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:06:30 STATS: cache [user], get [5 calls, 2 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 22:06:30 STATS: cache [user], segments [22 calls, 15 hits, 6 misses]
03.11 22:06:30 STATS: cache [user], database [817 calls, 3 reads, 8 writes]
03.11 22:06:30 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
03.11 22:06:30 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:06:30 STATS: cache manager [1], get [11 calls, total 0.01 sec spent, avg 1.01 ms]
03.11 22:06:30 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.15 ms]
03.11 22:06:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:06:30 TIME: core/cache.get : 1.85 ms
03.11 22:06:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:06:30 STATS: cache [questdata], get [5 calls, 2 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 22:06:30 STATS: cache [questdata], segments [17 calls, 10 hits, 6 misses]
03.11 22:06:30 STATS: cache [questdata], database [817 calls, 3 reads, 3 writes]
03.11 22:06:30 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
03.11 22:06:30 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:06:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:06:30 TIME: core/cache.get : 1.28 ms
03.11 22:06:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:06:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:06:30 TIME: core/user.loginPost : 0.13 ms
03.11 22:06:38 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:06:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:06:38 TIME: core/cache.update : 0.19 ms
03.11 22:06:38 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:06:53 TIMER: Clans cache...
03.11 22:06:53 TIMER: Clans cache: 0ms
03.11 22:06:53 TIMER: Check tournament...
03.11 22:06:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:06' OR rounddate = '2016-03-11 22:06' AND status <> 'finished'
03.11 22:06:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.01363945' AND avaliable = true AND finished <> true
03.11 22:06:53 TIMER: Check tournament: 1ms
03.11 22:06:58 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:06:58 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:06:58 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:06:58 TIME: core/server.query : 0.99 ms
03.11 22:06:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:06:58 STATS: cache [battle], get [7 calls, 1 cache hits, 5 cache misses, 0 same version, 3 not found]
03.11 22:06:58 STATS: cache [battle], segments [9 calls, 3 hits, 5 misses]
03.11 22:06:58 STATS: cache [battle], database [845 calls, 5 reads, 1 writes]
03.11 22:06:58 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:06:58 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:06:58 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:06:58 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:06:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:06:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:06:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:06:58 TIME: core/cache.update : 0.16 ms
03.11 22:06:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:06:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:06:58 TIME: core/cache.update : 0.14 ms
03.11 22:06:58 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:06:58 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:06:58 TIME: core/user.logoutPost : 0.12 ms
03.11 22:06:58 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:06:58 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:07:07 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:07:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:07:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:07:07 TIME: core/server.query : 1.21 ms
03.11 22:07:07 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:07:07 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:07:07 TIME: core/user.isOnlineID : 0.13 ms
03.11 22:07:07 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:07:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 114 } }
03.11 22:07:07 TIME: core/cache.get : 0.25 ms
03.11 22:07:07 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:07:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 114 } }
03.11 22:07:07 TIME: core/cache.get : 0.2 ms
03.11 22:07:07 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:07:07 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:07:07 TIME: core/user.loginPost : 0.09 ms
03.11 22:07:13 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:07:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 22:07:13 TIME: core/cache.update : 0.14 ms
03.11 22:07:13 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:07:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:07:26 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:07:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:07:26 TIME: core/server.query : 1 ms
03.11 22:07:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:07:26 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:07:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:07:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:07:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:07:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:07:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 22:07:26 TIME: core/cache.update : 0.17 ms
03.11 22:07:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:07:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:07:26 TIME: core/cache.update : 0.11 ms
03.11 22:07:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:07:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:07:26 TIME: core/user.logoutPost : 0.08 ms
03.11 22:07:27 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:07:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:07:37 BLOCKREMOVE: user 114 removed
03.11 22:07:37 BLOCKREMOVE: questdata 114 removed
03.11 22:07:53 TIMER: Clans cache...
03.11 22:07:53 TIMER: Clans cache: 0ms
03.11 22:07:53 TIMER: Check tournament...
03.11 22:07:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:07' OR rounddate = '2016-03-11 22:07' AND status <> 'finished'
03.11 22:07:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.07365523' AND avaliable = true AND finished <> true
03.11 22:07:53 TIMER: Check tournament: 2ms
03.11 22:07:53 TIMER: Clans cache...
03.11 22:07:53 TIMER: Clans cache: 0ms
03.11 22:07:53 TIMER: Check tournament...
03.11 22:07:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:08' OR rounddate = '2016-03-11 22:08' AND status <> 'finished'
03.11 22:07:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.13366676' AND avaliable = true AND finished <> true
03.11 22:07:53 TIMER: Check tournament: 1ms
03.11 22:09:13 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:09:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:09:13 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:09:13 TIME: core/server.query : 0.97 ms
03.11 22:09:13 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:09:13 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:09:13 TIME: core/user.isOnlineID : 0.1 ms
03.11 22:09:13 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:09:13 STATS: cache [user], get [7 calls, 3 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 22:09:13 STATS: cache [user], segments [32 calls, 23 hits, 8 misses]
03.11 22:09:13 STATS: cache [user], database [980 calls, 4 reads, 12 writes]
03.11 22:09:13 STATS: cache [user], lock [8 calls, 8 attempts, 0 failures]
03.11 22:09:13 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:09:13 STATS: cache manager [1], get [15 calls, total 0.01 sec spent, avg 0.92 ms]
03.11 22:09:13 STATS: cache manager [1], update [17 calls, total 0 sec spent, avg 0.11 ms]
03.11 22:09:13 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:09:13 TIME: core/cache.get : 1.92 ms
03.11 22:09:13 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:09:13 STATS: cache [questdata], get [7 calls, 3 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 22:09:13 STATS: cache [questdata], segments [25 calls, 16 hits, 8 misses]
03.11 22:09:13 STATS: cache [questdata], database [980 calls, 4 reads, 5 writes]
03.11 22:09:13 STATS: cache [questdata], lock [8 calls, 8 attempts, 0 failures]
03.11 22:09:13 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:09:13 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:09:13 TIME: core/cache.get : 1.35 ms
03.11 22:09:13 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:09:13 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:09:13 TIME: core/user.loginPost : 0.11 ms
03.11 22:09:21 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:09:21 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:09:21 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:09:21 TIME: core/server.query : 0.97 ms
03.11 22:09:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:09:21 STATS: cache [battle], get [9 calls, 1 cache hits, 7 cache misses, 0 same version, 5 not found]
03.11 22:09:21 STATS: cache [battle], segments [11 calls, 3 hits, 7 misses]
03.11 22:09:21 STATS: cache [battle], database [988 calls, 7 reads, 1 writes]
03.11 22:09:21 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:09:21 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:09:21 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:09:21 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:09:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:09:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:09:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:09:21 TIME: core/cache.update : 0.18 ms
03.11 22:09:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:09:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:09:21 TIME: core/cache.update : 0.15 ms
03.11 22:09:21 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:09:21 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:09:21 TIME: core/user.logoutPost : 0.08 ms
03.11 22:09:22 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:09:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:09:32 BLOCKREMOVE: user 114 removed
03.11 22:09:32 BLOCKREMOVE: questdata 114 removed
03.11 22:09:53 TIMER: Clans cache...
03.11 22:09:53 TIMER: Clans cache: 0ms
03.11 22:09:53 TIMER: Check tournament...
03.11 22:09:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:09' OR rounddate = '2016-03-11 22:09' AND status <> 'finished'
03.11 22:09:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.19368047' AND avaliable = true AND finished <> true
03.11 22:09:53 TIMER: Check tournament: 1ms
03.11 22:09:53 TIMER: Clans cache...
03.11 22:09:53 TIMER: Clans cache: 0ms
03.11 22:09:53 TIMER: Check tournament...
03.11 22:09:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:10' OR rounddate = '2016-03-11 22:10' AND status <> 'finished'
03.11 22:09:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.25369158' AND avaliable = true AND finished <> true
03.11 22:09:53 TIMER: Check tournament: 1ms
03.11 22:11:27 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:11:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:11:27 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:11:27 TIME: core/server.query : 1.35 ms
03.11 22:11:27 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:11:27 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:11:27 TIME: core/user.isOnlineID : 0.08 ms
03.11 22:11:27 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:11:27 STATS: cache [user], get [8 calls, 3 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 22:11:27 STATS: cache [user], segments [36 calls, 25 hits, 10 misses]
03.11 22:11:27 STATS: cache [user], database [1114 calls, 5 reads, 13 writes]
03.11 22:11:27 STATS: cache [user], lock [9 calls, 9 attempts, 0 failures]
03.11 22:11:27 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:11:27 STATS: cache manager [1], get [17 calls, total 0.02 sec spent, avg 0.97 ms]
03.11 22:11:27 STATS: cache manager [1], update [19 calls, total 0 sec spent, avg 0.11 ms]
03.11 22:11:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:11:27 TIME: core/cache.get : 1.77 ms
03.11 22:11:27 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:11:27 STATS: cache [questdata], get [8 calls, 3 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 22:11:27 STATS: cache [questdata], segments [29 calls, 18 hits, 10 misses]
03.11 22:11:27 STATS: cache [questdata], database [1114 calls, 5 reads, 6 writes]
03.11 22:11:27 STATS: cache [questdata], lock [9 calls, 9 attempts, 0 failures]
03.11 22:11:27 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:11:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:11:27 TIME: core/cache.get : 1.04 ms
03.11 22:11:27 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:11:27 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:11:27 TIME: core/user.loginPost : 0.08 ms
03.11 22:11:33 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:11:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:11:33 TIME: core/cache.update : 0.17 ms
03.11 22:11:34 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:11:53 TIMER: Clans cache...
03.11 22:11:53 TIMER: Clans cache: 0ms
03.11 22:11:53 TIMER: Check tournament...
03.11 22:11:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:11' OR rounddate = '2016-03-11 22:11' AND status <> 'finished'
03.11 22:11:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.31370239' AND avaliable = true AND finished <> true
03.11 22:11:53 TIMER: Check tournament: 1ms
03.11 22:12:11 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:12:11 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:12:11 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:12:11 TIME: core/server.query : 0.85 ms
03.11 22:12:11 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:12:11 STATS: cache [battle], get [10 calls, 1 cache hits, 8 cache misses, 0 same version, 6 not found]
03.11 22:12:11 STATS: cache [battle], segments [12 calls, 3 hits, 8 misses]
03.11 22:12:11 STATS: cache [battle], database [1158 calls, 8 reads, 1 writes]
03.11 22:12:11 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:12:11 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:12:11 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:12:11 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:12:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:12:11 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:12:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:12:11 TIME: core/cache.update : 0.16 ms
03.11 22:12:11 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:12:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:12:11 TIME: core/cache.update : 0.14 ms
03.11 22:12:11 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:12:11 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:12:11 TIME: core/user.logoutPost : 0.12 ms
03.11 22:12:12 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:12:12 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:12:22 BLOCKREMOVE: user 114 removed
03.11 22:12:22 BLOCKREMOVE: questdata 114 removed
03.11 22:12:49 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:12:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:12:49 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:12:49 TIME: core/server.query : 1.17 ms
03.11 22:12:49 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:12:49 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:12:49 TIME: core/user.isOnlineID : 0.09 ms
03.11 22:12:49 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:12:49 STATS: cache [user], get [9 calls, 3 cache hits, 6 cache misses, 0 same version, 0 not found]
03.11 22:12:49 STATS: cache [user], segments [41 calls, 28 hits, 12 misses]
03.11 22:12:49 STATS: cache [user], database [1195 calls, 6 reads, 15 writes]
03.11 22:12:49 STATS: cache [user], lock [10 calls, 10 attempts, 0 failures]
03.11 22:12:49 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:12:49 STATS: cache manager [1], get [19 calls, total 0.02 sec spent, avg 0.99 ms]
03.11 22:12:49 STATS: cache manager [1], update [22 calls, total 0 sec spent, avg 0.1 ms]
03.11 22:12:49 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:12:49 TIME: core/cache.get : 1.83 ms
03.11 22:12:49 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:12:49 STATS: cache [questdata], get [9 calls, 3 cache hits, 6 cache misses, 0 same version, 0 not found]
03.11 22:12:49 STATS: cache [questdata], segments [33 calls, 20 hits, 12 misses]
03.11 22:12:49 STATS: cache [questdata], database [1195 calls, 6 reads, 7 writes]
03.11 22:12:49 STATS: cache [questdata], lock [10 calls, 10 attempts, 0 failures]
03.11 22:12:49 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:12:49 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:12:49 TIME: core/cache.get : 1.74 ms
03.11 22:12:49 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:12:49 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:12:49 TIME: core/user.loginPost : 0.11 ms
03.11 22:12:53 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:12:53 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:12:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 9 }, { id => 10 }, { id => 11 }}, errorCode => ok, _type => core/server.query }
03.11 22:12:53 TIME: core/server.query : 1.04 ms
03.11 22:12:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 11, _type => vdl/cache.battle.infoRoom }
03.11 22:12:53 READDB: SELECT * FROM Battle WHERE ID = 11
03.11 22:12:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:12:53 TIME: vdl/cache.battle.infoRoom : 1.19 ms
03.11 22:12:53 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 11, _type => vdl/cache.battle.finishRoom }
03.11 22:12:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:12:53 TIME: vdl/cache.battle.finishRoom : 0.13 ms
03.11 22:12:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:12:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:12:53 TIME: core/cache.update : 0.14 ms
03.11 22:12:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:12:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:12:53 TIME: core/cache.update : 0.13 ms
03.11 22:12:53 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:12:53 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:12:53 TIME: core/user.logoutPost : 0.1 ms
03.11 22:12:53 TIMER: Clans cache...
03.11 22:12:53 TIMER: Clans cache: 0ms
03.11 22:12:53 TIMER: Check tournament...
03.11 22:12:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:12' OR rounddate = '2016-03-11 22:12' AND status <> 'finished'
03.11 22:12:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.3737181' AND avaliable = true AND finished <> true
03.11 22:12:53 TIMER: Check tournament: 1ms
03.11 22:12:54 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:12:54 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 22:12:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:12:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:12:58 TIME: core/cache.update : 0.34 ms
03.11 22:12:59 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:12:59 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481800', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 11
03.11 22:13:04 BLOCKREMOVE: user 107 removed
03.11 22:13:04 BLOCKREMOVE: questdata 107 removed
03.11 22:13:09 BLOCKREMOVE: battle 11 removed
03.11 22:13:14 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:13:14 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:13:14 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:13:14 TIME: core/server.query : 1.2 ms
03.11 22:13:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:13:14 STATS: cache [battle], get [13 calls, 2 cache hits, 10 cache misses, 0 same version, 7 not found]
03.11 22:13:14 STATS: cache [battle], segments [16 calls, 5 hits, 10 misses]
03.11 22:13:14 STATS: cache [battle], database [1220 calls, 10 reads, 2 writes]
03.11 22:13:14 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:13:14 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:13:14 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:13:14 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:13:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:13:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:13:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:13:14 TIME: core/cache.update : 0.17 ms
03.11 22:13:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:13:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:13:14 TIME: core/cache.update : 0.36 ms
03.11 22:13:14 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:13:14 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:13:14 TIME: core/user.logoutPost : 0.08 ms
03.11 22:13:14 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:13:14 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:13:24 BLOCKREMOVE: user 114 removed
03.11 22:13:24 BLOCKREMOVE: questdata 114 removed
03.11 22:13:53 TIMER: Clans cache...
03.11 22:13:53 TIMER: Clans cache: 0ms
03.11 22:13:53 TIMER: Check tournament...
03.11 22:13:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:13' OR rounddate = '2016-03-11 22:13' AND status <> 'finished'
03.11 22:13:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.4337319' AND avaliable = true AND finished <> true
03.11 22:13:53 TIMER: Check tournament: 2ms
03.11 22:13:53 TIMER: Clans cache...
03.11 22:13:53 TIMER: Clans cache: 0ms
03.11 22:13:53 TIMER: Check tournament...
03.11 22:13:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:14' OR rounddate = '2016-03-11 22:14' AND status <> 'finished'
03.11 22:13:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.49374285' AND avaliable = true AND finished <> true
03.11 22:13:53 TIMER: Check tournament: 1ms
03.11 22:15:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:15:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:15:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:15:43 TIME: core/server.query : 1.43 ms
03.11 22:15:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:15:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:15:43 TIME: core/user.isOnlineID : 0.13 ms
03.11 22:15:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:15:43 STATS: cache [user], get [10 calls, 3 cache hits, 7 cache misses, 0 same version, 0 not found]
03.11 22:15:43 STATS: cache [user], segments [48 calls, 33 hits, 14 misses]
03.11 22:15:43 STATS: cache [user], database [1369 calls, 7 reads, 18 writes]
03.11 22:15:43 STATS: cache [user], lock [11 calls, 11 attempts, 0 failures]
03.11 22:15:43 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:15:43 STATS: cache manager [1], get [21 calls, total 0.02 sec spent, avg 1.05 ms]
03.11 22:15:43 STATS: cache manager [1], update [27 calls, total 0 sec spent, avg 0.09 ms]
03.11 22:15:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:15:43 TIME: core/cache.get : 1.81 ms
03.11 22:15:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:15:43 STATS: cache [questdata], get [10 calls, 3 cache hits, 7 cache misses, 0 same version, 0 not found]
03.11 22:15:43 STATS: cache [questdata], segments [39 calls, 24 hits, 14 misses]
03.11 22:15:43 STATS: cache [questdata], database [1369 calls, 7 reads, 9 writes]
03.11 22:15:43 STATS: cache [questdata], lock [11 calls, 11 attempts, 0 failures]
03.11 22:15:43 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:15:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:15:43 TIME: core/cache.get : 1.82 ms
03.11 22:15:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:15:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:15:43 TIME: core/user.loginPost : 0.23 ms
03.11 22:15:48 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:15:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:15:48 TIME: core/cache.update : 0.19 ms
03.11 22:15:49 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:15:53 TIMER: Clans cache...
03.11 22:15:53 TIMER: Clans cache: 0ms
03.11 22:15:53 TIMER: Check tournament...
03.11 22:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:15' OR rounddate = '2016-03-11 22:15' AND status <> 'finished'
03.11 22:15:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.55375672' AND avaliable = true AND finished <> true
03.11 22:15:53 TIMER: Check tournament: 1ms
03.11 22:16:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:16:19 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:16:19 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:16:19 TIME: core/server.query : 0.96 ms
03.11 22:16:19 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:16:19 STATS: cache [battle], get [14 calls, 2 cache hits, 11 cache misses, 0 same version, 8 not found]
03.11 22:16:19 STATS: cache [battle], segments [17 calls, 5 hits, 11 misses]
03.11 22:16:19 STATS: cache [battle], database [1406 calls, 11 reads, 2 writes]
03.11 22:16:19 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:16:19 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:16:19 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:16:19 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:16:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:16:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:16:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:16:19 TIME: core/cache.update : 0.14 ms
03.11 22:16:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:16:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:16:19 TIME: core/cache.update : 0.1 ms
03.11 22:16:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:16:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:16:19 TIME: core/user.logoutPost : 0.12 ms
03.11 22:16:20 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:16:20 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:16:30 BLOCKREMOVE: user 114 removed
03.11 22:16:30 BLOCKREMOVE: questdata 114 removed
03.11 22:16:53 TIMER: Clans cache...
03.11 22:16:53 TIMER: Clans cache: 0ms
03.11 22:16:53 TIMER: Check tournament...
03.11 22:16:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:16' OR rounddate = '2016-03-11 22:16' AND status <> 'finished'
03.11 22:16:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.61376764' AND avaliable = true AND finished <> true
03.11 22:16:53 TIMER: Check tournament: 1ms
03.11 22:17:15 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:17:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:17:15 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:17:15 TIME: core/server.query : 1.39 ms
03.11 22:17:15 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:17:15 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:17:15 TIME: core/user.isOnlineID : 0.12 ms
03.11 22:17:15 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:17:15 STATS: cache [user], get [11 calls, 3 cache hits, 8 cache misses, 0 same version, 0 not found]
03.11 22:17:15 STATS: cache [user], segments [53 calls, 36 hits, 16 misses]
03.11 22:17:15 STATS: cache [user], database [1461 calls, 8 reads, 20 writes]
03.11 22:17:15 STATS: cache [user], lock [12 calls, 12 attempts, 0 failures]
03.11 22:17:15 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:17:15 STATS: cache manager [1], get [23 calls, total 0.03 sec spent, avg 1.1 ms]
03.11 22:17:15 STATS: cache manager [1], update [30 calls, total 0 sec spent, avg 0.09 ms]
03.11 22:17:15 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:17:15 TIME: core/cache.get : 2.24 ms
03.11 22:17:15 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:17:15 STATS: cache [questdata], get [11 calls, 3 cache hits, 8 cache misses, 0 same version, 0 not found]
03.11 22:17:15 STATS: cache [questdata], segments [43 calls, 26 hits, 16 misses]
03.11 22:17:15 STATS: cache [questdata], database [1461 calls, 8 reads, 10 writes]
03.11 22:17:15 STATS: cache [questdata], lock [12 calls, 12 attempts, 0 failures]
03.11 22:17:15 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:17:15 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:17:15 TIME: core/cache.get : 1.41 ms
03.11 22:17:15 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:17:15 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:17:15 TIME: core/user.loginPost : 0.26 ms
03.11 22:17:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:17:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:17:23 TIME: core/cache.update : 0.15 ms
03.11 22:17:24 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:17:28 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:17:28 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:17:28 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:17:28 TIME: core/server.query : 0.8 ms
03.11 22:17:28 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:17:28 STATS: cache [battle], get [15 calls, 2 cache hits, 12 cache misses, 0 same version, 9 not found]
03.11 22:17:28 STATS: cache [battle], segments [18 calls, 5 hits, 12 misses]
03.11 22:17:28 STATS: cache [battle], database [1474 calls, 12 reads, 2 writes]
03.11 22:17:28 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:17:28 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:17:28 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:17:28 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:17:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:17:28 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:17:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:17:28 TIME: core/cache.update : 0.16 ms
03.11 22:17:28 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:17:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:17:28 TIME: core/cache.update : 0.15 ms
03.11 22:17:28 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:17:28 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:17:28 TIME: core/user.logoutPost : 0.12 ms
03.11 22:17:28 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:17:29 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:17:38 BLOCKREMOVE: questdata 114 removed
03.11 22:17:39 BLOCKREMOVE: user 114 removed
03.11 22:17:53 TIMER: Clans cache...
03.11 22:17:53 TIMER: Clans cache: 0ms
03.11 22:17:53 TIMER: Check tournament...
03.11 22:17:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:17' OR rounddate = '2016-03-11 22:17' AND status <> 'finished'
03.11 22:17:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.67378186' AND avaliable = true AND finished <> true
03.11 22:17:53 TIMER: Check tournament: 1ms
03.11 22:18:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:18:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:18:05 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:18:05 TIME: core/server.query : 1.24 ms
03.11 22:18:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:18:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:18:05 TIME: core/user.isOnlineID : 0.11 ms
03.11 22:18:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:18:05 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:18:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:18:05 TIME: core/cache.get : 1.69 ms
03.11 22:18:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:18:05 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:18:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:18:05 TIME: core/cache.get : 1.13 ms
03.11 22:18:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:18:05 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:18:05 TIME: core/user.loginPost : 0.11 ms
03.11 22:18:13 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:18:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:18:13 TIME: core/cache.update : 0.18 ms
03.11 22:18:14 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:18:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:18:27 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:18:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:18:27 TIME: core/server.query : 0.91 ms
03.11 22:18:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:18:27 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:18:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:18:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:18:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:18:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:18:27 STATS: cache [user], get [13 calls, 3 cache hits, 10 cache misses, 0 same version, 0 not found]
03.11 22:18:27 STATS: cache [user], segments [61 calls, 40 hits, 20 misses]
03.11 22:18:27 STATS: cache [user], database [1534 calls, 10 reads, 23 writes]
03.11 22:18:27 STATS: cache [user], lock [13 calls, 13 attempts, 0 failures]
03.11 22:18:27 STATS: cache manager [1], get [26 calls, total 0.03 sec spent, avg 1.11 ms]
03.11 22:18:27 STATS: cache manager [1], update [35 calls, total 0 sec spent, avg 0.09 ms]
03.11 22:18:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:18:27 TIME: core/cache.update : 0.44 ms
03.11 22:18:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:18:27 STATS: cache [questdata], get [13 calls, 3 cache hits, 10 cache misses, 0 same version, 0 not found]
03.11 22:18:27 STATS: cache [questdata], segments [49 calls, 28 hits, 20 misses]
03.11 22:18:27 STATS: cache [questdata], database [1534 calls, 10 reads, 11 writes]
03.11 22:18:27 STATS: cache [questdata], lock [13 calls, 13 attempts, 0 failures]
03.11 22:18:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:18:27 TIME: core/cache.update : 0.29 ms
03.11 22:18:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:18:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:18:27 TIME: core/user.logoutPost : 0.1 ms
03.11 22:18:28 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:18:28 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:18:38 BLOCKREMOVE: user 114 removed
03.11 22:18:38 BLOCKREMOVE: questdata 114 removed
03.11 22:18:53 TIMER: Clans cache...
03.11 22:18:53 TIMER: Clans cache: 0ms
03.11 22:18:53 TIMER: Check tournament...
03.11 22:18:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:18' OR rounddate = '2016-03-11 22:18' AND status <> 'finished'
03.11 22:18:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.73379268' AND avaliable = true AND finished <> true
03.11 22:18:53 TIMER: Check tournament: 1ms
03.11 22:19:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:19:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:19:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:19:30 TIME: core/server.query : 1.23 ms
03.11 22:19:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:19:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:19:30 TIME: core/user.isOnlineID : 0.1 ms
03.11 22:19:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:19:30 STATS: cache [user], get [13 calls, 3 cache hits, 10 cache misses, 0 same version, 0 not found]
03.11 22:19:30 STATS: cache [user], segments [63 calls, 42 hits, 20 misses]
03.11 22:19:30 STATS: cache [user], database [1596 calls, 10 reads, 24 writes]
03.11 22:19:30 STATS: cache [user], lock [14 calls, 14 attempts, 0 failures]
03.11 22:19:30 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:19:30 STATS: cache manager [1], get [27 calls, total 0.03 sec spent, avg 1.15 ms]
03.11 22:19:30 STATS: cache manager [1], update [36 calls, total 0 sec spent, avg 0.09 ms]
03.11 22:19:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:19:30 TIME: core/cache.get : 2.6 ms
03.11 22:19:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:19:30 STATS: cache [questdata], get [13 calls, 3 cache hits, 10 cache misses, 0 same version, 0 not found]
03.11 22:19:30 STATS: cache [questdata], segments [51 calls, 30 hits, 20 misses]
03.11 22:19:30 STATS: cache [questdata], database [1596 calls, 10 reads, 12 writes]
03.11 22:19:30 STATS: cache [questdata], lock [14 calls, 14 attempts, 0 failures]
03.11 22:19:30 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:19:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:19:30 TIME: core/cache.get : 1.24 ms
03.11 22:19:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:19:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:19:30 TIME: core/user.loginPost : 0.11 ms
03.11 22:19:38 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:19:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:19:38 TIME: core/cache.update : 0.2 ms
03.11 22:19:39 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:19:46 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:19:46 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:19:46 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:19:46 TIME: core/server.query : 0.8 ms
03.11 22:19:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:19:46 STATS: cache [battle], get [17 calls, 2 cache hits, 14 cache misses, 0 same version, 11 not found]
03.11 22:19:46 STATS: cache [battle], segments [20 calls, 5 hits, 14 misses]
03.11 22:19:46 STATS: cache [battle], database [1613 calls, 14 reads, 2 writes]
03.11 22:19:46 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:19:46 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:19:46 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:19:46 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:19:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:19:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:19:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:19:46 TIME: core/cache.update : 0.18 ms
03.11 22:19:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:19:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:19:46 TIME: core/cache.update : 0.11 ms
03.11 22:19:46 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:19:46 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:19:46 TIME: core/user.logoutPost : 0.09 ms
03.11 22:19:47 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:19:47 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:19:53 TIMER: Clans cache...
03.11 22:19:53 TIMER: Clans cache: 0ms
03.11 22:19:53 TIMER: Check tournament...
03.11 22:19:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:19' OR rounddate = '2016-03-11 22:19' AND status <> 'finished'
03.11 22:19:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.79380606' AND avaliable = true AND finished <> true
03.11 22:19:53 TIMER: Check tournament: 1ms
03.11 22:19:57 BLOCKREMOVE: user 114 removed
03.11 22:19:57 BLOCKREMOVE: questdata 114 removed
03.11 22:20:03 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:20:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:20:03 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:20:03 TIME: core/server.query : 1.15 ms
03.11 22:20:03 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:20:03 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:20:03 TIME: core/user.isOnlineID : 0.11 ms
03.11 22:20:03 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:20:03 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:20:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:20:03 TIME: core/cache.get : 1.19 ms
03.11 22:20:03 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:20:03 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:20:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:20:03 TIME: core/cache.get : 0.8 ms
03.11 22:20:03 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:20:03 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:20:03 TIME: core/user.loginPost : 0.09 ms
03.11 22:20:08 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:20:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:20:08 TIME: core/cache.update : 0.14 ms
03.11 22:20:09 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:20:15 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:20:15 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:20:15 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:20:15 TIME: core/server.query : 1.99 ms
03.11 22:20:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:20:15 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:20:15 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:20:15 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:20:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:20:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:20:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:20:15 TIME: core/cache.update : 0.17 ms
03.11 22:20:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:20:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:20:15 TIME: core/cache.update : 0.15 ms
03.11 22:20:15 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:20:15 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:20:15 TIME: core/user.logoutPost : 0.12 ms
03.11 22:20:15 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:20:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:20:25 BLOCKREMOVE: user 114 removed
03.11 22:20:25 BLOCKREMOVE: questdata 114 removed
03.11 22:20:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:20:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:20:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:20:30 TIME: core/server.query : 5.03 ms
03.11 22:20:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:20:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:20:30 TIME: core/user.isOnlineID : 0.1 ms
03.11 22:20:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:20:30 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:20:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:20:30 TIME: core/cache.get : 1.81 ms
03.11 22:20:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:20:30 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:20:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:20:30 TIME: core/cache.get : 1.14 ms
03.11 22:20:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:20:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:20:30 TIME: core/user.loginPost : 0.11 ms
03.11 22:20:38 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:20:38 STATS: cache [user], get [16 calls, 3 cache hits, 13 cache misses, 0 same version, 0 not found]
03.11 22:20:38 STATS: cache [user], segments [75 calls, 48 hits, 26 misses]
03.11 22:20:38 STATS: cache [user], database [1665 calls, 13 reads, 28 writes]
03.11 22:20:38 STATS: cache [user], lock [16 calls, 16 attempts, 0 failures]
03.11 22:20:38 STATS: cache manager [1], get [32 calls, total 0.04 sec spent, avg 1.13 ms]
03.11 22:20:38 STATS: cache manager [1], update [43 calls, total 0 sec spent, avg 0.09 ms]
03.11 22:20:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:20:38 TIME: core/cache.update : 0.56 ms
03.11 22:20:39 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:20:53 TIMER: Clans cache...
03.11 22:20:53 TIMER: Clans cache: 0ms
03.11 22:20:53 TIMER: Check tournament...
03.11 22:20:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:20' OR rounddate = '2016-03-11 22:20' AND status <> 'finished'
03.11 22:20:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.85382022' AND avaliable = true AND finished <> true
03.11 22:20:53 TIMER: Check tournament: 1ms
03.11 22:20:56 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
03.11 22:20:56 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
03.11 22:20:56 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 22:20:56 TIME: core/server.query : 0.96 ms
03.11 22:20:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 22:20:56 STATS: cache [battle], get [19 calls, 2 cache hits, 16 cache misses, 0 same version, 13 not found]
03.11 22:20:56 STATS: cache [battle], segments [22 calls, 5 hits, 16 misses]
03.11 22:20:56 STATS: cache [battle], database [1683 calls, 16 reads, 2 writes]
03.11 22:20:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:20:56 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 22:20:56 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 22:20:56 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 22:20:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 22:20:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
03.11 22:20:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:20:56 TIME: core/cache.update : 0.12 ms
03.11 22:20:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
03.11 22:20:56 STATS: cache [questdata], get [16 calls, 3 cache hits, 13 cache misses, 0 same version, 0 not found]
03.11 22:20:56 STATS: cache [questdata], segments [61 calls, 34 hits, 26 misses]
03.11 22:20:56 STATS: cache [questdata], database [1683 calls, 13 reads, 14 writes]
03.11 22:20:56 STATS: cache [questdata], lock [16 calls, 16 attempts, 0 failures]
03.11 22:20:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:20:56 TIME: core/cache.update : 0.41 ms
03.11 22:20:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
03.11 22:20:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:20:56 TIME: core/user.logoutPost : 0.12 ms
03.11 22:20:57 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:20:57 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
03.11 22:21:07 BLOCKREMOVE: user 114 removed
03.11 22:21:07 BLOCKREMOVE: questdata 114 removed
03.11 22:21:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114', _type => core/server.query }
03.11 22:21:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid114' AND Password = E'uid114'
03.11 22:21:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid114, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
03.11 22:21:12 TIME: core/server.query : 2.4 ms
03.11 22:21:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
03.11 22:21:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:21:12 TIME: core/user.isOnlineID : 0.11 ms
03.11 22:21:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
03.11 22:21:12 READDB: SELECT * FROM Users WHERE ID = 114
03.11 22:21:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid114, deleted => false, email => , networktype =>   , password => uid114, isbanned => false, regdate => 2016-11-03 17:12:46.234491+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478182566, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 114 } }
03.11 22:21:12 TIME: core/cache.get : 2.36 ms
03.11 22:21:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
03.11 22:21:12 READDB: SELECT * FROM UserQuests WHERE ID = 114
03.11 22:21:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
03.11 22:21:12 TIME: core/cache.get : 1.19 ms
03.11 22:21:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:21:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:21:12 TIME: core/user.loginPost : 0.16 ms
03.11 22:21:18 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
03.11 22:21:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:21:18 TIME: core/cache.update : 0.18 ms
03.11 22:21:19 WRITEDB: UPDATE Users SET name = E'uid114', deleted = E'false', email = E'', networktype = E'  ', password = E'uid114', isbanned = E'false', regdate = E'2016-11-03 17:12:46.234491+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478182566,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 114
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:21' OR rounddate = '2016-03-11 22:21' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.9138342' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 2ms
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:22' OR rounddate = '2016-03-11 22:22' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478200.97384529' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 1ms
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:23' OR rounddate = '2016-03-11 22:23' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.03385882' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 2ms
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:24' OR rounddate = '2016-03-11 22:24' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.09386955' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 1ms
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:25' OR rounddate = '2016-03-11 22:25' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.15388259' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 1ms
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:26' OR rounddate = '2016-03-11 22:26' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.21389425' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 2ms
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:27' OR rounddate = '2016-03-11 22:27' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.27390528' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 1ms
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:28' OR rounddate = '2016-03-11 22:28' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.33392089' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 2ms
03.11 22:21:53 TIMER: Clans cache...
03.11 22:21:53 TIMER: Clans cache: 0ms
03.11 22:21:53 TIMER: Check tournament...
03.11 22:21:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:29' OR rounddate = '2016-03-11 22:29' AND status <> 'finished'
03.11 22:21:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.39393426' AND avaliable = true AND finished <> true
03.11 22:21:53 TIMER: Check tournament: 1ms
03.11 22:30:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
03.11 22:30:42 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
03.11 22:30:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 10 }}, errorCode => ok, _type => core/server.query }
03.11 22:30:42 TIME: core/server.query : 0.83 ms
03.11 22:30:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 10, _type => vdl/cache.battle.infoRoom }
03.11 22:30:42 STATS: cache [battle], get [20 calls, 2 cache hits, 17 cache misses, 0 same version, 14 not found]
03.11 22:30:42 STATS: cache [battle], segments [23 calls, 5 hits, 17 misses]
03.11 22:30:42 STATS: cache [battle], database [2268 calls, 17 reads, 2 writes]
03.11 22:30:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:30:42 READDB: SELECT * FROM Battle WHERE ID = 10
03.11 22:30:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:30:42 TIME: vdl/cache.battle.infoRoom : 1.83 ms
03.11 22:30:42 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 10, _type => vdl/cache.battle.finishRoom }
03.11 22:30:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:30:42 TIME: vdl/cache.battle.finishRoom : 0.13 ms
03.11 22:30:42 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 22:30:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 22:30:42 TIME: core/user.sendTo : 0.11 ms
03.11 22:30:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
03.11 22:30:42 STATS: cache [user], get [17 calls, 3 cache hits, 14 cache misses, 0 same version, 0 not found]
03.11 22:30:42 STATS: cache [user], segments [81 calls, 52 hits, 28 misses]
03.11 22:30:42 STATS: cache [user], database [2268 calls, 14 reads, 31 writes]
03.11 22:30:42 STATS: cache [user], lock [17 calls, 17 attempts, 0 failures]
03.11 22:30:42 STATS: cache manager [1], get [34 calls, total 0.04 sec spent, avg 1.16 ms]
03.11 22:30:42 STATS: cache manager [1], update [47 calls, total 0 sec spent, avg 0.1 ms]
03.11 22:30:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:30:42 TIME: core/cache.update : 0.55 ms
03.11 22:30:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 22:30:42 STATS: cache [questdata], get [17 calls, 3 cache hits, 14 cache misses, 0 same version, 0 not found]
03.11 22:30:42 STATS: cache [questdata], segments [65 calls, 36 hits, 28 misses]
03.11 22:30:42 STATS: cache [questdata], database [2268 calls, 14 reads, 15 writes]
03.11 22:30:42 STATS: cache [questdata], lock [17 calls, 17 attempts, 0 failures]
03.11 22:30:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:30:42 TIME: core/cache.update : 0.64 ms
03.11 22:30:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 22:30:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:30:42 TIME: core/user.logoutPost : 0.13 ms
03.11 22:30:42 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:30:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
03.11 22:30:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:30:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:30:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:30:43 TIME: core/server.query : 1.47 ms
03.11 22:30:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:30:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:30:43 TIME: core/user.isOnlineID : 0.12 ms
03.11 22:30:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:30:43 READDB: SELECT * FROM Users WHERE ID = 107
03.11 22:30:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 22:30:43 TIME: core/cache.get : 1.88 ms
03.11 22:30:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:30:43 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 22:30:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 22:30:43 TIME: core/cache.get : 1.12 ms
03.11 22:30:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:30:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:30:43 TIME: core/user.loginPost : 0.13 ms
03.11 22:30:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 10
03.11 22:30:48 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:30:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:30:48 TIME: core/cache.update : 0.14 ms
03.11 22:30:49 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:30:52 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:30:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:30:52 TIME: vdl/cache.battle.findRandom : 0.1 ms
03.11 22:30:53 BLOCKREMOVE: user 116 removed
03.11 22:30:53 BLOCKREMOVE: questdata 116 removed
03.11 22:30:53 TIMER: Clans cache...
03.11 22:30:53 TIMER: Clans cache: 0ms
03.11 22:30:53 TIMER: Check tournament...
03.11 22:30:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:30' OR rounddate = '2016-03-11 22:30' AND status <> 'finished'
03.11 22:30:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.45394836' AND avaliable = true AND finished <> true
03.11 22:30:53 TIMER: Check tournament: 1ms
03.11 22:30:58 BLOCKREMOVE: battle 10 removed
03.11 22:31:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:31:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:31:09 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:31:09 TIME: core/server.query : 2.07 ms
03.11 22:31:09 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:31:09 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:31:09 TIME: core/user.isOnlineID : 0.07 ms
03.11 22:31:09 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:31:09 READDB: SELECT * FROM Users WHERE ID = 116
03.11 22:31:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:31:09 TIME: core/cache.get : 5.24 ms
03.11 22:31:09 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:31:09 READDB: SELECT * FROM UserQuests WHERE ID = 116
03.11 22:31:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:31:09 TIME: core/cache.get : 1.13 ms
03.11 22:31:09 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:31:09 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:31:09 TIME: core/user.loginPost : 0.12 ms
03.11 22:31:18 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:31:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:31:18 TIME: core/cache.update : 0.17 ms
03.11 22:31:19 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:31:45 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:31:45 DB: SELECT nextval('Battle_id_seq') AS id
03.11 22:31:45 READDB: SELECT ID FROM Battle WHERE ID = 12
03.11 22:31:45 READDB: INSERT INTO Battle (ID) VALUES (12)
03.11 22:31:45 STATS: cache [battle], get [22 calls, 3 cache hits, 18 cache misses, 0 same version, 14 not found]
03.11 22:31:45 STATS: cache [battle], segments [26 calls, 7 hits, 18 misses]
03.11 22:31:45 STATS: cache [battle], database [2331 calls, 18 reads, 3 writes]
03.11 22:31:45 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:31:45 READDB: SELECT * FROM Battle WHERE ID = 12
03.11 22:31:45 DB: SELECT name FROM users WHERE id=116
03.11 22:31:45 DB: SELECT name FROM users WHERE id=107
03.11 22:31:45 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 12, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:31:45 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 12, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:31:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:31:45 TIME: vdl/cache.battle.findRandom : 32.71 ms
03.11 22:31:51 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481801.50546718', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 12
03.11 22:31:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 12, _type => vdl/cache.battle.infoRoom }
03.11 22:31:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:31:53 TIME: vdl/cache.battle.infoRoom : 0.18 ms
03.11 22:31:53 TIMER: Clans cache...
03.11 22:31:53 TIMER: Clans cache: 0ms
03.11 22:31:53 TIMER: Check tournament...
03.11 22:31:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:31' OR rounddate = '2016-03-11 22:31' AND status <> 'finished'
03.11 22:31:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.51396169' AND avaliable = true AND finished <> true
03.11 22:31:53 TIMER: Check tournament: 1ms
03.11 22:32:04 BLOCKREMOVE: battle 12 removed
03.11 22:32:53 TIMER: Clans cache...
03.11 22:32:53 TIMER: Clans cache: 0ms
03.11 22:32:53 TIMER: Check tournament...
03.11 22:32:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:32' OR rounddate = '2016-03-11 22:32' AND status <> 'finished'
03.11 22:32:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.5739755' AND avaliable = true AND finished <> true
03.11 22:32:53 TIMER: Check tournament: 1ms
03.11 22:33:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 12, _type => vdl/cache.battle.infoRoom }
03.11 22:33:52 STATS: cache [battle], get [24 calls, 4 cache hits, 19 cache misses, 0 same version, 14 not found]
03.11 22:33:52 STATS: cache [battle], segments [30 calls, 10 hits, 19 misses]
03.11 22:33:52 STATS: cache [battle], database [2458 calls, 19 reads, 4 writes]
03.11 22:33:52 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:33:52 READDB: SELECT * FROM Battle WHERE ID = 12
03.11 22:33:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:33:52 TIME: vdl/cache.battle.infoRoom : 2.1 ms
03.11 22:33:53 TIMER: Clans cache...
03.11 22:33:53 TIMER: Clans cache: 0ms
03.11 22:33:53 TIMER: Check tournament...
03.11 22:33:53 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:33' OR rounddate = '2016-03-11 22:33' AND status <> 'finished'
03.11 22:33:53 DB: SELECT * FROM battle WHERE endtime >= '1478201.63398624' AND avaliable = true AND finished <> true
03.11 22:33:53 TIMER: Check tournament: 1ms
03.11 22:34:14 TIMER: Starting timer...
03.11 22:34:14 TIMER: Timer running...
03.11 22:34:14 DB: SELECT * FROM GameVars
03.11 22:34:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 22:34:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 22:34:14 DB: SELECT * FROM Shops WHERE ID = 1
03.11 22:34:14 TEMP: load ./tmp/quest_daily_ids
03.11 22:34:14 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
03.11 22:34:14 TEMP: save ./tmp/quest_daily_ids
03.11 22:34:14 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 22:34:14 QUEUE: vdl.0 (thread) response server.login
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM LocalizationStrings
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 17.47 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM GameVars
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 2.18 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 2.75 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 1.23 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 1.87 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 2.05 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/quest.getDaily
03.11 22:34:14 TIME: core/quest.getDaily : 0.04 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM UserAttributeTypes
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 0.96 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM UserVariableTypes
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 0.68 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 22:34:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 2 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM ItemGroups
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 0.63 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM Bundles ORDER BY ID
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 1.17 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 0.82 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/shop.getList
03.11 22:34:14 TIME: core/shop.getList : 0.05 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM EffectAttributeTypes
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 0.69 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM Effects
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 0.61 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 22:34:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 1.47 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 22:34:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 1.07 ms
03.11 22:34:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 22:34:14 DB: SELECT * FROM Badges
03.11 22:34:14 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:14 TIME: core/server.query : 0.78 ms
03.11 22:34:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:34:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:34:53 QUEUE: vdl.0 (thread) response core/server.query
03.11 22:34:53 TIME: core/server.query : 1.88 ms
03.11 22:34:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:34:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID
03.11 22:34:53 TIME: core/user.isOnlineID : 0.09 ms
03.11 22:34:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:34:53 READDB: SELECT * FROM Users WHERE ID = 107
03.11 22:34:53 QUEUE: vdl.0 (thread) response core/cache.get
03.11 22:34:53 TIME: core/cache.get : 2.83 ms
03.11 22:34:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:34:53 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 22:34:53 QUEUE: vdl.0 (thread) response core/cache.get
03.11 22:34:53 TIME: core/cache.get : 0.98 ms
03.11 22:34:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:34:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:34:53 TIME: core/user.loginPost : 0.12 ms
03.11 22:34:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:34:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:34:59 TIME: core/cache.update : 0.16 ms
03.11 22:35:00 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:35:09 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:35:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:35:09 TIME: vdl/cache.battle.findRandom : 0.16 ms
03.11 22:35:14 TIMER: Clans cache...
03.11 22:35:14 TIMER: Clans cache: 0ms
03.11 22:35:14 TIMER: Check tournament...
03.11 22:35:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:35' OR rounddate = '2016-03-11 22:35' AND status <> 'finished'
03.11 22:35:14 DB: SELECT * FROM battle WHERE endtime >= '1478201.71440121' AND avaliable = true AND finished <> true
03.11 22:35:14 TIMER: Check tournament: 4ms
03.11 22:35:14 TIMER: Clans cache...
03.11 22:35:14 TIMER: Clans cache: 0ms
03.11 22:35:14 TIMER: Check tournament...
03.11 22:35:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:36' OR rounddate = '2016-03-11 22:36' AND status <> 'finished'
03.11 22:35:14 DB: SELECT * FROM battle WHERE endtime >= '1478201.77441528' AND avaliable = true AND finished <> true
03.11 22:35:14 TIMER: Check tournament: 2ms
03.11 22:35:14 TIMER: Clans cache...
03.11 22:35:14 TIMER: Clans cache: 0ms
03.11 22:35:14 TIMER: Check tournament...
03.11 22:35:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:37' OR rounddate = '2016-03-11 22:37' AND status <> 'finished'
03.11 22:35:14 DB: SELECT * FROM battle WHERE endtime >= '1478201.83442788' AND avaliable = true AND finished <> true
03.11 22:35:14 TIMER: Check tournament: 1ms
03.11 22:38:00 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:38:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:38:00 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:38:00 TIME: core/server.query : 3.14 ms
03.11 22:38:00 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:38:00 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:38:00 TIME: core/user.isOnlineID : 0.12 ms
03.11 22:38:00 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:38:00 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 22:38:00 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
03.11 22:38:00 STATS: cache [user], database [227 calls, 1 reads, 1 writes]
03.11 22:38:00 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
03.11 22:38:00 READDB: SELECT * FROM Users WHERE ID = 116
03.11 22:38:00 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 1.81 ms]
03.11 22:38:00 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.05 ms]
03.11 22:38:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:38:00 TIME: core/cache.get : 2.25 ms
03.11 22:38:00 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:38:00 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 22:38:00 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
03.11 22:38:00 STATS: cache [questdata], database [227 calls, 1 reads, 0 writes]
03.11 22:38:00 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
03.11 22:38:00 READDB: SELECT * FROM UserQuests WHERE ID = 116
03.11 22:38:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:38:00 TIME: core/cache.get : 4.87 ms
03.11 22:38:00 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:38:00 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:38:00 TIME: core/user.loginPost : 0.13 ms
03.11 22:38:09 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:38:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:38:09 TIME: core/cache.update : 0.17 ms
03.11 22:38:10 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:38:14 TIMER: Clans cache...
03.11 22:38:14 TIMER: Clans cache: 0ms
03.11 22:38:14 TIMER: Check tournament...
03.11 22:38:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:38' OR rounddate = '2016-03-11 22:38' AND status <> 'finished'
03.11 22:38:14 DB: SELECT * FROM battle WHERE endtime >= '1478201.89444273' AND avaliable = true AND finished <> true
03.11 22:38:14 TIMER: Check tournament: 3ms
03.11 22:38:15 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:38:15 DB: SELECT nextval('Battle_id_seq') AS id
03.11 22:38:15 READDB: SELECT ID FROM Battle WHERE ID = 13
03.11 22:38:15 READDB: INSERT INTO Battle (ID) VALUES (13)
03.11 22:38:15 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 22:38:15 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
03.11 22:38:15 STATS: cache [battle], database [242 calls, 0 reads, 0 writes]
03.11 22:38:15 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:38:15 READDB: SELECT * FROM Battle WHERE ID = 13
03.11 22:38:15 DB: SELECT name FROM users WHERE id=116
03.11 22:38:15 DB: SELECT name FROM users WHERE id=107
03.11 22:38:15 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 13, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:38:15 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 13, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:38:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:38:15 TIME: vdl/cache.battle.findRandom : 41.2 ms
03.11 22:38:21 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481801.89580234', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 13
03.11 22:38:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
03.11 22:38:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:38:30 TIME: vdl/cache.battle.infoRoom : 0.19 ms
03.11 22:38:40 BLOCKREMOVE: battle 13 removed
03.11 22:39:14 TIMER: Clans cache...
03.11 22:39:14 TIMER: Clans cache: 0ms
03.11 22:39:14 TIMER: Check tournament...
03.11 22:39:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:39' OR rounddate = '2016-03-11 22:39' AND status <> 'finished'
03.11 22:39:14 DB: SELECT * FROM battle WHERE endtime >= '1478201.95445529' AND avaliable = true AND finished <> true
03.11 22:39:14 TIMER: Check tournament: 2ms
03.11 22:39:14 TIMER: Clans cache...
03.11 22:39:14 TIMER: Clans cache: 0ms
03.11 22:39:14 TIMER: Check tournament...
03.11 22:39:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:40' OR rounddate = '2016-03-11 22:40' AND status <> 'finished'
03.11 22:39:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.01447007' AND avaliable = true AND finished <> true
03.11 22:39:14 TIMER: Check tournament: 3ms
03.11 22:40:20 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:40:20 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:40:20 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 13 }}, errorCode => ok, _type => core/server.query }
03.11 22:40:20 TIME: core/server.query : 1.08 ms
03.11 22:40:20 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
03.11 22:40:20 STATS: cache [battle], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 22:40:20 STATS: cache [battle], segments [5 calls, 3 hits, 1 misses]
03.11 22:40:20 STATS: cache [battle], database [366 calls, 1 reads, 1 writes]
03.11 22:40:20 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:40:20 READDB: SELECT * FROM Battle WHERE ID = 13
03.11 22:40:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:40:20 TIME: vdl/cache.battle.infoRoom : 1.4 ms
03.11 22:40:20 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 13, _type => vdl/cache.battle.finishRoom }
03.11 22:40:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:40:20 TIME: vdl/cache.battle.finishRoom : 0.15 ms
03.11 22:40:20 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:40:20 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 22:40:20 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
03.11 22:40:20 STATS: cache [user], database [366 calls, 2 reads, 2 writes]
03.11 22:40:20 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
03.11 22:40:20 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.52 ms]
03.11 22:40:20 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.14 ms]
03.11 22:40:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:40:20 TIME: core/cache.update : 0.55 ms
03.11 22:40:20 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:40:20 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 22:40:20 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
03.11 22:40:20 STATS: cache [questdata], database [366 calls, 2 reads, 0 writes]
03.11 22:40:20 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
03.11 22:40:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:40:20 TIME: core/cache.update : 0.4 ms
03.11 22:40:20 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:40:20 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:40:20 TIME: core/user.logoutPost : 0.17 ms
03.11 22:40:20 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:40:20 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 22:40:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
03.11 22:40:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:40:22 TIME: vdl/cache.battle.infoRoom : 0.17 ms
03.11 22:40:25 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 13
03.11 22:40:27 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:40:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:40:27 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:40:27 TIME: core/server.query : 3.09 ms
03.11 22:40:27 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:40:27 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:40:27 TIME: core/user.isOnlineID : 0.13 ms
03.11 22:40:27 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:40:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 107 } }
03.11 22:40:27 TIME: core/cache.get : 0.45 ms
03.11 22:40:27 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:40:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 107 } }
03.11 22:40:27 TIME: core/cache.get : 0.17 ms
03.11 22:40:27 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:40:27 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:40:27 TIME: core/user.loginPost : 0.15 ms
03.11 22:40:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:40:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 22:40:34 TIME: core/cache.update : 0.22 ms
03.11 22:40:34 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:40:35 BLOCKREMOVE: battle 13 removed
03.11 22:41:14 TIMER: Clans cache...
03.11 22:41:14 TIMER: Clans cache: 0ms
03.11 22:41:14 TIMER: Check tournament...
03.11 22:41:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:41' OR rounddate = '2016-03-11 22:41' AND status <> 'finished'
03.11 22:41:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.07448258' AND avaliable = true AND finished <> true
03.11 22:41:14 TIMER: Check tournament: 2ms
03.11 22:41:23 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
03.11 22:41:23 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
03.11 22:41:23 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }}, errorCode => ok, _type => core/server.query }
03.11 22:41:23 TIME: core/server.query : 1.27 ms
03.11 22:41:23 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
03.11 22:41:23 STATS: cache [battle], get [6 calls, 3 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 22:41:23 STATS: cache [battle], segments [9 calls, 6 hits, 2 misses]
03.11 22:41:23 STATS: cache [battle], database [429 calls, 2 reads, 2 writes]
03.11 22:41:23 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:41:23 READDB: SELECT * FROM Battle WHERE ID = 13
03.11 22:41:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:41:23 TIME: vdl/cache.battle.infoRoom : 1.46 ms
03.11 22:41:23 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 13, _type => vdl/cache.battle.finishRoom }
03.11 22:41:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:41:23 TIME: vdl/cache.battle.finishRoom : 0.11 ms
03.11 22:41:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
03.11 22:41:23 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 22:41:23 STATS: cache [user], segments [12 calls, 7 hits, 4 misses]
03.11 22:41:23 STATS: cache [user], database [429 calls, 2 reads, 4 writes]
03.11 22:41:23 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
03.11 22:41:23 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1.7 ms]
03.11 22:41:23 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.16 ms]
03.11 22:41:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:41:23 TIME: core/cache.update : 0.34 ms
03.11 22:41:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 22:41:23 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 22:41:23 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
03.11 22:41:23 STATS: cache [questdata], database [429 calls, 2 reads, 1 writes]
03.11 22:41:23 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
03.11 22:41:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:41:23 TIME: core/cache.update : 0.28 ms
03.11 22:41:23 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 22:41:23 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:41:23 TIME: core/user.logoutPost : 0.08 ms
03.11 22:41:23 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:41:23 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
03.11 22:41:28 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 13
03.11 22:41:33 BLOCKREMOVE: user 116 removed
03.11 22:41:33 BLOCKREMOVE: questdata 116 removed
03.11 22:41:38 BLOCKREMOVE: battle 13 removed
03.11 22:41:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:41:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:41:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:41:51 TIME: core/server.query : 1.17 ms
03.11 22:41:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:41:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:41:51 TIME: core/user.isOnlineID : 0.12 ms
03.11 22:41:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:41:51 READDB: SELECT * FROM Users WHERE ID = 116
03.11 22:41:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:41:51 TIME: core/cache.get : 1.82 ms
03.11 22:41:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:41:51 READDB: SELECT * FROM UserQuests WHERE ID = 116
03.11 22:41:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:41:51 TIME: core/cache.get : 0.95 ms
03.11 22:41:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:41:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:41:51 TIME: core/user.loginPost : 0.13 ms
03.11 22:41:57 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:41:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:41:57 TIME: vdl/cache.battle.findRandom : 0.15 ms
03.11 22:41:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:41:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:41:59 TIME: core/cache.update : 0.26 ms
03.11 22:41:59 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:42:05 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:42:05 DB: SELECT nextval('Battle_id_seq') AS id
03.11 22:42:05 READDB: SELECT ID FROM Battle WHERE ID = 14
03.11 22:42:05 READDB: INSERT INTO Battle (ID) VALUES (14)
03.11 22:42:05 READDB: SELECT * FROM Battle WHERE ID = 14
03.11 22:42:05 DB: SELECT name FROM users WHERE id=116
03.11 22:42:05 DB: SELECT name FROM users WHERE id=107
03.11 22:42:05 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 14, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:42:05 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 14, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:42:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:42:05 TIME: vdl/cache.battle.findRandom : 33.29 ms
03.11 22:42:10 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481802.12553673', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 14
03.11 22:42:14 TIMER: Clans cache...
03.11 22:42:14 TIMER: Clans cache: 0ms
03.11 22:42:14 TIMER: Check tournament...
03.11 22:42:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:42' OR rounddate = '2016-03-11 22:42' AND status <> 'finished'
03.11 22:42:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.13449721' AND avaliable = true AND finished <> true
03.11 22:42:14 TIMER: Check tournament: 3ms
03.11 22:42:20 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
03.11 22:42:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:42:20 TIME: vdl/cache.battle.infoRoom : 0.23 ms
03.11 22:42:30 BLOCKREMOVE: battle 14 removed
03.11 22:43:14 TIMER: Clans cache...
03.11 22:43:14 TIMER: Clans cache: 0ms
03.11 22:43:14 TIMER: Check tournament...
03.11 22:43:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:43' OR rounddate = '2016-03-11 22:43' AND status <> 'finished'
03.11 22:43:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.19451224' AND avaliable = true AND finished <> true
03.11 22:43:14 TIMER: Check tournament: 1ms
03.11 22:43:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:43:44 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:43:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 14 }}, errorCode => ok, _type => core/server.query }
03.11 22:43:44 TIME: core/server.query : 1.17 ms
03.11 22:43:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
03.11 22:43:44 STATS: cache [battle], get [10 calls, 5 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 22:43:44 STATS: cache [battle], segments [16 calls, 11 hits, 4 misses]
03.11 22:43:44 STATS: cache [battle], database [570 calls, 4 reads, 4 writes]
03.11 22:43:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:43:44 READDB: SELECT * FROM Battle WHERE ID = 14
03.11 22:43:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:43:44 TIME: vdl/cache.battle.infoRoom : 1.19 ms
03.11 22:43:44 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 14, _type => vdl/cache.battle.finishRoom }
03.11 22:43:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:43:44 TIME: vdl/cache.battle.finishRoom : 0.14 ms
03.11 22:43:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:43:44 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 22:43:44 STATS: cache [user], segments [17 calls, 10 hits, 6 misses]
03.11 22:43:44 STATS: cache [user], database [570 calls, 3 reads, 6 writes]
03.11 22:43:44 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
03.11 22:43:44 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.54 ms]
03.11 22:43:44 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.18 ms]
03.11 22:43:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 22:43:44 TIME: core/cache.update : 0.59 ms
03.11 22:43:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:43:44 STATS: cache [questdata], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 22:43:44 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
03.11 22:43:44 STATS: cache [questdata], database [570 calls, 3 reads, 2 writes]
03.11 22:43:44 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
03.11 22:43:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:43:44 TIME: core/cache.update : 0.41 ms
03.11 22:43:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:43:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:43:44 TIME: core/user.logoutPost : 0.09 ms
03.11 22:43:44 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:43:44 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 22:43:49 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 14
03.11 22:43:54 BLOCKREMOVE: user 107 removed
03.11 22:43:54 BLOCKREMOVE: questdata 107 removed
03.11 22:43:59 BLOCKREMOVE: battle 14 removed
03.11 22:44:12 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
03.11 22:44:12 READDB: SELECT * FROM Battle WHERE ID = 14
03.11 22:44:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:44:12 TIME: vdl/cache.battle.infoRoom : 1.24 ms
03.11 22:44:14 TIMER: Clans cache...
03.11 22:44:14 TIMER: Clans cache: 0ms
03.11 22:44:14 TIMER: Check tournament...
03.11 22:44:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:44' OR rounddate = '2016-03-11 22:44' AND status <> 'finished'
03.11 22:44:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.25452624' AND avaliable = true AND finished <> true
03.11 22:44:14 TIMER: Check tournament: 1ms
03.11 22:44:22 BLOCKREMOVE: battle 14 removed
03.11 22:45:14 TIMER: Clans cache...
03.11 22:45:14 TIMER: Clans cache: 0ms
03.11 22:45:14 TIMER: Check tournament...
03.11 22:45:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:45' OR rounddate = '2016-03-11 22:45' AND status <> 'finished'
03.11 22:45:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.31453614' AND avaliable = true AND finished <> true
03.11 22:45:14 TIMER: Check tournament: 1ms
03.11 22:45:14 TIMER: Clans cache...
03.11 22:45:14 TIMER: Clans cache: 0ms
03.11 22:45:14 TIMER: Check tournament...
03.11 22:45:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:46' OR rounddate = '2016-03-11 22:46' AND status <> 'finished'
03.11 22:45:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.37454647' AND avaliable = true AND finished <> true
03.11 22:45:14 TIMER: Check tournament: 1ms
03.11 22:45:14 TIMER: Clans cache...
03.11 22:45:14 TIMER: Clans cache: 0ms
03.11 22:45:14 TIMER: Check tournament...
03.11 22:45:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:47' OR rounddate = '2016-03-11 22:47' AND status <> 'finished'
03.11 22:45:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.43455889' AND avaliable = true AND finished <> true
03.11 22:45:14 TIMER: Check tournament: 1ms
03.11 22:47:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
03.11 22:47:22 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
03.11 22:47:22 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }}, errorCode => ok, _type => core/server.query }
03.11 22:47:22 TIME: core/server.query : 0.75 ms
03.11 22:47:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
03.11 22:47:22 STATS: cache [battle], get [13 calls, 6 cache hits, 6 cache misses, 0 same version, 0 not found]
03.11 22:47:22 STATS: cache [battle], segments [20 calls, 13 hits, 6 misses]
03.11 22:47:22 STATS: cache [battle], database [788 calls, 6 reads, 5 writes]
03.11 22:47:22 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:47:22 READDB: SELECT * FROM Battle WHERE ID = 14
03.11 22:47:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:47:22 TIME: vdl/cache.battle.infoRoom : 0.84 ms
03.11 22:47:22 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 14, _type => vdl/cache.battle.finishRoom }
03.11 22:47:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:47:22 TIME: vdl/cache.battle.finishRoom : 0.09 ms
03.11 22:47:22 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 22:47:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 22:47:22 TIME: core/user.sendTo : 0.11 ms
03.11 22:47:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
03.11 22:47:22 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 22:47:22 STATS: cache [user], segments [19 calls, 12 hits, 6 misses]
03.11 22:47:22 STATS: cache [user], database [788 calls, 3 reads, 7 writes]
03.11 22:47:22 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
03.11 22:47:22 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.54 ms]
03.11 22:47:22 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.19 ms]
03.11 22:47:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:47:22 TIME: core/cache.update : 0.33 ms
03.11 22:47:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 22:47:22 STATS: cache [questdata], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
03.11 22:47:22 STATS: cache [questdata], segments [15 calls, 8 hits, 6 misses]
03.11 22:47:22 STATS: cache [questdata], database [788 calls, 3 reads, 3 writes]
03.11 22:47:22 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
03.11 22:47:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:47:22 TIME: core/cache.update : 0.24 ms
03.11 22:47:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 22:47:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:47:22 TIME: core/user.logoutPost : 0.07 ms
03.11 22:47:22 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:47:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
03.11 22:47:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 14
03.11 22:47:32 BLOCKREMOVE: user 116 removed
03.11 22:47:32 BLOCKREMOVE: questdata 116 removed
03.11 22:47:37 BLOCKREMOVE: battle 14 removed
03.11 22:47:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:47:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:47:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:47:43 TIME: core/server.query : 1.51 ms
03.11 22:47:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:47:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:47:43 TIME: core/user.isOnlineID : 0.1 ms
03.11 22:47:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:47:43 READDB: SELECT * FROM Users WHERE ID = 107
03.11 22:47:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 22:47:43 TIME: core/cache.get : 1.82 ms
03.11 22:47:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:47:43 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 22:47:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 22:47:43 TIME: core/cache.get : 1.07 ms
03.11 22:47:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:47:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:47:43 TIME: core/user.loginPost : 0.16 ms
03.11 22:47:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:47:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:47:49 TIME: core/cache.update : 0.12 ms
03.11 22:47:49 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:47:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:47:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:47:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:47:52 TIME: core/server.query : 1.77 ms
03.11 22:47:52 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:47:52 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:47:52 TIME: core/user.isOnlineID : 0.11 ms
03.11 22:47:52 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:47:52 READDB: SELECT * FROM Users WHERE ID = 116
03.11 22:47:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:47:52 TIME: core/cache.get : 1.78 ms
03.11 22:47:52 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:47:52 READDB: SELECT * FROM UserQuests WHERE ID = 116
03.11 22:47:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:47:52 TIME: core/cache.get : 1.17 ms
03.11 22:47:52 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:47:52 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:47:52 TIME: core/user.loginPost : 0.12 ms
03.11 22:47:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:47:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:47:59 TIME: core/cache.update : 0.17 ms
03.11 22:47:59 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:48:14 TIMER: Clans cache...
03.11 22:48:14 TIMER: Clans cache: 0ms
03.11 22:48:14 TIMER: Check tournament...
03.11 22:48:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:48' OR rounddate = '2016-03-11 22:48' AND status <> 'finished'
03.11 22:48:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.49457194' AND avaliable = true AND finished <> true
03.11 22:48:14 TIMER: Check tournament: 1ms
03.11 22:48:38 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:48:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:48:38 TIME: vdl/cache.battle.findRandom : 0.07 ms
03.11 22:48:48 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:48:48 DB: SELECT nextval('Battle_id_seq') AS id
03.11 22:48:48 READDB: SELECT ID FROM Battle WHERE ID = 15
03.11 22:48:48 READDB: INSERT INTO Battle (ID) VALUES (15)
03.11 22:48:48 STATS: cache [battle], get [15 calls, 7 cache hits, 7 cache misses, 0 same version, 0 not found]
03.11 22:48:48 STATS: cache [battle], segments [23 calls, 15 hits, 7 misses]
03.11 22:48:48 STATS: cache [battle], database [874 calls, 7 reads, 6 writes]
03.11 22:48:48 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:48:48 READDB: SELECT * FROM Battle WHERE ID = 15
03.11 22:48:48 DB: SELECT name FROM users WHERE id=107
03.11 22:48:48 DB: SELECT name FROM users WHERE id=116
03.11 22:48:48 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 15, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:48:48 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 15, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:48:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:48:48 TIME: vdl/cache.battle.findRandom : 28.07 ms
03.11 22:48:53 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481802.52815435', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 15
03.11 22:48:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:48:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:48:56 TIME: vdl/cache.battle.infoRoom : 0.15 ms
03.11 22:49:07 BLOCKREMOVE: battle 15 removed
03.11 22:49:14 TIMER: Clans cache...
03.11 22:49:14 TIMER: Clans cache: 0ms
03.11 22:49:14 TIMER: Check tournament...
03.11 22:49:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:49' OR rounddate = '2016-03-11 22:49' AND status <> 'finished'
03.11 22:49:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.55458256' AND avaliable = true AND finished <> true
03.11 22:49:14 TIMER: Check tournament: 1ms
03.11 22:49:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:49:15 READDB: SELECT * FROM Battle WHERE ID = 15
03.11 22:49:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:49:15 TIME: vdl/cache.battle.infoRoom : 1.1 ms
03.11 22:49:26 BLOCKREMOVE: battle 15 removed
03.11 22:50:14 TIMER: Clans cache...
03.11 22:50:14 TIMER: Clans cache: 0ms
03.11 22:50:14 TIMER: Check tournament...
03.11 22:50:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:50' OR rounddate = '2016-03-11 22:50' AND status <> 'finished'
03.11 22:50:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.6145938' AND avaliable = true AND finished <> true
03.11 22:50:14 TIMER: Check tournament: 1ms
03.11 22:50:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:50:54 STATS: cache [battle], get [18 calls, 8 cache hits, 9 cache misses, 0 same version, 0 not found]
03.11 22:50:54 STATS: cache [battle], segments [28 calls, 18 hits, 9 misses]
03.11 22:50:54 STATS: cache [battle], database [1000 calls, 9 reads, 7 writes]
03.11 22:50:54 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:50:54 READDB: SELECT * FROM Battle WHERE ID = 15
03.11 22:50:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:50:54 TIME: vdl/cache.battle.infoRoom : 1.65 ms
03.11 22:51:05 BLOCKREMOVE: battle 15 removed
03.11 22:51:14 TIMER: Clans cache...
03.11 22:51:14 TIMER: Clans cache: 0ms
03.11 22:51:14 TIMER: Check tournament...
03.11 22:51:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:51' OR rounddate = '2016-03-11 22:51' AND status <> 'finished'
03.11 22:51:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.67460458' AND avaliable = true AND finished <> true
03.11 22:51:14 TIMER: Check tournament: 1ms
03.11 22:51:14 TIMER: Clans cache...
03.11 22:51:14 TIMER: Clans cache: 0ms
03.11 22:51:14 TIMER: Check tournament...
03.11 22:51:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:52' OR rounddate = '2016-03-11 22:52' AND status <> 'finished'
03.11 22:51:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.734617' AND avaliable = true AND finished <> true
03.11 22:51:14 TIMER: Check tournament: 1ms
03.11 22:51:14 TIMER: Clans cache...
03.11 22:51:14 TIMER: Clans cache: 0ms
03.11 22:51:14 TIMER: Check tournament...
03.11 22:51:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:53' OR rounddate = '2016-03-11 22:53' AND status <> 'finished'
03.11 22:51:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.79462723' AND avaliable = true AND finished <> true
03.11 22:51:14 TIMER: Check tournament: 1ms
03.11 22:51:14 TIMER: Clans cache...
03.11 22:51:14 TIMER: Clans cache: 0ms
03.11 22:51:14 TIMER: Check tournament...
03.11 22:51:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:54' OR rounddate = '2016-03-11 22:54' AND status <> 'finished'
03.11 22:51:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.85463906' AND avaliable = true AND finished <> true
03.11 22:51:14 TIMER: Check tournament: 1ms
03.11 22:55:12 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:55:12 STATS: cache [battle], get [19 calls, 8 cache hits, 10 cache misses, 0 same version, 0 not found]
03.11 22:55:12 STATS: cache [battle], segments [29 calls, 18 hits, 10 misses]
03.11 22:55:12 STATS: cache [battle], database [1258 calls, 10 reads, 7 writes]
03.11 22:55:12 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:55:12 READDB: SELECT * FROM Battle WHERE ID = 15
03.11 22:55:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:55:12 TIME: vdl/cache.battle.infoRoom : 1.69 ms
03.11 22:55:14 TIMER: Clans cache...
03.11 22:55:14 TIMER: Clans cache: 0ms
03.11 22:55:14 TIMER: Check tournament...
03.11 22:55:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:55' OR rounddate = '2016-03-11 22:55' AND status <> 'finished'
03.11 22:55:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.91464926' AND avaliable = true AND finished <> true
03.11 22:55:14 TIMER: Check tournament: 1ms
03.11 22:55:23 BLOCKREMOVE: battle 15 removed
03.11 22:55:28 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:55:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:55:28 TIME: vdl/cache.battle.findRandom : 0.06 ms
03.11 22:56:03 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:56:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:56:03 TIME: vdl/cache.battle.findRandom : 1.54 ms
03.11 22:56:14 TIMER: Clans cache...
03.11 22:56:14 TIMER: Clans cache: 0ms
03.11 22:56:14 TIMER: Check tournament...
03.11 22:56:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:56' OR rounddate = '2016-03-11 22:56' AND status <> 'finished'
03.11 22:56:14 DB: SELECT * FROM battle WHERE endtime >= '1478202.97466104' AND avaliable = true AND finished <> true
03.11 22:56:14 TIMER: Check tournament: 1ms
03.11 22:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:56:42 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:56:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }}, errorCode => ok, _type => core/server.query }
03.11 22:56:42 TIME: core/server.query : 0.52 ms
03.11 22:56:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:56:42 STATS: cache [battle], get [20 calls, 8 cache hits, 11 cache misses, 0 same version, 0 not found]
03.11 22:56:42 STATS: cache [battle], segments [30 calls, 18 hits, 11 misses]
03.11 22:56:42 STATS: cache [battle], database [1347 calls, 11 reads, 7 writes]
03.11 22:56:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:56:42 READDB: SELECT * FROM Battle WHERE ID = 15
03.11 22:56:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:56:42 TIME: vdl/cache.battle.infoRoom : 0.55 ms
03.11 22:56:42 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
03.11 22:56:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:56:42 TIME: vdl/cache.battle.finishRoom : 0.05 ms
03.11 22:56:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:56:42 STATS: cache [user], get [6 calls, 1 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 22:56:42 STATS: cache [user], segments [27 calls, 16 hits, 10 misses]
03.11 22:56:42 STATS: cache [user], database [1347 calls, 5 reads, 10 writes]
03.11 22:56:42 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
03.11 22:56:42 STATS: cache manager [1], get [12 calls, total 0.02 sec spent, avg 1.44 ms]
03.11 22:56:42 STATS: cache manager [1], update [15 calls, total 0 sec spent, avg 0.17 ms]
03.11 22:56:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:56:42 TIME: core/cache.update : 0.24 ms
03.11 22:56:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:56:42 STATS: cache [questdata], get [6 calls, 1 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 22:56:42 STATS: cache [questdata], segments [21 calls, 10 hits, 10 misses]
03.11 22:56:42 STATS: cache [questdata], database [1347 calls, 5 reads, 4 writes]
03.11 22:56:42 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
03.11 22:56:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:56:42 TIME: core/cache.update : 0.18 ms
03.11 22:56:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:56:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:56:42 TIME: core/user.logoutPost : 0.05 ms
03.11 22:56:42 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:56:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 22:56:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481800', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 15
03.11 22:56:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:56:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:56:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:56:47 TIME: core/server.query : 1.17 ms
03.11 22:56:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:56:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:56:47 TIME: core/user.isOnlineID : 0.12 ms
03.11 22:56:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:56:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 2, id => 107 } }
03.11 22:56:47 TIME: core/cache.get : 0.37 ms
03.11 22:56:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:56:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 107 } }
03.11 22:56:47 TIME: core/cache.get : 0.14 ms
03.11 22:56:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:56:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:56:47 TIME: core/user.loginPost : 0.13 ms
03.11 22:56:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:56:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
03.11 22:56:54 TIME: core/cache.update : 0.14 ms
03.11 22:56:55 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:56:55 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:56:55 DB: SELECT nextval('Battle_id_seq') AS id
03.11 22:56:55 READDB: SELECT ID FROM Battle WHERE ID = 16
03.11 22:56:55 READDB: INSERT INTO Battle (ID) VALUES (16)
03.11 22:56:55 READDB: SELECT * FROM Battle WHERE ID = 16
03.11 22:56:55 DB: SELECT name FROM users WHERE id=116
03.11 22:56:55 DB: SELECT name FROM users WHERE id=107
03.11 22:56:55 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 16, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:56:55 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 16, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:56:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:56:55 TIME: vdl/cache.battle.findRandom : 21.22 ms
03.11 22:56:57 BLOCKREMOVE: battle 15 removed
03.11 22:57:01 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481803.01544918', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 16
03.11 22:57:11 BLOCKREMOVE: battle 16 removed
03.11 22:57:14 TIMER: Clans cache...
03.11 22:57:14 TIMER: Clans cache: 0ms
03.11 22:57:14 TIMER: Check tournament...
03.11 22:57:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:57' OR rounddate = '2016-03-11 22:57' AND status <> 'finished'
03.11 22:57:14 DB: SELECT * FROM battle WHERE endtime >= '1478203.03467506' AND avaliable = true AND finished <> true
03.11 22:57:14 TIMER: Check tournament: 1ms
03.11 22:57:24 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
03.11 22:57:24 READDB: SELECT * FROM Battle WHERE ID = 16
03.11 22:57:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:57:24 TIME: vdl/cache.battle.infoRoom : 0.63 ms
03.11 22:57:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
03.11 22:57:27 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
03.11 22:57:27 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 10 }, { id => 12 }, { id => 13 }, { id => 14 }, { id => 16 }}, errorCode => ok, _type => core/server.query }
03.11 22:57:27 TIME: core/server.query : 0.99 ms
03.11 22:57:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
03.11 22:57:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:57:27 TIME: vdl/cache.battle.infoRoom : 0.14 ms
03.11 22:57:27 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 16, _type => vdl/cache.battle.finishRoom }
03.11 22:57:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:57:27 TIME: vdl/cache.battle.finishRoom : 0.17 ms
03.11 22:57:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
03.11 22:57:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:57:27 TIME: core/cache.update : 0.19 ms
03.11 22:57:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
03.11 22:57:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:57:27 TIME: core/cache.update : 0.18 ms
03.11 22:57:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
03.11 22:57:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:57:27 TIME: core/user.logoutPost : 0.09 ms
03.11 22:57:28 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:57:28 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
03.11 22:57:30 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 16
03.11 22:57:38 BLOCKREMOVE: user 116 removed
03.11 22:57:38 BLOCKREMOVE: questdata 116 removed
03.11 22:57:40 BLOCKREMOVE: battle 16 removed
03.11 22:57:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 22:57:42 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 22:57:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 9 }, { id => 11 }, { id => 12 }, { id => 15 }}, errorCode => ok, _type => core/server.query }
03.11 22:57:42 TIME: core/server.query : 0.61 ms
03.11 22:57:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
03.11 22:57:42 STATS: cache [battle], get [26 calls, 11 cache hits, 14 cache misses, 0 same version, 0 not found]
03.11 22:57:42 STATS: cache [battle], segments [40 calls, 25 hits, 14 misses]
03.11 22:57:42 STATS: cache [battle], database [1407 calls, 14 reads, 10 writes]
03.11 22:57:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:57:42 READDB: SELECT * FROM Battle WHERE ID = 15
03.11 22:57:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 22:57:42 TIME: vdl/cache.battle.infoRoom : 0.85 ms
03.11 22:57:42 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
03.11 22:57:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
03.11 22:57:42 TIME: vdl/cache.battle.finishRoom : 0.07 ms
03.11 22:57:42 NET: vdl.0 (thread) request core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 22:57:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 22:57:42 TIME: core/user.sendTo : 0.05 ms
03.11 22:57:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 22:57:42 STATS: cache [user], get [7 calls, 2 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 22:57:42 STATS: cache [user], segments [34 calls, 23 hits, 10 misses]
03.11 22:57:42 STATS: cache [user], database [1407 calls, 5 reads, 13 writes]
03.11 22:57:42 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
03.11 22:57:42 STATS: cache manager [1], get [14 calls, total 0.02 sec spent, avg 1.24 ms]
03.11 22:57:42 STATS: cache manager [1], update [20 calls, total 0 sec spent, avg 0.15 ms]
03.11 22:57:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
03.11 22:57:42 TIME: core/cache.update : 0.24 ms
03.11 22:57:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 22:57:42 STATS: cache [questdata], get [7 calls, 2 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 22:57:42 STATS: cache [questdata], segments [27 calls, 16 hits, 10 misses]
03.11 22:57:42 STATS: cache [questdata], database [1407 calls, 5 reads, 6 writes]
03.11 22:57:42 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
03.11 22:57:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 22:57:42 TIME: core/cache.update : 0.18 ms
03.11 22:57:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 22:57:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 22:57:42 TIME: core/user.logoutPost : 0.06 ms
03.11 22:57:42 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:57:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 22:57:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481800', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 15
03.11 22:57:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 22:57:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 22:57:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 22:57:47 TIME: core/server.query : 0.88 ms
03.11 22:57:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 22:57:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:57:47 TIME: core/user.isOnlineID : 0.06 ms
03.11 22:57:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 22:57:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 4, id => 107 } }
03.11 22:57:47 TIME: core/cache.get : 0.19 ms
03.11 22:57:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 22:57:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 2, id => 107 } }
03.11 22:57:47 TIME: core/cache.get : 0.09 ms
03.11 22:57:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 22:57:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:57:47 TIME: core/user.loginPost : 0.07 ms
03.11 22:57:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
03.11 22:57:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
03.11 22:57:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
03.11 22:57:52 TIME: core/server.query : 1.5 ms
03.11 22:57:52 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
03.11 22:57:52 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 22:57:52 TIME: core/user.isOnlineID : 0.13 ms
03.11 22:57:52 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
03.11 22:57:52 READDB: SELECT * FROM Users WHERE ID = 116
03.11 22:57:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 116 } }
03.11 22:57:52 TIME: core/cache.get : 1.43 ms
03.11 22:57:52 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
03.11 22:57:52 READDB: SELECT * FROM UserQuests WHERE ID = 116
03.11 22:57:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
03.11 22:57:52 TIME: core/cache.get : 1.02 ms
03.11 22:57:52 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 22:57:52 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 22:57:52 TIME: core/user.loginPost : 0.09 ms
03.11 22:57:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 22:57:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
03.11 22:57:54 TIME: core/cache.update : 0.15 ms
03.11 22:57:55 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 22:57:56 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 22:57:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:57:56 TIME: vdl/cache.battle.findRandom : 0.05 ms
03.11 22:57:57 BLOCKREMOVE: battle 15 removed
03.11 22:57:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
03.11 22:57:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 22:57:59 TIME: core/cache.update : 0.11 ms
03.11 22:58:00 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 116
03.11 22:58:07 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
03.11 22:58:07 DB: SELECT nextval('Battle_id_seq') AS id
03.11 22:58:07 READDB: SELECT ID FROM Battle WHERE ID = 17
03.11 22:58:07 READDB: INSERT INTO Battle (ID) VALUES (17)
03.11 22:58:07 READDB: SELECT * FROM Battle WHERE ID = 17
03.11 22:58:07 DB: SELECT name FROM users WHERE id=116
03.11 22:58:07 DB: SELECT name FROM users WHERE id=107
03.11 22:58:07 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 17, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
03.11 22:58:07 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 17, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 22:58:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 22:58:07 TIME: vdl/cache.battle.findRandom : 28.86 ms
03.11 22:58:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481803.08728027', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 17
03.11 22:58:13 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
03.11 22:58:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:58:13 TIME: vdl/cache.battle.infoRoom : 0.19 ms
03.11 22:58:14 TIMER: Clans cache...
03.11 22:58:14 TIMER: Clans cache: 0ms
03.11 22:58:14 TIMER: Check tournament...
03.11 22:58:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:58' OR rounddate = '2016-03-11 22:58' AND status <> 'finished'
03.11 22:58:14 DB: SELECT * FROM battle WHERE endtime >= '1478203.09468782' AND avaliable = true AND finished <> true
03.11 22:58:14 TIMER: Check tournament: 2ms
03.11 22:58:24 BLOCKREMOVE: battle 17 removed
03.11 22:58:24 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
03.11 22:58:24 READDB: SELECT * FROM Battle WHERE ID = 17
03.11 22:58:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:58:24 TIME: vdl/cache.battle.infoRoom : 0.94 ms
03.11 22:58:35 BLOCKREMOVE: battle 17 removed
03.11 22:59:14 TIMER: Clans cache...
03.11 22:59:14 TIMER: Clans cache: 0ms
03.11 22:59:14 TIMER: Check tournament...
03.11 22:59:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 22:59' OR rounddate = '2016-03-11 22:59' AND status <> 'finished'
03.11 22:59:14 DB: SELECT * FROM battle WHERE endtime >= '1478203.15469992' AND avaliable = true AND finished <> true
03.11 22:59:14 TIMER: Check tournament: 2ms
03.11 22:59:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
03.11 22:59:14 STATS: cache [battle], get [31 calls, 13 cache hits, 17 cache misses, 0 same version, 0 not found]
03.11 22:59:14 STATS: cache [battle], segments [48 calls, 30 hits, 17 misses]
03.11 22:59:14 STATS: cache [battle], database [1560 calls, 17 reads, 12 writes]
03.11 22:59:14 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 22:59:14 READDB: SELECT * FROM Battle WHERE ID = 17
03.11 22:59:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
03.11 22:59:14 TIME: vdl/cache.battle.infoRoom : 1.57 ms
03.11 22:59:14 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 1, 2, 1)
03.11 22:59:14 TIMER: Clans cache...
03.11 22:59:14 TIMER: Clans cache: 0ms
03.11 22:59:14 TIMER: Check tournament...
03.11 22:59:14 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 23:00' OR rounddate = '2016-03-11 23:00' AND status <> 'finished'
03.11 22:59:14 DB: SELECT * FROM battle WHERE endtime >= '1478203.21471409' AND avaliable = true AND finished <> true
03.11 22:59:14 TIMER: Check tournament: 2ms
