31.08 18:03:03 TIMER: Starting timer...
31.08 18:03:03 TIMER: Timer running...
31.08 18:03:03 DB: SELECT * FROM GameVars
31.08 18:03:03 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:03:03 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:03:03 DB: SELECT * FROM Shops WHERE ID = 1
31.08 18:03:03 TEMP: load ./tmp/quest_daily_ids
31.08 18:03:03 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 18:03:03 TEMP: save ./tmp/quest_daily_ids
31.08 18:03:03 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 18:03:03 QUEUE: vdl.0 (thread) response server.login
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM LocalizationStrings
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 6.72 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM GameVars
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.52 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.66 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.55 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.48 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.94 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 18:03:03 TIME: core/quest.getDaily : 0.02 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM UserAttributeTypes
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.28 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM UserVariableTypes
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.42 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 18:03:03 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.94 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM ItemGroups
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.44 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM Bundles ORDER BY ID
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.4 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.59 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 18:03:03 TIME: core/shop.getList : 0.03 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM EffectAttributeTypes
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.29 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM Effects
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.29 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 18:03:03 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.54 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 18:03:03 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.85 ms
31.08 18:03:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 18:03:03 DB: SELECT * FROM Badges
31.08 18:03:03 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:03 TIME: core/server.query : 0.34 ms
31.08 18:03:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 18:03:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 18:03:45 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:03:45 TIME: core/server.query : 3 ms
31.08 18:03:45 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 18:03:45 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 18:03:45 TIME: core/user.isOnlineID : 0.13 ms
31.08 18:03:45 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 18:03:45 READDB: SELECT * FROM Users WHERE ID = 2
31.08 18:03:45 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:03:45 TIME: core/cache.get : 3.69 ms
31.08 18:03:45 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 18:03:45 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 18:03:45 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:03:45 TIME: core/cache.get : 1.27 ms
31.08 18:03:45 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 18:03:45 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:03:45 TIME: core/user.loginPost : 0.11 ms
31.08 18:03:45 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:03:45 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:03:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 18:03:45 TIME: vdl/cache.battle.find : 2.31 ms
31.08 18:03:45 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 18:03:45 DB: SELECT nextval('Battle_id_seq') AS id
31.08 18:03:45 READDB: SELECT ID FROM Battle WHERE ID = 1
31.08 18:03:45 READDB: INSERT INTO Battle (ID) VALUES (1)
31.08 18:03:45 READDB: SELECT * FROM Battle WHERE ID = 1
31.08 18:03:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 18:03:45 TIME: vdl/cache.battle.create : 27.68 ms
31.08 18:03:51 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 1
31.08 18:03:53 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 18:03:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:03:53 TIME: core/cache.update : 0.09 ms
31.08 18:03:54 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:04:03 TIMER: Clans cache...
31.08 18:04:03 TIMER: Clans cache: 0ms
31.08 18:04:21 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 18:04:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 18:04:21 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
31.08 18:04:21 TIME: core/server.query : 2.67 ms
31.08 18:04:21 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 18:04:21 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
31.08 18:04:21 TIME: core/user.isOnlineID : 0.13 ms
31.08 18:04:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 18:04:21 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 18:04:21 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 18:04:21 STATS: cache [user], database [79 calls, 1 reads, 1 writes]
31.08 18:04:21 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 18:04:21 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.4 ms]
31.08 18:04:21 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.25 ms]
31.08 18:04:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 18:04:21 TIME: core/cache.update : 0.91 ms
31.08 18:04:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 18:04:21 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 18:04:21 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 18:04:21 STATS: cache [questdata], database [79 calls, 1 reads, 0 writes]
31.08 18:04:21 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 18:04:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:04:21 TIME: core/cache.update : 0.54 ms
31.08 18:04:21 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 18:04:21 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 18:04:21 TIME: core/user.logoutPost : 0.16 ms
31.08 18:04:22 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:04:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 18:04:32 BLOCKREMOVE: user 2 removed
31.08 18:04:32 BLOCKREMOVE: questdata 2 removed
31.08 18:05:03 TIMER: Clans cache...
31.08 18:05:03 TIMER: Clans cache: 0ms
31.08 18:05:19 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 18:05:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 18:05:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
31.08 18:05:19 TIME: core/server.query : 1.48 ms
31.08 18:05:19 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 18:05:19 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 18:05:19 TIME: core/user.isOnlineID : 0.1 ms
31.08 18:05:19 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 18:05:19 READDB: SELECT * FROM Users WHERE ID = 3
31.08 18:05:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 3 } }
31.08 18:05:19 TIME: core/cache.get : 1.81 ms
31.08 18:05:19 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 18:05:19 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 18:05:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
31.08 18:05:19 TIME: core/cache.get : 1.07 ms
31.08 18:05:19 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 18:05:19 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:05:19 TIME: core/user.loginPost : 0.14 ms
31.08 18:05:19 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:05:19 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:05:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 18:05:19 TIME: vdl/cache.battle.find : 1.3 ms
31.08 18:05:19 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
31.08 18:05:19 DB: SELECT nextval('Battle_id_seq') AS id
31.08 18:05:19 READDB: SELECT ID FROM Battle WHERE ID = 2
31.08 18:05:19 READDB: INSERT INTO Battle (ID) VALUES (2)
31.08 18:05:19 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 18:05:19 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
31.08 18:05:19 STATS: cache [battle], database [137 calls, 1 reads, 1 writes]
31.08 18:05:19 STATS: cache [battle], lock [2 calls, 2 attempts, 0 failures]
31.08 18:05:19 READDB: SELECT * FROM Battle WHERE ID = 2
31.08 18:05:19 STATS: cache manager [0], get [2 calls, total 0 sec spent, avg 0.94 ms]
31.08 18:05:19 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 18:05:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 18:05:19 TIME: vdl/cache.battle.create : 24.11 ms
31.08 18:05:25 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 2
31.08 18:05:28 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 18:05:28 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:05:28 STATS: cache [user], segments [8 calls, 3 hits, 4 misses]
31.08 18:05:28 STATS: cache [user], database [145 calls, 2 reads, 2 writes]
31.08 18:05:28 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 18:05:28 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.8 ms]
31.08 18:05:28 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.31 ms]
31.08 18:05:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:05:28 TIME: core/cache.update : 0.61 ms
31.08 18:05:28 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:06:03 TIMER: Clans cache...
31.08 18:06:03 TIMER: Clans cache: 0ms
31.08 18:06:03 TIMER: Clans cache...
31.08 18:06:03 TIMER: Clans cache: 0ms
31.08 18:06:03 TIMER: Clans cache...
31.08 18:06:03 TIMER: Clans cache: 0ms
31.08 18:06:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
31.08 18:06:03 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:06:03 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
31.08 18:06:03 STATS: cache [user], database [360 calls, 2 reads, 3 writes]
31.08 18:06:03 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 18:06:03 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.8 ms]
31.08 18:06:03 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.3 ms]
31.08 18:06:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 18:06:03 TIME: core/cache.update : 0.45 ms
31.08 18:06:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
31.08 18:06:03 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:06:03 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
31.08 18:06:03 STATS: cache [questdata], database [360 calls, 2 reads, 1 writes]
31.08 18:06:03 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 18:06:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:06:03 TIME: core/cache.update : 0.51 ms
31.08 18:06:03 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
31.08 18:06:03 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 18:06:03 TIME: core/user.logoutPost : 0.19 ms
31.08 18:06:03 TIMER: Clans cache...
31.08 18:06:03 TIMER: Clans cache: 0ms
31.08 18:06:03 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:06:03 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
31.08 18:09:13 BLOCKREMOVE: user 3 removed
31.08 18:09:13 BLOCKREMOVE: questdata 3 removed
31.08 18:13:29 TIMER: Starting timer...
31.08 18:13:29 TIMER: Timer running...
31.08 18:13:29 DB: SELECT * FROM GameVars
31.08 18:13:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:13:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:13:29 DB: SELECT * FROM Shops WHERE ID = 1
31.08 18:13:29 TEMP: load ./tmp/quest_daily_ids
31.08 18:13:29 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 18:13:29 TEMP: save ./tmp/quest_daily_ids
31.08 18:13:29 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 18:13:29 QUEUE: vdl.0 (thread) response server.login
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM LocalizationStrings
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 7.77 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM GameVars
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.5 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.62 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.43 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.5 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.89 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 18:13:29 TIME: core/quest.getDaily : 0.02 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM UserAttributeTypes
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.31 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM UserVariableTypes
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.44 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 18:13:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.97 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM ItemGroups
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.36 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM Bundles ORDER BY ID
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.45 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.42 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 18:13:29 TIME: core/shop.getList : 0.03 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM EffectAttributeTypes
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.33 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM Effects
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.38 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 18:13:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.69 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 18:13:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.53 ms
31.08 18:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 18:13:29 DB: SELECT * FROM Badges
31.08 18:13:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:13:29 TIME: core/server.query : 0.38 ms
31.08 18:14:00 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 18:14:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 18:14:00 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:14:00 TIME: core/server.query : 3 ms
31.08 18:14:00 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 18:14:00 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 18:14:00 TIME: core/user.isOnlineID : 0.08 ms
31.08 18:14:00 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 18:14:00 READDB: SELECT * FROM Users WHERE ID = 3
31.08 18:14:00 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:14:00 TIME: core/cache.get : 3.24 ms
31.08 18:14:00 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 18:14:00 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 18:14:00 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:14:00 TIME: core/cache.get : 1.2 ms
31.08 18:14:00 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 18:14:00 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:14:00 TIME: core/user.loginPost : 0.1 ms
31.08 18:14:00 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:14:00 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:14:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 18:14:00 TIME: vdl/cache.battle.find : 1.73 ms
31.08 18:14:00 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
31.08 18:14:00 DB: SELECT nextval('Battle_id_seq') AS id
31.08 18:14:00 READDB: SELECT ID FROM Battle WHERE ID = 3
31.08 18:14:00 READDB: INSERT INTO Battle (ID) VALUES (3)
31.08 18:14:00 READDB: SELECT * FROM Battle WHERE ID = 3
31.08 18:14:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 18:14:00 TIME: vdl/cache.battle.create : 30.64 ms
31.08 18:14:06 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 3
31.08 18:14:09 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 18:14:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:14:09 TIME: core/cache.update : 0.23 ms
31.08 18:14:10 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:14:29 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 18:14:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 18:14:29 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
31.08 18:14:29 TIME: core/server.query : 2.86 ms
31.08 18:14:29 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 18:14:29 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 18:14:29 TIME: core/user.isOnlineID : 0.13 ms
31.08 18:14:29 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 18:14:29 READDB: SELECT * FROM Users WHERE ID = 2
31.08 18:14:29 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 2 } }
31.08 18:14:29 TIME: core/cache.get : 1.38 ms
31.08 18:14:29 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 18:14:29 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 18:14:29 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
31.08 18:14:29 TIME: core/cache.get : 0.83 ms
31.08 18:14:29 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 18:14:29 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:14:29 TIME: core/user.loginPost : 0.1 ms
31.08 18:14:29 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:14:29 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:14:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 18:14:29 TIME: vdl/cache.battle.find : 2.08 ms
31.08 18:14:29 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 18:14:29 DB: SELECT nextval('Battle_id_seq') AS id
31.08 18:14:29 READDB: SELECT ID FROM Battle WHERE ID = 4
31.08 18:14:29 READDB: INSERT INTO Battle (ID) VALUES (4)
31.08 18:14:29 READDB: SELECT * FROM Battle WHERE ID = 4
31.08 18:14:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 18:14:29 TIME: vdl/cache.battle.create : 17.23 ms
31.08 18:14:29 TIMER: Clans cache...
31.08 18:14:29 TIMER: Clans cache: 0ms
31.08 18:14:34 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 4
31.08 18:14:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 18:14:34 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:14:34 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
31.08 18:14:34 STATS: cache [user], database [66 calls, 2 reads, 1 writes]
31.08 18:14:34 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 18:14:34 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.53 ms]
31.08 18:14:34 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.17 ms]
31.08 18:14:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:14:34 TIME: core/cache.update : 0.49 ms
31.08 18:14:35 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:14:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
31.08 18:14:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 18:14:50 TIME: core/cache.update : 0.12 ms
31.08 18:14:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
31.08 18:14:50 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:14:50 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
31.08 18:14:50 STATS: cache [questdata], database [81 calls, 2 reads, 0 writes]
31.08 18:14:50 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 18:14:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:14:50 TIME: core/cache.update : 0.33 ms
31.08 18:14:50 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
31.08 18:14:50 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 18:14:50 TIME: core/user.logoutPost : 0.12 ms
31.08 18:14:50 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:14:50 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
31.08 18:15:01 BLOCKREMOVE: user 3 removed
31.08 18:15:01 BLOCKREMOVE: questdata 3 removed
31.08 18:19:43 TIMER: Starting timer...
31.08 18:19:43 TIMER: Timer running...
31.08 18:19:43 DB: SELECT * FROM GameVars
31.08 18:19:43 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:19:43 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:19:43 DB: SELECT * FROM Shops WHERE ID = 1
31.08 18:19:43 TEMP: load ./tmp/quest_daily_ids
31.08 18:19:43 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 18:19:43 TEMP: save ./tmp/quest_daily_ids
31.08 18:19:43 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 18:19:43 QUEUE: vdl.0 (thread) response server.login
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM LocalizationStrings
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 6.7 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM GameVars
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.48 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.58 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.4 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.47 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.72 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 18:19:43 TIME: core/quest.getDaily : 0.02 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM UserAttributeTypes
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.32 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM UserVariableTypes
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.31 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 18:19:43 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 1.24 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM ItemGroups
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.59 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM Bundles ORDER BY ID
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.56 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.43 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 18:19:43 TIME: core/shop.getList : 0.02 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM EffectAttributeTypes
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.38 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM Effects
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.56 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 18:19:43 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.91 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 18:19:43 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.73 ms
31.08 18:19:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 18:19:43 DB: SELECT * FROM Badges
31.08 18:19:43 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:19:43 TIME: core/server.query : 0.37 ms
31.08 18:20:16 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 18:20:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 18:20:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:16 TIME: core/server.query : 2.78 ms
31.08 18:20:16 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 18:20:16 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 18:20:16 TIME: core/user.isOnlineID : 0.13 ms
31.08 18:20:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 18:20:16 READDB: SELECT * FROM Users WHERE ID = 3
31.08 18:20:16 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:20:16 TIME: core/cache.get : 3.86 ms
31.08 18:20:16 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 18:20:16 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 18:20:16 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:20:16 TIME: core/cache.get : 1.38 ms
31.08 18:20:16 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 18:20:16 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:20:16 TIME: core/user.loginPost : 0.15 ms
31.08 18:20:16 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:20:16 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:20:16 TRACE: vdl/cache.battle.find : Invalid field access : count
31.08 18:20:16 TRACE: vdl/cache.battle.find : 
Called from modules/VDLCache.hx line 82
Called from modules/VDLCache.hx line 53
Called from snipe/cache/CacheServer.hx line 487
31.08 18:20:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => _requestException, _type => vdl/cache.battle.find }
31.08 18:20:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 18:20:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:20:23 TIME: core/cache.update : 0.23 ms
31.08 18:20:24 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:20:43 TIMER: Clans cache...
31.08 18:20:43 TIMER: Clans cache: 0ms
31.08 18:20:59 TIMER: Starting timer...
31.08 18:20:59 TIMER: Timer running...
31.08 18:20:59 DB: SELECT * FROM GameVars
31.08 18:20:59 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:20:59 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:20:59 DB: SELECT * FROM Shops WHERE ID = 1
31.08 18:20:59 TEMP: load ./tmp/quest_daily_ids
31.08 18:20:59 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 18:20:59 TEMP: save ./tmp/quest_daily_ids
31.08 18:20:59 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 18:20:59 QUEUE: vdl.0 (thread) response server.login
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 18:20:59 DB: SELECT * FROM LocalizationStrings
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:59 TIME: core/server.query : 6.55 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 18:20:59 DB: SELECT * FROM GameVars
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:59 TIME: core/server.query : 0.54 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 18:20:59 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:59 TIME: core/server.query : 0.73 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 18:20:59 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:59 TIME: core/server.query : 0.36 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 18:20:59 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:59 TIME: core/server.query : 0.72 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 18:20:59 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:59 TIME: core/server.query : 0.82 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 18:20:59 TIME: core/quest.getDaily : 0.02 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 18:20:59 DB: SELECT * FROM UserAttributeTypes
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:59 TIME: core/server.query : 0.34 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 18:20:59 DB: SELECT * FROM UserVariableTypes
31.08 18:20:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:20:59 TIME: core/server.query : 0.37 ms
31.08 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 18:20:59 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i31.08 18:21:28 TIMER: Starting timer...
31.08 18:21:28 TIMER: Timer running...
31.08 18:21:28 DB: SELECT * FROM GameVars
31.08 18:21:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:21:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:21:28 DB: SELECT * FROM Shops WHERE ID = 1
31.08 18:21:28 TEMP: load ./tmp/quest_daily_ids
31.08 18:21:28 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 18:21:28 TEMP: save ./tmp/quest_daily_ids
31.08 18:21:28 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 18:21:28 QUEUE: vdl.0 (thread) response server.login
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM LocalizationStrings
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 5.68 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM GameVars
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.51 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.65 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.46 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.52 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.88 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 18:21:28 TIME: core/quest.getDaily : 0.03 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM UserAttributeTypes
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.3 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM UserVariableTypes
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.29 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 18:21:28 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 1.04 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM ItemGroups
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.31 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM Bundles ORDER BY ID
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.43 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.36 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 18:21:28 TIME: core/shop.getList : 0.02 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM EffectAttributeTypes
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.49 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM Effects
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.41 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 18:21:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.57 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 18:21:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.56 ms
31.08 18:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 18:21:28 DB: SELECT * FROM Badges
31.08 18:21:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:28 TIME: core/server.query : 0.28 ms
31.08 18:21:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 18:21:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 18:21:50 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:21:50 TIME: core/server.query : 2.53 ms
31.08 18:21:50 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 18:21:50 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 18:21:50 TIME: core/user.isOnlineID : 0.05 ms
31.08 18:21:50 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 18:21:50 READDB: SELECT * FROM Users WHERE ID = 2
31.08 18:21:50 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:21:50 TIME: core/cache.get : 2.98 ms
31.08 18:21:50 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 18:21:50 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 18:21:50 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:21:50 TIME: core/cache.get : 1.45 ms
31.08 18:21:50 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 18:21:50 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:21:50 TIME: core/user.loginPost : 0.17 ms
31.08 18:21:50 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:21:50 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:21:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 18:21:50 TIME: vdl/cache.battle.find : 2.31 ms
31.08 18:21:50 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 18:21:50 DB: SELECT nextval('Battle_id_seq') AS id
31.08 18:21:50 READDB: SELECT ID FROM Battle WHERE ID = 1
31.08 18:21:50 READDB: INSERT INTO Battle (ID) VALUES (1)
31.08 18:21:50 READDB: SELECT * FROM Battle WHERE ID = 1
31.08 18:21:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 18:21:50 TIME: vdl/cache.battle.create : 36.07 ms
31.08 18:21:56 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 1
31.08 18:21:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 18:21:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:21:58 TIME: core/cache.update : 0.18 ms
31.08 18:21:59 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:22:28 TIMER: Clans cache...
31.08 18:22:28 TIMER: Clans cache: 0ms
31.08 18:22:35 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 18:22:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 18:22:35 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
31.08 18:22:35 TIME: core/server.query : 2.62 ms
31.08 18:22:35 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 18:22:35 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 18:22:35 TIME: core/user.isOnlineID : 0.12 ms
31.08 18:22:35 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 18:22:35 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 18:22:35 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 18:22:35 STATS: cache [user], database [68 calls, 1 reads, 1 writes]
31.08 18:22:35 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 18:22:35 READDB: SELECT * FROM Users WHERE ID = 3
31.08 18:22:35 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.06 ms]
31.08 18:22:35 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.06 ms]
31.08 18:22:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 3 } }
31.08 18:22:35 TIME: core/cache.get : 2.37 ms
31.08 18:22:35 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 18:22:35 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 18:22:35 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 18:22:35 STATS: cache [questdata], database [68 calls, 1 reads, 0 writes]
31.08 18:22:35 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 18:22:35 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 18:22:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
31.08 18:22:35 TIME: core/cache.get : 1.18 ms
31.08 18:22:35 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 18:22:35 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:22:35 TIME: core/user.loginPost : 0.38 ms
31.08 18:22:35 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:22:35 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:22:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 18:22:35 TIME: vdl/cache.battle.find : 2.34 ms
31.08 18:22:35 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
31.08 18:22:35 DB: SELECT nextval('Battle_id_seq') AS id
31.08 18:22:35 READDB: SELECT ID FROM Battle WHERE ID = 2
31.08 18:22:35 READDB: INSERT INTO Battle (ID) VALUES (2)
31.08 18:22:35 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 18:22:35 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
31.08 18:22:35 STATS: cache [battle], database [68 calls, 1 reads, 1 writes]
31.08 18:22:35 STATS: cache [battle], lock [2 calls, 2 attempts, 0 failures]
31.08 18:22:35 READDB: SELECT * FROM Battle WHERE ID = 2
31.08 18:22:35 STATS: cache manager [0], get [2 calls, total 0 sec spent, avg 0.99 ms]
31.08 18:22:35 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 18:22:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 18:22:35 TIME: vdl/cache.battle.create : 13.86 ms
31.08 18:22:41 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 2
31.08 18:22:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 18:22:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:22:43 TIME: core/cache.update : 0.18 ms
31.08 18:22:43 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:23:09 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 18:23:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 18:23:09 TIME: core/cache.update : 0.12 ms
31.08 18:23:09 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 18:23:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:23:09 TIME: core/cache.update : 0.09 ms
31.08 18:23:09 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 18:23:09 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 18:23:09 TIME: core/user.logoutPost : 0.08 ms
31.08 18:23:09 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:23:09 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 18:23:19 BLOCKREMOVE: user 2 removed
31.08 18:23:19 BLOCKREMOVE: questdata 2 removed
31.08 18:23:28 TIMER: Clans cache...
31.08 18:23:28 TIMER: Clans cache: 0ms
31.08 18:23:28 TIMER: Clans cache...
31.08 18:23:28 TIMER: Clans cache: 0ms
31.08 18:24:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 18:24:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 18:24:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
31.08 18:24:51 TIME: core/server.query : 2.44 ms
31.08 18:24:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 18:24:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 18:24:51 TIME: core/user.isOnlineID : 0.1 ms
31.08 18:24:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 18:24:51 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:24:51 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
31.08 18:24:51 STATS: cache [user], database [204 calls, 2 reads, 3 writes]
31.08 18:24:51 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
31.08 18:24:51 READDB: SELECT * FROM Users WHERE ID = 2
31.08 18:24:51 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.84 ms]
31.08 18:24:51 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.04 ms]
31.08 18:24:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 2 } }
31.08 18:24:51 TIME: core/cache.get : 2.5 ms
31.08 18:24:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 18:24:51 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:24:51 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
31.08 18:24:51 STATS: cache [questdata], database [204 calls, 2 reads, 1 writes]
31.08 18:24:51 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
31.08 18:24:51 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 18:24:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
31.08 18:24:51 TIME: core/cache.get : 1.8 ms
31.08 18:24:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 18:24:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:24:51 TIME: core/user.loginPost : 0.1 ms
31.08 18:24:51 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:24:51 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:24:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 18:24:51 TIME: vdl/cache.battle.find : 1.76 ms
31.08 18:24:51 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 18:24:51 DB: SELECT nextval('Battle_id_seq') AS id
31.08 18:24:51 READDB: SELECT ID FROM Battle WHERE ID = 3
31.08 18:24:51 READDB: INSERT INTO Battle (ID) VALUES (3)
31.08 18:24:51 STATS: cache [battle], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:24:51 STATS: cache [battle], segments [7 calls, 2 hits, 4 misses]
31.08 18:24:51 STATS: cache [battle], database [204 calls, 2 reads, 2 writes]
31.08 18:24:51 STATS: cache [battle], lock [3 calls, 3 attempts, 0 failures]
31.08 18:24:51 READDB: SELECT * FROM Battle WHERE ID = 3
31.08 18:24:51 STATS: cache manager [0], get [3 calls, total 0 sec spent, avg 1.04 ms]
31.08 18:24:51 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 18:24:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 18:24:51 TIME: vdl/cache.battle.create : 20.32 ms
31.08 18:24:57 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 3
31.08 18:24:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 18:24:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:24:58 TIME: core/cache.update : 0.17 ms
31.08 18:24:58 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:25:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 18:25:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 18:25:19 TIME: core/cache.update : 0.21 ms
31.08 18:25:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 18:25:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:25:19 TIME: core/cache.update : 0.2 ms
31.08 18:25:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 18:25:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 18:25:19 TIME: core/user.logoutPost : 0.15 ms
31.08 18:25:20 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:25:20 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 18:25:28 TIMER: Clans cache...
31.08 18:25:28 TIMER: Clans cache: 0ms
31.08 18:25:30 BLOCKREMOVE: user 2 removed
31.08 18:25:30 BLOCKREMOVE: questdata 2 removed
31.08 18:26:28 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
31.08 18:26:28 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
31.08 18:26:28 STATS: cache [user], segments [14 calls, 7 hits, 6 misses]
31.08 18:26:28 STATS: cache [user], database [300 calls, 3 reads, 5 writes]
31.08 18:26:28 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
31.08 18:26:28 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1.76 ms]
31.08 18:26:28 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.1 ms]
31.08 18:26:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 18:26:28 TIME: core/cache.update : 0.8 ms
31.08 18:26:28 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
31.08 18:26:28 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
31.08 18:26:28 STATS: cache [questdata], segments [11 calls, 4 hits, 6 misses]
31.08 18:26:28 STATS: cache [questdata], database [300 calls, 3 reads, 2 writes]
31.08 18:26:28 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
31.08 18:26:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:26:28 TIME: core/cache.update : 0.51 ms
31.08 18:26:28 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
31.08 18:26:28 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 18:26:28 TIME: core/user.logoutPost : 0.16 ms
31.08 18:26:28 TIMER: Clans cache...
31.08 18:26:28 TIMER: Clans cache: 0ms
31.08 18:26:28 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:26:28 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
31.08 18:27:38 TIMER: Starting timer...
31.08 18:27:38 TIMER: Timer running...
31.08 18:27:38 DB: SELECT * FROM GameVars
31.08 18:27:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:27:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:27:38 DB: SELECT * FROM Shops WHERE ID = 1
31.08 18:27:38 TEMP: load ./tmp/quest_daily_ids
31.08 18:27:38 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 18:27:38 TEMP: save ./tmp/quest_daily_ids
31.08 18:27:38 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 18:27:38 QUEUE: vdl.0 (thread) response server.login
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM LocalizationStrings
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 8.6 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM GameVars
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.53 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.59 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.48 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.45 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.91 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 18:27:38 TIME: core/quest.getDaily : 0.03 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM UserAttributeTypes
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.33 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM UserVariableTypes
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.36 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 18:27:38 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 1.32 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM ItemGroups
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.33 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM Bundles ORDER BY ID
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.59 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.36 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 18:27:38 TIME: core/shop.getList : 0.03 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM EffectAttributeTypes
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.46 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM Effects
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.38 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 18:27:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.67 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 18:27:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.6 ms
31.08 18:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 18:27:38 DB: SELECT * FROM Badges
31.08 18:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:27:38 TIME: core/server.query : 0.43 ms
31.08 18:27:38 TIMER: Clans cache...
31.08 18:27:38 TIMER: Clans cache: 0ms
31.08 18:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 18:29:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 18:29:34 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:29:34 TIME: core/server.query : 2.69 ms
31.08 18:29:34 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 18:29:34 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 18:29:34 TIME: core/user.isOnlineID : 0.08 ms
31.08 18:29:34 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 18:29:34 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 18:29:34 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 18:29:34 STATS: cache [user], database [116 calls, 0 reads, 0 writes]
31.08 18:29:34 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 18:29:34 READDB: SELECT * FROM Users WHERE ID = 2
31.08 18:29:34 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.96 ms]
31.08 18:29:34 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 18:29:34 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:29:34 TIME: core/cache.get : 4.18 ms
31.08 18:29:34 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 18:29:34 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 18:29:34 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 18:29:34 STATS: cache [questdata], database [116 calls, 0 reads, 0 writes]
31.08 18:29:34 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 18:29:34 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 18:29:34 QUEUE: vdl.0 (thread) response core/cache.get
31.08 18:29:34 TIME: core/cache.get : 1.92 ms
31.08 18:29:34 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 18:29:34 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:29:34 TIME: core/user.loginPost : 0.24 ms
31.08 18:29:34 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:29:34 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:29:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 18:29:34 TIME: vdl/cache.battle.find : 2.26 ms
31.08 18:29:34 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 18:29:34 DB: SELECT nextval('Battle_id_seq') AS id
31.08 18:29:34 READDB: SELECT ID FROM Battle WHERE ID = 1
31.08 18:29:34 READDB: INSERT INTO Battle (ID) VALUES (1)
31.08 18:29:34 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 18:29:34 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 18:29:34 STATS: cache [battle], database [117 calls, 0 reads, 0 writes]
31.08 18:29:34 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 18:29:34 READDB: SELECT * FROM Battle WHERE ID = 1
31.08 18:29:34 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.98 ms]
31.08 18:29:34 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 18:29:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 18:29:34 TIME: vdl/cache.battle.create : 36.3 ms
31.08 18:29:38 TIMER: Clans cache...
31.08 18:29:38 TIMER: Clans cache: 0ms
31.08 18:29:40 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 1
31.08 18:29:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 18:29:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:29:43 TIME: core/cache.update : 0.23 ms
31.08 18:29:44 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:30:38 TIMER: Clans cache...
31.08 18:30:38 TIMER: Clans cache: 0ms
31.08 18:30:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 18:30:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 18:30:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
31.08 18:30:44 TIME: core/server.query : 2.43 ms
31.08 18:30:44 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 18:30:44 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 18:30:44 TIME: core/user.isOnlineID : 0.05 ms
31.08 18:30:44 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 18:30:44 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 18:30:44 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 18:30:44 STATS: cache [user], database [186 calls, 1 reads, 1 writes]
31.08 18:30:44 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 18:30:44 READDB: SELECT * FROM Users WHERE ID = 3
31.08 18:30:44 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.22 ms]
31.08 18:30:44 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.1 ms]
31.08 18:30:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 3 } }
31.08 18:30:44 TIME: core/cache.get : 1.2 ms
31.08 18:30:44 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 18:30:44 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 18:30:44 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 18:30:44 STATS: cache [questdata], database [186 calls, 1 reads, 0 writes]
31.08 18:30:44 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 18:30:44 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 18:30:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
31.08 18:30:44 TIME: core/cache.get : 2.73 ms
31.08 18:30:44 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 18:30:44 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 18:30:44 TIME: core/user.loginPost : 0.11 ms
31.08 18:30:44 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 18:30:44 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 18:30:44 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true
31.08 18:30:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {{ secondid => 0, params => {}, avaliable => true, firstid => 2, id => 1, turnid => 2, finished => false }}, errorCode => ok, _type => vdl/cache.battle.find }
31.08 18:30:44 TIME: vdl/cache.battle.find : 1.7 ms
31.08 18:30:53 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 18:30:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:30:53 TIME: core/cache.update : 0.17 ms
31.08 18:30:53 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:30:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 18:30:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 18:30:58 TIME: core/cache.update : 0.14 ms
31.08 18:30:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 18:30:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:30:58 TIME: core/cache.update : 0.12 ms
31.08 18:30:58 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 18:30:58 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 18:30:58 TIME: core/user.logoutPost : 0.09 ms
31.08 18:30:58 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 18:30:58 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 18:31:08 BLOCKREMOVE: user 2 removed
31.08 18:31:08 BLOCKREMOVE: questdata 2 removed
31.08 18:31:38 TIMER: Clans cache...
31.08 18:31:38 TIMER: Clans cache: 0ms
31.08 18:31:38 TIMER: Clans cache...
31.08 18:31:38 TIMER: Clans cache: 0ms
31.08 18:31:38 TIMER: Clans cache...
31.08 18:31:38 TIMER: Clans cache: 0ms
31.08 18:31:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
31.08 18:31:38 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:31:38 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
31.08 18:31:38 STATS: cache [user], database [420 calls, 2 reads, 3 writes]
31.08 18:31:38 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 18:31:38 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.31 ms]
31.08 18:31:38 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.1 ms]
31.08 18:31:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 18:31:38 TIME: core/cache.update : 0.42 ms
31.08 18:31:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
31.08 18:31:38 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 18:31:38 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
31.08 18:31:38 STATS: cache [questdata], database [420 calls, 2 reads, 1 writes]
31.08 18:31:38 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 18:31:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 18:31:38 TIME: core/cache.update : 0.38 ms
31.08 18:31:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
31.08 18:31:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 18:31:38 TIME: core/user.logoutPost : 0.1 ms
31.08 18:31:38 TIMER: Clans cache...
31.08 18:31:38 TIMER: Clans cache: 0ms
31.08 18:31:38 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 18:31:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
31.08 18:34:49 BLOCKREMOVE: user 3 removed
31.08 18:34:49 BLOCKREMOVE: questdata 3 removed
31.08 18:39:53 TIMER: Starting timer...
31.08 18:39:53 TIMER: Timer running...
31.08 18:39:53 DB: SELECT * FROM GameVars
31.08 18:39:53 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 18:39:53 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 18:39:53 DB: SELECT * FROM Shops WHERE ID = 1
31.08 18:39:53 TEMP: load ./tmp/quest_daily_ids
31.08 18:39:53 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 18:39:53 TEMP: save ./tmp/quest_daily_ids
31.08 18:39:53 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 18:39:53 QUEUE: vdl.0 (thread) response server.login
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 18:39:53 DB: SELECT * FROM LocalizationStrings
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:39:53 TIME: core/server.query : 7.63 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 18:39:53 DB: SELECT * FROM GameVars
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:39:53 TIME: core/server.query : 0.55 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 18:39:53 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:39:53 TIME: core/server.query : 0.76 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 18:39:53 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:39:53 TIME: core/server.query : 0.41 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 18:39:53 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:39:53 TIME: core/server.query : 0.57 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 18:39:53 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:39:53 TIME: core/server.query : 0.79 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 18:39:53 TIME: core/quest.getDaily : 0.03 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 18:39:53 DB: SELECT * FROM UserAttributeTypes
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:39:53 TIME: core/server.query : 0.51 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 18:39:53 DB: SELECT * FROM UserVariableTypes
31.08 18:39:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 18:39:53 TIME: core/server.query : 0.4 ms
31.08 18:39:53 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 18:39:53 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.