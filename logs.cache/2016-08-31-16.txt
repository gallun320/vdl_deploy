31.08 16:02:28 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 16:02:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 16:02:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:02:28 TIME: core/server.query : 2.92 ms
31.08 16:02:28 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 16:02:28 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 16:02:28 TIME: core/user.isOnlineID : 0.07 ms
31.08 16:02:28 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 16:02:28 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:02:28 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 16:02:28 STATS: cache [user], database [189 calls, 0 reads, 0 writes]
31.08 16:02:28 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:02:28 READDB: SELECT * FROM Users WHERE ID = 2
31.08 16:02:28 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.03 ms]
31.08 16:02:28 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:02:28 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:02:28 TIME: core/cache.get : 4.28 ms
31.08 16:02:28 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 16:02:28 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:02:28 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 16:02:28 STATS: cache [questdata], database [189 calls, 0 reads, 0 writes]
31.08 16:02:28 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 16:02:28 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 16:02:28 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:02:28 TIME: core/cache.get : 1.97 ms
31.08 16:02:28 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 16:02:28 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:02:28 TIME: core/user.loginPost : 0.11 ms
31.08 16:02:28 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 16:02:28 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:02:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 16:02:28 TIME: vdl/cache.battle.find : 2.51 ms
31.08 16:02:28 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 16:02:28 DB: SELECT nextval('Battle_id_seq') AS id
31.08 16:02:28 READDB: SELECT ID FROM Battle WHERE ID = 2
31.08 16:02:28 READDB: INSERT INTO Battle (ID) VALUES (2)
31.08 16:02:28 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:02:28 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 16:02:28 STATS: cache [battle], database [189 calls, 0 reads, 0 writes]
31.08 16:02:28 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 16:02:28 READDB: SELECT * FROM Battle WHERE ID = 2
31.08 16:02:28 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.21 ms]
31.08 16:02:28 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:02:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 16:02:28 TIME: vdl/cache.battle.create : 27.15 ms
31.08 16:02:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 16:02:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:02:34 TIME: core/cache.update : 0.27 ms
31.08 16:02:35 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:04:28 TIMER: Starting timer...
31.08 16:04:28 TIMER: Timer running...
31.08 16:04:28 DB: SELECT * FROM GameVars
31.08 16:04:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:04:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:04:28 DB: SELECT * FROM Shops WHERE ID = 1
31.08 16:04:28 TEMP: load ./tmp/quest_daily_ids
31.08 16:04:28 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 16:04:28 TEMP: save ./tmp/quest_daily_ids
31.08 16:04:28 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 16:04:28 QUEUE: vdl.0 (thread) response server.login
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM LocalizationStrings
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 8.29 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM GameVars
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.58 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.75 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.6 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.56 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.9 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 16:04:28 TIME: core/quest.getDaily : 0.03 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM UserAttributeTypes
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.47 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM UserVariableTypes
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 1.59 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 16:04:28 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 1.19 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM ItemGroups
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.39 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM Bundles ORDER BY ID
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.68 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.42 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 16:04:28 TIME: core/shop.getList : 0.02 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM EffectAttributeTypes
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.82 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM Effects
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.36 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 16:04:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.95 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 16:04:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.64 ms
31.08 16:04:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 16:04:28 DB: SELECT * FROM Badges
31.08 16:04:28 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:04:28 TIME: core/server.query : 0.34 ms
31.08 16:04:28 TIMER: Clans cache...
31.08 16:04:28 TIMER: Clans cache: 0ms
31.08 16:04:28 TIMER: Clans cache...
31.08 16:04:28 TIMER: Clans cache: 0ms
31.08 16:04:28 TIMER: Clans cache...
31.08 16:04:28 TIMER: Clans cache: 0ms
31.08 16:04:28 TIMER: Clans cache...
31.08 16:04:28 TIMER: Clans cache: 0ms
31.08 16:04:28 TIMER: Clans cache...
31.08 16:04:28 TIMER: Clans cache: 0ms
31.08 16:10:17 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 16:10:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 16:10:17 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:10:17 TIME: core/server.query : 18.81 ms
31.08 16:10:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 16:10:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 16:10:17 TIME: core/user.isOnlineID : 0.12 ms
31.08 16:10:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 16:10:17 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:10:17 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 16:10:17 STATS: cache [user], database [350 calls, 0 reads, 0 writes]
31.08 16:10:17 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:10:17 READDB: SELECT * FROM Users WHERE ID = 2
31.08 16:10:17 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.33 ms]
31.08 16:10:17 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:10:17 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:10:17 TIME: core/cache.get : 4.54 ms
31.08 16:10:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 16:10:17 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:10:17 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 16:10:17 STATS: cache [questdata], database [350 calls, 0 reads, 0 writes]
31.08 16:10:17 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 16:10:17 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 16:10:17 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:10:17 TIME: core/cache.get : 1.67 ms
31.08 16:10:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 16:10:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:10:17 TIME: core/user.loginPost : 0.16 ms
31.08 16:10:17 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 16:10:17 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:10:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 16:10:17 TIME: vdl/cache.battle.find : 2.91 ms
31.08 16:10:17 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 16:10:17 DB: SELECT nextval('Battle_id_seq') AS id
31.08 16:10:17 READDB: SELECT ID FROM Battle WHERE ID = 3
31.08 16:10:17 READDB: INSERT INTO Battle (ID) VALUES (3)
31.08 16:10:17 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:10:17 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 16:10:17 STATS: cache [battle], database [350 calls, 0 reads, 0 writes]
31.08 16:10:17 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 16:10:17 READDB: SELECT * FROM Battle WHERE ID = 3
31.08 16:10:17 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.19 ms]
31.08 16:10:17 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:10:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 16:10:17 TIME: vdl/cache.battle.create : 34.33 ms
31.08 16:10:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 16:10:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:10:23 TIME: core/cache.update : 0.16 ms
31.08 16:10:24 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:13:06 TIMER: Starting timer...
31.08 16:13:06 TIMER: Timer running...
31.08 16:13:06 DB: SELECT * FROM GameVars
31.08 16:13:07 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:13:07 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:13:07 DB: SELECT * FROM Shops WHERE ID = 1
31.08 16:13:07 TEMP: load ./tmp/quest_daily_ids
31.08 16:13:07 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 16:13:07 TEMP: save ./tmp/quest_daily_ids
31.08 16:13:07 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 16:13:07 QUEUE: vdl.0 (thread) response server.login
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM LocalizationStrings
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 11.38 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM GameVars
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.74 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 1.18 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.76 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.71 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 1.18 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 16:13:07 TIME: core/quest.getDaily : 0.03 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM UserAttributeTypes
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.6 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM UserVariableTypes
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.44 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 16:13:07 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 1.39 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM ItemGroups
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.62 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM Bundles ORDER BY ID
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.61 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.6 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 16:13:07 TIME: core/shop.getList : 0.03 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM EffectAttributeTypes
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.61 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM Effects
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 1.93 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 16:13:07 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 1.42 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 16:13:07 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 1.14 ms
31.08 16:13:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 16:13:07 DB: SELECT * FROM Badges
31.08 16:13:07 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:13:07 TIME: core/server.query : 0.57 ms
31.08 16:13:07 TIMER: Clans cache...
31.08 16:13:07 TIMER: Clans cache: 0ms
31.08 16:14:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 16:14:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 16:14:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:14:11 TIME: core/server.query : 3.15 ms
31.08 16:14:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 16:14:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 16:14:11 TIME: core/user.isOnlineID : 0.11 ms
31.08 16:14:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 16:14:11 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:14:11 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 16:14:11 STATS: cache [user], database [65 calls, 0 reads, 0 writes]
31.08 16:14:11 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:14:11 READDB: SELECT * FROM Users WHERE ID = 2
31.08 16:14:11 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.11 ms]
31.08 16:14:11 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:14:11 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:14:11 TIME: core/cache.get : 4.31 ms
31.08 16:14:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 16:14:11 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:14:11 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 16:14:11 STATS: cache [questdata], database [65 calls, 0 reads, 0 writes]
31.08 16:14:11 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 16:14:11 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 16:14:11 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:14:11 TIME: core/cache.get : 1.33 ms
31.08 16:14:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 16:14:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:14:11 TIME: core/user.loginPost : 0.14 ms
31.08 16:14:11 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 16:14:11 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:14:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 16:14:11 TIME: vdl/cache.battle.find : 2.08 ms
31.08 16:14:11 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 16:14:11 DB: SELECT nextval('Battle_id_seq') AS id
31.08 16:14:11 READDB: SELECT ID FROM Battle WHERE ID = 4
31.08 16:14:11 READDB: INSERT INTO Battle (ID) VALUES (4)
31.08 16:14:11 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:14:11 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 16:14:11 STATS: cache [battle], database [65 calls, 0 reads, 0 writes]
31.08 16:14:11 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 16:14:11 READDB: SELECT * FROM Battle WHERE ID = 4
31.08 16:14:11 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.2 ms]
31.08 16:14:11 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:14:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 16:14:11 TIME: vdl/cache.battle.create : 29.86 ms
31.08 16:14:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 16:14:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:14:17 TIME: core/cache.update : 0.16 ms
31.08 16:14:18 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:17:06 TIMER: Starting timer...
31.08 16:17:06 TIMER: Timer running...
31.08 16:17:06 DB: SELECT * FROM GameVars
31.08 16:17:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:17:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:17:06 DB: SELECT * FROM Shops WHERE ID = 1
31.08 16:17:06 TEMP: load ./tmp/quest_daily_ids
31.08 16:17:06 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 16:17:06 TEMP: save ./tmp/quest_daily_ids
31.08 16:17:06 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 16:17:06 QUEUE: vdl.0 (thread) response server.login
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM LocalizationStrings
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 8.69 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM GameVars
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.61 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.91 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.53 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.69 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 1.09 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 16:17:06 TIME: core/quest.getDaily : 0.02 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM UserAttributeTypes
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.42 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM UserVariableTypes
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.45 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 16:17:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 1 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM ItemGroups
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.4 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM Bundles ORDER BY ID
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.5 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.55 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 16:17:06 TIME: core/shop.getList : 0.02 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM EffectAttributeTypes
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.33 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM Effects
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.48 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 16:17:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.73 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 16:17:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.72 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 16:17:06 DB: SELECT * FROM Badges
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 0.31 ms
31.08 16:17:06 TIMER: Clans cache...
31.08 16:17:06 TIMER: Clans cache: 0ms
31.08 16:17:06 TIMER: Clans cache...
31.08 16:17:06 TIMER: Clans cache: 0ms
31.08 16:17:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 16:17:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:17:06 TIME: core/server.query : 2.86 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 16:17:06 TIME: core/user.isOnlineID : 0.09 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 16:17:06 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:17:06 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 16:17:06 STATS: cache [user], database [121 calls, 0 reads, 0 writes]
31.08 16:17:06 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:17:06 READDB: SELECT * FROM Users WHERE ID = 2
31.08 16:17:06 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.26 ms]
31.08 16:17:06 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:17:06 TIME: core/cache.get : 4.47 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 16:17:06 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:17:06 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 16:17:06 STATS: cache [questdata], database [121 calls, 0 reads, 0 writes]
31.08 16:17:06 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 16:17:06 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:17:06 TIME: core/cache.get : 1.67 ms
31.08 16:17:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 16:17:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:17:06 TIME: core/user.loginPost : 0.14 ms
31.08 16:17:06 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 16:17:06 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:17:06 TRACE: vdl/cache.battle.find : Invalid field access : count
31.08 16:17:06 TRACE: vdl/cache.battle.find : 
Called from modules/VDLCache.hx line 84
Called from modules/VDLCache.hx line 53
Called from snipe/cache/CacheServer.hx line 487
31.08 16:17:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => _requestException, _type => vdl/cache.battle.find }
31.08 16:19:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 16:19:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:19:16 TIME: core/cache.update : 0.18 ms
31.08 16:19:17 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:20:06 TIMER: Clans cache...
31.08 16:20:06 TIMER: Clans cache: 0ms
31.08 16:20:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 16:20:19 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:20:19 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 16:20:19 STATS: cache [user], database [194 calls, 1 reads, 1 writes]
31.08 16:20:19 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:20:19 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.92 ms]
31.08 16:20:19 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.16 ms]
31.08 16:20:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 16:20:19 TIME: core/cache.update : 0.5 ms
31.08 16:20:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 16:20:19 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:20:19 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 16:20:19 STATS: cache [questdata], database [194 calls, 1 reads, 0 writes]
31.08 16:20:19 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 16:20:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:20:19 TIME: core/cache.update : 0.53 ms
31.08 16:20:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 16:20:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 16:20:19 TIME: core/user.logoutPost : 0.19 ms
31.08 16:20:20 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:20:20 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 16:21:31 TIMER: Starting timer...
31.08 16:21:31 TIMER: Timer running...
31.08 16:21:31 DB: SELECT * FROM GameVars
31.08 16:21:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:21:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:21:31 DB: SELECT * FROM Shops WHERE ID = 1
31.08 16:21:31 TEMP: load ./tmp/quest_daily_ids
31.08 16:21:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 16:21:31 TEMP: save ./tmp/quest_daily_ids
31.08 16:21:31 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 16:21:31 QUEUE: vdl.0 (thread) response server.login
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM LocalizationStrings
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 5.52 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM GameVars
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.48 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.69 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.41 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.68 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.89 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 16:21:31 TIME: core/quest.getDaily : 0.06 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM UserAttributeTypes
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.65 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM UserVariableTypes
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.4 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 16:21:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 1.36 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM ItemGroups
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.66 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM Bundles ORDER BY ID
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.76 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.5 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 16:21:31 TIME: core/shop.getList : 0.31 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM EffectAttributeTypes
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.35 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM Effects
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.31 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 16:21:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.82 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 16:21:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.53 ms
31.08 16:21:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 16:21:31 DB: SELECT * FROM Badges
31.08 16:21:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:21:31 TIME: core/server.query : 0.31 ms
31.08 16:22:20 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 16:22:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 16:22:20 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:22:20 TIME: core/server.query : 2.64 ms
31.08 16:22:20 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 16:22:20 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 16:22:20 TIME: core/user.isOnlineID : 0.08 ms
31.08 16:22:20 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 16:22:20 READDB: SELECT * FROM Users WHERE ID = 2
31.08 16:22:20 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:22:20 TIME: core/cache.get : 3.54 ms
31.08 16:22:20 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 16:22:20 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 16:22:20 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:22:20 TIME: core/cache.get : 1.21 ms
31.08 16:22:20 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 16:22:20 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:22:20 TIME: core/user.loginPost : 0.1 ms
31.08 16:22:20 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 16:22:20 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:22:20 TRACE: vdl/cache.battle.find : Invalid field access : count
31.08 16:22:20 TRACE: vdl/cache.battle.find : 
Called from modules/VDLCache.hx line 82
Called from modules/VDLCache.hx line 53
Called from snipe/cache/CacheServer.hx line 487
31.08 16:22:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => _requestException, _type => vdl/cache.battle.find }
31.08 16:22:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 16:22:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:22:26 TIME: core/cache.update : 0.2 ms
31.08 16:22:27 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:24:02 TIMER: Starting timer...
31.08 16:24:02 TIMER: Timer running...
31.08 16:24:02 DB: SELECT * FROM GameVars
31.08 16:24:02 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:24:02 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:24:02 DB: SELECT * FROM Shops WHERE ID = 1
31.08 16:24:02 TEMP: load ./tmp/quest_daily_ids
31.08 16:24:02 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 16:24:02 TEMP: save ./tmp/quest_daily_ids
31.08 16:24:02 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 16:24:02 QUEUE: vdl.0 (thread) response server.login
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM LocalizationStrings
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 6.59 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM GameVars
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.52 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.65 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.36 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.63 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.8 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 16:24:02 TIME: core/quest.getDaily : 0.02 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM UserAttributeTypes
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.32 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM UserVariableTypes
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.51 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 16:24:02 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.94 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM ItemGroups
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.35 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM Bundles ORDER BY ID
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.52 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.4 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 16:24:02 TIME: core/shop.getList : 0.02 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM EffectAttributeTypes
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.55 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM Effects
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.51 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 16:24:02 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.57 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 16:24:02 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.82 ms
31.08 16:24:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 16:24:02 DB: SELECT * FROM Badges
31.08 16:24:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:02 TIME: core/server.query : 0.29 ms
31.08 16:24:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 16:24:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 16:24:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:24:53 TIME: core/server.query : 1.61 ms
31.08 16:24:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 16:24:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 16:24:53 TIME: core/user.isOnlineID : 0.06 ms
31.08 16:24:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 16:24:53 READDB: SELECT * FROM Users WHERE ID = 2
31.08 16:24:53 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:24:53 TIME: core/cache.get : 4.11 ms
31.08 16:24:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 16:24:53 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 16:24:53 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:24:53 TIME: core/cache.get : 1.39 ms
31.08 16:24:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 16:24:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:24:53 TIME: core/user.loginPost : 0.12 ms
31.08 16:24:53 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 16:24:53 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:24:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 16:24:53 TIME: vdl/cache.battle.find : 1.62 ms
31.08 16:24:53 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 16:24:53 DB: SELECT nextval('Battle_id_seq') AS id
31.08 16:24:53 READDB: SELECT ID FROM Battle WHERE ID = 1
31.08 16:24:53 READDB: INSERT INTO Battle (ID) VALUES (1)
31.08 16:24:53 READDB: SELECT * FROM Battle WHERE ID = 1
31.08 16:24:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 16:24:53 TIME: vdl/cache.battle.create : 28.27 ms
31.08 16:25:02 TIMER: Clans cache...
31.08 16:25:02 TIMER: Clans cache: 0ms
31.08 16:25:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 16:25:02 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:25:02 STATS: cache [user], segments [3 calls, 0 hits, 2 misses]
31.08 16:25:02 STATS: cache [user], database [61 calls, 1 reads, 0 writes]
31.08 16:25:02 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:25:02 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.67 ms]
31.08 16:25:02 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.12 ms]
31.08 16:25:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:25:02 TIME: core/cache.update : 0.23 ms
31.08 16:25:03 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:25:03 TIMER: Clans cache...
31.08 16:25:03 TIMER: Clans cache: 0ms
31.08 16:25:03 TIMER: Clans cache...
31.08 16:25:03 TIMER: Clans cache: 0ms
31.08 16:28:02 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 16:28:02 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:28:02 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 16:28:02 STATS: cache [user], database [241 calls, 1 reads, 1 writes]
31.08 16:28:02 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:28:02 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.67 ms]
31.08 16:28:02 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.17 ms]
31.08 16:28:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 16:28:02 TIME: core/cache.update : 0.42 ms
31.08 16:28:02 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 16:28:02 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:28:02 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 16:28:02 STATS: cache [questdata], database [241 calls, 1 reads, 0 writes]
31.08 16:28:02 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 16:28:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:28:02 TIME: core/cache.update : 0.29 ms
31.08 16:28:02 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 16:28:02 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 16:28:02 TIME: core/user.logoutPost : 0.14 ms
31.08 16:28:03 TIMER: Clans cache...
31.08 16:28:03 TIMER: Clans cache: 0ms
31.08 16:28:03 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:28:03 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 16:28:13 BLOCKREMOVE: user 2 removed
31.08 16:28:13 BLOCKREMOVE: questdata 2 removed
31.08 16:35:55 TIMER: Starting timer...
31.08 16:35:55 TIMER: Timer running...
31.08 16:35:55 DB: SELECT * FROM GameVars
31.08 16:35:55 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:35:55 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:35:55 DB: SELECT * FROM Shops WHERE ID = 1
31.08 16:35:55 TEMP: load ./tmp/quest_daily_ids
31.08 16:35:55 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 16:35:55 TEMP: save ./tmp/quest_daily_ids
31.08 16:35:55 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 16:35:55 QUEUE: vdl.0 (thread) response server.login
31.08 16:35:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 16:35:55 DB: SELECT * FROM LocalizationStrings
31.08 16:35:55 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:55 TIME: core/server.query : 6.85 ms
31.08 16:35:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM GameVars
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.49 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.78 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.41 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.52 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.82 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 16:35:56 TIME: core/quest.getDaily : 0.02 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM UserAttributeTypes
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.33 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM UserVariableTypes
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.33 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 16:35:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.89 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM ItemGroups
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.36 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM Bundles ORDER BY ID
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.47 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 16:35:56 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:35:56 TIME: core/server.query : 0.54 ms
31.08 16:35:56 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 16:35:56 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 16:35:56 TIME:31.08 16:46:47 TIMER: Starting timer...
31.08 16:46:47 DB: SELECT * FROM GameVars
31.08 16:46:47 TIMER: Timer running...
31.08 16:46:48 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:46:48 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:46:48 DB: SELECT * FROM Shops WHERE ID = 1
31.08 16:46:48 TEMP: load ./tmp/quest_daily_ids
31.08 16:46:48 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 16:46:48 TEMP: save ./tmp/quest_daily_ids
31.08 16:46:48 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 16:46:48 QUEUE: vdl.0 (thread) response server.login
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM LocalizationStrings
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 95.63 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM GameVars
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 0.73 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 2.7 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 1.35 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 1.23 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 12.95 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 16:46:48 TIME: core/quest.getDaily : 0.06 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM UserAttributeTypes
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 12.67 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM UserVariableTypes
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 1.78 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 16:46:48 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 45.63 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM ItemGroups
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 0.98 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM Bundles ORDER BY ID
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 41.46 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 23.64 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 16:46:48 TIME: core/shop.getList : 0.07 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM EffectAttributeTypes
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 4.52 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM Effects
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 1.22 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 16:46:48 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 1.68 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 16:46:48 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 1.28 ms
31.08 16:46:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 16:46:48 DB: SELECT * FROM Badges
31.08 16:46:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:46:48 TIME: core/server.query : 20.17 ms
31.08 16:46:48 TIMER: Clans cache...
31.08 16:46:48 TIMER: Clans cache: 0ms
31.08 16:46:48 TIMER: Clans cache...
31.08 16:46:48 TIMER: Clans cache: 0ms
31.08 16:49:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 16:49:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 16:49:12 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:49:12 TIME: core/server.query : 70.37 ms
31.08 16:49:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 16:49:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 16:49:12 TIME: core/user.isOnlineID : 0.04 ms
31.08 16:49:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 16:49:12 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:49:12 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 16:49:12 STATS: cache [user], database [145 calls, 0 reads, 0 writes]
31.08 16:49:12 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:49:12 READDB: SELECT * FROM Users WHERE ID = 2
31.08 16:49:12 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.09 ms]
31.08 16:49:12 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:49:12 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:49:12 TIME: core/cache.get : 2.2 ms
31.08 16:49:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 16:49:12 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:49:12 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 16:49:12 STATS: cache [questdata], database [145 calls, 0 reads, 0 writes]
31.08 16:49:12 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 16:49:12 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 16:49:12 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:49:12 TIME: core/cache.get : 55.49 ms
31.08 16:49:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 16:49:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:49:12 TIME: core/user.loginPost : 0.06 ms
31.08 16:49:12 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 16:49:12 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:49:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 16:49:12 TIME: vdl/cache.battle.find : 61.08 ms
31.08 16:49:12 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 16:49:12 DB: SELECT nextval('Battle_id_seq') AS id
31.08 16:49:13 READDB: SELECT ID FROM Battle WHERE ID = 2
31.08 16:49:13 READDB: INSERT INTO Battle (ID) VALUES (2)
31.08 16:49:13 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 16:49:13 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 16:49:13 STATS: cache [battle], database [145 calls, 0 reads, 0 writes]
31.08 16:49:13 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 16:49:13 READDB: SELECT * FROM Battle WHERE ID = 2
31.08 16:49:13 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.68 ms]
31.08 16:49:13 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:49:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 16:49:13 TIME: vdl/cache.battle.create : 139.81 ms
31.08 16:49:18 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 2
31.08 16:49:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 16:49:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:49:20 TIME: core/cache.update : 0.09 ms
31.08 16:49:20 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:49:48 TIMER: Clans cache...
31.08 16:49:48 TIMER: Clans cache: 0ms
31.08 16:50:24 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 16:50:24 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 16:50:24 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
31.08 16:50:24 TIME: core/server.query : 3.25 ms
31.08 16:50:24 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 16:50:24 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 16:50:24 TIME: core/user.isOnlineID : 0.16 ms
31.08 16:50:24 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 16:50:24 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:50:24 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 16:50:24 STATS: cache [user], database [216 calls, 1 reads, 1 writes]
31.08 16:50:24 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 16:50:24 READDB: SELECT * FROM Users WHERE ID = 3
31.08 16:50:24 STATS: cache manager [1], get [3 calls, total 0.06 sec spent, avg 19.65 ms]
31.08 16:50:24 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.03 ms]
31.08 16:50:24 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language =>   , networkid => , params => {}}, version => 0, id => 3 } }
31.08 16:50:24 TIME: core/cache.get : 5.63 ms
31.08 16:50:24 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 16:50:24 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:50:24 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 16:50:24 STATS: cache [questdata], database [216 calls, 1 reads, 0 writes]
31.08 16:50:24 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 16:50:24 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 16:50:24 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => notFound, _type => core/cache.get }
31.08 16:50:24 TIME: core/cache.get : 1.53 ms
31.08 16:50:24 NET: vdl.0 (thread) request core/cache.create { type => questdata, id => 3, _type => core/cache.create }
31.08 16:50:24 READDB: SELECT ID FROM UserQuests WHERE ID = 3
31.08 16:50:24 READDB: INSERT INTO UserQuests (ID) VALUES (3)
31.08 16:50:24 QUEUE: vdl.0 (thread) response core/cache.create { errorCode => ok, _type => core/cache.create }
31.08 16:50:24 TIME: core/cache.create : 18.95 ms
31.08 16:50:24 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 16:50:24 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 16:50:24 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 3 } }
31.08 16:50:24 TIME: core/cache.get : 1 ms
31.08 16:50:24 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 16:50:24 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:50:24 TIME: core/user.loginPost : 0.39 ms
31.08 16:50:24 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 3 AND Date = 'today'::timestamp, _type => core/server.query }
31.08 16:50:24 DB: SELECT ID FROM TempUserLogins WHERE UserID = 3 AND Date = 'today'::timestamp
31.08 16:50:24 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
31.08 16:50:24 TIME: core/server.query : 60.23 ms
31.08 16:50:24 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (3, 'today'::timestamp), _type => core/server.pending }} }
31.08 16:50:24 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:50:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 16:50:24 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (3, 'today'::timestamp)
31.08 16:50:24 TIME: vdl/cache.battle.find : 0.61 ms
31.08 16:50:24 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
31.08 16:50:24 DB: SELECT nextval('Battle_id_seq') AS id
31.08 16:50:24 READDB: SELECT ID FROM Battle WHERE ID = 3
31.08 16:50:24 READDB: INSERT INTO Battle (ID) VALUES (3)
31.08 16:50:24 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:50:24 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
31.08 16:50:24 STATS: cache [battle], database [216 calls, 1 reads, 1 writes]
31.08 16:50:24 STATS: cache [battle], lock [2 calls, 2 attempts, 0 failures]
31.08 16:50:24 READDB: SELECT * FROM Battle WHERE ID = 3
31.08 16:50:24 STATS: cache manager [0], get [2 calls, total 0 sec spent, avg 0.59 ms]
31.08 16:50:24 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 16:50:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 16:50:24 TIME: vdl/cache.battle.create : 25.1 ms
31.08 16:50:29 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 3
31.08 16:50:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 16:50:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:50:30 TIME: core/cache.update : 0.24 ms
31.08 16:50:30 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 16:50:48 TIMER: Clans cache...
31.08 16:50:48 TIMER: Clans cache: 0ms
31.08 16:50:48 TIMER: Clans cache...
31.08 16:50:48 TIMER: Clans cache: 0ms
31.08 16:50:48 TIMER: Clans cache...
31.08 16:50:48 TIMER: Clans cache: 0ms
31.08 16:50:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 16:50:48 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 16:50:48 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
31.08 16:50:48 STATS: cache [user], database [361 calls, 2 reads, 2 writes]
31.08 16:50:48 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 16:50:48 STATS: cache manager [1], get [5 calls, total 0.06 sec spent, avg 12.24 ms]
31.08 16:50:48 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.15 ms]
31.08 16:50:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 16:50:48 TIME: core/cache.update : 0.52 ms
31.08 16:50:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 16:50:48 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 1 not found]
31.08 16:50:48 STATS: cache [questdata], segments [8 calls, 0 hits, 7 misses]
31.08 16:50:48 STATS: cache [questdata], database [361 calls, 3 reads, 0 writes]
31.08 16:50:48 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
31.08 16:50:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:50:48 TIME: core/cache.update : 0.38 ms
31.08 16:50:48 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 16:50:48 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 16:50:48 TIME: core/user.logoutPost : 0.12 ms
31.08 16:52:49 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 16:52:49 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 16:52:59 BLOCKREMOVE: user 2 removed
31.08 16:52:59 BLOCKREMOVE: questdata 2 removed
31.08 16:53:48 TIMER: Clans cache...
31.08 16:53:48 TIMER: Clans cache: 0ms
31.08 16:53:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
31.08 16:53:48 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 16:53:48 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
31.08 16:53:48 STATS: cache [user], database [421 calls, 2 reads, 3 writes]
31.08 16:53:48 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 16:53:48 STATS: cache manager [1], get [5 calls, total 0.06 sec spent, avg 12.24 ms]
31.08 16:53:48 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.2 ms]
31.08 16:53:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 16:53:48 TIME: core/cache.update : 0.54 ms
31.08 16:53:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
31.08 16:53:48 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 1 not found]
31.08 16:53:48 STATS: cache [questdata], segments [10 calls, 2 hits, 7 misses]
31.08 16:53:48 STATS: cache [questdata], database [421 calls, 3 reads, 1 writes]
31.08 16:53:48 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
31.08 16:53:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:53:48 TIME: core/cache.update : 0.26 ms
31.08 16:53:48 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
31.08 16:53:48 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 16:53:48 TIME: core/user.logoutPost : 0.12 ms
31.08 16:53:49 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 16:53:49 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
31.08 16:57:40 TIMER: Starting timer...
31.08 16:57:40 TIMER: Timer running...
31.08 16:57:40 DB: SELECT * FROM GameVars
31.08 16:57:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:57:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:57:40 DB: SELECT * FROM Shops WHERE ID = 1
31.08 16:57:40 TEMP: load ./tmp/quest_daily_ids
31.08 16:57:40 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 16:57:40 TEMP: save ./tmp/quest_daily_ids
31.08 16:57:40 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 16:57:40 QUEUE: vdl.0 (thread) response server.login
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM LocalizationStrings
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 6.92 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM GameVars
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.61 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.78 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.4 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.68 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.86 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 16:57:40 TIME: core/quest.getDaily : 0.04 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM UserAttributeTypes
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.33 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM UserVariableTypes
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.3 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 16:57:40 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 1.21 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM ItemGroups
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.34 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM Bundles ORDER BY ID
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.66 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.37 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 16:57:40 TIME: core/shop.getList : 0.03 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM EffectAttributeTypes
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.45 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM Effects
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.42 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 16:57:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.54 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 16:57:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.68 ms
31.08 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 16:57:40 DB: SELECT * FROM Badges
31.08 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:57:40 TIME: core/server.query : 0.31 ms
31.08 16:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 16:58:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 16:58:32 QUEUE: vdl.0 (thread) response core/server.query
31.08 16:58:32 TIME: core/server.query : 3.02 ms
31.08 16:58:32 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 16:58:32 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 16:58:32 TIME: core/user.isOnlineID : 0.08 ms
31.08 16:58:32 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 16:58:32 READDB: SELECT * FROM Users WHERE ID = 2
31.08 16:58:32 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:58:32 TIME: core/cache.get : 3.99 ms
31.08 16:58:32 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 16:58:32 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 16:58:32 QUEUE: vdl.0 (thread) response core/cache.get
31.08 16:58:32 TIME: core/cache.get : 1.75 ms
31.08 16:58:32 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 16:58:32 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 16:58:32 TIME: core/user.loginPost : 0.16 ms
31.08 16:58:32 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 16:58:32 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 16:58:32 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true
31.08 16:58:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, errorCode => ok, _type => vdl/cache.battle.find }
31.08 16:58:32 TIME: vdl/cache.battle.find : 5.4 ms
31.08 16:58:40 TIMER: Clans cache...
31.08 16:58:40 TIMER: Clans cache: 0ms
31.08 16:58:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 16:58:40 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 16:58:40 STATS: cache [user], segments [3 calls, 0 hits, 2 misses]
31.08 16:58:40 STATS: cache [user], database [61 calls, 1 reads, 0 writes]
31.08 16:58:40 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 16:58:40 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.75 ms]
31.08 16:58:40 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.38 ms]
31.08 16:58:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 16:58:40 TIME: core/cache.update : 0.62 ms
31.08 16:58:41 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
