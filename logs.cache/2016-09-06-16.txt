06.09 16:55:32 TIMER: Starting timer...
06.09 16:55:32 DB: SELECT * FROM GameVars
06.09 16:55:32 TIMER: Timer running...
06.09 16:55:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
06.09 16:55:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
06.09 16:55:32 DB: SELECT * FROM Shops WHERE ID = 1
06.09 16:55:32 TEMP: load ./tmp/quest_daily_ids
06.09 16:55:32 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
06.09 16:55:32 TEMP: save ./tmp/quest_daily_ids
06.09 16:55:33 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
06.09 16:55:33 QUEUE: vdl.0 (thread) response server.login
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM LocalizationStrings
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 17.13 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM GameVars
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 1.65 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 7.35 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 3.88 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 2.33 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 2.34 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/quest.getDaily
06.09 16:55:33 TIME: core/quest.getDaily : 0.04 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM UserAttributeTypes
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 1.63 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM UserVariableTypes
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 1.02 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
06.09 16:55:33 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 3.3 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM ItemGroups
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 2.01 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM Bundles ORDER BY ID
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 2.88 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM BundleItems ORDER BY ID
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 1.73 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/shop.getList
06.09 16:55:33 TIME: core/shop.getList : 0.41 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM EffectAttributeTypes
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 4.4 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM Effects
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 1.52 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
06.09 16:55:33 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 3.01 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
06.09 16:55:33 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 3 ms
06.09 16:55:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
06.09 16:55:33 DB: SELECT * FROM Badges
06.09 16:55:33 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:33 TIME: core/server.query : 2.19 ms
06.09 16:55:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
06.09 16:55:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
06.09 16:55:42 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:55:42 TIME: core/server.query : 2.84 ms
06.09 16:55:42 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
06.09 16:55:42 QUEUE: vdl.0 (thread) response core/user.isOnlineID
06.09 16:55:42 TIME: core/user.isOnlineID : 0.13 ms
06.09 16:55:42 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
06.09 16:55:42 READDB: SELECT * FROM Users WHERE ID = 2
06.09 16:55:42 QUEUE: vdl.0 (thread) response core/cache.get
06.09 16:55:42 TIME: core/cache.get : 10.59 ms
06.09 16:55:42 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
06.09 16:55:42 READDB: SELECT * FROM UserQuests WHERE ID = 2
06.09 16:55:42 QUEUE: vdl.0 (thread) response core/cache.get
06.09 16:55:42 TIME: core/cache.get : 1.33 ms
06.09 16:55:42 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.35.21 }
06.09 16:55:42 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
06.09 16:55:42 TIME: core/user.loginPost : 0.51 ms
06.09 16:55:48 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
06.09 16:55:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
06.09 16:55:48 TIME: core/cache.update : 0.2 ms
06.09 16:55:48 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1473169154,"lastLoginDate":250,"lastLoadDate":907},"effects":{"list":[]}}' WHERE ID = 2
06.09 16:56:02 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
06.09 16:56:02 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
06.09 16:56:03 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
06.09 16:56:03 TIME: core/server.query : 129.11 ms
06.09 16:56:03 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
06.09 16:56:03 ROOM: deleted room 0
06.09 16:56:03 DB: DELETE FROM Battle WHERE ID = 0
06.09 16:56:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
06.09 16:56:03 TIME: vdl/cache.battle.deleteRoom : 1.43 ms
06.09 16:56:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
06.09 16:56:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
06.09 16:56:03 TIME: core/cache.update : 0.12 ms
06.09 16:56:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
06.09 16:56:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
06.09 16:56:03 TIME: core/cache.update : 0.16 ms
06.09 16:56:03 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
06.09 16:56:03 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
06.09 16:56:03 TIME: core/user.logoutPost : 0.12 ms
06.09 16:56:04 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1473169154,"lastLoginDate":250,"lastLoadDate":907},"effects":{"list":[]}}' WHERE ID = 2
06.09 16:56:04 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
06.09 16:56:14 BLOCKREMOVE: user 2 removed
06.09 16:56:14 BLOCKREMOVE: questdata 2 removed
06.09 16:59:50 TIMER: Starting timer...
06.09 16:59:50 DB: SELECT * FROM GameVars
06.09 16:59:50 TIMER: Timer running...
06.09 16:59:50 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
06.09 16:59:50 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
06.09 16:59:50 DB: SELECT * FROM Shops WHERE ID = 1
06.09 16:59:50 TEMP: load ./tmp/quest_daily_ids
06.09 16:59:50 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
06.09 16:59:50 TEMP: save ./tmp/quest_daily_ids
06.09 16:59:50 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
06.09 16:59:50 QUEUE: vdl.0 (thread) response server.login
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM LocalizationStrings
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 37.28 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM GameVars
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 1.58 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 7.32 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 3.09 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 1.98 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 3.59 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/quest.getDaily
06.09 16:59:50 TIME: core/quest.getDaily : 0.06 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM UserAttributeTypes
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 1.15 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM UserVariableTypes
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 1.05 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
06.09 16:59:50 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 2.63 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM ItemGroups
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 0.95 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM Bundles ORDER BY ID
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 1.16 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM BundleItems ORDER BY ID
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 0.91 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/shop.getList
06.09 16:59:50 TIME: core/shop.getList : 0.06 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM EffectAttributeTypes
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 1.14 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
06.09 16:59:50 DB: SELECT * FROM Effects
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 0.85 ms
06.09 16:59:50 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
06.09 16:59:50 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
06.09 16:59:50 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:50 TIME: core/server.query : 9.52 ms
06.09 16:59:51 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
06.09 16:59:51 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
06.09 16:59:51 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:51 TIME: core/server.query : 1.97 ms
06.09 16:59:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
06.09 16:59:51 DB: SELECT * FROM Badges
06.09 16:59:51 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:51 TIME: core/server.query : 1.21 ms
06.09 16:59:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
06.09 16:59:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
06.09 16:59:59 QUEUE: vdl.0 (thread) response core/server.query
06.09 16:59:59 TIME: core/server.query : 2.16 ms
06.09 16:59:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
06.09 16:59:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID
06.09 16:59:59 TIME: core/user.isOnlineID : 0.09 ms
06.09 16:59:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
06.09 16:59:59 READDB: SELECT * FROM Users WHERE ID = 2
06.09 16:59:59 QUEUE: vdl.0 (thread) response core/cache.get
06.09 16:59:59 TIME: core/cache.get : 5.61 ms
06.09 16:59:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
06.09 16:59:59 READDB: SELECT * FROM UserQuests WHERE ID = 2
06.09 16:59:59 QUEUE: vdl.0 (thread) response core/cache.get
06.09 16:59:59 TIME: core/cache.get : 3.11 ms
06.09 16:59:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.35.21 }
06.09 16:59:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
06.09 16:59:59 TIME: core/user.loginPost : 0.1 ms
