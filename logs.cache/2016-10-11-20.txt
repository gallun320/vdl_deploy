11.10 20:20:32 TIMER: Starting timer...
11.10 20:20:32 TIMER: Timer running...
11.10 20:20:32 DB: SELECT * FROM GameVars
11.10 20:20:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 20:20:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 20:20:32 DB: SELECT * FROM Shops WHERE ID = 1
11.10 20:20:32 TEMP: load ./tmp/quest_daily_ids
11.10 20:20:32 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 20:20:32 TEMP: save ./tmp/quest_daily_ids
11.10 20:20:32 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
11.10 20:20:32 QUEUE: vdl.0 (thread) response server.login
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 20:20:32 DB: SELECT * FROM LocalizationStrings
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:20:32 TIME: core/server.query : 10.22 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 20:20:32 DB: SELECT * FROM GameVars
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:20:32 TIME: core/server.query : 0.59 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 20:20:32 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:20:32 TIME: core/server.query : 0.86 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 20:20:32 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:20:32 TIME: core/server.query : 0.44 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 20:20:32 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:20:32 TIME: core/server.query : 0.74 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 20:20:32 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:20:32 TIME: core/server.query : 0.99 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/quest.getDaily
11.10 20:20:32 TIME: core/quest.getDaily : 0.03 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 20:20:32 DB: SELECT * FROM UserAttributeTypes
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:20:32 TIME: core/server.query : 0.73 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 20:20:32 DB: SELECT * FROM UserVariableTypes
11.10 20:20:32 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:20:32 TIME: core/server.query : 0.56 ms
11.10 20:20:32 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 20:20:32 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, 11.10 20:31:25 TIMER: Starting timer...
11.10 20:31:25 TIMER: Timer running...
11.10 20:31:25 DB: SELECT * FROM GameVars
11.10 20:31:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 20:31:25 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 20:31:25 DB: SELECT * FROM Shops WHERE ID = 1
11.10 20:31:25 TEMP: load ./tmp/quest_daily_ids
11.10 20:31:25 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 20:31:25 TEMP: save ./tmp/quest_daily_ids
11.10 20:31:25 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
11.10 20:31:25 QUEUE: vdl.0 (thread) response server.login
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM LocalizationStrings
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 21.09 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM GameVars
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 0.89 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.47 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.3 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.14 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.61 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/quest.getDaily
11.10 20:31:25 TIME: core/quest.getDaily : 0.03 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM UserAttributeTypes
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.06 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM UserVariableTypes
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 0.6 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 20:31:25 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.56 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM ItemGroups
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 0.57 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM Bundles ORDER BY ID
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.34 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 0.58 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/shop.getList
11.10 20:31:25 TIME: core/shop.getList : 0.09 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM EffectAttributeTypes
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 0.52 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM Effects
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.04 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
11.10 20:31:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.18 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
11.10 20:31:25 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 1.06 ms
11.10 20:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
11.10 20:31:25 DB: SELECT * FROM Badges
11.10 20:31:25 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:31:25 TIME: core/server.query : 0.45 ms
11.10 20:31:25 TIMER: Clans cache...
11.10 20:31:25 TIMER: Clans cache: 0ms
11.10 20:31:25 TIMER: Clans cache...
11.10 20:31:25 TIMER: Clans cache: 0ms
11.10 20:31:25 TIMER: Clans cache...
11.10 20:31:25 TIMER: Clans cache: 0ms
11.10 20:31:25 TIMER: Clans cache...
11.10 20:31:25 TIMER: Clans cache: 0ms
11.10 20:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
11.10 20:36:09 DB: SELECT * FROM users
11.10 20:36:09 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:36:09 TIME: core/server.query : 1.57 ms
11.10 20:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid9', _type => core/server.query }
11.10 20:36:09 DB: SELECT ID FROM Users WHERE Name = E'uid9'
11.10 20:36:09 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:36:09 TIME: core/server.query : 0.82 ms
11.10 20:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
11.10 20:36:09 DB: SELECT nextval('Users_id_seq') AS id
11.10 20:36:09 QUEUE: vdl.0 (thread) response core/server.query
11.10 20:36:09 TIME: core/server.query : 31.52 ms
11.10 20:36:09 NET: vdl.0 (thread) request core/user.register { password => uid9, name => uid9, fullParams => { game => vdl, password => uid9, name => uid9, networkid => , networktype => , messageType => user.register, id => 9 }, networkid => , connectionID => 3030461, networktype => , email => , id => 9, _type => core/user.register }
11.10 20:36:09 QUEUE: vdl.0 (thread) response core/user.register
11.10 20:36:09 TIME: core/user.register : 0.04 ms
11.10 20:36:09 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (9,E'uid9',E'',E'',E'uid9',E'', now())
11.10 20:36:09 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (9, 0)
11.10 20:36:09 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 20:36:09 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
11.10 20:36:09 STATS: cache [user], database [284 calls, 0 reads, 0 writes]
11.10 20:36:09 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
11.10 20:36:09 READDB: SELECT * FROM Users WHERE ID = 9
11.10 20:36:09 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.4 ms]
11.10 20:36:09 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
11.10 20:36:09 READDB: SELECT * FROM Users WHERE ID = 1
11.10 20:36:09 READDB: SELECT ID FROM UserQuests WHERE ID = 9
11.10 20:36:09 READDB: INSERT INTO UserQuests (ID) VALUES (9)
11.10 20:36:09 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid9, name => uid9, _isNotify => true, fullParams => { game => vdl, password => uid9, name => uid9, networkid => , networktype => , messageType => user.register, id => 9 }, networkid => , connectionID => 3030461, networktype => , email => , id => 9, _type => core/user.registerResponse }
11.10 20:36:14 WRITEDB: UPDATE Users SET name = E'uid9', deleted = E'false', email = E'', networktype = E'  ', password = E'uid9', isbanned = E'false', regdate = E'2016-10-11 20:36:09.090394+03', language = E'  ', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}' WHERE ID = 9
11.10 20:36:19 BLOCKREMOVE: user 1 removed
11.10 20:36:24 BLOCKREMOVE: user 9 removed
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:36:25 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
11.10 20:36:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
11.10 20:36:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
11.10 20:36:25 TIME: core/server.query : 1.13 ms
11.10 20:36:25 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
11.10 20:36:25 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
11.10 20:36:25 TIME: core/user.isOnlineID : 0.04 ms
11.10 20:36:25 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
11.10 20:36:25 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
11.10 20:36:25 STATS: cache [user], segments [6 calls, 2 hits, 3 misses]
11.10 20:36:25 STATS: cache [user], database [1080 calls, 2 reads, 1 writes]
11.10 20:36:25 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
11.10 20:36:25 READDB: SELECT * FROM Users WHERE ID = 2
11.10 20:36:25 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.48 ms]
11.10 20:36:25 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.06 ms]
11.10 20:36:25 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476204122, lastLoginDate => 285, lastLoadDate => 1012 }, effects => { list => [] } }}, version => 0, id => 2 } }
11.10 20:36:25 TIME: core/cache.get : 0.79 ms
11.10 20:36:25 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
11.10 20:36:25 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 20:36:25 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
11.10 20:36:25 STATS: cache [questdata], database [1080 calls, 0 reads, 0 writes]
11.10 20:36:25 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
11.10 20:36:25 READDB: SELECT * FROM UserQuests WHERE ID = 2
11.10 20:36:25 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
11.10 20:36:25 TIME: core/cache.get : 0.49 ms
11.10 20:36:25 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
11.10 20:36:25 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
11.10 20:36:25 TIME: core/user.loginPost : 0.06 ms
11.10 20:36:25 TIMER: Clans cache...
11.10 20:36:25 TIMER: Clans cache: 0ms
11.10 20:49:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
11.10 20:49:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
11.10 20:49:30 TIME: core/cache.update : 0.13 ms
11.10 20:49:31 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476204122,"lastLoginDate":285,"lastLoadDate":1012},"effects":{"list":[]}}' WHERE ID = 2
11.10 20:49:32 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
11.10 20:49:32 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
11.10 20:49:32 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => , id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
11.10 20:49:32 TIME: vdl/cache.tournament.getAvailableTournament : 1.22 ms
11.10 20:50:25 TIMER: Clans cache...
11.10 20:50:25 TIMER: Clans cache: 0ms
11.10 20:50:25 TIMER: Clans cache...
11.10 20:50:25 TIMER: Clans cache: 0ms
11.10 20:52:00 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
11.10 20:52:00 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
11.10 20:52:00 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 20:52:00 TIME: core/server.query : 0.83 ms
11.10 20:52:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
11.10 20:52:00 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 20:52:00 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
11.10 20:52:00 STATS: cache [battle], database [1235 calls, 0 reads, 0 writes]
11.10 20:52:00 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
11.10 20:52:00 READDB: SELECT * FROM Battle WHERE ID = 0
11.10 20:52:00 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
11.10 20:52:00 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 97
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
11.10 20:52:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
11.10 20:52:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
11.10 20:52:00 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
11.10 20:52:00 STATS: cache [user], segments [9 calls, 3 hits, 5 misses]
11.10 20:52:00 STATS: cache [user], database [1235 calls, 3 reads, 2 writes]
11.10 20:52:00 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
11.10 20:52:00 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 1.14 ms]
11.10 20:52:00 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.08 ms]
11.10 20:52:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
11.10 20:52:00 TIME: core/cache.update : 0.28 ms
11.10 20:52:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
11.10 20:52:00 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
11.10 20:52:00 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
11.10 20:52:00 STATS: cache [questdata], database [1235 calls, 1 reads, 0 writes]
11.10 20:52:00 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
11.10 20:52:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
11.10 20:52:00 TIME: core/cache.update : 0.31 ms
11.10 20:52:00 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
11.10 20:52:00 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
11.10 20:52:00 TIME: core/user.logoutPost : 0.08 ms
11.10 20:52:00 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476204122,"lastLoginDate":285,"lastLoadDate":1012},"effects":{"list":[]}}' WHERE ID = 2
11.10 20:52:00 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
11.10 20:52:08 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
11.10 20:52:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
11.10 20:52:08 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
11.10 20:52:08 TIME: core/server.query : 1.11 ms
11.10 20:52:08 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
11.10 20:52:08 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
11.10 20:52:08 TIME: core/user.isOnlineID : 0.05 ms
11.10 20:52:08 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
11.10 20:52:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476204122, lastLoginDate => 285, lastLoadDate => 1012 }, effects => { list => [] } }}, version => 2, id => 2 } }
11.10 20:52:08 TIME: core/cache.get : 0.18 ms
11.10 20:52:08 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
11.10 20:52:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 2 } }
11.10 20:52:08 TIME: core/cache.get : 0.1 ms
11.10 20:52:08 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
11.10 20:52:08 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
11.10 20:52:08 TIME: core/user.loginPost : 0.06 ms
11.10 20:52:15 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
11.10 20:52:15 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
11.10 20:52:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, round => 1, params => , id => 1, status => starting, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
11.10 20:52:15 TIME: vdl/cache.tournament.getAvailableTournament : 0.62 ms
11.10 20:52:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
11.10 20:52:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
11.10 20:52:15 TIME: core/cache.update : 0.09 ms
11.10 20:52:16 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476204122,"lastLoginDate":285,"lastLoadDate":1012},"effects":{"list":[]}}' WHERE ID = 2
11.10 20:52:25 TIMER: Clans cache...
11.10 20:52:25 TIMER: Clans cache: 0ms
11.10 20:52:53 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
11.10 20:52:53 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
11.10 20:52:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 20:52:53 TIME: core/server.query : 0.89 ms
11.10 20:52:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
11.10 20:52:53 READDB: SELECT * FROM Battle WHERE ID = 0
11.10 20:52:53 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
11.10 20:52:53 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 97
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
11.10 20:52:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
11.10 20:52:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
11.10 20:52:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
11.10 20:52:53 TIME: core/cache.update : 0.08 ms
11.10 20:52:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
11.10 20:52:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
11.10 20:52:53 TIME: core/cache.update : 0.08 ms
11.10 20:52:53 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
11.10 20:52:53 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
11.10 20:52:53 TIME: core/user.logoutPost : 0.06 ms
11.10 20:52:53 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476204122,"lastLoginDate":285,"lastLoadDate":1012},"effects":{"list":[]}}' WHERE ID = 2
11.10 20:52:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
11.10 20:53:03 BLOCKREMOVE: user 2 removed
11.10 20:53:03 BLOCKREMOVE: questdata 2 removed
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM tournament WHERE startdate = 1476208.88587932AND winner = -1 AND status = 'starting', _type => core/server.query }
11.10 20:53:25 DB: SELECT * FROM tournament WHERE startdate = 1476208.88587932AND winner = -1 AND status = 'starting'
11.10 20:53:25 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 20:53:25 TIME: core/server.query : 31.76 ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
11.10 20:53:25 TIMER: Clans cache...
11.10 20:53:25 TIMER: Clans cache: 0ms
