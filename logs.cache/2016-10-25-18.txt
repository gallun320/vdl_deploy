25.10 18:08:16 TIMER: Starting timer...
25.10 18:08:16 TIMER: Timer running...
25.10 18:08:16 DB: SELECT * FROM GameVars
25.10 18:08:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 18:08:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 18:08:16 DB: SELECT * FROM Shops WHERE ID = 1
25.10 18:08:16 TEMP: load ./tmp/quest_daily_ids
25.10 18:08:16 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
25.10 18:08:16 TEMP: save ./tmp/quest_daily_ids
25.10 18:08:16 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 18:08:16 QUEUE: vdl.0 (thread) response server.login
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM LocalizationStrings
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 5.48 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM GameVars
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.68 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.84 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.56 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.47 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 1 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/quest.getDaily
25.10 18:08:16 TIME: core/quest.getDaily : 0.02 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM UserAttributeTypes
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.3 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM UserVariableTypes
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.38 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 18:08:16 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.97 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM ItemGroups
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.37 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM Bundles ORDER BY ID
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.44 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.47 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/shop.getList
25.10 18:08:16 TIME: core/shop.getList : 0.02 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM EffectAttributeTypes
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.31 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM Effects
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.31 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 18:08:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.84 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 18:08:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.48 ms
25.10 18:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 18:08:16 DB: SELECT * FROM Badges
25.10 18:08:16 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:08:16 TIME: core/server.query : 0.45 ms
25.10 18:08:16 TIMER: Clans cache...
25.10 18:08:16 TIMER: Clans cache: 0ms
25.10 18:08:16 TIMER: Check tournament...
25.10 18:08:16 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:09' OR rounddate = '2016-25-10 18:09' AND status <> 'finished'
25.10 18:08:16 TIMER: Check tournament: 1ms
25.10 18:08:16 TIMER: Clans cache...
25.10 18:08:16 TIMER: Clans cache: 0ms
25.10 18:08:16 TIMER: Check tournament...
25.10 18:08:16 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:10' OR rounddate = '2016-25-10 18:10' AND status <> 'finished'
25.10 18:08:16 TIMER: Check tournament: 1ms
25.10 18:08:16 TIMER: Clans cache...
25.10 18:08:16 TIMER: Clans cache: 0ms
25.10 18:08:16 TIMER: Check tournament...
25.10 18:08:16 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:11' OR rounddate = '2016-25-10 18:11' AND status <> 'finished'
25.10 18:08:16 TIMER: Check tournament: 1ms
25.10 18:08:16 TIMER: Clans cache...
25.10 18:08:16 TIMER: Clans cache25.10 18:32:04 TIMER: Starting timer...
25.10 18:32:04 TIMER: Timer running...
25.10 18:32:04 DB: SELECT * FROM GameVars
25.10 18:32:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 18:32:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 18:32:04 DB: SELECT * FROM Shops WHERE ID = 1
25.10 18:32:04 TEMP: load ./tmp/quest_daily_ids
25.10 18:32:04 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
25.10 18:32:04 TEMP: save ./tmp/quest_daily_ids
25.10 18:32:04 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 18:32:04 QUEUE: vdl.0 (thread) response server.login
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM LocalizationStrings
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 8.14 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM GameVars
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.59 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.76 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.47 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.61 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.88 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/quest.getDaily
25.10 18:32:04 TIME: core/quest.getDaily : 0.03 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM UserAttributeTypes
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.44 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM UserVariableTypes
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.3 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 18:32:04 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 1.02 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM ItemGroups
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.33 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM Bundles ORDER BY ID
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.49 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.56 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/shop.getList
25.10 18:32:04 TIME: core/shop.getList : 0.02 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM EffectAttributeTypes
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.3 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM Effects
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.36 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 18:32:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.58 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 18:32:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.94 ms
25.10 18:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 18:32:04 DB: SELECT * FROM Badges
25.10 18:32:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:04 TIME: core/server.query : 0.44 ms
25.10 18:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 18:32:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 18:32:08 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:32:08 TIME: core/server.query : 2.83 ms
25.10 18:32:08 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 18:32:08 QUEUE: vdl.0 (thread) response core/user.isOnlineID
25.10 18:32:08 TIME: core/user.isOnlineID : 0.13 ms
25.10 18:32:08 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 18:32:08 READDB: SELECT * FROM Users WHERE ID = 94
25.10 18:32:08 QUEUE: vdl.0 (thread) response core/cache.get
25.10 18:32:08 TIME: core/cache.get : 3.81 ms
25.10 18:32:08 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 18:32:08 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 18:32:08 QUEUE: vdl.0 (thread) response core/cache.get
25.10 18:32:08 TIME: core/cache.get : 1.43 ms
25.10 18:32:08 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 18:32:08 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 18:32:08 TIME: core/user.loginPost : 0.2 ms
25.10 18:32:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 18:32:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:32:14 TIME: core/cache.update : 0.07 ms
25.10 18:32:15 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 18:32:55 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
25.10 18:32:55 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
25.10 18:32:55 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 18:32:55 TIME: core/server.query : 1.74 ms
25.10 18:32:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 18:32:55 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 18:32:55 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 18:32:55 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 97
Called from snipe/cache/CacheServer.hx line 487
25.10 18:32:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 18:32:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
25.10 18:32:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 18:32:55 TIME: core/cache.update : 0.16 ms
25.10 18:32:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
25.10 18:32:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:32:55 TIME: core/cache.update : 0.2 ms
25.10 18:32:55 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
25.10 18:32:55 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 18:32:55 TIME: core/user.logoutPost : 0.16 ms
25.10 18:32:56 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 18:32:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
25.10 18:33:04 TIMER: Clans cache...
25.10 18:33:04 TIMER: Clans cache: 0ms
25.10 18:33:04 TIMER: Check tournament...
25.10 18:33:04 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:33' OR rounddate = '2016-25-10 18:33' AND status <> 'finished'
25.10 18:33:04 TIMER: Check tournament: 1ms
25.10 18:33:06 BLOCKREMOVE: user 94 removed
25.10 18:33:06 BLOCKREMOVE: questdata 94 removed
25.10 18:33:27 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 18:33:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 18:33:27 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 18:33:27 TIME: core/server.query : 3.03 ms
25.10 18:33:27 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 18:33:27 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 18:33:27 TIME: core/user.isOnlineID : 0.12 ms
25.10 18:33:27 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 18:33:27 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 18:33:27 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
25.10 18:33:27 STATS: cache [user], database [84 calls, 1 reads, 2 writes]
25.10 18:33:27 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
25.10 18:33:27 READDB: SELECT * FROM Users WHERE ID = 94
25.10 18:33:27 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.2 ms]
25.10 18:33:27 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.06 ms]
25.10 18:33:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 18:33:27 TIME: core/cache.get : 2.34 ms
25.10 18:33:27 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 18:33:27 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 18:33:27 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
25.10 18:33:27 STATS: cache [questdata], database [84 calls, 1 reads, 1 writes]
25.10 18:33:27 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
25.10 18:33:27 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 18:33:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 18:33:27 TIME: core/cache.get : 1.37 ms
25.10 18:33:27 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 18:33:27 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 18:33:27 TIME: core/user.loginPost : 0.1 ms
25.10 18:33:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 18:33:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:33:34 TIME: core/cache.update : 0.09 ms
25.10 18:33:35 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 18:33:56 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:33:56 DB: SELECT * FROM tournament
25.10 18:33:56 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 18:33:56 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
25.10 18:33:56 STATS: cache [tournament], database [113 calls, 0 reads, 0 writes]
25.10 18:33:56 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:33:56 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:33:56 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [78,79], round => 2, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 18:37, startdate => 2016-25-10 18:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:33:56 TIME: vdl/cache.tournament.getAvailableTournament : 4.27 ms
25.10 18:34:02 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 18:34:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 18:34:02 TIME: vdl/cache.tournament.addUsers : 0.19 ms
25.10 18:34:02 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-25-10 18:37', roundinterval = E'60', params = E'{"params":{"battleFinished":[78,79],"usersList":[94],"battleActive":[]}}', rounddate = E'2016-25-10 18:37' WHERE ID = 1
25.10 18:34:04 TIMER: Clans cache...
25.10 18:34:04 TIMER: Clans cache: 0ms
25.10 18:34:04 TIMER: Check tournament...
25.10 18:34:04 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:34' OR rounddate = '2016-25-10 18:34' AND status <> 'finished'
25.10 18:34:04 TIMER: Check tournament: 1ms
25.10 18:34:12 BLOCKREMOVE: tournament 1 removed
25.10 18:34:23 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:34:23 DB: SELECT * FROM tournament
25.10 18:34:23 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:34:23 DB: SELECT name FROM users WHERE id = 94
25.10 18:34:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [78,79], round => 2, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 18:37, startdate => 2016-25-10 18:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:34:23 TIME: vdl/cache.tournament.getAvailableTournament : 4.57 ms
25.10 18:34:33 BLOCKREMOVE: tournament 1 removed
25.10 18:35:04 TIMER: Clans cache...
25.10 18:35:04 TIMER: Clans cache: 0ms
25.10 18:35:04 TIMER: Check tournament...
25.10 18:35:04 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:35' OR rounddate = '2016-25-10 18:35' AND status <> 'finished'
25.10 18:35:04 TIMER: Check tournament: 0ms
25.10 18:35:04 TIMER: Clans cache...
25.10 18:35:04 TIMER: Clans cache: 0ms
25.10 18:35:04 TIMER: Check tournament...
25.10 18:35:04 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:36' OR rounddate = '2016-25-10 18:36' AND status <> 'finished'
25.10 18:35:04 TIMER: Check tournament: 0ms
25.10 18:36:39 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 18:36:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 18:36:39 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 18:36:39 TIME: core/server.query : 2.21 ms
25.10 18:36:39 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 18:36:39 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 18:36:39 TIME: core/user.isOnlineID : 0.05 ms
25.10 18:36:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 18:36:39 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:36:39 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
25.10 18:36:39 STATS: cache [user], database [275 calls, 2 reads, 3 writes]
25.10 18:36:39 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
25.10 18:36:39 READDB: SELECT * FROM Users WHERE ID = 95
25.10 18:36:39 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.84 ms]
25.10 18:36:39 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.05 ms]
25.10 18:36:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 95 } }
25.10 18:36:39 TIME: core/cache.get : 1.81 ms
25.10 18:36:39 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 18:36:39 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:36:39 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
25.10 18:36:39 STATS: cache [questdata], database [275 calls, 2 reads, 1 writes]
25.10 18:36:39 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
25.10 18:36:39 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 18:36:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
25.10 18:36:39 TIME: core/cache.get : 1.24 ms
25.10 18:36:39 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 18:36:39 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 18:36:39 TIME: core/user.loginPost : 0.08 ms
25.10 18:36:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 18:36:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:36:44 TIME: core/cache.update : 0.16 ms
25.10 18:36:44 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 18:36:45 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:36:45 DB: SELECT * FROM tournament
25.10 18:36:45 STATS: cache [tournament], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:36:45 STATS: cache [tournament], segments [5 calls, 2 hits, 2 misses]
25.10 18:36:45 STATS: cache [tournament], database [282 calls, 2 reads, 1 writes]
25.10 18:36:45 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:36:45 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:36:45 DB: SELECT name FROM users WHERE id = 94
25.10 18:36:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [78,79], round => 2, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 18:37, startdate => 2016-25-10 18:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:36:45 TIME: vdl/cache.tournament.getAvailableTournament : 4.79 ms
25.10 18:36:49 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 18:36:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 18:36:49 TIME: vdl/cache.tournament.addUsers : 0.18 ms
25.10 18:36:49 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:36:49 DB: SELECT * FROM tournament
25.10 18:36:49 DB: SELECT name FROM users WHERE id = 94
25.10 18:36:49 DB: SELECT name FROM users WHERE id = 95
25.10 18:36:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [78,79], round => 2, id => 1, status => starting, userList => [{ name => uid94, id => 94 },{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:37, startdate => 2016-25-10 18:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:36:49 TIME: vdl/cache.tournament.getAvailableTournament : 2.72 ms
25.10 18:36:51 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-25-10 18:37', roundinterval = E'60', params = E'{"params":{"battleFinished":[78,79],"usersList":[94,95],"battleActive":[]}}', rounddate = E'2016-25-10 18:37' WHERE ID = 1
25.10 18:37:01 BLOCKREMOVE: tournament 1 removed
25.10 18:37:04 TIMER: Clans cache...
25.10 18:37:04 TIMER: Clans cache: 0ms
25.10 18:37:04 TIMER: Check tournament...
25.10 18:37:04 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:37' OR rounddate = '2016-25-10 18:37' AND status <> 'finished'
25.10 18:37:04 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:37:04 TRACE: Check tournament timer exception:
25.10 18:37:04 TRACE: Invalid field access : battles

25.10 18:37:04 TIMER: Check tournament: 1ms
25.10 18:37:14 BLOCKREMOVE: tournament 1 removed
25.10 18:41:26 TIMER: Starting timer...
25.10 18:41:26 TIMER: Timer running...
25.10 18:41:26 DB: SELECT * FROM GameVars
25.10 18:41:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 18:41:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 18:41:26 DB: SELECT * FROM Shops WHERE ID = 1
25.10 18:41:26 TEMP: load ./tmp/quest_daily_ids
25.10 18:41:26 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
25.10 18:41:26 TEMP: save ./tmp/quest_daily_ids
25.10 18:41:26 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 18:41:26 QUEUE: vdl.0 (thread) response server.login
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM LocalizationStrings
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 8.13 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM GameVars
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.7 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.78 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.65 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.76 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 1.27 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/quest.getDaily
25.10 18:41:26 TIME: core/quest.getDaily : 0.03 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM UserAttributeTypes
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.79 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM UserVariableTypes
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.51 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 18:41:26 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 1.56 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM ItemGroups
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.59 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM Bundles ORDER BY ID
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.68 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.64 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/shop.getList
25.10 18:41:26 TIME: core/shop.getList : 0.03 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM EffectAttributeTypes
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.62 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM Effects
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.95 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 18:41:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 3.26 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 18:41:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 1.25 ms
25.10 18:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 18:41:26 DB: SELECT * FROM Badges
25.10 18:41:26 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:41:26 TIME: core/server.query : 0.53 ms
25.10 18:42:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 18:42:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 18:42:06 QUEUE: vdl.0 (thread) response core/server.query
25.10 18:42:06 TIME: core/server.query : 1.81 ms
25.10 18:42:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 18:42:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID
25.10 18:42:06 TIME: core/user.isOnlineID : 0.05 ms
25.10 18:42:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 18:42:06 READDB: SELECT * FROM Users WHERE ID = 95
25.10 18:42:06 QUEUE: vdl.0 (thread) response core/cache.get
25.10 18:42:06 TIME: core/cache.get : 4.57 ms
25.10 18:42:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 18:42:06 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 18:42:06 QUEUE: vdl.0 (thread) response core/cache.get
25.10 18:42:06 TIME: core/cache.get : 0.94 ms
25.10 18:42:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 18:42:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 18:42:06 TIME: core/user.loginPost : 0.09 ms
25.10 18:42:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 18:42:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:42:16 TIME: core/cache.update : 0.12 ms
25.10 18:42:17 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 18:42:26 TIMER: Clans cache...
25.10 18:42:26 TIMER: Clans cache: 0ms
25.10 18:42:26 TIMER: Check tournament...
25.10 18:42:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:42' OR rounddate = '2016-25-10 18:42' AND status <> 'finished'
25.10 18:42:26 TIMER: Check tournament: 2ms
25.10 18:42:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 18:42:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 18:42:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 18:42:58 TIME: core/server.query : 1.67 ms
25.10 18:42:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 18:42:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 18:42:58 TIME: core/user.isOnlineID : 0.06 ms
25.10 18:42:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 18:42:58 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 18:42:58 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
25.10 18:42:58 STATS: cache [user], database [93 calls, 1 reads, 1 writes]
25.10 18:42:58 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
25.10 18:42:58 READDB: SELECT * FROM Users WHERE ID = 94
25.10 18:42:58 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.16 ms]
25.10 18:42:58 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.04 ms]
25.10 18:42:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 18:42:58 TIME: core/cache.get : 1.35 ms
25.10 18:42:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 18:42:58 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 18:42:58 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
25.10 18:42:58 STATS: cache [questdata], database [93 calls, 1 reads, 0 writes]
25.10 18:42:58 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
25.10 18:42:58 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 18:42:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 18:42:58 TIME: core/cache.get : 0.75 ms
25.10 18:42:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 18:42:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 18:42:58 TIME: core/user.loginPost : 0.05 ms
25.10 18:43:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 18:43:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:43:06 TIME: core/cache.update : 0.14 ms
25.10 18:43:07 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 18:43:15 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:43:15 DB: SELECT * FROM tournament
25.10 18:43:15 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 18:43:15 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
25.10 18:43:15 STATS: cache [tournament], database [110 calls, 0 reads, 0 writes]
25.10 18:43:15 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:43:15 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:43:15 DB: SELECT name FROM users WHERE id = 94
25.10 18:43:15 DB: SELECT name FROM users WHERE id = 95
25.10 18:43:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [78,79], round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 },{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:44, startdate => 2016-25-10 18:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:43:15 TIME: vdl/cache.tournament.getAvailableTournament : 6.81 ms
25.10 18:43:25 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 18:43:25 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 18:43:25 TIME: vdl/cache.tournament.getStatus : 0.17 ms
25.10 18:43:25 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 18:43:25 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [94,95] }
25.10 18:43:25 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.22 ms
25.10 18:43:25 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
25.10 18:43:25 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 18:43:25 TIME: vdl/cache.tournament.setGrid : 0.19 ms
25.10 18:43:26 TIMER: Clans cache...
25.10 18:43:26 TIMER: Clans cache: 0ms
25.10 18:43:26 TIMER: Check tournament...
25.10 18:43:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:43' OR rounddate = '2016-25-10 18:43' AND status <> 'finished'
25.10 18:43:26 TIMER: Check tournament: 1ms
25.10 18:43:35 BLOCKREMOVE: tournament 1 removed
25.10 18:44:26 TIMER: Clans cache...
25.10 18:44:26 TIMER: Clans cache: 0ms
25.10 18:44:26 TIMER: Check tournament...
25.10 18:44:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:44' OR rounddate = '2016-25-10 18:44' AND status <> 'finished'
25.10 18:44:26 STATS: cache [tournament], get [4 calls, 2 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 18:44:26 STATS: cache [tournament], segments [5 calls, 3 hits, 1 misses]
25.10 18:44:26 STATS: cache [tournament], database [180 calls, 1 reads, 0 writes]
25.10 18:44:26 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:44:26 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:44:26 DB: SELECT nextval('Battle_id_seq') AS id
25.10 18:44:26 READDB: SELECT ID FROM Battle WHERE ID = 80
25.10 18:44:26 READDB: INSERT INTO Battle (ID) VALUES (80)
25.10 18:44:26 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 18:44:26 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
25.10 18:44:26 STATS: cache [battle], database [181 calls, 0 reads, 0 writes]
25.10 18:44:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 18:44:26 READDB: SELECT * FROM Battle WHERE ID = 80
25.10 18:44:26 DB: SELECT name FROM users WHERE id=95
25.10 18:44:26 DB: SELECT name FROM users WHERE id=94
25.10 18:44:26 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 18:44, id => 95, enemy.num => 2, battleId => 80, player => 1 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
25.10 18:44:26 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-25-10 18:44, id => 94, enemy.num => 1, battleId => 80, player => 2 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
25.10 18:44:26 TIMER: Check tournament: 52ms
25.10 18:44:31 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 18:44', roundinterval = E'60', params = E'{"params":{"battleFinished":[78,79],"usersList":[94,95],"battleActive":[80]}}', rounddate = E'2016-25-10 18:44' WHERE ID = 1
25.10 18:44:32 WRITEDB: UPDATE Battle SET secondid = E'94', turnid = E'95', finished = E'false', firstid = E'95', params = E'{}', avaliable = E'false' WHERE ID = 80
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 18:44:37 TIME: vdl/cache.tournament.getStatus : 0.16 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [80]
25.10 18:44:37 TIME: vdl/cache.tournament.getBattlesTournaments : 0.19 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [94,95] }
25.10 18:44:37 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.23 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 80, _type => vdl/cache.battle.finishRoom }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
25.10 18:44:37 TIME: vdl/cache.battle.finishRoom : 0.19 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 80, _type => vdl/cache.battle.deleteRoom }
25.10 18:44:37 ROOM: deleted room 80
25.10 18:44:37 DB: DELETE FROM Battle WHERE ID = 80
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 18:44:37 TIME: vdl/cache.battle.deleteRoom : 14.43 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [80] }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
25.10 18:44:37 TIME: vdl/cache.tournament.setBattlesTournaments : 0.18 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [95], _type => vdl/cache.tournament.setUsersTournament }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
25.10 18:44:37 TIME: vdl/cache.tournament.setUsersTournament : 0.13 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 95, round => 1, player1 => 95, player2 => 94 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 18:44:37 TIME: vdl/cache.tournament.setGrid : 0.11 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-25-10 18:44, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound, status => finished }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => ok, _type => vdl/cache.tournament.addRound }
25.10 18:44:37 TIME: vdl/cache.tournament.addRound : 0.12 ms
25.10 18:44:37 NET: vdl.0 (thread) request vdl/cache.tournament.finish { winner => 95, tournamentId => 1, _type => vdl/cache.tournament.finish }
25.10 18:44:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
25.10 18:44:37 TIME: vdl/cache.tournament.finish : 0.16 ms
25.10 18:44:38 WRITEDB: UPDATE Battle SET secondid = E'94', turnid = E'95', finished = E'true', firstid = E'95', params = E'{}', avaliable = E'false' WHERE ID = 80
25.10 18:44:38 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'95', status = E'finished', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-25-10 18:44', roundinterval = E'60', params = E'{"params":{"battleFinished":[78,79,80],"usersList":[95],"battleActive":[]}}', rounddate = E'2016-25-10 18:44' WHERE ID = 1
25.10 18:44:44 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:44:44 DB: SELECT * FROM tournament
25.10 18:44:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [78,79,80], round => 2, id => 1, status => finished, userList => [{ name => uid94, id => 94 },{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:44, startdate => 2016-25-10 18:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:44:44 TIME: vdl/cache.tournament.getAvailableTournament : 3.04 ms
25.10 18:44:48 BLOCKREMOVE: battle 80 removed
25.10 18:44:49 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 18:44:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 18:44:49 TIME: vdl/cache.tournament.getStatus : 0.11 ms
25.10 18:44:49 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 2, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 18:44:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 18:44:49 TIME: vdl/cache.tournament.setGrid : 0.13 ms
25.10 18:44:59 BLOCKREMOVE: tournament 1 removed
25.10 18:45:26 TIMER: Clans cache...
25.10 18:45:26 TIMER: Clans cache: 0ms
25.10 18:45:26 TIMER: Check tournament...
25.10 18:45:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:45' OR rounddate = '2016-25-10 18:45' AND status <> 'finished'
25.10 18:45:26 TIMER: Check tournament: 0ms
25.10 18:45:26 TIMER: Clans cache...
25.10 18:45:26 TIMER: Clans cache: 0ms
25.10 18:45:26 TIMER: Check tournament...
25.10 18:45:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:46' OR rounddate = '2016-25-10 18:46' AND status <> 'finished'
25.10 18:45:26 TIMER: Check tournament: 0ms
25.10 18:45:26 TIMER: Clans cache...
25.10 18:45:26 TIMER: Clans cache: 0ms
25.10 18:45:26 TIMER: Check tournament...
25.10 18:45:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:47' OR rounddate = '2016-25-10 18:47' AND status <> 'finished'
25.10 18:45:26 TIMER: Check tournament: 0ms
25.10 18:45:26 TIMER: Clans cache...
25.10 18:45:26 TIMER: Clans cache: 0ms
25.10 18:45:26 TIMER: Check tournament...
25.10 18:45:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:48' OR rounddate = '2016-25-10 18:48' AND status <> 'finished'
25.10 18:45:26 TIMER: Check tournament: 0ms
25.10 18:45:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
25.10 18:45:26 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
25.10 18:45:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 18:45:26 TIME: core/server.query : 1.65 ms
25.10 18:45:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 18:45:26 STATS: cache [battle], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 18:45:26 STATS: cache [battle], segments [7 calls, 5 hits, 1 misses]
25.10 18:45:26 STATS: cache [battle], database [480 calls, 1 reads, 2 writes]
25.10 18:45:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 18:45:26 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 18:45:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 18:45:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 97
Called from snipe/cache/CacheServer.hx line 487
25.10 18:45:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 18:45:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
25.10 18:45:26 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:45:26 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
25.10 18:45:26 STATS: cache [user], database [480 calls, 2 reads, 2 writes]
25.10 18:45:26 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
25.10 18:45:26 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.78 ms]
25.10 18:45:26 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.18 ms]
25.10 18:45:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 18:45:26 TIME: core/cache.update : 0.76 ms
25.10 18:45:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
25.10 18:45:26 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:45:26 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
25.10 18:45:26 STATS: cache [questdata], database [480 calls, 2 reads, 0 writes]
25.10 18:45:26 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
25.10 18:45:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:45:26 TIME: core/cache.update : 0.33 ms
25.10 18:45:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
25.10 18:45:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 18:45:26 TIME: core/user.logoutPost : 0.17 ms
25.10 18:45:26 TIMER: Clans cache...
25.10 18:45:26 TIMER: Clans cache: 0ms
25.10 18:45:26 TIMER: Check tournament...
25.10 18:45:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:49' OR rounddate = '2016-25-10 18:49' AND status <> 'finished'
25.10 18:45:26 TIMER: Check tournament: 0ms
25.10 18:45:26 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 18:45:26 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
25.10 18:49:36 BLOCKREMOVE: user 94 removed
25.10 18:49:36 BLOCKREMOVE: questdata 94 removed
25.10 18:50:26 TIMER: Clans cache...
25.10 18:50:26 TIMER: Clans cache: 0ms
25.10 18:50:26 TIMER: Check tournament...
25.10 18:50:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:50' OR rounddate = '2016-25-10 18:50' AND status <> 'finished'
25.10 18:50:26 TIMER: Check tournament: 0ms
25.10 18:50:26 TIMER: Clans cache...
25.10 18:50:26 TIMER: Clans cache: 0ms
25.10 18:50:26 TIMER: Check tournament...
25.10 18:50:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:51' OR rounddate = '2016-25-10 18:51' AND status <> 'finished'
25.10 18:50:26 TIMER: Check tournament: 0ms
25.10 18:50:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 18:50:26 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 18:50:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 18:50:26 TIME: core/server.query : 1.13 ms
25.10 18:50:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 18:50:26 STATS: cache [battle], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 1 not found]
25.10 18:50:26 STATS: cache [battle], segments [8 calls, 5 hits, 2 misses]
25.10 18:50:26 STATS: cache [battle], database [660 calls, 2 reads, 2 writes]
25.10 18:50:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 18:50:26 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 18:50:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 18:50:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 97
Called from snipe/cache/CacheServer.hx line 487
25.10 18:50:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 18:50:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 18:50:26 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:50:26 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
25.10 18:50:26 STATS: cache [user], database [660 calls, 2 reads, 3 writes]
25.10 18:50:26 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
25.10 18:50:26 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.78 ms]
25.10 18:50:26 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.21 ms]
25.10 18:50:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 18:50:26 TIME: core/cache.update : 0.47 ms
25.10 18:50:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 18:50:26 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:50:26 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
25.10 18:50:26 STATS: cache [questdata], database [660 calls, 2 reads, 1 writes]
25.10 18:50:26 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
25.10 18:50:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:50:26 TIME: core/cache.update : 0.56 ms
25.10 18:50:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 18:50:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 18:50:26 TIME: core/user.logoutPost : 0.17 ms
25.10 18:50:26 TIMER: Clans cache...
25.10 18:50:26 TIMER: Clans cache: 0ms
25.10 18:50:26 TIMER: Check tournament...
25.10 18:50:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:52' OR rounddate = '2016-25-10 18:52' AND status <> 'finished'
25.10 18:50:26 TIMER: Check tournament: 1ms
25.10 18:50:26 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 18:50:26 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
25.10 18:52:36 BLOCKREMOVE: user 95 removed
25.10 18:52:36 BLOCKREMOVE: questdata 95 removed
25.10 18:53:26 TIMER: Clans cache...
25.10 18:53:26 TIMER: Clans cache: 0ms
25.10 18:53:26 TIMER: Check tournament...
25.10 18:53:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:53' OR rounddate = '2016-25-10 18:53' AND status <> 'finished'
25.10 18:53:26 TIMER: Check tournament: 5ms
25.10 18:53:28 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 18:53:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 18:53:28 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 18:53:28 TIME: core/server.query : 1.39 ms
25.10 18:53:28 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 18:53:28 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 18:53:28 TIME: core/user.isOnlineID : 0.14 ms
25.10 18:53:28 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 18:53:28 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:53:28 STATS: cache [user], segments [11 calls, 6 hits, 4 misses]
25.10 18:53:28 STATS: cache [user], database [722 calls, 2 reads, 4 writes]
25.10 18:53:28 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
25.10 18:53:28 READDB: SELECT * FROM Users WHERE ID = 95
25.10 18:53:28 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.77 ms]
25.10 18:53:28 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.24 ms]
25.10 18:53:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 95 } }
25.10 18:53:28 TIME: core/cache.get : 2.09 ms
25.10 18:53:28 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 18:53:28 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:53:28 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
25.10 18:53:28 STATS: cache [questdata], database [722 calls, 2 reads, 2 writes]
25.10 18:53:28 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
25.10 18:53:28 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 18:53:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
25.10 18:53:28 TIME: core/cache.get : 1.59 ms
25.10 18:53:28 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 18:53:28 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 18:53:28 TIME: core/user.loginPost : 0.1 ms
25.10 18:53:34 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:53:34 DB: SELECT * FROM tournament
25.10 18:53:34 STATS: cache [tournament], get [14 calls, 11 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 18:53:34 STATS: cache [tournament], segments [21 calls, 18 hits, 2 misses]
25.10 18:53:34 STATS: cache [tournament], database [729 calls, 2 reads, 2 writes]
25.10 18:53:34 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:53:34 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:53:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [78,79,80], round => 2, id => 1, status => finished, userList => [{ name => uid94, id => 94 },{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:44, startdate => 2016-25-10 18:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:53:34 TIME: vdl/cache.tournament.getAvailableTournament : 2.6 ms
25.10 18:53:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 18:53:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:53:36 TIME: core/cache.update : 0.09 ms
25.10 18:53:36 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 18:53:40 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 18:53:40 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 18:53:40 TIME: vdl/cache.tournament.getStatus : 0.22 ms
25.10 18:53:40 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 2, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 18:53:40 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 18:53:40 TIME: vdl/cache.tournament.setGrid : 0.19 ms
25.10 18:53:46 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:53:46 DB: SELECT * FROM tournament
25.10 18:53:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [78,79,80], round => 2, id => 1, status => finished, userList => [{ name => uid94, id => 94 },{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:44, startdate => 2016-25-10 18:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:53:46 TIME: vdl/cache.tournament.getAvailableTournament : 0.97 ms
25.10 18:53:56 BLOCKREMOVE: tournament 1 removed
25.10 18:54:06 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 18:54:06 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 18:54:06 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 18:54:06 TIME: core/server.query : 1.26 ms
25.10 18:54:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 18:54:06 STATS: cache [battle], get [5 calls, 1 cache hits, 3 cache misses, 0 same version, 2 not found]
25.10 18:54:06 STATS: cache [battle], segments [9 calls, 5 hits, 3 misses]
25.10 18:54:06 STATS: cache [battle], database [760 calls, 3 reads, 2 writes]
25.10 18:54:06 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 18:54:06 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 18:54:06 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 18:54:06 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 97
Called from snipe/cache/CacheServer.hx line 487
25.10 18:54:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 18:54:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 18:54:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 18:54:06 TIME: core/cache.update : 0.14 ms
25.10 18:54:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 18:54:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:54:06 TIME: core/cache.update : 0.18 ms
25.10 18:54:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 18:54:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 18:54:06 TIME: core/user.logoutPost : 0.14 ms
25.10 18:54:06 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 18:54:06 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
25.10 18:54:16 BLOCKREMOVE: user 95 removed
25.10 18:54:16 BLOCKREMOVE: questdata 95 removed
25.10 18:54:26 TIMER: Clans cache...
25.10 18:54:26 TIMER: Clans cache: 0ms
25.10 18:54:26 TIMER: Check tournament...
25.10 18:54:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:54' OR rounddate = '2016-25-10 18:54' AND status <> 'finished'
25.10 18:54:26 TIMER: Check tournament: 0ms
25.10 18:55:24 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 18:55:24 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 18:55:24 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 18:55:24 TIME: core/server.query : 1.56 ms
25.10 18:55:24 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 18:55:24 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 18:55:24 TIME: core/user.isOnlineID : 0.15 ms
25.10 18:55:24 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 18:55:24 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
25.10 18:55:24 STATS: cache [user], segments [16 calls, 9 hits, 6 misses]
25.10 18:55:24 STATS: cache [user], database [839 calls, 3 reads, 6 writes]
25.10 18:55:24 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
25.10 18:55:24 READDB: SELECT * FROM Users WHERE ID = 95
25.10 18:55:24 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.69 ms]
25.10 18:55:24 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.18 ms]
25.10 18:55:24 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 95 } }
25.10 18:55:24 TIME: core/cache.get : 1.99 ms
25.10 18:55:24 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 18:55:24 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
25.10 18:55:24 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
25.10 18:55:24 STATS: cache [questdata], database [839 calls, 3 reads, 3 writes]
25.10 18:55:24 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
25.10 18:55:24 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 18:55:24 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
25.10 18:55:24 TIME: core/cache.get : 1.41 ms
25.10 18:55:24 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 18:55:24 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 18:55:24 TIME: core/user.loginPost : 0.16 ms
25.10 18:55:26 TIMER: Clans cache...
25.10 18:55:26 TIMER: Clans cache: 0ms
25.10 18:55:26 TIMER: Check tournament...
25.10 18:55:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:55' OR rounddate = '2016-25-10 18:55' AND status <> 'finished'
25.10 18:55:26 TIMER: Check tournament: 0ms
25.10 18:55:29 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:55:29 DB: SELECT * FROM tournament
25.10 18:55:29 STATS: cache [tournament], get [17 calls, 13 cache hits, 3 cache misses, 0 same version, 0 not found]
25.10 18:55:29 STATS: cache [tournament], segments [24 calls, 20 hits, 3 misses]
25.10 18:55:29 STATS: cache [tournament], database [843 calls, 3 reads, 2 writes]
25.10 18:55:29 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:55:29 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:55:29 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 18:58, startdate => 2016-25-10 18:58 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:55:29 TIME: vdl/cache.tournament.getAvailableTournament : 1.33 ms
25.10 18:55:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 18:55:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:55:31 TIME: core/cache.update : 0.17 ms
25.10 18:55:31 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 18:55:36 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 18:55:36 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 18:55:36 TIME: vdl/cache.tournament.addUsers : 0.19 ms
25.10 18:55:36 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:55:36 DB: SELECT * FROM tournament
25.10 18:55:36 DB: SELECT name FROM users WHERE id = 95
25.10 18:55:36 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:58, startdate => 2016-25-10 18:58 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:55:36 TIME: vdl/cache.tournament.getAvailableTournament : 1.74 ms
25.10 18:55:36 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'95', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 18:58', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95],"battleActive":[]}}', rounddate = E'2016-25-10 18:58' WHERE ID = 1
25.10 18:55:46 BLOCKREMOVE: tournament 1 removed
25.10 18:56:26 TIMER: Clans cache...
25.10 18:56:26 TIMER: Clans cache: 0ms
25.10 18:56:26 TIMER: Check tournament...
25.10 18:56:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:56' OR rounddate = '2016-25-10 18:56' AND status <> 'finished'
25.10 18:56:26 TIMER: Check tournament: 0ms
25.10 18:56:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 18:56:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 18:56:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 18:56:30 TIME: core/server.query : 2.77 ms
25.10 18:56:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 18:56:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 18:56:30 TIME: core/user.isOnlineID : 0.1 ms
25.10 18:56:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 18:56:30 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
25.10 18:56:30 STATS: cache [user], segments [19 calls, 10 hits, 8 misses]
25.10 18:56:30 STATS: cache [user], database [904 calls, 4 reads, 7 writes]
25.10 18:56:30 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
25.10 18:56:30 READDB: SELECT * FROM Users WHERE ID = 94
25.10 18:56:30 STATS: cache manager [1], get [9 calls, total 0.01 sec spent, avg 1.6 ms]
25.10 18:56:30 STATS: cache manager [1], update [10 calls, total 0 sec spent, avg 0.16 ms]
25.10 18:56:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 18:56:30 TIME: core/cache.get : 1.64 ms
25.10 18:56:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 18:56:30 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
25.10 18:56:30 STATS: cache [questdata], segments [15 calls, 6 hits, 8 misses]
25.10 18:56:30 STATS: cache [questdata], database [904 calls, 4 reads, 3 writes]
25.10 18:56:30 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
25.10 18:56:30 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 18:56:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 18:56:30 TIME: core/cache.get : 0.98 ms
25.10 18:56:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 18:56:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 18:56:30 TIME: core/user.loginPost : 0.11 ms
25.10 18:56:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 18:56:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 18:56:36 TIME: core/cache.update : 0.17 ms
25.10 18:56:36 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 18:56:47 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:56:47 DB: SELECT * FROM tournament
25.10 18:56:47 STATS: cache [tournament], get [20 calls, 15 cache hits, 4 cache misses, 0 same version, 0 not found]
25.10 18:56:47 STATS: cache [tournament], segments [28 calls, 23 hits, 4 misses]
25.10 18:56:47 STATS: cache [tournament], database [921 calls, 4 reads, 3 writes]
25.10 18:56:47 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:56:47 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:56:47 DB: SELECT name FROM users WHERE id = 95
25.10 18:56:47 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:58, startdate => 2016-25-10 18:58 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:56:47 TIME: vdl/cache.tournament.getAvailableTournament : 3.27 ms
25.10 18:56:50 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 18:56:50 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 18:56:50 TIME: vdl/cache.tournament.addUsers : 0.2 ms
25.10 18:56:52 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'95', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 18:58', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[]}}', rounddate = E'2016-25-10 18:58' WHERE ID = 1
25.10 18:57:02 BLOCKREMOVE: tournament 1 removed
25.10 18:57:26 TIMER: Clans cache...
25.10 18:57:26 TIMER: Clans cache: 0ms
25.10 18:57:26 TIMER: Check tournament...
25.10 18:57:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:57' OR rounddate = '2016-25-10 18:57' AND status <> 'finished'
25.10 18:57:26 TIMER: Check tournament: 1ms
25.10 18:57:26 TIMER: Clans cache...
25.10 18:57:26 TIMER: Clans cache: 0ms
25.10 18:57:26 TIMER: Check tournament...
25.10 18:57:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:58' OR rounddate = '2016-25-10 18:58' AND status <> 'finished'
25.10 18:57:26 STATS: cache [tournament], get [22 calls, 16 cache hits, 5 cache misses, 0 same version, 0 not found]
25.10 18:57:26 STATS: cache [tournament], segments [31 calls, 25 hits, 5 misses]
25.10 18:57:26 STATS: cache [tournament], database [1020 calls, 5 reads, 4 writes]
25.10 18:57:26 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:57:26 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:57:26 DB: SELECT nextval('Battle_id_seq') AS id
25.10 18:57:26 READDB: SELECT ID FROM Battle WHERE ID = 81
25.10 18:57:26 READDB: INSERT INTO Battle (ID) VALUES (81)
25.10 18:57:26 STATS: cache [battle], get [6 calls, 1 cache hits, 4 cache misses, 0 same version, 3 not found]
25.10 18:57:26 STATS: cache [battle], segments [10 calls, 5 hits, 4 misses]
25.10 18:57:26 STATS: cache [battle], database [1020 calls, 4 reads, 2 writes]
25.10 18:57:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 18:57:26 READDB: SELECT * FROM Battle WHERE ID = 81
25.10 18:57:26 DB: SELECT name FROM users WHERE id=94
25.10 18:57:26 DB: SELECT name FROM users WHERE id=95
25.10 18:57:26 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-25-10 18:58, id => 94, enemy.num => 2, battleId => 81, player => 1 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
25.10 18:57:26 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 18:58, id => 95, enemy.num => 1, battleId => 81, player => 2 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
25.10 18:57:26 TIMER: Check tournament: 61ms
25.10 18:58:31 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'false', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 81
25.10 18:58:31 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'95', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 18:58', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[81]}}', rounddate = E'2016-25-10 18:58' WHERE ID = 1
25.10 18:58:41 BLOCKREMOVE: battle 81 removed
25.10 18:58:41 BLOCKREMOVE: tournament 1 removed
25.10 18:59:26 TIMER: Clans cache...
25.10 18:59:26 TIMER: Clans cache: 0ms
25.10 18:59:26 TIMER: Check tournament...
25.10 18:59:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 18:59' OR rounddate = '2016-25-10 18:59' AND status <> 'finished'
25.10 18:59:26 TIMER: Check tournament: 0ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 18:59:45 STATS: cache [tournament], get [23 calls, 16 cache hits, 6 cache misses, 0 same version, 0 not found]
25.10 18:59:45 STATS: cache [tournament], segments [33 calls, 26 hits, 6 misses]
25.10 18:59:45 STATS: cache [tournament], database [1099 calls, 6 reads, 5 writes]
25.10 18:59:45 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 18:59:45 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 18:59:45 TIME: vdl/cache.tournament.getStatus : 1.59 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [81]
25.10 18:59:45 TIME: vdl/cache.tournament.getBattlesTournaments : 0.08 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95,94] }
25.10 18:59:45 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.08 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 81, _type => vdl/cache.battle.finishRoom }
25.10 18:59:45 STATS: cache [battle], get [7 calls, 1 cache hits, 5 cache misses, 0 same version, 3 not found]
25.10 18:59:45 STATS: cache [battle], segments [13 calls, 7 hits, 5 misses]
25.10 18:59:45 STATS: cache [battle], database [1099 calls, 5 reads, 3 writes]
25.10 18:59:45 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 18:59:45 READDB: SELECT * FROM Battle WHERE ID = 81
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
25.10 18:59:45 TIME: vdl/cache.battle.finishRoom : 0.53 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 81, _type => vdl/cache.battle.deleteRoom }
25.10 18:59:45 ROOM: deleted room 81
25.10 18:59:45 DB: DELETE FROM Battle WHERE ID = 81
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 18:59:45 TIME: vdl/cache.battle.deleteRoom : 23.81 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [81] }
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
25.10 18:59:45 TIME: vdl/cache.tournament.setBattlesTournaments : 0.12 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [95], _type => vdl/cache.tournament.setUsersTournament }
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
25.10 18:59:45 TIME: vdl/cache.tournament.setUsersTournament : 0.09 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 95, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 95, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 18:59:45 TIME: vdl/cache.tournament.setGrid : 0.12 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-25-10 18:58, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound, status => finished }
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => ok, _type => vdl/cache.tournament.addRound }
25.10 18:59:45 TIME: vdl/cache.tournament.addRound : 0.11 ms
25.10 18:59:45 NET: vdl.0 (thread) request vdl/cache.tournament.finish { winner => 95, tournamentId => 1, _type => vdl/cache.tournament.finish }
25.10 18:59:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
25.10 18:59:45 TIME: vdl/cache.tournament.finish : 0.11 ms
25.10 18:59:50 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'true', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 81
25.10 18:59:50 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'95', status = E'finished', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-25-10 18:58', roundinterval = E'60', params = E'{"params":{"battleFinished":[81],"usersList":[95],"battleActive":[]}}', rounddate = E'2016-25-10 18:58' WHERE ID = 1
25.10 18:59:58 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:59:58 DB: SELECT * FROM tournament
25.10 18:59:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [81], round => 2, id => 1, status => finished, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:58, startdate => 2016-25-10 18:58 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 18:59:58 TIME: vdl/cache.tournament.getAvailableTournament : 0.97 ms
