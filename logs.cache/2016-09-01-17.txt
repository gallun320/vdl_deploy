01.09 17:00:09 TIMER: Starting timer...
01.09 17:00:09 TIMER: Timer running...
01.09 17:00:09 DB: SELECT * FROM GameVars
01.09 17:00:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:00:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:00:09 DB: SELECT * FROM Shops WHERE ID = 1
01.09 17:00:09 TEMP: load ./tmp/quest_daily_ids
01.09 17:00:09 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 17:00:09 TEMP: save ./tmp/quest_daily_ids
01.09 17:00:09 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 17:00:09 QUEUE: vdl.0 (thread) response server.login
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM LocalizationStrings
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 6.8 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM GameVars
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.51 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.61 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.46 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.55 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.87 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 17:00:09 TIME: core/quest.getDaily : 0.02 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM UserAttributeTypes
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.29 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM UserVariableTypes
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.52 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 17:00:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 1.03 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM ItemGroups
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.35 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM Bundles ORDER BY ID
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.53 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.5 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 17:00:09 TIME: core/shop.getList : 0.02 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM EffectAttributeTypes
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.44 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM Effects
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.45 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 17:00:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 1.26 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 17:00:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.82 ms
01.09 17:00:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 17:00:09 DB: SELECT * FROM Badges
01.09 17:00:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:00:09 TIME: core/server.query : 0.48 ms
01.09 17:00:09 TIMER: Clans cache...
01.09 17:00:09 TIMER: Clans cache: 0ms
01.09 17:00:09 TIMER: Clans cache...
01.09 17:00:09 TIMER: Clans cache: 0ms
01.09 17:02:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 17:02:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 17:02:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:02:12 TIME: core/server.query : 2.79 ms
01.09 17:02:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 17:02:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 17:02:12 TIME: core/user.isOnlineID : 0.18 ms
01.09 17:02:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 17:02:12 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:02:12 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 17:02:12 STATS: cache [user], database [123 calls, 0 reads, 0 writes]
01.09 17:02:12 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 17:02:12 READDB: SELECT * FROM Users WHERE ID = 3
01.09 17:02:12 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.83 ms]
01.09 17:02:12 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 17:02:12 QUEUE: vdl.0 (thread) response core/cache.get
01.09 17:02:12 TIME: core/cache.get : 4.04 ms
01.09 17:02:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 17:02:12 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:02:12 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 17:02:12 STATS: cache [questdata], database [123 calls, 0 reads, 0 writes]
01.09 17:02:12 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 17:02:12 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 17:02:12 QUEUE: vdl.0 (thread) response core/cache.get
01.09 17:02:12 TIME: core/cache.get : 1.35 ms
01.09 17:02:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 17:02:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 17:02:12 TIME: core/user.loginPost : 0.1 ms
01.09 17:02:12 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 17:02:12 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 17:02:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 17:02:12 TIME: vdl/cache.battle.find : 1.95 ms
01.09 17:02:12 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 17:02:12 DB: SELECT nextval('Battle_id_seq') AS id
01.09 17:02:12 READDB: SELECT ID FROM Battle WHERE ID = 14
01.09 17:02:12 READDB: INSERT INTO Battle (ID) VALUES (14)
01.09 17:02:12 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:02:12 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 17:02:12 STATS: cache [battle], database [124 calls, 0 reads, 0 writes]
01.09 17:02:12 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 17:02:12 READDB: SELECT * FROM Battle WHERE ID = 14
01.09 17:02:12 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.09 ms]
01.09 17:02:12 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 17:02:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 14, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 17:02:12 TIME: vdl/cache.battle.create : 33.04 ms
01.09 17:02:18 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 14
01.09 17:02:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1472738532 } }}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 17:02:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 17:02:19 TIME: core/cache.update : 0.17 ms
01.09 17:02:20 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 17:03:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 17:03:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 17:03:01 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 17:03:01 TIME: core/server.query : 2.84 ms
01.09 17:03:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 17:03:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 17:03:01 TIME: core/user.isOnlineID : 0.15 ms
01.09 17:03:01 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 17:03:01 READDB: SELECT * FROM Users WHERE ID = 2
01.09 17:03:01 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 17:03:01 TIME: core/cache.get : 1.69 ms
01.09 17:03:01 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 17:03:01 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 17:03:01 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 17:03:01 TIME: core/cache.get : 1.07 ms
01.09 17:03:01 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 17:03:01 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 17:03:01 TIME: core/user.loginPost : 0.14 ms
01.09 17:03:01 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 17:03:01 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 17:03:01 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 17:03:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [14], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 17:03:01 TIME: vdl/cache.battle.find : 2.6 ms
01.09 17:03:01 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 14, selfId => 2, _type => vdl/cache.battle.join }
01.09 17:03:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { secondid => 2, errorCode => true, firstid => 3, _type => vdl/cache.battle.join, player => 2 }
01.09 17:03:01 TIME: vdl/cache.battle.join : 0.27 ms
01.09 17:03:01 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
01.09 17:03:01 DB: SELECT name FROM users WHERE id=2
01.09 17:03:01 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
01.09 17:03:01 TIME: core/server.query : 2.19 ms
01.09 17:03:01 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
01.09 17:03:01 DB: SELECT name FROM users WHERE id=3
01.09 17:03:01 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
01.09 17:03:01 TIME: core/server.query : 0.88 ms
01.09 17:03:01 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 14
01.09 17:05:44 TIMER: Starting timer...
01.09 17:05:44 TIMER: Timer running...
01.09 17:05:44 DB: SELECT * FROM GameVars
01.09 17:05:44 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:05:44 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:05:44 DB: SELECT * FROM Shops WHERE ID = 1
01.09 17:05:44 TEMP: load ./tmp/quest_daily_ids
01.09 17:05:44 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 17:05:44 TEMP: save ./tmp/quest_daily_ids
01.09 17:05:44 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 17:05:44 QUEUE: vdl.0 (thread) response server.login
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 17:05:44 DB: SELECT * FROM LocalizationStrings
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:05:44 TIME: core/server.query : 6.42 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 17:05:44 DB: SELECT * FROM GameVars
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:05:44 TIME: core/server.query : 0.49 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 17:05:44 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:05:44 TIME: core/server.query : 0.62 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 17:05:44 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:05:44 TIME: core/server.query : 0.43 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 17:05:44 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:05:44 TIME: core/server.query : 0.61 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 17:05:44 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:05:44 TIME: core/server.query : 0.81 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 17:05:44 TIME: core/quest.getDaily : 0.02 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 17:05:44 DB: SELECT * FROM UserAttributeTypes
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:05:44 TIME: core/server.query : 0.32 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 17:05:44 DB: SELECT * FROM UserVariableTypes
01.09 17:05:44 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:05:44 TIME: core/server.query : 0.31 ms
01.09 17:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 17:05:44 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i01.09 17:27:56 TIMER: Starting timer...
01.09 17:27:56 TIMER: Timer running...
01.09 17:27:56 DB: SELECT * FROM GameVars
01.09 17:27:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:27:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:27:56 DB: SELECT * FROM Shops WHERE ID = 1
01.09 17:27:56 TEMP: load ./tmp/quest_daily_ids
01.09 17:27:56 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 17:27:56 TEMP: save ./tmp/quest_daily_ids
01.09 17:27:56 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 17:27:56 QUEUE: vdl.0 (thread) response server.login
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM LocalizationStrings
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 8.35 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM GameVars
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.66 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.75 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.49 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.5 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 1 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 17:27:56 TIME: core/quest.getDaily : 0.02 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM UserAttributeTypes
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.35 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM UserVariableTypes
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.46 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 17:27:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 1.11 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM ItemGroups
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.37 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM Bundles ORDER BY ID
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.55 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.56 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 17:27:56 TIME: core/shop.getList : 0.04 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM EffectAttributeTypes
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.43 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM Effects
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.49 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 17:27:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.95 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 17:27:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.69 ms
01.09 17:27:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 17:27:56 DB: SELECT * FROM Badges
01.09 17:27:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:27:56 TIME: core/server.query : 0.38 ms
01.09 17:27:56 TIMER: Clans cache...
01.09 17:27:56 TIMER: Clans cache: 0ms
01.09 17:29:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 17:29:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 17:29:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:29:12 TIME: core/server.query : 1.53 ms
01.09 17:29:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 17:29:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 17:29:12 TIME: core/user.isOnlineID : 0.07 ms
01.09 17:29:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 17:29:12 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:29:12 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 17:29:12 STATS: cache [user], database [76 calls, 0 reads, 0 writes]
01.09 17:29:12 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 17:29:12 READDB: SELECT * FROM Users WHERE ID = 3
01.09 17:29:12 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.48 ms]
01.09 17:29:12 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 17:29:12 QUEUE: vdl.0 (thread) response core/cache.get
01.09 17:29:12 TIME: core/cache.get : 3.6 ms
01.09 17:29:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 17:29:12 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:29:12 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 17:29:12 STATS: cache [questdata], database [76 calls, 0 reads, 0 writes]
01.09 17:29:12 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 17:29:12 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 17:29:12 QUEUE: vdl.0 (thread) response core/cache.get
01.09 17:29:12 TIME: core/cache.get : 0.88 ms
01.09 17:29:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 17:29:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 17:29:12 TIME: core/user.loginPost : 0.07 ms
01.09 17:29:12 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 17:29:12 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 17:29:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 17:29:12 TIME: vdl/cache.battle.find : 1.08 ms
01.09 17:29:12 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 17:29:12 DB: SELECT nextval('Battle_id_seq') AS id
01.09 17:29:12 READDB: SELECT ID FROM Battle WHERE ID = 15
01.09 17:29:12 READDB: INSERT INTO Battle (ID) VALUES (15)
01.09 17:29:12 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:29:12 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 17:29:12 STATS: cache [battle], database [76 calls, 0 reads, 0 writes]
01.09 17:29:12 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 17:29:12 READDB: SELECT * FROM Battle WHERE ID = 15
01.09 17:29:12 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.66 ms]
01.09 17:29:12 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 17:29:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 15, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 17:29:12 TIME: vdl/cache.battle.create : 38.35 ms
01.09 17:29:17 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 15
01.09 17:29:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 17:29:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 17:29:21 TIME: core/cache.update : 0.16 ms
01.09 17:29:22 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 17:29:56 TIMER: Clans cache...
01.09 17:29:56 TIMER: Clans cache: 0ms
01.09 17:30:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 17:30:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 17:30:09 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 17:30:09 TIME: core/server.query : 2.85 ms
01.09 17:30:09 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 17:30:09 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 17:30:09 TIME: core/user.isOnlineID : 0.09 ms
01.09 17:30:09 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 17:30:09 READDB: SELECT * FROM Users WHERE ID = 2
01.09 17:30:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 17:30:09 TIME: core/cache.get : 1.52 ms
01.09 17:30:09 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 17:30:09 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 17:30:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 17:30:09 TIME: core/cache.get : 0.8 ms
01.09 17:30:09 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 17:30:09 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 17:30:09 TIME: core/user.loginPost : 0.09 ms
01.09 17:30:09 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 17:30:09 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 17:30:09 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 17:30:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [15], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 17:30:09 TIME: vdl/cache.battle.find : 2.59 ms
01.09 17:30:09 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 15, selfId => 2, _type => vdl/cache.battle.join }
01.09 17:30:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 15, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
01.09 17:30:09 TIME: vdl/cache.battle.join : 0.12 ms
01.09 17:30:09 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
01.09 17:30:09 DB: SELECT name FROM users WHERE id=2
01.09 17:30:09 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
01.09 17:30:09 TIME: core/server.query : 2.37 ms
01.09 17:30:09 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
01.09 17:30:09 DB: SELECT name FROM users WHERE id=3
01.09 17:30:09 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
01.09 17:30:09 TIME: core/server.query : 0.79 ms
01.09 17:30:10 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 15
01.09 17:30:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 17:30:16 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 17:30:16 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
01.09 17:30:16 STATS: cache [user], database [140 calls, 2 reads, 1 writes]
01.09 17:30:16 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 17:30:16 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.56 ms]
01.09 17:30:16 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.11 ms]
01.09 17:30:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 17:30:16 TIME: core/cache.update : 0.3 ms
01.09 17:30:16 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 17:31:31 TIMER: Starting timer...
01.09 17:31:31 TIMER: Timer running...
01.09 17:31:31 DB: SELECT * FROM GameVars
01.09 17:31:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:31:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:31:31 DB: SELECT * FROM Shops WHERE ID = 1
01.09 17:31:31 TEMP: load ./tmp/quest_daily_ids
01.09 17:31:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 17:31:31 TEMP: save ./tmp/quest_daily_ids
01.09 17:31:31 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 17:31:31 QUEUE: vdl.0 (thread) response server.login
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 17:31:31 DB: SELECT * FROM LocalizationStrings
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:31 TIME: core/server.query : 6.64 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 17:31:31 DB: SELECT * FROM GameVars
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:31 TIME: core/server.query : 0.52 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 17:31:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:31 TIME: core/server.query : 0.74 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 17:31:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:31 TIME: core/server.query : 0.49 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 17:31:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:31 TIME: core/server.query : 0.57 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 17:31:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:31 TIME: core/server.query : 0.88 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 17:31:31 TIME: core/quest.getDaily : 0.02 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 17:31:31 DB: SELECT * FROM UserAttributeTypes
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:31 TIME: core/server.query : 0.3 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 17:31:31 DB: SELECT * FROM UserVariableTypes
01.09 17:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:31 TIME: core/server.query : 1.6 ms
01.09 17:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 17:31:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.T01.09 17:31:38 TIMER: Starting timer...
01.09 17:31:38 TIMER: Timer running...
01.09 17:31:38 DB: SELECT * FROM GameVars
01.09 17:31:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:31:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:31:38 DB: SELECT * FROM Shops WHERE ID = 1
01.09 17:31:38 TEMP: load ./tmp/quest_daily_ids
01.09 17:31:38 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 17:31:38 TEMP: save ./tmp/quest_daily_ids
01.09 17:31:38 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 17:31:38 QUEUE: vdl.0 (thread) response server.login
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM LocalizationStrings
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 7.35 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM GameVars
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.54 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.67 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.51 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.57 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.97 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 17:31:38 TIME: core/quest.getDaily : 0.03 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM UserAttributeTypes
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.39 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM UserVariableTypes
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.6 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 17:31:38 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 1.42 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM ItemGroups
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.5 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM Bundles ORDER BY ID
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.58 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.67 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 17:31:38 TIME: core/shop.getList : 0.02 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM EffectAttributeTypes
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.58 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM Effects
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.48 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 17:31:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.89 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 17:31:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.79 ms
01.09 17:31:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 17:31:38 DB: SELECT * FROM Badges
01.09 17:31:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:31:38 TIME: core/server.query : 0.53 ms
01.09 17:32:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 17:32:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 17:32:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:32:37 TIME: core/server.query : 1.73 ms
01.09 17:32:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 17:32:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 17:32:37 TIME: core/user.isOnlineID : 0.03 ms
01.09 17:32:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 17:32:37 READDB: SELECT * FROM Users WHERE ID = 3
01.09 17:32:37 QUEUE: vdl.0 (thread) response core/cache.get
01.09 17:32:37 TIME: core/cache.get : 3.86 ms
01.09 17:32:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 17:32:37 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 17:32:37 QUEUE: vdl.0 (thread) response core/cache.get
01.09 17:32:37 TIME: core/cache.get : 0.87 ms
01.09 17:32:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 17:32:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 17:32:37 TIME: core/user.loginPost : 0.05 ms
01.09 17:32:37 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 17:32:37 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 17:32:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 17:32:37 TIME: vdl/cache.battle.find : 2.47 ms
01.09 17:32:37 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 17:32:37 DB: SELECT nextval('Battle_id_seq') AS id
01.09 17:32:37 READDB: SELECT ID FROM Battle WHERE ID = 16
01.09 17:32:37 READDB: INSERT INTO Battle (ID) VALUES (16)
01.09 17:32:37 READDB: SELECT * FROM Battle WHERE ID = 16
01.09 17:32:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 16, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 17:32:37 TIME: vdl/cache.battle.create : 41.56 ms
01.09 17:32:38 TIMER: Clans cache...
01.09 17:32:38 TIMER: Clans cache: 0ms
01.09 17:32:42 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 16
01.09 17:32:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 17:32:43 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 17:32:43 STATS: cache [user], segments [3 calls, 0 hits, 2 misses]
01.09 17:32:43 STATS: cache [user], database [66 calls, 1 reads, 0 writes]
01.09 17:32:43 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 17:32:43 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.51 ms]
01.09 17:32:43 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.14 ms]
01.09 17:32:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 17:32:43 TIME: core/cache.update : 0.26 ms
01.09 17:32:44 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 17:33:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 17:33:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 17:33:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 17:33:37 TIME: core/server.query : 1.9 ms
01.09 17:33:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 17:33:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 17:33:37 TIME: core/user.isOnlineID : 0.06 ms
01.09 17:33:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 17:33:37 READDB: SELECT * FROM Users WHERE ID = 2
01.09 17:33:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 17:33:37 TIME: core/cache.get : 1.32 ms
01.09 17:33:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 17:33:37 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 17:33:37 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
01.09 17:33:37 STATS: cache [questdata], database [119 calls, 1 reads, 0 writes]
01.09 17:33:37 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 17:33:37 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 17:33:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 17:33:37 TIME: core/cache.get : 0.84 ms
01.09 17:33:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 17:33:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 17:33:37 TIME: core/user.loginPost : 0.07 ms
01.09 17:33:37 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 17:33:37 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 17:33:37 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 17:33:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [16], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 17:33:37 TIME: vdl/cache.battle.find : 2.11 ms
01.09 17:33:37 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 16, selfId => 2, _type => vdl/cache.battle.join }
01.09 17:33:37 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 17:33:37 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
01.09 17:33:37 STATS: cache [battle], database [119 calls, 1 reads, 1 writes]
01.09 17:33:37 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 17:33:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 16, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
01.09 17:33:37 TIME: vdl/cache.battle.join : 0.22 ms
01.09 17:33:37 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
01.09 17:33:37 DB: SELECT name FROM users WHERE id=2
01.09 17:33:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
01.09 17:33:37 TIME: core/server.query : 1.2 ms
01.09 17:33:37 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
01.09 17:33:37 DB: SELECT name FROM users WHERE id=3
01.09 17:33:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
01.09 17:33:37 TIME: core/server.query : 4.93 ms
01.09 17:33:37 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 16
01.09 17:33:38 TIMER: Clans cache...
01.09 17:33:38 TIMER: Clans cache: 0ms
01.09 17:33:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 17:33:43 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 17:33:43 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
01.09 17:33:43 STATS: cache [user], database [126 calls, 2 reads, 1 writes]
01.09 17:33:43 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 17:33:43 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.22 ms]
01.09 17:33:43 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.21 ms]
01.09 17:33:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 17:33:43 TIME: core/cache.update : 0.48 ms
01.09 17:33:44 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 17:35:51 TIMER: Starting timer...
01.09 17:35:51 TIMER: Timer running...
01.09 17:35:51 DB: SELECT * FROM GameVars
01.09 17:35:51 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:35:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:35:52 DB: SELECT * FROM Shops WHERE ID = 1
01.09 17:35:52 TEMP: load ./tmp/quest_daily_ids
01.09 17:35:52 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 17:35:52 TEMP: save ./tmp/quest_daily_ids
01.09 17:35:52 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 17:35:52 QUEUE: vdl.0 (thread) response server.login
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 17:35:52 DB: SELECT * FROM LocalizationStrings
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 5.85 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 17:35:52 DB: SELECT * FROM GameVars
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 0.71 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 17:35:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 0.74 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 17:35:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 0.4 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 17:35:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 0.71 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 17:35:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 0.82 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 17:35:52 TIME: core/quest.getDaily : 0.02 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 17:35:52 DB: SELECT * FROM UserAttributeTypes
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 0.36 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 17:35:52 DB: SELECT * FROM UserVariableTypes
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 0.34 ms
01.09 17:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 17:35:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 17:35:52 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:35:52 TIME: core/server.query : 1.13 ms
01.001.09 17:46:04 TIMER: Starting timer...
01.09 17:46:04 TIMER: Timer running...
01.09 17:46:04 DB: SELECT * FROM GameVars
01.09 17:46:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:46:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:46:04 DB: SELECT * FROM Shops WHERE ID = 1
01.09 17:46:04 TEMP: load ./tmp/quest_daily_ids
01.09 17:46:04 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 17:46:04 TEMP: save ./tmp/quest_daily_ids
01.09 17:46:04 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 17:46:04 QUEUE: vdl.0 (thread) response server.login
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM LocalizationStrings
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 6.33 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM GameVars
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.84 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.78 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.55 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.56 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.8 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 17:46:04 TIME: core/quest.getDaily : 0.03 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM UserAttributeTypes
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.3 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM UserVariableTypes
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.29 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 17:46:04 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 1.19 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM ItemGroups
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.32 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM Bundles ORDER BY ID
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.49 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.35 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 17:46:04 TIME: core/shop.getList : 0.03 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM EffectAttributeTypes
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.47 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM Effects
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.3 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 17:46:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.93 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 17:46:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.58 ms
01.09 17:46:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 17:46:04 DB: SELECT * FROM Badges
01.09 17:46:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:46:04 TIME: core/server.query : 0.41 ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:46:04 TIMER: Clans cache...
01.09 17:46:04 TIMER: Clans cache: 0ms
01.09 17:59:21 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 17:59:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 17:59:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 17:59:21 TIME: core/server.query : 2.83 ms
01.09 17:59:21 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 17:59:21 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 17:59:21 TIME: core/user.isOnlineID : 0.07 ms
01.09 17:59:21 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 17:59:21 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:59:21 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 17:59:21 STATS: cache [user], database [797 calls, 0 reads, 0 writes]
01.09 17:59:21 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 17:59:21 READDB: SELECT * FROM Users WHERE ID = 3
01.09 17:59:21 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.83 ms]
01.09 17:59:21 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 17:59:21 QUEUE: vdl.0 (thread) response core/cache.get
01.09 17:59:21 TIME: core/cache.get : 4.04 ms
01.09 17:59:21 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 17:59:21 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:59:21 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 17:59:21 STATS: cache [questdata], database [797 calls, 0 reads, 0 writes]
01.09 17:59:21 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 17:59:21 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 17:59:21 QUEUE: vdl.0 (thread) response core/cache.get
01.09 17:59:21 TIME: core/cache.get : 1.17 ms
01.09 17:59:21 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 17:59:21 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 17:59:21 TIME: core/user.loginPost : 0.09 ms
01.09 17:59:21 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 17:59:21 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 17:59:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 17:59:21 TIME: vdl/cache.battle.find : 2.03 ms
01.09 17:59:21 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 17:59:21 DB: SELECT nextval('Battle_id_seq') AS id
01.09 17:59:21 READDB: SELECT ID FROM Battle WHERE ID = 17
01.09 17:59:21 READDB: INSERT INTO Battle (ID) VALUES (17)
01.09 17:59:21 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 17:59:21 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 17:59:21 STATS: cache [battle], database [797 calls, 0 reads, 0 writes]
01.09 17:59:21 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 17:59:21 READDB: SELECT * FROM Battle WHERE ID = 17
01.09 17:59:21 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.75 ms]
01.09 17:59:21 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 17:59:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 17, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 17:59:21 TIME: vdl/cache.battle.create : 33.09 ms
01.09 17:59:26 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 17
01.09 17:59:28 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 17:59:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 17:59:28 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 17:59:28 TIME: core/server.query : 2.78 ms
01.09 17:59:28 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 17:59:28 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 17:59:28 TIME: core/user.isOnlineID : 0.11 ms
01.09 17:59:28 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 17:59:28 READDB: SELECT * FROM Users WHERE ID = 2
01.09 17:59:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 17:59:28 TIME: core/cache.get : 1.83 ms
01.09 17:59:28 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 17:59:28 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 17:59:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 17:59:28 TIME: core/cache.get : 1.06 ms
01.09 17:59:28 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 17:59:28 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 17:59:28 TIME: core/user.loginPost : 0.13 ms
01.09 17:59:28 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 17:59:28 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 17:59:28 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 17:59:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [17], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 17:59:28 TIME: vdl/cache.battle.find : 2.47 ms
01.09 17:59:28 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 17, selfId => 2, _type => vdl/cache.battle.join }
01.09 17:59:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 17, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
01.09 17:59:28 TIME: vdl/cache.battle.join : 0.11 ms
01.09 17:59:28 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
01.09 17:59:28 DB: SELECT name FROM users WHERE id=2
01.09 17:59:28 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
01.09 17:59:28 TIME: core/server.query : 1.9 ms
01.09 17:59:28 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
01.09 17:59:28 DB: SELECT name FROM users WHERE id=3
01.09 17:59:28 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
01.09 17:59:28 TIME: core/server.query : 0.64 ms
01.09 17:59:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 17:59:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 17:59:29 TIME: core/cache.update : 0.18 ms
01.09 17:59:30 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 17:59:31 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 17
01.09 17:59:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1472741968 } }}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 17:59:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 17:59:34 TIME: core/cache.update : 0.21 ms
01.09 17:59:34 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472741968,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
