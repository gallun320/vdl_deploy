24.10 16:00:31 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 2, 0)
24.10 16:00:31 TIMER: Clans cache...
24.10 16:00:31 TIMER: Clans cache: 0ms
24.10 16:00:31 TIMER: Check tournament...
24.10 16:00:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:00' OR rounddate = '2016-24-10 16:00'
24.10 16:00:31 TIMER: Check tournament: 1ms
24.10 16:00:31 TIMER: Clans cache...
24.10 16:00:31 TIMER: Clans cache: 0ms
24.10 16:00:31 TIMER: Check tournament...
24.10 16:00:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:01' OR rounddate = '2016-24-10 16:01'
24.10 16:00:31 TIMER: Check tournament: 0ms
24.10 16:00:31 TIMER: Clans cache...
24.10 16:00:31 TIMER: Clans cache: 0ms
24.10 16:00:31 TIMER: Check tournament...
24.10 16:00:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:02' OR rounddate = '2016-24-10 16:02'
24.10 16:00:31 TIMER: Check tournament: 3ms
24.10 16:00:31 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
24.10 16:00:31 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
24.10 16:00:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 64 }}, errorCode => ok, _type => core/server.query }
24.10 16:00:31 TIME: core/server.query : 2.61 ms
24.10 16:00:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 64, _type => vdl/cache.battle.infoRoom }
24.10 16:00:31 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 16:00:31 STATS: cache [battle], segments [4 calls, 2 hits, 1 misses]
24.10 16:00:31 STATS: cache [battle], database [600 calls, 1 reads, 1 writes]
24.10 16:00:31 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:00:31 READDB: SELECT * FROM Battle WHERE ID = 64
24.10 16:00:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 16:00:31 TIME: vdl/cache.battle.infoRoom : 1.71 ms
24.10 16:00:31 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 64, _type => vdl/cache.battle.deleteRoom }
24.10 16:00:31 ROOM: deleted room 64
24.10 16:00:31 DB: DELETE FROM Battle WHERE ID = 64
24.10 16:00:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 16:00:31 TIME: vdl/cache.battle.deleteRoom : 13.63 ms
24.10 16:00:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
24.10 16:00:31 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:00:31 STATS: cache [user], segments [9 calls, 2 hits, 4 misses]
24.10 16:00:31 STATS: cache [user], database [600 calls, 2 reads, 2 writes]
24.10 16:00:31 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 16:00:31 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.82 ms]
24.10 16:00:31 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.12 ms]
24.10 16:00:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 16:00:31 TIME: core/cache.update : 0.51 ms
24.10 16:00:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
24.10 16:00:31 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:00:31 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
24.10 16:00:31 STATS: cache [questdata], database [600 calls, 2 reads, 0 writes]
24.10 16:00:31 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 16:00:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:00:31 TIME: core/cache.update : 0.4 ms
24.10 16:00:31 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
24.10 16:00:31 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 16:00:31 TIME: core/user.logoutPost : 0.27 ms
24.10 16:00:31 TIMER: Clans cache...
24.10 16:00:31 TIMER: Clans cache: 0ms
24.10 16:00:31 TIMER: Check tournament...
24.10 16:00:31 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:03' OR rounddate = '2016-24-10 16:03'
24.10 16:00:31 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 16:00:31 STATS: cache [tournament], segments [3 calls, 1 hits, 1 misses]
24.10 16:00:31 STATS: cache [tournament], database [600 calls, 1 reads, 1 writes]
24.10 16:00:31 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 16:00:31 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:00:31 DB: SELECT nextval('Battle_id_seq') AS id
24.10 16:00:31 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 16:00:31 READDB: SELECT ID FROM Battle WHERE ID = 65
24.10 16:00:31 READDB: INSERT INTO Battle (ID) VALUES (65)
24.10 16:00:31 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
24.10 16:00:31 READDB: SELECT * FROM Battle WHERE ID = 65
24.10 16:00:31 DB: SELECT name FROM users WHERE id=2
24.10 16:03:32 DB: SELECT name FROM users WHERE id=76
24.10 16:03:32 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 16:03, id => 2, enemy.num => 2, battleId => 65, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 16:03:32 TIMER: Check tournament: 58ms
24.10 16:03:37 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 65
24.10 16:03:37 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:03', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[76,2],"battleActive":[65]}}', rounddate = E'2016-24-10 16:03' WHERE ID = 1
24.10 16:03:42 BLOCKREMOVE: user 76 removed
24.10 16:03:42 BLOCKREMOVE: questdata 76 removed
24.10 16:03:42 BLOCKREMOVE: battle 64 removed
24.10 16:03:47 BLOCKREMOVE: battle 65 removed
24.10 16:03:47 BLOCKREMOVE: tournament 1 removed
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:04' OR rounddate = '2016-24-10 16:04'
24.10 16:04:32 TIMER: Check tournament: 1ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:05' OR rounddate = '2016-24-10 16:05'
24.10 16:04:32 TIMER: Check tournament: 1ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:06' OR rounddate = '2016-24-10 16:06'
24.10 16:04:32 TIMER: Check tournament: 1ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:07' OR rounddate = '2016-24-10 16:07'
24.10 16:04:32 TIMER: Check tournament: 0ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:08' OR rounddate = '2016-24-10 16:08'
24.10 16:04:32 TIMER: Check tournament: 1ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:09' OR rounddate = '2016-24-10 16:09'
24.10 16:04:32 TIMER: Check tournament: 0ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:10' OR rounddate = '2016-24-10 16:10'
24.10 16:04:32 TIMER: Check tournament: 2ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:11' OR rounddate = '2016-24-10 16:11'
24.10 16:04:32 TIMER: Check tournament: 1ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:12' OR rounddate = '2016-24-10 16:12'
24.10 16:04:32 TIMER: Check tournament: 1ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:13' OR rounddate = '2016-24-10 16:13'
24.10 16:04:32 TIMER: Check tournament: 2ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:14' OR rounddate = '2016-24-10 16:14'
24.10 16:04:32 TIMER: Check tournament: 1ms
24.10 16:04:32 TIMER: Clans cache...
24.10 16:04:32 TIMER: Clans cache: 0ms
24.10 16:04:32 TIMER: Check tournament...
24.10 16:04:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:15' OR rounddate = '2016-24-10 16:15'
24.10 16:04:32 TIMER: Check tournament: 1ms
24.10 16:15:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 16:15:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 16:15:45 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
24.10 16:15:45 TIME: core/server.query : 1.23 ms
24.10 16:15:45 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 16:15:45 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 16:15:45 TIME: core/user.isOnlineID : 0.12 ms
24.10 16:15:45 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 16:15:45 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:15:45 STATS: cache [user], segments [11 calls, 4 hits, 4 misses]
24.10 16:15:45 STATS: cache [user], database [1334 calls, 2 reads, 3 writes]
24.10 16:15:45 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
24.10 16:15:45 READDB: SELECT * FROM Users WHERE ID = 76
24.10 16:15:45 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.82 ms]
24.10 16:15:45 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.16 ms]
24.10 16:15:45 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477308408, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 76 } }
24.10 16:15:45 TIME: core/cache.get : 2.3 ms
24.10 16:15:45 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 16:15:45 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:15:45 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
24.10 16:15:45 STATS: cache [questdata], database [1334 calls, 2 reads, 1 writes]
24.10 16:15:45 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
24.10 16:15:45 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 16:15:45 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
24.10 16:15:45 TIME: core/cache.get : 1.55 ms
24.10 16:15:45 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 16:15:45 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:15:45 TIME: core/user.loginPost : 0.12 ms
24.10 16:15:47 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 16:15:47 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:15:47 TIME: vdl/cache.user.getData : 0.19 ms
24.10 16:15:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 16:15:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:15:52 TIME: core/cache.update : 0.14 ms
24.10 16:15:52 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 16:15:52 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 16:15:52 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:15:53 STATS: cache [tournament], segments [5 calls, 2 hits, 2 misses]
24.10 16:15:53 STATS: cache [tournament], database [1341 calls, 2 reads, 2 writes]
24.10 16:15:53 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 16:15:53 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments []
24.10 16:15:53 TIME: vdl/cache.tournament.getBattlesTournaments : 1.41 ms
24.10 16:15:53 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 16:15:53 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.14 ms
24.10 16:15:53 NET: vdl.0 (thread) request core/user.sendTo { id => null, _type => core/user.sendTo, msg => { _type => battle.end } }
24.10 16:15:53 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
24.10 16:15:53 TIME: core/user.sendTo : 0.09 ms
24.10 16:15:53 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 65, _type => vdl/cache.battle.finishRoom }
24.10 16:15:53 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
24.10 16:15:53 STATS: cache [battle], segments [9 calls, 5 hits, 3 misses]
24.10 16:15:53 STATS: cache [battle], database [1341 calls, 3 reads, 2 writes]
24.10 16:15:53 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:15:53 READDB: SELECT * FROM Battle WHERE ID = 65
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 16:15:53 TIME: vdl/cache.battle.finishRoom : 0.96 ms
24.10 16:15:53 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 65, _type => vdl/cache.battle.deleteRoom }
24.10 16:15:53 ROOM: deleted room 65
24.10 16:15:53 DB: DELETE FROM Battle WHERE ID = 65
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 16:15:53 TIME: vdl/cache.battle.deleteRoom : 12.77 ms
24.10 16:15:53 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [65] }
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
24.10 16:15:53 TIME: vdl/cache.tournament.setBattlesTournaments : 0.21 ms
24.10 16:15:53 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [76,2], _type => vdl/cache.tournament.setUsersTournament }
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
24.10 16:15:53 TIME: vdl/cache.tournament.setUsersTournament : 0.14 ms
24.10 16:15:53 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => null, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => null, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 16:15:53 TIME: vdl/cache.tournament.setGrid : 0.15 ms
24.10 16:15:53 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-24-10 16:03, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound }
24.10 16:15:53 TRACE: vdl/cache.tournament.addRound : Invalid field access : indexOf
24.10 16:15:53 TRACE: vdl/cache.tournament.addRound : 
Called from snipe/cache/Block.hx line 132
Called from modules/VDLCache.hx line 242
Called from modules/VDLCache.hx line 112
Called from snipe/cache/CacheServer.hx line 487
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => _requestException, _type => vdl/cache.tournament.addRound }
24.10 16:15:53 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
24.10 16:15:53 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
24.10 16:15:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 16:15:53 TIME: core/server.query : 0.94 ms
24.10 16:15:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 16:15:53 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 16:15:53 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 16:15:53 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 16:15:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 16:15:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
24.10 16:15:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 16:15:53 TIME: core/cache.update : 0.17 ms
24.10 16:15:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
24.10 16:15:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:15:53 TIME: core/cache.update : 0.16 ms
24.10 16:15:53 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
24.10 16:15:53 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 16:15:53 TIME: core/user.logoutPost : 0.12 ms
24.10 16:15:53 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 16:15:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
24.10 16:15:58 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'true', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 65
24.10 16:15:58 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:17', roundinterval = E'60', params = E'{"round":{},"params":{"battleFinished":[65],"usersList":[76,2],"battleActive":[]}}', rounddate = E'2016-24-10 16:17' WHERE ID = 1
24.10 16:16:03 BLOCKREMOVE: user 2 removed
24.10 16:16:03 BLOCKREMOVE: questdata 2 removed
24.10 16:16:08 BLOCKREMOVE: battle 65 removed
24.10 16:16:08 BLOCKREMOVE: tournament 1 removed
24.10 16:16:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 16:16:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 16:16:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 16:16:12 TIME: core/server.query : 1.56 ms
24.10 16:16:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 16:16:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 16:16:12 TIME: core/user.isOnlineID : 0.12 ms
24.10 16:16:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 16:16:12 READDB: SELECT * FROM Users WHERE ID = 2
24.10 16:16:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 16:16:12 TIME: core/cache.get : 1.32 ms
24.10 16:16:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 16:16:12 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 16:16:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 16:16:12 TIME: core/cache.get : 0.68 ms
24.10 16:16:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 16:16:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:16:12 TIME: core/user.loginPost : 0.09 ms
24.10 16:16:18 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 16:16:18 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:16:18 TIME: vdl/cache.user.getData : 0.15 ms
24.10 16:16:22 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 16:16:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:16:22 TIME: core/cache.update : 0.13 ms
24.10 16:16:22 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 16:16:32 TIMER: Clans cache...
24.10 16:16:32 TIMER: Clans cache: 0ms
24.10 16:16:32 TIMER: Check tournament...
24.10 16:16:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:16' OR rounddate = '2016-24-10 16:16'
24.10 16:16:32 TIMER: Check tournament: 0ms
24.10 16:16:32 TIMER: Clans cache...
24.10 16:16:32 TIMER: Clans cache: 0ms
24.10 16:16:32 TIMER: Check tournament...
24.10 16:16:32 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:17' OR rounddate = '2016-24-10 16:17'
24.10 16:16:32 STATS: cache [tournament], get [8 calls, 4 cache hits, 3 cache misses, 0 same version, 0 not found]
24.10 16:16:32 STATS: cache [tournament], segments [13 calls, 9 hits, 3 misses]
24.10 16:16:32 STATS: cache [tournament], database [1440 calls, 3 reads, 3 writes]
24.10 16:16:32 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 16:16:32 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:16:32 DB: SELECT nextval('Battle_id_seq') AS id
24.10 16:16:32 READDB: SELECT ID FROM Battle WHERE ID = 66
24.10 16:16:32 READDB: INSERT INTO Battle (ID) VALUES (66)
24.10 16:16:32 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 1 not found]
24.10 16:16:32 STATS: cache [battle], segments [13 calls, 7 hits, 5 misses]
24.10 16:16:32 STATS: cache [battle], database [1440 calls, 5 reads, 3 writes]
24.10 16:16:32 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:16:32 READDB: SELECT * FROM Battle WHERE ID = 66
24.10 16:16:32 DB: SELECT name FROM users WHERE id=2
24.10 16:16:32 DB: SELECT name FROM users WHERE id=76
24.10 16:16:32 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 16:17, id => 2, enemy.num => 2, battleId => 66, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 16:16:32 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 16:17, id => 76, enemy.num => 1, battleId => 66, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 16:16:32 TIMER: Check tournament: 61ms
24.10 16:17:37 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 66
24.10 16:17:37 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:17', roundinterval = E'60', params = E'{"round":{},"params":{"battleFinished":[65],"usersList":[76,2],"battleActive":[66]}}', rounddate = E'2016-24-10 16:17' WHERE ID = 1
24.10 16:17:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 66, _type => vdl/cache.battle.infoRoom }
24.10 16:17:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 16:17:39 TIME: vdl/cache.battle.infoRoom : 0.11 ms
24.10 16:17:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 66, _type => vdl/cache.battle.infoRoom }
24.10 16:17:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 16:17:44 TIME: vdl/cache.battle.infoRoom : 0.12 ms
24.10 16:17:47 BLOCKREMOVE: tournament 1 removed
24.10 16:17:49 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 16:17:49 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:17:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [66]
24.10 16:17:49 TIME: vdl/cache.tournament.getBattlesTournaments : 1.18 ms
24.10 16:17:49 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 16:17:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 16:17:49 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.18 ms
24.10 16:17:49 NET: vdl.0 (thread) request core/user.sendTo { id => null, _type => core/user.sendTo, msg => { _type => battle.end } }
24.10 16:17:49 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
24.10 16:17:49 TIME: core/user.sendTo : 0.08 ms
24.10 16:17:49 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 66, _type => vdl/cache.battle.finishRoom }
24.10 16:17:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 16:17:49 TIME: vdl/cache.battle.finishRoom : 0.1 ms
24.10 16:17:49 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 66, _type => vdl/cache.battle.deleteRoom }
24.10 16:17:49 ROOM: deleted room 66
24.10 16:17:49 DB: DELETE FROM Battle WHERE ID = 66
24.10 16:17:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 16:17:49 TIME: vdl/cache.battle.deleteRoom : 20.8 ms
24.10 16:17:49 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [66] }
24.10 16:17:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
24.10 16:17:49 TIME: vdl/cache.tournament.setBattlesTournaments : 0.25 ms
24.10 16:17:49 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [76,2], _type => vdl/cache.tournament.setUsersTournament }
24.10 16:17:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
24.10 16:17:49 TIME: vdl/cache.tournament.setUsersTournament : 0.18 ms
24.10 16:17:49 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => null, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 16:17:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => null, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 16:17:49 TIME: vdl/cache.tournament.setGrid : 0.15 ms
24.10 16:17:49 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-24-10 16:17, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound }
24.10 16:17:49 TRACE: vdl/cache.tournament.addRound : Invalid field access : indexOf
24.10 16:17:49 TRACE: vdl/cache.tournament.addRound : 
Called from snipe/cache/Block.hx line 132
Called from modules/VDLCache.hx line 242
Called from modules/VDLCache.hx line 112
Called from snipe/cache/CacheServer.hx line 487
24.10 16:17:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => _requestException, _type => vdl/cache.tournament.addRound }
24.10 16:17:50 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'true', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 66
24.10 16:17:55 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:17', roundinterval = E'60', params = E'{"round":{},"params":{"battleFinished":[65,66],"usersList":[76,2],"battleActive":[]}}', rounddate = E'2016-24-10 16:17' WHERE ID = 1
24.10 16:18:00 BLOCKREMOVE: battle 66 removed
24.10 16:18:05 BLOCKREMOVE: tournament 1 removed
24.10 16:20:22 TIMER: Starting timer...
24.10 16:20:22 TIMER: Timer running...
24.10 16:20:22 DB: SELECT * FROM GameVars
24.10 16:20:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:20:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:20:22 DB: SELECT * FROM Shops WHERE ID = 1
24.10 16:20:22 TEMP: load ./tmp/quest_daily_ids
24.10 16:20:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 16:20:22 TEMP: save ./tmp/quest_daily_ids
24.10 16:20:22 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 16:20:22 QUEUE: vdl.0 (thread) response server.login
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM LocalizationStrings
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 8.1 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM GameVars
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.52 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.58 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.63 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.48 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.76 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 16:20:22 TIME: core/quest.getDaily : 0.03 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM UserAttributeTypes
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.33 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM UserVariableTypes
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.31 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 16:20:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 1.17 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM ItemGroups
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.29 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM Bundles ORDER BY ID
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.67 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM BundleItems ORDER BY ID
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.42 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/shop.getList
24.10 16:20:22 TIME: core/shop.getList : 0.05 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM EffectAttributeTypes
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.51 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM Effects
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.31 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
24.10 16:20:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.67 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
24.10 16:20:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.51 ms
24.10 16:20:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
24.10 16:20:22 DB: SELECT * FROM Badges
24.10 16:20:22 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:22 TIME: core/server.query : 0.55 ms
24.10 16:20:57 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 16:20:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 16:20:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:20:57 TIME: core/server.query : 1.45 ms
24.10 16:20:57 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 16:20:57 QUEUE: vdl.0 (thread) response core/user.isOnlineID
24.10 16:20:57 TIME: core/user.isOnlineID : 0.05 ms
24.10 16:20:57 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 16:20:57 READDB: SELECT * FROM Users WHERE ID = 76
24.10 16:20:57 QUEUE: vdl.0 (thread) response core/cache.get
24.10 16:20:57 TIME: core/cache.get : 2.72 ms
24.10 16:20:57 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 16:20:57 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 16:20:57 QUEUE: vdl.0 (thread) response core/cache.get
24.10 16:20:57 TIME: core/cache.get : 1.15 ms
24.10 16:20:57 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 16:20:57 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:20:57 TIME: core/user.loginPost : 0.06 ms
24.10 16:20:59 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 16:20:59 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:20:59 TIME: vdl/cache.user.getData : 0.15 ms
24.10 16:21:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 16:21:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:21:03 TIME: core/cache.update : 0.07 ms
24.10 16:21:03 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 16:21:19 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 16:21:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 16:21:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 16:21:19 TIME: core/server.query : 1.64 ms
24.10 16:21:19 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 16:21:19 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 16:21:19 TIME: core/user.isOnlineID : 0.12 ms
24.10 16:21:19 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 16:21:19 READDB: SELECT * FROM Users WHERE ID = 2
24.10 16:21:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 16:21:19 TIME: core/cache.get : 2.14 ms
24.10 16:21:19 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 16:21:19 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 16:21:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 16:21:19 TIME: core/cache.get : 0.49 ms
24.10 16:21:19 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 16:21:19 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:21:19 TIME: core/user.loginPost : 0.05 ms
24.10 16:21:22 TIMER: Clans cache...
24.10 16:21:22 TIMER: Clans cache: 0ms
24.10 16:21:22 TIMER: Check tournament...
24.10 16:21:22 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:21' OR rounddate = '2016-24-10 16:21'
24.10 16:21:22 TIMER: Check tournament: 1ms
24.10 16:21:25 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 16:21:25 STATS: cache [user], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:21:25 STATS: cache [user], segments [7 calls, 1 hits, 4 misses]
24.10 16:21:25 STATS: cache [user], database [63 calls, 2 reads, 1 writes]
24.10 16:21:25 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 16:21:25 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:21:25 TIME: vdl/cache.user.getData : 0.25 ms
24.10 16:21:28 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 16:21:28 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.54 ms]
24.10 16:21:28 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.04 ms]
24.10 16:21:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:21:28 TIME: core/cache.update : 0.25 ms
24.10 16:21:29 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 16:22:23 TIMER: Clans cache...
24.10 16:22:23 TIMER: Clans cache: 0ms
24.10 16:22:23 TIMER: Check tournament...
24.10 16:22:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:22' OR rounddate = '2016-24-10 16:22'
24.10 16:22:23 TIMER: Check tournament: 1ms
24.10 16:22:23 TIMER: Clans cache...
24.10 16:22:23 TIMER: Clans cache: 0ms
24.10 16:22:23 TIMER: Check tournament...
24.10 16:22:23 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:23' OR rounddate = '2016-24-10 16:23'
24.10 16:22:23 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 16:22:23 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
24.10 16:22:23 STATS: cache [tournament], database [180 calls, 0 reads, 0 writes]
24.10 16:22:23 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 16:22:23 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:22:23 DB: SELECT nextval('Battle_id_seq') AS id
24.10 16:22:23 READDB: SELECT ID FROM Battle WHERE ID = 67
24.10 16:22:23 READDB: INSERT INTO Battle (ID) VALUES (67)
24.10 16:22:23 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 16:22:23 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
24.10 16:22:23 STATS: cache [battle], database [181 calls, 0 reads, 0 writes]
24.10 16:22:23 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:22:23 READDB: SELECT * FROM Battle WHERE ID = 67
24.10 16:22:23 DB: SELECT name FROM users WHERE id=2
24.10 16:22:23 DB: SELECT name FROM users WHERE id=76
24.10 16:22:23 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 16:23, id => 2, enemy.num => 2, battleId => 67, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 16:22:23 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 16:23, id => 76, enemy.num => 1, battleId => 67, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 16:22:23 TIMER: Check tournament: 52ms
24.10 16:23:28 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:23', roundinterval = E'60', params = E'{"round":{},"params":{"battleFinished":[65,66],"usersList":[76,2],"battleActive":[67]}}', rounddate = E'2016-24-10 16:23' WHERE ID = 1
24.10 16:23:29 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 67
24.10 16:23:38 BLOCKREMOVE: tournament 1 removed
24.10 16:23:39 BLOCKREMOVE: battle 67 removed
24.10 16:23:46 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 16:23:46 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:23:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [67]
24.10 16:23:46 TIME: vdl/cache.tournament.getBattlesTournaments : 0.77 ms
24.10 16:23:46 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 16:23:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 16:23:46 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.09 ms
24.10 16:23:46 NET: vdl.0 (thread) request core/user.sendTo { id => null, _type => core/user.sendTo, msg => { _type => battle.end } }
24.10 16:23:46 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
24.10 16:23:46 TIME: core/user.sendTo : 0.05 ms
24.10 16:23:46 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 67, _type => vdl/cache.battle.finishRoom }
24.10 16:23:46 READDB: SELECT * FROM Battle WHERE ID = 67
24.10 16:23:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 16:23:46 TIME: vdl/cache.battle.finishRoom : 0.48 ms
24.10 16:23:46 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 67, _type => vdl/cache.battle.deleteRoom }
24.10 16:23:46 ROOM: deleted room 67
24.10 16:23:46 DB: DELETE FROM Battle WHERE ID = 67
24.10 16:23:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 16:23:46 TIME: vdl/cache.battle.deleteRoom : 32.69 ms
24.10 16:23:46 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [67] }
24.10 16:23:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
24.10 16:23:46 TIME: vdl/cache.tournament.setBattlesTournaments : 0.12 ms
24.10 16:23:46 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [76,2], _type => vdl/cache.tournament.setUsersTournament }
24.10 16:23:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
24.10 16:23:46 TIME: vdl/cache.tournament.setUsersTournament : 0.11 ms
24.10 16:23:46 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => null, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 16:23:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => null, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 16:23:46 TIME: vdl/cache.tournament.setGrid : 0.08 ms
24.10 16:23:46 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-24-10 16:23, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound }
24.10 16:23:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => ok, _type => vdl/cache.tournament.addRound }
24.10 16:23:46 TIME: vdl/cache.tournament.addRound : 0.15 ms
24.10 16:23:52 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'true', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 67
24.10 16:23:52 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-24-10 16:23', roundinterval = E'60', params = E'{"round":{},"params":{"battleFinished":[65,66,67],"usersList":[76,2],"battleActive":[]}}', rounddate = E'2016-25-10 16:23' WHERE ID = 1
24.10 16:24:02 BLOCKREMOVE: battle 67 removed
24.10 16:24:02 BLOCKREMOVE: tournament 1 removed
24.10 16:24:57 TIMER: Starting timer...
24.10 16:24:57 TIMER: Timer running...
24.10 16:24:57 DB: SELECT * FROM GameVars
24.10 16:24:57 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:24:57 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:24:57 DB: SELECT * FROM Shops WHERE ID = 1
24.10 16:24:57 TEMP: load ./tmp/quest_daily_ids
24.10 16:24:57 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 16:24:57 TEMP: save ./tmp/quest_daily_ids
24.10 16:24:57 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 16:24:57 QUEUE: vdl.0 (thread) response server.login
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM LocalizationStrings
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 6.93 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM GameVars
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.56 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.63 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.44 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.74 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 1.21 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 16:24:57 TIME: core/quest.getDaily : 0.02 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM UserAttributeTypes
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.5 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM UserVariableTypes
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.35 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 16:24:57 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 1.53 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM ItemGroups
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.55 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM Bundles ORDER BY ID
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 1.11 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM BundleItems ORDER BY ID
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.55 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/shop.getList
24.10 16:24:57 TIME: core/shop.getList : 0.03 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM EffectAttributeTypes
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.55 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM Effects
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.38 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
24.10 16:24:57 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.9 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
24.10 16:24:57 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.92 ms
24.10 16:24:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
24.10 16:24:57 DB: SELECT * FROM Badges
24.10 16:24:57 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:24:57 TIME: core/server.query : 0.42 ms
24.10 16:24:57 TIMER: Clans cache...
24.10 16:24:57 TIMER: Clans cache: 0ms
24.10 16:24:57 TIMER: Check tournament...
24.10 16:24:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:25' OR rounddate = '2016-24-10 16:25'
24.10 16:24:57 TIMER: Check tournament: 0ms
24.10 16:26:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 16:26:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 16:26:44 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:26:44 TIME: core/server.query : 1.63 ms
24.10 16:26:44 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 16:26:44 QUEUE: vdl.0 (thread) response core/user.isOnlineID
24.10 16:26:44 TIME: core/user.isOnlineID : 0.03 ms
24.10 16:26:44 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 16:26:44 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 16:26:44 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
24.10 16:26:44 STATS: cache [user], database [107 calls, 0 reads, 0 writes]
24.10 16:26:44 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
24.10 16:26:44 READDB: SELECT * FROM Users WHERE ID = 76
24.10 16:26:44 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.38 ms]
24.10 16:26:44 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
24.10 16:26:44 QUEUE: vdl.0 (thread) response core/cache.get
24.10 16:26:44 TIME: core/cache.get : 2.51 ms
24.10 16:26:44 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 16:26:44 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 16:26:44 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
24.10 16:26:44 STATS: cache [questdata], database [107 calls, 0 reads, 0 writes]
24.10 16:26:44 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
24.10 16:26:44 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 16:26:44 QUEUE: vdl.0 (thread) response core/cache.get
24.10 16:26:44 TIME: core/cache.get : 0.84 ms
24.10 16:26:44 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 16:26:44 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:26:44 TIME: core/user.loginPost : 0.07 ms
24.10 16:26:45 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 16:26:45 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:26:45 TIME: vdl/cache.user.getData : 0.12 ms
24.10 16:26:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 16:26:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:26:52 TIME: core/cache.update : 0.08 ms
24.10 16:26:53 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 16:26:57 TIMER: Clans cache...
24.10 16:26:57 TIMER: Clans cache: 0ms
24.10 16:26:57 TIMER: Check tournament...
24.10 16:26:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:26' OR rounddate = '2016-24-10 16:26'
24.10 16:26:57 TIMER: Check tournament: 1ms
24.10 16:27:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 16:27:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 16:27:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 16:27:10 TIME: core/server.query : 1.17 ms
24.10 16:27:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 16:27:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 16:27:10 TIME: core/user.isOnlineID : 0.07 ms
24.10 16:27:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 16:27:10 READDB: SELECT * FROM Users WHERE ID = 2
24.10 16:27:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 16:27:10 TIME: core/cache.get : 0.74 ms
24.10 16:27:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 16:27:10 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 16:27:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 16:27:10 TIME: core/cache.get : 0.46 ms
24.10 16:27:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 16:27:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:27:10 TIME: core/user.loginPost : 0.05 ms
24.10 16:27:16 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 16:27:16 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:27:16 TIME: vdl/cache.user.getData : 0.1 ms
24.10 16:27:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 16:27:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:27:17 TIME: core/cache.update : 0.08 ms
24.10 16:27:18 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 16:27:57 TIMER: Clans cache...
24.10 16:27:57 TIMER: Clans cache: 0ms
24.10 16:27:57 TIMER: Check tournament...
24.10 16:27:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:27' OR rounddate = '2016-24-10 16:27'
24.10 16:27:57 TIMER: Check tournament: 1ms
24.10 16:27:57 TIMER: Clans cache...
24.10 16:27:57 TIMER: Clans cache: 0ms
24.10 16:27:57 TIMER: Check tournament...
24.10 16:27:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:28' OR rounddate = '2016-24-10 16:28'
24.10 16:27:57 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 16:27:57 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
24.10 16:27:57 STATS: cache [tournament], database [240 calls, 0 reads, 0 writes]
24.10 16:27:57 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 16:27:57 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:27:57 DB: SELECT nextval('Battle_id_seq') AS id
24.10 16:27:57 READDB: SELECT ID FROM Battle WHERE ID = 68
24.10 16:27:57 READDB: INSERT INTO Battle (ID) VALUES (68)
24.10 16:27:57 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 16:27:57 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
24.10 16:27:57 STATS: cache [battle], database [241 calls, 0 reads, 0 writes]
24.10 16:27:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:27:57 READDB: SELECT * FROM Battle WHERE ID = 68
24.10 16:27:57 DB: SELECT name FROM users WHERE id=2
24.10 16:27:57 DB: SELECT name FROM users WHERE id=76
24.10 16:27:57 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 2, roundDate => 2016-25-10 16:28, id => 2, enemy.num => 2, battleId => 68, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 16:27:57 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 2, roundDate => 2016-25-10 16:28, id => 76, enemy.num => 1, battleId => 68, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 16:27:57 TIMER: Check tournament: 58ms
24.10 16:29:02 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-24-10 16:28', roundinterval = E'60', params = E'{"round":{},"params":{"battleFinished":[65,66,67],"usersList":[76,2],"battleActive":[68]}}', rounddate = E'2016-25-10 16:28' WHERE ID = 1
24.10 16:29:03 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 68
24.10 16:29:12 BLOCKREMOVE: tournament 1 removed
24.10 16:29:13 BLOCKREMOVE: battle 68 removed
24.10 16:29:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 68, _type => vdl/cache.battle.infoRoom }
24.10 16:29:21 READDB: SELECT * FROM Battle WHERE ID = 68
24.10 16:29:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 16:29:21 TIME: vdl/cache.battle.infoRoom : 0.81 ms
24.10 16:29:31 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 16:29:31 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:29:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [68]
24.10 16:29:31 TIME: vdl/cache.tournament.getBattlesTournaments : 0.74 ms
24.10 16:29:31 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 16:29:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 16:29:31 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.07 ms
24.10 16:29:31 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 68, _type => vdl/cache.battle.finishRoom }
24.10 16:29:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 16:29:31 TIME: vdl/cache.battle.finishRoom : 0.07 ms
24.10 16:29:31 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 68, _type => vdl/cache.battle.deleteRoom }
24.10 16:29:31 ROOM: deleted room 68
24.10 16:29:31 DB: DELETE FROM Battle WHERE ID = 68
24.10 16:29:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 16:29:31 TIME: vdl/cache.battle.deleteRoom : 24.12 ms
24.10 16:29:31 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [68] }
24.10 16:29:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
24.10 16:29:31 TIME: vdl/cache.tournament.setBattlesTournaments : 0.09 ms
24.10 16:29:31 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [2], _type => vdl/cache.tournament.setUsersTournament }
24.10 16:29:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
24.10 16:29:31 TIME: vdl/cache.tournament.setUsersTournament : 0.06 ms
24.10 16:29:31 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 2, round => 2, player1 => 2, player2 => 76 }], tournamentId => 1, round => 2, _type => vdl/cache.tournament.setGrid }
24.10 16:29:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 2, round => 2, player1 => 2, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 16:29:31 TIME: vdl/cache.tournament.setGrid : 0.04 ms
24.10 16:29:31 NET: vdl.0 (thread) request vdl/cache.tournament.deleteTournament { tournamentId => 1, _type => vdl/cache.tournament.deleteTournament }
24.10 16:29:31 TOURNAMENT: deleted tournament 1
24.10 16:29:31 DB: DELETE FROM tournament WHERE ID = 1
24.10 16:29:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.deleteTournament { errorCode => ok, _type => vdl/cache.tournament.deleteTournament }
24.10 16:29:31 TIME: vdl/cache.tournament.deleteTournament : 10.57 ms
24.10 16:29:32 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'true', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 68
24.10 16:29:37 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-24-10 16:28', roundinterval = E'60', params = E'{"round":{},"params":{"battleFinished":[65,66,67,68],"usersList":[2],"battleActive":[]}}', rounddate = E'2016-25-10 16:28' WHERE ID = 1
24.10 16:29:42 BLOCKREMOVE: battle 68 removed
24.10 16:29:47 BLOCKREMOVE: tournament 1 removed
24.10 16:29:57 TIMER: Clans cache...
24.10 16:29:57 TIMER: Clans cache: 0ms
24.10 16:29:57 TIMER: Check tournament...
24.10 16:29:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:29' OR rounddate = '2016-24-10 16:29'
24.10 16:29:57 TIMER: Check tournament: 0ms
24.10 16:29:57 TIMER: Clans cache...
24.10 16:29:57 TIMER: Clans cache: 0ms
24.10 16:29:57 TIMER: Check tournament...
24.10 16:29:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:30' OR rounddate = '2016-24-10 16:30'
24.10 16:29:57 TIMER: Check tournament: 0ms
24.10 16:29:57 TIMER: Clans cache...
24.10 16:29:57 TIMER: Clans cache: 0ms
24.10 16:29:57 TIMER: Check tournament...
24.10 16:29:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:31' OR rounddate = '2016-24-10 16:31'
24.10 16:29:57 TIMER: Check tournament: 0ms
24.10 16:29:57 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
24.10 16:29:57 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
24.10 16:29:57 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 16:29:57 TIME: core/server.query : 1.02 ms
24.10 16:29:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 16:29:57 STATS: cache [battle], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:29:57 STATS: cache [battle], segments [8 calls, 5 hits, 2 misses]
24.10 16:29:57 STATS: cache [battle], database [480 calls, 2 reads, 2 writes]
24.10 16:29:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:29:57 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 16:29:57 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 16:29:57 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 16:29:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 16:29:57 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
24.10 16:29:57 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:29:57 STATS: cache [user], segments [9 calls, 2 hits, 4 misses]
24.10 16:29:57 STATS: cache [user], database [480 calls, 2 reads, 2 writes]
24.10 16:29:57 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 16:29:57 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.04 ms]
24.10 16:29:57 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.08 ms]
24.10 16:29:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 16:29:57 TIME: core/cache.update : 0.33 ms
24.10 16:29:57 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
24.10 16:29:57 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:29:57 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
24.10 16:29:57 STATS: cache [questdata], database [480 calls, 2 reads, 0 writes]
24.10 16:29:57 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 16:29:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:29:57 TIME: core/cache.update : 0.27 ms
24.10 16:29:57 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
24.10 16:29:57 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 16:29:57 TIME: core/user.logoutPost : 0.07 ms
24.10 16:29:57 TIMER: Clans cache...
24.10 16:29:57 TIMER: Clans cache: 0ms
24.10 16:29:57 TIMER: Check tournament...
24.10 16:29:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:32' OR rounddate = '2016-24-10 16:32'
24.10 16:29:57 TIMER: Check tournament: 0ms
24.10 16:29:57 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 16:29:57 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
24.10 16:33:07 BLOCKREMOVE: user 76 removed
24.10 16:33:07 BLOCKREMOVE: questdata 76 removed
24.10 16:33:57 TIMER: Clans cache...
24.10 16:33:57 TIMER: Clans cache: 0ms
24.10 16:33:57 TIMER: Check tournament...
24.10 16:33:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:33' OR rounddate = '2016-24-10 16:33'
24.10 16:33:57 TIMER: Check tournament: 2ms
24.10 16:33:57 TIMER: Clans cache...
24.10 16:33:57 TIMER: Clans cache: 0ms
24.10 16:33:57 TIMER: Check tournament...
24.10 16:33:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:34' OR rounddate = '2016-24-10 16:34'
24.10 16:33:57 TIMER: Check tournament: 0ms
24.10 16:33:57 TIMER: Clans cache...
24.10 16:33:57 TIMER: Clans cache: 0ms
24.10 16:33:57 TIMER: Check tournament...
24.10 16:33:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:35' OR rounddate = '2016-24-10 16:35'
24.10 16:33:57 TIMER: Check tournament: 1ms
24.10 16:36:23 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 16:36:23 STATS: cache [tournament], get [6 calls, 3 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:36:23 STATS: cache [tournament], segments [11 calls, 8 hits, 2 misses]
24.10 16:36:23 STATS: cache [tournament], database [687 calls, 2 reads, 2 writes]
24.10 16:36:23 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 16:36:23 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:36:23 TRACE: vdl/cache.tournament.getBattlesTournaments : Invalid field access : get
24.10 16:36:23 TRACE: vdl/cache.tournament.getBattlesTournaments : 
Called from modules/VDLCache.hx line 487
Called from modules/VDLCache.hx line 104
Called from snipe/cache/CacheServer.hx line 487
24.10 16:36:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments { errorCode => _requestException, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 16:36:23 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
24.10 16:36:23 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
24.10 16:36:23 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 16:36:23 TIME: core/server.query : 0.9 ms
24.10 16:36:23 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 16:36:23 STATS: cache [battle], get [5 calls, 1 cache hits, 3 cache misses, 0 same version, 1 not found]
24.10 16:36:23 STATS: cache [battle], segments [9 calls, 5 hits, 3 misses]
24.10 16:36:23 STATS: cache [battle], database [687 calls, 3 reads, 2 writes]
24.10 16:36:23 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:36:23 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 16:36:23 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 16:36:23 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 16:36:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 16:36:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
24.10 16:36:23 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:36:23 STATS: cache [user], segments [11 calls, 4 hits, 4 misses]
24.10 16:36:23 STATS: cache [user], database [687 calls, 2 reads, 3 writes]
24.10 16:36:23 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 16:36:23 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.04 ms]
24.10 16:36:23 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.12 ms]
24.10 16:36:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 16:36:23 TIME: core/cache.update : 0.27 ms
24.10 16:36:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
24.10 16:36:23 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:36:23 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
24.10 16:36:23 STATS: cache [questdata], database [687 calls, 2 reads, 1 writes]
24.10 16:36:23 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 16:36:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:36:23 TIME: core/cache.update : 0.18 ms
24.10 16:36:23 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
24.10 16:36:23 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 16:36:23 TIME: core/user.logoutPost : 0.06 ms
24.10 16:36:24 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 16:36:24 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
24.10 16:36:34 BLOCKREMOVE: user 2 removed
24.10 16:36:34 BLOCKREMOVE: questdata 2 removed
24.10 16:36:57 TIMER: Clans cache...
24.10 16:36:57 TIMER: Clans cache: 0ms
24.10 16:36:57 TIMER: Check tournament...
24.10 16:36:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:36' OR rounddate = '2016-24-10 16:36'
24.10 16:36:57 TIMER: Check tournament: 0ms
24.10 16:36:57 TIMER: Clans cache...
24.10 16:36:57 TIMER: Clans cache: 0ms
24.10 16:36:57 TIMER: Check tournament...
24.10 16:36:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:37' OR rounddate = '2016-24-10 16:37'
24.10 16:36:57 TIMER: Check tournament: 0ms
24.10 16:36:57 TIMER: Clans cache...
24.10 16:36:57 TIMER: Clans cache: 0ms
24.10 16:36:57 TIMER: Check tournament...
24.10 16:36:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:38' OR rounddate = '2016-24-10 16:38'
24.10 16:36:57 TIMER: Check tournament: 0ms
24.10 16:36:57 TIMER: Clans cache...
24.10 16:36:57 TIMER: Clans cache: 0ms
24.10 16:36:57 TIMER: Check tournament...
24.10 16:36:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:39' OR rounddate = '2016-24-10 16:39'
24.10 16:36:57 TIMER: Check tournament: 0ms
24.10 16:36:57 TIMER: Clans cache...
24.10 16:36:57 TIMER: Clans cache: 0ms
24.10 16:36:57 TIMER: Check tournament...
24.10 16:36:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:40' OR rounddate = '2016-24-10 16:40'
24.10 16:36:57 TIMER: Check tournament: 0ms
24.10 16:36:57 TIMER: Clans cache...
24.10 16:36:57 TIMER: Clans cache: 0ms
24.10 16:36:57 TIMER: Check tournament...
24.10 16:36:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:41' OR rounddate = '2016-24-10 16:41'
24.10 16:36:57 TIMER: Check tournament: 1ms
24.10 16:36:57 TIMER: Clans cache...
24.10 16:36:57 TIMER: Clans cache: 0ms
24.10 16:36:57 TIMER: Check tournament...
24.10 16:36:57 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:42' OR rounddate = '2016-24-10 16:42'
24.10 16:36:57 TIMER: Check tournament: 0ms
24.10 16:43:33 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 16:43:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 16:43:33 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
24.10 16:43:33 TIME: core/server.query : 1.66 ms
24.10 16:43:33 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 16:43:33 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 16:43:33 TIME: core/user.isOnlineID : 0.06 ms
24.10 16:43:33 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 16:43:33 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:43:33 STATS: cache [user], segments [13 calls, 6 hits, 4 misses]
24.10 16:43:33 STATS: cache [user], database [1116 calls, 2 reads, 4 writes]
24.10 16:43:33 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
24.10 16:43:33 READDB: SELECT * FROM Users WHERE ID = 76
24.10 16:43:33 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.17 ms]
24.10 16:43:33 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.12 ms]
24.10 16:43:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477308408, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 76 } }
24.10 16:43:33 TIME: core/cache.get : 1.95 ms
24.10 16:43:33 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 16:43:33 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:43:33 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
24.10 16:43:33 STATS: cache [questdata], database [1116 calls, 2 reads, 2 writes]
24.10 16:43:33 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
24.10 16:43:33 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 16:43:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
24.10 16:43:33 TIME: core/cache.get : 0.83 ms
24.10 16:43:33 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 16:43:33 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:43:33 TIME: core/user.loginPost : 0.08 ms
24.10 16:43:34 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 16:43:34 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:43:34 TIME: vdl/cache.user.getData : 0.13 ms
24.10 16:43:42 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 16:43:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:43:42 TIME: core/cache.update : 0.13 ms
24.10 16:43:42 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 16:46:13 TIMER: Starting timer...
24.10 16:46:13 TIMER: Timer running...
24.10 16:46:13 DB: SELECT * FROM GameVars
24.10 16:46:13 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:46:13 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:46:13 DB: SELECT * FROM Shops WHERE ID = 1
24.10 16:46:13 TEMP: load ./tmp/quest_daily_ids
24.10 16:46:13 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 16:46:13 TEMP: save ./tmp/quest_daily_ids
24.10 16:46:13 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 16:46:13 QUEUE: vdl.0 (thread) response server.login
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 16:46:13 DB: SELECT * FROM LocalizationStrings
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:13 TIME: core/server.query : 8.21 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 16:46:13 DB: SELECT * FROM GameVars
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:13 TIME: core/server.query : 0.74 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 16:46:13 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:13 TIME: core/server.query : 1 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 16:46:13 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:13 TIME: core/server.query : 0.6 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 16:46:13 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:13 TIME: core/server.query : 0.69 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 16:46:13 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:13 TIME: core/server.query : 1.18 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 16:46:13 TIME: core/quest.getDaily : 0.04 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 16:46:13 DB: SELECT * FROM UserAttributeTypes
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:13 TIME: core/server.query : 0.51 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 16:46:13 DB: SELECT * FROM UserVariableTypes
24.10 16:46:13 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:13 TIME: core/server.query : 1.08 ms
24.10 16:46:13 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 16:46:13 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.Typ24.10 16:46:18 TIMER: Starting timer...
24.10 16:46:18 TIMER: Timer running...
24.10 16:46:18 DB: SELECT * FROM GameVars
24.10 16:46:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:46:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:46:18 DB: SELECT * FROM Shops WHERE ID = 1
24.10 16:46:18 TEMP: load ./tmp/quest_daily_ids
24.10 16:46:18 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 16:46:18 TEMP: save ./tmp/quest_daily_ids
24.10 16:46:18 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 16:46:18 QUEUE: vdl.0 (thread) response server.login
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM LocalizationStrings
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 10.61 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM GameVars
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.83 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 1.22 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.85 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.99 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 1.88 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 16:46:18 TIME: core/quest.getDaily : 0.12 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM UserAttributeTypes
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.89 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM UserVariableTypes
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.85 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 16:46:18 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 2.84 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM ItemGroups
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 1.15 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM Bundles ORDER BY ID
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 1 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM BundleItems ORDER BY ID
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.91 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/shop.getList
24.10 16:46:18 TIME: core/shop.getList : 0.08 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM EffectAttributeTypes
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.74 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM Effects
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.62 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
24.10 16:46:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 1.36 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
24.10 16:46:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 1.25 ms
24.10 16:46:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
24.10 16:46:18 DB: SELECT * FROM Badges
24.10 16:46:18 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:46:18 TIME: core/server.query : 0.79 ms
24.10 16:47:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
24.10 16:47:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
24.10 16:47:06 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:47:06 TIME: core/server.query : 1.47 ms
24.10 16:47:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
24.10 16:47:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID
24.10 16:47:06 TIME: core/user.isOnlineID : 0.09 ms
24.10 16:47:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
24.10 16:47:06 READDB: SELECT * FROM Users WHERE ID = 76
24.10 16:47:06 QUEUE: vdl.0 (thread) response core/cache.get
24.10 16:47:06 TIME: core/cache.get : 2.52 ms
24.10 16:47:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
24.10 16:47:06 READDB: SELECT * FROM UserQuests WHERE ID = 76
24.10 16:47:06 QUEUE: vdl.0 (thread) response core/cache.get
24.10 16:47:06 TIME: core/cache.get : 1.21 ms
24.10 16:47:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
24.10 16:47:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:47:06 TIME: core/user.loginPost : 0.06 ms
24.10 16:47:08 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
24.10 16:47:08 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:47:08 TIME: vdl/cache.user.getData : 0.14 ms
24.10 16:47:13 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
24.10 16:47:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:47:13 TIME: core/cache.update : 0.13 ms
24.10 16:47:14 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 16:47:17 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 16:47:17 DB: SELECT * FROM tournament
24.10 16:47:17 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:47:17 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, rounddate => 2016-24-10 16:50, startdate => 2016-24-10 16:50 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 16:47:17 TIME: vdl/cache.tournament.getAvailableTournament : 2.45 ms
24.10 16:47:18 TIMER: Clans cache...
24.10 16:47:18 TIMER: Clans cache: 0ms
24.10 16:47:18 TIMER: Check tournament...
24.10 16:47:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:47' OR rounddate = '2016-24-10 16:47' AND status <> 'finished'
24.10 16:47:18 TIMER: Check tournament: 1ms
24.10 16:47:25 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
24.10 16:47:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
24.10 16:47:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
24.10 16:47:25 TIME: core/server.query : 1.63 ms
24.10 16:47:25 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
24.10 16:47:25 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
24.10 16:47:25 TIME: core/user.isOnlineID : 0.08 ms
24.10 16:47:25 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
24.10 16:47:25 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 16:47:25 STATS: cache [user], segments [5 calls, 1 hits, 2 misses]
24.10 16:47:25 STATS: cache [user], database [67 calls, 1 reads, 1 writes]
24.10 16:47:25 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 16:47:25 READDB: SELECT * FROM Users WHERE ID = 2
24.10 16:47:25 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 1.57 ms]
24.10 16:47:25 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.04 ms]
24.10 16:47:25 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1477308461, lastLoginDate => 298, lastLoadDate => 1025 }, effects => { list => [] } }}, version => 0, id => 2 } }
24.10 16:47:25 TIME: core/cache.get : 1.34 ms
24.10 16:47:25 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
24.10 16:47:25 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 16:47:25 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
24.10 16:47:25 STATS: cache [questdata], database [67 calls, 1 reads, 0 writes]
24.10 16:47:25 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 16:47:25 READDB: SELECT * FROM UserQuests WHERE ID = 2
24.10 16:47:25 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
24.10 16:47:25 TIME: core/cache.get : 0.81 ms
24.10 16:47:25 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
24.10 16:47:25 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
24.10 16:47:25 TIME: core/user.loginPost : 0.09 ms
24.10 16:47:26 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 76, tournament => 1, _type => vdl/cache.tournament.addUsers }
24.10 16:47:26 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 16:47:26 STATS: cache [tournament], segments [2 calls, 0 hits, 1 misses]
24.10 16:47:26 STATS: cache [tournament], database [68 calls, 1 reads, 0 writes]
24.10 16:47:26 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 16:47:26 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
24.10 16:47:26 TIME: vdl/cache.tournament.addUsers : 0.35 ms
24.10 16:47:26 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 16:47:26 DB: SELECT * FROM tournament
24.10 16:47:26 DB: SELECT name FROM users WHERE id = 76
24.10 16:47:26 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-24-10 16:50, startdate => 2016-24-10 16:50 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 16:47:26 TIME: vdl/cache.tournament.getAvailableTournament : 2.09 ms
24.10 16:47:26 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:50', roundinterval = E'60', params = E'{"params":{"usersList":[76]}}', rounddate = E'2016-24-10 16:50' WHERE ID = 1
24.10 16:47:31 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 16:47:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76] }
24.10 16:47:31 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.21 ms
24.10 16:47:31 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 16:47:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 16:47:31 TIME: vdl/cache.tournament.setGrid : 0.1 ms
24.10 16:47:31 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData }
24.10 16:47:31 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData }
24.10 16:47:31 TIME: vdl/cache.user.getData : 0.16 ms
24.10 16:47:33 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
24.10 16:47:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:47:33 TIME: core/cache.update : 0.11 ms
24.10 16:47:34 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 2
24.10 16:47:41 BLOCKREMOVE: tournament 1 removed
24.10 16:47:43 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 16:47:43 DB: SELECT * FROM tournament
24.10 16:47:43 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:47:43 DB: SELECT name FROM users WHERE id = 76
24.10 16:47:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 }], battleActive => null, rounddate => 2016-24-10 16:50, startdate => 2016-24-10 16:50 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 16:47:43 TIME: vdl/cache.tournament.getAvailableTournament : 1.92 ms
24.10 16:47:47 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 2, tournament => 1, _type => vdl/cache.tournament.addUsers }
24.10 16:47:47 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
24.10 16:47:47 TIME: vdl/cache.tournament.addUsers : 0.15 ms
24.10 16:47:48 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:50', roundinterval = E'60', params = E'{"params":{"usersList":[76,2]}}', rounddate = E'2016-24-10 16:50' WHERE ID = 1
24.10 16:47:58 BLOCKREMOVE: tournament 1 removed
24.10 16:48:08 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 2, tournament => 1, _type => vdl/cache.tournament.addUsers }
24.10 16:48:08 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:48:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => userExist, _type => vdl/cache.tournament.addUsers }
24.10 16:48:08 TIME: vdl/cache.tournament.addUsers : 1.09 ms
24.10 16:48:13 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
24.10 16:48:13 DB: SELECT * FROM tournament
24.10 16:48:13 DB: SELECT name FROM users WHERE id = 76
24.10 16:48:13 DB: SELECT name FROM users WHERE id = 2
24.10 16:48:13 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => Aimer, id => 76 },{ name => test1, id => 2 }], battleActive => null, rounddate => 2016-24-10 16:50, startdate => 2016-24-10 16:50 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
24.10 16:48:13 TIME: vdl/cache.tournament.getAvailableTournament : 3.13 ms
24.10 16:48:18 TIMER: Clans cache...
24.10 16:48:18 TIMER: Clans cache: 0ms
24.10 16:48:18 TIMER: Check tournament...
24.10 16:48:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:48' OR rounddate = '2016-24-10 16:48' AND status <> 'finished'
24.10 16:48:18 TIMER: Check tournament: 1ms
24.10 16:48:23 BLOCKREMOVE: tournament 1 removed
24.10 16:49:18 TIMER: Clans cache...
24.10 16:49:18 TIMER: Clans cache: 0ms
24.10 16:49:18 TIMER: Check tournament...
24.10 16:49:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:49' OR rounddate = '2016-24-10 16:49' AND status <> 'finished'
24.10 16:49:18 TIMER: Check tournament: 1ms
24.10 16:49:18 TIMER: Clans cache...
24.10 16:49:18 TIMER: Clans cache: 0ms
24.10 16:49:18 TIMER: Check tournament...
24.10 16:49:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:50' OR rounddate = '2016-24-10 16:50' AND status <> 'finished'
24.10 16:49:18 STATS: cache [tournament], get [9 calls, 5 cache hits, 3 cache misses, 0 same version, 0 not found]
24.10 16:49:18 STATS: cache [tournament], segments [12 calls, 8 hits, 3 misses]
24.10 16:49:18 STATS: cache [tournament], database [240 calls, 3 reads, 2 writes]
24.10 16:49:18 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
24.10 16:49:18 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:49:18 DB: SELECT nextval('Battle_id_seq') AS id
24.10 16:49:18 READDB: SELECT ID FROM Battle WHERE ID = 69
24.10 16:49:18 READDB: INSERT INTO Battle (ID) VALUES (69)
24.10 16:49:18 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
24.10 16:49:18 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
24.10 16:49:18 STATS: cache [battle], database [241 calls, 0 reads, 0 writes]
24.10 16:49:18 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:49:18 READDB: SELECT * FROM Battle WHERE ID = 69
24.10 16:49:18 DB: SELECT name FROM users WHERE id=2
24.10 16:49:18 DB: SELECT name FROM users WHERE id=76
24.10 16:49:18 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test1, tournamentId => 1, enemy.id => 76, enemy.name => Aimer, round => 1, roundDate => 2016-24-10 16:50, id => 2, enemy.num => 2, battleId => 69, player => 1 }, _isNotify => true, id => 2, _type => tournament.enemyEvent }
24.10 16:49:18 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => Aimer, tournamentId => 1, enemy.id => 2, enemy.name => test1, round => 1, roundDate => 2016-24-10 16:50, id => 76, enemy.num => 1, battleId => 69, player => 2 }, _isNotify => true, id => 76, _type => tournament.enemyEvent }
24.10 16:49:18 TIMER: Check tournament: 80ms
24.10 16:50:23 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:50', roundinterval = E'60', params = E'{"params":{"usersList":[76,2],"battleActive":[69]}}', rounddate = E'2016-24-10 16:50' WHERE ID = 1
24.10 16:50:24 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 69
24.10 16:50:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 69, _type => vdl/cache.battle.infoRoom }
24.10 16:50:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 16:50:30 TIME: vdl/cache.battle.infoRoom : 0.11 ms
24.10 16:50:33 BLOCKREMOVE: tournament 1 removed
24.10 16:50:35 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 69, _type => vdl/cache.battle.infoRoom }
24.10 16:50:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
24.10 16:50:35 TIME: vdl/cache.battle.infoRoom : 0.08 ms
24.10 16:50:44 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
24.10 16:50:44 READDB: SELECT * FROM Tournament WHERE ID = 1
24.10 16:50:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [69]
24.10 16:50:44 TIME: vdl/cache.tournament.getBattlesTournaments : 1.04 ms
24.10 16:50:44 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
24.10 16:50:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [76,2] }
24.10 16:50:44 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.14 ms
24.10 16:50:44 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 69, _type => vdl/cache.battle.finishRoom }
24.10 16:50:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
24.10 16:50:44 TIME: vdl/cache.battle.finishRoom : 0.11 ms
24.10 16:50:44 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 69, _type => vdl/cache.battle.deleteRoom }
24.10 16:50:44 ROOM: deleted room 69
24.10 16:50:44 DB: DELETE FROM Battle WHERE ID = 69
24.10 16:50:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
24.10 16:50:44 TIME: vdl/cache.battle.deleteRoom : 25.2 ms
24.10 16:50:44 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [69] }
24.10 16:50:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
24.10 16:50:44 TIME: vdl/cache.tournament.setBattlesTournaments : 0.14 ms
24.10 16:50:44 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [2], _type => vdl/cache.tournament.setUsersTournament }
24.10 16:50:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
24.10 16:50:44 TIME: vdl/cache.tournament.setUsersTournament : 0.15 ms
24.10 16:50:44 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 2, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
24.10 16:50:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 2, round => 1, player1 => 2, player2 => 76 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
24.10 16:50:44 TIME: vdl/cache.tournament.setGrid : 0.11 ms
24.10 16:50:44 NET: vdl.0 (thread) request vdl/cache.tournament.finish { tournamentId => 1, _type => vdl/cache.tournament.finish }
24.10 16:50:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
24.10 16:50:44 TIME: vdl/cache.tournament.finish : 0.14 ms
24.10 16:50:44 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'true', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 69
24.10 16:50:49 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'finished', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-24-10 16:50', roundinterval = E'60', params = E'{"params":{"battleFinished":[69],"usersList":[2],"battleActive":[]}}', rounddate = E'2016-24-10 16:50' WHERE ID = 1
24.10 16:50:54 BLOCKREMOVE: battle 69 removed
24.10 16:50:59 BLOCKREMOVE: tournament 1 removed
24.10 16:51:18 TIMER: Clans cache...
24.10 16:51:18 TIMER: Clans cache: 0ms
24.10 16:51:18 TIMER: Check tournament...
24.10 16:51:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:51' OR rounddate = '2016-24-10 16:51' AND status <> 'finished'
24.10 16:51:18 TIMER: Check tournament: 0ms
24.10 16:51:18 TIMER: Clans cache...
24.10 16:51:18 TIMER: Clans cache: 0ms
24.10 16:51:18 TIMER: Check tournament...
24.10 16:51:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:52' OR rounddate = '2016-24-10 16:52' AND status <> 'finished'
24.10 16:51:18 TIMER: Check tournament: 0ms
24.10 16:51:18 TIMER: Clans cache...
24.10 16:51:18 TIMER: Clans cache: 0ms
24.10 16:51:18 TIMER: Check tournament...
24.10 16:51:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:53' OR rounddate = '2016-24-10 16:53' AND status <> 'finished'
24.10 16:51:18 TIMER: Check tournament: 0ms
24.10 16:51:18 TIMER: Clans cache...
24.10 16:51:18 TIMER: Clans cache: 0ms
24.10 16:51:18 TIMER: Check tournament...
24.10 16:51:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:54' OR rounddate = '2016-24-10 16:54' AND status <> 'finished'
24.10 16:51:18 TIMER: Check tournament: 0ms
24.10 16:51:18 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
24.10 16:51:18 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
24.10 16:51:18 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
24.10 16:51:18 TIME: core/server.query : 1.17 ms
24.10 16:51:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
24.10 16:51:18 STATS: cache [battle], get [5 calls, 3 cache hits, 1 cache misses, 0 same version, 0 not found]
24.10 16:51:18 STATS: cache [battle], segments [9 calls, 7 hits, 1 misses]
24.10 16:51:18 STATS: cache [battle], database [540 calls, 1 reads, 2 writes]
24.10 16:51:18 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
24.10 16:51:18 READDB: SELECT * FROM Battle WHERE ID = 0
24.10 16:51:18 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
24.10 16:51:18 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 135
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
24.10 16:51:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
24.10 16:51:18 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
24.10 16:51:18 STATS: cache [user], get [4 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:51:18 STATS: cache [user], segments [9 calls, 2 hits, 4 misses]
24.10 16:51:18 STATS: cache [user], database [540 calls, 2 reads, 2 writes]
24.10 16:51:18 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
24.10 16:51:18 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.35 ms]
24.10 16:51:18 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.09 ms]
24.10 16:51:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
24.10 16:51:18 TIME: core/cache.update : 0.36 ms
24.10 16:51:18 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
24.10 16:51:18 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
24.10 16:51:18 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
24.10 16:51:18 STATS: cache [questdata], database [540 calls, 2 reads, 0 writes]
24.10 16:51:18 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
24.10 16:51:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
24.10 16:51:18 TIME: core/cache.update : 0.31 ms
24.10 16:51:18 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
24.10 16:51:18 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
24.10 16:51:18 TIME: core/user.logoutPost : 0.1 ms
24.10 16:51:18 TIMER: Clans cache...
24.10 16:51:18 TIMER: Clans cache: 0ms
24.10 16:51:18 TIMER: Check tournament...
24.10 16:51:18 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:55' OR rounddate = '2016-24-10 16:55' AND status <> 'finished'
24.10 16:51:18 TIMER: Check tournament: 0ms
24.10 16:51:18 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308408,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}' WHERE ID = 76
24.10 16:51:18 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
24.10 16:55:28 BLOCKREMOVE: user 76 removed
24.10 16:55:28 BLOCKREMOVE: questdata 76 removed
24.10 16:57:40 TIMER: Starting timer...
24.10 16:57:40 TIMER: Timer running...
24.10 16:57:40 DB: SELECT * FROM GameVars
24.10 16:57:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:57:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:57:40 DB: SELECT * FROM Shops WHERE ID = 1
24.10 16:57:40 TEMP: load ./tmp/quest_daily_ids
24.10 16:57:40 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
24.10 16:57:40 TEMP: save ./tmp/quest_daily_ids
24.10 16:57:40 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
24.10 16:57:40 QUEUE: vdl.0 (thread) response server.login
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM LocalizationStrings
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 10.68 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM GameVars
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.93 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 1.38 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.85 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 1.28 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 1.96 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/quest.getDaily
24.10 16:57:40 TIME: core/quest.getDaily : 0.05 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM UserAttributeTypes
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.71 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM UserVariableTypes
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.44 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
24.10 16:57:40 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 1.46 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM ItemGroups
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.63 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM Bundles ORDER BY ID
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 1.02 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM BundleItems ORDER BY ID
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.59 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/shop.getList
24.10 16:57:40 TIME: core/shop.getList : 0.04 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM EffectAttributeTypes
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.54 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM Effects
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.52 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
24.10 16:57:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.87 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
24.10 16:57:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.79 ms
24.10 16:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
24.10 16:57:40 DB: SELECT * FROM Badges
24.10 16:57:40 QUEUE: vdl.0 (thread) response core/server.query
24.10 16:57:40 TIME: core/server.query : 0.41 ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:58' OR rounddate = '2016-24-10 16:58' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 1ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 16:59' OR rounddate = '2016-24-10 16:59' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 1ms
24.10 16:57:40 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:00' OR rounddate = '2016-24-10 17:00' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 1ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:01' OR rounddate = '2016-24-10 17:01' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 1ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:02' OR rounddate = '2016-24-10 17:02' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:03' OR rounddate = '2016-24-10 17:03' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:04' OR rounddate = '2016-24-10 17:04' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:05' OR rounddate = '2016-24-10 17:05' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:06' OR rounddate = '2016-24-10 17:06' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:07' OR rounddate = '2016-24-10 17:07' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:08' OR rounddate = '2016-24-10 17:08' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:09' OR rounddate = '2016-24-10 17:09' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:10' OR rounddate = '2016-24-10 17:10' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:11' OR rounddate = '2016-24-10 17:11' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:12' OR rounddate = '2016-24-10 17:12' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:13' OR rounddate = '2016-24-10 17:13' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:14' OR rounddate = '2016-24-10 17:14' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
24.10 16:57:40 TIMER: Clans cache...
24.10 16:57:40 TIMER: Clans cache: 0ms
24.10 16:57:40 TIMER: Check tournament...
24.10 16:57:40 DB: SELECT * FROM tournament WHERE startdate = '2016-24-10 17:15' OR rounddate = '2016-24-10 17:15' AND status <> 'finished'
24.10 16:57:40 TIMER: Check tournament: 0ms
