01.09 15:01:00 BLOCKREMOVE: user 3 removed
01.09 15:01:00 BLOCKREMOVE: questdata 3 removed
01.09 15:01:19 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 15:01:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 15:01:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 15:01:19 TIME: core/server.query : 2.34 ms
01.09 15:01:19 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 15:01:19 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 15:01:19 TIME: core/user.isOnlineID : 0.15 ms
01.09 15:01:19 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 15:01:19 READDB: SELECT * FROM Users WHERE ID = 2
01.09 15:01:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 15:01:19 TIME: core/cache.get : 1.54 ms
01.09 15:01:19 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 15:01:19 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 15:01:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 15:01:19 TIME: core/cache.get : 0.91 ms
01.09 15:01:19 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 15:01:19 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 15:01:19 TIME: core/user.loginPost : 0.11 ms
01.09 15:01:19 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 15:01:19 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 15:01:19 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 15:01:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 6 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 15:01:19 TIME: vdl/cache.battle.find : 2.26 ms
01.09 15:01:19 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => { id => 6 }, selfId => 2, _type => vdl/cache.battle.join }
01.09 15:01:19 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 15:01:19 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
01.09 15:01:19 STATS: cache [battle], database [569 calls, 1 reads, 1 writes]
01.09 15:01:19 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 15:01:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { errorCode => true, _type => vdl/cache.battle.join, player => 2 }
01.09 15:01:19 TIME: vdl/cache.battle.join : 0.58 ms
01.09 15:01:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 15:01:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:01:25 TIME: core/cache.update : 0.21 ms
01.09 15:01:25 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 15:01:50 TIMER: Clans cache...
01.09 15:01:50 TIMER: Clans cache: 0ms
01.09 15:01:50 TIMER: Clans cache...
01.09 15:01:50 TIMER: Clans cache: 0ms
01.09 15:01:50 TIMER: Clans cache...
01.09 15:01:50 TIMER: Clans cache: 0ms
01.09 15:01:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 15:01:50 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 15:01:50 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
01.09 15:01:50 STATS: cache [user], database [780 calls, 2 reads, 3 writes]
01.09 15:01:50 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 15:01:50 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.98 ms]
01.09 15:01:50 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.18 ms]
01.09 15:01:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 15:01:50 TIME: core/cache.update : 0.54 ms
01.09 15:01:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 15:01:50 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 15:01:50 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
01.09 15:01:50 STATS: cache [questdata], database [780 calls, 2 reads, 1 writes]
01.09 15:01:50 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 15:01:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:01:50 TIME: core/cache.update : 0.35 ms
01.09 15:01:50 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 15:01:50 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 15:01:50 TIME: core/user.logoutPost : 0.09 ms
01.09 15:01:50 TIMER: Clans cache...
01.09 15:01:50 TIMER: Clans cache: 0ms
01.09 15:01:50 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 15:01:50 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 15:04:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 15:04:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 15:04:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
01.09 15:04:51 TIME: core/server.query : 2.17 ms
01.09 15:04:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 15:04:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 15:04:51 TIME: core/user.isOnlineID : 0.1 ms
01.09 15:04:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 15:04:51 READDB: SELECT * FROM Users WHERE ID = 3
01.09 15:04:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 3 } }
01.09 15:04:51 TIME: core/cache.get : 1.43 ms
01.09 15:04:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 15:04:51 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 15:04:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
01.09 15:04:51 TIME: core/cache.get : 0.85 ms
01.09 15:04:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 15:04:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 15:04:51 TIME: core/user.loginPost : 0.1 ms
01.09 15:04:51 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 15:04:51 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 15:04:51 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 15:04:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 6 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 15:04:51 TIME: vdl/cache.battle.find : 2.5 ms
01.09 15:04:52 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => { id => 6 }, selfId => 3, _type => vdl/cache.battle.join }
01.09 15:04:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { errorCode => true, _type => vdl/cache.battle.join, player => 2 }
01.09 15:04:52 TIME: vdl/cache.battle.join : 0.12 ms
01.09 15:05:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 15:05:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:05:00 TIME: core/cache.update : 0.12 ms
01.09 15:05:00 BLOCKREMOVE: user 2 removed
01.09 15:05:00 BLOCKREMOVE: questdata 2 removed
01.09 15:05:00 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 15:05:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 15:05:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 15:05:37 TIME: core/cache.update : 0.11 ms
01.09 15:05:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 15:05:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:05:37 TIME: core/cache.update : 0.14 ms
01.09 15:05:37 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 15:05:37 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 15:05:37 TIME: core/user.logoutPost : 0.1 ms
01.09 15:05:37 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 15:05:37 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 15:05:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 15:05:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 15:05:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 15:05:43 TIME: core/server.query : 2.57 ms
01.09 15:05:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 15:05:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 15:05:43 TIME: core/user.isOnlineID : 0.14 ms
01.09 15:05:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 15:05:43 READDB: SELECT * FROM Users WHERE ID = 2
01.09 15:05:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 15:05:43 TIME: core/cache.get : 1.48 ms
01.09 15:05:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 15:05:43 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 15:05:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 15:05:43 TIME: core/cache.get : 1.07 ms
01.09 15:05:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 15:05:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 15:05:43 TIME: core/user.loginPost : 0.12 ms
01.09 15:05:43 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 15:05:43 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 15:05:43 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 15:05:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 6 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 15:05:43 TIME: vdl/cache.battle.find : 2.55 ms
01.09 15:05:43 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => { id => 6 }, selfId => 2, _type => vdl/cache.battle.join }
01.09 15:05:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { errorCode => true, _type => vdl/cache.battle.join, player => 2 }
01.09 15:05:43 TIME: vdl/cache.battle.join : 0.12 ms
01.09 15:05:47 BLOCKREMOVE: user 3 removed
01.09 15:05:47 BLOCKREMOVE: questdata 3 removed
01.09 15:05:50 TIMER: Clans cache...
01.09 15:05:50 TIMER: Clans cache: 0ms
01.09 15:05:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 15:05:50 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
01.09 15:05:50 STATS: cache [user], segments [18 calls, 9 hits, 8 misses]
01.09 15:05:50 STATS: cache [user], database [840 calls, 4 reads, 6 writes]
01.09 15:05:50 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
01.09 15:05:50 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.49 ms]
01.09 15:05:50 STATS: cache manager [1], update [10 calls, total 0 sec spent, avg 0.14 ms]
01.09 15:05:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:05:50 TIME: core/cache.update : 0.34 ms
01.09 15:05:50 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 15:05:50 TIMER: Clans cache...
01.09 15:05:50 TIMER: Clans cache: 0ms
01.09 15:05:50 TIMER: Clans cache...
01.09 15:05:50 TIMER: Clans cache: 0ms
01.09 15:05:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 15:05:50 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
01.09 15:05:50 STATS: cache [user], segments [19 calls, 10 hits, 8 misses]
01.09 15:05:50 STATS: cache [user], database [1020 calls, 4 reads, 7 writes]
01.09 15:05:50 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
01.09 15:05:50 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.49 ms]
01.09 15:05:50 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.16 ms]
01.09 15:05:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 15:05:50 TIME: core/cache.update : 0.55 ms
01.09 15:05:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 15:05:50 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
01.09 15:05:50 STATS: cache [questdata], segments [15 calls, 6 hits, 8 misses]
01.09 15:05:50 STATS: cache [questdata], database [1020 calls, 4 reads, 3 writes]
01.09 15:05:50 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
01.09 15:05:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:05:50 TIME: core/cache.update : 0.32 ms
01.09 15:05:50 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 15:05:50 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 15:05:50 TIME: core/user.logoutPost : 0.1 ms
01.09 15:05:50 TIMER: Clans cache...
01.09 15:05:50 TIMER: Clans cache: 0ms
01.09 15:05:50 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 15:05:50 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 15:09:00 BLOCKREMOVE: user 2 removed
01.09 15:09:00 BLOCKREMOVE: questdata 2 removed
01.09 15:14:22 TIMER: Starting timer...
01.09 15:14:22 TIMER: Timer running...
01.09 15:14:22 DB: SELECT * FROM GameVars
01.09 15:14:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:14:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:14:22 DB: SELECT * FROM Shops WHERE ID = 1
01.09 15:14:22 TEMP: load ./tmp/quest_daily_ids
01.09 15:14:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 15:14:22 TEMP: save ./tmp/quest_daily_ids
01.09 15:14:22 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 15:14:22 QUEUE: vdl.0 (thread) response server.login
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM LocalizationStrings
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 8.02 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM GameVars
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.57 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.71 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.44 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.51 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 1.33 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 15:14:22 TIME: core/quest.getDaily : 0.03 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM UserAttributeTypes
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.69 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM UserVariableTypes
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.79 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 15:14:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 1.3 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM ItemGroups
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.37 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM Bundles ORDER BY ID
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.66 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.4 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 15:14:22 TIME: core/shop.getList : 0.02 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM EffectAttributeTypes
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.71 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM Effects
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.33 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 15:14:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.78 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 15:14:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.51 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 15:14:22 DB: SELECT * FROM Badges
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 0.39 ms
01.09 15:14:22 TIMER: Clans cache...
01.09 15:14:22 TIMER: Clans cache: 0ms
01.09 15:14:22 TIMER: Clans cache...
01.09 15:14:22 TIMER: Clans cache: 0ms
01.09 15:14:22 TIMER: Clans cache...
01.09 15:14:22 TIMER: Clans cache: 0ms
01.09 15:14:22 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 15:14:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:14:22 TIME: core/server.query : 2.47 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 15:14:22 TIME: core/user.isOnlineID : 0.08 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 15:14:22 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 15:14:22 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 15:14:22 STATS: cache [user], database [181 calls, 0 reads, 0 writes]
01.09 15:14:22 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 15:14:22 READDB: SELECT * FROM Users WHERE ID = 2
01.09 15:14:22 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.8 ms]
01.09 15:14:22 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/cache.get
01.09 15:14:22 TIME: core/cache.get : 3.97 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 15:14:22 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 15:14:22 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 15:14:22 STATS: cache [questdata], database [181 calls, 0 reads, 0 writes]
01.09 15:14:22 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 15:14:22 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/cache.get
01.09 15:14:22 TIME: core/cache.get : 1.93 ms
01.09 15:14:22 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 15:14:22 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 15:14:22 TIME: core/user.loginPost : 0.13 ms
01.09 15:14:22 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 15:14:22 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 15:14:22 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 15:14:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [6], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 15:14:22 TIME: vdl/cache.battle.find : 2.54 ms
01.09 15:14:22 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 6, selfId => 2, _type => vdl/cache.battle.join }
01.09 15:14:22 TRACE: vdl/cache.battle.join : Invalid field access : getInt
01.09 15:14:22 TRACE: vdl/cache.battle.join : 
Called from modules/VDLCache.hx line 192
Called from modules/VDLCache.hx line 148
Called from modules/VDLCache.hx line 126
Called from modules/VDLCache.hx line 75
Called from modules/VDLCache.hx line 57
Called from snipe/cache/CacheServer.hx line 487
01.09 15:14:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { errorCode => _requestException, _type => vdl/cache.battle.join }
01.09 15:17:27 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 15:17:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:17:27 TIME: core/cache.update : 0.16 ms
01.09 15:18:12 TIMER: Starting timer...
01.09 15:18:12 TIMER: Timer running...
01.09 15:18:12 DB: SELECT * FROM GameVars
01.09 15:18:12 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:18:12 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:18:12 DB: SELECT * FROM Shops WHERE ID = 1
01.09 15:18:12 TEMP: load ./tmp/quest_daily_ids
01.09 15:18:12 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 15:18:12 TEMP: save ./tmp/quest_daily_ids
01.09 15:18:12 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 15:18:12 QUEUE: vdl.0 (thread) response server.login
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM LocalizationStrings
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 6.58 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM GameVars
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.49 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.82 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.39 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.8 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.72 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 15:18:12 TIME: core/quest.getDaily : 0.02 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM UserAttributeTypes
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.48 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM UserVariableTypes
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.39 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 15:18:12 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 1.04 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM ItemGroups
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.3 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM Bundles ORDER BY ID
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.52 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.36 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 15:18:12 TIME: core/shop.getList : 0.02 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM EffectAttributeTypes
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.29 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM Effects
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.45 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 15:18:12 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.81 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 15:18:12 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.7 ms
01.09 15:18:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 15:18:12 DB: SELECT * FROM Badges
01.09 15:18:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:18:12 TIME: core/server.query : 0.37 ms
01.09 15:19:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 15:19:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 15:19:01 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:19:01 TIME: core/server.query : 2.4 ms
01.09 15:19:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 15:19:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 15:19:01 TIME: core/user.isOnlineID : 0.09 ms
01.09 15:19:01 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 15:19:01 READDB: SELECT * FROM Users WHERE ID = 2
01.09 15:19:01 QUEUE: vdl.0 (thread) response core/cache.get
01.09 15:19:01 TIME: core/cache.get : 3.34 ms
01.09 15:19:01 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 15:19:01 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 15:19:01 QUEUE: vdl.0 (thread) response core/cache.get
01.09 15:19:01 TIME: core/cache.get : 1.28 ms
01.09 15:19:01 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 15:19:01 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 15:19:01 TIME: core/user.loginPost : 0.23 ms
01.09 15:19:01 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 15:19:01 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 15:19:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 15:19:01 TIME: vdl/cache.battle.find : 1.72 ms
01.09 15:19:01 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
01.09 15:19:01 DB: SELECT nextval('Battle_id_seq') AS id
01.09 15:19:01 READDB: SELECT ID FROM Battle WHERE ID = 7
01.09 15:19:01 READDB: INSERT INTO Battle (ID) VALUES (7)
01.09 15:19:01 READDB: SELECT * FROM Battle WHERE ID = 7
01.09 15:19:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 15:19:01 TIME: vdl/cache.battle.create : 36.74 ms
01.09 15:19:06 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 7
01.09 15:19:07 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 15:19:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:19:07 TIME: core/cache.update : 0.16 ms
01.09 15:19:08 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 15:19:12 TIMER: Clans cache...
01.09 15:19:12 TIMER: Clans cache: 0ms
01.09 15:19:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 15:19:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 15:19:59 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
01.09 15:19:59 TIME: core/server.query : 2.43 ms
01.09 15:19:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 15:19:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 15:19:59 TIME: core/user.isOnlineID : 0.15 ms
01.09 15:19:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 15:19:59 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 15:19:59 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
01.09 15:19:59 STATS: cache [user], database [107 calls, 1 reads, 1 writes]
01.09 15:19:59 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 15:19:59 READDB: SELECT * FROM Users WHERE ID = 3
01.09 15:19:59 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 1.93 ms]
01.09 15:19:59 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.05 ms]
01.09 15:19:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 3 } }
01.09 15:19:59 TIME: core/cache.get : 2.06 ms
01.09 15:19:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 15:19:59 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 15:19:59 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
01.09 15:19:59 STATS: cache [questdata], database [107 calls, 1 reads, 0 writes]
01.09 15:19:59 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 15:19:59 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 15:19:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
01.09 15:19:59 TIME: core/cache.get : 1.56 ms
01.09 15:19:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 15:19:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 15:19:59 TIME: core/user.loginPost : 0.07 ms
01.09 15:19:59 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 15:19:59 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 15:19:59 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 15:19:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [7], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 15:19:59 TIME: vdl/cache.battle.find : 2 ms
01.09 15:19:59 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 7, selfId => 3, _type => vdl/cache.battle.join }
01.09 15:19:59 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 15:19:59 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
01.09 15:19:59 STATS: cache [battle], database [107 calls, 1 reads, 1 writes]
01.09 15:19:59 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 15:19:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { errorCode => true, _type => vdl/cache.battle.join, player => 2 }
01.09 15:19:59 TIME: vdl/cache.battle.join : 0.24 ms
01.09 15:19:59 WRITEDB: UPDATE Battle SET secondid = E'1', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 7
01.09 15:20:07 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 15:20:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:20:07 TIME: core/cache.update : 0.18 ms
01.09 15:20:07 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 15:20:12 TIMER: Clans cache...
01.09 15:20:12 TIMER: Clans cache: 0ms
01.09 15:20:12 TIMER: Clans cache...
01.09 15:20:12 TIMER: Clans cache: 0ms
01.09 15:20:12 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 15:20:12 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 15:20:12 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
01.09 15:20:12 STATS: cache [user], database [240 calls, 2 reads, 2 writes]
01.09 15:20:12 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 15:20:12 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.8 ms]
01.09 15:20:12 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.11 ms]
01.09 15:20:12 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 15:20:12 TIME: core/cache.update : 0.47 ms
01.09 15:20:12 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 15:20:12 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 15:20:12 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
01.09 15:20:12 STATS: cache [questdata], database [240 calls, 2 reads, 0 writes]
01.09 15:20:12 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 15:20:12 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:20:12 TIME: core/cache.update : 0.39 ms
01.09 15:20:12 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 15:20:12 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 15:20:12 TIME: core/user.logoutPost : 0.09 ms
01.09 15:20:12 TIMER: Clans cache...
01.09 15:20:12 TIMER: Clans cache: 0ms
01.09 15:20:12 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 15:20:12 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 15:22:22 BLOCKREMOVE: user 2 removed
01.09 15:22:22 BLOCKREMOVE: questdata 2 removed
01.09 15:23:12 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 15:23:12 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 15:23:12 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
01.09 15:23:12 STATS: cache [user], database [300 calls, 2 reads, 3 writes]
01.09 15:23:12 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 15:23:12 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.8 ms]
01.09 15:23:12 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.18 ms]
01.09 15:23:12 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 15:23:12 TIME: core/cache.update : 0.51 ms
01.09 15:23:12 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 15:23:12 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 15:23:12 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
01.09 15:23:12 STATS: cache [questdata], database [300 calls, 2 reads, 1 writes]
01.09 15:23:12 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 15:23:12 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:23:12 TIME: core/cache.update : 0.36 ms
01.09 15:23:12 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 15:23:12 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 15:23:12 TIME: core/user.logoutPost : 0.11 ms
01.09 15:23:12 TIMER: Clans cache...
01.09 15:23:12 TIMER: Clans cache: 0ms
01.09 15:23:12 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 15:23:12 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 15:23:22 BLOCKREMOVE: user 3 removed
01.09 15:23:22 BLOCKREMOVE: questdata 3 removed
01.09 15:25:32 TIMER: Starting timer...
01.09 15:25:32 TIMER: Timer running...
01.09 15:25:32 DB: SELECT * FROM GameVars
01.09 15:25:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:25:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:25:32 DB: SELECT * FROM Shops WHERE ID = 1
01.09 15:25:32 TEMP: load ./tmp/quest_daily_ids
01.09 15:25:32 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 15:25:32 TEMP: save ./tmp/quest_daily_ids
01.09 15:25:32 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 15:25:32 QUEUE: vdl.0 (thread) response server.login
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM LocalizationStrings
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 6.55 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM GameVars
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.65 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.6 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.5 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.49 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.86 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 15:25:32 TIME: core/quest.getDaily : 0.02 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM UserAttributeTypes
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.28 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM UserVariableTypes
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.37 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 15:25:32 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.94 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM ItemGroups
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.34 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM Bundles ORDER BY ID
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.42 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.39 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 15:25:32 TIME: core/shop.getList : 0.03 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM EffectAttributeTypes
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.33 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM Effects
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.4 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 15:25:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.63 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 15:25:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.6 ms
01.09 15:25:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 15:25:32 DB: SELECT * FROM Badges
01.09 15:25:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:25:32 TIME: core/server.query : 0.39 ms
01.09 15:25:32 TIMER: Clans cache...
01.09 15:25:32 TIMER: Clans cache: 0ms
01.09 15:25:32 TIMER: Clans cache...
01.09 15:25:32 TIMER: Clans cache: 0ms
01.09 15:25:32 TIMER: Clans cache...
01.09 15:25:32 TIMER: Clans cache: 0ms
01.09 15:25:32 TIMER: Clans cache...
01.09 15:25:32 TIMER: Clans cache: 0ms
01.09 15:25:32 TIMER: Clans cache...
01.09 15:25:32 TIMER: Clans cache: 0ms
01.09 15:31:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 15:31:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 15:31:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:31:31 TIME: core/server.query : 2.58 ms
01.09 15:31:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 15:31:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 15:31:31 TIME: core/user.isOnlineID : 0.06 ms
01.09 15:31:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 15:31:31 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 15:31:31 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 15:31:31 STATS: cache [user], database [360 calls, 0 reads, 0 writes]
01.09 15:31:31 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 15:31:31 READDB: SELECT * FROM Users WHERE ID = 3
01.09 15:31:31 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.96 ms]
01.09 15:31:31 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 15:31:31 QUEUE: vdl.0 (thread) response core/cache.get
01.09 15:31:31 TIME: core/cache.get : 4.14 ms
01.09 15:31:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 15:31:31 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 15:31:31 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 15:31:31 STATS: cache [questdata], database [360 calls, 0 reads, 0 writes]
01.09 15:31:31 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 15:31:31 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 15:31:31 QUEUE: vdl.0 (thread) response core/cache.get
01.09 15:31:31 TIME: core/cache.get : 1.86 ms
01.09 15:31:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 15:31:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 15:31:31 TIME: core/user.loginPost : 0.14 ms
01.09 15:31:31 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 15:31:31 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 15:31:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 15:31:31 TIME: vdl/cache.battle.find : 1.85 ms
01.09 15:31:31 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 15:31:31 DB: SELECT nextval('Battle_id_seq') AS id
01.09 15:31:31 READDB: SELECT ID FROM Battle WHERE ID = 8
01.09 15:31:31 READDB: INSERT INTO Battle (ID) VALUES (8)
01.09 15:31:31 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 15:31:31 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 15:31:31 STATS: cache [battle], database [360 calls, 0 reads, 0 writes]
01.09 15:31:31 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 15:31:31 READDB: SELECT * FROM Battle WHERE ID = 8
01.09 15:31:31 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.53 ms]
01.09 15:31:31 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 15:31:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 15:31:31 TIME: vdl/cache.battle.create : 29.02 ms
01.09 15:31:32 TIMER: Clans cache...
01.09 15:31:32 TIMER: Clans cache: 0ms
01.09 15:31:37 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 8
01.09 15:31:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 15:31:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:31:37 TIME: core/cache.update : 0.08 ms
01.09 15:31:38 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 15:32:04 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 15:32:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 15:32:04 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 15:32:04 TIME: core/server.query : 2.66 ms
01.09 15:32:04 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 15:32:04 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 15:32:04 TIME: core/user.isOnlineID : 0.14 ms
01.09 15:32:04 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 15:32:04 READDB: SELECT * FROM Users WHERE ID = 2
01.09 15:32:04 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 15:32:04 TIME: core/cache.get : 1.84 ms
01.09 15:32:04 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 15:32:04 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 15:32:04 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 15:32:04 TIME: core/cache.get : 1.02 ms
01.09 15:32:04 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 15:32:04 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 15:32:04 TIME: core/user.loginPost : 0.12 ms
01.09 15:32:04 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 15:32:04 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 15:32:04 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 15:32:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [8], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 15:32:04 TIME: vdl/cache.battle.find : 2.75 ms
01.09 15:32:04 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 8, selfId => 2, _type => vdl/cache.battle.join }
01.09 15:32:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { errorCode => true, _type => vdl/cache.battle.join, player => 2 }
01.09 15:32:04 TIME: vdl/cache.battle.join : 0.12 ms
01.09 15:32:04 WRITEDB: UPDATE Battle SET secondid = E'1', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 8
01.09 15:32:12 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 15:32:12 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:32:12 TIME: core/cache.update : 0.17 ms
01.09 15:32:12 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 15:32:32 TIMER: Clans cache...
01.09 15:32:32 TIMER: Clans cache: 0ms
01.09 15:32:32 TIMER: Clans cache...
01.09 15:32:32 TIMER: Clans cache: 0ms
01.09 15:32:32 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 15:32:32 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 15:32:32 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
01.09 15:32:32 STATS: cache [user], database [540 calls, 2 reads, 2 writes]
01.09 15:32:32 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 15:32:32 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.03 ms]
01.09 15:32:32 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.11 ms]
01.09 15:32:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 15:32:32 TIME: core/cache.update : 0.45 ms
01.09 15:32:32 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 15:32:32 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 15:32:32 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
01.09 15:32:32 STATS: cache [questdata], database [540 calls, 2 reads, 0 writes]
01.09 15:32:32 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 15:32:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:32:32 TIME: core/cache.update : 0.49 ms
01.09 15:32:32 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 15:32:32 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 15:32:32 TIME: core/user.logoutPost : 0.17 ms
01.09 15:32:32 TIMER: Clans cache...
01.09 15:32:32 TIMER: Clans cache: 0ms
01.09 15:32:32 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 15:32:32 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 15:34:42 BLOCKREMOVE: user 3 removed
01.09 15:34:42 BLOCKREMOVE: questdata 3 removed
01.09 15:35:32 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 15:35:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 15:35:32 TIME: core/cache.update : 0.17 ms
01.09 15:35:32 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 15:35:32 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.03 ms]
01.09 15:35:32 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.14 ms]
01.09 15:35:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 15:35:32 TIME: core/cache.update : 0.38 ms
01.09 15:35:32 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 15:35:32 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 15:35:32 TIME: core/user.logoutPost : 0.16 ms
01.09 15:35:32 TIMER: Clans cache...
01.09 15:35:32 TIMER: Clans cache: 0ms
01.09 15:35:32 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 15:35:32 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 15:35:42 BLOCKREMOVE: user 2 removed
01.09 15:35:42 BLOCKREMOVE: questdata 2 removed
01.09 15:44:05 TIMER: Starting timer...
01.09 15:44:05 TIMER: Timer running...
01.09 15:44:05 DB: SELECT * FROM GameVars
01.09 15:44:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:44:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:44:05 DB: SELECT * FROM Shops WHERE ID = 1
01.09 15:44:05 TEMP: load ./tmp/quest_daily_ids
01.09 15:44:05 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 15:44:05 TEMP: save ./tmp/quest_daily_ids
01.09 15:44:05 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 15:44:05 QUEUE: vdl.0 (thread) response server.login
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 15:44:05 DB: SELECT * FROM LocalizationStrings
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:05 TIME: core/server.query : 6.96 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 15:44:05 DB: SELECT * FROM GameVars
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:05 TIME: core/server.query : 0.54 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 15:44:05 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:05 TIME: core/server.query : 0.62 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 15:44:05 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:05 TIME: core/server.query : 0.44 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 15:44:05 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:05 TIME: core/server.query : 0.58 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 15:44:05 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:05 TIME: core/server.query : 0.79 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 15:44:05 TIME: core/quest.getDaily : 0.02 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 15:44:05 DB: SELECT * FROM UserAttributeTypes
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:05 TIME: core/server.query : 0.31 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 15:44:05 DB: SELECT * FROM UserVariableTypes
01.09 15:44:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:05 TIME: core/server.query : 0.44 ms
01.09 15:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 15:44:05 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i01.09 15:44:15 TIMER: Starting timer...
01.09 15:44:15 TIMER: Timer running...
01.09 15:44:15 DB: SELECT * FROM GameVars
01.09 15:44:15 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:44:15 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:44:15 DB: SELECT * FROM Shops WHERE ID = 1
01.09 15:44:15 TEMP: load ./tmp/quest_daily_ids
01.09 15:44:15 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 15:44:15 TEMP: save ./tmp/quest_daily_ids
01.09 15:44:15 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 15:44:15 QUEUE: vdl.0 (thread) response server.login
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 15:44:15 DB: SELECT * FROM LocalizationStrings
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:15 TIME: core/server.query : 7.23 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 15:44:15 DB: SELECT * FROM GameVars
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:15 TIME: core/server.query : 0.64 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 15:44:15 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:15 TIME: core/server.query : 1.07 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 15:44:15 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:15 TIME: core/server.query : 0.61 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 15:44:15 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:15 TIME: core/server.query : 0.58 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 15:44:15 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:15 TIME: core/server.query : 0.84 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 15:44:15 TIME: core/quest.getDaily : 0.02 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 15:44:15 DB: SELECT * FROM UserAttributeTypes
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:15 TIME: core/server.query : 0.3 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 15:44:15 DB: SELECT * FROM UserVariableTypes
01.09 15:44:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:44:15 TIME: core/server.query : 0.4 ms
01.09 15:44:15 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 15:44:15 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.T01.09 15:54:31 TIMER: Starting timer...
01.09 15:54:31 TIMER: Timer running...
01.09 15:54:31 DB: SELECT * FROM GameVars
01.09 15:54:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:54:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:54:31 DB: SELECT * FROM Shops WHERE ID = 1
01.09 15:54:31 TEMP: load ./tmp/quest_daily_ids
01.09 15:54:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 15:54:31 TEMP: save ./tmp/quest_daily_ids
01.09 15:54:31 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 15:54:31 QUEUE: vdl.0 (thread) response server.login
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 15:54:31 DB: SELECT * FROM LocalizationStrings
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:54:31 TIME: core/server.query : 6.48 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 15:54:31 DB: SELECT * FROM GameVars
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:54:31 TIME: core/server.query : 0.63 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 15:54:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:54:31 TIME: core/server.query : 0.63 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 15:54:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:54:31 TIME: core/server.query : 0.53 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 15:54:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:54:31 TIME: core/server.query : 0.5 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 15:54:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:54:31 TIME: core/server.query : 0.78 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 15:54:31 TIME: core/quest.getDaily : 0.02 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 15:54:31 DB: SELECT * FROM UserAttributeTypes
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:54:31 TIME: core/server.query : 0.41 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 15:54:31 DB: SELECT * FROM UserVariableTypes
01.09 15:54:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:54:31 TIME: core/server.query : 0.39 ms
01.09 15:54:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 15:54:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.01.09 15:58:54 TIMER: Starting timer...
01.09 15:58:54 TIMER: Timer running...
01.09 15:58:54 DB: SELECT * FROM GameVars
01.09 15:58:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:58:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:58:54 DB: SELECT * FROM Shops WHERE ID = 1
01.09 15:58:54 TEMP: load ./tmp/quest_daily_ids
01.09 15:58:54 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 15:58:54 TEMP: save ./tmp/quest_daily_ids
01.09 15:58:54 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 15:58:54 QUEUE: vdl.0 (thread) response server.login
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM LocalizationStrings
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 6.78 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM GameVars
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.56 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.74 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.39 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.75 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.8 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 15:58:54 TIME: core/quest.getDaily : 0.11 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM UserAttributeTypes
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.41 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM UserVariableTypes
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.48 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 15:58:54 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.91 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM ItemGroups
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.34 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM Bundles ORDER BY ID
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.44 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.4 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 15:58:54 TIME: core/shop.getList : 0.03 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM EffectAttributeTypes
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.33 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM Effects
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.35 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 15:58:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.61 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 15:58:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.52 ms
01.09 15:58:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 15:58:54 DB: SELECT * FROM Badges
01.09 15:58:54 QUEUE: vdl.0 (thread) response core/server.query
01.09 15:58:54 TIME: core/server.query : 0.35 ms
01.09 15:58:54 TIMER: Clans cache...
01.09 15:58:54 TIMER: Clans cache: 0ms
