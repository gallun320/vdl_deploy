31.08 15:01:16 TIMER: Starting timer...
31.08 15:01:16 TIMER: Timer running...
31.08 15:01:16 DB: SELECT * FROM GameVars
31.08 15:01:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:01:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:01:16 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:01:16 TEMP: load ./tmp/quest_daily_ids
31.08 15:01:16 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:01:16 TEMP: save ./tmp/quest_daily_ids
31.08 15:01:16 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:01:16 QUEUE: vdl.0 (thread) response server.login
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM LocalizationStrings
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 7.65 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM GameVars
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.72 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.67 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.46 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.53 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 1.02 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:01:16 TIME: core/quest.getDaily : 0.02 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM UserAttributeTypes
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.41 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM UserVariableTypes
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.34 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:01:16 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 1.17 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM ItemGroups
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.36 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM Bundles ORDER BY ID
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.51 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.48 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 15:01:16 TIME: core/shop.getList : 0.03 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM EffectAttributeTypes
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.37 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM Effects
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.52 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 15:01:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.66 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 15:01:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.78 ms
31.08 15:01:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 15:01:16 DB: SELECT * FROM Badges
31.08 15:01:16 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:01:16 TIME: core/server.query : 0.38 ms
31.08 15:01:16 TIMER: Clans cache...
31.08 15:01:16 TIMER: Clans cache: 0ms
31.08 15:01:16 TIMER: Clans cache...
31.08 15:01:16 TIMER: Clans cache: 0ms
31.08 15:01:16 TIMER: Clans cache...
31.08 15:01:16 TIMER: Clans cache: 0ms
31.08 15:01:16 TIMER: Clans cache...
31.08 15:01:16 TIMER: Clans cache: 0ms
31.08 15:01:16 TIMER: Clans cache...
31.08 15:01:16 TIMER: Clans cache: 0ms
31.08 15:01:16 TIMER: Clans cache...
31.08 15:01:16 TIMER: Clans cache: 0ms
31.08 15:01:16 TIMER: Clans cache...
31.08 15:01:16 TIMER: Clans cache: 0ms
31.08 15:01:16 TIMER: Clans cache...
31.08 15:01:16 TIMER: Clans cache: 0ms
31.08 15:09:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 15:09:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 15:09:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:09:38 TIME: core/server.query : 2.25 ms
31.08 15:09:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 15:09:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 15:09:38 TIME: core/user.isOnlineID : 0.19 ms
31.08 15:09:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 15:09:38 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:09:38 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 15:09:38 STATS: cache [user], database [502 calls, 0 reads, 0 writes]
31.08 15:09:38 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 15:09:38 READDB: SELECT * FROM Users WHERE ID = 2
31.08 15:09:38 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.33 ms]
31.08 15:09:38 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 15:09:38 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:09:38 TIME: core/cache.get : 4.49 ms
31.08 15:09:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 15:09:38 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:09:38 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 15:09:38 STATS: cache [questdata], database [502 calls, 0 reads, 0 writes]
31.08 15:09:38 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 15:09:38 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 15:09:38 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:09:38 TIME: core/cache.get : 2.03 ms
31.08 15:09:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 15:09:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 15:09:38 TIME: core/user.loginPost : 1.79 ms
31.08 15:09:38 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 15:09:38 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 15:09:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 15:09:38 TIME: vdl/cache.battle.find : 1.81 ms
31.08 15:09:38 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 15:09:38 DB: SELECT nextval('Battle_id_seq') AS id
31.08 15:09:38 READDB: SELECT ID FROM Battle WHERE ID = 7
31.08 15:09:38 READDB: INSERT INTO Battle (ID) VALUES (7)
31.08 15:09:38 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:09:38 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 15:09:38 STATS: cache [battle], database [502 calls, 0 reads, 0 writes]
31.08 15:09:38 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 15:09:38 READDB: SELECT * FROM Battle WHERE ID = 7
31.08 15:09:38 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.74 ms]
31.08 15:09:38 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 15:09:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 15:09:38 TIME: vdl/cache.battle.create : 32.64 ms
31.08 15:09:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 15:09:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 15:09:46 TIME: core/cache.update : 0.2 ms
31.08 15:09:47 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 15:11:54 TIMER: Starting timer...
31.08 15:11:54 TIMER: Timer running...
31.08 15:11:54 DB: SELECT * FROM GameVars
31.08 15:11:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:11:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:11:54 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:11:54 TEMP: load ./tmp/quest_daily_ids
31.08 15:11:54 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:11:54 TEMP: save ./tmp/quest_daily_ids
31.08 15:11:54 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:11:54 QUEUE: vdl.0 (thread) response server.login
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:11:54 DB: SELECT * FROM LocalizationStrings
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:11:54 TIME: core/server.query : 6.58 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:11:54 DB: SELECT * FROM GameVars
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:11:54 TIME: core/server.query : 0.5 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:11:54 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:11:54 TIME: core/server.query : 0.65 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:11:54 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:11:54 TIME: core/server.query : 0.42 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:11:54 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:11:54 TIME: core/server.query : 0.79 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:11:54 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:11:54 TIME: core/server.query : 0.75 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:11:54 TIME: core/quest.getDaily : 0.02 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:11:54 DB: SELECT * FROM UserAttributeTypes
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:11:54 TIME: core/server.query : 0.45 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:11:54 DB: SELECT * FROM UserVariableTypes
31.08 15:11:54 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:11:54 TIME: core/server.query : 0.27 ms
31.08 15:11:54 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:11:54 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.31.08 15:22:52 TIMER: Starting timer...
31.08 15:22:52 TIMER: Timer running...
31.08 15:22:52 DB: SELECT * FROM GameVars
31.08 15:22:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:22:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:22:52 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:22:52 TEMP: load ./tmp/quest_daily_ids
31.08 15:22:52 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:22:52 TEMP: save ./tmp/quest_daily_ids
31.08 15:22:52 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:22:52 QUEUE: vdl.0 (thread) response server.login
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM LocalizationStrings
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 7.72 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM GameVars
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.53 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.6 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.43 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.5 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.79 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:22:52 TIME: core/quest.getDaily : 0.02 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM UserAttributeTypes
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.36 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM UserVariableTypes
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.44 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:22:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.91 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM ItemGroups
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.36 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM Bundles ORDER BY ID
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.53 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.49 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 15:22:52 TIME: core/shop.getList : 0.03 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM EffectAttributeTypes
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.33 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM Effects
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.43 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 15:22:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.61 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 15:22:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.71 ms
31.08 15:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 15:22:52 DB: SELECT * FROM Badges
31.08 15:22:52 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:22:52 TIME: core/server.query : 0.33 ms
31.08 15:23:53 TIMER: Clans cache...
31.08 15:23:53 TIMER: Clans cache: 0ms
31.08 15:23:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 15:23:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 15:23:55 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:23:55 TIME: core/server.query : 1.5 ms
31.08 15:23:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 15:23:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 15:23:55 TIME: core/user.isOnlineID : 0.05 ms
31.08 15:23:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 15:23:55 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:23:55 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 15:23:55 STATS: cache [user], database [64 calls, 0 reads, 0 writes]
31.08 15:23:55 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 15:23:55 READDB: SELECT * FROM Users WHERE ID = 2
31.08 15:23:55 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.59 ms]
31.08 15:23:55 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 15:23:55 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:23:55 TIME: core/cache.get : 2.7 ms
31.08 15:23:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 15:23:55 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:23:55 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 15:23:55 STATS: cache [questdata], database [64 calls, 0 reads, 0 writes]
31.08 15:23:55 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 15:23:55 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 15:23:55 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:23:55 TIME: core/cache.get : 0.89 ms
31.08 15:23:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 15:23:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 15:23:55 TIME: core/user.loginPost : 0.05 ms
31.08 15:23:55 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 15:23:55 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 15:23:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 15:23:55 TIME: vdl/cache.battle.find : 1.17 ms
31.08 15:23:55 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 15:23:55 READDB: SELECT ID FROM Battle WHERE ID = 7
31.08 15:23:55 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:23:55 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 15:23:55 STATS: cache [battle], database [64 calls, 0 reads, 0 writes]
31.08 15:23:55 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 15:23:55 READDB: SELECT * FROM Battle WHERE ID = 7
31.08 15:23:55 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.52 ms]
31.08 15:23:55 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 15:23:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => userAlreadyExist, _type => vdl/cache.battle.create }
31.08 15:23:55 TIME: vdl/cache.battle.create : 1.29 ms
31.08 15:24:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 15:24:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 15:24:03 TIME: core/cache.update : 0.1 ms
31.08 15:24:04 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 15:24:53 TIMER: Clans cache...
31.08 15:24:53 TIMER: Clans cache: 0ms
31.08 15:24:53 TIMER: Clans cache...
31.08 15:24:53 TIMER: Clans cache: 0ms
31.08 15:24:53 TIMER: Clans cache...
31.08 15:24:53 TIMER: Clans cache: 0ms
31.08 15:27:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 15:27:52 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 15:27:52 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 15:27:52 STATS: cache [user], database [302 calls, 1 reads, 1 writes]
31.08 15:27:52 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 15:27:52 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.72 ms]
31.08 15:27:52 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.22 ms]
31.08 15:27:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 15:27:52 TIME: core/cache.update : 0.7 ms
31.08 15:27:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 15:27:52 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 15:27:52 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 15:27:52 STATS: cache [questdata], database [302 calls, 1 reads, 0 writes]
31.08 15:27:52 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 15:27:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 15:27:52 TIME: core/cache.update : 0.24 ms
31.08 15:27:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 15:27:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 15:27:52 TIME: core/user.logoutPost : 0.12 ms
31.08 15:27:53 TIMER: Clans cache...
31.08 15:27:53 TIMER: Clans cache: 0ms
31.08 15:27:53 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 15:27:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 15:30:29 TIMER: Starting timer...
31.08 15:30:29 TIMER: Timer running...
31.08 15:30:29 DB: SELECT * FROM GameVars
31.08 15:30:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:30:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:30:29 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:30:29 TEMP: load ./tmp/quest_daily_ids
31.08 15:30:29 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:30:29 TEMP: save ./tmp/quest_daily_ids
31.08 15:30:29 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:30:29 QUEUE: vdl.0 (thread) response server.login
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM LocalizationStrings
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 7.07 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM GameVars
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.98 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 1.07 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.47 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.65 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.79 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:30:29 TIME: core/quest.getDaily : 0.02 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM UserAttributeTypes
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.37 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM UserVariableTypes
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.31 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:30:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 1.12 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM ItemGroups
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.34 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM Bundles ORDER BY ID
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.46 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.43 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 15:30:29 TIME: core/shop.getList : 0.03 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM EffectAttributeTypes
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.36 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM Effects
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.3 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 15:30:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.75 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 15:30:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.5 ms
31.08 15:30:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 15:30:29 DB: SELECT * FROM Badges
31.08 15:30:29 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:30:29 TIME: core/server.query : 0.44 ms
31.08 15:31:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 15:31:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 15:31:05 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:31:05 TIME: core/server.query : 1.89 ms
31.08 15:31:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 15:31:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 15:31:05 TIME: core/user.isOnlineID : 0.08 ms
31.08 15:31:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 15:31:05 READDB: SELECT * FROM Users WHERE ID = 2
31.08 15:31:05 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:31:05 TIME: core/cache.get : 3.25 ms
31.08 15:31:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 15:31:05 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 15:31:05 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:31:05 TIME: core/cache.get : 1.36 ms
31.08 15:31:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 15:31:05 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 15:31:05 TIME: core/user.loginPost : 0.14 ms
31.08 15:31:05 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 15:31:05 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 15:31:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 15:31:05 TIME: vdl/cache.battle.find : 2.06 ms
31.08 15:31:05 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 15:31:05 READDB: SELECT ID FROM Battle WHERE ID = 7
31.08 15:31:05 READDB: INSERT INTO Battle (ID) VALUES (7)
31.08 15:31:05 READDB: SELECT * FROM Battle WHERE ID = 7
31.08 15:31:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 15:31:05 TIME: vdl/cache.battle.create : 120.7 ms
31.08 15:31:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 15:31:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 15:31:14 TIME: core/cache.update : 0.2 ms
31.08 15:31:15 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 15:32:46 TIMER: Starting timer...
31.08 15:32:46 TIMER: Timer running...
31.08 15:32:46 DB: SELECT * FROM GameVars
31.08 15:32:46 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:32:46 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:32:46 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:32:46 TEMP: load ./tmp/quest_daily_ids
31.08 15:32:46 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:32:46 TEMP: save ./tmp/quest_daily_ids
31.08 15:32:47 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:32:47 QUEUE: vdl.0 (thread) response server.login
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM LocalizationStrings
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 9.3 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM GameVars
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.58 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.77 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.63 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.55 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 1.01 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:32:47 TIME: core/quest.getDaily : 0.02 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM UserAttributeTypes
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.48 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM UserVariableTypes
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.41 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:32:47 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 1.13 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM ItemGroups
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.38 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM Bundles ORDER BY ID
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.6 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.49 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 15:32:47 TIME: core/shop.getList : 0.04 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM EffectAttributeTypes
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.43 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM Effects
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.52 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 15:32:47 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.91 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 15:32:47 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.94 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 15:32:47 DB: SELECT * FROM Badges
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 0.79 ms
31.08 15:32:47 TIMER: Clans cache...
31.08 15:32:47 TIMER: Clans cache: 0ms
31.08 15:32:47 TIMER: Clans cache...
31.08 15:32:47 TIMER: Clans cache: 0ms
31.08 15:32:47 TIMER: Clans cache...
31.08 15:32:47 TIMER: Clans cache: 0ms
31.08 15:32:47 TIMER: Clans cache...
31.08 15:32:47 TIMER: Clans cache: 0ms
31.08 15:32:47 TIMER: Clans cache...
31.08 15:32:47 TIMER: Clans cache: 0ms
31.08 15:32:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 15:32:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:32:47 TIME: core/server.query : 1.28 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 15:32:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 15:32:47 TIME: core/user.isOnlineID : 0.04 ms
31.08 15:32:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 15:32:47 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:32:47 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 15:32:47 STATS: cache [user], database [301 calls, 0 reads, 0 writes]
31.08 15:32:47 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 15:32:47 READDB: SELECT * FROM Users WHERE ID = 2
31.08 15:32:47 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 1.87 ms]
31.08 15:32:47 STATS: c31.08 15:50:31 TIMER: Starting timer...
31.08 15:50:31 TIMER: Timer running...
31.08 15:50:31 DB: SELECT * FROM GameVars
31.08 15:50:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:50:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:50:31 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:50:31 TEMP: load ./tmp/quest_daily_ids
31.08 15:50:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:50:31 TEMP: save ./tmp/quest_daily_ids
31.08 15:50:31 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:50:31 QUEUE: vdl.0 (thread) response server.login
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM LocalizationStrings
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 6.86 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM GameVars
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.55 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.67 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.41 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.56 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.84 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:50:31 TIME: core/quest.getDaily : 0.03 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM UserAttributeTypes
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.44 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM UserVariableTypes
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.31 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:50:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 1.12 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM ItemGroups
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.36 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM Bundles ORDER BY ID
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.49 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.38 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 15:50:31 TIME: core/shop.getList : 0.03 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM EffectAttributeTypes
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.45 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM Effects
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.32 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 15:50:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.58 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 15:50:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.66 ms
31.08 15:50:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 15:50:31 DB: SELECT * FROM Badges
31.08 15:50:31 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:50:31 TIME: core/server.query : 0.34 ms
31.08 15:51:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 15:51:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 15:51:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:51:01 TIME: core/server.query : 2.66 ms
31.08 15:51:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 15:51:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 15:51:01 TIME: core/user.isOnlineID : 0.08 ms
31.08 15:51:01 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 15:51:01 READDB: SELECT * FROM Users WHERE ID = 2
31.08 15:51:01 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:51:01 TIME: core/cache.get : 3.95 ms
31.08 15:51:01 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 15:51:01 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 15:51:01 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:51:01 TIME: core/cache.get : 1.37 ms
31.08 15:51:01 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 15:51:01 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 15:51:01 TIME: core/user.loginPost : 0.15 ms
31.08 15:51:01 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 15:51:01 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 15:51:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 15:51:01 TIME: vdl/cache.battle.find : 3.7 ms
31.08 15:51:01 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 15:51:01 DB: SELECT nextval('Battle_id_seq') AS id
31.08 15:51:01 READDB: SELECT ID FROM Battle WHERE ID = 1
31.08 15:51:01 READDB: INSERT INTO Battle (ID) VALUES (1)
31.08 15:51:01 READDB: SELECT * FROM Battle WHERE ID = 1
31.08 15:51:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 15:51:01 TIME: vdl/cache.battle.create : 45.95 ms
31.08 15:51:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 15:51:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 15:51:06 TIME: core/cache.update : 0.2 ms
31.08 15:51:07 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 15:52:48 TIMER: Starting timer...
31.08 15:52:48 TIMER: Timer running...
31.08 15:52:48 DB: SELECT * FROM GameVars
31.08 15:52:48 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:52:48 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:52:48 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:52:48 TEMP: load ./tmp/quest_daily_ids
31.08 15:52:48 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:52:48 TEMP: save ./tmp/quest_daily_ids
31.08 15:52:48 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:52:48 QUEUE: vdl.0 (thread) response server.login
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM LocalizationStrings
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 9.14 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM GameVars
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.55 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.89 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.57 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.54 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.89 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:52:48 TIME: core/quest.getDaily : 0.02 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM UserAttributeTypes
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.48 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM UserVariableTypes
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.37 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:52:48 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 1.01 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM ItemGroups
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.51 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM Bundles ORDER BY ID
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.64 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.43 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 15:52:48 TIME: core/shop.getList : 0.03 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM EffectAttributeTypes
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.7 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM Effects
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.39 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 15:52:48 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.96 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 15:52:48 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.72 ms
31.08 15:52:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 15:52:48 DB: SELECT * FROM Badges
31.08 15:52:48 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:52:48 TIME: core/server.query : 0.37 ms
31.08 15:52:48 TIMER: Clans cache...
31.08 15:52:48 TIMER: Clans cache: 0ms
31.08 15:54:15 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 15:54:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 15:54:15 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:54:15 TIME: core/server.query : 1.6 ms
31.08 15:54:15 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 15:54:15 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 15:54:15 TIME: core/user.isOnlineID : 0.1 ms
31.08 15:54:15 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 15:54:15 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:54:15 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 15:54:15 STATS: cache [user], database [87 calls, 0 reads, 0 writes]
31.08 15:54:15 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 15:54:15 READDB: SELECT * FROM Users WHERE ID = 2
31.08 15:54:15 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.5 ms]
31.08 15:54:15 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 15:54:15 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:54:15 TIME: core/cache.get : 2.65 ms
31.08 15:54:15 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 15:54:15 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:54:15 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 15:54:15 STATS: cache [questdata], database [87 calls, 0 reads, 0 writes]
31.08 15:54:15 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 15:54:15 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 15:54:15 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:54:15 TIME: core/cache.get : 1.06 ms
31.08 15:54:15 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 15:54:15 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 15:54:15 TIME: core/user.loginPost : 0.13 ms
31.08 15:54:15 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 15:54:15 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 15:54:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 15:54:15 TIME: vdl/cache.battle.find : 1.72 ms
31.08 15:54:15 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 15:54:15 DB: SELECT nextval('Battle_id_seq') AS id
31.08 15:54:15 READDB: SELECT ID FROM Battle WHERE ID = 2
31.08 15:54:15 READDB: INSERT INTO Battle (ID) VALUES (2)
31.08 15:54:15 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 15:54:15 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 15:54:15 STATS: cache [battle], database [87 calls, 0 reads, 0 writes]
31.08 15:54:15 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 15:54:15 READDB: SELECT * FROM Battle WHERE ID = 2
31.08 15:54:15 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.68 ms]
31.08 15:54:15 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 15:54:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 15:54:15 TIME: vdl/cache.battle.create : 65.35 ms
31.08 15:54:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 15:54:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 15:54:23 TIME: core/cache.update : 0.18 ms
31.08 15:54:24 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 15:56:42 TIMER: Starting timer...
31.08 15:56:42 TIMER: Timer running...
31.08 15:56:42 DB: SELECT * FROM GameVars
31.08 15:56:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:56:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:56:42 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:56:42 TEMP: load ./tmp/quest_daily_ids
31.08 15:56:42 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:56:42 TEMP: save ./tmp/quest_daily_ids
31.08 15:56:42 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:56:42 QUEUE: vdl.0 (thread) response server.login
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM LocalizationStrings
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 6.39 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM GameVars
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.75 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.74 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.52 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.61 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 1.08 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:56:42 TIME: core/quest.getDaily : 0.02 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM UserAttributeTypes
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.49 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM UserVariableTypes
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.36 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:56:42 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 1.29 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM ItemGroups
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.38 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM Bundles ORDER BY ID
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.64 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.66 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 15:56:42 TIME: core/shop.getList : 0.04 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM EffectAttributeTypes
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.38 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM Effects
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.46 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 15:56:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.87 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 15:56:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.88 ms
31.08 15:56:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 15:56:42 DB: SELECT * FROM Badges
31.08 15:56:42 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:56:42 TIME: core/server.query : 0.52 ms
31.08 15:57:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 15:57:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 15:57:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:57:06 TIME: core/server.query : 1.57 ms
31.08 15:57:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 15:57:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 15:57:06 TIME: core/user.isOnlineID : 0.1 ms
31.08 15:57:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 15:57:06 READDB: SELECT * FROM Users WHERE ID = 2
31.08 15:57:06 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:57:06 TIME: core/cache.get : 2.92 ms
31.08 15:57:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 15:57:06 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 15:57:06 QUEUE: vdl.0 (thread) response core/cache.get
31.08 15:57:06 TIME: core/cache.get : 1.07 ms
31.08 15:57:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 15:57:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 15:57:06 TIME: core/user.loginPost : 0.06 ms
31.08 15:57:06 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 15:57:06 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 15:57:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 15:57:06 TIME: vdl/cache.battle.find : 1.3 ms
31.08 15:57:06 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 15:57:06 DB: SELECT nextval('Battle_id_seq') AS id
31.08 15:57:06 READDB: SELECT ID FROM Battle WHERE ID = 1
31.08 15:57:06 READDB: INSERT INTO Battle (ID) VALUES (1)
31.08 15:57:06 READDB: SELECT * FROM Battle WHERE ID = 1
31.08 15:57:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 15:57:06 TIME: vdl/cache.battle.create : 37.23 ms
31.08 15:57:12 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 15:57:12 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 15:57:12 TIME: core/cache.update : 0.11 ms
31.08 15:57:13 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 15:59:19 TIMER: Starting timer...
31.08 15:59:19 TIMER: Timer running...
31.08 15:59:19 DB: SELECT * FROM GameVars
31.08 15:59:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:59:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:59:19 DB: SELECT * FROM Shops WHERE ID = 1
31.08 15:59:19 TEMP: load ./tmp/quest_daily_ids
31.08 15:59:19 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 15:59:19 TEMP: save ./tmp/quest_daily_ids
31.08 15:59:19 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 15:59:19 QUEUE: vdl.0 (thread) response server.login
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM LocalizationStrings
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 9.86 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM GameVars
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.73 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.87 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.41 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.72 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.89 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 15:59:19 TIME: core/quest.getDaily : 0.04 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM UserAttributeTypes
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.49 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM UserVariableTypes
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.38 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 15:59:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 1.25 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM ItemGroups
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.47 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM Bundles ORDER BY ID
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.55 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.51 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 15:59:19 TIME: core/shop.getList : 0.04 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM EffectAttributeTypes
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.38 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM Effects
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.63 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 15:59:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 1.07 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 15:59:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.66 ms
31.08 15:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 15:59:19 DB: SELECT * FROM Badges
31.08 15:59:19 QUEUE: vdl.0 (thread) response core/server.query
31.08 15:59:19 TIME: core/server.query : 0.37 ms
31.08 15:59:19 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
31.08 15:59:19 TIMER: Clans cache...
31.08 15:59:19 TIMER: Clans cache: 0ms
31.08 15:59:19 TIMER: Clans cache...
31.08 15:59:19 TIMER: Clans cache: 0ms
31.08 15:59:19 TIMER: Clans cache...
31.08 15:59:19 TIMER: Clans cache: 0ms
