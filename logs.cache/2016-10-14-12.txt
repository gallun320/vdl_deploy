14.10 12:10:17 TIMER: Starting timer...
14.10 12:10:17 TIMER: Timer running...
14.10 12:10:17 DB: SELECT * FROM GameVars
14.10 12:10:17 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 12:10:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 12:10:18 DB: SELECT * FROM Shops WHERE ID = 1
14.10 12:10:18 TEMP: load ./tmp/quest_daily_ids
14.10 12:10:18 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 12:10:18 TEMP: save ./tmp/quest_daily_ids
14.10 12:10:18 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 12:10:18 QUEUE: vdl.0 (thread) response server.login
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 12:10:18 DB: SELECT * FROM LocalizationStrings
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 90.25 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 12:10:18 DB: SELECT * FROM GameVars
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 0.86 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 12:10:18 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 1.29 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 12:10:18 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 0.86 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 12:10:18 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 0.78 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 12:10:18 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 2.64 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 12:10:18 TIME: core/quest.getDaily : 0.02 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 12:10:18 DB: SELECT * FROM UserAttributeTypes
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 23.84 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 12:10:18 DB: SELECT * FROM UserVariableTypes
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 1.5 ms
14.10 12:10:18 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 12:10:18 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 12:10:18 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:10:18 TIME: core/server.query : 9.17 ms
1414.10 12:12:06 TIMER: Starting timer...
14.10 12:12:06 TIMER: Timer running...
14.10 12:12:06 DB: SELECT * FROM GameVars
14.10 12:12:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 12:12:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 12:12:06 DB: SELECT * FROM Shops WHERE ID = 1
14.10 12:12:06 TEMP: load ./tmp/quest_daily_ids
14.10 12:12:06 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 12:12:06 TEMP: save ./tmp/quest_daily_ids
14.10 12:12:06 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 12:12:06 QUEUE: vdl.0 (thread) response server.login
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM LocalizationStrings
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 8 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM GameVars
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.59 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.64 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.37 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.47 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.78 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 12:12:06 TIME: core/quest.getDaily : 0.02 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM UserAttributeTypes
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.33 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM UserVariableTypes
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.3 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 12:12:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 1.09 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM ItemGroups
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.5 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM Bundles ORDER BY ID
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.46 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.43 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 12:12:06 TIME: core/shop.getList : 0.03 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM EffectAttributeTypes
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.33 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM Effects
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.39 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 12:12:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 1.1 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 12:12:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.77 ms
14.10 12:12:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 12:12:06 DB: SELECT * FROM Badges
14.10 12:12:06 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:12:06 TIME: core/server.query : 0.32 ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:12:06 TIMER: Clans cache...
14.10 12:12:06 TIMER: Clans cache: 0ms
14.10 12:30:15 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid42' AND Password = E'uid42', _type => core/server.query }
14.10 12:30:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid42' AND Password = E'uid42'
14.10 12:30:15 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:30:15 TIME: core/server.query : 76.23 ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:31:06 TIMER: Clans cache...
14.10 12:31:06 TIMER: Clans cache: 0ms
14.10 12:39:21 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid42' AND Password = E'uid42', _type => core/server.query }
14.10 12:39:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid42' AND Password = E'uid42'
14.10 12:39:21 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:39:21 TIME: core/server.query : 2.74 ms
14.10 12:39:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid42' AND Password = E'uid42', _type => core/server.query }
14.10 12:39:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid42' AND Password = E'uid42'
14.10 12:39:50 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:39:50 TIME: core/server.query : 2.86 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
14.10 12:39:51 DB: SELECT * FROM users
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:39:51 TIME: core/server.query : 3.65 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid34', _type => core/server.query }
14.10 12:39:51 DB: SELECT ID FROM Users WHERE Name = E'uid34'
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 12:39:51 TIME: core/server.query : 0.99 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
14.10 12:39:51 DB: SELECT nextval('Users_id_seq') AS id
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 12:39:51 TIME: core/server.query : 87.5 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/user.register { password => uid34, name => uid34, fullParams => { password => uid34, name => uid34, networkid => , networktype => , messageType => user.register, id => 34 }, networkid => , connectionID => 64058795, networktype => , email => , id => 34, _type => core/user.register }
14.10 12:39:51 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (34,E'uid34',E'',E'',E'uid34',E'', now())
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/user.register { errorCode => ok, _type => core/user.register }
14.10 12:39:51 TIME: core/user.register : 0.82 ms
14.10 12:39:51 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (34, 0)
14.10 12:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 12:39:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 12:39:51 TIME: core/server.query : 1.22 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 12:39:51 TIME: core/user.isOnlineID : 0.13 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 12:39:51 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 12:39:51 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 12:39:51 STATS: cache [user], database [1666 calls, 0 reads, 0 writes]
14.10 12:39:51 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 12:39:51 READDB: SELECT * FROM Users WHERE ID = 34
14.10 12:39:51 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.09 ms]
14.10 12:39:51 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language =>   , networkid => , params => {}}, version => 0, id => 34 } }
14.10 12:39:51 TIME: core/cache.get : 3.48 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 12:39:51 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 12:39:51 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
14.10 12:39:51 STATS: cache [questdata], database [1666 calls, 0 reads, 0 writes]
14.10 12:39:51 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 12:39:51 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 12:39:51 CACHE: cache block locked: user.34
14.10 12:39:51 READDB: SELECT * FROM Users WHERE ID = 1
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => notFound, _type => core/cache.get }
14.10 12:39:51 TIME: core/cache.get : 45.24 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/cache.create { type => questdata, id => 34, _type => core/cache.create }
14.10 12:39:51 READDB: SELECT ID FROM UserQuests WHERE ID = 34
14.10 12:39:51 READDB: SELECT ID FROM UserQuests WHERE ID = 34
14.10 12:39:51 READDB: INSERT INTO UserQuests (ID) VALUES (34)
14.10 12:39:51 READDB: INSERT INTO UserQuests (ID) VALUES (34)
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/cache.create { errorCode => ok, _type => core/cache.create }
14.10 12:39:51 TIME: core/cache.create : 35.2 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 12:39:51 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid34, name => uid34, _isNotify => true, fullParams => { password => uid34, name => uid34, networkid => , networktype => , messageType => user.register, id => 34 }, networkid => , connectionID => 64058795, networktype => , email => , id => 34, _type => core/user.registerResponse }
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 34 } }
14.10 12:39:51 TIME: core/cache.get : 22.43 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 12:39:51 TIME: core/user.loginPost : 0.32 ms
14.10 12:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 34 AND Date = 'today'::timestamp, _type => core/server.query }
14.10 12:39:51 DB: SELECT ID FROM TempUserLogins WHERE UserID = 34 AND Date = 'today'::timestamp
14.10 12:39:51 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 12:39:51 TIME: core/server.query : 38.06 ms
14.10 12:39:52 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (34, 'today'::timestamp)
14.10 12:39:57 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 12:40:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:01 TIME: core/cache.update : 0.15 ms
14.10 12:40:02 BLOCKREMOVE: user 1 removed
14.10 12:40:03 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 12:40:03 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 12:40:03 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 12:40:03 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 12:40:03 STATS: cache [tournament], database [1677 calls, 0 reads, 0 writes]
14.10 12:40:03 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 12:40:03 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 12:40:03 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.04 ms]
14.10 12:40:03 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 12:40:03 TRACE: vdl/cache.tournament.getAvailableTournament : Invalid field access : length
14.10 12:40:03 TRACE: vdl/cache.tournament.getAvailableTournament : 
Called from modules/VDLCache.hx line 175
Called from modules/VDLCache.hx line 78
Called from snipe/cache/CacheServer.hx line 487
14.10 12:40:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { errorCode => _requestException, _type => vdl/cache.tournament.getAvailableTournament }
14.10 12:40:06 TIMER: Clans cache...
14.10 12:40:06 TIMER: Clans cache: 0ms
14.10 12:40:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:06 TIME: core/cache.update : 0.07 ms
14.10 12:40:07 BLOCKREMOVE: user 34 removed
14.10 12:40:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:11 TIME: core/cache.update : 0.21 ms
14.10 12:40:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:16 TIME: core/cache.update : 0.15 ms
14.10 12:40:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:21 TIME: core/cache.update : 0.14 ms
14.10 12:40:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:26 TIME: core/cache.update : 0.13 ms
14.10 12:40:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:31 TIME: core/cache.update : 0.19 ms
14.10 12:40:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:36 TIME: core/cache.update : 0.06 ms
14.10 12:40:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:41 TIME: core/cache.update : 0.15 ms
14.10 12:40:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:46 TIME: core/cache.update : 0.22 ms
14.10 12:40:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:51 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 12:40:51 STATS: cache [user], segments [17 calls, 5 hits, 11 misses]
14.10 12:40:51 STATS: cache [user], database [1726 calls, 2 reads, 1 writes]
14.10 12:40:51 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 12:40:51 STATS: cache manager [1], get [3 calls, total 0.07 sec spent, avg 23.51 ms]
14.10 12:40:51 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.07 ms]
14.10 12:40:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:51 TIME: core/cache.update : 0.59 ms
14.10 12:40:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:40:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:40:56 TIME: core/cache.update : 0.15 ms
14.10 12:41:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:01 TIME: core/cache.update : 0.14 ms
14.10 12:41:06 TIMER: Clans cache...
14.10 12:41:06 TIMER: Clans cache: 0ms
14.10 12:41:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:06 TIME: core/cache.update : 0.2 ms
14.10 12:41:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:11 TIME: core/cache.update : 0.17 ms
14.10 12:41:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:16 TIME: core/cache.update : 0.22 ms
14.10 12:41:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:21 TIME: core/cache.update : 0.21 ms
14.10 12:41:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:26 TIME: core/cache.update : 0.06 ms
14.10 12:41:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:31 TIME: core/cache.update : 0.06 ms
14.10 12:41:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:36 TIME: core/cache.update : 0.06 ms
14.10 12:41:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:41 TIME: core/cache.update : 0.06 ms
14.10 12:41:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:46 TIME: core/cache.update : 0.19 ms
14.10 12:41:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:51 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 12:41:51 STATS: cache [user], segments [29 calls, 5 hits, 23 misses]
14.10 12:41:51 STATS: cache [user], database [1786 calls, 2 reads, 1 writes]
14.10 12:41:51 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 12:41:51 STATS: cache manager [1], get [3 calls, total 0.07 sec spent, avg 23.51 ms]
14.10 12:41:51 STATS: cache manager [1], update [24 calls, total 0 sec spent, avg 0.05 ms]
14.10 12:41:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:51 TIME: core/cache.update : 0.21 ms
14.10 12:41:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:41:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:41:56 TIME: core/cache.update : 0.18 ms
14.10 12:42:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:01 TIME: core/cache.update : 0.1 ms
14.10 12:42:06 TIMER: Clans cache...
14.10 12:42:06 TIMER: Clans cache: 0ms
14.10 12:42:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:06 TIME: core/cache.update : 0.16 ms
14.10 12:42:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM tournament WHERE startdate = 2016-10-14 AND winner = -1 AND status = 'starting', _type => core/server.query }
14.10 12:42:06 DB: SELECT * FROM tournament WHERE startdate = 2016-10-14 AND winner = -1 AND status = 'starting'
14.10 12:42:06 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 12:42:06 TIME: core/server.query : 20.31 ms
14.10 12:42:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:11 TIME: core/cache.update : 0.19 ms
14.10 12:42:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:16 TIME: core/cache.update : 0.12 ms
14.10 12:42:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:21 TIME: core/cache.update : 0.16 ms
14.10 12:42:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:26 TIME: core/cache.update : 0.15 ms
14.10 12:42:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:31 TIME: core/cache.update : 0.15 ms
14.10 12:42:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:36 TIME: core/cache.update : 0.15 ms
14.10 12:42:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:41 TIME: core/cache.update : 0.12 ms
14.10 12:42:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:46 TIME: core/cache.update : 0.13 ms
14.10 12:42:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:51 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 12:42:51 STATS: cache [user], segments [41 calls, 5 hits, 35 misses]
14.10 12:42:51 STATS: cache [user], database [1846 calls, 2 reads, 1 writes]
14.10 12:42:51 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 12:42:51 STATS: cache manager [1], get [3 calls, total 0.07 sec spent, avg 23.51 ms]
14.10 12:42:51 STATS: cache manager [1], update [36 calls, total 0 sec spent, avg 0.05 ms]
14.10 12:42:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:51 TIME: core/cache.update : 0.48 ms
14.10 12:42:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:42:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:56 TIME: core/cache.update : 0.15 ms
14.10 12:42:57 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 12:42:57 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 12:42:57 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 12:42:57 TIME: core/server.query : 12.48 ms
14.10 12:42:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 12:42:57 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 12:42:57 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 12:42:57 STATS: cache [battle], database [1852 calls, 0 reads, 0 writes]
14.10 12:42:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 12:42:57 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 12:42:57 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 12:42:57 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
14.10 12:42:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 12:42:57 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 12:42:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:42:57 TIME: core/cache.update : 0.16 ms
14.10 12:42:57 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 12:42:57 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 1 not found]
14.10 12:42:57 STATS: cache [questdata], segments [6 calls, 0 hits, 5 misses]
14.10 12:42:57 STATS: cache [questdata], database [1852 calls, 2 reads, 0 writes]
14.10 12:42:57 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 12:42:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 12:42:57 TIME: core/cache.update : 0.3 ms
14.10 12:42:57 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 12:42:57 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 12:42:57 TIME: core/user.logoutPost : 0.13 ms
14.10 12:42:58 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 12:43:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:01 TIME: core/cache.update : 0.13 ms
14.10 12:43:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:06 TIME: core/cache.update : 0.1 ms
14.10 12:43:06 TIMER: Clans cache...
14.10 12:43:06 TIMER: Clans cache: 0ms
14.10 12:43:08 BLOCKREMOVE: questdata 34 removed
14.10 12:43:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:11 TIME: core/cache.update : 0.15 ms
14.10 12:43:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:16 TIME: core/cache.update : 0.08 ms
14.10 12:43:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:21 TIME: core/cache.update : 0.15 ms
14.10 12:43:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:26 TIME: core/cache.update : 0.13 ms
14.10 12:43:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:31 TIME: core/cache.update : 0.26 ms
14.10 12:43:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:36 TIME: core/cache.update : 0.13 ms
14.10 12:43:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:41 TIME: core/cache.update : 0.06 ms
14.10 12:43:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:46 TIME: core/cache.update : 0.08 ms
14.10 12:43:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:51 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 12:43:51 STATS: cache [user], segments [54 calls, 5 hits, 48 misses]
14.10 12:43:51 STATS: cache [user], database [1905 calls, 2 reads, 1 writes]
14.10 12:43:51 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 12:43:51 STATS: cache manager [1], get [3 calls, total 0.07 sec spent, avg 23.51 ms]
14.10 12:43:51 STATS: cache manager [1], update [50 calls, total 0 sec spent, avg 0.05 ms]
14.10 12:43:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:51 TIME: core/cache.update : 0.47 ms
14.10 12:43:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:43:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:43:56 TIME: core/cache.update : 0.15 ms
14.10 12:44:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:01 TIME: core/cache.update : 0.19 ms
14.10 12:44:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:06 TIME: core/cache.update : 0.17 ms
14.10 12:44:06 TIMER: Clans cache...
14.10 12:44:06 TIMER: Clans cache: 0ms
14.10 12:44:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:11 TIME: core/cache.update : 0.21 ms
14.10 12:44:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:16 TIME: core/cache.update : 0.13 ms
14.10 12:44:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:21 TIME: core/cache.update : 0.15 ms
14.10 12:44:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:26 TIME: core/cache.update : 0.13 ms
14.10 12:44:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:31 TIME: core/cache.update : 0.16 ms
14.10 12:44:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:36 TIME: core/cache.update : 0.15 ms
14.10 12:44:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:41 TIME: core/cache.update : 0.15 ms
14.10 12:44:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:46 TIME: core/cache.update : 0.15 ms
14.10 12:44:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:51 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 12:44:51 STATS: cache [user], segments [66 calls, 5 hits, 60 misses]
14.10 12:44:51 STATS: cache [user], database [1965 calls, 2 reads, 1 writes]
14.10 12:44:51 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 12:44:51 STATS: cache manager [1], get [3 calls, total 0.07 sec spent, avg 23.51 ms]
14.10 12:44:51 STATS: cache manager [1], update [62 calls, total 0 sec spent, avg 0.05 ms]
14.10 12:44:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:51 TIME: core/cache.update : 0.33 ms
14.10 12:44:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:44:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:44:56 TIME: core/cache.update : 0.14 ms
14.10 12:45:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:01 TIME: core/cache.update : 0.11 ms
14.10 12:45:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:06 TIME: core/cache.update : 0.16 ms
14.10 12:45:06 TIMER: Clans cache...
14.10 12:45:06 TIMER: Clans cache: 0ms
14.10 12:45:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:11 TIME: core/cache.update : 0.17 ms
14.10 12:45:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:16 TIME: core/cache.update : 0.16 ms
14.10 12:45:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:21 TIME: core/cache.update : 0.22 ms
14.10 12:45:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:26 TIME: core/cache.update : 0.22 ms
14.10 12:45:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:31 TIME: core/cache.update : 0.15 ms
14.10 12:45:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:36 TIME: core/cache.update : 0.13 ms
14.10 12:45:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:41 TIME: core/cache.update : 0.16 ms
14.10 12:45:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:46 TIME: core/cache.update : 0.15 ms
14.10 12:45:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:51 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 12:45:51 STATS: cache [user], segments [78 calls, 5 hits, 72 misses]
14.10 12:45:51 STATS: cache [user], database [2025 calls, 2 reads, 1 writes]
14.10 12:45:51 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 12:45:51 STATS: cache manager [1], get [3 calls, total 0.07 sec spent, avg 23.51 ms]
14.10 12:45:51 STATS: cache manager [1], update [74 calls, total 0 sec spent, avg 0.05 ms]
14.10 12:45:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:51 TIME: core/cache.update : 0.44 ms
14.10 12:45:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:45:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:45:56 TIME: core/cache.update : 0.16 ms
14.10 12:46:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:46:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:46:01 TIME: core/cache.update : 0.2 ms
14.10 12:46:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:46:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:46:06 TIME: core/cache.update : 0.09 ms
14.10 12:46:06 TIMER: Clans cache...
14.10 12:46:06 TIMER: Clans cache: 0ms
14.10 12:46:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:46:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:46:11 TIME: core/cache.update : 0.16 ms
14.10 12:46:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:46:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:46:16 TIME: core/cache.update : 0.22 ms
14.10 12:46:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:46:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:46:21 TIME: core/cache.update : 0.15 ms
14.10 12:46:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:46:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 12:46:26 TIME: core/cache.update : 0.13 ms
14.10 12:46:39 TIMER: Starting timer...
14.10 12:46:39 TIMER: Timer running...
14.10 12:46:39 DB: SELECT * FROM GameVars
14.10 12:46:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 12:46:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 12:46:39 DB: SELECT * FROM Shops WHERE ID = 1
14.10 12:46:39 TEMP: load ./tmp/quest_daily_ids
14.10 12:46:39 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 12:46:39 TEMP: save ./tmp/quest_daily_ids
14.10 12:46:39 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 12:46:39 QUEUE: vdl.0 (thread) response server.login
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM LocalizationStrings
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 12.81 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM GameVars
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.7 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.92 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.75 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.65 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 1.12 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 12:46:39 TIME: core/quest.getDaily : 0.06 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM UserAttributeTypes
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.69 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM UserVariableTypes
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 1.22 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 12:46:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 1.88 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM ItemGroups
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.82 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM Bundles ORDER BY ID
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.82 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.65 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 12:46:39 TIME: core/shop.getList : 0.05 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM EffectAttributeTypes
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.63 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM Effects
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.46 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 12:46:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 1.11 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 12:46:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.89 ms
14.10 12:46:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 12:46:39 DB: SELECT * FROM Badges
14.10 12:46:39 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:46:39 TIME: core/server.query : 0.43 ms
14.10 12:46:39 TIMER: Clans cache...
14.10 12:46:39 TIMER: Clans cache: 0ms
14.10 12:46:39 TIMER: Clans cache...
14.10 12:46:39 TIMER: Clans cache: 0ms
14.10 12:49:21 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 12:49:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 12:49:21 QUEUE: vdl.0 (thread) response core/server.query
14.10 12:49:21 TIME: core/server.query : 2.28 ms
14.10 12:49:21 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 12:49:21 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 12:49:21 TIME: core/user.isOnlineID : 0.06 ms
14.10 12:49:21 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 12:49:21 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 12:49:21 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 12:49:21 STATS: cache [user], database [163 calls, 0 reads, 0 writes]
14.10 12:49:21 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 12:49:21 READDB: SELECT * FROM Users WHERE ID = 34
14.10 12:49:21 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.11 ms]
14.10 12:49:21 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 12:49:21 QUEUE: vdl.0 (thread) response core/cache.get
14.10 12:49:21 TIME: core/cache.get : 3.22 ms
14.10 12:49:21 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 12:49:21 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 12:49:21 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
14.10 12:49:21 STATS: cache [questdata], database [163 calls, 0 reads, 0 writes]
14.10 12:49:21 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 12:49:21 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 12:49:21 QUEUE: vdl.0 (thread) response core/cache.get
14.10 12:49:21 TIME: core/cache.get : 0.79 ms
14.10 12:49:21 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 12:49:21 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 12:49:21 TIME: core/user.loginPost : 0.06 ms
14.10 12:49:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:49:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 12:49:29 TIME: core/cache.update : 0.2 ms
14.10 12:49:30 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 12:49:39 TIMER: Clans cache...
14.10 12:49:39 TIMER: Clans cache: 0ms
14.10 12:49:58 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 12:49:58 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 12:49:58 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 12:49:58 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 12:49:58 STATS: cache [tournament], database [200 calls, 0 reads, 0 writes]
14.10 12:49:58 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 12:49:58 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 12:49:58 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.03 ms]
14.10 12:49:58 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 12:49:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 12:49:58 TIME: vdl/cache.tournament.getAvailableTournament : 3.13 ms
14.10 12:50:39 TIMER: Clans cache...
14.10 12:50:39 TIMER: Clans cache: 0ms
14.10 12:50:39 TIMER: Clans cache...
14.10 12:50:39 TIMER: Clans cache: 0ms
14.10 12:50:39 TIMER: Clans cache...
14.10 12:50:39 TIMER: Clans cache: 0ms
14.10 12:50:39 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 12:50:39 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 12:50:39 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 12:50:39 TIME: core/server.query : 1.76 ms
14.10 12:50:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 12:50:39 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 12:50:39 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 12:50:39 STATS: cache [battle], database [420 calls, 0 reads, 0 writes]
14.10 12:50:39 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 12:50:39 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 12:50:39 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 12:50:39 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
14.10 12:50:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 12:50:39 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 12:50:39 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 12:50:39 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
14.10 12:50:39 STATS: cache [user], database [420 calls, 1 reads, 1 writes]
14.10 12:50:39 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 12:50:39 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.93 ms]
14.10 12:50:39 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.22 ms]
14.10 12:50:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 12:50:39 TIME: core/cache.update : 0.73 ms
14.10 12:50:39 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 12:50:39 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 12:50:39 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
14.10 12:50:39 STATS: cache [questdata], database [420 calls, 1 reads, 0 writes]
14.10 12:50:39 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 12:50:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 12:50:39 TIME: core/cache.update : 0.33 ms
14.10 12:50:39 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 12:50:39 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 12:50:39 TIME: core/user.logoutPost : 0.16 ms
14.10 12:50:39 TIMER: Clans cache...
14.10 12:50:39 TIMER: Clans cache: 0ms
14.10 12:50:39 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 12:50:39 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 12:53:49 BLOCKREMOVE: user 34 removed
14.10 12:53:49 BLOCKREMOVE: questdata 34 removed
14.10 12:54:39 TIMER: Clans cache...
14.10 12:54:39 TIMER: Clans cache: 0ms
14.10 12:54:39 TIMER: Clans cache...
14.10 12:54:39 TIMER: Clans cache: 0ms
14.10 12:54:39 TIMER: Clans cache...
14.10 12:54:39 TIMER: Clans cache: 0ms
14.10 12:54:39 TIMER: Clans cache...
14.10 12:54:39 TIMER: Clans cache: 0ms
14.10 12:58:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 12:58:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 12:58:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 12:58:11 TIME: core/server.query : 1.77 ms
14.10 12:58:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 12:58:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 12:58:11 TIME: core/user.isOnlineID : 0.04 ms
14.10 12:58:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 12:58:11 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 12:58:11 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
14.10 12:58:11 STATS: cache [user], database [693 calls, 1 reads, 2 writes]
14.10 12:58:11 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
14.10 12:58:11 READDB: SELECT * FROM Users WHERE ID = 34
14.10 12:58:11 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 1.49 ms]
14.10 12:58:11 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.22 ms]
14.10 12:58:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 12:58:11 TIME: core/cache.get : 0.77 ms
14.10 12:58:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 12:58:11 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 12:58:11 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
14.10 12:58:11 STATS: cache [questdata], database [693 calls, 1 reads, 1 writes]
14.10 12:58:11 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 12:58:11 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 12:58:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 12:58:11 TIME: core/cache.get : 0.63 ms
14.10 12:58:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 12:58:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 12:58:11 TIME: core/user.loginPost : 0.13 ms
14.10 12:58:19 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 12:58:19 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 12:58:19 STATS: cache [tournament], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 12:58:19 STATS: cache [tournament], segments [4 calls, 2 hits, 1 misses]
14.10 12:58:19 STATS: cache [tournament], database [700 calls, 1 reads, 0 writes]
14.10 12:58:19 STATS: cache [tournament], lock [1 calls, 1 attempts, 0 failures]
14.10 12:58:19 CACHE: cache block locked: tournament.1
14.10 12:58:19 TRACE: vdl/cache.tournament.getAvailableTournament : Invalid field access : get
14.10 12:58:19 TRACE: vdl/cache.tournament.getAvailableTournament : 
Called from modules/VDLCache.hx line 173
Called from modules/VDLCache.hx line 78
Called from snipe/cache/CacheServer.hx line 487
14.10 12:58:19 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { errorCode => _requestException, _type => vdl/cache.tournament.getAvailableTournament }
14.10 12:58:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 12:58:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 12:58:19 TIME: core/cache.update : 0.12 ms
14.10 12:58:19 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
