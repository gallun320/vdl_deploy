26.10 16:00:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 16:00:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 16:00:12 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:00:12 TIME: core/server.query : 5.95 ms
26.10 16:00:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 16:00:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:00:12 TIME: core/user.isOnlineID : 0.09 ms
26.10 16:00:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 16:00:12 READDB: SELECT * FROM Users WHERE ID = 95
26.10 16:00:12 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:00:12 TIME: core/cache.get : 3.66 ms
26.10 16:00:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 16:00:12 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 16:00:12 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:00:12 TIME: core/cache.get : 3.64 ms
26.10 16:00:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 16:00:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:00:12 TIME: core/user.loginPost : 0.14 ms
26.10 16:00:17 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 16:00:17 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 16:00:17 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 16:00:17 TIME: core/server.query : 2.71 ms
26.10 16:00:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 16:00:17 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 16:00:17 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 16:00:17 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 16:00:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 16:00:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 16:00:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:00:17 TIME: core/cache.update : 0.19 ms
26.10 16:00:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 16:00:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:00:17 TIME: core/cache.update : 0.16 ms
26.10 16:00:17 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 16:00:17 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:00:17 TIME: core/user.logoutPost : 0.13 ms
26.10 16:00:18 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:00:18 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 16:00:28 BLOCKREMOVE: user 95 removed
26.10 16:00:28 BLOCKREMOVE: questdata 95 removed
26.10 16:00:30 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
26.10 16:00:30 TIMER: Clans cache...
26.10 16:00:30 TIMER: Clans cache: 0ms
26.10 16:00:30 TIMER: Check tournament...
26.10 16:00:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:00' OR rounddate = '2016-26-10 16:00' AND status <> 'finished'
26.10 16:00:30 TIMER: Check tournament: 2ms
26.10 16:00:39 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 16:00:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 16:00:39 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
26.10 16:00:39 TIME: core/server.query : 3.62 ms
26.10 16:00:39 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 16:00:39 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 16:00:39 TIME: core/user.isOnlineID : 0.12 ms
26.10 16:00:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 16:00:39 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 16:00:39 STATS: cache [user], segments [5 calls, 2 hits, 2 misses]
26.10 16:00:39 STATS: cache [user], database [70 calls, 1 reads, 1 writes]
26.10 16:00:39 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
26.10 16:00:39 READDB: SELECT * FROM Users WHERE ID = 95
26.10 16:00:39 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.92 ms]
26.10 16:00:39 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.06 ms]
26.10 16:00:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 95 } }
26.10 16:00:39 TIME: core/cache.get : 2.18 ms
26.10 16:00:39 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 16:00:39 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 16:00:39 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
26.10 16:00:39 STATS: cache [questdata], database [70 calls, 1 reads, 1 writes]
26.10 16:00:39 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
26.10 16:00:39 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 16:00:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
26.10 16:00:39 TIME: core/cache.get : 1.4 ms
26.10 16:00:39 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 16:00:39 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:00:39 TIME: core/user.loginPost : 0.13 ms
26.10 16:00:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 16:00:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:00:45 TIME: core/cache.update : 0.19 ms
26.10 16:00:46 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:01:01 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:01:01 DB: SELECT * FROM tournament
26.10 16:01:01 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 16:01:01 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
26.10 16:01:01 STATS: cache [tournament], database [91 calls, 0 reads, 0 writes]
26.10 16:01:01 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 16:01:01 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:01:01 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-26-10 16:08, startdate => 2016-26-10 16:08 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:01:01 TIME: vdl/cache.tournament.getAvailableTournament : 3.77 ms
26.10 16:01:11 BLOCKREMOVE: tournament 1 removed
26.10 16:01:17 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 16:01:17 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 16:01:17 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 16:01:17 TIME: core/server.query : 0.93 ms
26.10 16:01:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 16:01:17 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
26.10 16:01:17 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
26.10 16:01:17 STATS: cache [battle], database [108 calls, 1 reads, 0 writes]
26.10 16:01:17 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 16:01:17 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 16:01:17 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 16:01:17 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 16:01:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 16:01:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 16:01:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 16:01:17 TIME: core/cache.update : 0.18 ms
26.10 16:01:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 16:01:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:01:17 TIME: core/cache.update : 0.16 ms
26.10 16:01:17 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 16:01:17 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:01:17 TIME: core/user.logoutPost : 0.19 ms
26.10 16:01:18 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:01:18 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 16:01:28 BLOCKREMOVE: user 95 removed
26.10 16:01:28 BLOCKREMOVE: questdata 95 removed
26.10 16:01:30 TIMER: Clans cache...
26.10 16:01:30 TIMER: Clans cache: 0ms
26.10 16:01:30 TIMER: Check tournament...
26.10 16:01:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:01' OR rounddate = '2016-26-10 16:01' AND status <> 'finished'
26.10 16:01:30 TIMER: Check tournament: 1ms
26.10 16:01:30 TIMER: Clans cache...
26.10 16:01:30 TIMER: Clans cache: 0ms
26.10 16:01:30 TIMER: Check tournament...
26.10 16:01:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:02' OR rounddate = '2016-26-10 16:02' AND status <> 'finished'
26.10 16:01:30 TIMER: Check tournament: 1ms
26.10 16:01:30 TIMER: Clans cache...
26.10 16:01:30 TIMER: Clans cache: 0ms
26.10 16:01:30 TIMER: Check tournament...
26.10 16:01:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:03' OR rounddate = '2016-26-10 16:03' AND status <> 'finished'
26.10 16:01:30 TIMER: Check tournament: 1ms
26.10 16:03:32 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
26.10 16:03:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
26.10 16:03:32 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
26.10 16:03:32 TIME: core/server.query : 2.86 ms
26.10 16:03:32 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
26.10 16:03:32 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 16:03:32 TIME: core/user.isOnlineID : 0.08 ms
26.10 16:03:32 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
26.10 16:03:32 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:03:32 STATS: cache [user], segments [10 calls, 5 hits, 4 misses]
26.10 16:03:32 STATS: cache [user], database [243 calls, 2 reads, 3 writes]
26.10 16:03:32 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
26.10 16:03:32 READDB: SELECT * FROM Users WHERE ID = 94
26.10 16:03:32 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2.29 ms]
26.10 16:03:32 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.06 ms]
26.10 16:03:32 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 94 } }
26.10 16:03:32 TIME: core/cache.get : 1.96 ms
26.10 16:03:32 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
26.10 16:03:32 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:03:32 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
26.10 16:03:32 STATS: cache [questdata], database [243 calls, 2 reads, 2 writes]
26.10 16:03:32 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
26.10 16:03:32 READDB: SELECT * FROM UserQuests WHERE ID = 94
26.10 16:03:32 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
26.10 16:03:32 TIME: core/cache.get : 1.54 ms
26.10 16:03:32 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
26.10 16:03:32 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:03:32 TIME: core/user.loginPost : 0.28 ms
26.10 16:03:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
26.10 16:03:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:03:40 TIME: core/cache.update : 0.18 ms
26.10 16:03:41 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 16:03:53 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:03:53 DB: SELECT * FROM tournament
26.10 16:03:53 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 16:03:53 STATS: cache [tournament], segments [2 calls, 0 hits, 1 misses]
26.10 16:03:53 STATS: cache [tournament], database [264 calls, 1 reads, 0 writes]
26.10 16:03:53 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 16:03:53 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:03:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-26-10 16:08, startdate => 2016-26-10 16:08 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:03:53 TIME: vdl/cache.tournament.getAvailableTournament : 2.49 ms
26.10 16:03:54 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 16:03:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 16:03:54 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
26.10 16:03:54 TIME: core/server.query : 1.34 ms
26.10 16:03:54 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 16:03:54 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 16:03:54 TIME: core/user.isOnlineID : 0.11 ms
26.10 16:03:54 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 16:03:54 READDB: SELECT * FROM Users WHERE ID = 95
26.10 16:03:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 95 } }
26.10 16:03:54 TIME: core/cache.get : 1.67 ms
26.10 16:03:54 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 16:03:54 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 16:03:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
26.10 16:03:54 TIME: core/cache.get : 0.87 ms
26.10 16:03:54 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 16:03:54 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:03:54 TIME: core/user.loginPost : 0.12 ms
26.10 16:03:58 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.10 16:03:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.10 16:03:58 TIME: vdl/cache.tournament.addUsers : 0.28 ms
26.10 16:03:59 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 16:08', roundinterval = E'60', params = E'{"params":{"usersList":[94],"usersAll":[94]}}', rounddate = E'2016-26-10 16:08' WHERE ID = 1
26.10 16:04:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 16:04:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:04:00 TIME: core/cache.update : 0.18 ms
26.10 16:04:01 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:04:09 BLOCKREMOVE: tournament 1 removed
26.10 16:04:30 TIMER: Clans cache...
26.10 16:04:30 TIMER: Clans cache: 0ms
26.10 16:04:30 TIMER: Check tournament...
26.10 16:04:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:04' OR rounddate = '2016-26-10 16:04' AND status <> 'finished'
26.10 16:04:30 TIMER: Check tournament: 1ms
26.10 16:04:38 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:04:38 DB: SELECT * FROM tournament
26.10 16:04:38 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:04:38 DB: SELECT name FROM users WHERE id = 94
26.10 16:04:38 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-26-10 16:08, startdate => 2016-26-10 16:08 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:04:38 TIME: vdl/cache.tournament.getAvailableTournament : 4.47 ms
26.10 16:04:42 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.10 16:04:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.10 16:04:42 TIME: vdl/cache.tournament.addUsers : 0.24 ms
26.10 16:04:42 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:04:42 DB: SELECT * FROM tournament
26.10 16:04:42 DB: SELECT name FROM users WHERE id = 94
26.10 16:04:42 DB: SELECT name FROM users WHERE id = 95
26.10 16:04:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 },{ name => uid95, id => 95 }], battleActive => null, rounddate => 2016-26-10 16:08, startdate => 2016-26-10 16:08 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:04:42 TIME: vdl/cache.tournament.getAvailableTournament : 2.57 ms
26.10 16:04:43 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 16:08', roundinterval = E'60', params = E'{"params":{"usersList":[94,95],"usersAll":[94,95]}}', rounddate = E'2016-26-10 16:08' WHERE ID = 1
26.10 16:04:53 BLOCKREMOVE: tournament 1 removed
26.10 16:05:30 TIMER: Clans cache...
26.10 16:05:30 TIMER: Clans cache: 0ms
26.10 16:05:30 TIMER: Check tournament...
26.10 16:05:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:05' OR rounddate = '2016-26-10 16:05' AND status <> 'finished'
26.10 16:05:30 TIMER: Check tournament: 1ms
26.10 16:05:30 TIMER: Clans cache...
26.10 16:05:30 TIMER: Clans cache: 0ms
26.10 16:05:30 TIMER: Check tournament...
26.10 16:05:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:06' OR rounddate = '2016-26-10 16:06' AND status <> 'finished'
26.10 16:05:30 TIMER: Check tournament: 1ms
26.10 16:07:06 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
26.10 16:07:06 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
26.10 16:07:06 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 87 }}, errorCode => ok, _type => core/server.query }
26.10 16:07:06 TIME: core/server.query : 1.76 ms
26.10 16:07:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 87, _type => vdl/cache.battle.infoRoom }
26.10 16:07:06 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
26.10 16:07:06 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
26.10 16:07:06 STATS: cache [battle], database [456 calls, 2 reads, 0 writes]
26.10 16:07:06 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 16:07:06 READDB: SELECT * FROM Battle WHERE ID = 87
26.10 16:07:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 16:07:06 TIME: vdl/cache.battle.infoRoom : 1.31 ms
26.10 16:07:06 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 87, _type => vdl/cache.battle.deleteRoom }
26.10 16:07:06 ROOM: deleted room 87
26.10 16:07:06 DB: DELETE FROM Battle WHERE ID = 87
26.10 16:07:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
26.10 16:07:06 TIME: vdl/cache.battle.deleteRoom : 10.05 ms
26.10 16:07:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
26.10 16:07:06 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 16:07:06 STATS: cache [user], segments [16 calls, 7 hits, 8 misses]
26.10 16:07:06 STATS: cache [user], database [456 calls, 4 reads, 5 writes]
26.10 16:07:06 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
26.10 16:07:06 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.86 ms]
26.10 16:07:06 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.09 ms]
26.10 16:07:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 16:07:06 TIME: core/cache.update : 0.55 ms
26.10 16:07:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
26.10 16:07:06 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 16:07:06 STATS: cache [questdata], segments [13 calls, 4 hits, 8 misses]
26.10 16:07:06 STATS: cache [questdata], database [456 calls, 4 reads, 2 writes]
26.10 16:07:06 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
26.10 16:07:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:07:06 TIME: core/cache.update : 0.4 ms
26.10 16:07:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
26.10 16:07:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:07:06 TIME: core/user.logoutPost : 0.42 ms
26.10 16:07:06 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 16:07:06 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
26.10 16:07:16 BLOCKREMOVE: user 94 removed
26.10 16:07:16 BLOCKREMOVE: questdata 94 removed
26.10 16:07:16 BLOCKREMOVE: battle 87 removed
26.10 16:07:30 TIMER: Clans cache...
26.10 16:07:30 TIMER: Clans cache: 0ms
26.10 16:07:30 TIMER: Check tournament...
26.10 16:07:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:07' OR rounddate = '2016-26-10 16:07' AND status <> 'finished'
26.10 16:07:30 TIMER: Check tournament: 1ms
26.10 16:07:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
26.10 16:07:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
26.10 16:07:41 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
26.10 16:07:41 TIME: core/server.query : 1.24 ms
26.10 16:07:41 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
26.10 16:07:41 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 16:07:41 TIME: core/user.isOnlineID : 0.08 ms
26.10 16:07:41 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
26.10 16:07:41 READDB: SELECT * FROM Users WHERE ID = 94
26.10 16:07:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 94 } }
26.10 16:07:41 TIME: core/cache.get : 1.83 ms
26.10 16:07:41 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
26.10 16:07:41 READDB: SELECT * FROM UserQuests WHERE ID = 94
26.10 16:07:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
26.10 16:07:41 TIME: core/cache.get : 1.11 ms
26.10 16:07:41 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
26.10 16:07:41 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:07:41 TIME: core/user.loginPost : 0.09 ms
26.10 16:07:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
26.10 16:07:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:07:50 TIME: core/cache.update : 0.19 ms
26.10 16:07:50 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 16:08:30 TIMER: Clans cache...
26.10 16:08:30 TIMER: Clans cache: 0ms
26.10 16:08:30 TIMER: Check tournament...
26.10 16:08:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:08' OR rounddate = '2016-26-10 16:08' AND status <> 'finished'
26.10 16:08:30 STATS: cache [tournament], get [7 calls, 3 cache hits, 3 cache misses, 0 same version, 0 not found]
26.10 16:08:30 STATS: cache [tournament], segments [9 calls, 5 hits, 3 misses]
26.10 16:08:30 STATS: cache [tournament], database [540 calls, 3 reads, 2 writes]
26.10 16:08:30 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 16:08:30 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:08:30 DB: SELECT nextval('Battle_id_seq') AS id
26.10 16:08:30 READDB: SELECT ID FROM Battle WHERE ID = 88
26.10 16:08:30 READDB: INSERT INTO Battle (ID) VALUES (88)
26.10 16:08:30 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 2 not found]
26.10 16:08:30 STATS: cache [battle], segments [5 calls, 1 hits, 3 misses]
26.10 16:08:30 STATS: cache [battle], database [540 calls, 3 reads, 0 writes]
26.10 16:08:30 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 16:08:30 READDB: SELECT * FROM Battle WHERE ID = 88
26.10 16:08:30 DB: SELECT name FROM users WHERE id=95
26.10 16:08:30 DB: SELECT name FROM users WHERE id=94
26.10 16:08:30 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-26-10 16:08, id => 95, enemy.num => 2, battleId => 88, player => 1 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
26.10 16:08:30 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-26-10 16:08, id => 94, enemy.num => 1, battleId => 88, player => 2 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
26.10 16:08:30 TIMER: Check tournament: 54ms
26.10 16:08:35 WRITEDB: UPDATE Battle SET secondid = E'94', turnid = E'95', finished = E'false', firstid = E'95', params = E'{}', avaliable = E'false' WHERE ID = 88
26.10 16:08:35 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 16:08', roundinterval = E'60', params = E'{"params":{"usersList":[94,95],"battleActive":[88],"usersAll":[94,95]}}', rounddate = E'2016-26-10 16:08' WHERE ID = 1
26.10 16:08:45 BLOCKREMOVE: battle 88 removed
26.10 16:08:45 BLOCKREMOVE: tournament 1 removed
26.10 16:09:09 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 88, _type => vdl/cache.battle.infoRoom }
26.10 16:09:09 READDB: SELECT * FROM Battle WHERE ID = 88
26.10 16:09:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 94, firstId => 95, _type => vdl/cache.battle.infoRoom, turnId => 95 }
26.10 16:09:09 TIME: vdl/cache.battle.infoRoom : 1.11 ms
26.10 16:09:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 88, _type => vdl/cache.battle.infoRoom }
26.10 16:09:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 94, firstId => 95, _type => vdl/cache.battle.infoRoom, turnId => 95 }
26.10 16:09:15 TIME: vdl/cache.battle.infoRoom : 0.17 ms
26.10 16:09:25 BLOCKREMOVE: battle 88 removed
26.10 16:09:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 88, _type => vdl/cache.battle.infoRoom }
26.10 16:09:29 READDB: SELECT * FROM Battle WHERE ID = 88
26.10 16:09:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 94, firstId => 95, _type => vdl/cache.battle.infoRoom, turnId => 95 }
26.10 16:09:29 TIME: vdl/cache.battle.infoRoom : 1.14 ms
26.10 16:09:30 TIMER: Clans cache...
26.10 16:09:30 TIMER: Clans cache: 0ms
26.10 16:09:30 TIMER: Check tournament...
26.10 16:09:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:09' OR rounddate = '2016-26-10 16:09' AND status <> 'finished'
26.10 16:09:30 TIMER: Check tournament: 1ms
26.10 16:09:39 BLOCKREMOVE: battle 88 removed
26.10 16:10:30 TIMER: Clans cache...
26.10 16:10:30 TIMER: Clans cache: 0ms
26.10 16:10:30 TIMER: Check tournament...
26.10 16:10:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:10' OR rounddate = '2016-26-10 16:10' AND status <> 'finished'
26.10 16:10:30 TIMER: Check tournament: 0ms
26.10 16:10:30 TIMER: Clans cache...
26.10 16:10:30 TIMER: Clans cache: 0ms
26.10 16:10:30 TIMER: Check tournament...
26.10 16:10:30 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:11' OR rounddate = '2016-26-10 16:11' AND status <> 'finished'
26.10 16:10:30 TIMER: Check tournament: 0ms
26.10 16:12:00 TIMER: Starting timer...
26.10 16:12:00 TIMER: Timer running...
26.10 16:12:00 DB: SELECT * FROM GameVars
26.10 16:12:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:12:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:12:00 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:12:00 TEMP: load ./tmp/quest_daily_ids
26.10 16:12:00 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:12:00 TEMP: save ./tmp/quest_daily_ids
26.10 16:12:00 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:12:00 QUEUE: vdl.0 (thread) response server.login
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM LocalizationStrings
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 22.56 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM GameVars
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 0.98 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 1.27 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 1 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 1.02 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 1.67 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:12:00 TIME: core/quest.getDaily : 0.07 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM UserAttributeTypes
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 0.8 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM UserVariableTypes
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 1.31 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:12:00 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 2.36 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM ItemGroups
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 0.85 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 1.19 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 0.85 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:12:00 TIME: core/shop.getList : 0.06 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM EffectAttributeTypes
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 0.67 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM Effects
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 0.66 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:12:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 2.56 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:12:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 1.93 ms
26.10 16:12:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:12:00 DB: SELECT * FROM Badges
26.10 16:12:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:00 TIME: core/server.query : 2.09 ms
26.10 16:12:16 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:12:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:12:16 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:12:16 TIME: core/server.query : 2.04 ms
26.10 16:12:16 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:12:16 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:12:16 TIME: core/user.isOnlineID : 0.1 ms
26.10 16:12:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:12:16 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:12:16 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:12:16 TIME: core/cache.get : 4.54 ms
26.10 16:12:16 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:12:16 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:12:16 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:12:16 TIME: core/cache.get : 1.51 ms
26.10 16:12:16 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:12:16 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:12:16 TIME: core/user.loginPost : 0.15 ms
26.10 16:12:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 16:12:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:12:16 TIME: core/cache.update : 0.19 ms
26.10 16:12:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 16:12:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:12:16 TIME: core/cache.update : 0.55 ms
26.10 16:12:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 16:12:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:12:16 TIME: core/user.logoutPost : 0.47 ms
26.10 16:12:22 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:12:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 16:12:32 BLOCKREMOVE: user 76 removed
26.10 16:12:32 BLOCKREMOVE: questdata 76 removed
26.10 16:13:42 TIMER: Starting timer...
26.10 16:13:42 TIMER: Timer running...
26.10 16:13:42 DB: SELECT * FROM GameVars
26.10 16:13:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:13:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:13:42 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:13:42 TEMP: load ./tmp/quest_daily_ids
26.10 16:13:42 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:13:42 TEMP: save ./tmp/quest_daily_ids
26.10 16:13:43 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:13:43 QUEUE: vdl.0 (thread) response server.login
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM LocalizationStrings
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 31.1 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM GameVars
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 2.76 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 2.86 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.52 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.67 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.93 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:13:43 TIME: core/quest.getDaily : 0.06 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM UserAttributeTypes
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 0.98 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM UserVariableTypes
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 0.97 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:13:43 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 2.82 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM ItemGroups
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 3.4 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.61 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.21 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:13:43 TIME: core/shop.getList : 0.05 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM EffectAttributeTypes
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.09 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM Effects
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 2.05 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:13:43 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.98 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:13:43 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.99 ms
26.10 16:13:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:13:43 DB: SELECT * FROM Badges
26.10 16:13:43 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:43 TIME: core/server.query : 1.1 ms
26.10 16:13:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:13:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:13:51 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:13:51 TIME: core/server.query : 1.96 ms
26.10 16:13:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:13:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:13:51 TIME: core/user.isOnlineID : 0.08 ms
26.10 16:13:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:13:51 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:13:51 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:13:51 TIME: core/cache.get : 3.49 ms
26.10 16:13:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:13:51 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:13:51 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:13:51 TIME: core/cache.get : 1.13 ms
26.10 16:13:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:13:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:13:51 TIME: core/user.loginPost : 0.15 ms
26.10 16:13:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 16:13:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:13:51 TIME: core/cache.update : 0.14 ms
26.10 16:13:51 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 16:13:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:13:51 TIME: core/cache.update : 0.12 ms
26.10 16:13:51 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 16:13:51 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:13:51 TIME: core/user.logoutPost : 0.1 ms
26.10 16:13:56 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:13:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 16:14:39 TIMER: Starting timer...
26.10 16:14:39 TIMER: Timer running...
26.10 16:14:39 DB: SELECT * FROM GameVars
26.10 16:14:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:14:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:14:39 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:14:39 TEMP: load ./tmp/quest_daily_ids
26.10 16:14:39 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:14:39 TEMP: save ./tmp/quest_daily_ids
26.10 16:14:39 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:14:39 QUEUE: vdl.0 (thread) response server.login
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:14:39 DB: SELECT * FROM LocalizationStrings
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:39 TIME: core/server.query : 16.77 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:14:39 DB: SELECT * FROM GameVars
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:39 TIME: core/server.query : 1.18 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:14:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:39 TIME: core/server.query : 1.63 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:14:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:39 TIME: core/server.query : 1.68 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:14:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:39 TIME: core/server.query : 1.77 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:14:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:39 TIME: core/server.query : 2.32 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:14:39 TIME: core/quest.getDaily : 0.11 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:14:39 DB: SELECT * FROM UserAttributeTypes
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:39 TIME: core/server.query : 1.04 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:14:39 DB: SELECT * FROM UserVariableTypes
26.10 16:14:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:39 TIME: core/server.query : 0.84 ms
26.10 16:14:39 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:14:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, 26.10 16:14:44 TIMER: Starting timer...
26.10 16:14:44 TIMER: Timer running...
26.10 16:14:44 DB: SELECT * FROM GameVars
26.10 16:14:44 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:14:44 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:14:44 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:14:44 TEMP: load ./tmp/quest_daily_ids
26.10 16:14:44 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:14:44 TEMP: save ./tmp/quest_daily_ids
26.10 16:14:44 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:14:44 QUEUE: vdl.0 (thread) response server.login
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM LocalizationStrings
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 29.15 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM GameVars
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.6 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.5 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.2 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.19 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 3.17 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:14:44 TIME: core/quest.getDaily : 0.11 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM UserAttributeTypes
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.27 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM UserVariableTypes
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.25 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:14:44 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 2.56 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM ItemGroups
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.4 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.33 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.21 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:14:44 TIME: core/shop.getList : 0.13 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM EffectAttributeTypes
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.24 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM Effects
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.73 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:14:44 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.99 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:14:44 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.73 ms
26.10 16:14:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:14:44 DB: SELECT * FROM Badges
26.10 16:14:44 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:44 TIME: core/server.query : 1.47 ms
26.10 16:14:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:14:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:14:52 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:14:52 TIME: core/server.query : 2.85 ms
26.10 16:14:52 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:14:52 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:14:52 TIME: core/user.isOnlineID : 0.1 ms
26.10 16:14:52 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:14:52 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:14:52 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:14:52 TIME: core/cache.get : 3.22 ms
26.10 16:14:52 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:14:52 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:14:52 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:14:52 TIME: core/cache.get : 1.22 ms
26.10 16:14:52 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:14:52 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:14:52 TIME: core/user.loginPost : 0.14 ms
26.10 16:14:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 16:14:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:14:52 TIME: core/cache.update : 0.21 ms
26.10 16:14:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 16:14:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:14:52 TIME: core/cache.update : 0.38 ms
26.10 16:14:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 16:14:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:14:52 TIME: core/user.logoutPost : 0.48 ms
26.10 16:14:57 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:14:57 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 16:16:55 TIMER: Starting timer...
26.10 16:16:55 TIMER: Timer running...
26.10 16:16:55 DB: SELECT * FROM GameVars
26.10 16:16:55 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:16:55 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:16:55 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:16:55 TEMP: load ./tmp/quest_daily_ids
26.10 16:16:55 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:16:55 TEMP: save ./tmp/quest_daily_ids
26.10 16:16:55 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:16:55 QUEUE: vdl.0 (thread) response server.login
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM LocalizationStrings
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 16.49 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM GameVars
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 2.54 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 2.33 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 1.22 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 1.73 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 3.01 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:16:55 TIME: core/quest.getDaily : 0.12 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM UserAttributeTypes
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 0.93 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM UserVariableTypes
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 0.82 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:16:55 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 3.85 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM ItemGroups
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 1.51 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 1.72 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 1.48 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:16:55 TIME: core/shop.getList : 0.39 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM EffectAttributeTypes
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 1.44 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM Effects
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 1.39 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:16:55 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 4.96 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:16:55 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 2.62 ms
26.10 16:16:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:16:55 DB: SELECT * FROM Badges
26.10 16:16:55 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:16:55 TIME: core/server.query : 1.86 ms
26.10 16:17:03 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:17:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:17:03 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:17:03 TIME: core/server.query : 2.85 ms
26.10 16:17:03 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:17:03 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:17:03 TIME: core/user.isOnlineID : 0.15 ms
26.10 16:17:03 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:17:03 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:17:03 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:17:03 TIME: core/cache.get : 5.12 ms
26.10 16:17:03 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:17:03 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:17:03 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:17:03 TIME: core/cache.get : 2.08 ms
26.10 16:17:03 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:17:03 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:17:03 TIME: core/user.loginPost : 0.14 ms
26.10 16:17:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 16:17:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:17:03 TIME: core/cache.update : 0.19 ms
26.10 16:17:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 16:17:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:17:03 TIME: core/cache.update : 0.28 ms
26.10 16:17:03 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 16:17:03 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:17:03 TIME: core/user.logoutPost : 0.18 ms
26.10 16:17:09 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:17:09 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 16:17:19 BLOCKREMOVE: user 76 removed
26.10 16:17:19 BLOCKREMOVE: questdata 76 removed
26.10 16:21:30 TIMER: Starting timer...
26.10 16:21:30 DB: SELECT * FROM GameVars
26.10 16:21:30 TIMER: Timer running...
26.10 16:21:30 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:21:30 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:21:30 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:21:30 TEMP: load ./tmp/quest_daily_ids
26.10 16:21:30 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:21:30 TEMP: save ./tmp/quest_daily_ids
26.10 16:21:30 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:21:30 QUEUE: vdl.0 (thread) response server.login
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM LocalizationStrings
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 23.87 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM GameVars
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.2 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 2.65 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.86 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.63 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 2.3 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:21:30 TIME: core/quest.getDaily : 0.05 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM UserAttributeTypes
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.51 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM UserVariableTypes
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.07 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:21:30 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 4.8 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM ItemGroups
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.11 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.87 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 2.04 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:21:30 TIME: core/shop.getList : 0.17 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM EffectAttributeTypes
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.7 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM Effects
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.6 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:21:30 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 2.08 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:21:30 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.57 ms
26.10 16:21:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:21:30 DB: SELECT * FROM Badges
26.10 16:21:30 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:30 TIME: core/server.query : 1.93 ms
26.10 16:21:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:21:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:21:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:21:38 TIME: core/server.query : 2.95 ms
26.10 16:21:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:21:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:21:38 TIME: core/user.isOnlineID : 0.08 ms
26.10 16:21:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:21:38 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:21:38 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:21:38 TIME: core/cache.get : 5.22 ms
26.10 16:21:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:21:38 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:21:38 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:21:38 TIME: core/cache.get : 4.31 ms
26.10 16:21:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:21:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:21:38 TIME: core/user.loginPost : 0.14 ms
26.10 16:21:38 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
26.10 16:21:38 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
26.10 16:21:38 TIME: vdl/cache.user.getData : 0.23 ms
26.10 16:21:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.10 16:21:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:21:46 TIME: core/cache.update : 0.62 ms
26.10 16:21:46 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:22:57 TIMER: Starting timer...
26.10 16:22:57 TIMER: Timer running...
26.10 16:22:57 DB: SELECT * FROM GameVars
26.10 16:22:57 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:22:57 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:22:57 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:22:57 TEMP: load ./tmp/quest_daily_ids
26.10 16:22:57 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:22:57 TEMP: save ./tmp/quest_daily_ids
26.10 16:22:57 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:22:57 QUEUE: vdl.0 (thread) response server.login
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:22:57 DB: SELECT * FROM LocalizationStrings
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:22:57 TIME: core/server.query : 23.85 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:22:57 DB: SELECT * FROM GameVars
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:22:57 TIME: core/server.query : 1.06 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:22:57 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:22:57 TIME: core/server.query : 1.77 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:22:57 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:22:57 TIME: core/server.query : 3.78 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:22:57 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:22:57 TIME: core/server.query : 1.37 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:22:57 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:22:57 TIME: core/server.query : 1.7 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:22:57 TIME: core/quest.getDaily : 0.06 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:22:57 DB: SELECT * FROM UserAttributeTypes
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:22:57 TIME: core/server.query : 1.03 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:22:57 DB: SELECT * FROM UserVariableTypes
26.10 16:22:57 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:22:57 TIME: core/server.query : 0.85 ms
26.10 16:22:57 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:22:57 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i26.10 16:23:07 TIMER: Starting timer...
26.10 16:23:07 TIMER: Timer running...
26.10 16:23:07 DB: SELECT * FROM GameVars
26.10 16:23:07 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:23:07 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:23:07 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:23:07 TEMP: load ./tmp/quest_daily_ids
26.10 16:23:07 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:23:07 TEMP: save ./tmp/quest_daily_ids
26.10 16:23:07 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:23:07 QUEUE: vdl.0 (thread) response server.login
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM LocalizationStrings
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 24.19 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM GameVars
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 2.33 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 5.45 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 2.72 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 2.6 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 2.83 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:23:07 TIME: core/quest.getDaily : 0.14 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM UserAttributeTypes
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 1.03 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM UserVariableTypes
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 1.27 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:23:07 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:23:07 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:07 TIME: core/server.query : 4.1 ms
26.10 16:23:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:23:07 DB: SELECT * FROM ItemGroups
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:08 TIME: core/server.query : 1.3 ms
26.10 16:23:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:23:08 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:08 TIME: core/server.query : 1.39 ms
26.10 16:23:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:23:08 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:08 TIME: core/server.query : 1.26 ms
26.10 16:23:08 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:23:08 TIME: core/shop.getList : 0.14 ms
26.10 16:23:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:23:08 DB: SELECT * FROM EffectAttributeTypes
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:08 TIME: core/server.query : 4.05 ms
26.10 16:23:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:23:08 DB: SELECT * FROM Effects
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:08 TIME: core/server.query : 1.53 ms
26.10 16:23:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:23:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:08 TIME: core/server.query : 2.89 ms
26.10 16:23:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:23:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:08 TIME: core/server.query : 5.92 ms
26.10 16:23:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:23:08 DB: SELECT * FROM Badges
26.10 16:23:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:08 TIME: core/server.query : 3.28 ms
26.10 16:23:16 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:23:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:23:16 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:23:16 TIME: core/server.query : 2.73 ms
26.10 16:23:16 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:23:16 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:23:16 TIME: core/user.isOnlineID : 0.1 ms
26.10 16:23:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:23:16 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:23:16 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:23:16 TIME: core/cache.get : 3.32 ms
26.10 16:23:16 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:23:16 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:23:16 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:23:16 TIME: core/cache.get : 1.29 ms
26.10 16:23:16 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:23:16 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:23:16 TIME: core/user.loginPost : 0.13 ms
26.10 16:23:16 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
26.10 16:23:16 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
26.10 16:23:16 TIME: vdl/cache.user.getData : 0.23 ms
26.10 16:23:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.10 16:23:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:23:23 TIME: core/cache.update : 0.08 ms
26.10 16:23:23 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:24:32 TIMER: Starting timer...
26.10 16:24:32 TIMER: Timer running...
26.10 16:24:32 DB: SELECT * FROM GameVars
26.10 16:24:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:24:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:24:32 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:24:32 TEMP: load ./tmp/quest_daily_ids
26.10 16:24:32 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:24:32 TEMP: save ./tmp/quest_daily_ids
26.10 16:24:32 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:24:32 QUEUE: vdl.0 (thread) response server.login
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM LocalizationStrings
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 42.72 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM GameVars
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.23 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 2.25 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 3.32 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.43 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 2.59 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:24:32 TIME: core/quest.getDaily : 0.08 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM UserAttributeTypes
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.72 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM UserVariableTypes
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.31 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:24:32 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 2.21 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM ItemGroups
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.22 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.72 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.29 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:24:32 TIME: core/shop.getList : 0.05 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM EffectAttributeTypes
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.44 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM Effects
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.65 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:24:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.96 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:24:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.43 ms
26.10 16:24:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:24:32 DB: SELECT * FROM Badges
26.10 16:24:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:32 TIME: core/server.query : 1.22 ms
26.10 16:24:40 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:24:40 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:24:40 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:24:40 TIME: core/server.query : 2.9 ms
26.10 16:24:40 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:24:40 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:24:40 TIME: core/user.isOnlineID : 0.07 ms
26.10 16:24:40 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:24:40 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:24:40 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:24:40 TIME: core/cache.get : 4.37 ms
26.10 16:24:40 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:24:40 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:24:40 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:24:40 TIME: core/cache.get : 1.43 ms
26.10 16:24:40 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:24:40 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:24:40 TIME: core/user.loginPost : 0.11 ms
26.10 16:24:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 16:24:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:24:43 TIME: core/cache.update : 0.19 ms
26.10 16:24:43 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 16:24:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:24:43 TIME: core/cache.update : 0.15 ms
26.10 16:24:43 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 16:24:43 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:24:43 TIME: core/user.logoutPost : 0.12 ms
26.10 16:24:46 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:24:46 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 16:24:56 BLOCKREMOVE: user 76 removed
26.10 16:24:56 BLOCKREMOVE: questdata 76 removed
26.10 16:29:34 TIMER: Starting timer...
26.10 16:29:34 TIMER: Timer running...
26.10 16:29:34 DB: SELECT * FROM GameVars
26.10 16:29:34 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:29:34 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:29:34 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:29:34 TEMP: load ./tmp/quest_daily_ids
26.10 16:29:34 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:29:34 TEMP: save ./tmp/quest_daily_ids
26.10 16:29:34 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:29:34 QUEUE: vdl.0 (thread) response server.login
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM LocalizationStrings
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 29.87 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM GameVars
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.29 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.56 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 0.67 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 2.93 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.84 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:29:34 TIME: core/quest.getDaily : 0.07 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM UserAttributeTypes
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 2.67 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM UserVariableTypes
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.26 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:29:34 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 2.78 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM ItemGroups
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 0.49 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 0.63 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.24 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:29:34 TIME: core/shop.getList : 0.08 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM EffectAttributeTypes
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.11 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM Effects
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 0.79 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:29:34 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.66 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:29:34 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.63 ms
26.10 16:29:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:29:34 DB: SELECT * FROM Badges
26.10 16:29:34 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:34 TIME: core/server.query : 1.45 ms
26.10 16:29:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:29:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:29:42 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:29:42 TIME: core/server.query : 2.82 ms
26.10 16:29:42 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:29:42 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:29:42 TIME: core/user.isOnlineID : 0.1 ms
26.10 16:29:42 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:29:42 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:29:42 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:29:42 TIME: core/cache.get : 4.22 ms
26.10 16:29:42 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:29:42 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:29:42 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:29:42 TIME: core/cache.get : 1.61 ms
26.10 16:29:42 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:29:42 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:29:42 TIME: core/user.loginPost : 0.15 ms
26.10 16:29:42 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
26.10 16:29:42 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:29:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
26.10 16:29:42 TIME: vdl/cache.tournament.getStatus : 3.6 ms
26.10 16:29:42 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
26.10 16:29:42 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
26.10 16:29:42 TIME: vdl/cache.user.getData : 0.23 ms
26.10 16:29:46 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
26.10 16:29:46 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
26.10 16:29:46 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 16:29:46 TIME: core/server.query : 1.7 ms
26.10 16:29:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 16:29:46 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 16:29:46 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 16:29:46 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 16:29:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 16:29:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 16:29:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:29:46 TIME: core/cache.update : 0.11 ms
26.10 16:29:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 16:29:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:29:46 TIME: core/cache.update : 0.07 ms
26.10 16:29:46 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 16:29:46 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:29:46 TIME: core/user.logoutPost : 0.07 ms
26.10 16:29:48 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:29:48 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 16:29:53 BLOCKREMOVE: tournament 1 removed
26.10 16:29:58 BLOCKREMOVE: user 76 removed
26.10 16:29:58 BLOCKREMOVE: questdata 76 removed
26.10 16:31:14 TIMER: Starting timer...
26.10 16:31:14 TIMER: Timer running...
26.10 16:31:14 DB: SELECT * FROM GameVars
26.10 16:31:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:31:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:31:14 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:31:14 TEMP: load ./tmp/quest_daily_ids
26.10 16:31:14 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:31:14 TEMP: save ./tmp/quest_daily_ids
26.10 16:31:14 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:31:14 QUEUE: vdl.0 (thread) response server.login
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM LocalizationStrings
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 16.33 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM GameVars
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.13 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.99 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.27 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.63 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 2.37 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:31:14 TIME: core/quest.getDaily : 0.46 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM UserAttributeTypes
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.22 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM UserVariableTypes
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.84 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:31:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 3.98 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM ItemGroups
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.97 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 2.36 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.58 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:31:14 TIME: core/shop.getList : 0.79 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM EffectAttributeTypes
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.12 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM Effects
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.41 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:31:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.73 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:31:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 1.38 ms
26.10 16:31:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:31:14 DB: SELECT * FROM Badges
26.10 16:31:14 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:14 TIME: core/server.query : 0.71 ms
26.10 16:31:25 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 16:31:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 16:31:25 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:31:25 TIME: core/server.query : 2.26 ms
26.10 16:31:25 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 16:31:25 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:31:25 TIME: core/user.isOnlineID : 0.11 ms
26.10 16:31:25 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 16:31:25 READDB: SELECT * FROM Users WHERE ID = 76
26.10 16:31:25 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:31:25 TIME: core/cache.get : 3.67 ms
26.10 16:31:25 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 16:31:25 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 16:31:25 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:31:25 TIME: core/cache.get : 1.41 ms
26.10 16:31:25 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 16:31:25 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:31:25 TIME: core/user.loginPost : 0.08 ms
26.10 16:31:25 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
26.10 16:31:25 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
26.10 16:31:25 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
26.10 16:31:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 77, first => 0 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
26.10 16:31:25 TIME: vdl/cache.battle.find : 2.95 ms
26.10 16:31:25 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
26.10 16:31:25 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
26.10 16:31:25 TIME: vdl/cache.user.getData : 0.21 ms
26.10 16:31:28 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
26.10 16:31:28 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
26.10 16:31:28 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 16:31:28 TIME: core/server.query : 0.9 ms
26.10 16:31:28 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 16:31:28 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 16:31:28 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 16:31:28 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 16:31:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 16:31:28 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 16:31:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:31:28 TIME: core/cache.update : 0.08 ms
26.10 16:31:28 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 16:31:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:31:28 TIME: core/cache.update : 0.07 ms
26.10 16:31:28 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 16:31:28 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:31:28 TIME: core/user.logoutPost : 0.06 ms
26.10 16:31:30 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477486666,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 16:31:30 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 16:32:08 TIMER: Starting timer...
26.10 16:32:08 TIMER: Timer running...
26.10 16:32:08 DB: SELECT * FROM GameVars
26.10 16:32:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:32:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:32:08 DB: SELECT * FROM Shops WHERE ID = 1
26.10 16:32:08 TEMP: load ./tmp/quest_daily_ids
26.10 16:32:08 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 16:32:08 TEMP: save ./tmp/quest_daily_ids
26.10 16:32:08 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 16:32:08 QUEUE: vdl.0 (thread) response server.login
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM LocalizationStrings
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 16.58 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM GameVars
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.11 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.42 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.37 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.17 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.82 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 16:32:08 TIME: core/quest.getDaily : 0.09 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM UserAttributeTypes
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.67 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM UserVariableTypes
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.28 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 16:32:08 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 6.82 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM ItemGroups
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 6.21 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM Bundles ORDER BY ID
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 2.13 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.66 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 16:32:08 TIME: core/shop.getList : 0.09 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM EffectAttributeTypes
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.47 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM Effects
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 0.99 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 16:32:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 2.23 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 16:32:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 1.37 ms
26.10 16:32:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 16:32:08 DB: SELECT * FROM Badges
26.10 16:32:08 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:32:08 TIME: core/server.query : 0.82 ms
26.10 16:32:08 TIMER: Clans cache...
26.10 16:32:08 TIMER: Clans cache: 0ms
26.10 16:32:08 TIMER: Check tournament...
26.10 16:32:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:33' OR rounddate = '2016-26-10 16:33' AND status <> 'finished'
26.10 16:32:08 TIMER: Check tournament: 2ms
26.10 16:33:27 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 16:33:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 16:33:27 QUEUE: vdl.0 (thread) response core/server.query
26.10 16:33:27 TIME: core/server.query : 2.77 ms
26.10 16:33:27 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 16:33:27 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 16:33:27 TIME: core/user.isOnlineID : 0.09 ms
26.10 16:33:27 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 16:33:27 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 16:33:27 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
26.10 16:33:27 STATS: cache [user], database [80 calls, 0 reads, 0 writes]
26.10 16:33:27 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
26.10 16:33:27 READDB: SELECT * FROM Users WHERE ID = 95
26.10 16:33:27 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.91 ms]
26.10 16:33:27 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
26.10 16:33:27 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:33:27 TIME: core/cache.get : 5.09 ms
26.10 16:33:27 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 16:33:27 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 16:33:27 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
26.10 16:33:27 STATS: cache [questdata], database [80 calls, 0 reads, 0 writes]
26.10 16:33:27 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
26.10 16:33:27 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 16:33:27 QUEUE: vdl.0 (thread) response core/cache.get
26.10 16:33:27 TIME: core/cache.get : 1.64 ms
26.10 16:33:27 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 16:33:27 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:33:27 TIME: core/user.loginPost : 0.12 ms
26.10 16:33:33 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 16:33:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:33:33 TIME: core/cache.update : 0.21 ms
26.10 16:33:34 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:33:56 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:33:56 DB: SELECT * FROM tournament
26.10 16:33:56 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 16:33:56 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
26.10 16:33:56 STATS: cache [tournament], database [108 calls, 0 reads, 0 writes]
26.10 16:33:56 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 16:33:56 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:33:56 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-26-10 16:37, startdate => 2016-26-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:33:56 TIME: vdl/cache.tournament.getAvailableTournament : 4.2 ms
26.10 16:33:56 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
26.10 16:33:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
26.10 16:33:56 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
26.10 16:33:56 TIME: core/server.query : 2.17 ms
26.10 16:33:56 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
26.10 16:33:56 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 16:33:56 TIME: core/user.isOnlineID : 0.09 ms
26.10 16:33:56 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
26.10 16:33:56 READDB: SELECT * FROM Users WHERE ID = 94
26.10 16:33:56 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 94 } }
26.10 16:33:56 TIME: core/cache.get : 1.35 ms
26.10 16:33:56 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
26.10 16:33:56 READDB: SELECT * FROM UserQuests WHERE ID = 94
26.10 16:33:56 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
26.10 16:33:56 TIME: core/cache.get : 1.06 ms
26.10 16:33:56 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
26.10 16:33:56 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:33:56 TIME: core/user.loginPost : 0.13 ms
26.10 16:34:00 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.10 16:34:00 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.10 16:34:00 TIME: vdl/cache.tournament.addUsers : 0.22 ms
26.10 16:34:00 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:34:00 DB: SELECT * FROM tournament
26.10 16:34:00 DB: SELECT name FROM users WHERE id = 95
26.10 16:34:00 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => null, rounddate => 2016-26-10 16:37, startdate => 2016-26-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:34:00 TIME: vdl/cache.tournament.getAvailableTournament : 1.82 ms
26.10 16:34:01 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 16:37', roundinterval = E'60', params = E'{"params":{"usersList":[95],"usersAll":[95]}}', rounddate = E'2016-26-10 16:37' WHERE ID = 1
26.10 16:34:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477488836 } }}, type => user, unlock => false, id => 94, _type => core/cache.update }
26.10 16:34:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:34:03 TIME: core/cache.update : 0.25 ms
26.10 16:34:04 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477488836,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 16:34:08 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:34:08 DB: SELECT * FROM tournament
26.10 16:34:08 DB: SELECT name FROM users WHERE id = 95
26.10 16:34:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => null, rounddate => 2016-26-10 16:37, startdate => 2016-26-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:34:08 TIME: vdl/cache.tournament.getAvailableTournament : 1.65 ms
26.10 16:34:08 TIMER: Clans cache...
26.10 16:34:08 TIMER: Clans cache: 0ms
26.10 16:34:08 TIMER: Check tournament...
26.10 16:34:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:34' OR rounddate = '2016-26-10 16:34' AND status <> 'finished'
26.10 16:34:08 TIMER: Check tournament: 1ms
26.10 16:34:15 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.10 16:34:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.10 16:34:15 TIME: vdl/cache.tournament.addUsers : 0.17 ms
26.10 16:34:15 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 16:37', roundinterval = E'60', params = E'{"params":{"usersList":[95,94],"usersAll":[95,94]}}', rounddate = E'2016-26-10 16:37' WHERE ID = 1
26.10 16:34:25 BLOCKREMOVE: tournament 1 removed
26.10 16:35:08 TIMER: Clans cache...
26.10 16:35:08 TIMER: Clans cache: 0ms
26.10 16:35:08 TIMER: Check tournament...
26.10 16:35:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:35' OR rounddate = '2016-26-10 16:35' AND status <> 'finished'
26.10 16:35:08 TIMER: Check tournament: 3ms
26.10 16:35:57 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:35:57 DB: SELECT * FROM tournament
26.10 16:35:57 STATS: cache [tournament], get [6 calls, 4 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 16:35:57 STATS: cache [tournament], segments [8 calls, 6 hits, 1 misses]
26.10 16:35:57 STATS: cache [tournament], database [229 calls, 1 reads, 2 writes]
26.10 16:35:57 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 16:35:57 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:35:57 DB: SELECT name FROM users WHERE id = 95
26.10 16:35:57 DB: SELECT name FROM users WHERE id = 94
26.10 16:35:57 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-26-10 16:37, startdate => 2016-26-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:35:57 TIME: vdl/cache.tournament.getAvailableTournament : 4.68 ms
26.10 16:36:07 BLOCKREMOVE: tournament 1 removed
26.10 16:36:08 TIMER: Clans cache...
26.10 16:36:08 TIMER: Clans cache: 0ms
26.10 16:36:08 TIMER: Check tournament...
26.10 16:36:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:36' OR rounddate = '2016-26-10 16:36' AND status <> 'finished'
26.10 16:36:08 TIMER: Check tournament: 0ms
26.10 16:37:05 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:37:05 DB: SELECT * FROM tournament
26.10 16:37:05 STATS: cache [tournament], get [7 calls, 4 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:37:05 STATS: cache [tournament], segments [9 calls, 6 hits, 2 misses]
26.10 16:37:05 STATS: cache [tournament], database [297 calls, 2 reads, 2 writes]
26.10 16:37:05 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 16:37:05 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:37:05 DB: SELECT name FROM users WHERE id = 95
26.10 16:37:05 DB: SELECT name FROM users WHERE id = 94
26.10 16:37:05 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-26-10 16:37, startdate => 2016-26-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:37:05 TIME: vdl/cache.tournament.getAvailableTournament : 3.97 ms
26.10 16:37:08 TIMER: Clans cache...
26.10 16:37:08 TIMER: Clans cache: 0ms
26.10 16:37:08 TIMER: Check tournament...
26.10 16:37:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:37' OR rounddate = '2016-26-10 16:37' AND status <> 'finished'
26.10 16:37:08 DB: SELECT nextval('Battle_id_seq') AS id
26.10 16:37:08 READDB: SELECT ID FROM Battle WHERE ID = 89
26.10 16:37:08 READDB: INSERT INTO Battle (ID) VALUES (89)
26.10 16:37:08 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 16:37:08 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
26.10 16:37:08 STATS: cache [battle], database [300 calls, 0 reads, 0 writes]
26.10 16:37:08 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 16:37:08 READDB: SELECT * FROM Battle WHERE ID = 89
26.10 16:37:08 DB: SELECT name FROM users WHERE id=94
26.10 16:37:08 DB: SELECT name FROM users WHERE id=95
26.10 16:37:08 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-26-10 16:37, id => 94, enemy.num => 2, battleId => 89, player => 1 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
26.10 16:37:08 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-26-10 16:37, id => 95, enemy.num => 1, battleId => 89, player => 2 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
26.10 16:37:08 TIMER: Check tournament: 49ms
26.10 16:37:10 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 16:37', roundinterval = E'60', params = E'{"params":{"usersList":[95,94],"battleActive":[89],"usersAll":[95,94]}}', rounddate = E'2016-26-10 16:37' WHERE ID = 1
26.10 16:37:13 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'false', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 89
26.10 16:37:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 89, _type => vdl/cache.battle.infoRoom }
26.10 16:37:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 16:37:16 TIME: vdl/cache.battle.infoRoom : 0.18 ms
26.10 16:37:20 BLOCKREMOVE: tournament 1 removed
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 89, _type => vdl/cache.battle.infoRoom }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 16:37:22 TIME: vdl/cache.battle.infoRoom : 0.11 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.tournament.getTournament { tournamentId => 1, _type => vdl/cache.tournament.getTournament }
26.10 16:37:22 DB: SELECT * FROM tournament WHERE id = 1
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getTournament { name => test, type => once, winner => -1, repeatinterval => 0, round => 1, params => {"params":{"usersList":[95,94],"battleActive":[89],"usersAll":[95,94]}}, id => 1, _type => vdl/cache.tournament.getTournament, status => active, rounddate => 2016-26-10 16:37, startdate => 2016-26-10 16:37, roundinterval => 60 }
26.10 16:37:22 TIME: vdl/cache.tournament.getTournament : 1.23 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 89, _type => vdl/cache.battle.infoRoom }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 16:37:22 TIME: vdl/cache.battle.infoRoom : 0.11 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
26.10 16:37:22 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [89]
26.10 16:37:22 TIME: vdl/cache.tournament.getBattlesTournaments : 1.19 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95,94] }
26.10 16:37:22 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.18 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 89, _type => vdl/cache.battle.finishRoom }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
26.10 16:37:22 TIME: vdl/cache.battle.finishRoom : 0.11 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [89] }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
26.10 16:37:22 TIME: vdl/cache.tournament.setBattlesTournaments : 0.15 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [95], _type => vdl/cache.tournament.setUsersTournament }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
26.10 16:37:22 TIME: vdl/cache.tournament.setUsersTournament : 0.19 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 95, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => finished }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 95, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
26.10 16:37:22 TIME: vdl/cache.tournament.setGrid : 0.19 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-26-10 16:37, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound, status => finished }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => ok, _type => vdl/cache.tournament.addRound }
26.10 16:37:22 TIME: vdl/cache.tournament.addRound : 0.18 ms
26.10 16:37:22 NET: vdl.0 (thread) request vdl/cache.tournament.finish { winner => 95, tournamentId => 1, _type => vdl/cache.tournament.finish }
26.10 16:37:22 QUEUE: vdl.0 (thread) response vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
26.10 16:37:22 TIME: vdl/cache.tournament.finish : 1.13 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 89, _type => vdl/cache.battle.infoRoom }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 16:37:23 TIME: vdl/cache.battle.infoRoom : 0.11 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.tournament.getTournament { tournamentId => 1, _type => vdl/cache.tournament.getTournament }
26.10 16:37:23 DB: SELECT * FROM tournament WHERE id = 1
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getTournament { name => test, type => once, winner => -1, repeatinterval => 0, round => 1, params => {"params":{"usersList":[95,94],"battleActive":[89],"usersAll":[95,94]}}, id => 1, _type => vdl/cache.tournament.getTournament, status => active, rounddate => 2016-26-10 16:37, startdate => 2016-26-10 16:37, roundinterval => 60 }
26.10 16:37:23 TIME: vdl/cache.tournament.getTournament : 1.51 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 89, _type => vdl/cache.battle.infoRoom }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 16:37:23 TIME: vdl/cache.battle.infoRoom : 0.28 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments []
26.10 16:37:23 TIME: vdl/cache.tournament.getBattlesTournaments : 0.33 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
26.10 16:37:23 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.39 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 89, _type => vdl/cache.battle.finishRoom }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
26.10 16:37:23 TIME: vdl/cache.battle.finishRoom : 0.33 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [89] }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
26.10 16:37:23 TIME: vdl/cache.tournament.setBattlesTournaments : 0.39 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [95], _type => vdl/cache.tournament.setUsersTournament }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
26.10 16:37:23 TIME: vdl/cache.tournament.setUsersTournament : 0.32 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 95, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => finished }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 95, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
26.10 16:37:23 TIME: vdl/cache.tournament.setGrid : 0.36 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-26-10 16:37, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound, status => finished }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => ok, _type => vdl/cache.tournament.addRound }
26.10 16:37:23 TIME: vdl/cache.tournament.addRound : 0.33 ms
26.10 16:37:23 NET: vdl.0 (thread) request vdl/cache.tournament.finish { winner => 95, tournamentId => 1, _type => vdl/cache.tournament.finish }
26.10 16:37:23 QUEUE: vdl.0 (thread) response vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
26.10 16:37:23 TIME: vdl/cache.tournament.finish : 0.87 ms
26.10 16:37:23 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'true', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 89
26.10 16:37:28 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'95', status = E'finished', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-26-10 16:37', roundinterval = E'60', params = E'{"params":{"battleFinished":[89,89],"usersList":[95],"battleActive":[],"usersAll":[95,94]}}', rounddate = E'2016-26-10 16:37' WHERE ID = 1
26.10 16:37:34 BLOCKREMOVE: battle 89 removed
26.10 16:37:38 BLOCKREMOVE: tournament 1 removed
26.10 16:38:08 TIMER: Clans cache...
26.10 16:38:08 TIMER: Clans cache: 0ms
26.10 16:38:08 TIMER: Check tournament...
26.10 16:38:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:38' OR rounddate = '2016-26-10 16:38' AND status <> 'finished'
26.10 16:38:08 TIMER: Check tournament: 1ms
26.10 16:38:08 TIMER: Clans cache...
26.10 16:38:08 TIMER: Clans cache: 0ms
26.10 16:38:08 TIMER: Check tournament...
26.10 16:38:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:39' OR rounddate = '2016-26-10 16:39' AND status <> 'finished'
26.10 16:38:08 TIMER: Check tournament: 4ms
26.10 16:38:08 TIMER: Clans cache...
26.10 16:38:08 TIMER: Clans cache: 0ms
26.10 16:38:08 TIMER: Check tournament...
26.10 16:38:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:40' OR rounddate = '2016-26-10 16:40' AND status <> 'finished'
26.10 16:38:08 TIMER: Check tournament: 0ms
26.10 16:38:08 TIMER: Clans cache...
26.10 16:38:08 TIMER: Clans cache: 0ms
26.10 16:38:08 TIMER: Check tournament...
26.10 16:38:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:41' OR rounddate = '2016-26-10 16:41' AND status <> 'finished'
26.10 16:38:08 TIMER: Check tournament: 1ms
26.10 16:41:47 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 16:41:47 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 16:41:47 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 16:41:47 TIME: core/server.query : 1.69 ms
26.10 16:41:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 16:41:47 STATS: cache [battle], get [9 calls, 7 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 16:41:47 STATS: cache [battle], segments [13 calls, 11 hits, 1 misses]
26.10 16:41:47 STATS: cache [battle], database [579 calls, 1 reads, 2 writes]
26.10 16:41:47 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 16:41:47 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 16:41:47 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 16:41:47 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 16:41:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 16:41:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 16:41:47 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:41:47 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
26.10 16:41:47 STATS: cache [user], database [579 calls, 2 reads, 2 writes]
26.10 16:41:47 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
26.10 16:41:47 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.11 ms]
26.10 16:41:47 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.15 ms]
26.10 16:41:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 16:41:47 TIME: core/cache.update : 0.56 ms
26.10 16:41:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 16:41:47 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:41:47 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
26.10 16:41:47 STATS: cache [questdata], database [579 calls, 2 reads, 0 writes]
26.10 16:41:47 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
26.10 16:41:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:41:47 TIME: core/cache.update : 0.44 ms
26.10 16:41:47 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 16:41:47 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:41:47 TIME: core/user.logoutPost : 0.15 ms
26.10 16:41:48 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:41:48 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 16:41:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 16:41:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 16:41:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
26.10 16:41:52 TIME: core/server.query : 1.49 ms
26.10 16:41:52 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 16:41:52 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 16:41:52 TIME: core/user.isOnlineID : 0.08 ms
26.10 16:41:52 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 16:41:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 2, id => 95 } }
26.10 16:41:52 TIME: core/cache.get : 0.37 ms
26.10 16:41:52 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 16:41:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 95 } }
26.10 16:41:52 TIME: core/cache.get : 0.2 ms
26.10 16:41:52 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 16:41:52 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:41:52 TIME: core/user.loginPost : 0.08 ms
26.10 16:41:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477489312 } }}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 16:41:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
26.10 16:41:58 TIME: core/cache.update : 0.15 ms
26.10 16:41:59 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477489312,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:42:08 TIMER: Clans cache...
26.10 16:42:08 TIMER: Clans cache: 0ms
26.10 16:42:08 TIMER: Check tournament...
26.10 16:42:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:42' OR rounddate = '2016-26-10 16:42' AND status <> 'finished'
26.10 16:42:08 TIMER: Check tournament: 1ms
26.10 16:42:08 TIMER: Clans cache...
26.10 16:42:08 TIMER: Clans cache: 0ms
26.10 16:42:08 TIMER: Check tournament...
26.10 16:42:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:43' OR rounddate = '2016-26-10 16:43' AND status <> 'finished'
26.10 16:42:08 TIMER: Check tournament: 1ms
26.10 16:42:08 TIMER: Clans cache...
26.10 16:42:08 TIMER: Clans cache: 0ms
26.10 16:42:08 TIMER: Check tournament...
26.10 16:42:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:44' OR rounddate = '2016-26-10 16:44' AND status <> 'finished'
26.10 16:42:08 TIMER: Check tournament: 0ms
26.10 16:44:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 16:44:27 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 16:44:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 16:44:27 TIME: core/server.query : 1.65 ms
26.10 16:44:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 16:44:27 STATS: cache [battle], get [10 calls, 7 cache hits, 2 cache misses, 0 same version, 1 not found]
26.10 16:44:27 STATS: cache [battle], segments [14 calls, 11 hits, 2 misses]
26.10 16:44:27 STATS: cache [battle], database [739 calls, 2 reads, 2 writes]
26.10 16:44:27 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 16:44:27 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 16:44:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 16:44:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 16:44:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 16:44:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 16:44:27 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:44:27 STATS: cache [user], segments [12 calls, 7 hits, 4 misses]
26.10 16:44:27 STATS: cache [user], database [739 calls, 2 reads, 4 writes]
26.10 16:44:27 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
26.10 16:44:27 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1.42 ms]
26.10 16:44:27 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.2 ms]
26.10 16:44:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
26.10 16:44:27 TIME: core/cache.update : 0.56 ms
26.10 16:44:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 16:44:27 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:44:27 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
26.10 16:44:27 STATS: cache [questdata], database [739 calls, 2 reads, 1 writes]
26.10 16:44:27 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
26.10 16:44:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 16:44:27 TIME: core/cache.update : 0.4 ms
26.10 16:44:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 16:44:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:44:27 TIME: core/user.logoutPost : 0.13 ms
26.10 16:44:28 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477489312,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:44:28 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 16:44:38 BLOCKREMOVE: user 95 removed
26.10 16:44:38 BLOCKREMOVE: questdata 95 removed
26.10 16:45:08 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
26.10 16:45:08 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
26.10 16:45:08 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 89 }}, errorCode => ok, _type => core/server.query }
26.10 16:45:08 TIME: core/server.query : 1.78 ms
26.10 16:45:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 89, _type => vdl/cache.battle.infoRoom }
26.10 16:45:08 READDB: SELECT * FROM Battle WHERE ID = 89
26.10 16:45:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 16:45:08 TIME: vdl/cache.battle.infoRoom : 1.03 ms
26.10 16:45:08 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 89, _type => vdl/cache.battle.deleteRoom }
26.10 16:45:08 ROOM: deleted room 89
26.10 16:45:08 DB: DELETE FROM Battle WHERE ID = 89
26.10 16:45:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
26.10 16:45:08 TIME: vdl/cache.battle.deleteRoom : 59.84 ms
26.10 16:45:08 NET: vdl.0 (thread) request core/user.sendTo { id => 95, _type => core/user.sendTo, msg => { _type => battle.end } }
26.10 16:45:08 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
26.10 16:45:08 TIME: core/user.sendTo : 0.12 ms
26.10 16:45:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
26.10 16:45:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 16:45:08 TIME: core/cache.update : 0.17 ms
26.10 16:45:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
26.10 16:45:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:45:08 TIME: core/cache.update : 0.15 ms
26.10 16:45:08 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
26.10 16:45:08 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:45:08 TIME: core/user.logoutPost : 0.11 ms
26.10 16:45:08 TIMER: Clans cache...
26.10 16:45:08 TIMER: Clans cache: 0ms
26.10 16:45:08 TIMER: Check tournament...
26.10 16:45:08 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:45' OR rounddate = '2016-26-10 16:45' AND status <> 'finished'
26.10 16:45:08 TIMER: Check tournament: 0ms
26.10 16:45:09 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477488836,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 16:45:09 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
26.10 16:45:19 BLOCKREMOVE: user 94 removed
26.10 16:45:19 BLOCKREMOVE: questdata 94 removed
26.10 16:45:19 BLOCKREMOVE: battle 89 removed
26.10 16:46:09 TIMER: Clans cache...
26.10 16:46:09 TIMER: Clans cache: 0ms
26.10 16:46:09 TIMER: Check tournament...
26.10 16:46:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:46' OR rounddate = '2016-26-10 16:46' AND status <> 'finished'
26.10 16:46:09 TIMER: Check tournament: 0ms
26.10 16:46:09 TIMER: Clans cache...
26.10 16:46:09 TIMER: Clans cache: 0ms
26.10 16:46:09 TIMER: Check tournament...
26.10 16:46:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:47' OR rounddate = '2016-26-10 16:47' AND status <> 'finished'
26.10 16:46:09 TIMER: Check tournament: 0ms
26.10 16:46:09 TIMER: Clans cache...
26.10 16:46:09 TIMER: Clans cache: 0ms
26.10 16:46:09 TIMER: Check tournament...
26.10 16:46:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:48' OR rounddate = '2016-26-10 16:48' AND status <> 'finished'
26.10 16:46:09 TIMER: Check tournament: 0ms
26.10 16:48:29 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
26.10 16:48:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
26.10 16:48:29 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
26.10 16:48:29 TIME: core/server.query : 1.56 ms
26.10 16:48:29 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
26.10 16:48:29 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 16:48:29 TIME: core/user.isOnlineID : 0.12 ms
26.10 16:48:29 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
26.10 16:48:29 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:48:29 STATS: cache [user], segments [16 calls, 11 hits, 4 misses]
26.10 16:48:29 STATS: cache [user], database [981 calls, 2 reads, 6 writes]
26.10 16:48:29 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
26.10 16:48:29 READDB: SELECT * FROM Users WHERE ID = 94
26.10 16:48:29 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.46 ms]
26.10 16:48:29 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.17 ms]
26.10 16:48:29 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477488836, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 94 } }
26.10 16:48:29 TIME: core/cache.get : 2.21 ms
26.10 16:48:29 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
26.10 16:48:29 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 16:48:29 STATS: cache [questdata], segments [13 calls, 8 hits, 4 misses]
26.10 16:48:29 STATS: cache [questdata], database [981 calls, 2 reads, 3 writes]
26.10 16:48:29 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
26.10 16:48:29 READDB: SELECT * FROM UserQuests WHERE ID = 94
26.10 16:48:29 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
26.10 16:48:29 TIME: core/cache.get : 1.42 ms
26.10 16:48:29 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
26.10 16:48:29 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:48:29 TIME: core/user.loginPost : 0.14 ms
26.10 16:48:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
26.10 16:48:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:48:39 TIME: core/cache.update : 0.16 ms
26.10 16:48:39 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477488836,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 16:48:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 16:48:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 16:48:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
26.10 16:48:51 TIME: core/server.query : 1.3 ms
26.10 16:48:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 16:48:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 16:48:51 TIME: core/user.isOnlineID : 0.12 ms
26.10 16:48:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 16:48:51 READDB: SELECT * FROM Users WHERE ID = 95
26.10 16:48:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477489312, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 95 } }
26.10 16:48:51 TIME: core/cache.get : 2.71 ms
26.10 16:48:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 16:48:51 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 16:48:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
26.10 16:48:51 TIME: core/cache.get : 1.22 ms
26.10 16:48:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 16:48:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 16:48:51 TIME: core/user.loginPost : 0.13 ms
26.10 16:48:54 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:48:54 DB: SELECT * FROM tournament
26.10 16:48:54 STATS: cache [tournament], get [21 calls, 16 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 16:48:54 STATS: cache [tournament], segments [34 calls, 29 hits, 4 misses]
26.10 16:48:54 STATS: cache [tournament], database [1006 calls, 4 reads, 4 writes]
26.10 16:48:54 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 16:48:54 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:48:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-27-10 16:37, startdate => 2016-27-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:48:54 TIME: vdl/cache.tournament.getAvailableTournament : 2.13 ms
26.10 16:48:58 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.10 16:48:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.10 16:48:58 TIME: vdl/cache.tournament.addUsers : 0.23 ms
26.10 16:48:58 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:48:58 DB: SELECT * FROM tournament
26.10 16:48:58 DB: SELECT name FROM users WHERE id = 94
26.10 16:48:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-27-10 16:37, startdate => 2016-27-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:48:58 TIME: vdl/cache.tournament.getAvailableTournament : 2.07 ms
26.10 16:48:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 16:48:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:48:59 TIME: core/cache.update : 0.14 ms
26.10 16:48:59 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477489312,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:49:00 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-27-10 16:37', roundinterval = E'60', params = E'{"params":{"usersList":[94],"usersAll":[94]}}', rounddate = E'2016-27-10 16:37' WHERE ID = 1
26.10 16:49:09 TIMER: Clans cache...
26.10 16:49:09 TIMER: Clans cache: 0ms
26.10 16:49:09 TIMER: Check tournament...
26.10 16:49:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:49' OR rounddate = '2016-26-10 16:49' AND status <> 'finished'
26.10 16:49:09 TIMER: Check tournament: 1ms
26.10 16:49:10 BLOCKREMOVE: tournament 1 removed
26.10 16:49:57 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:49:57 DB: SELECT * FROM tournament
26.10 16:49:57 STATS: cache [tournament], get [24 calls, 18 cache hits, 5 cache misses, 0 same version, 0 not found]
26.10 16:49:57 STATS: cache [tournament], segments [38 calls, 32 hits, 5 misses]
26.10 16:49:57 STATS: cache [tournament], database [1069 calls, 5 reads, 5 writes]
26.10 16:49:57 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 16:49:57 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 16:49:57 DB: SELECT name FROM users WHERE id = 94
26.10 16:49:57 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-27-10 16:37, startdate => 2016-27-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:49:57 TIME: vdl/cache.tournament.getAvailableTournament : 4.39 ms
26.10 16:50:03 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 16:50:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [94] }
26.10 16:50:03 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.22 ms
26.10 16:50:03 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [], _type => vdl/cache.tournament.setUsersTournament }
26.10 16:50:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
26.10 16:50:03 TIME: vdl/cache.tournament.setUsersTournament : 0.18 ms
26.10 16:50:03 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:50:03 DB: SELECT * FROM tournament
26.10 16:50:03 DB: SELECT name FROM users WHERE id = 94
26.10 16:50:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-27-10 16:37, startdate => 2016-27-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:50:03 TIME: vdl/cache.tournament.getAvailableTournament : 2.42 ms
26.10 16:50:03 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-27-10 16:37', roundinterval = E'60', params = E'{"params":{"usersList":[],"usersAll":[94]}}', rounddate = E'2016-27-10 16:37' WHERE ID = 1
26.10 16:50:04 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 16:50:04 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [] }
26.10 16:50:04 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.21 ms
26.10 16:50:04 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [], _type => vdl/cache.tournament.setUsersTournament }
26.10 16:50:04 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
26.10 16:50:04 TIME: vdl/cache.tournament.setUsersTournament : 0.18 ms
26.10 16:50:05 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:50:05 DB: SELECT * FROM tournament
26.10 16:50:05 DB: SELECT name FROM users WHERE id = 94
26.10 16:50:05 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-27-10 16:37, startdate => 2016-27-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:50:05 TIME: vdl/cache.tournament.getAvailableTournament : 2.39 ms
26.10 16:50:05 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 16:50:05 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [] }
26.10 16:50:05 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.2 ms
26.10 16:50:05 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [], _type => vdl/cache.tournament.setUsersTournament }
26.10 16:50:05 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
26.10 16:50:05 TIME: vdl/cache.tournament.setUsersTournament : 0.19 ms
26.10 16:50:05 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:50:05 DB: SELECT * FROM tournament
26.10 16:50:05 DB: SELECT name FROM users WHERE id = 94
26.10 16:50:05 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-27-10 16:37, startdate => 2016-27-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:50:05 TIME: vdl/cache.tournament.getAvailableTournament : 1.95 ms
26.10 16:50:06 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
26.10 16:50:06 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
26.10 16:50:06 TIME: vdl/cache.tournament.getStatus : 0.18 ms
26.10 16:50:06 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 16:50:06 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [] }
26.10 16:50:06 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.19 ms
26.10 16:50:06 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
26.10 16:50:06 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
26.10 16:50:06 TIME: vdl/cache.tournament.setGrid : 0.17 ms
26.10 16:50:08 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
26.10 16:50:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
26.10 16:50:08 TIME: vdl/cache.tournament.getStatus : 0.18 ms
26.10 16:50:08 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 16:50:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [] }
26.10 16:50:08 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.18 ms
26.10 16:50:08 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
26.10 16:50:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
26.10 16:50:08 TIME: vdl/cache.tournament.setGrid : 0.16 ms
26.10 16:50:08 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-27-10 16:37', roundinterval = E'60', params = E'{"params":{"usersList":[],"usersAll":[94]}}', rounddate = E'2016-27-10 16:37' WHERE ID = 1
26.10 16:50:09 TIMER: Clans cache...
26.10 16:50:09 TIMER: Clans cache: 0ms
26.10 16:50:09 TIMER: Check tournament...
26.10 16:50:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:50' OR rounddate = '2016-26-10 16:50' AND status <> 'finished'
26.10 16:50:09 TIMER: Check tournament: 0ms
26.10 16:50:12 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:50:12 DB: SELECT * FROM tournament
26.10 16:50:12 DB: SELECT name FROM users WHERE id = 94
26.10 16:50:12 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid94, id => 94 }], battleActive => null, rounddate => 2016-27-10 16:37, startdate => 2016-27-10 16:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 16:50:12 TIME: vdl/cache.tournament.getAvailableTournament : 1.91 ms
26.10 16:50:22 BLOCKREMOVE: tournament 1 removed
26.10 16:51:09 TIMER: Clans cache...
26.10 16:51:09 TIMER: Clans cache: 0ms
26.10 16:51:09 TIMER: Check tournament...
26.10 16:51:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:51' OR rounddate = '2016-26-10 16:51' AND status <> 'finished'
26.10 16:51:09 TIMER: Check tournament: 0ms
26.10 16:51:09 TIMER: Clans cache...
26.10 16:51:09 TIMER: Clans cache: 0ms
26.10 16:51:09 TIMER: Check tournament...
26.10 16:51:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:52' OR rounddate = '2016-26-10 16:52' AND status <> 'finished'
26.10 16:51:09 TIMER: Check tournament: 1ms
26.10 16:51:09 TIMER: Clans cache...
26.10 16:51:09 TIMER: Clans cache: 0ms
26.10 16:51:09 TIMER: Check tournament...
26.10 16:51:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:53' OR rounddate = '2016-26-10 16:53' AND status <> 'finished'
26.10 16:51:09 TIMER: Check tournament: 0ms
26.10 16:51:09 TIMER: Clans cache...
26.10 16:51:09 TIMER: Clans cache: 0ms
26.10 16:51:09 TIMER: Check tournament...
26.10 16:51:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:54' OR rounddate = '2016-26-10 16:54' AND status <> 'finished'
26.10 16:51:09 TIMER: Check tournament: 1ms
26.10 16:51:09 TIMER: Clans cache...
26.10 16:51:09 TIMER: Clans cache: 0ms
26.10 16:51:09 TIMER: Check tournament...
26.10 16:51:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:55' OR rounddate = '2016-26-10 16:55' AND status <> 'finished'
26.10 16:51:09 TIMER: Check tournament: 1ms
26.10 16:51:09 TIMER: Clans cache...
26.10 16:51:09 TIMER: Clans cache: 0ms
26.10 16:51:09 TIMER: Check tournament...
26.10 16:51:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:56' OR rounddate = '2016-26-10 16:56' AND status <> 'finished'
26.10 16:51:09 TIMER: Check tournament: 1ms
26.10 16:51:09 TIMER: Clans cache...
26.10 16:51:09 TIMER: Clans cache: 0ms
26.10 16:51:09 TIMER: Check tournament...
26.10 16:51:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:57' OR rounddate = '2016-26-10 16:57' AND status <> 'finished'
26.10 16:51:09 TIMER: Check tournament: 1ms
26.10 16:51:09 TIMER: Clans cache...
26.10 16:51:09 TIMER: Clans cache: 0ms
26.10 16:51:09 TIMER: Check tournament...
26.10 16:51:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:58' OR rounddate = '2016-26-10 16:58' AND status <> 'finished'
26.10 16:51:09 TIMER: Check tournament: 1ms
26.10 16:59:01 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
26.10 16:59:01 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
26.10 16:59:01 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 16:59:01 TIME: core/server.query : 0.99 ms
26.10 16:59:01 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 16:59:01 STATS: cache [battle], get [12 calls, 7 cache hits, 4 cache misses, 0 same version, 2 not found]
26.10 16:59:01 STATS: cache [battle], segments [17 calls, 12 hits, 4 misses]
26.10 16:59:01 STATS: cache [battle], database [1612 calls, 4 reads, 2 writes]
26.10 16:59:01 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 16:59:01 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 16:59:01 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 16:59:01 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 16:59:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 16:59:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
26.10 16:59:01 STATS: cache [user], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 16:59:01 STATS: cache [user], segments [22 calls, 13 hits, 8 misses]
26.10 16:59:01 STATS: cache [user], database [1612 calls, 4 reads, 8 writes]
26.10 16:59:01 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
26.10 16:59:01 STATS: cache manager [1], get [10 calls, total 0.01 sec spent, avg 1.49 ms]
26.10 16:59:01 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.16 ms]
26.10 16:59:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 16:59:01 TIME: core/cache.update : 0.56 ms
26.10 16:59:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
26.10 16:59:01 STATS: cache [questdata], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
26.10 16:59:01 STATS: cache [questdata], segments [17 calls, 8 hits, 8 misses]
26.10 16:59:01 STATS: cache [questdata], database [1612 calls, 4 reads, 3 writes]
26.10 16:59:01 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
26.10 16:59:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:59:01 TIME: core/cache.update : 0.4 ms
26.10 16:59:01 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
26.10 16:59:01 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:59:01 TIME: core/user.logoutPost : 9.41 ms
26.10 16:59:01 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477488836,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 16:59:01 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
26.10 16:59:08 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 16:59:08 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 16:59:08 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 16:59:08 TIME: core/server.query : 1.07 ms
26.10 16:59:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
26.10 16:59:08 READDB: SELECT * FROM Battle WHERE ID = 0
26.10 16:59:08 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
26.10 16:59:08 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
26.10 16:59:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
26.10 16:59:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 16:59:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 16:59:08 TIME: core/cache.update : 0.17 ms
26.10 16:59:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 16:59:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 16:59:08 TIME: core/cache.update : 0.15 ms
26.10 16:59:08 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 16:59:08 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 16:59:08 TIME: core/user.logoutPost : 0.12 ms
26.10 16:59:09 TIMER: Clans cache...
26.10 16:59:09 TIMER: Clans cache: 0ms
26.10 16:59:09 TIMER: Check tournament...
26.10 16:59:09 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 16:59' OR rounddate = '2016-26-10 16:59' AND status <> 'finished'
26.10 16:59:09 TIMER: Check tournament: 0ms
26.10 16:59:09 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477489312,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 16:59:09 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 16:59:11 BLOCKREMOVE: user 94 removed
26.10 16:59:11 BLOCKREMOVE: questdata 94 removed
26.10 16:59:19 BLOCKREMOVE: user 95 removed
26.10 16:59:19 BLOCKREMOVE: questdata 95 removed
