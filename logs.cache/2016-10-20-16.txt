20.10 16:09:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
20.10 16:09:31 DB: SELECT * FROM users
20.10 16:09:31 QUEUE: vdl.0 (thread) response core/server.query
20.10 16:09:31 TIME: core/server.query : 6.49 ms
20.10 16:09:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid87', _type => core/server.query }
20.10 16:09:31 DB: SELECT ID FROM Users WHERE Name = E'uid87'
20.10 16:09:31 QUEUE: vdl.0 (thread) response core/server.query
20.10 16:09:31 TIME: core/server.query : 3.2 ms
20.10 16:09:31 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
20.10 16:09:31 DB: SELECT nextval('Users_id_seq') AS id
20.10 16:09:31 QUEUE: vdl.0 (thread) response core/server.query
20.10 16:09:31 TIME: core/server.query : 22.2 ms
20.10 16:09:31 NET: vdl.0 (thread) request core/user.register { password => uid87, name => uid87, fullParams => { password => uid87, name => uid87, networkid => , networktype => , messageType => user.register, id => 87 }, networkid => , connectionID => 82293885, networktype => , email => , id => 87, _type => core/user.register }
20.10 16:09:31 QUEUE: vdl.0 (thread) response core/user.register
20.10 16:09:31 TIME: core/user.register : 0.16 ms
20.10 16:09:31 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (87,E'uid87',E'',E'',E'uid87',E'', now())
20.10 16:09:31 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (87, 0)
20.10 16:09:31 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
20.10 16:09:31 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
20.10 16:09:31 STATS: cache [user], database [2389 calls, 0 reads, 0 writes]
20.10 16:09:31 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
20.10 16:09:31 READDB: SELECT * FROM Users WHERE ID = 87
20.10 16:09:31 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.82 ms]
20.10 16:09:31 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
20.10 16:09:31 READDB: SELECT * FROM Users WHERE ID = 1
20.10 16:09:31 READDB: SELECT ID FROM UserQuests WHERE ID = 87
20.10 16:09:31 READDB: INSERT INTO UserQuests (ID) VALUES (87)
20.10 16:09:31 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid87, name => uid87, _isNotify => true, fullParams => { password => uid87, name => uid87, networkid => , networktype => , messageType => user.register, id => 87 }, networkid => , connectionID => 82293885, networktype => , email => , id => 87, _type => core/user.registerResponse }
20.10 16:09:32 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid87' AND Password = E'uid87', _type => core/server.query }
20.10 16:09:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid87' AND Password = E'uid87'
20.10 16:09:32 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid87, networkid => , isbanned => false, id => 87 }}, errorCode => ok, _type => core/server.query }
20.10 16:09:32 TIME: core/server.query : 3.81 ms
20.10 16:09:32 NET: vdl.0 (thread) request core/user.isOnlineID { id => 87, _type => core/user.isOnlineID }
20.10 16:09:32 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:09:32 TIME: core/user.isOnlineID : 0.18 ms
20.10 16:09:32 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 87, _type => core/cache.get }
20.10 16:09:32 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid87, deleted => false, email => , networktype =>   , password => uid87, isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 87 } }
20.10 16:09:32 TIME: core/cache.get : 0.53 ms
20.10 16:09:32 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 87, _type => core/cache.get }
20.10 16:09:32 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
20.10 16:09:32 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
20.10 16:09:32 STATS: cache [questdata], database [2390 calls, 0 reads, 0 writes]
20.10 16:09:32 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
20.10 16:09:32 READDB: SELECT * FROM UserQuests WHERE ID = 87
20.10 16:09:32 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 87 } }
20.10 16:09:32 TIME: core/cache.get : 1.91 ms
20.10 16:09:32 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 87, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:09:32 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
20.10 16:09:32 TIME: core/user.loginPost : 0.17 ms
20.10 16:09:32 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 87 AND Date = 'today'::timestamp, _type => core/server.query }
20.10 16:09:32 DB: SELECT ID FROM TempUserLogins WHERE UserID = 87 AND Date = 'today'::timestamp
20.10 16:09:32 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:09:32 TIME: core/server.query : 3.67 ms
20.10 16:09:32 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (87, 'today'::timestamp)
20.10 16:09:36 WRITEDB: UPDATE Users SET name = E'uid87', deleted = E'false', email = E'', networktype = E'  ', password = E'uid87', isbanned = E'false', regdate = E'2016-10-20 16:09:31.194602+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 87
20.10 16:09:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476968972, lastLoginDate => 294, lastLoadDate => 1021 } }}, type => user, unlock => false, id => 87, _type => core/cache.update }
20.10 16:09:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:09:37 TIME: core/cache.update : 0.6 ms
20.10 16:09:41 BLOCKREMOVE: user 1 removed
20.10 16:09:41 WRITEDB: UPDATE Users SET name = E'uid87', deleted = E'false', email = E'', networktype = E'  ', password = E'uid87', isbanned = E'false', regdate = E'2016-10-20 16:09:31.194602+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 87
20.10 16:09:42 TIMER: Clans cache...
20.10 16:09:42 TIMER: Clans cache: 0ms
20.10 16:09:42 TIMER: Check tournament...
20.10 16:09:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:09' OR rounddate = '2016-20-10 16:09'
20.10 16:09:42 TIMER: Check tournament: 1ms
20.10 16:09:42 TIMER: Clans cache...
20.10 16:09:42 TIMER: Clans cache: 0ms
20.10 16:09:42 TIMER: Check tournament...
20.10 16:09:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:10' OR rounddate = '2016-20-10 16:10'
20.10 16:09:42 TIMER: Check tournament: 1ms
20.10 16:09:42 TIMER: Clans cache...
20.10 16:09:42 TIMER: Clans cache: 0ms
20.10 16:09:42 TIMER: Check tournament...
20.10 16:09:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:11' OR rounddate = '2016-20-10 16:11'
20.10 16:09:42 TIMER: Check tournament: 1ms
20.10 16:09:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=87 OR secondid=87 AND finished <> true, _type => core/server.query }
20.10 16:09:42 DB: SELECT id FROM battle WHERE firstid=87 OR secondid=87 AND finished <> true
20.10 16:09:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:09:42 TIME: core/server.query : 2.05 ms
20.10 16:09:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:09:42 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
20.10 16:09:42 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
20.10 16:09:42 STATS: cache [battle], database [2580 calls, 0 reads, 0 writes]
20.10 16:09:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.10 16:09:42 READDB: SELECT * FROM Battle WHERE ID = 0
20.10 16:09:42 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
20.10 16:09:42 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
20.10 16:09:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:09:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 87, _type => core/cache.update }
20.10 16:09:42 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
20.10 16:09:42 STATS: cache [user], segments [9 calls, 5 hits, 3 misses]
20.10 16:09:42 STATS: cache [user], database [2580 calls, 2 reads, 2 writes]
20.10 16:09:42 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
20.10 16:09:42 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.19 ms]
20.10 16:09:42 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.29 ms]
20.10 16:09:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.10 16:09:42 TIME: core/cache.update : 0.85 ms
20.10 16:09:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 87, _type => core/cache.update }
20.10 16:09:42 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
20.10 16:09:42 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
20.10 16:09:42 STATS: cache [questdata], database [2580 calls, 1 reads, 0 writes]
20.10 16:09:42 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
20.10 16:09:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:09:42 TIME: core/cache.update : 0.88 ms
20.10 16:09:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 87, _type => core/user.logoutPost }
20.10 16:09:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:09:42 TIME: core/user.logoutPost : 0.3 ms
20.10 16:09:42 WRITEDB: UPDATE Users SET name = E'uid87', deleted = E'false', email = E'', networktype = E'  ', password = E'uid87', isbanned = E'false', regdate = E'2016-10-20 16:09:31.194602+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 87
20.10 16:09:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 87
20.10 16:09:42 TIMER: Clans cache...
20.10 16:09:42 TIMER: Clans cache: 0ms
20.10 16:09:42 TIMER: Check tournament...
20.10 16:09:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:12' OR rounddate = '2016-20-10 16:12'
20.10 16:09:42 TIMER: Check tournament: 1ms
20.10 16:12:52 BLOCKREMOVE: user 87 removed
20.10 16:12:52 BLOCKREMOVE: questdata 87 removed
20.10 16:13:42 TIMER: Clans cache...
20.10 16:13:42 TIMER: Clans cache: 0ms
20.10 16:13:42 TIMER: Check tournament...
20.10 16:13:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:13' OR rounddate = '2016-20-10 16:13'
20.10 16:13:42 TIMER: Check tournament: 1ms
20.10 16:13:42 TIMER: Clans cache...
20.10 16:13:42 TIMER: Clans cache: 0ms
20.10 16:13:42 TIMER: Check tournament...
20.10 16:13:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:14' OR rounddate = '2016-20-10 16:14'
20.10 16:13:42 TIMER: Check tournament: 1ms
20.10 16:13:42 TIMER: Clans cache...
20.10 16:13:42 TIMER: Clans cache: 0ms
20.10 16:13:42 TIMER: Check tournament...
20.10 16:13:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:15' OR rounddate = '2016-20-10 16:15'
20.10 16:13:42 TIMER: Check tournament: 2ms
20.10 16:16:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid87' AND Password = E'uid87', _type => core/server.query }
20.10 16:16:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid87' AND Password = E'uid87'
20.10 16:16:01 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid87, networkid => , isbanned => false, id => 87 }}, errorCode => ok, _type => core/server.query }
20.10 16:16:01 TIME: core/server.query : 1.88 ms
20.10 16:16:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 87, _type => core/user.isOnlineID }
20.10 16:16:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:16:01 TIME: core/user.isOnlineID : 0.16 ms
20.10 16:16:01 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 87, _type => core/cache.get }
20.10 16:16:01 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
20.10 16:16:01 STATS: cache [user], segments [11 calls, 7 hits, 3 misses]
20.10 16:16:01 STATS: cache [user], database [2779 calls, 2 reads, 3 writes]
20.10 16:16:01 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
20.10 16:16:01 READDB: SELECT * FROM Users WHERE ID = 87
20.10 16:16:01 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.23 ms]
20.10 16:16:01 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.33 ms]
20.10 16:16:01 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid87, deleted => false, email => , networktype =>   , password => uid87, isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476968972, lastLoginDate => 294, lastLoadDate => 1021 }, effects => { list => [] } }}, version => 0, id => 87 } }
20.10 16:16:01 TIME: core/cache.get : 3 ms
20.10 16:16:01 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 87, _type => core/cache.get }
20.10 16:16:01 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
20.10 16:16:01 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
20.10 16:16:01 STATS: cache [questdata], database [2779 calls, 1 reads, 1 writes]
20.10 16:16:01 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
20.10 16:16:01 READDB: SELECT * FROM UserQuests WHERE ID = 87
20.10 16:16:01 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 87 } }
20.10 16:16:01 TIME: core/cache.get : 1.61 ms
20.10 16:16:01 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 87, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:16:01 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
20.10 16:16:01 TIME: core/user.loginPost : 0.12 ms
20.10 16:16:07 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 87, _type => core/cache.update }
20.10 16:16:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:16:07 TIME: core/cache.update : 0.25 ms
20.10 16:16:08 WRITEDB: UPDATE Users SET name = E'uid87', deleted = E'false', email = E'', networktype = E'  ', password = E'uid87', isbanned = E'false', regdate = E'2016-10-20 16:09:31.194602+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 87
20.10 16:16:42 TIMER: Clans cache...
20.10 16:16:42 TIMER: Clans cache: 0ms
20.10 16:16:42 TIMER: Check tournament...
20.10 16:16:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:16' OR rounddate = '2016-20-10 16:16'
20.10 16:16:42 TIMER: Check tournament: 1ms
20.10 16:17:15 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=87 OR secondid=87 AND finished <> true, _type => core/server.query }
20.10 16:17:15 DB: SELECT id FROM battle WHERE firstid=87 OR secondid=87 AND finished <> true
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:17:15 TIME: core/server.query : 2.45 ms
20.10 16:17:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:17:15 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
20.10 16:17:15 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
20.10 16:17:15 STATS: cache [battle], database [2853 calls, 1 reads, 0 writes]
20.10 16:17:15 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.10 16:17:15 READDB: SELECT * FROM Battle WHERE ID = 0
20.10 16:17:15 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
20.10 16:17:15 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
20.10 16:17:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:17:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 87, _type => core/cache.update }
20.10 16:17:15 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
20.10 16:17:15 STATS: cache [user], segments [14 calls, 8 hits, 5 misses]
20.10 16:17:15 STATS: cache [user], database [2853 calls, 3 reads, 4 writes]
20.10 16:17:15 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
20.10 16:17:15 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2.06 ms]
20.10 16:17:15 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.3 ms]
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:17:15 TIME: core/cache.update : 0.77 ms
20.10 16:17:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 87, _type => core/cache.update }
20.10 16:17:15 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
20.10 16:17:15 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
20.10 16:17:15 STATS: cache [questdata], database [2853 calls, 2 reads, 1 writes]
20.10 16:17:15 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:17:15 TIME: core/cache.update : 0.59 ms
20.10 16:17:15 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 87, _type => core/user.logoutPost }
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:17:15 TIME: core/user.logoutPost : 0.3 ms
20.10 16:17:15 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.10 16:17:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.10 16:17:15 TIME: core/server.query : 2.29 ms
20.10 16:17:15 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:17:15 TIME: core/user.isOnlineID : 0.16 ms
20.10 16:17:15 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.10 16:17:15 READDB: SELECT * FROM Users WHERE ID = 76
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476889621, lastLoginDate => 294, lastLoadDate => 1021 }, effects => { list => [] } }}, version => 0, id => 76 } }
20.10 16:17:15 TIME: core/cache.get : 1.95 ms
20.10 16:17:15 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.10 16:17:15 READDB: SELECT * FROM UserQuests WHERE ID = 76
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
20.10 16:17:15 TIME: core/cache.get : 1 ms
20.10 16:17:15 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:17:15 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
20.10 16:17:15 TIME: core/user.loginPost : 2.23 ms
20.10 16:17:15 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
20.10 16:17:15 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:17:15 TIME: vdl/cache.user.getData : 1.02 ms
20.10 16:17:15 WRITEDB: UPDATE Users SET name = E'uid87', deleted = E'false', email = E'', networktype = E'  ', password = E'uid87', isbanned = E'false', regdate = E'2016-10-20 16:09:31.194602+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 87
20.10 16:17:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 87
20.10 16:17:22 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.10 16:17:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:17:22 TIME: core/cache.update : 0.26 ms
20.10 16:17:22 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889621,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 76
20.10 16:17:25 BLOCKREMOVE: user 87 removed
20.10 16:17:25 BLOCKREMOVE: questdata 87 removed
20.10 16:17:42 TIMER: Clans cache...
20.10 16:17:42 TIMER: Clans cache: 0ms
20.10 16:17:42 TIMER: Check tournament...
20.10 16:17:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:17' OR rounddate = '2016-20-10 16:17'
20.10 16:17:42 TIMER: Check tournament: 1ms
20.10 16:17:42 TIMER: Clans cache...
20.10 16:17:42 TIMER: Clans cache: 0ms
20.10 16:17:42 TIMER: Check tournament...
20.10 16:17:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:18' OR rounddate = '2016-20-10 16:18'
20.10 16:17:42 TIMER: Check tournament: 1ms
20.10 16:17:42 TIMER: Clans cache...
20.10 16:17:42 TIMER: Clans cache: 0ms
20.10 16:17:42 TIMER: Check tournament...
20.10 16:17:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:19' OR rounddate = '2016-20-10 16:19'
20.10 16:17:42 TIMER: Check tournament: 1ms
20.10 16:17:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.10 16:17:42 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.10 16:17:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:17:42 TIME: core/server.query : 1.21 ms
20.10 16:17:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:17:42 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
20.10 16:17:42 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
20.10 16:17:42 STATS: cache [battle], database [3060 calls, 2 reads, 0 writes]
20.10 16:17:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.10 16:17:42 READDB: SELECT * FROM Battle WHERE ID = 0
20.10 16:17:42 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
20.10 16:17:42 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
20.10 16:17:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:17:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.10 16:17:42 STATS: cache [user], get [6 calls, 2 cache hits, 4 cache misses, 0 same version, 0 not found]
20.10 16:17:42 STATS: cache [user], segments [20 calls, 11 hits, 7 misses]
20.10 16:17:42 STATS: cache [user], database [3060 calls, 4 reads, 6 writes]
20.10 16:17:42 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
20.10 16:17:42 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.82 ms]
20.10 16:17:42 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.3 ms]
20.10 16:17:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:17:42 TIME: core/cache.update : 0.76 ms
20.10 16:17:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.10 16:17:42 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
20.10 16:17:42 STATS: cache [questdata], segments [11 calls, 4 hits, 6 misses]
20.10 16:17:42 STATS: cache [questdata], database [3060 calls, 3 reads, 2 writes]
20.10 16:17:42 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
20.10 16:17:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:17:42 TIME: core/cache.update : 0.85 ms
20.10 16:17:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.10 16:17:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:17:42 TIME: core/user.logoutPost : 0.3 ms
20.10 16:17:42 TIMER: Clans cache...
20.10 16:17:42 TIMER: Clans cache: 0ms
20.10 16:17:42 TIMER: Check tournament...
20.10 16:17:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:20' OR rounddate = '2016-20-10 16:20'
20.10 16:17:42 TIMER: Check tournament: 1ms
20.10 16:20:43 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889621,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 76
20.10 16:20:43 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
20.10 16:20:53 BLOCKREMOVE: user 76 removed
20.10 16:20:53 BLOCKREMOVE: questdata 76 removed
20.10 16:21:42 TIMER: Clans cache...
20.10 16:21:42 TIMER: Clans cache: 0ms
20.10 16:21:42 TIMER: Check tournament...
20.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:21' OR rounddate = '2016-20-10 16:21'
20.10 16:21:42 TIMER: Check tournament: 1ms
20.10 16:21:42 TIMER: Clans cache...
20.10 16:21:42 TIMER: Clans cache: 0ms
20.10 16:21:42 TIMER: Check tournament...
20.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:22' OR rounddate = '2016-20-10 16:22'
20.10 16:21:42 TIMER: Check tournament: 1ms
20.10 16:23:43 TIMER: Clans cache...
20.10 16:23:43 TIMER: Clans cache: 0ms
20.10 16:23:43 TIMER: Check tournament...
20.10 16:23:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:23' OR rounddate = '2016-20-10 16:23'
20.10 16:23:43 TIMER: Check tournament: 1ms
20.10 16:23:43 TIMER: Clans cache...
20.10 16:23:43 TIMER: Clans cache: 0ms
20.10 16:23:43 TIMER: Check tournament...
20.10 16:23:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:24' OR rounddate = '2016-20-10 16:24'
20.10 16:23:43 TIMER: Check tournament: 1ms
20.10 16:23:43 TIMER: Clans cache...
20.10 16:23:43 TIMER: Clans cache: 0ms
20.10 16:23:43 TIMER: Check tournament...
20.10 16:23:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:25' OR rounddate = '2016-20-10 16:25'
20.10 16:23:43 TIMER: Check tournament: 1ms
20.10 16:23:43 TIMER: Clans cache...
20.10 16:23:43 TIMER: Clans cache: 0ms
20.10 16:23:43 TIMER: Check tournament...
20.10 16:23:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:26' OR rounddate = '2016-20-10 16:26'
20.10 16:23:43 TIMER: Check tournament: 1ms
20.10 16:23:43 TIMER: Clans cache...
20.10 16:23:43 TIMER: Clans cache: 0ms
20.10 16:23:43 TIMER: Check tournament...
20.10 16:23:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:27' OR rounddate = '2016-20-10 16:27'
20.10 16:23:43 TIMER: Check tournament: 1ms
20.10 16:23:43 TIMER: Clans cache...
20.10 16:23:43 TIMER: Clans cache: 0ms
20.10 16:23:43 TIMER: Check tournament...
20.10 16:23:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:28' OR rounddate = '2016-20-10 16:28'
20.10 16:23:43 TIMER: Check tournament: 5ms
20.10 16:23:43 TIMER: Clans cache...
20.10 16:23:43 TIMER: Clans cache: 0ms
20.10 16:23:43 TIMER: Check tournament...
20.10 16:23:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:29' OR rounddate = '2016-20-10 16:29'
20.10 16:23:43 TIMER: Check tournament: 1ms
20.10 16:23:43 TIMER: Clans cache...
20.10 16:23:43 TIMER: Clans cache: 0ms
20.10 16:23:43 TIMER: Check tournament...
20.10 16:23:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:30' OR rounddate = '2016-20-10 16:30'
20.10 16:23:43 TIMER: Check tournament: 1ms
20.10 16:31:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.10 16:31:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.10 16:31:23 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.10 16:31:23 TIME: core/server.query : 1.68 ms
20.10 16:31:23 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.10 16:31:23 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:31:23 TIME: core/user.isOnlineID : 0.18 ms
20.10 16:31:23 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.10 16:31:23 STATS: cache [user], get [6 calls, 2 cache hits, 4 cache misses, 0 same version, 0 not found]
20.10 16:31:23 STATS: cache [user], segments [22 calls, 13 hits, 7 misses]
20.10 16:31:23 STATS: cache [user], database [3700 calls, 4 reads, 7 writes]
20.10 16:31:23 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
20.10 16:31:23 READDB: SELECT * FROM Users WHERE ID = 76
20.10 16:31:23 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.87 ms]
20.10 16:31:23 STATS: cache manager [1], update [10 calls, total 0 sec spent, avg 0.32 ms]
20.10 16:31:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476889621, lastLoginDate => 294, lastLoadDate => 1021 }, effects => { list => [] } }}, version => 0, id => 76 } }
20.10 16:31:23 TIME: core/cache.get : 2.75 ms
20.10 16:31:23 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.10 16:31:23 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
20.10 16:31:23 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
20.10 16:31:23 STATS: cache [questdata], database [3700 calls, 3 reads, 3 writes]
20.10 16:31:23 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
20.10 16:31:23 READDB: SELECT * FROM UserQuests WHERE ID = 76
20.10 16:31:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 76 } }
20.10 16:31:23 TIME: core/cache.get : 3.26 ms
20.10 16:31:23 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:31:23 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
20.10 16:31:23 TIME: core/user.loginPost : 0.41 ms
20.10 16:31:24 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
20.10 16:31:24 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:31:24 TIME: vdl/cache.user.getData : 0.28 ms
20.10 16:31:33 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.10 16:31:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:31:33 TIME: core/cache.update : 0.18 ms
20.10 16:31:33 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889621,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 76
20.10 16:31:43 TIMER: Clans cache...
20.10 16:31:43 TIMER: Clans cache: 0ms
20.10 16:31:43 TIMER: Check tournament...
20.10 16:31:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:31' OR rounddate = '2016-20-10 16:31'
20.10 16:31:43 TIMER: Check tournament: 1ms
20.10 16:31:43 TIMER: Clans cache...
20.10 16:31:43 TIMER: Clans cache: 0ms
20.10 16:31:43 TIMER: Check tournament...
20.10 16:31:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:32' OR rounddate = '2016-20-10 16:32'
20.10 16:31:43 TIMER: Check tournament: 1ms
20.10 16:31:43 TIMER: Clans cache...
20.10 16:31:43 TIMER: Clans cache: 0ms
20.10 16:31:43 TIMER: Check tournament...
20.10 16:31:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:33' OR rounddate = '2016-20-10 16:33'
20.10 16:31:43 TIMER: Check tournament: 1ms
20.10 16:34:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.10 16:34:42 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.10 16:34:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:34:42 TIME: core/server.query : 1.38 ms
20.10 16:34:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:34:42 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
20.10 16:34:42 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
20.10 16:34:42 STATS: cache [battle], database [3900 calls, 3 reads, 0 writes]
20.10 16:34:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.10 16:34:42 READDB: SELECT * FROM Battle WHERE ID = 0
20.10 16:34:42 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
20.10 16:34:42 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
20.10 16:34:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:34:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.10 16:34:42 STATS: cache [user], get [8 calls, 3 cache hits, 5 cache misses, 0 same version, 0 not found]
20.10 16:34:42 STATS: cache [user], segments [26 calls, 14 hits, 9 misses]
20.10 16:34:42 STATS: cache [user], database [3900 calls, 5 reads, 8 writes]
20.10 16:34:42 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
20.10 16:34:42 STATS: cache manager [1], get [9 calls, total 0.02 sec spent, avg 1.89 ms]
20.10 16:34:42 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.3 ms]
20.10 16:34:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:34:42 TIME: core/cache.update : 0.67 ms
20.10 16:34:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.10 16:34:42 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
20.10 16:34:42 STATS: cache [questdata], segments [15 calls, 6 hits, 8 misses]
20.10 16:34:42 STATS: cache [questdata], database [3900 calls, 4 reads, 3 writes]
20.10 16:34:42 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
20.10 16:34:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.10 16:34:42 TIME: core/cache.update : 0.51 ms
20.10 16:34:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.10 16:34:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:34:42 TIME: core/user.logoutPost : 0.18 ms
20.10 16:34:43 TIMER: Clans cache...
20.10 16:34:43 TIMER: Clans cache: 0ms
20.10 16:34:43 TIMER: Check tournament...
20.10 16:34:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:34' OR rounddate = '2016-20-10 16:34'
20.10 16:34:43 TIMER: Check tournament: 1ms
20.10 16:34:43 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889621,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 76
20.10 16:34:43 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
20.10 16:34:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.10 16:34:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.10 16:34:50 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer, networkid => , isbanned => false, id => 76 }}, errorCode => ok, _type => core/server.query }
20.10 16:34:50 TIME: core/server.query : 3.6 ms
20.10 16:34:50 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.10 16:34:50 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.10 16:34:50 TIME: core/user.isOnlineID : 0.15 ms
20.10 16:34:50 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.10 16:34:50 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, networkid => , params => { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476889621, lastLoginDate => 294, lastLoadDate => 1021 }, effects => { list => [] } }}, version => 2, id => 76 } }
20.10 16:34:50 TIME: core/cache.get : 0.44 ms
20.10 16:34:50 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.10 16:34:50 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 76 } }
20.10 16:34:50 TIME: core/cache.get : 0.28 ms
20.10 16:34:50 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
20.10 16:34:50 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
20.10 16:34:50 TIME: core/user.loginPost : 0.17 ms
20.10 16:34:51 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
20.10 16:34:51 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
20.10 16:34:51 TIME: vdl/cache.user.getData : 0.25 ms
20.10 16:34:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.10 16:34:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.10 16:34:58 TIME: core/cache.update : 0.26 ms
20.10 16:34:58 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889621,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 76
20.10 16:35:43 TIMER: Clans cache...
20.10 16:35:43 TIMER: Clans cache: 0ms
20.10 16:35:43 TIMER: Check tournament...
20.10 16:35:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:35' OR rounddate = '2016-20-10 16:35'
20.10 16:35:43 TIMER: Check tournament: 1ms
20.10 16:35:43 TIMER: Clans cache...
20.10 16:35:43 TIMER: Clans cache: 0ms
20.10 16:35:43 TIMER: Check tournament...
20.10 16:35:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:36' OR rounddate = '2016-20-10 16:36'
20.10 16:35:43 TIMER: Check tournament: 1ms
20.10 16:35:43 TIMER: Clans cache...
20.10 16:35:43 TIMER: Clans cache: 0ms
20.10 16:35:43 TIMER: Check tournament...
20.10 16:35:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:37' OR rounddate = '2016-20-10 16:37'
20.10 16:35:43 TIMER: Check tournament: 1ms
20.10 16:38:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
20.10 16:38:42 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
20.10 16:38:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.10 16:38:42 TIME: core/server.query : 2.27 ms
20.10 16:38:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.10 16:38:42 STATS: cache [battle], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 4 not found]
20.10 16:38:42 STATS: cache [battle], segments [5 calls, 0 hits, 4 misses]
20.10 16:38:42 STATS: cache [battle], database [4140 calls, 4 reads, 0 writes]
20.10 16:38:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.10 16:38:42 READDB: SELECT * FROM Battle WHERE ID = 0
20.10 16:38:42 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
20.10 16:38:42 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 139
Called from modules/VDLCache.hx line 132
Called from modules/VDLCache.hx line 92
Called from snipe/cache/CacheServer.hx line 487
20.10 16:38:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.10 16:38:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
20.10 16:38:42 STATS: cache [user], get [10 calls, 5 cache hits, 5 cache misses, 0 same version, 0 not found]
20.10 16:38:42 STATS: cache [user], segments [32 calls, 19 hits, 9 misses]
20.10 16:38:42 STATS: cache [user], database [4140 calls, 5 reads, 10 writes]
20.10 16:38:42 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
20.10 16:38:42 STATS: cache manager [1], get [11 calls, total 0.02 sec spent, avg 1.56 ms]
20.10 16:38:42 STATS: cache manager [1], update [15 calls, total 0 sec spent, avg 0.3 ms]
20.10 16:38:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
20.10 16:38:42 TIME: core/cache.update : 0.78 ms
20.10 16:38:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
20.10 16:38:42 STATS: cache [questdata], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
20.10 16:38:42 STATS: cache [questdata], segments [19 calls, 10 hits, 8 misses]
20.10 16:38:42 STATS: cache [questdata], database [4140 calls, 4 reads, 4 writes]
20.10 16:38:42 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
20.10 16:38:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.10 16:38:42 TIME: core/cache.update : 0.86 ms
20.10 16:38:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
20.10 16:38:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.10 16:38:42 TIME: core/user.logoutPost : 0.3 ms
20.10 16:38:43 TIMER: Clans cache...
20.10 16:38:43 TIMER: Clans cache: 0ms
20.10 16:38:43 TIMER: Check tournament...
20.10 16:38:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:38' OR rounddate = '2016-20-10 16:38'
20.10 16:38:43 TIMER: Check tournament: 1ms
20.10 16:38:43 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889621,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}' WHERE ID = 76
20.10 16:38:43 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
20.10 16:38:53 BLOCKREMOVE: user 76 removed
20.10 16:38:53 BLOCKREMOVE: questdata 76 removed
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:39' OR rounddate = '2016-20-10 16:39'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:40' OR rounddate = '2016-20-10 16:40'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:41' OR rounddate = '2016-20-10 16:41'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:42' OR rounddate = '2016-20-10 16:42'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:43' OR rounddate = '2016-20-10 16:43'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:44' OR rounddate = '2016-20-10 16:44'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:45' OR rounddate = '2016-20-10 16:45'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:46' OR rounddate = '2016-20-10 16:46'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:47' OR rounddate = '2016-20-10 16:47'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:48' OR rounddate = '2016-20-10 16:48'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:49' OR rounddate = '2016-20-10 16:49'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:50' OR rounddate = '2016-20-10 16:50'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:51' OR rounddate = '2016-20-10 16:51'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:52' OR rounddate = '2016-20-10 16:52'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:53' OR rounddate = '2016-20-10 16:53'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:54' OR rounddate = '2016-20-10 16:54'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:55' OR rounddate = '2016-20-10 16:55'
20.10 16:39:43 TIMER: Check tournament: 2ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:56' OR rounddate = '2016-20-10 16:56'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:57' OR rounddate = '2016-20-10 16:57'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:58' OR rounddate = '2016-20-10 16:58'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 16:59' OR rounddate = '2016-20-10 16:59'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:00' OR rounddate = '2016-20-10 17:00'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:01' OR rounddate = '2016-20-10 17:01'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:02' OR rounddate = '2016-20-10 17:02'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:03' OR rounddate = '2016-20-10 17:03'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:04' OR rounddate = '2016-20-10 17:04'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:05' OR rounddate = '2016-20-10 17:05'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:06' OR rounddate = '2016-20-10 17:06'
20.10 16:39:43 TIMER: Check tournament: 4ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:07' OR rounddate = '2016-20-10 17:07'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:08' OR rounddate = '2016-20-10 17:08'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:09' OR rounddate = '2016-20-10 17:09'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:10' OR rounddate = '2016-20-10 17:10'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:11' OR rounddate = '2016-20-10 17:11'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:12' OR rounddate = '2016-20-10 17:12'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:13' OR rounddate = '2016-20-10 17:13'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:14' OR rounddate = '2016-20-10 17:14'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:15' OR rounddate = '2016-20-10 17:15'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:16' OR rounddate = '2016-20-10 17:16'
20.10 16:39:43 TIMER: Check tournament: 2ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:17' OR rounddate = '2016-20-10 17:17'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:18' OR rounddate = '2016-20-10 17:18'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:19' OR rounddate = '2016-20-10 17:19'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:20' OR rounddate = '2016-20-10 17:20'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:21' OR rounddate = '2016-20-10 17:21'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:22' OR rounddate = '2016-20-10 17:22'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:23' OR rounddate = '2016-20-10 17:23'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:24' OR rounddate = '2016-20-10 17:24'
20.10 16:39:43 TIMER: Check tournament: 2ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:25' OR rounddate = '2016-20-10 17:25'
20.10 16:39:43 TIMER: Check tournament: 2ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:26' OR rounddate = '2016-20-10 17:26'
20.10 16:39:43 TIMER: Check tournament: 2ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:27' OR rounddate = '2016-20-10 17:27'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:28' OR rounddate = '2016-20-10 17:28'
20.10 16:39:43 TIMER: Check tournament: 2ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:29' OR rounddate = '2016-20-10 17:29'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:30' OR rounddate = '2016-20-10 17:30'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:31' OR rounddate = '2016-20-10 17:31'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:32' OR rounddate = '2016-20-10 17:32'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:33' OR rounddate = '2016-20-10 17:33'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:34' OR rounddate = '2016-20-10 17:34'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:35' OR rounddate = '2016-20-10 17:35'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:36' OR rounddate = '2016-20-10 17:36'
20.10 16:39:43 TIMER: Check tournament: 1ms
20.10 16:39:43 TIMER: Clans cache...
20.10 16:39:43 TIMER: Clans cache: 0ms
20.10 16:39:43 TIMER: Check tournament...
20.10 16:39:43 DB: SELECT * FROM tournament WHERE startdate = '2016-20-10 17:37' OR rounddate = '2016-20-10 17:37'
20.10 16:39:43 TIMER: Check tournament: 1ms
