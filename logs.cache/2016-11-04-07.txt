04.11 07:08:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:08:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:08:58 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:08:58 TIME: core/server.query : 3 ms
04.11 07:08:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:08:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 07:08:58 TIME: core/user.isOnlineID : 0.09 ms
04.11 07:08:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:08:58 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:08:58 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 07:08:58 STATS: cache [user], database [1115 calls, 0 reads, 0 writes]
04.11 07:08:58 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 07:08:58 READDB: SELECT * FROM Users WHERE ID = 116
04.11 07:08:58 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 5.06 ms]
04.11 07:08:58 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 07:08:58 QUEUE: vdl.0 (thread) response core/cache.get
04.11 07:08:58 TIME: core/cache.get : 5.33 ms
04.11 07:08:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:08:58 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:08:58 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 07:08:58 STATS: cache [questdata], database [1115 calls, 0 reads, 0 writes]
04.11 07:08:58 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 07:08:58 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 07:08:58 QUEUE: vdl.0 (thread) response core/cache.get
04.11 07:08:58 TIME: core/cache.get : 1.9 ms
04.11 07:08:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:08:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:08:58 TIME: core/user.loginPost : 0.13 ms
04.11 07:09:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:09:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:09:04 TIME: core/cache.update : 0.2 ms
04.11 07:09:05 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 07:09:24 TIMER: Clans cache...
04.11 07:09:24 TIMER: Clans cache: 0ms
04.11 07:09:24 TIMER: Check tournament...
04.11 07:09:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:09' OR rounddate = '2016-04-11 07:09' AND status <> 'finished'
04.11 07:09:24 DB: SELECT * FROM battle WHERE endtime >= '1478232.56473904' AND avaliable = true AND finished <> true
04.11 07:09:24 TIMER: Check tournament: 5ms
04.11 07:09:26 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:09:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:09:26 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:09:26 TIME: core/server.query : 2.64 ms
04.11 07:09:26 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:09:26 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:09:26 TIME: core/user.isOnlineID : 0.12 ms
04.11 07:09:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:09:26 READDB: SELECT * FROM Users WHERE ID = 107
04.11 07:09:26 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:09:26 TIME: core/cache.get : 1.67 ms
04.11 07:09:26 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:09:26 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 07:09:26 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:09:26 TIME: core/cache.get : 0.95 ms
04.11 07:09:26 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:09:26 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:09:26 TIME: core/user.loginPost : 0.13 ms
04.11 07:09:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:09:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:09:34 TIME: core/cache.update : 0.18 ms
04.11 07:09:35 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:09:57 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:09:57 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:09:57 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }}, errorCode => ok, _type => core/server.query }
04.11 07:09:57 TIME: core/server.query : 1.89 ms
04.11 07:09:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 23, _type => vdl/cache.battle.infoRoom }
04.11 07:09:57 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:09:57 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 07:09:57 STATS: cache [battle], database [1173 calls, 0 reads, 0 writes]
04.11 07:09:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:09:57 READDB: SELECT * FROM Battle WHERE ID = 23
04.11 07:09:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 07:09:57 TIME: vdl/cache.battle.infoRoom : 1.99 ms
04.11 07:09:57 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 23, _type => vdl/cache.battle.deleteRoom }
04.11 07:09:57 ROOM: deleted room 23
04.11 07:09:57 DB: DELETE FROM Battle WHERE ID = 23
04.11 07:09:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:09:57 TIME: vdl/cache.battle.deleteRoom : 23.29 ms
04.11 07:09:57 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 23, _type => vdl/cache.battle.finishRoom }
04.11 07:09:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:09:57 TIME: vdl/cache.battle.finishRoom : 0.16 ms
04.11 07:09:57 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:09:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:09:57 TIME: core/cache.update : 0.18 ms
04.11 07:09:57 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:09:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:09:57 TIME: core/cache.update : 0.28 ms
04.11 07:09:57 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:09:57 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:09:57 TIME: core/user.logoutPost : 0.15 ms
04.11 07:09:57 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:09:57 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 07:10:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 23
04.11 07:10:07 BLOCKREMOVE: user 107 removed
04.11 07:10:07 BLOCKREMOVE: questdata 107 removed
04.11 07:10:12 BLOCKREMOVE: battle 23 removed
04.11 07:10:24 TIMER: Clans cache...
04.11 07:10:24 TIMER: Clans cache: 0ms
04.11 07:10:24 TIMER: Check tournament...
04.11 07:10:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:10' OR rounddate = '2016-04-11 07:10' AND status <> 'finished'
04.11 07:10:24 DB: SELECT * FROM battle WHERE endtime >= '1478232.62475075' AND avaliable = true AND finished <> true
04.11 07:10:24 TIMER: Check tournament: 1ms
04.11 07:10:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:10:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:10:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:10:58 TIME: core/server.query : 1.34 ms
04.11 07:10:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:10:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:10:58 TIME: core/user.isOnlineID : 0.12 ms
04.11 07:10:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:10:58 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 07:10:58 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
04.11 07:10:58 STATS: cache [user], database [1234 calls, 2 reads, 3 writes]
04.11 07:10:58 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
04.11 07:10:58 READDB: SELECT * FROM Users WHERE ID = 107
04.11 07:10:58 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2.17 ms]
04.11 07:10:58 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.06 ms]
04.11 07:10:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:10:58 TIME: core/cache.get : 2.39 ms
04.11 07:10:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:10:58 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 07:10:58 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
04.11 07:10:58 STATS: cache [questdata], database [1234 calls, 2 reads, 1 writes]
04.11 07:10:58 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
04.11 07:10:58 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 07:10:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:10:58 TIME: core/cache.get : 1.4 ms
04.11 07:10:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:10:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:10:58 TIME: core/user.loginPost : 0.13 ms
04.11 07:11:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:11:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:11:04 TIME: core/cache.update : 0.2 ms
04.11 07:11:05 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:11:08 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:11:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:11:08 TIME: vdl/cache.battle.findRandom : 0.16 ms
04.11 07:11:24 TIMER: Clans cache...
04.11 07:11:24 TIMER: Clans cache: 0ms
04.11 07:11:24 TIMER: Check tournament...
04.11 07:11:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:11' OR rounddate = '2016-04-11 07:11' AND status <> 'finished'
04.11 07:11:24 DB: SELECT * FROM battle WHERE endtime >= '1478232.68476431' AND avaliable = true AND finished <> true
04.11 07:11:24 TIMER: Check tournament: 1ms
04.11 07:11:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
04.11 07:11:31 STATS: cache [battle], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 07:11:31 STATS: cache [battle], segments [5 calls, 3 hits, 1 misses]
04.11 07:11:31 STATS: cache [battle], database [1267 calls, 1 reads, 1 writes]
04.11 07:11:31 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:11:31 READDB: SELECT * FROM Battle WHERE ID = 0
04.11 07:11:31 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
04.11 07:11:31 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
04.11 07:11:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
04.11 07:11:51 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:11:51 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:11:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }}, errorCode => ok, _type => core/server.query }
04.11 07:11:51 TIME: core/server.query : 1.08 ms
04.11 07:11:51 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 25, _type => vdl/cache.battle.infoRoom }
04.11 07:11:51 READDB: SELECT * FROM Battle WHERE ID = 25
04.11 07:11:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 07:11:51 TIME: vdl/cache.battle.infoRoom : 0.94 ms
04.11 07:11:51 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 25, _type => vdl/cache.battle.deleteRoom }
04.11 07:11:51 ROOM: deleted room 25
04.11 07:11:51 DB: DELETE FROM Battle WHERE ID = 25
04.11 07:11:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:11:51 TIME: vdl/cache.battle.deleteRoom : 26.94 ms
04.11 07:11:51 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 25, _type => vdl/cache.battle.finishRoom }
04.11 07:11:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:11:51 TIME: vdl/cache.battle.finishRoom : 0.16 ms
04.11 07:11:51 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:11:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:11:51 TIME: core/cache.update : 0.17 ms
04.11 07:11:51 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:11:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:11:51 TIME: core/cache.update : 0.15 ms
04.11 07:11:51 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:11:51 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:11:51 TIME: core/user.logoutPost : 0.12 ms
04.11 07:11:52 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:11:52 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 07:11:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 25
04.11 07:12:02 BLOCKREMOVE: user 107 removed
04.11 07:12:02 BLOCKREMOVE: questdata 107 removed
04.11 07:12:07 BLOCKREMOVE: battle 25 removed
04.11 07:12:24 TIMER: Clans cache...
04.11 07:12:24 TIMER: Clans cache: 0ms
04.11 07:12:24 TIMER: Check tournament...
04.11 07:12:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:12' OR rounddate = '2016-04-11 07:12' AND status <> 'finished'
04.11 07:12:24 DB: SELECT * FROM battle WHERE endtime >= '1478232.74477502' AND avaliable = true AND finished <> true
04.11 07:12:24 TIMER: Check tournament: 1ms
04.11 07:12:24 TIMER: Clans cache...
04.11 07:12:24 TIMER: Clans cache: 0ms
04.11 07:12:24 TIMER: Check tournament...
04.11 07:12:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:13' OR rounddate = '2016-04-11 07:13' AND status <> 'finished'
04.11 07:12:24 DB: SELECT * FROM battle WHERE endtime >= '1478232.80478628' AND avaliable = true AND finished <> true
04.11 07:12:24 TIMER: Check tournament: 3ms
04.11 07:12:24 TIMER: Clans cache...
04.11 07:12:24 TIMER: Clans cache: 0ms
04.11 07:12:24 TIMER: Check tournament...
04.11 07:12:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:14' OR rounddate = '2016-04-11 07:14' AND status <> 'finished'
04.11 07:12:24 DB: SELECT * FROM battle WHERE endtime >= '1478232.86479915' AND avaliable = true AND finished <> true
04.11 07:12:24 TIMER: Check tournament: 1ms
04.11 07:15:17 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 07:15:17 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 07:15:17 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 24 }, { id => 17 }, { id => 10 }, { id => 13 }}, errorCode => ok, _type => core/server.query }
04.11 07:15:17 TIME: core/server.query : 1.09 ms
04.11 07:15:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 13, _type => vdl/cache.battle.infoRoom }
04.11 07:15:17 STATS: cache [battle], get [6 calls, 2 cache hits, 3 cache misses, 0 same version, 1 not found]
04.11 07:15:17 STATS: cache [battle], segments [10 calls, 6 hits, 3 misses]
04.11 07:15:17 STATS: cache [battle], database [1493 calls, 3 reads, 2 writes]
04.11 07:15:17 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:15:17 READDB: SELECT * FROM Battle WHERE ID = 13
04.11 07:15:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:15:17 TIME: vdl/cache.battle.infoRoom : 1.58 ms
04.11 07:15:17 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 13, _type => vdl/cache.battle.deleteRoom }
04.11 07:15:17 ROOM: deleted room 13
04.11 07:15:17 DB: DELETE FROM Battle WHERE ID = 13
04.11 07:15:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:15:17 TIME: vdl/cache.battle.deleteRoom : 22.08 ms
04.11 07:15:17 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 13, _type => vdl/cache.battle.finishRoom }
04.11 07:15:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:15:17 TIME: vdl/cache.battle.finishRoom : 0.17 ms
04.11 07:15:17 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 07:15:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 07:15:17 TIME: core/user.sendTo : 0.12 ms
04.11 07:15:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 07:15:17 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 07:15:17 STATS: cache [user], segments [14 calls, 7 hits, 6 misses]
04.11 07:15:17 STATS: cache [user], database [1493 calls, 3 reads, 5 writes]
04.11 07:15:17 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
04.11 07:15:17 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 2.02 ms]
04.11 07:15:17 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.09 ms]
04.11 07:15:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:15:17 TIME: core/cache.update : 0.58 ms
04.11 07:15:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 07:15:17 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 07:15:17 STATS: cache [questdata], segments [11 calls, 4 hits, 6 misses]
04.11 07:15:17 STATS: cache [questdata], database [1493 calls, 3 reads, 2 writes]
04.11 07:15:17 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
04.11 07:15:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:15:17 TIME: core/cache.update : 0.73 ms
04.11 07:15:17 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 07:15:17 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:15:17 TIME: core/user.logoutPost : 0.21 ms
04.11 07:15:17 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 07:15:17 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 07:15:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 13
04.11 07:15:24 TIMER: Clans cache...
04.11 07:15:24 TIMER: Clans cache: 0ms
04.11 07:15:24 TIMER: Check tournament...
04.11 07:15:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:15' OR rounddate = '2016-04-11 07:15' AND status <> 'finished'
04.11 07:15:24 DB: SELECT * FROM battle WHERE endtime >= '1478232.92481038' AND avaliable = true AND finished <> true
04.11 07:15:24 TIMER: Check tournament: 1ms
04.11 07:15:27 BLOCKREMOVE: user 116 removed
04.11 07:15:27 BLOCKREMOVE: questdata 116 removed
04.11 07:15:32 BLOCKREMOVE: battle 13 removed
04.11 07:15:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:15:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:15:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:15:37 TIME: core/server.query : 1.57 ms
04.11 07:15:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:15:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:15:37 TIME: core/user.isOnlineID : 0.12 ms
04.11 07:15:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:15:37 READDB: SELECT * FROM Users WHERE ID = 107
04.11 07:15:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:15:37 TIME: core/cache.get : 1.91 ms
04.11 07:15:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:15:37 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 07:15:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:15:37 TIME: core/cache.get : 1.19 ms
04.11 07:15:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:15:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:15:37 TIME: core/user.loginPost : 0.13 ms
04.11 07:15:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:15:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:15:44 TIME: core/cache.update : 0.22 ms
04.11 07:15:44 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:15:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:15:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:15:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 07:15:47 TIME: core/server.query : 1.29 ms
04.11 07:15:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:15:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:15:47 TIME: core/user.isOnlineID : 0.12 ms
04.11 07:15:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:15:47 READDB: SELECT * FROM Users WHERE ID = 116
04.11 07:15:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 07:15:47 TIME: core/cache.get : 2.2 ms
04.11 07:15:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:15:47 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 07:15:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 07:15:47 TIME: core/cache.get : 1.23 ms
04.11 07:15:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:15:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:15:47 TIME: core/user.loginPost : 0.12 ms
04.11 07:15:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:15:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:15:54 TIME: core/cache.update : 0.19 ms
04.11 07:15:54 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 07:16:10 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:16:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:16:10 TIME: vdl/cache.battle.findRandom : 0.1 ms
04.11 07:16:17 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 07:16:17 DB: SELECT nextval('Battle_id_seq') AS id
04.11 07:16:17 READDB: SELECT ID FROM Battle WHERE ID = 52
04.11 07:16:17 READDB: INSERT INTO Battle (ID) VALUES (52)
04.11 07:16:17 STATS: cache [battle], get [8 calls, 3 cache hits, 4 cache misses, 0 same version, 1 not found]
04.11 07:16:17 STATS: cache [battle], segments [14 calls, 9 hits, 4 misses]
04.11 07:16:17 STATS: cache [battle], database [1553 calls, 4 reads, 3 writes]
04.11 07:16:17 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:16:17 READDB: SELECT * FROM Battle WHERE ID = 52
04.11 07:16:17 DB: SELECT name FROM users WHERE id=116
04.11 07:16:17 DB: SELECT name FROM users WHERE id=107
04.11 07:16:17 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 52, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 07:16:17 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 52, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 07:16:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:16:17 TIME: vdl/cache.battle.findRandom : 104.09 ms
04.11 07:16:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481832.97732583', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 52
04.11 07:16:24 TIMER: Clans cache...
04.11 07:16:24 TIMER: Clans cache: 0ms
04.11 07:16:24 TIMER: Check tournament...
04.11 07:16:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:16' OR rounddate = '2016-04-11 07:16' AND status <> 'finished'
04.11 07:16:24 DB: SELECT * FROM battle WHERE endtime >= '1478232.98482336' AND avaliable = true AND finished <> true
04.11 07:16:24 TIMER: Check tournament: 1ms
04.11 07:16:32 BLOCKREMOVE: battle 52 removed
04.11 07:16:37 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:16:37 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:16:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 52 }}, errorCode => ok, _type => core/server.query }
04.11 07:16:37 TIME: core/server.query : 1.05 ms
04.11 07:16:37 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 52, _type => vdl/cache.battle.infoRoom }
04.11 07:16:37 READDB: SELECT * FROM Battle WHERE ID = 52
04.11 07:16:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:16:37 TIME: vdl/cache.battle.infoRoom : 0.97 ms
04.11 07:16:37 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 52, _type => vdl/cache.battle.deleteRoom }
04.11 07:16:37 ROOM: deleted room 52
04.11 07:16:37 DB: DELETE FROM Battle WHERE ID = 52
04.11 07:16:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:16:37 TIME: vdl/cache.battle.deleteRoom : 8.44 ms
04.11 07:16:37 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 52, _type => vdl/cache.battle.finishRoom }
04.11 07:16:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:16:37 TIME: vdl/cache.battle.finishRoom : 0.11 ms
04.11 07:16:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:16:37 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
04.11 07:16:37 STATS: cache [user], segments [22 calls, 11 hits, 10 misses]
04.11 07:16:37 STATS: cache [user], database [1573 calls, 5 reads, 8 writes]
04.11 07:16:37 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
04.11 07:16:37 STATS: cache manager [1], get [10 calls, total 0.02 sec spent, avg 1.76 ms]
04.11 07:16:37 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.12 ms]
04.11 07:16:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:16:37 TIME: core/cache.update : 0.45 ms
04.11 07:16:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:16:37 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
04.11 07:16:37 STATS: cache [questdata], segments [17 calls, 6 hits, 10 misses]
04.11 07:16:37 STATS: cache [questdata], database [1573 calls, 5 reads, 3 writes]
04.11 07:16:37 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
04.11 07:16:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:16:37 TIME: core/cache.update : 0.41 ms
04.11 07:16:37 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:16:37 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:16:37 TIME: core/user.logoutPost : 0.13 ms
04.11 07:16:37 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:16:37 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 07:16:43 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481830', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 52
04.11 07:16:48 BLOCKREMOVE: user 107 removed
04.11 07:16:48 BLOCKREMOVE: questdata 107 removed
04.11 07:16:53 BLOCKREMOVE: battle 52 removed
04.11 07:17:24 TIMER: Clans cache...
04.11 07:17:24 TIMER: Clans cache: 0ms
04.11 07:17:24 TIMER: Check tournament...
04.11 07:17:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:17' OR rounddate = '2016-04-11 07:17' AND status <> 'finished'
04.11 07:17:24 DB: SELECT * FROM battle WHERE endtime >= '1478233.04483357' AND avaliable = true AND finished <> true
04.11 07:17:24 TIMER: Check tournament: 2ms
04.11 07:17:24 TIMER: Clans cache...
04.11 07:17:24 TIMER: Clans cache: 0ms
04.11 07:17:24 TIMER: Check tournament...
04.11 07:17:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:18' OR rounddate = '2016-04-11 07:18' AND status <> 'finished'
04.11 07:17:24 DB: SELECT * FROM battle WHERE endtime >= '1478233.10484422' AND avaliable = true AND finished <> true
04.11 07:17:24 TIMER: Check tournament: 1ms
04.11 07:19:14 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 07:19:14 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 07:19:14 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 24 }, { id => 17 }, { id => 10 }}, errorCode => ok, _type => core/server.query }
04.11 07:19:14 TIME: core/server.query : 1 ms
04.11 07:19:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 10, _type => vdl/cache.battle.infoRoom }
04.11 07:19:14 STATS: cache [battle], get [11 calls, 4 cache hits, 6 cache misses, 0 same version, 1 not found]
04.11 07:19:14 STATS: cache [battle], segments [21 calls, 14 hits, 6 misses]
04.11 07:19:14 STATS: cache [battle], database [1730 calls, 6 reads, 5 writes]
04.11 07:19:14 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:19:14 READDB: SELECT * FROM Battle WHERE ID = 10
04.11 07:19:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:19:14 TIME: vdl/cache.battle.infoRoom : 1.14 ms
04.11 07:19:14 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 10, _type => vdl/cache.battle.deleteRoom }
04.11 07:19:14 ROOM: deleted room 10
04.11 07:19:14 DB: DELETE FROM Battle WHERE ID = 10
04.11 07:19:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:19:14 TIME: vdl/cache.battle.deleteRoom : 11.62 ms
04.11 07:19:14 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 10, _type => vdl/cache.battle.finishRoom }
04.11 07:19:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:19:14 TIME: vdl/cache.battle.finishRoom : 0.17 ms
04.11 07:19:14 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 07:19:14 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 07:19:14 TIME: core/user.sendTo : 0.14 ms
04.11 07:19:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 07:19:14 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
04.11 07:19:14 STATS: cache [user], segments [24 calls, 13 hits, 10 misses]
04.11 07:19:14 STATS: cache [user], database [1730 calls, 5 reads, 9 writes]
04.11 07:19:14 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
04.11 07:19:14 STATS: cache manager [1], get [10 calls, total 0.02 sec spent, avg 1.76 ms]
04.11 07:19:14 STATS: cache manager [1], update [14 calls, total 0 sec spent, avg 0.14 ms]
04.11 07:19:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:19:14 TIME: core/cache.update : 0.51 ms
04.11 07:19:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 07:19:14 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
04.11 07:19:14 STATS: cache [questdata], segments [19 calls, 8 hits, 10 misses]
04.11 07:19:14 STATS: cache [questdata], database [1730 calls, 5 reads, 4 writes]
04.11 07:19:14 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
04.11 07:19:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:19:14 TIME: core/cache.update : 0.27 ms
04.11 07:19:14 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 07:19:14 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:19:14 TIME: core/user.logoutPost : 0.15 ms
04.11 07:19:15 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 07:19:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 07:19:20 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'true', endtime = E'1481800', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 10
04.11 07:19:24 TIMER: Clans cache...
04.11 07:19:24 TIMER: Clans cache: 0ms
04.11 07:19:24 TIMER: Check tournament...
04.11 07:19:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:19' OR rounddate = '2016-04-11 07:19' AND status <> 'finished'
04.11 07:19:24 DB: SELECT * FROM battle WHERE endtime >= '1478233.16485901' AND avaliable = true AND finished <> true
04.11 07:19:24 TIMER: Check tournament: 1ms
04.11 07:19:25 BLOCKREMOVE: user 116 removed
04.11 07:19:25 BLOCKREMOVE: questdata 116 removed
04.11 07:19:30 BLOCKREMOVE: battle 10 removed
04.11 07:19:35 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:19:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:19:35 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:19:35 TIME: core/server.query : 1.36 ms
04.11 07:19:35 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:19:35 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:19:35 TIME: core/user.isOnlineID : 0.11 ms
04.11 07:19:35 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:19:35 READDB: SELECT * FROM Users WHERE ID = 107
04.11 07:19:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:19:35 TIME: core/cache.get : 1.86 ms
04.11 07:19:35 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:19:35 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 07:19:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:19:35 TIME: core/cache.get : 1.04 ms
04.11 07:19:35 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:19:35 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:19:35 TIME: core/user.loginPost : 0.13 ms
04.11 07:19:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:19:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:19:44 TIME: core/cache.update : 0.14 ms
04.11 07:19:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:19:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:19:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 07:19:44 TIME: core/server.query : 2.66 ms
04.11 07:19:44 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:19:44 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:19:44 TIME: core/user.isOnlineID : 0.11 ms
04.11 07:19:44 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:19:44 READDB: SELECT * FROM Users WHERE ID = 116
04.11 07:19:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 07:19:44 TIME: core/cache.get : 1.72 ms
04.11 07:19:44 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:19:44 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 07:19:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 07:19:44 TIME: core/cache.get : 1.17 ms
04.11 07:19:44 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:19:44 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:19:44 TIME: core/user.loginPost : 0.13 ms
04.11 07:19:45 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:19:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:19:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:19:54 TIME: core/cache.update : 0.13 ms
04.11 07:19:55 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 07:20:24 TIMER: Clans cache...
04.11 07:20:24 TIMER: Clans cache: 0ms
04.11 07:20:24 TIMER: Check tournament...
04.11 07:20:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:20' OR rounddate = '2016-04-11 07:20' AND status <> 'finished'
04.11 07:20:24 DB: SELECT * FROM battle WHERE endtime >= '1478233.22486986' AND avaliable = true AND finished <> true
04.11 07:20:24 TIMER: Check tournament: 1ms
04.11 07:20:51 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:20:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:20:51 TIME: vdl/cache.battle.findRandom : 0.1 ms
04.11 07:21:01 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 07:21:01 DB: SELECT nextval('Battle_id_seq') AS id
04.11 07:21:01 READDB: SELECT ID FROM Battle WHERE ID = 53
04.11 07:21:01 READDB: INSERT INTO Battle (ID) VALUES (53)
04.11 07:21:01 STATS: cache [battle], get [13 calls, 5 cache hits, 7 cache misses, 0 same version, 1 not found]
04.11 07:21:01 STATS: cache [battle], segments [25 calls, 17 hits, 7 misses]
04.11 07:21:01 STATS: cache [battle], database [1837 calls, 7 reads, 6 writes]
04.11 07:21:01 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:21:01 READDB: SELECT * FROM Battle WHERE ID = 53
04.11 07:21:01 DB: SELECT name FROM users WHERE id=116
04.11 07:21:01 DB: SELECT name FROM users WHERE id=107
04.11 07:21:01 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 53, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 07:21:01 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 53, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 07:21:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:21:01 TIME: vdl/cache.battle.findRandom : 22.01 ms
04.11 07:21:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481833.26129456', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 53
04.11 07:21:17 BLOCKREMOVE: battle 53 removed
04.11 07:21:24 TIMER: Clans cache...
04.11 07:21:24 TIMER: Clans cache: 0ms
04.11 07:21:24 TIMER: Check tournament...
04.11 07:21:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:21' OR rounddate = '2016-04-11 07:21' AND status <> 'finished'
04.11 07:21:24 DB: SELECT * FROM battle WHERE endtime >= '1478233.28488295' AND avaliable = true AND finished <> true
04.11 07:21:24 TIMER: Check tournament: 1ms
04.11 07:21:28 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 53, _type => vdl/cache.battle.infoRoom }
04.11 07:21:28 READDB: SELECT * FROM Battle WHERE ID = 53
04.11 07:21:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:21:28 TIME: vdl/cache.battle.infoRoom : 1.22 ms
04.11 07:21:28 NET: vdl.0 (thread) request core/user.sendTo { id => null, _type => core/user.sendTo, msg => { _type => battle.message, message => mdjdee, player => 2 } }
04.11 07:21:28 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 07:21:28 TIME: core/user.sendTo : 0.08 ms
04.11 07:21:39 BLOCKREMOVE: battle 53 removed
04.11 07:22:24 TIMER: Clans cache...
04.11 07:22:24 TIMER: Clans cache: 0ms
04.11 07:22:24 TIMER: Check tournament...
04.11 07:22:24 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:22' OR rounddate = '2016-04-11 07:22' AND status <> 'finished'
04.11 07:22:24 DB: SELECT * FROM battle WHERE endtime >= '1478233.34489336' AND avaliable = true AND finished <> true
04.11 07:22:24 TIMER: Check tournament: 2ms
04.11 07:23:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 53, _type => vdl/cache.battle.infoRoom }
04.11 07:23:08 STATS: cache [battle], get [15 calls, 5 cache hits, 9 cache misses, 0 same version, 1 not found]
04.11 07:23:08 STATS: cache [battle], segments [29 calls, 19 hits, 9 misses]
04.11 07:23:08 STATS: cache [battle], database [1964 calls, 9 reads, 7 writes]
04.11 07:23:08 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:23:08 READDB: SELECT * FROM Battle WHERE ID = 53
04.11 07:23:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:23:08 TIME: vdl/cache.battle.infoRoom : 1.25 ms
04.11 07:23:08 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 53, _type => vdl/cache.battle.makeTurn }
04.11 07:23:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 07:23:08 TIME: vdl/cache.battle.makeTurn : 0.18 ms
04.11 07:23:14 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'false', endtime = E'1481830', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 53
04.11 07:23:45 TIMER: Starting timer...
04.11 07:23:45 TIMER: Timer running...
04.11 07:23:45 DB: SELECT * FROM GameVars
04.11 07:23:45 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 07:23:45 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 07:23:45 DB: SELECT * FROM Shops WHERE ID = 1
04.11 07:23:45 TEMP: load ./tmp/quest_daily_ids
04.11 07:23:45 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 07:23:45 TEMP: save ./tmp/quest_daily_ids
04.11 07:23:45 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 07:23:45 QUEUE: vdl.0 (thread) response server.login
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM LocalizationStrings
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 25.96 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM GameVars
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.17 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.54 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.47 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.76 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 2.7 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 07:23:45 TIME: core/quest.getDaily : 0.06 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM UserAttributeTypes
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.05 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM UserVariableTypes
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.07 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 07:23:45 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 3.62 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM ItemGroups
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.11 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM Bundles ORDER BY ID
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.69 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.49 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 07:23:45 TIME: core/shop.getList : 0.07 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM EffectAttributeTypes
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.66 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM Effects
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.74 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 07:23:45 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 3.2 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 07:23:45 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.62 ms
04.11 07:23:45 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 07:23:45 DB: SELECT * FROM Badges
04.11 07:23:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:23:45 TIME: core/server.query : 1.02 ms
04.11 07:23:45 TIMER: Clans cache...
04.11 07:23:45 TIMER: Clans cache: 0ms
04.11 07:23:45 TIMER: Check tournament...
04.11 07:23:45 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:24' OR rounddate = '2016-04-11 07:24' AND status <> 'finished'
04.11 07:23:45 DB: SELECT * FROM battle WHERE endtime >= '1478233.48588934' AND avaliable = true AND finished <> true
04.11 07:23:45 TIMER: Check tournament: 4ms
04.11 07:23:45 TIMER: Clans cache...
04.11 07:23:45 TIMER: Clans cache: 0ms
04.11 07:23:45 TIMER: Check tournament...
04.11 07:23:45 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:25' OR rounddate = '2016-04-11 07:25' AND status <> 'finished'
04.11 07:23:45 DB: SELECT * FROM battle WHERE endtime >= '1478233.54590234' AND avaliable = true AND finished <> true
04.11 07:23:45 TIMER: Check tournament: 3ms
04.11 07:23:45 TIMER: Clans cache...
04.11 07:23:45 TIMER: Clans cache: 0ms
04.11 07:23:45 TIMER: Check tournament...
04.11 07:23:45 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:26' OR rounddate = '2016-04-11 07:26' AND status <> 'finished'
04.11 07:23:45 DB: SELECT * FROM battle WHERE endtime >= '1478233.60591587' AND avaliable = true AND finished <> true
04.11 07:23:45 TIMER: Check tournament: 1ms
04.11 07:23:45 TIMER: Clans cache...
04.11 07:23:45 TIMER: Clans cache: 0ms
04.11 07:23:45 TIMER: Check tournament...
04.11 07:23:45 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:27' OR rounddate = '2016-04-11 07:27' AND status <> 'finished'
04.11 07:23:45 DB: SELECT * FROM battle WHERE endtime >= '1478233.66592594' AND avaliable = true AND finished <> true
04.11 07:23:45 TIMER: Check tournament: 1ms
04.11 07:23:45 TIMER: Clans cache...
04.11 07:23:45 TIMER: Clans cache: 0ms
04.11 07:23:45 TIMER: Check tournament...
04.11 07:23:45 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:28' OR rounddate = '2016-04-11 07:28' AND status <> 'finished'
04.11 07:23:45 DB: SELECT * FROM battle WHERE endtime >= '1478233.72593651' AND avaliable = true AND finished <> true
04.11 07:23:45 TIMER: Check tournament: 1ms
04.11 07:29:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:29:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:29:30 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:29:30 TIME: core/server.query : 1.99 ms
04.11 07:29:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:29:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 07:29:30 TIME: core/user.isOnlineID : 0.07 ms
04.11 07:29:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:29:30 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:29:30 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 07:29:30 STATS: cache [user], database [345 calls, 0 reads, 0 writes]
04.11 07:29:30 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 07:29:30 READDB: SELECT * FROM Users WHERE ID = 116
04.11 07:29:30 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.66 ms]
04.11 07:29:30 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 07:29:30 QUEUE: vdl.0 (thread) response core/cache.get
04.11 07:29:30 TIME: core/cache.get : 4.85 ms
04.11 07:29:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:29:30 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:29:30 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 07:29:30 STATS: cache [questdata], database [345 calls, 0 reads, 0 writes]
04.11 07:29:30 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 07:29:30 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 07:29:30 QUEUE: vdl.0 (thread) response core/cache.get
04.11 07:29:30 TIME: core/cache.get : 1.96 ms
04.11 07:29:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:29:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:29:30 TIME: core/user.loginPost : 0.15 ms
04.11 07:29:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:29:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:29:36 TIME: core/cache.update : 0.23 ms
04.11 07:29:36 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 07:29:45 TIMER: Clans cache...
04.11 07:29:45 TIMER: Clans cache: 0ms
04.11 07:29:45 TIMER: Check tournament...
04.11 07:29:45 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:29' OR rounddate = '2016-04-11 07:29' AND status <> 'finished'
04.11 07:29:45 DB: SELECT * FROM battle WHERE endtime >= '1478233.78594759' AND avaliable = true AND finished <> true
04.11 07:29:45 TIMER: Check tournament: 3ms
04.11 07:29:46 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:29:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:29:46 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:29:46 TIME: core/server.query : 3.9 ms
04.11 07:29:46 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:29:46 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:29:46 TIME: core/user.isOnlineID : 0.13 ms
04.11 07:29:46 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:29:46 READDB: SELECT * FROM Users WHERE ID = 107
04.11 07:29:46 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:29:46 TIME: core/cache.get : 2.4 ms
04.11 07:29:46 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:29:46 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 07:29:46 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:29:46 TIME: core/cache.get : 1.39 ms
04.11 07:29:46 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:29:46 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:29:46 TIME: core/user.loginPost : 0.12 ms
04.11 07:29:54 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:29:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:29:54 TIME: vdl/cache.battle.findRandom : 0.11 ms
04.11 07:29:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:29:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:29:56 TIME: core/cache.update : 0.21 ms
04.11 07:29:56 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 07:29:56 DB: SELECT nextval('Battle_id_seq') AS id
04.11 07:29:56 READDB: SELECT ID FROM Battle WHERE ID = 54
04.11 07:29:56 READDB: INSERT INTO Battle (ID) VALUES (54)
04.11 07:29:56 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:29:56 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 07:29:56 STATS: cache [battle], database [371 calls, 0 reads, 0 writes]
04.11 07:29:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:29:56 READDB: SELECT * FROM Battle WHERE ID = 54
04.11 07:29:56 DB: SELECT name FROM users WHERE id=116
04.11 07:29:56 DB: SELECT name FROM users WHERE id=107
04.11 07:29:56 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 54, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 07:29:56 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 54, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 07:29:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:29:56 TIME: vdl/cache.battle.findRandom : 49.87 ms
04.11 07:29:56 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:30:01 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481833.79646698', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 54
04.11 07:30:11 BLOCKREMOVE: battle 54 removed
04.11 07:30:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 54, _type => vdl/cache.battle.infoRoom }
04.11 07:30:25 READDB: SELECT * FROM Battle WHERE ID = 54
04.11 07:30:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:30:25 TIME: vdl/cache.battle.infoRoom : 1.45 ms
04.11 07:30:36 BLOCKREMOVE: battle 54 removed
04.11 07:30:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 54, _type => vdl/cache.battle.infoRoom }
04.11 07:30:43 READDB: SELECT * FROM Battle WHERE ID = 54
04.11 07:30:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:30:43 TIME: vdl/cache.battle.infoRoom : 1.2 ms
04.11 07:30:45 TIMER: Clans cache...
04.11 07:30:45 TIMER: Clans cache: 0ms
04.11 07:30:45 TIMER: Check tournament...
04.11 07:30:45 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:30' OR rounddate = '2016-04-11 07:30' AND status <> 'finished'
04.11 07:30:45 DB: SELECT * FROM battle WHERE endtime >= '1478233.84597238' AND avaliable = true AND finished <> true
04.11 07:30:45 TIMER: Check tournament: 6ms
04.11 07:30:54 BLOCKREMOVE: battle 54 removed
04.11 07:31:45 TIMER: Clans cache...
04.11 07:31:45 TIMER: Clans cache: 0ms
04.11 07:31:45 TIMER: Check tournament...
04.11 07:31:45 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:31' OR rounddate = '2016-04-11 07:31' AND status <> 'finished'
04.11 07:31:45 DB: SELECT * FROM battle WHERE endtime >= '1478233.9059885' AND avaliable = true AND finished <> true
04.11 07:31:45 TIMER: Check tournament: 2ms
04.11 07:32:02 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:32:02 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:32:02 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 53 }, { id => 54 }}, errorCode => ok, _type => core/server.query }
04.11 07:32:02 TIME: core/server.query : 1.23 ms
04.11 07:32:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 54, _type => vdl/cache.battle.infoRoom }
04.11 07:32:02 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 07:32:02 STATS: cache [battle], segments [6 calls, 2 hits, 3 misses]
04.11 07:32:02 STATS: cache [battle], database [497 calls, 3 reads, 1 writes]
04.11 07:32:02 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:32:02 READDB: SELECT * FROM Battle WHERE ID = 54
04.11 07:32:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:32:02 TIME: vdl/cache.battle.infoRoom : 2.07 ms
04.11 07:32:02 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 54, _type => vdl/cache.battle.deleteRoom }
04.11 07:32:02 ROOM: deleted room 54
04.11 07:32:02 DB: DELETE FROM Battle WHERE ID = 54
04.11 07:32:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:32:02 TIME: vdl/cache.battle.deleteRoom : 20.1 ms
04.11 07:32:02 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 54, _type => vdl/cache.battle.finishRoom }
04.11 07:32:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:32:02 TIME: vdl/cache.battle.finishRoom : 0.18 ms
04.11 07:32:02 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:32:02 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 07:32:02 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
04.11 07:32:02 STATS: cache [user], database [497 calls, 2 reads, 2 writes]
04.11 07:32:02 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 07:32:02 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.43 ms]
04.11 07:32:02 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.15 ms]
04.11 07:32:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:32:02 TIME: core/cache.update : 0.56 ms
04.11 07:32:02 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:32:02 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 07:32:02 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
04.11 07:32:02 STATS: cache [questdata], database [497 calls, 2 reads, 0 writes]
04.11 07:32:02 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 07:32:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:32:02 TIME: core/cache.update : 0.42 ms
04.11 07:32:02 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:32:02 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:32:02 TIME: core/user.logoutPost : 0.13 ms
04.11 07:32:03 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:32:03 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 07:32:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 54, _type => vdl/cache.battle.infoRoom }
04.11 07:32:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:32:04 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 07:32:04 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { dice => 0, from => [0,0], name => skip, side => 2, type => battle.task, messageType => battle.sendtask, to => [0,0], _type => battle.task, battleId => 54 } }
04.11 07:32:04 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 07:32:04 TIME: core/user.sendTo : 0.12 ms
04.11 07:32:04 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 54, _type => vdl/cache.battle.makeTurn }
04.11 07:32:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 07:32:04 TIME: vdl/cache.battle.makeTurn : 0.17 ms
04.11 07:32:08 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'true', endtime = E'1481830', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 54
04.11 07:32:13 BLOCKREMOVE: user 107 removed
04.11 07:32:13 BLOCKREMOVE: questdata 107 removed
04.11 07:32:29 TIMER: Starting timer...
04.11 07:32:29 TIMER: Timer running...
04.11 07:32:29 DB: SELECT * FROM GameVars
04.11 07:32:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 07:32:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 07:32:29 DB: SELECT * FROM Shops WHERE ID = 1
04.11 07:32:29 TEMP: load ./tmp/quest_daily_ids
04.11 07:32:29 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 07:32:29 TEMP: save ./tmp/quest_daily_ids
04.11 07:32:29 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 07:32:29 QUEUE: vdl.0 (thread) response server.login
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM LocalizationStrings
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 16.77 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM GameVars
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 3.31 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 2.67 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 1.96 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 1.79 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 2.6 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 07:32:29 TIME: core/quest.getDaily : 0.43 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM UserAttributeTypes
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 1.22 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM UserVariableTypes
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 2.84 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 07:32:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 17.07 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM ItemGroups
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 3.06 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM Bundles ORDER BY ID
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 1.52 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 1.46 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 07:32:29 TIME: core/shop.getList : 0.14 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM EffectAttributeTypes
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 0.93 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM Effects
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 1.02 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 07:32:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 1.88 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 07:32:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 1.92 ms
04.11 07:32:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 07:32:29 DB: SELECT * FROM Badges
04.11 07:32:29 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:32:29 TIME: core/server.query : 2.94 ms
04.11 07:32:29 TIMER: Clans cache...
04.11 07:32:29 TIMER: Clans cache: 0ms
04.11 07:32:29 TIMER: Check tournament...
04.11 07:32:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:33' OR rounddate = '2016-04-11 07:33' AND status <> 'finished'
04.11 07:32:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.00933139' AND avaliable = true AND finished <> true
04.11 07:32:29 TIMER: Check tournament: 3ms
04.11 07:32:29 TIMER: Clans cache...
04.11 07:32:29 TIMER: Clans cache: 0ms
04.11 07:32:29 TIMER: Check tournament...
04.11 07:32:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:34' OR rounddate = '2016-04-11 07:34' AND status <> 'finished'
04.11 07:32:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.06934404' AND avaliable = true AND finished <> true
04.11 07:32:29 TIMER: Check tournament: 3ms
04.11 07:32:29 TIMER: Clans cache...
04.11 07:32:29 TIMER: Clans cache: 0ms
04.11 07:32:29 TIMER: Check tournament...
04.11 07:32:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:35' OR rounddate = '2016-04-11 07:35' AND status <> 'finished'
04.11 07:32:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.12935543' AND avaliable = true AND finished <> true
04.11 07:32:29 TIMER: Check tournament: 1ms
04.11 07:32:29 TIMER: Clans cache...
04.11 07:32:29 TIMER: Clans cache: 0ms
04.11 07:32:29 TIMER: Check tournament...
04.11 07:32:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:36' OR rounddate = '2016-04-11 07:36' AND status <> 'finished'
04.11 07:32:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.18937077' AND avaliable = true AND finished <> true
04.11 07:32:29 TIMER: Check tournament: 1ms
04.11 07:37:08 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:37:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:37:08 QUEUE: vdl.0 (thread) response core/server.query
04.11 07:37:08 TIME: core/server.query : 2.62 ms
04.11 07:37:08 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:37:08 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 07:37:08 TIME: core/user.isOnlineID : 0.09 ms
04.11 07:37:08 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:37:08 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:37:08 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 07:37:08 STATS: cache [user], database [280 calls, 0 reads, 0 writes]
04.11 07:37:08 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 07:37:08 READDB: SELECT * FROM Users WHERE ID = 107
04.11 07:37:08 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.07 ms]
04.11 07:37:08 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 07:37:08 QUEUE: vdl.0 (thread) response core/cache.get
04.11 07:37:08 TIME: core/cache.get : 4.23 ms
04.11 07:37:08 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:37:08 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:37:08 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 07:37:08 STATS: cache [questdata], database [280 calls, 0 reads, 0 writes]
04.11 07:37:08 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 07:37:08 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 07:37:08 QUEUE: vdl.0 (thread) response core/cache.get
04.11 07:37:08 TIME: core/cache.get : 1.7 ms
04.11 07:37:08 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:37:08 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:37:08 TIME: core/user.loginPost : 0.13 ms
04.11 07:37:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 07:37:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 07:37:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 07:37:11 TIME: core/server.query : 2.95 ms
04.11 07:37:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 07:37:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:37:11 TIME: core/user.isOnlineID : 0.11 ms
04.11 07:37:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 07:37:11 READDB: SELECT * FROM Users WHERE ID = 116
04.11 07:37:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 07:37:11 TIME: core/cache.get : 1.77 ms
04.11 07:37:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 07:37:11 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 07:37:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 07:37:11 TIME: core/cache.get : 1.13 ms
04.11 07:37:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 07:37:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:37:11 TIME: core/user.loginPost : 0.11 ms
04.11 07:37:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 07:37:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:37:14 TIME: core/cache.update : 0.2 ms
04.11 07:37:15 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:37:18 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 07:37:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:37:18 TIME: vdl/cache.battle.findRandom : 0.12 ms
04.11 07:37:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 07:37:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:37:19 TIME: core/cache.update : 0.19 ms
04.11 07:37:20 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 07:37:25 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 07:37:25 DB: SELECT nextval('Battle_id_seq') AS id
04.11 07:37:25 READDB: SELECT ID FROM Battle WHERE ID = 55
04.11 07:37:25 READDB: INSERT INTO Battle (ID) VALUES (55)
04.11 07:37:25 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 07:37:25 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 07:37:25 STATS: cache [battle], database [296 calls, 0 reads, 0 writes]
04.11 07:37:25 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:37:25 READDB: SELECT * FROM Battle WHERE ID = 55
04.11 07:37:25 DB: SELECT name FROM users WHERE id=116
04.11 07:37:25 DB: SELECT name FROM users WHERE id=107
04.11 07:37:25 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 55, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 07:37:25 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 55, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 07:37:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 07:37:25 TIME: vdl/cache.battle.findRandom : 39.66 ms
04.11 07:37:29 TIMER: Clans cache...
04.11 07:37:29 TIMER: Clans cache: 0ms
04.11 07:37:29 TIMER: Check tournament...
04.11 07:37:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:37' OR rounddate = '2016-04-11 07:37' AND status <> 'finished'
04.11 07:37:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.24938393' AND avaliable = true AND finished <> true
04.11 07:37:29 TIMER: Check tournament: 5ms
04.11 07:37:30 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481834.2450849', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 55
04.11 07:37:40 BLOCKREMOVE: battle 55 removed
04.11 07:37:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 55, _type => vdl/cache.battle.infoRoom }
04.11 07:37:43 READDB: SELECT * FROM Battle WHERE ID = 55
04.11 07:37:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:37:43 TIME: vdl/cache.battle.infoRoom : 1.19 ms
04.11 07:37:53 BLOCKREMOVE: battle 55 removed
04.11 07:38:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 55, _type => vdl/cache.battle.infoRoom }
04.11 07:38:04 READDB: SELECT * FROM Battle WHERE ID = 55
04.11 07:38:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:38:04 TIME: vdl/cache.battle.infoRoom : 1.36 ms
04.11 07:38:14 BLOCKREMOVE: battle 55 removed
04.11 07:38:29 TIMER: Clans cache...
04.11 07:38:29 TIMER: Clans cache: 0ms
04.11 07:38:29 TIMER: Check tournament...
04.11 07:38:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:38' OR rounddate = '2016-04-11 07:38' AND status <> 'finished'
04.11 07:38:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.30939979' AND avaliable = true AND finished <> true
04.11 07:38:29 TIMER: Check tournament: 3ms
04.11 07:38:29 TIMER: Clans cache...
04.11 07:38:29 TIMER: Clans cache: 0ms
04.11 07:38:29 TIMER: Check tournament...
04.11 07:38:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:39' OR rounddate = '2016-04-11 07:39' AND status <> 'finished'
04.11 07:38:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.36941348' AND avaliable = true AND finished <> true
04.11 07:38:29 TIMER: Check tournament: 1ms
04.11 07:39:32 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 55, _type => vdl/cache.battle.infoRoom }
04.11 07:39:32 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 07:39:32 STATS: cache [battle], segments [6 calls, 2 hits, 3 misses]
04.11 07:39:32 STATS: cache [battle], database [423 calls, 3 reads, 1 writes]
04.11 07:39:32 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:39:32 READDB: SELECT * FROM Battle WHERE ID = 55
04.11 07:39:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 07:39:32 TIME: vdl/cache.battle.infoRoom : 1.5 ms
04.11 07:39:32 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 55, _type => vdl/cache.battle.makeTurn }
04.11 07:39:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 07:39:32 TIME: vdl/cache.battle.makeTurn : 0.17 ms
04.11 07:39:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'false', endtime = E'1481830', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 55
04.11 07:39:47 BLOCKREMOVE: battle 55 removed
04.11 07:40:29 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:40:29 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:40:29 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 53 }, { id => 55 }}, errorCode => ok, _type => core/server.query }
04.11 07:40:29 TIME: core/server.query : 1.14 ms
04.11 07:40:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 55, _type => vdl/cache.battle.infoRoom }
04.11 07:40:29 READDB: SELECT * FROM Battle WHERE ID = 55
04.11 07:40:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 07:40:29 TIME: vdl/cache.battle.infoRoom : 1.19 ms
04.11 07:40:29 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 55, _type => vdl/cache.battle.deleteRoom }
04.11 07:40:29 ROOM: deleted room 55
04.11 07:40:29 DB: DELETE FROM Battle WHERE ID = 55
04.11 07:40:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:40:29 TIME: vdl/cache.battle.deleteRoom : 20.87 ms
04.11 07:40:29 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 55, _type => vdl/cache.battle.finishRoom }
04.11 07:40:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:40:29 TIME: vdl/cache.battle.finishRoom : 0.17 ms
04.11 07:40:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:40:29 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 07:40:29 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
04.11 07:40:29 STATS: cache [user], database [480 calls, 2 reads, 2 writes]
04.11 07:40:29 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 07:40:29 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.02 ms]
04.11 07:40:29 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.16 ms]
04.11 07:40:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 07:40:29 TIME: core/cache.update : 0.69 ms
04.11 07:40:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:40:29 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 07:40:29 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
04.11 07:40:29 STATS: cache [questdata], database [480 calls, 2 reads, 0 writes]
04.11 07:40:29 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 07:40:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:40:29 TIME: core/cache.update : 0.79 ms
04.11 07:40:29 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:40:29 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:40:29 TIME: core/user.logoutPost : 0.34 ms
04.11 07:40:29 TIMER: Clans cache...
04.11 07:40:29 TIMER: Clans cache: 0ms
04.11 07:40:29 TIMER: Check tournament...
04.11 07:40:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:40' OR rounddate = '2016-04-11 07:40' AND status <> 'finished'
04.11 07:40:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.42942407' AND avaliable = true AND finished <> true
04.11 07:40:29 TIMER: Check tournament: 1ms
04.11 07:40:29 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:40:29 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 07:40:34 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'true', endtime = E'1481830', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 55
04.11 07:40:39 BLOCKREMOVE: user 107 removed
04.11 07:40:39 BLOCKREMOVE: questdata 107 removed
04.11 07:40:44 BLOCKREMOVE: battle 55 removed
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:41' OR rounddate = '2016-04-11 07:41' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.48943757' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 2ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:42' OR rounddate = '2016-04-11 07:42' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.54944942' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 2ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:43' OR rounddate = '2016-04-11 07:43' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.60946145' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 2ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:44' OR rounddate = '2016-04-11 07:44' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.66947944' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 2ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:45' OR rounddate = '2016-04-11 07:45' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.72949345' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 1ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:46' OR rounddate = '2016-04-11 07:46' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.78950599' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 1ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:47' OR rounddate = '2016-04-11 07:47' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.84951826' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 2ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:48' OR rounddate = '2016-04-11 07:48' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.90952877' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 1ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:49' OR rounddate = '2016-04-11 07:49' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478234.96953969' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 2ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:50' OR rounddate = '2016-04-11 07:50' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.02955386' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 4ms
04.11 07:41:29 TIMER: Clans cache...
04.11 07:41:29 TIMER: Clans cache: 0ms
04.11 07:41:29 TIMER: Check tournament...
04.11 07:41:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:51' OR rounddate = '2016-04-11 07:51' AND status <> 'finished'
04.11 07:41:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.08956437' AND avaliable = true AND finished <> true
04.11 07:41:29 TIMER: Check tournament: 1ms
04.11 07:51:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 07:51:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 07:51:38 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 07:51:38 TIME: core/server.query : 1.79 ms
04.11 07:51:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 07:51:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 07:51:38 TIME: core/user.isOnlineID : 0.11 ms
04.11 07:51:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 07:51:38 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 07:51:38 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
04.11 07:51:38 STATS: cache [user], database [1149 calls, 2 reads, 3 writes]
04.11 07:51:38 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
04.11 07:51:38 READDB: SELECT * FROM Users WHERE ID = 107
04.11 07:51:38 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2 ms]
04.11 07:51:38 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.2 ms]
04.11 07:51:38 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 07:51:38 TIME: core/cache.get : 2.43 ms
04.11 07:51:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 07:51:38 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 07:51:38 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
04.11 07:51:38 STATS: cache [questdata], database [1149 calls, 2 reads, 1 writes]
04.11 07:51:38 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
04.11 07:51:38 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 07:51:38 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 07:51:38 TIME: core/cache.get : 1.9 ms
04.11 07:51:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 07:51:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 07:51:38 TIME: core/user.loginPost : 0.12 ms
04.11 07:51:43 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 07:51:43 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 07:51:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 53 }}, errorCode => ok, _type => core/server.query }
04.11 07:51:43 TIME: core/server.query : 1.21 ms
04.11 07:51:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 53, _type => vdl/cache.battle.infoRoom }
04.11 07:51:43 STATS: cache [battle], get [8 calls, 2 cache hits, 5 cache misses, 0 same version, 0 not found]
04.11 07:51:43 STATS: cache [battle], segments [13 calls, 7 hits, 5 misses]
04.11 07:51:43 STATS: cache [battle], database [1154 calls, 5 reads, 3 writes]
04.11 07:51:43 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 07:51:43 READDB: SELECT * FROM Battle WHERE ID = 53
04.11 07:51:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 07:51:43 TIME: vdl/cache.battle.infoRoom : 1.38 ms
04.11 07:51:43 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 53, _type => vdl/cache.battle.deleteRoom }
04.11 07:51:43 ROOM: deleted room 53
04.11 07:51:43 DB: DELETE FROM Battle WHERE ID = 53
04.11 07:51:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 07:51:43 TIME: vdl/cache.battle.deleteRoom : 28.95 ms
04.11 07:51:43 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 53, _type => vdl/cache.battle.finishRoom }
04.11 07:51:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 07:51:43 TIME: vdl/cache.battle.finishRoom : 0.17 ms
04.11 07:51:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 07:51:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:51:43 TIME: core/cache.update : 0.17 ms
04.11 07:51:43 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 07:51:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 07:51:43 TIME: core/cache.update : 0.21 ms
04.11 07:51:43 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 07:51:43 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 07:51:43 TIME: core/user.logoutPost : 0.12 ms
04.11 07:51:43 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 07:51:43 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 07:51:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'true', endtime = E'1481830', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 53
04.11 07:51:53 BLOCKREMOVE: user 107 removed
04.11 07:51:53 BLOCKREMOVE: questdata 107 removed
04.11 07:51:58 BLOCKREMOVE: battle 53 removed
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:52' OR rounddate = '2016-04-11 07:52' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.14957525' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:53' OR rounddate = '2016-04-11 07:53' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.20958557' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:54' OR rounddate = '2016-04-11 07:54' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.26960086' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:55' OR rounddate = '2016-04-11 07:55' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.32961201' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:56' OR rounddate = '2016-04-11 07:56' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.38962311' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:57' OR rounddate = '2016-04-11 07:57' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.44963356' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:58' OR rounddate = '2016-04-11 07:58' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.50964415' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 2ms
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 07:59' OR rounddate = '2016-04-11 07:59' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.56965743' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
04.11 07:52:29 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 2, 0)
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 08:00' OR rounddate = '2016-04-11 08:00' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.62966754' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
04.11 07:52:29 TIMER: Clans cache...
04.11 07:52:29 TIMER: Clans cache: 0ms
04.11 07:52:29 TIMER: Check tournament...
04.11 07:52:29 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 08:01' OR rounddate = '2016-04-11 08:01' AND status <> 'finished'
04.11 07:52:29 DB: SELECT * FROM battle WHERE endtime >= '1478235.68967743' AND avaliable = true AND finished <> true
04.11 07:52:29 TIMER: Check tournament: 1ms
