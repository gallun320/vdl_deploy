29.10 16:00:18 TIMER: Starting timer...
29.10 16:00:18 TIMER: Timer running...
29.10 16:00:18 DB: SELECT * FROM GameVars
29.10 16:00:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 16:00:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 16:00:18 DB: SELECT * FROM Shops WHERE ID = 1
29.10 16:00:18 TEMP: load ./tmp/quest_daily_ids
29.10 16:00:18 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 16:00:18 TEMP: save ./tmp/quest_daily_ids
29.10 16:00:18 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 16:00:18 QUEUE: vdl.0 (thread) response server.login
29.10 16:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 16:00:18 DB: SELECT * FROM LocalizationStrings
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 63.38 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM GameVars
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 0.61 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 1.23 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 1.06 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 0.97 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 2.82 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 16:00:19 TIME: core/quest.getDaily : 0.04 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM UserAttributeTypes
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 27.21 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM UserVariableTypes
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 1.88 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 16:00:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 8.96 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM ItemGroups
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 0.87 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM Bundles ORDER BY ID
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 33.77 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 23.49 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 16:00:19 TIME: core/shop.getList : 0.04 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM EffectAttributeTypes
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 1.29 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM Effects
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 1.09 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 16:00:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 1.18 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 16:00:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 1.09 ms
29.10 16:00:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 16:00:19 DB: SELECT * FROM Badges
29.10 16:00:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:00:19 TIME: core/server.query : 12.62 ms
29.10 16:01:18 TIMER: Clans cache...
29.10 16:01:18 TIMER: Clans cache: 0ms
29.10 16:01:18 TIMER: Check tournament...
29.10 16:01:18 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:01' OR rounddate = '2016-29-10 16:01' AND status <> 'finished'
29.10 16:01:18 TIMER: Check tournament: 2ms
29.10 16:01:18 TIMER: Clans cache...
29.10 16:01:18 TIMER: Clans cache: 0ms
29.10 16:01:18 TIMER: Check tournament...
29.10 16:01:18 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:02' OR rounddate = '2016-29-10 16:02' AND status <> 'finished'
29.10 16:01:18 TIMER: Check tournament: 1ms
29.10 16:01:18 TIMER: Clans cache...
29.10 16:01:18 TIMER: Clans cache: 0ms
29.10 16:01:18 TIMER: Check tournament...
29.10 16:01:18 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:03' OR rounddate = '2016-29-10 16:03' AND status <> 'finished'
29.10 16:01:18 TIMER: Check tournament: 2ms
29.10 16:01:18 TIMER: Clans cache...
29.10 16:01:18 TIMER: Clans cache: 0ms
29.10 16:01:18 TIMER: Check tournament...
29.10 16:01:18 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:04' OR rounddate = '2016-29-10 16:04' AND status <> 'finished'
29.10 16:01:18 TIMER: Check tournament: 1ms
29.10 16:01:18 TIMER: Clans cache...
29.10 16:01:18 TIMER: Clans cache: 0ms
29.10 16:01:18 TIMER: Check tournament...
29.10 16:01:18 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:05' OR rounddate = '2016-29-10 16:05' AND status <> 'finished'
29.10 16:01:18 TIMER: Check tournament: 1ms
29.10 16:01:18 TIMER: Clans cache...
29.10 16:01:18 TIMER: Clans cache: 0ms
29.10 16:01:18 TIMER: Check tournament...
29.10 16:01:18 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:06' OR rounddate = '2016-29-10 16:06' AND status <> 'finished'
29.10 16:01:18 TIMER: Check tournament: 0ms
29.10 16:01:18 TIMER: Clans cache...
29.10 16:01:18 TIMER: Clans cache: 0ms
29.10 16:07:19 TIMER: Check tournament...
29.10 16:07:19 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:07' OR rounddate = '2016-29-10 16:07' AND status <> 'finished'
29.10 16:07:19 TIMER: Check tournament: 1ms
29.10 16:07:19 TIMER: Clans cache...
29.10 16:07:19 TIMER: Clans cache: 0ms
29.10 16:07:19 TIMER: Check tournament...
29.10 16:07:19 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:08' OR rounddate = '2016-29-10 16:08' AND status <> 'finished'
29.10 16:07:19 TIMER: Check tournament: 0ms
29.10 16:07:19 TIMER: Clans cache...
29.10 16:07:19 TIMER: Clans cache: 0ms
29.10 16:07:19 TIMER: Check tournament...
29.10 16:07:19 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:09' OR rounddate = '2016-29-10 16:09' AND status <> 'finished'
29.10 16:07:19 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:07:19 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
29.10 16:07:19 STATS: cache [tournament], database [540 calls, 0 reads, 0 writes]
29.10 16:07:19 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 16:07:19 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 16:07:19 TIMER: Check tournament: 3ms
29.10 16:09:29 BLOCKREMOVE: tournament 1 removed
29.10 16:11:42 TIMER: Starting timer...
29.10 16:11:42 TIMER: Timer running...
29.10 16:11:42 DB: SELECT * FROM GameVars
29.10 16:11:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 16:11:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 16:11:42 DB: SELECT * FROM Shops WHERE ID = 1
29.10 16:11:42 TEMP: load ./tmp/quest_daily_ids
29.10 16:11:42 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 16:11:42 TEMP: save ./tmp/quest_daily_ids
29.10 16:11:42 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 16:11:42 QUEUE: vdl.0 (thread) response server.login
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM LocalizationStrings
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 6.98 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM GameVars
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.57 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.76 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.42 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.74 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.84 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 16:11:42 TIME: core/quest.getDaily : 0.02 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM UserAttributeTypes
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.33 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM UserVariableTypes
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.42 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 16:11:42 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 1.2 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM ItemGroups
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.36 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM Bundles ORDER BY ID
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.47 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.41 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 16:11:42 TIME: core/shop.getList : 0.02 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM EffectAttributeTypes
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.39 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM Effects
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.3 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 16:11:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.75 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 16:11:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.53 ms
29.10 16:11:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 16:11:42 DB: SELECT * FROM Badges
29.10 16:11:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:11:42 TIME: core/server.query : 0.42 ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:12' OR rounddate = '2016-29-10 16:12' AND status <> 'finished'
29.10 16:11:42 TIMER: Check tournament: 2ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:13' OR rounddate = '2016-29-10 16:13' AND status <> 'finished'
29.10 16:11:42 TIMER: Check tournament: 2ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:14' OR rounddate = '2016-29-10 16:14' AND status <> 'finished'
29.10 16:11:42 TIMER: Check tournament: 1ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:15' OR rounddate = '2016-29-10 16:15' AND status <> 'finished'
29.10 16:11:42 TIMER: Check tournament: 1ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:16' OR rounddate = '2016-29-10 16:16' AND status <> 'finished'
29.10 16:11:42 TIMER: Check tournament: 1ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:17' OR rounddate = '2016-29-10 16:17' AND status <> 'finished'
29.10 16:11:42 TIMER: Check tournament: 0ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:18' OR rounddate = '2016-29-10 16:18' AND status <> 'finished'
29.10 16:11:42 TIMER: Check tournament: 1ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:19' OR rounddate = '2016-29-10 16:19' AND status <> 'finished'
29.10 16:11:42 TIMER: Check tournament: 0ms
29.10 16:11:42 TIMER: Clans cache...
29.10 16:11:42 TIMER: Clans cache: 0ms
29.10 16:11:42 TIMER: Check tournament...
29.10 16:11:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:20' OR rounddate = '2016-29-10 16:20' AND status <> 'finished'
29.10 16:11:42 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:11:42 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
29.10 16:11:42 STATS: cache [tournament], database [541 calls, 0 reads, 0 writes]
29.10 16:11:42 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 16:11:42 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 16:11:42 TIMER: Check tournament: 2ms
29.10 16:20:53 BLOCKREMOVE: tournament 1 removed
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:21' OR rounddate = '2016-29-10 16:21' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:22' OR rounddate = '2016-29-10 16:22' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:23' OR rounddate = '2016-29-10 16:23' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:24' OR rounddate = '2016-29-10 16:24' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:25' OR rounddate = '2016-29-10 16:25' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:26' OR rounddate = '2016-29-10 16:26' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:27' OR rounddate = '2016-29-10 16:27' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:28' OR rounddate = '2016-29-10 16:28' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:29' OR rounddate = '2016-29-10 16:29' AND status <> 'finished'
29.10 16:21:42 TIMER: Check tournament: 1ms
29.10 16:21:42 TIMER: Clans cache...
29.10 16:21:42 TIMER: Clans cache: 0ms
29.10 16:21:42 TIMER: Check tournament...
29.10 16:21:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:30' OR rounddate = '2016-29-10 16:30' AND status <> 'finished'
29.10 16:21:42 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 16:21:42 STATS: cache [tournament], segments [2 calls, 0 hits, 1 misses]
29.10 16:21:42 STATS: cache [tournament], database [1141 calls, 1 reads, 0 writes]
29.10 16:21:42 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 16:21:42 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 16:21:42 TIMER: Check tournament: 3ms
29.10 16:30:53 BLOCKREMOVE: tournament 1 removed
29.10 16:31:42 TIMER: Clans cache...
29.10 16:31:42 TIMER: Clans cache: 0ms
29.10 16:31:42 TIMER: Check tournament...
29.10 16:31:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:31' OR rounddate = '2016-29-10 16:31' AND status <> 'finished'
29.10 16:31:42 TIMER: Check tournament: 1ms
29.10 16:31:59 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
29.10 16:31:59 DB: SELECT * FROM users
29.10 16:31:59 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:31:59 TIME: core/server.query : 120.86 ms
29.10 16:31:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid112', _type => core/server.query }
29.10 16:31:59 DB: SELECT ID FROM Users WHERE Name = E'uid112'
29.10 16:31:59 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:31:59 TIME: core/server.query : 2.35 ms
29.10 16:31:59 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
29.10 16:31:59 DB: SELECT nextval('Users_id_seq') AS id
29.10 16:31:59 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:31:59 TIME: core/server.query : 130.38 ms
29.10 16:31:59 NET: vdl.0 (thread) request core/user.register { password => uid112, name => uid112, fullParams => { password => uid112, name => uid112, networkid => , networktype => , messageType => user.register, id => 112 }, networkid => , connectionID => 59624534, networktype => , email => , id => 112, _type => core/user.register }
29.10 16:31:59 QUEUE: vdl.0 (thread) response core/user.register
29.10 16:31:59 TIME: core/user.register : 0.12 ms
29.10 16:31:59 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (112,E'uid112',E'',E'',E'uid112',E'', now())
29.10 16:31:59 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (112, 0)
29.10 16:31:59 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:31:59 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
29.10 16:31:59 STATS: cache [user], database [1217 calls, 0 reads, 0 writes]
29.10 16:31:59 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
29.10 16:31:59 READDB: SELECT * FROM Users WHERE ID = 112
29.10 16:31:59 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.74 ms]
29.10 16:31:59 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
29.10 16:31:59 READDB: SELECT * FROM Users WHERE ID = 1
29.10 16:31:59 READDB: SELECT ID FROM UserQuests WHERE ID = 112
29.10 16:31:59 READDB: INSERT INTO UserQuests (ID) VALUES (112)
29.10 16:31:59 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid112, name => uid112, _isNotify => true, fullParams => { password => uid112, name => uid112, networkid => , networktype => , messageType => user.register, id => 112 }, networkid => , connectionID => 59624534, networktype => , email => , id => 112, _type => core/user.registerResponse }
29.10 16:32:04 WRITEDB: UPDATE Users SET name = E'uid112', deleted = E'false', email = E'', networktype = E'  ', password = E'uid112', isbanned = E'false', regdate = E'2016-10-29 16:31:59.278542+03', language = E'  ', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}' WHERE ID = 112
29.10 16:32:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid112' AND Password = E'uid112', _type => core/server.query }
29.10 16:32:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid112' AND Password = E'uid112'
29.10 16:32:05 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid112, networkid => , isbanned => false, id => 112 }}, errorCode => ok, _type => core/server.query }
29.10 16:32:05 TIME: core/server.query : 2.58 ms
29.10 16:32:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 112, _type => core/user.isOnlineID }
29.10 16:32:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 16:32:05 TIME: core/user.isOnlineID : 0.11 ms
29.10 16:32:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 112, _type => core/cache.get }
29.10 16:32:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid112, deleted => false, email => , networktype =>   , password => uid112, isbanned => false, regdate => 2016-10-29 16:31:59.278542+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 112 } }
29.10 16:32:05 TIME: core/cache.get : 0.31 ms
29.10 16:32:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 112, _type => core/cache.get }
29.10 16:32:05 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:32:05 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
29.10 16:32:05 STATS: cache [questdata], database [1224 calls, 0 reads, 0 writes]
29.10 16:32:05 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
29.10 16:32:05 READDB: SELECT * FROM UserQuests WHERE ID = 112
29.10 16:32:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 112 } }
29.10 16:32:05 TIME: core/cache.get : 1.09 ms
29.10 16:32:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 112, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
29.10 16:32:05 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 16:32:05 TIME: core/user.loginPost : 0.09 ms
29.10 16:32:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 112 AND Date = 'today'::timestamp, _type => core/server.query }
29.10 16:32:05 DB: SELECT ID FROM TempUserLogins WHERE UserID = 112 AND Date = 'today'::timestamp
29.10 16:32:06 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 16:32:06 TIME: core/server.query : 58.4 ms
29.10 16:32:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477747925, lastLoginDate => 303, lastLoadDate => 1030 } }}, type => user, unlock => true, id => 112, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (112, 'today'::timestamp), _type => core/server.pending }} }
29.10 16:32:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 16:32:06 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (112, 'today'::timestamp)
29.10 16:32:06 TIME: core/cache.update : 0.29 ms
29.10 16:32:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
29.10 16:32:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 16:32:06 TIME: core/cache.update : 0.11 ms
29.10 16:32:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
29.10 16:32:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 16:32:06 TIME: core/user.logoutPost : 0.35 ms
29.10 16:32:09 BLOCKREMOVE: user 1 removed
29.10 16:32:09 WRITEDB: UPDATE Users SET name = E'uid112', deleted = E'false', email = E'', networktype = E'  ', password = E'uid112', isbanned = E'false', regdate = E'2016-10-29 16:31:59.278542+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477747925,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 112
29.10 16:32:11 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 112
29.10 16:32:19 BLOCKREMOVE: user 112 removed
29.10 16:32:21 BLOCKREMOVE: questdata 112 removed
29.10 16:32:42 TIMER: Clans cache...
29.10 16:32:42 TIMER: Clans cache: 0ms
29.10 16:32:42 TIMER: Check tournament...
29.10 16:32:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:32' OR rounddate = '2016-29-10 16:32' AND status <> 'finished'
29.10 16:32:42 TIMER: Check tournament: 1ms
29.10 16:32:42 TIMER: Clans cache...
29.10 16:32:42 TIMER: Clans cache: 0ms
29.10 16:32:42 TIMER: Check tournament...
29.10 16:32:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:33' OR rounddate = '2016-29-10 16:33' AND status <> 'finished'
29.10 16:32:42 TIMER: Check tournament: 1ms
29.10 16:32:42 TIMER: Clans cache...
29.10 16:32:42 TIMER: Clans cache: 0ms
29.10 16:32:42 TIMER: Check tournament...
29.10 16:32:42 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:34' OR rounddate = '2016-29-10 16:34' AND status <> 'finished'
29.10 16:32:42 TIMER: Check tournament: 1ms
29.10 16:32:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true, _type => core/server.query }
29.10 16:32:42 DB: SELECT id FROM battle WHERE firstid=112 OR secondid=112 AND finished <> true
29.10 16:32:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 16:32:42 TIME: core/server.query : 14.44 ms
29.10 16:32:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 16:32:42 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:32:42 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
29.10 16:32:42 STATS: cache [battle], database [1440 calls, 0 reads, 0 writes]
29.10 16:32:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 16:32:42 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 16:32:42 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 16:32:42 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 16:32:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 16:32:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 112, _type => core/cache.update }
29.10 16:32:42 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 16:32:42 STATS: cache [user], segments [10 calls, 6 hits, 3 misses]
29.10 16:32:42 STATS: cache [user], database [1440 calls, 2 reads, 2 writes]
29.10 16:32:42 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
29.10 16:32:42 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 1.25 ms]
29.10 16:32:42 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.16 ms]
29.10 16:32:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
29.10 16:32:42 TIME: core/cache.update : 0.61 ms
29.10 16:32:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 112, _type => core/cache.update }
29.10 16:32:42 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 16:32:42 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
29.10 16:32:42 STATS: cache [questdata], database [1440 calls, 1 reads, 1 writes]
29.10 16:32:42 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
29.10 16:32:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
29.10 16:32:42 TIME: core/cache.update : 0.47 ms
29.10 16:32:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 112, _type => core/user.logoutPost }
29.10 16:32:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logou29.10 16:39:27 TIMER: Starting timer...
29.10 16:39:27 TIMER: Timer running...
29.10 16:39:27 DB: SELECT * FROM GameVars
29.10 16:39:27 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 16:39:27 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 16:39:27 DB: SELECT * FROM Shops WHERE ID = 1
29.10 16:39:27 TEMP: load ./tmp/quest_daily_ids
29.10 16:39:27 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 16:39:27 TEMP: save ./tmp/quest_daily_ids
29.10 16:39:27 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 16:39:27 QUEUE: vdl.0 (thread) response server.login
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM LocalizationStrings
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 6.99 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM GameVars
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.56 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.77 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.52 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.7 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 1.1 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 16:39:27 TIME: core/quest.getDaily : 0.02 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM UserAttributeTypes
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.31 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM UserVariableTypes
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.81 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 16:39:27 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 1.14 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM ItemGroups
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.32 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM Bundles ORDER BY ID
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.62 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.38 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 16:39:27 TIME: core/shop.getList : 0.02 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM EffectAttributeTypes
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.39 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM Effects
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.47 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 16:39:27 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.64 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 16:39:27 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.77 ms
29.10 16:39:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 16:39:27 DB: SELECT * FROM Badges
29.10 16:39:27 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:39:27 TIME: core/server.query : 0.29 ms
29.10 16:39:27 TIMER: Clans cache...
29.10 16:39:27 TIMER: Clans cache: 0ms
29.10 16:39:27 TIMER: Check tournament...
29.10 16:39:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:40' OR rounddate = '2016-29-10 16:40' AND status <> 'finished'
29.10 16:39:27 TIMER: Check tournament: 0ms
29.10 16:40:29 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
29.10 16:40:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
29.10 16:40:29 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:40:29 TIME: core/server.query : 3 ms
29.10 16:40:29 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
29.10 16:40:29 QUEUE: vdl.0 (thread) response core/user.isOnlineID
29.10 16:40:29 TIME: core/user.isOnlineID : 0.12 ms
29.10 16:40:29 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
29.10 16:40:29 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:40:29 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
29.10 16:40:29 STATS: cache [user], database [63 calls, 0 reads, 0 writes]
29.10 16:40:29 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
29.10 16:40:29 READDB: SELECT * FROM Users WHERE ID = 107
29.10 16:40:29 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 6.21 ms]
29.10 16:40:29 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
29.10 16:40:29 QUEUE: vdl.0 (thread) response core/cache.get
29.10 16:40:29 TIME: core/cache.get : 6.49 ms
29.10 16:40:29 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
29.10 16:40:29 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:40:29 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
29.10 16:40:29 STATS: cache [questdata], database [63 calls, 0 reads, 0 writes]
29.10 16:40:29 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
29.10 16:40:29 READDB: SELECT * FROM UserQuests WHERE ID = 107
29.10 16:40:29 QUEUE: vdl.0 (thread) response core/cache.get
29.10 16:40:29 TIME: core/cache.get : 2.14 ms
29.10 16:40:29 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
29.10 16:40:29 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 16:40:29 TIME: core/user.loginPost : 0.21 ms
29.10 16:40:29 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 107 AND Date = 'today'::timestamp, _type => core/server.query }
29.10 16:40:29 DB: SELECT ID FROM TempUserLogins WHERE UserID = 107 AND Date = 'today'::timestamp
29.10 16:40:29 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 16:40:29 TIME: core/server.query : 2.7 ms
29.10 16:40:29 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (107, 'today'::timestamp)
29.10 16:40:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477748429, lastLoginDate => 303, lastLoadDate => 1030 } }}, type => user, unlock => false, id => 107, _type => core/cache.update }
29.10 16:40:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 16:40:37 TIME: core/cache.update : 0.21 ms
29.10 16:40:38 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 16:41:27 TIMER: Clans cache...
29.10 16:41:27 TIMER: Clans cache: 0ms
29.10 16:41:27 TIMER: Check tournament...
29.10 16:41:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:41' OR rounddate = '2016-29-10 16:41' AND status <> 'finished'
29.10 16:41:27 TIMER: Check tournament: 2ms
29.10 16:41:27 TIMER: Clans cache...
29.10 16:41:27 TIMER: Clans cache: 0ms
29.10 16:41:27 TIMER: Check tournament...
29.10 16:41:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:42' OR rounddate = '2016-29-10 16:42' AND status <> 'finished'
29.10 16:41:27 TIMER: Check tournament: 1ms
29.10 16:41:27 TIMER: Clans cache...
29.10 16:41:27 TIMER: Clans cache: 0ms
29.10 16:41:27 TIMER: Check tournament...
29.10 16:41:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:43' OR rounddate = '2016-29-10 16:43' AND status <> 'finished'
29.10 16:41:27 TIMER: Check tournament: 1ms
29.10 16:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'qwerty' AND Password = E'qwerty', _type => core/server.query }
29.10 16:44:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'qwerty' AND Password = E'qwerty'
29.10 16:44:05 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => qwerty, networkid => , isbanned => false, id => 104 }}, errorCode => ok, _type => core/server.query }
29.10 16:44:05 TIME: core/server.query : 1.22 ms
29.10 16:44:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 104, _type => core/user.isOnlineID }
29.10 16:44:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 16:44:05 TIME: core/user.isOnlineID : 0.06 ms
29.10 16:44:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 104, _type => core/cache.get }
29.10 16:44:05 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 16:44:05 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
29.10 16:44:05 STATS: cache [user], database [278 calls, 1 reads, 1 writes]
29.10 16:44:05 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
29.10 16:44:05 READDB: SELECT * FROM Users WHERE ID = 104
29.10 16:44:05 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 3.02 ms]
29.10 16:44:05 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.11 ms]
29.10 16:44:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => qwerty, deleted => false, email => , networktype =>   , password => qwerty, isbanned => false, regdate => 2016-10-28 16:12:35.945256+03, language => en, networkid => , params => { info => { city => Qwety, year => 123, email => qwrtty }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477660356, lastLoginDate => 302, lastLoadDate => 1029 }, effects => { list => [] } }}, version => 0, id => 104 } }
29.10 16:44:05 TIME: core/cache.get : 1.08 ms
29.10 16:44:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 104, _type => core/cache.get }
29.10 16:44:05 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 16:44:05 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
29.10 16:44:05 STATS: cache [questdata], database [278 calls, 1 reads, 0 writes]
29.10 16:44:05 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
29.10 16:44:05 READDB: SELECT * FROM UserQuests WHERE ID = 104
29.10 16:44:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 104 } }
29.10 16:44:05 TIME: core/cache.get : 0.56 ms
29.10 16:44:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 104, _type => core/user.loginPost, ipAddr => 172.16.20.121 }
29.10 16:44:05 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 16:44:05 TIME: core/user.loginPost : 0.04 ms
29.10 16:44:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 104 AND Date = 'today'::timestamp, _type => core/server.query }
29.10 16:44:05 DB: SELECT ID FROM TempUserLogins WHERE UserID = 104 AND Date = 'today'::timestamp
29.10 16:44:05 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 16:44:05 TIME: core/server.query : 1.15 ms
29.10 16:44:05 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (104, 'today'::timestamp)
29.10 16:44:07 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 104, _type => vdl/cache.user.getData }
29.10 16:44:07 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Qwety, year => 123, email => qwrtty }, errorCode => ok, _type => vdl/cache.user.getData }
29.10 16:44:07 TIME: vdl/cache.user.getData : 0.17 ms
29.10 16:44:11 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:44:11 DB: SELECT * FROM tournament
29.10 16:44:11 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:44:11 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
29.10 16:44:11 STATS: cache [tournament], database [285 calls, 0 reads, 0 writes]
29.10 16:44:11 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 16:44:11 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 16:44:11 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-29-10 16:50, startdate => 2016-29-10 16:50 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:44:11 TIME: vdl/cache.tournament.getAvailableTournament : 5.44 ms
29.10 16:44:12 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477748645, lastLoginDate => 303, lastLoadDate => 1030 } }}, type => user, unlock => false, id => 104, _type => core/cache.update }
29.10 16:44:12 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 16:44:12 TIME: core/cache.update : 0.17 ms
29.10 16:44:13 WRITEDB: UPDATE Users SET name = E'qwerty', deleted = E'false', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2016-10-28 16:12:35.945256+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 104
29.10 16:44:14 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 104, tournament => 1, _type => vdl/cache.tournament.addUsers }
29.10 16:44:14 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
29.10 16:44:14 TIME: vdl/cache.tournament.addUsers : 0.15 ms
29.10 16:44:14 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:44:14 DB: SELECT * FROM tournament
29.10 16:44:14 DB: SELECT name FROM users WHERE id = 104
29.10 16:44:14 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 }], battleActive => null, rounddate => 2016-29-10 16:50, startdate => 2016-29-10 16:50 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:44:14 TIME: vdl/cache.tournament.getAvailableTournament : 1.46 ms
29.10 16:44:17 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 16:50', roundinterval = E'1', params = E'{"params":{"usersList":[104],"usersAll":[104]}}', rounddate = E'2016-29-10 16:50' WHERE ID = 1
29.10 16:44:27 TIMER: Clans cache...
29.10 16:44:27 TIMER: Clans cache: 0ms
29.10 16:44:27 TIMER: Check tournament...
29.10 16:44:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:44' OR rounddate = '2016-29-10 16:44' AND status <> 'finished'
29.10 16:44:27 TIMER: Check tournament: 1ms
29.10 16:44:27 BLOCKREMOVE: tournament 1 removed
29.10 16:44:27 TIMER: Clans cache...
29.10 16:44:27 TIMER: Clans cache: 0ms
29.10 16:44:27 TIMER: Check tournament...
29.10 16:44:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:45' OR rounddate = '2016-29-10 16:45' AND status <> 'finished'
29.10 16:44:27 TIMER: Check tournament: 0ms
29.10 16:44:27 TIMER: Clans cache...
29.10 16:44:27 TIMER: Clans cache: 0ms
29.10 16:44:27 TIMER: Check tournament...
29.10 16:44:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:46' OR rounddate = '2016-29-10 16:46' AND status <> 'finished'
29.10 16:44:27 TIMER: Check tournament: 0ms
29.10 16:44:27 TIMER: Clans cache...
29.10 16:44:27 TIMER: Clans cache: 0ms
29.10 16:44:27 TIMER: Check tournament...
29.10 16:44:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:47' OR rounddate = '2016-29-10 16:47' AND status <> 'finished'
29.10 16:44:27 TIMER: Check tournament: 1ms
29.10 16:44:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true, _type => core/server.query }
29.10 16:44:27 DB: SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true
29.10 16:44:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 16:44:27 TIME: core/server.query : 1.68 ms
29.10 16:44:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 16:44:27 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:44:27 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
29.10 16:44:27 STATS: cache [battle], database [540 calls, 0 reads, 0 writes]
29.10 16:44:27 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 16:44:27 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 16:44:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 16:44:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 16:44:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 16:44:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 104, _type => core/cache.update }
29.10 16:44:27 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 16:44:27 STATS: cache [user], segments [8 calls, 2 hits, 4 misses]
29.10 16:44:27 STATS: cache [user], database [540 calls, 2 reads, 2 writes]
29.10 16:44:27 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
29.10 16:44:27 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.39 ms]
29.10 16:44:27 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.21 ms]
29.10 16:44:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 16:44:27 TIME: core/cache.update : 0.81 ms
29.10 16:44:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 104, _type => core/cache.update }
29.10 16:44:27 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 16:44:27 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
29.10 16:44:27 STATS: cache [questdata], database [540 calls, 2 reads, 0 writes]
29.10 16:44:27 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
29.10 16:44:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 16:44:27 TIME: core/cache.update : 0.6 ms
29.10 16:44:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 104, _type => core/user.logoutPost }
29.10 16:44:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 16:44:27 TIME: core/user.logoutPost : 0.19 ms
29.10 16:44:27 TIMER: Clans cache...
29.10 16:44:27 TIMER: Clans cache: 0ms
29.10 16:44:27 TIMER: Check tournament...
29.10 16:44:27 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:48' OR rounddate = '2016-29-10 16:48' AND status <> 'finished'
29.10 16:44:27 TIMER: Check tournament: 1ms
29.10 16:44:27 WRITEDB: UPDATE Users SET name = E'qwerty', deleted = E'false', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2016-10-28 16:12:35.945256+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 104
29.10 16:44:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 104
29.10 16:49:16 TIMER: Starting timer...
29.10 16:49:16 TIMER: Timer running...
29.10 16:49:16 DB: SELECT * FROM GameVars
29.10 16:49:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 16:49:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 16:49:16 DB: SELECT * FROM Shops WHERE ID = 1
29.10 16:49:16 TEMP: load ./tmp/quest_daily_ids
29.10 16:49:16 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 16:49:16 TEMP: save ./tmp/quest_daily_ids
29.10 16:49:16 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 16:49:16 QUEUE: vdl.0 (thread) response server.login
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM LocalizationStrings
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 6.87 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM GameVars
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.52 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.81 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.38 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.7 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.74 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 16:49:16 TIME: core/quest.getDaily : 0.03 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM UserAttributeTypes
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.32 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM UserVariableTypes
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.31 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 16:49:16 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 1.13 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM ItemGroups
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.37 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM Bundles ORDER BY ID
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.48 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.43 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 16:49:16 TIME: core/shop.getList : 0.04 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM EffectAttributeTypes
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.3 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM Effects
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.32 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 16:49:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.76 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 16:49:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.53 ms
29.10 16:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 16:49:16 DB: SELECT * FROM Badges
29.10 16:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:16 TIME: core/server.query : 0.38 ms
29.10 16:49:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'qwerty' AND Password = E'qwerty', _type => core/server.query }
29.10 16:49:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'qwerty' AND Password = E'qwerty'
29.10 16:49:42 QUEUE: vdl.0 (thread) response core/server.query
29.10 16:49:42 TIME: core/server.query : 2.87 ms
29.10 16:49:42 NET: vdl.0 (thread) request core/user.isOnlineID { id => 104, _type => core/user.isOnlineID }
29.10 16:49:42 QUEUE: vdl.0 (thread) response core/user.isOnlineID
29.10 16:49:42 TIME: core/user.isOnlineID : 0.09 ms
29.10 16:49:42 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 104, _type => core/cache.get }
29.10 16:49:42 READDB: SELECT * FROM Users WHERE ID = 104
29.10 16:49:42 QUEUE: vdl.0 (thread) response core/cache.get
29.10 16:49:42 TIME: core/cache.get : 4.36 ms
29.10 16:49:42 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 104, _type => core/cache.get }
29.10 16:49:42 READDB: SELECT * FROM UserQuests WHERE ID = 104
29.10 16:49:42 QUEUE: vdl.0 (thread) response core/cache.get
29.10 16:49:42 TIME: core/cache.get : 1.7 ms
29.10 16:49:42 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 104, _type => core/user.loginPost, ipAddr => 172.16.20.121 }
29.10 16:49:42 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 16:49:42 TIME: core/user.loginPost : 0.17 ms
29.10 16:49:45 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 104, _type => vdl/cache.user.getData }
29.10 16:49:45 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Qwety, year => 123, email => qwrtty }, errorCode => ok, _type => vdl/cache.user.getData }
29.10 16:49:45 TIME: vdl/cache.user.getData : 0.13 ms
29.10 16:49:48 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:49:48 DB: SELECT * FROM tournament
29.10 16:49:48 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 16:49:48 DB: SELECT name FROM users WHERE id = 104
29.10 16:49:48 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:49:48 TIME: vdl/cache.tournament.getAvailableTournament : 5.27 ms
29.10 16:49:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 104, _type => core/cache.update }
29.10 16:49:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 16:49:51 TIME: core/cache.update : 0.16 ms
29.10 16:49:52 WRITEDB: UPDATE Users SET name = E'qwerty', deleted = E'false', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2016-10-28 16:12:35.945256+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 104
29.10 16:49:59 BLOCKREMOVE: tournament 1 removed
29.10 16:50:08 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:50:08 DB: SELECT * FROM tournament
29.10 16:50:08 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 16:50:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:50:08 TIME: vdl/cache.tournament.getAvailableTournament : 2.81 ms
29.10 16:50:13 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 104, tournament => 1, _type => vdl/cache.tournament.addUsers }
29.10 16:50:13 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
29.10 16:50:13 TIME: vdl/cache.tournament.addUsers : 0.22 ms
29.10 16:50:13 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:50:13 DB: SELECT * FROM tournament
29.10 16:50:13 DB: SELECT name FROM users WHERE id = 104
29.10 16:50:13 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 16:50:13 TIME: vdl/cache.tournament.getAvailableTournament : 1.77 ms
29.10 16:50:14 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 17:00', roundinterval = E'1', params = E'{"params":{"usersList":[104],"usersAll":[104]}}', rounddate = E'2016-29-10 17:00' WHERE ID = 1
29.10 16:50:16 TIMER: Clans cache...
29.10 16:50:16 TIMER: Clans cache: 0ms
29.10 16:50:16 TIMER: Check tournament...
29.10 16:50:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:50' OR rounddate = '2016-29-10 16:50' AND status <> 'finished'
29.10 16:50:16 TIMER: Check tournament: 1ms
29.10 16:50:24 BLOCKREMOVE: tournament 1 removed
29.10 16:51:02 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
29.10 16:51:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
29.10 16:51:02 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
29.10 16:51:02 TIME: core/server.query : 2.84 ms
29.10 16:51:02 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
29.10 16:51:02 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 16:51:02 TIME: core/user.isOnlineID : 0.1 ms
29.10 16:51:02 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
29.10 16:51:02 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 16:51:02 STATS: cache [user], segments [5 calls, 1 hits, 2 misses]
29.10 16:51:02 STATS: cache [user], database [106 calls, 1 reads, 1 writes]
29.10 16:51:02 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
29.10 16:51:02 READDB: SELECT * FROM Users WHERE ID = 107
29.10 16:51:02 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.61 ms]
29.10 16:51:02 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.05 ms]
29.10 16:51:02 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477748429, lastLoginDate => 303, lastLoadDate => 1030 }, effects => { list => [] } }}, version => 0, id => 107 } }
29.10 16:51:02 TIME: core/cache.get : 2.32 ms
29.10 16:51:02 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
29.10 16:51:02 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 16:51:02 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
29.10 16:51:02 STATS: cache [questdata], database [106 calls, 1 reads, 0 writes]
29.10 16:51:02 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
29.10 16:51:02 READDB: SELECT * FROM UserQuests WHERE ID = 107
29.10 16:51:02 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
29.10 16:51:02 TIME: core/cache.get : 1.56 ms
29.10 16:51:02 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
29.10 16:51:02 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 16:51:02 TIME: core/user.loginPost : 0.12 ms
29.10 16:51:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
29.10 16:51:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 16:51:11 TIME: core/cache.update : 0.23 ms
29.10 16:51:12 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 16:51:16 TIMER: Clans cache...
29.10 16:51:16 TIMER: Clans cache: 0ms
29.10 16:51:16 TIMER: Check tournament...
29.10 16:51:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:51' OR rounddate = '2016-29-10 16:51' AND status <> 'finished'
29.10 16:51:16 TIMER: Check tournament: 0ms
29.10 16:51:16 TIMER: Clans cache...
29.10 16:51:16 TIMER: Clans cache: 0ms
29.10 16:51:16 TIMER: Check tournament...
29.10 16:51:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:52' OR rounddate = '2016-29-10 16:52' AND status <> 'finished'
29.10 16:51:16 TIMER: Check tournament: 0ms
29.10 16:51:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true, _type => core/server.query }
29.10 16:51:16 DB: SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true
29.10 16:51:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 16:51:16 TIME: core/server.query : 1.59 ms
29.10 16:51:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 16:51:16 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 16:51:16 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
29.10 16:51:16 STATS: cache [battle], database [240 calls, 0 reads, 0 writes]
29.10 16:51:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 16:51:16 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 16:51:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 16:51:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 16:51:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 16:51:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 104, _type => core/cache.update }
29.10 16:51:16 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 16:51:16 STATS: cache [user], segments [8 calls, 2 hits, 4 misses]
29.10 16:51:16 STATS: cache [user], database [240 calls, 2 reads, 2 writes]
29.10 16:51:16 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
29.10 16:51:16 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.29 ms]
29.10 16:51:16 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.16 ms]
29.10 16:51:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 16:51:16 TIME: core/cache.update : 0.66 ms
29.10 16:51:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 104, _type => core/cache.update }
29.10 16:51:16 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 16:51:16 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
29.10 16:51:16 STATS: cache [questdata], database [240 calls, 2 reads, 0 writes]
29.10 16:51:16 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
29.10 16:51:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 16:51:16 TIME: core/cache.update : 0.42 ms
29.10 16:51:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 104, _type => core/user.logoutPost }
29.10 16:51:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 16:51:16 TIME: core/user.logoutPost : 0.2 ms
29.10 16:51:16 TIMER: Clans cache...
29.10 16:51:16 TIMER: Clans cache: 0ms
29.10 16:51:16 TIMER: Check tournament...
29.10 16:51:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:53' OR rounddate = '2016-29-10 16:53' AND status <> 'finished'
29.10 16:51:16 TIMER: Check tournament: 0ms
29.10 16:51:16 WRITEDB: UPDATE Users SET name = E'qwerty', deleted = E'false', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2016-10-28 16:12:35.945256+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 104
29.10 16:51:16 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 104
29.10 16:53:26 BLOCKREMOVE: user 104 removed
29.10 16:53:26 BLOCKREMOVE: questdata 104 removed
29.10 16:54:16 TIMER: Clans cache...
29.10 16:54:16 TIMER: Clans cache: 0ms
29.10 16:54:16 TIMER: Check tournament...
29.10 16:54:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:54' OR rounddate = '2016-29-10 16:54' AND status <> 'finished'
29.10 16:54:16 TIMER: Check tournament: 0ms
29.10 16:54:16 TIMER: Clans cache...
29.10 16:54:16 TIMER: Clans cache: 0ms
29.10 16:54:16 TIMER: Check tournament...
29.10 16:54:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:55' OR rounddate = '2016-29-10 16:55' AND status <> 'finished'
29.10 16:54:16 TIMER: Check tournament: 0ms
29.10 16:54:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
29.10 16:54:16 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
29.10 16:54:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 16:54:16 TIME: core/server.query : 0.97 ms
29.10 16:54:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 16:54:16 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
29.10 16:54:16 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
29.10 16:54:16 STATS: cache [battle], database [420 calls, 1 reads, 0 writes]
29.10 16:54:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 16:54:16 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 16:54:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 16:54:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 16:54:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 16:54:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
29.10 16:54:16 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 16:54:16 STATS: cache [user], segments [10 calls, 4 hits, 4 misses]
29.10 16:54:16 STATS: cache [user], database [420 calls, 2 reads, 3 writes]
29.10 16:54:16 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
29.10 16:54:16 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.29 ms]
29.10 16:54:16 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.22 ms]
29.10 16:54:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 16:54:16 TIME: core/cache.update : 0.59 ms
29.10 16:54:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
29.10 16:54:16 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 16:54:16 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
29.10 16:54:16 STATS: cache [questdata], database [420 calls, 2 reads, 1 writes]
29.10 16:54:16 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
29.10 16:54:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 16:54:16 TIME: core/cache.update : 0.38 ms
29.10 16:54:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
29.10 16:54:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 16:54:16 TIME: core/user.logoutPost : 0.13 ms
29.10 16:54:16 TIMER: Clans cache...
29.10 16:54:16 TIMER: Clans cache: 0ms
29.10 16:54:16 TIMER: Check tournament...
29.10 16:54:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:56' OR rounddate = '2016-29-10 16:56' AND status <> 'finished'
29.10 16:54:16 TIMER: Check tournament: 0ms
29.10 16:54:16 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 16:54:16 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
29.10 16:56:26 BLOCKREMOVE: user 107 removed
29.10 16:56:26 BLOCKREMOVE: questdata 107 removed
29.10 16:57:16 TIMER: Clans cache...
29.10 16:57:16 TIMER: Clans cache: 0ms
29.10 16:57:16 TIMER: Check tournament...
29.10 16:57:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:57' OR rounddate = '2016-29-10 16:57' AND status <> 'finished'
29.10 16:57:16 TIMER: Check tournament: 1ms
29.10 16:57:16 TIMER: Clans cache...
29.10 16:57:16 TIMER: Clans cache: 0ms
29.10 16:57:16 TIMER: Check tournament...
29.10 16:57:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:58' OR rounddate = '2016-29-10 16:58' AND status <> 'finished'
29.10 16:57:16 TIMER: Check tournament: 1ms
29.10 16:57:16 TIMER: Clans cache...
29.10 16:57:16 TIMER: Clans cache: 0ms
29.10 16:57:16 TIMER: Check tournament...
29.10 16:57:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 16:59' OR rounddate = '2016-29-10 16:59' AND status <> 'finished'
29.10 16:57:16 TIMER: Check tournament: 2ms
29.10 16:57:16 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 2, 0)
29.10 16:57:16 TIMER: Clans cache...
29.10 16:57:16 TIMER: Clans cache: 0ms
29.10 16:57:16 TIMER: Check tournament...
29.10 16:57:16 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:00' OR rounddate = '2016-29-10 17:00' AND status <> 'finished'
29.10 16:57:16 STATS: cache [tournament], get [5 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 16:57:16 STATS: cache [tournament], segments [6 calls, 3 hits, 2 misses]
29.10 16:57:16 STATS: cache [tournament], database [660 calls, 2 reads, 1 writes]
29.10 16:57:16 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 16:57:16 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 16:57:16 DB: SELECT nextval('Battle_id_seq') AS id
29.10 16:57:16 READDB: SELECT ID FROM Battle WHERE ID = 98
29.10 16:57:16 READDB: INSERT INTO Battle (ID) VALUES (98)
29.10 16:57:16 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
29.10 16:57:16 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
29.10 16:57:16 STATS: cache [battle], database [660 calls, 2 reads, 0 writes]
29.10 16:57:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 16:57:16 READDB: SELECT * FROM Battle WHERE ID = 98
29.10 16:57:16 DB: SELECT name FROM users WHERE id=104
29.10 16:57:16 DB: SELECT name FROM users WHERE id=0
29.10 16:57:16 TRACE: Check tournament timer exception:
29.10 16:57:16 TRACE: Invalid field access : name

29.10 16:57:16 TIMER: Check tournament: 156ms
