01.09 14:02:16 TIMER: Starting timer...
01.09 14:02:16 TIMER: Timer running...
01.09 14:02:16 DB: SELECT * FROM GameVars
01.09 14:02:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:02:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:02:16 DB: SELECT * FROM Shops WHERE ID = 1
01.09 14:02:16 TEMP: load ./tmp/quest_daily_ids
01.09 14:02:16 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 14:02:16 TEMP: save ./tmp/quest_daily_ids
01.09 14:02:16 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 14:02:16 QUEUE: vdl.0 (thread) response server.login
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 14:02:16 DB: SELECT * FROM LocalizationStrings
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:02:16 TIME: core/server.query : 8.19 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 14:02:16 DB: SELECT * FROM GameVars
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:02:16 TIME: core/server.query : 0.62 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 14:02:16 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:02:16 TIME: core/server.query : 0.76 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 14:02:16 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:02:16 TIME: core/server.query : 0.41 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 14:02:16 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:02:16 TIME: core/server.query : 0.72 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 14:02:16 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:02:16 TIME: core/server.query : 0.84 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 14:02:16 TIME: core/quest.getDaily : 0.02 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 14:02:16 DB: SELECT * FROM UserAttributeTypes
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:02:16 TIME: core/server.query : 0.77 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 14:02:16 DB: SELECT * FROM UserVariableTypes
01.09 14:02:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:02:16 TIME: core/server.query : 0.52 ms
01.09 14:02:16 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 14:02:16 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i01.09 14:04:38 TIMER: Starting timer...
01.09 14:04:38 TIMER: Timer running...
01.09 14:04:38 DB: SELECT * FROM GameVars
01.09 14:04:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:04:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:04:38 DB: SELECT * FROM Shops WHERE ID = 1
01.09 14:04:38 TEMP: load ./tmp/quest_daily_ids
01.09 14:04:38 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 14:04:38 TEMP: save ./tmp/quest_daily_ids
01.09 14:04:38 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 14:04:38 QUEUE: vdl.0 (thread) response server.login
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 14:04:38 DB: SELECT * FROM LocalizationStrings
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:04:38 TIME: core/server.query : 7.66 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 14:04:38 DB: SELECT * FROM GameVars
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:04:38 TIME: core/server.query : 0.63 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 14:04:38 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:04:38 TIME: core/server.query : 0.66 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 14:04:38 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:04:38 TIME: core/server.query : 0.55 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 14:04:38 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:04:38 TIME: core/server.query : 0.51 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 14:04:38 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:04:38 TIME: core/server.query : 0.97 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 14:04:38 TIME: core/quest.getDaily : 0.02 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 14:04:38 DB: SELECT * FROM UserAttributeTypes
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:04:38 TIME: core/server.query : 0.47 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 14:04:38 DB: SELECT * FROM UserVariableTypes
01.09 14:04:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:04:38 TIME: core/server.query : 0.34 ms
01.09 14:04:38 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 14:04:38 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i01.09 14:12:24 TIMER: Starting timer...
01.09 14:12:24 TIMER: Timer running...
01.09 14:12:24 DB: SELECT * FROM GameVars
01.09 14:12:24 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:12:24 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:12:24 DB: SELECT * FROM Shops WHERE ID = 1
01.09 14:12:24 TEMP: load ./tmp/quest_daily_ids
01.09 14:12:24 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 14:12:24 TEMP: save ./tmp/quest_daily_ids
01.09 14:12:25 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 14:12:25 QUEUE: vdl.0 (thread) response server.login
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM LocalizationStrings
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 7.28 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM GameVars
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 0.62 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 0.65 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 0.55 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 0.53 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 1.17 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 14:12:25 TIME: core/quest.getDaily : 0.02 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM UserAttributeTypes
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 0.42 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM UserVariableTypes
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 0.48 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 14:12:25 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 1.02 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 14:12:25 DB: SELECT * FROM ItemGroups
01.09 14:12:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:12:25 TIME: core/server.query : 0.32 ms
01.09 14:12:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _01.09 14:24:04 TIMER: Starting timer...
01.09 14:24:04 TIMER: Timer running...
01.09 14:24:04 DB: SELECT * FROM GameVars
01.09 14:24:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:24:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:24:04 DB: SELECT * FROM Shops WHERE ID = 1
01.09 14:24:04 TEMP: load ./tmp/quest_daily_ids
01.09 14:24:04 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 14:24:04 TEMP: save ./tmp/quest_daily_ids
01.09 14:24:04 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 14:24:04 QUEUE: vdl.0 (thread) response server.login
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM LocalizationStrings
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 6.5 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM GameVars
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.53 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.67 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.64 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.58 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 1.13 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 14:24:04 TIME: core/quest.getDaily : 0.02 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM UserAttributeTypes
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.53 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM UserVariableTypes
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.58 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 14:24:04 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 1.18 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM ItemGroups
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.38 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM Bundles ORDER BY ID
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.44 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.58 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 14:24:04 TIME: core/shop.getList : 0.02 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM EffectAttributeTypes
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.3 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM Effects
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.3 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 14:24:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.57 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 14:24:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.58 ms
01.09 14:24:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 14:24:04 DB: SELECT * FROM Badges
01.09 14:24:04 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:24:04 TIME: core/server.query : 0.48 ms
01.09 14:24:04 TIMER: Clans cache...
01.09 14:24:04 TIMER: Clans cache: 0ms
01.09 14:24:04 TIMER: Clans cache...
01.09 14:24:04 TIMER: Clans cache: 0ms
01.09 14:24:04 TIMER: Clans cache...
01.09 14:24:04 TIMER: Clans cache: 0ms
01.09 14:24:04 TIMER: Clans cache...
01.09 14:24:04 TIMER: Clans cache: 0ms
01.09 14:24:04 TIMER: Clans cache...
01.09 14:24:04 TIMER: Clans cache: 0ms
01.09 14:24:04 TIMER: Clans cache...
01.09 14:24:04 TIMER: Clans cache: 0ms
01.09 14:30:26 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 14:30:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 14:30:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:30:26 TIME: core/server.query : 2.9 ms
01.09 14:30:26 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 14:30:26 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 14:30:26 TIME: core/user.isOnlineID : 0.09 ms
01.09 14:30:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 14:30:26 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:30:26 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 14:30:26 STATS: cache [user], database [382 calls, 0 reads, 0 writes]
01.09 14:30:26 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 14:30:26 READDB: SELECT * FROM Users WHERE ID = 2
01.09 14:30:26 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.07 ms]
01.09 14:30:26 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 14:30:26 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:30:26 TIME: core/cache.get : 4.29 ms
01.09 14:30:26 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 14:30:26 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:30:26 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 14:30:26 STATS: cache [questdata], database [382 calls, 0 reads, 0 writes]
01.09 14:30:26 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 14:30:26 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 14:30:26 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:30:26 TIME: core/cache.get : 1.53 ms
01.09 14:30:26 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 14:30:26 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 14:30:26 TIME: core/user.loginPost : 0.17 ms
01.09 14:30:26 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 14:30:26 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 14:30:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
01.09 14:30:26 TIME: vdl/cache.battle.find : 2.27 ms
01.09 14:30:26 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
01.09 14:30:26 DB: SELECT nextval('Battle_id_seq') AS id
01.09 14:30:26 READDB: SELECT ID FROM Battle WHERE ID = 3
01.09 14:30:26 READDB: INSERT INTO Battle (ID) VALUES (3)
01.09 14:30:26 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:30:26 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 14:30:26 STATS: cache [battle], database [382 calls, 0 reads, 0 writes]
01.09 14:30:26 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 14:30:26 READDB: SELECT * FROM Battle WHERE ID = 3
01.09 14:30:26 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.61 ms]
01.09 14:30:26 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 14:30:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 14:30:26 TIME: vdl/cache.battle.create : 43.37 ms
01.09 14:30:31 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 3
01.09 14:30:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 14:30:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:30:34 TIME: core/cache.update : 0.17 ms
01.09 14:30:35 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 14:31:04 TIMER: Clans cache...
01.09 14:31:04 TIMER: Clans cache: 0ms
01.09 14:31:04 TIMER: Clans cache...
01.09 14:31:04 TIMER: Clans cache: 0ms
01.09 14:32:14 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 14:32:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 14:32:14 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
01.09 14:32:14 TIME: core/server.query : 2.57 ms
01.09 14:32:14 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 14:32:14 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 14:32:14 TIME: core/user.isOnlineID : 0.11 ms
01.09 14:32:14 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 14:32:14 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 14:32:14 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
01.09 14:32:14 STATS: cache [user], database [490 calls, 1 reads, 1 writes]
01.09 14:32:14 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 14:32:14 READDB: SELECT * FROM Users WHERE ID = 3
01.09 14:32:14 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.41 ms]
01.09 14:32:14 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.05 ms]
01.09 14:32:14 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 3 } }
01.09 14:32:14 TIME: core/cache.get : 2.16 ms
01.09 14:32:14 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 14:32:14 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 14:32:14 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
01.09 14:32:14 STATS: cache [questdata], database [490 calls, 1 reads, 0 writes]
01.09 14:32:14 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 14:32:14 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 14:32:14 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
01.09 14:32:14 TIME: core/cache.get : 1.51 ms
01.09 14:32:14 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 14:32:14 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 14:32:14 TIME: core/user.loginPost : 0.51 ms
01.09 14:32:14 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 3 AND Date = 'today'::timestamp, _type => core/server.query }
01.09 14:32:14 DB: SELECT ID FROM TempUserLogins WHERE UserID = 3 AND Date = 'today'::timestamp
01.09 14:32:14 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
01.09 14:32:14 TIME: core/server.query : 1.64 ms
01.09 14:32:14 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (3, 'today'::timestamp), _type => core/server.pending }} }
01.09 14:32:14 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 14:32:14 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 14:32:14 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (3, 'today'::timestamp)
01.09 14:32:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => { r => #abstract }, count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 14:32:14 TIME: vdl/cache.battle.find : 1.96 ms
01.09 14:32:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 245, lastLoadDate => 902 } }}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 14:32:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:32:19 TIME: core/cache.update : 0.22 ms
01.09 14:32:19 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 14:33:04 TIMER: Clans cache...
01.09 14:33:04 TIMER: Clans cache: 0ms
01.09 14:33:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 14:33:56 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 14:33:56 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
01.09 14:33:56 STATS: cache [user], database [592 calls, 2 reads, 2 writes]
01.09 14:33:56 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 14:33:56 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.14 ms]
01.09 14:33:56 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.14 ms]
01.09 14:33:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 14:33:56 TIME: core/cache.update : 0.6 ms
01.09 14:33:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 14:33:56 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 14:33:56 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
01.09 14:33:56 STATS: cache [questdata], database [592 calls, 2 reads, 0 writes]
01.09 14:33:56 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 14:33:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:33:56 TIME: core/cache.update : 0.37 ms
01.09 14:33:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 14:33:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 14:33:56 TIME: core/user.logoutPost : 0.16 ms
01.09 14:33:56 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 14:33:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 14:34:04 TIMER: Clans cache...
01.09 14:34:04 TIMER: Clans cache: 0ms
01.09 14:34:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 14:34:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 14:34:06 TIME: core/cache.update : 0.14 ms
01.09 14:34:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 14:34:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:34:06 TIME: core/cache.update : 0.11 ms
01.09 14:34:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 14:34:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 14:34:06 TIME: core/user.logoutPost : 0.12 ms
01.09 14:34:07 BLOCKREMOVE: user 2 removed
01.09 14:34:07 BLOCKREMOVE: questdata 2 removed
01.09 14:34:07 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 14:34:07 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 14:34:17 BLOCKREMOVE: user 3 removed
01.09 14:34:17 BLOCKREMOVE: questdata 3 removed
01.09 14:39:09 TIMER: Starting timer...
01.09 14:39:09 TIMER: Timer running...
01.09 14:39:09 DB: SELECT * FROM GameVars
01.09 14:39:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:39:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:39:09 DB: SELECT * FROM Shops WHERE ID = 1
01.09 14:39:09 TEMP: load ./tmp/quest_daily_ids
01.09 14:39:09 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 14:39:09 TEMP: save ./tmp/quest_daily_ids
01.09 14:39:09 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 14:39:09 QUEUE: vdl.0 (thread) response server.login
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM LocalizationStrings
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 9.75 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM GameVars
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.72 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.7 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.64 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.66 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 1.07 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 14:39:09 TIME: core/quest.getDaily : 0.02 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM UserAttributeTypes
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.58 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM UserVariableTypes
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.49 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 14:39:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 1.28 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM ItemGroups
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.39 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM Bundles ORDER BY ID
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 2.02 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 1.01 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 14:39:09 TIME: core/shop.getList : 0.03 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM EffectAttributeTypes
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.83 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM Effects
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.84 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 14:39:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 1.05 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 14:39:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.7 ms
01.09 14:39:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 14:39:09 DB: SELECT * FROM Badges
01.09 14:39:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:39:09 TIME: core/server.query : 0.41 ms
01.09 14:39:09 TIMER: Clans cache...
01.09 14:39:09 TIMER: Clans cache: 0ms
01.09 14:40:32 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 14:40:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 14:40:32 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:40:32 TIME: core/server.query : 2.72 ms
01.09 14:40:32 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 14:40:32 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 14:40:32 TIME: core/user.isOnlineID : 0.09 ms
01.09 14:40:32 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 14:40:32 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:40:32 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 14:40:32 STATS: cache [user], database [84 calls, 0 reads, 0 writes]
01.09 14:40:32 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 14:40:32 READDB: SELECT * FROM Users WHERE ID = 3
01.09 14:40:32 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.97 ms]
01.09 14:40:32 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 14:40:32 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:40:32 TIME: core/cache.get : 4.18 ms
01.09 14:40:32 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 14:40:32 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:40:32 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 14:40:32 STATS: cache [questdata], database [84 calls, 0 reads, 0 writes]
01.09 14:40:32 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 14:40:32 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 14:40:32 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:40:32 TIME: core/cache.get : 1.61 ms
01.09 14:40:32 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 14:40:32 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 14:40:32 TIME: core/user.loginPost : 0.12 ms
01.09 14:40:32 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 14:40:32 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 14:40:32 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 14:40:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => { r => #abstract }, count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 14:40:32 TIME: vdl/cache.battle.find : 3.21 ms
01.09 14:40:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 14:40:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:40:39 TIME: core/cache.update : 0.17 ms
01.09 14:40:40 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 14:44:24 TIMER: Starting timer...
01.09 14:44:24 TIMER: Timer running...
01.09 14:44:24 DB: SELECT * FROM GameVars
01.09 14:44:24 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:44:24 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:44:24 DB: SELECT * FROM Shops WHERE ID = 1
01.09 14:44:24 TEMP: load ./tmp/quest_daily_ids
01.09 14:44:24 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 14:44:24 TEMP: save ./tmp/quest_daily_ids
01.09 14:44:24 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 14:44:24 QUEUE: vdl.0 (thread) response server.login
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM LocalizationStrings
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 7.04 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM GameVars
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.48 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.88 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.54 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.46 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.92 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 14:44:24 TIME: core/quest.getDaily : 0.02 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM UserAttributeTypes
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.41 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM UserVariableTypes
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.31 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 14:44:24 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 1.24 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM ItemGroups
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.35 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM Bundles ORDER BY ID
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.51 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.41 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 14:44:24 TIME: core/shop.getList : 0.07 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM EffectAttributeTypes
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.43 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM Effects
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.3 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 14:44:24 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.75 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 14:44:24 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.53 ms
01.09 14:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 14:44:24 DB: SELECT * FROM Badges
01.09 14:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:24 TIME: core/server.query : 0.32 ms
01.09 14:44:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 14:44:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 14:44:38 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:44:38 TIME: core/server.query : 4.34 ms
01.09 14:44:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 14:44:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 14:44:38 TIME: core/user.isOnlineID : 0.13 ms
01.09 14:44:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 14:44:38 READDB: SELECT * FROM Users WHERE ID = 2
01.09 14:44:38 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:44:38 TIME: core/cache.get : 4.01 ms
01.09 14:44:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 14:44:38 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 14:44:38 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:44:38 TIME: core/cache.get : 1.53 ms
01.09 14:44:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 14:44:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 14:44:38 TIME: core/user.loginPost : 0.19 ms
01.09 14:44:38 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 14:44:38 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 14:44:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 14:44:38 TIME: vdl/cache.battle.find : 3.29 ms
01.09 14:44:38 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
01.09 14:44:38 DB: SELECT nextval('Battle_id_seq') AS id
01.09 14:44:38 READDB: SELECT ID FROM Battle WHERE ID = 4
01.09 14:44:38 READDB: INSERT INTO Battle (ID) VALUES (4)
01.09 14:44:38 READDB: SELECT * FROM Battle WHERE ID = 4
01.09 14:44:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 14:44:38 TIME: vdl/cache.battle.create : 35.74 ms
01.09 14:44:44 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 4
01.09 14:44:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 14:44:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:44:44 TIME: core/cache.update : 0.23 ms
01.09 14:44:45 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 14:45:24 TIMER: Clans cache...
01.09 14:45:24 TIMER: Clans cache: 0ms
01.09 14:45:35 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 14:45:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 14:45:35 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
01.09 14:45:35 TIME: core/server.query : 1.8 ms
01.09 14:45:35 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 14:45:35 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 14:45:35 TIME: core/user.isOnlineID : 0.06 ms
01.09 14:45:35 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 14:45:35 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 14:45:35 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
01.09 14:45:35 STATS: cache [user], database [71 calls, 1 reads, 1 writes]
01.09 14:45:35 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 14:45:35 READDB: SELECT * FROM Users WHERE ID = 3
01.09 14:45:35 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.35 ms]
01.09 14:45:35 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.07 ms]
01.09 14:45:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 3 } }
01.09 14:45:35 TIME: core/cache.get : 2.11 ms
01.09 14:45:35 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 14:45:35 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 14:45:35 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
01.09 14:45:35 STATS: cache [questdata], database [71 calls, 1 reads, 0 writes]
01.09 14:45:35 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 14:45:35 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 14:45:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
01.09 14:45:35 TIME: core/cache.get : 1.55 ms
01.09 14:45:35 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 14:45:35 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 14:45:35 TIME: core/user.loginPost : 0.11 ms
01.09 14:45:35 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 14:45:35 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 14:45:35 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 14:45:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => { r => #abstract }, count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 14:45:35 TIME: vdl/cache.battle.find : 2.46 ms
01.09 14:45:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 14:45:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:45:44 TIME: core/cache.update : 0.18 ms
01.09 14:46:27 TIMER: Starting timer...
01.09 14:46:27 TIMER: Timer running...
01.09 14:46:27 DB: SELECT * FROM GameVars
01.09 14:46:27 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:46:27 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:46:27 DB: SELECT * FROM Shops WHERE ID = 1
01.09 14:46:27 TEMP: load ./tmp/quest_daily_ids
01.09 14:46:27 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 14:46:27 TEMP: save ./tmp/quest_daily_ids
01.09 14:46:27 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 14:46:27 QUEUE: vdl.0 (thread) response server.login
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM LocalizationStrings
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 5.97 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM GameVars
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.61 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.96 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.58 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.74 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 1.37 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 14:46:27 TIME: core/quest.getDaily : 0.02 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM UserAttributeTypes
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.52 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM UserVariableTypes
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.38 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 14:46:27 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 1.04 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM ItemGroups
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.3 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM Bundles ORDER BY ID
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.55 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.42 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 14:46:27 TIME: core/shop.getList : 0.02 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM EffectAttributeTypes
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.54 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM Effects
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.39 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 14:46:27 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.64 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 14:46:27 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.52 ms
01.09 14:46:27 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 14:46:27 DB: SELECT * FROM Badges
01.09 14:46:27 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:46:27 TIME: core/server.query : 0.37 ms
01.09 14:46:27 TIMER: Clans cache...
01.09 14:46:27 TIMER: Clans cache: 0ms
01.09 14:48:17 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 14:48:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 14:48:17 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:48:17 TIME: core/server.query : 2.31 ms
01.09 14:48:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 14:48:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 14:48:17 TIME: core/user.isOnlineID : 0.09 ms
01.09 14:48:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 14:48:17 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:48:17 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 14:48:17 STATS: cache [user], database [110 calls, 0 reads, 0 writes]
01.09 14:48:17 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 14:48:17 READDB: SELECT * FROM Users WHERE ID = 3
01.09 14:48:17 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.31 ms]
01.09 14:48:17 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 14:48:17 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:48:17 TIME: core/cache.get : 3.68 ms
01.09 14:48:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 14:48:17 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:48:17 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 14:48:17 STATS: cache [questdata], database [110 calls, 0 reads, 0 writes]
01.09 14:48:17 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 14:48:17 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 14:48:17 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:48:17 TIME: core/cache.get : 1.67 ms
01.09 14:48:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 14:48:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 14:48:17 TIME: core/user.loginPost : 0.07 ms
01.09 14:48:17 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 14:48:17 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 14:48:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 14:48:17 TIME: vdl/cache.battle.find : 1.35 ms
01.09 14:48:17 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 14:48:17 DB: SELECT nextval('Battle_id_seq') AS id
01.09 14:48:17 READDB: SELECT ID FROM Battle WHERE ID = 5
01.09 14:48:17 READDB: INSERT INTO Battle (ID) VALUES (5)
01.09 14:48:17 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:48:17 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 14:48:17 STATS: cache [battle], database [110 calls, 0 reads, 0 writes]
01.09 14:48:17 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 14:48:17 READDB: SELECT * FROM Battle WHERE ID = 5
01.09 14:48:17 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.74 ms]
01.09 14:48:17 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 14:48:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 14:48:17 TIME: vdl/cache.battle.create : 26.59 ms
01.09 14:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 14:48:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 14:48:22 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 14:48:22 TIME: core/server.query : 1.88 ms
01.09 14:48:22 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 14:48:22 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 14:48:22 TIME: core/user.isOnlineID : 0.08 ms
01.09 14:48:22 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 14:48:22 READDB: SELECT * FROM Users WHERE ID = 2
01.09 14:48:22 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 14:48:22 TIME: core/cache.get : 1.57 ms
01.09 14:48:22 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 14:48:22 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 14:48:22 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 14:48:22 TIME: core/cache.get : 0.86 ms
01.09 14:48:22 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 14:48:22 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 14:48:22 TIME: core/user.loginPost : 0.08 ms
01.09 14:48:22 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 14:48:22 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 14:48:22 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 14:48:22 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 14:48:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => { r => #abstract }, count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 14:48:22 TIME: vdl/cache.battle.find : 2.43 ms
01.09 14:48:22 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 5
01.09 14:48:22 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 14:48:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:48:22 TIME: core/cache.update : 0.07 ms
01.09 14:48:23 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 14:48:27 TIMER: Clans cache...
01.09 14:48:27 TIMER: Clans cache: 0ms
01.09 14:48:27 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 14:48:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:48:27 TIME: core/cache.update : 0.12 ms
01.09 14:48:28 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 14:49:27 TIMER: Clans cache...
01.09 14:49:27 TIMER: Clans cache: 0ms
01.09 14:50:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 14:50:08 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 14:50:08 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
01.09 14:50:08 STATS: cache [user], database [222 calls, 2 reads, 2 writes]
01.09 14:50:08 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 14:50:08 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.72 ms]
01.09 14:50:08 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.1 ms]
01.09 14:50:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 14:50:08 TIME: core/cache.update : 0.5 ms
01.09 14:50:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 14:50:08 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 14:50:08 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
01.09 14:50:08 STATS: cache [questdata], database [222 calls, 2 reads, 0 writes]
01.09 14:50:08 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 14:50:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:50:08 TIME: core/cache.update : 0.39 ms
01.09 14:50:08 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 14:50:08 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 14:50:08 TIME: core/user.logoutPost : 0.1 ms
01.09 14:50:09 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 14:50:09 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 14:50:19 BLOCKREMOVE: user 3 removed
01.09 14:50:19 BLOCKREMOVE: questdata 3 removed
01.09 14:50:27 TIMER: Clans cache...
01.09 14:50:27 TIMER: Clans cache: 0ms
01.09 14:50:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 14:50:27 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 14:50:27 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
01.09 14:50:27 STATS: cache [user], database [300 calls, 2 reads, 3 writes]
01.09 14:50:27 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 14:50:27 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.72 ms]
01.09 14:50:27 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.14 ms]
01.09 14:50:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 14:50:27 TIME: core/cache.update : 0.25 ms
01.09 14:50:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 14:50:27 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 14:50:27 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
01.09 14:50:27 STATS: cache [questdata], database [300 calls, 2 reads, 1 writes]
01.09 14:50:27 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 14:50:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:50:27 TIME: core/cache.update : 0.15 ms
01.09 14:50:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 14:50:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 14:50:27 TIME: core/user.logoutPost : 0.05 ms
01.09 14:50:27 TIMER: Clans cache...
01.09 14:50:27 TIMER: Clans cache: 0ms
01.09 14:50:27 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 14:50:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 14:51:50 TIMER: Starting timer...
01.09 14:51:50 TIMER: Timer running...
01.09 14:51:50 DB: SELECT * FROM GameVars
01.09 14:51:50 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:51:50 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:51:50 DB: SELECT * FROM Shops WHERE ID = 1
01.09 14:51:50 TEMP: load ./tmp/quest_daily_ids
01.09 14:51:50 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 14:51:50 TEMP: save ./tmp/quest_daily_ids
01.09 14:51:50 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 14:51:50 QUEUE: vdl.0 (thread) response server.login
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM LocalizationStrings
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 7.78 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM GameVars
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.82 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.64 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.57 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.53 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.8 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 14:51:50 TIME: core/quest.getDaily : 0.02 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM UserAttributeTypes
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.3 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM UserVariableTypes
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.44 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 14:51:50 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.9 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM ItemGroups
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.39 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM Bundles ORDER BY ID
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.46 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.47 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 14:51:50 TIME: core/shop.getList : 0.11 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM EffectAttributeTypes
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.4 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM Effects
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.31 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 14:51:50 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.87 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 14:51:50 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 1.53 ms
01.09 14:51:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 14:51:50 DB: SELECT * FROM Badges
01.09 14:51:50 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:51:50 TIME: core/server.query : 0.52 ms
01.09 14:51:50 TIMER: Clans cache...
01.09 14:51:50 TIMER: Clans cache: 0ms
01.09 14:51:50 TIMER: Clans cache...
01.09 14:51:50 TIMER: Clans cache: 0ms
01.09 14:51:50 TIMER: Clans cache...
01.09 14:51:50 TIMER: Clans cache: 0ms
01.09 14:51:50 TIMER: Clans cache...
01.09 14:51:50 TIMER: Clans cache: 0ms
01.09 14:51:50 TIMER: Clans cache...
01.09 14:51:50 TIMER: Clans cache: 0ms
01.09 14:57:25 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 14:57:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 14:57:25 QUEUE: vdl.0 (thread) response core/server.query
01.09 14:57:25 TIME: core/server.query : 2.19 ms
01.09 14:57:25 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 14:57:25 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 14:57:25 TIME: core/user.isOnlineID : 0.1 ms
01.09 14:57:25 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 14:57:25 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:57:25 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 14:57:25 STATS: cache [user], database [336 calls, 0 reads, 0 writes]
01.09 14:57:25 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 14:57:25 READDB: SELECT * FROM Users WHERE ID = 3
01.09 14:57:25 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.2 ms]
01.09 14:57:25 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 14:57:25 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:57:25 TIME: core/cache.get : 4.39 ms
01.09 14:57:25 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 14:57:25 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:57:25 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 14:57:25 STATS: cache [questdata], database [336 calls, 0 reads, 0 writes]
01.09 14:57:25 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 14:57:25 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 14:57:25 QUEUE: vdl.0 (thread) response core/cache.get
01.09 14:57:25 TIME: core/cache.get : 1.79 ms
01.09 14:57:25 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 14:57:25 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 14:57:25 TIME: core/user.loginPost : 0.19 ms
01.09 14:57:25 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 14:57:25 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 14:57:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 14:57:25 TIME: vdl/cache.battle.find : 2.27 ms
01.09 14:57:25 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 14:57:25 DB: SELECT nextval('Battle_id_seq') AS id
01.09 14:57:25 READDB: SELECT ID FROM Battle WHERE ID = 6
01.09 14:57:25 READDB: INSERT INTO Battle (ID) VALUES (6)
01.09 14:57:25 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 14:57:25 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 14:57:25 STATS: cache [battle], database [336 calls, 0 reads, 0 writes]
01.09 14:57:25 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 14:57:25 READDB: SELECT * FROM Battle WHERE ID = 6
01.09 14:57:25 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.93 ms]
01.09 14:57:25 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 14:57:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 14:57:25 TIME: vdl/cache.battle.create : 37 ms
01.09 14:57:31 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 6
01.09 14:57:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 14:57:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:57:35 TIME: core/cache.update : 0.09 ms
01.09 14:57:36 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 14:57:50 TIMER: Clans cache...
01.09 14:57:50 TIMER: Clans cache: 0ms
01.09 14:57:50 TIMER: Clans cache...
01.09 14:57:50 TIMER: Clans cache: 0ms
01.09 14:57:50 TIMER: Clans cache...
01.09 14:57:50 TIMER: Clans cache: 0ms
01.09 14:57:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 14:57:50 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 14:57:50 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
01.09 14:57:50 STATS: cache [user], database [540 calls, 1 reads, 1 writes]
01.09 14:57:50 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 14:57:50 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.96 ms]
01.09 14:57:50 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.15 ms]
01.09 14:57:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 14:57:50 TIME: core/cache.update : 0.5 ms
01.09 14:57:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 14:57:50 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 14:57:50 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
01.09 14:57:50 STATS: cache [questdata], database [540 calls, 1 reads, 0 writes]
01.09 14:57:50 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 14:57:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 14:57:50 TIME: core/cache.update : 0.37 ms
01.09 14:57:50 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 14:57:50 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 14:57:50 TIME: core/user.logoutPost : 0.17 ms
01.09 14:57:50 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
01.09 14:57:50 TIMER: Clans cache...
01.09 14:57:50 TIMER: Clans cache: 0ms
01.09 14:57:50 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 14:57:50 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
