01.09 16:00:21 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 16:00:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 16:00:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:00:21 TIME: core/server.query : 2.85 ms
01.09 16:00:21 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 16:00:21 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 16:00:21 TIME: core/user.isOnlineID : 0.09 ms
01.09 16:00:21 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 16:00:21 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:00:21 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 16:00:21 STATS: cache [user], database [87 calls, 0 reads, 0 writes]
01.09 16:00:21 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 16:00:21 READDB: SELECT * FROM Users WHERE ID = 3
01.09 16:00:21 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.57 ms]
01.09 16:00:21 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 16:00:21 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:00:21 TIME: core/cache.get : 4.79 ms
01.09 16:00:21 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 16:00:21 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:00:21 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 16:00:21 STATS: cache [questdata], database [87 calls, 0 reads, 0 writes]
01.09 16:00:21 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 16:00:21 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 16:00:21 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:00:21 TIME: core/cache.get : 2.29 ms
01.09 16:00:21 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 16:00:21 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:00:21 TIME: core/user.loginPost : 0.25 ms
01.09 16:00:21 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:00:21 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:00:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 16:00:21 TIME: vdl/cache.battle.find : 2.23 ms
01.09 16:00:21 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 16:00:21 DB: SELECT nextval('Battle_id_seq') AS id
01.09 16:00:21 READDB: SELECT ID FROM Battle WHERE ID = 9
01.09 16:00:21 READDB: INSERT INTO Battle (ID) VALUES (9)
01.09 16:00:21 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:00:21 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 16:00:21 STATS: cache [battle], database [87 calls, 0 reads, 0 writes]
01.09 16:00:21 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 16:00:21 READDB: SELECT * FROM Battle WHERE ID = 9
01.09 16:00:21 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.06 ms]
01.09 16:00:21 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 16:00:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 16:00:21 TIME: vdl/cache.battle.create : 32.68 ms
01.09 16:00:26 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 9
01.09 16:00:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 16:00:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:00:29 TIME: core/cache.update : 0.18 ms
01.09 16:00:30 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:00:54 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
01.09 16:00:54 TIMER: Clans cache...
01.09 16:00:54 TIMER: Clans cache: 0ms
01.09 16:01:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 16:01:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 16:01:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 16:01:12 TIME: core/server.query : 2.54 ms
01.09 16:01:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 16:01:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 16:01:12 TIME: core/user.isOnlineID : 0.17 ms
01.09 16:01:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 16:01:12 READDB: SELECT * FROM Users WHERE ID = 2
01.09 16:01:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 16:01:12 TIME: core/cache.get : 1.61 ms
01.09 16:01:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 16:01:12 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 16:01:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 16:01:12 TIME: core/cache.get : 1.25 ms
01.09 16:01:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 16:01:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:01:12 TIME: core/user.loginPost : 0.13 ms
01.09 16:01:12 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:01:12 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:01:12 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 16:01:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [9], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 16:01:12 TIME: vdl/cache.battle.find : 2.74 ms
01.09 16:01:12 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 9, selfId => 2, _type => vdl/cache.battle.join }
01.09 16:01:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { errorCode => true, firstid => 3, _type => vdl/cache.battle.join, player => 2 }
01.09 16:01:12 TIME: vdl/cache.battle.join : 0.28 ms
01.09 16:01:12 WRITEDB: UPDATE Battle SET secondid = E'1', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 9
01.09 16:01:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 16:01:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:01:19 TIME: core/cache.update : 0.16 ms
01.09 16:01:19 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 16:01:54 TIMER: Clans cache...
01.09 16:01:54 TIMER: Clans cache: 0ms
01.09 16:02:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 16:02:29 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:02:29 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
01.09 16:02:29 STATS: cache [user], database [215 calls, 2 reads, 2 writes]
01.09 16:02:29 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 16:02:29 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.27 ms]
01.09 16:02:29 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.19 ms]
01.09 16:02:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 16:02:29 TIME: core/cache.update : 0.78 ms
01.09 16:02:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 16:02:29 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:02:29 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
01.09 16:02:29 STATS: cache [questdata], database [215 calls, 2 reads, 0 writes]
01.09 16:02:29 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 16:02:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:02:29 TIME: core/cache.update : 0.3 ms
01.09 16:02:29 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 16:02:29 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 16:02:29 TIME: core/user.logoutPost : 0.09 ms
01.09 16:02:30 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:02:30 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 16:02:40 BLOCKREMOVE: user 3 removed
01.09 16:02:40 BLOCKREMOVE: questdata 3 removed
01.09 16:02:54 TIMER: Clans cache...
01.09 16:02:54 TIMER: Clans cache: 0ms
01.09 16:02:54 TIMER: Clans cache...
01.09 16:02:54 TIMER: Clans cache: 0ms
01.09 16:02:54 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 16:02:54 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:02:54 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
01.09 16:02:54 STATS: cache [user], database [360 calls, 2 reads, 3 writes]
01.09 16:02:54 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 16:02:54 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.27 ms]
01.09 16:02:54 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.2 ms]
01.09 16:02:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 16:02:54 TIME: core/cache.update : 0.39 ms
01.09 16:02:54 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 16:02:54 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:02:54 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
01.09 16:02:54 STATS: cache [questdata], database [360 calls, 2 reads, 1 writes]
01.09 16:02:54 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 16:02:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:02:54 TIME: core/cache.update : 2.75 ms
01.09 16:02:54 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 16:02:54 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 16:02:54 TIME: core/user.logoutPost : 0.11 ms
01.09 16:02:54 TIMER: Clans cache...
01.09 16:02:54 TIMER: Clans cache: 0ms
01.09 16:04:55 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 16:04:55 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 16:06:37 TIMER: Starting timer...
01.09 16:06:37 TIMER: Timer running...
01.09 16:06:37 DB: SELECT * FROM GameVars
01.09 16:06:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:06:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:06:37 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:06:37 TEMP: load ./tmp/quest_daily_ids
01.09 16:06:37 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:06:37 TEMP: save ./tmp/quest_daily_ids
01.09 16:06:37 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:06:37 QUEUE: vdl.0 (thread) response server.login
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM LocalizationStrings
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 6.43 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM GameVars
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.47 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.77 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.37 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.57 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.83 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:06:37 TIME: core/quest.getDaily : 0.02 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM UserAttributeTypes
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.37 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM UserVariableTypes
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.3 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:06:37 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 1.08 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM ItemGroups
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.31 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM Bundles ORDER BY ID
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.54 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.36 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 16:06:37 TIME: core/shop.getList : 0.02 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM EffectAttributeTypes
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.39 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM Effects
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.3 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 16:06:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.66 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 16:06:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.51 ms
01.09 16:06:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 16:06:37 DB: SELECT * FROM Badges
01.09 16:06:37 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:06:37 TIME: core/server.query : 0.29 ms
01.09 16:07:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 16:07:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 16:07:09 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:07:09 TIME: core/server.query : 1.95 ms
01.09 16:07:09 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 16:07:09 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 16:07:09 TIME: core/user.isOnlineID : 0.05 ms
01.09 16:07:09 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 16:07:09 READDB: SELECT * FROM Users WHERE ID = 3
01.09 16:07:09 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:07:09 TIME: core/cache.get : 2.99 ms
01.09 16:07:09 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 16:07:09 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 16:07:09 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:07:09 TIME: core/cache.get : 1.05 ms
01.09 16:07:09 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 16:07:09 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:07:09 TIME: core/user.loginPost : 0.09 ms
01.09 16:07:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 16:07:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:07:17 TIME: core/cache.update : 0.23 ms
01.09 16:07:18 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:10:01 TIMER: Starting timer...
01.09 16:10:01 TIMER: Timer running...
01.09 16:10:01 DB: SELECT * FROM GameVars
01.09 16:10:01 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:10:01 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:10:01 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:10:01 TEMP: load ./tmp/quest_daily_ids
01.09 16:10:01 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:10:01 TEMP: save ./tmp/quest_daily_ids
01.09 16:10:02 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:10:02 QUEUE: vdl.0 (thread) response server.login
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM LocalizationStrings
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 8.25 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM GameVars
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.57 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.71 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.52 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.59 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.89 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:10:02 TIME: core/quest.getDaily : 0.02 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM UserAttributeTypes
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.42 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM UserVariableTypes
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.47 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:10:02 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 1.13 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM ItemGroups
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.4 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM Bundles ORDER BY ID
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.52 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.38 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 16:10:02 TIME: core/shop.getList : 0.08 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM EffectAttributeTypes
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.48 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM Effects
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.32 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 16:10:02 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.72 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 16:10:02 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.63 ms
01.09 16:10:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 16:10:02 DB: SELECT * FROM Badges
01.09 16:10:02 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:10:02 TIME: core/server.query : 0.31 ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:10:02 TIMER: Clans cache...
01.09 16:10:02 TIMER: Clans cache: 0ms
01.09 16:26:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 16:26:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 16:26:30 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:26:30 TIME: core/server.query : 2.69 ms
01.09 16:26:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 16:26:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 16:26:30 TIME: core/user.isOnlineID : 0.09 ms
01.09 16:26:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 16:26:30 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:26:30 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 16:26:30 STATS: cache [user], database [989 calls, 0 reads, 0 writes]
01.09 16:26:30 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 16:26:30 READDB: SELECT * FROM Users WHERE ID = 3
01.09 16:26:30 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.17 ms]
01.09 16:26:30 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 16:26:30 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:26:30 TIME: core/cache.get : 4.36 ms
01.09 16:26:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 16:26:30 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:26:30 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 16:26:30 STATS: cache [questdata], database [989 calls, 0 reads, 0 writes]
01.09 16:26:30 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 16:26:30 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 16:26:30 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:26:30 TIME: core/cache.get : 1.76 ms
01.09 16:26:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 16:26:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:26:30 TIME: core/user.loginPost : 0.1 ms
01.09 16:26:30 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:26:30 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:26:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 16:26:30 TIME: vdl/cache.battle.find : 1.84 ms
01.09 16:26:30 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 16:26:30 DB: SELECT nextval('Battle_id_seq') AS id
01.09 16:26:30 READDB: SELECT ID FROM Battle WHERE ID = 10
01.09 16:26:30 READDB: INSERT INTO Battle (ID) VALUES (10)
01.09 16:26:30 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:26:30 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 16:26:30 STATS: cache [battle], database [989 calls, 0 reads, 0 writes]
01.09 16:26:30 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 16:26:30 READDB: SELECT * FROM Battle WHERE ID = 10
01.09 16:26:30 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.77 ms]
01.09 16:26:30 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 16:26:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 16:26:30 TIME: vdl/cache.battle.create : 38.85 ms
01.09 16:26:36 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 10
01.09 16:26:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 16:26:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:26:37 TIME: core/cache.update : 0.18 ms
01.09 16:26:38 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:26:54 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 16:26:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 16:26:54 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 16:26:54 TIME: core/server.query : 2.79 ms
01.09 16:26:54 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 16:26:54 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 16:26:54 TIME: core/user.isOnlineID : 0.12 ms
01.09 16:26:54 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 16:26:54 READDB: SELECT * FROM Users WHERE ID = 2
01.09 16:26:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 16:26:54 TIME: core/cache.get : 1.83 ms
01.09 16:26:54 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 16:26:54 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 16:26:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 16:26:54 TIME: core/cache.get : 1.22 ms
01.09 16:26:54 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 16:26:54 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:26:54 TIME: core/user.loginPost : 0.13 ms
01.09 16:26:54 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:26:54 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:26:54 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 16:26:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [10], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 16:26:54 TIME: vdl/cache.battle.find : 2.64 ms
01.09 16:26:54 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 10, selfId => 2, _type => vdl/cache.battle.join }
01.09 16:26:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { secondid => 1, errorCode => true, firstid => 3, _type => vdl/cache.battle.join, player => 2 }
01.09 16:26:54 TIME: vdl/cache.battle.join : 0.88 ms
01.09 16:26:54 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:26:54 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:26:54 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 16:26:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [10], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 16:26:54 TIME: vdl/cache.battle.find : 2.15 ms
01.09 16:26:54 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 10, selfId => 3, _type => vdl/cache.battle.join }
01.09 16:26:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { secondid => 1, errorCode => true, firstid => 3, _type => vdl/cache.battle.join, player => 2 }
01.09 16:26:54 TIME: vdl/cache.battle.join : 0.2 ms
01.09 16:26:54 WRITEDB: UPDATE Battle SET secondid = E'1', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 10
01.09 16:27:02 TIMER: Clans cache...
01.09 16:27:02 TIMER: Clans cache: 0ms
01.09 16:27:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 16:27:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:27:02 TIME: core/cache.update : 0.15 ms
01.09 16:27:03 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 16:28:02 TIMER: Clans cache...
01.09 16:28:02 TIMER: Clans cache: 0ms
01.09 16:28:02 TIMER: Clans cache...
01.09 16:28:02 TIMER: Clans cache: 0ms
01.09 16:29:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 16:29:21 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:29:21 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
01.09 16:29:21 STATS: cache [user], database [1160 calls, 2 reads, 2 writes]
01.09 16:29:21 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 16:29:21 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.06 ms]
01.09 16:29:21 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.13 ms]
01.09 16:29:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 16:29:21 TIME: core/cache.update : 0.63 ms
01.09 16:29:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 16:29:21 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:29:21 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
01.09 16:29:21 STATS: cache [questdata], database [1160 calls, 2 reads, 0 writes]
01.09 16:29:21 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 16:29:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:29:21 TIME: core/cache.update : 0.5 ms
01.09 16:29:21 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 16:29:21 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 16:29:21 TIME: core/user.logoutPost : 0.16 ms
01.09 16:29:22 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:29:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 16:30:00 TIMER: Starting timer...
01.09 16:30:00 TIMER: Timer running...
01.09 16:30:00 DB: SELECT * FROM GameVars
01.09 16:30:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:30:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:30:00 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:30:00 TEMP: load ./tmp/quest_daily_ids
01.09 16:30:00 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:30:00 TEMP: save ./tmp/quest_daily_ids
01.09 16:30:00 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:30:00 QUEUE: vdl.0 (thread) response server.login
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM LocalizationStrings
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 9.89 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM GameVars
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.57 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.72 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.47 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.55 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.88 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:30:00 TIME: core/quest.getDaily : 0.03 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM UserAttributeTypes
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.47 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM UserVariableTypes
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.42 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:30:00 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 1.1 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM ItemGroups
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.44 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM Bundles ORDER BY ID
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.45 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.48 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 16:30:00 TIME: core/shop.getList : 0.04 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM EffectAttributeTypes
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.41 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM Effects
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.46 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 16:30:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.65 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 16:30:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.67 ms
01.09 16:30:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 16:30:00 DB: SELECT * FROM Badges
01.09 16:30:00 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:00 TIME: core/server.query : 0.39 ms
01.09 16:30:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 16:30:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 16:30:05 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:30:05 TIME: core/server.query : 2.71 ms
01.09 16:30:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 16:30:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 16:30:05 TIME: core/user.isOnlineID : 0.09 ms
01.09 16:30:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 16:30:05 READDB: SELECT * FROM Users WHERE ID = 3
01.09 16:30:05 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:30:05 TIME: core/cache.get : 6.81 ms
01.09 16:30:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 16:30:05 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 16:30:05 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:30:05 TIME: core/cache.get : 1.46 ms
01.09 16:30:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 16:30:05 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:30:05 TIME: core/user.loginPost : 0.1 ms
01.09 16:30:05 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:30:05 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:30:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 16:30:05 TIME: vdl/cache.battle.find : 2.02 ms
01.09 16:30:05 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 16:30:05 DB: SELECT nextval('Battle_id_seq') AS id
01.09 16:30:05 READDB: SELECT ID FROM Battle WHERE ID = 11
01.09 16:30:05 READDB: INSERT INTO Battle (ID) VALUES (11)
01.09 16:30:05 READDB: SELECT * FROM Battle WHERE ID = 11
01.09 16:30:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 16:30:05 TIME: vdl/cache.battle.create : 29.86 ms
01.09 16:30:11 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 11
01.09 16:30:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 16:30:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:30:15 TIME: core/cache.update : 0.13 ms
01.09 16:30:16 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:30:54 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 16:30:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 16:30:54 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 16:30:54 TIME: core/server.query : 2.13 ms
01.09 16:30:54 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 16:30:54 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 16:30:54 TIME: core/user.isOnlineID : 0.1 ms
01.09 16:30:54 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 16:30:54 READDB: SELECT * FROM Users WHERE ID = 2
01.09 16:30:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 16:30:54 TIME: core/cache.get : 1.15 ms
01.09 16:30:54 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 16:30:54 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 16:30:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 16:30:54 TIME: core/cache.get : 0.73 ms
01.09 16:30:54 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 16:30:54 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:30:54 TIME: core/user.loginPost : 0.1 ms
01.09 16:30:54 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:30:54 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:30:54 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 16:30:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [11], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 16:30:54 TIME: vdl/cache.battle.find : 2.74 ms
01.09 16:30:54 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 11, selfId => 2, _type => vdl/cache.battle.join }
01.09 16:30:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { secondid => 2, errorCode => true, firstid => 3, _type => vdl/cache.battle.join, player => 2 }
01.09 16:30:54 TIME: vdl/cache.battle.join : 0.25 ms
01.09 16:30:55 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 11
01.09 16:31:00 TIMER: Clans cache...
01.09 16:31:00 TIMER: Clans cache: 0ms
01.09 16:31:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 16:31:00 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:31:00 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
01.09 16:31:00 STATS: cache [user], database [61 calls, 2 reads, 1 writes]
01.09 16:31:00 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 16:31:00 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.42 ms]
01.09 16:31:00 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.12 ms]
01.09 16:31:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:31:00 TIME: core/cache.update : 0.32 ms
01.09 16:34:22 TIMER: Starting timer...
01.09 16:34:22 TIMER: Timer running...
01.09 16:34:22 DB: SELECT * FROM GameVars
01.09 16:34:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:34:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:34:22 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:34:22 TEMP: load ./tmp/quest_daily_ids
01.09 16:34:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:34:22 TEMP: save ./tmp/quest_daily_ids
01.09 16:34:22 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:34:22 QUEUE: vdl.0 (thread) response server.login
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM LocalizationStrings
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 8.97 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM GameVars
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.59 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.91 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.51 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.77 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.86 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:34:22 TIME: core/quest.getDaily : 0.05 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM UserAttributeTypes
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.36 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM UserVariableTypes
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.47 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:34:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 1.4 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM ItemGroups
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.61 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM Bundles ORDER BY ID
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.5 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.45 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 16:34:22 TIME: core/shop.getList : 0.04 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM EffectAttributeTypes
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.53 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM Effects
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.36 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 16:34:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.85 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 16:34:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.58 ms
01.09 16:34:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 16:34:22 DB: SELECT * FROM Badges
01.09 16:34:22 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:34:22 TIME: core/server.query : 0.44 ms
01.09 16:34:22 TIMER: Clans cache...
01.09 16:34:22 TIMER: Clans cache: 0ms
01.09 16:34:22 TIMER: Clans cache...
01.09 16:34:22 TIMER: Clans cache: 0ms
01.09 16:34:22 TIMER: Clans cache...
01.09 16:34:22 TIMER: Clans cache: 0ms
01.09 16:37:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 16:37:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 16:37:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:37:47 TIME: core/server.query : 1.42 ms
01.09 16:37:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 16:37:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 16:37:47 TIME: core/user.isOnlineID : 0.03 ms
01.09 16:37:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 16:37:47 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:37:47 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 16:37:47 STATS: cache [user], database [205 calls, 0 reads, 0 writes]
01.09 16:37:47 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 16:37:47 READDB: SELECT * FROM Users WHERE ID = 3
01.09 16:37:47 STATS: cache manager [1], get [1 calls, total 0.14 sec spent, avg 144.52 ms]
01.09 16:37:47 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 16:37:47 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:37:47 TIME: core/cache.get : 144.63 ms
01.09 16:37:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 16:37:47 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:37:47 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 16:37:47 STATS: cache [questdata], database [205 calls, 0 reads, 0 writes]
01.09 16:37:47 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 16:37:47 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 16:37:47 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:37:47 TIME: core/cache.get : 0.92 ms
01.09 16:37:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 16:37:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:37:47 TIME: core/user.loginPost : 0.09 ms
01.09 16:37:47 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:37:47 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:37:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 16:37:47 TIME: vdl/cache.battle.find : 1.05 ms
01.09 16:37:47 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 16:37:47 DB: SELECT nextval('Battle_id_seq') AS id
01.09 16:37:47 READDB: SELECT ID FROM Battle WHERE ID = 12
01.09 16:37:47 READDB: INSERT INTO Battle (ID) VALUES (12)
01.09 16:37:47 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:37:47 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 16:37:47 STATS: cache [battle], database [205 calls, 0 reads, 0 writes]
01.09 16:37:47 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 16:37:47 READDB: SELECT * FROM Battle WHERE ID = 12
01.09 16:37:47 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.92 ms]
01.09 16:37:47 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 16:37:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 16:37:47 TIME: vdl/cache.battle.create : 46.03 ms
01.09 16:37:52 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 12
01.09 16:37:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 16:37:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:37:52 TIME: core/cache.update : 0.13 ms
01.09 16:37:53 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:38:22 TIMER: Clans cache...
01.09 16:38:22 TIMER: Clans cache: 0ms
01.09 16:38:34 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 16:38:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 16:38:34 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 16:38:34 TIME: core/server.query : 6.08 ms
01.09 16:38:34 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 16:38:34 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 16:38:34 TIME: core/user.isOnlineID : 0.11 ms
01.09 16:38:34 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 16:38:34 READDB: SELECT * FROM Users WHERE ID = 2
01.09 16:38:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 16:38:34 TIME: core/cache.get : 2.18 ms
01.09 16:38:34 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 16:38:34 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 16:38:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 16:38:34 TIME: core/cache.get : 0.87 ms
01.09 16:38:34 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 16:38:34 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:38:34 TIME: core/user.loginPost : 0.24 ms
01.09 16:38:34 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:38:34 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:38:34 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 16:38:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [12], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 16:38:34 TIME: vdl/cache.battle.find : 2.6 ms
01.09 16:38:34 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 12, selfId => 2, _type => vdl/cache.battle.join }
01.09 16:38:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { secondid => 2, errorCode => true, firstid => 3, _type => vdl/cache.battle.join, player => 2 }
01.09 16:38:34 TIME: vdl/cache.battle.join : 0.27 ms
01.09 16:38:34 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM battle WHERE id=2, _type => core/server.query }
01.09 16:38:34 DB: SELECT name FROM battle WHERE id=2
01.09 16:38:34 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 12
01.09 16:38:34 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
01.09 16:38:34 TIME: core/server.query : 82.12 ms
01.09 16:38:34 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM battle WHERE id=3, _type => core/server.query }
01.09 16:38:34 DB: SELECT name FROM battle WHERE id=3
01.09 16:38:34 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
01.09 16:38:34 TIME: core/server.query : 10.56 ms
01.09 16:38:42 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 16:38:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:38:42 TIME: core/cache.update : 0.1 ms
01.09 16:38:42 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 16:39:22 TIMER: Clans cache...
01.09 16:39:22 TIMER: Clans cache: 0ms
01.09 16:39:22 TIMER: Clans cache...
01.09 16:39:22 TIMER: Clans cache: 0ms
01.09 16:40:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 16:40:44 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:40:44 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
01.09 16:40:44 STATS: cache [user], database [382 calls, 2 reads, 2 writes]
01.09 16:40:44 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 16:40:44 STATS: cache manager [1], get [4 calls, total 0.15 sec spent, avg 36.99 ms]
01.09 16:40:44 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.15 ms]
01.09 16:40:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 16:40:44 TIME: core/cache.update : 0.76 ms
01.09 16:40:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 16:40:44 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:40:44 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
01.09 16:40:44 STATS: cache [questdata], database [382 calls, 2 reads, 0 writes]
01.09 16:40:44 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 16:40:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:40:44 TIME: core/cache.update : 0.39 ms
01.09 16:40:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 16:40:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 16:40:44 TIME: core/user.logoutPost : 0.09 ms
01.09 16:40:44 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:40:44 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 16:40:54 BLOCKREMOVE: user 3 removed
01.09 16:40:54 BLOCKREMOVE: questdata 3 removed
01.09 16:42:15 TIMER: Starting timer...
01.09 16:42:15 TIMER: Timer running...
01.09 16:42:15 DB: SELECT * FROM GameVars
01.09 16:42:15 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:42:15 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:42:15 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:42:15 TEMP: load ./tmp/quest_daily_ids
01.09 16:42:15 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:42:15 TEMP: save ./tmp/quest_daily_ids
01.09 16:42:15 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:42:15 QUEUE: vdl.0 (thread) response server.login
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM LocalizationStrings
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 5.56 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM GameVars
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.56 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.6 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.38 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.49 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.74 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:42:15 TIME: core/quest.getDaily : 0.02 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM UserAttributeTypes
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.33 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM UserVariableTypes
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.33 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:42:15 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 1.14 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM ItemGroups
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.36 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM Bundles ORDER BY ID
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.59 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.38 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 16:42:15 TIME: core/shop.getList : 0.02 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM EffectAttributeTypes
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.47 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM Effects
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.5 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 16:42:15 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.6 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 16:42:15 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.55 ms
01.09 16:42:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 16:42:15 DB: SELECT * FROM Badges
01.09 16:42:15 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:42:15 TIME: core/server.query : 0.41 ms
01.09 16:42:15 TIMER: Clans cache...
01.09 16:42:15 TIMER: Clans cache: 0ms
01.09 16:42:15 TIMER: Clans cache...
01.09 16:42:15 TIMER: Clans cache: 0ms
01.09 16:44:24 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
01.09 16:44:24 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
01.09 16:44:24 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:44:24 TIME: core/server.query : 2.21 ms
01.09 16:44:24 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
01.09 16:44:24 QUEUE: vdl.0 (thread) response core/user.isOnlineID
01.09 16:44:24 TIME: core/user.isOnlineID : 0.07 ms
01.09 16:44:24 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
01.09 16:44:24 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:44:24 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
01.09 16:44:24 STATS: cache [user], database [130 calls, 0 reads, 0 writes]
01.09 16:44:24 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
01.09 16:44:24 READDB: SELECT * FROM Users WHERE ID = 3
01.09 16:44:24 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.38 ms]
01.09 16:44:24 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 16:44:24 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:44:24 TIME: core/cache.get : 3.54 ms
01.09 16:44:24 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
01.09 16:44:24 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:44:24 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
01.09 16:44:24 STATS: cache [questdata], database [130 calls, 0 reads, 0 writes]
01.09 16:44:24 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
01.09 16:44:24 READDB: SELECT * FROM UserQuests WHERE ID = 3
01.09 16:44:24 QUEUE: vdl.0 (thread) response core/cache.get
01.09 16:44:24 TIME: core/cache.get : 1.29 ms
01.09 16:44:24 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 16:44:24 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:44:24 TIME: core/user.loginPost : 0.08 ms
01.09 16:44:24 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:44:24 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:44:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
01.09 16:44:24 TIME: vdl/cache.battle.find : 1.88 ms
01.09 16:44:24 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
01.09 16:44:24 DB: SELECT nextval('Battle_id_seq') AS id
01.09 16:44:24 READDB: SELECT ID FROM Battle WHERE ID = 13
01.09 16:44:24 READDB: INSERT INTO Battle (ID) VALUES (13)
01.09 16:44:24 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
01.09 16:44:24 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
01.09 16:44:24 STATS: cache [battle], database [130 calls, 0 reads, 0 writes]
01.09 16:44:24 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 16:44:24 READDB: SELECT * FROM Battle WHERE ID = 13
01.09 16:44:24 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.67 ms]
01.09 16:44:24 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
01.09 16:44:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
01.09 16:44:24 TIME: vdl/cache.battle.create : 40.08 ms
01.09 16:44:30 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 13
01.09 16:44:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
01.09 16:44:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:44:30 TIME: core/cache.update : 0.11 ms
01.09 16:44:31 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:45:15 TIMER: Clans cache...
01.09 16:45:15 TIMER: Clans cache: 0ms
01.09 16:45:48 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 16:45:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 16:45:48 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 16:45:48 TIME: core/server.query : 2.36 ms
01.09 16:45:48 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 16:45:48 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 16:45:48 TIME: core/user.isOnlineID : 0.09 ms
01.09 16:45:48 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 16:45:48 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 16:45:48 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
01.09 16:45:48 STATS: cache [user], database [214 calls, 1 reads, 1 writes]
01.09 16:45:48 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 16:45:48 READDB: SELECT * FROM Users WHERE ID = 2
01.09 16:45:48 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 1.97 ms]
01.09 16:45:48 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.05 ms]
01.09 16:45:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 16:45:48 TIME: core/cache.get : 1.63 ms
01.09 16:45:48 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 16:45:48 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 16:45:48 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
01.09 16:45:48 STATS: cache [questdata], database [214 calls, 1 reads, 0 writes]
01.09 16:45:48 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 16:45:48 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 16:45:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 16:45:48 TIME: core/cache.get : 1.06 ms
01.09 16:45:48 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
01.09 16:45:48 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 16:45:48 TIME: core/user.loginPost : 0.11 ms
01.09 16:45:48 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 16:45:48 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 16:45:48 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 16:45:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [13], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
01.09 16:45:48 TIME: vdl/cache.battle.find : 2.43 ms
01.09 16:45:48 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 13, selfId => 2, _type => vdl/cache.battle.join }
01.09 16:45:48 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 16:45:48 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
01.09 16:45:48 STATS: cache [battle], database [214 calls, 1 reads, 1 writes]
01.09 16:45:48 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
01.09 16:45:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { secondid => 2, errorCode => true, firstid => 3, _type => vdl/cache.battle.join, player => 2 }
01.09 16:45:48 TIME: vdl/cache.battle.join : 0.58 ms
01.09 16:45:48 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
01.09 16:45:48 DB: SELECT name FROM users WHERE id=2
01.09 16:45:48 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
01.09 16:45:48 TIME: core/server.query : 1.77 ms
01.09 16:45:48 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
01.09 16:45:48 DB: SELECT name FROM users WHERE id=3
01.09 16:45:48 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
01.09 16:45:48 TIME: core/server.query : 0.59 ms
01.09 16:45:49 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 13
01.09 16:45:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 16:45:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:45:55 TIME: core/cache.update : 0.17 ms
01.09 16:45:55 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 16:46:15 TIMER: Clans cache...
01.09 16:46:15 TIMER: Clans cache: 0ms
01.09 16:46:15 TIMER: Clans cache...
01.09 16:46:15 TIMER: Clans cache: 0ms
01.09 16:46:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
01.09 16:46:15 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:46:15 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
01.09 16:46:15 STATS: cache [user], database [360 calls, 2 reads, 2 writes]
01.09 16:46:15 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 16:46:15 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.71 ms]
01.09 16:46:15 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.11 ms]
01.09 16:46:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 16:46:15 TIME: core/cache.update : 0.47 ms
01.09 16:46:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
01.09 16:46:15 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:46:15 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
01.09 16:46:15 STATS: cache [questdata], database [360 calls, 2 reads, 0 writes]
01.09 16:46:15 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 16:46:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:46:15 TIME: core/cache.update : 0.46 ms
01.09 16:46:15 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
01.09 16:46:15 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 16:46:15 TIME: core/user.logoutPost : 0.14 ms
01.09 16:46:15 TIMER: Clans cache...
01.09 16:46:15 TIMER: Clans cache: 0ms
01.09 16:46:15 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 3
01.09 16:46:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
01.09 16:48:25 BLOCKREMOVE: user 3 removed
01.09 16:48:25 BLOCKREMOVE: questdata 3 removed
01.09 16:49:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 16:49:15 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:49:15 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
01.09 16:49:15 STATS: cache [user], database [420 calls, 2 reads, 3 writes]
01.09 16:49:15 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 16:49:15 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.71 ms]
01.09 16:49:15 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.2 ms]
01.09 16:49:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 16:49:15 TIME: core/cache.update : 0.59 ms
01.09 16:49:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 16:49:15 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 16:49:15 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
01.09 16:49:15 STATS: cache [questdata], database [420 calls, 2 reads, 1 writes]
01.09 16:49:15 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 16:49:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 16:49:15 TIME: core/cache.update : 0.51 ms
01.09 16:49:15 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 16:49:15 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 16:49:15 TIME: core/user.logoutPost : 0.11 ms
01.09 16:49:15 TIMER: Clans cache...
01.09 16:49:15 TIMER: Clans cache: 0ms
01.09 16:49:15 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 16:49:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 16:49:25 BLOCKREMOVE: user 2 removed
01.09 16:49:25 BLOCKREMOVE: questdata 2 removed
01.09 16:54:21 TIMER: Starting timer...
01.09 16:54:21 TIMER: Timer running...
01.09 16:54:21 DB: SELECT * FROM GameVars
01.09 16:54:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:54:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:54:21 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:54:21 TEMP: load ./tmp/quest_daily_ids
01.09 16:54:21 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:54:21 TEMP: save ./tmp/quest_daily_ids
01.09 16:54:21 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:54:21 QUEUE: vdl.0 (thread) response server.login
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:54:21 DB: SELECT * FROM LocalizationStrings
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:21 TIME: core/server.query : 7.4 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:54:21 DB: SELECT * FROM GameVars
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:21 TIME: core/server.query : 0.62 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:54:21 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:21 TIME: core/server.query : 0.67 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:54:21 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:21 TIME: core/server.query : 0.52 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:54:21 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:21 TIME: core/server.query : 0.51 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:54:21 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:21 TIME: core/server.query : 0.97 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:54:21 TIME: core/quest.getDaily : 0.02 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:54:21 DB: SELECT * FROM UserAttributeTypes
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:21 TIME: core/server.query : 0.37 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:54:21 DB: SELECT * FROM UserVariableTypes
01.09 16:54:21 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:21 TIME: core/server.query : 0.35 ms
01.09 16:54:21 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:54:21 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.01.09 16:54:47 TIMER: Starting timer...
01.09 16:54:47 TIMER: Timer running...
01.09 16:54:47 DB: SELECT * FROM GameVars
01.09 16:54:47 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:54:47 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:54:47 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:54:47 TEMP: load ./tmp/quest_daily_ids
01.09 16:54:47 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:54:47 TEMP: save ./tmp/quest_daily_ids
01.09 16:54:47 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:54:47 QUEUE: vdl.0 (thread) response server.login
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:54:47 DB: SELECT * FROM LocalizationStrings
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:47 TIME: core/server.query : 7.34 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:54:47 DB: SELECT * FROM GameVars
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:47 TIME: core/server.query : 0.64 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:54:47 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:47 TIME: core/server.query : 0.81 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:54:47 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:47 TIME: core/server.query : 0.38 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:54:47 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:47 TIME: core/server.query : 0.59 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:54:47 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:47 TIME: core/server.query : 0.8 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:54:47 TIME: core/quest.getDaily : 0.03 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:54:47 DB: SELECT * FROM UserAttributeTypes
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:47 TIME: core/server.query : 0.48 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:54:47 DB: SELECT * FROM UserVariableTypes
01.09 16:54:47 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:47 TIME: core/server.query : 0.3 ms
01.09 16:54:47 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:54:47 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.T01.09 16:54:55 TIMER: Starting timer...
01.09 16:54:55 TIMER: Timer running...
01.09 16:54:55 DB: SELECT * FROM GameVars
01.09 16:54:55 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:54:55 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:54:55 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:54:55 TEMP: load ./tmp/quest_daily_ids
01.09 16:54:55 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:54:55 TEMP: save ./tmp/quest_daily_ids
01.09 16:54:55 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:54:55 QUEUE: vdl.0 (thread) response server.login
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:54:55 DB: SELECT * FROM LocalizationStrings
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:55 TIME: core/server.query : 8.09 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:54:55 DB: SELECT * FROM GameVars
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:55 TIME: core/server.query : 0.78 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:54:55 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:55 TIME: core/server.query : 0.64 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:54:55 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:55 TIME: core/server.query : 0.54 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:54:55 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:55 TIME: core/server.query : 0.46 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:54:55 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:55 TIME: core/server.query : 0.84 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:54:55 TIME: core/quest.getDaily : 0.02 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:54:55 DB: SELECT * FROM UserAttributeTypes
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:55 TIME: core/server.query : 0.31 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:54:55 DB: SELECT * FROM UserVariableTypes
01.09 16:54:55 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:54:55 TIME: core/server.query : 0.83 ms
01.09 16:54:55 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:54:55 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i01.09 16:59:58 TIMER: Starting timer...
01.09 16:59:58 TIMER: Timer running...
01.09 16:59:58 DB: SELECT * FROM GameVars
01.09 16:59:58 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 16:59:58 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 16:59:58 DB: SELECT * FROM Shops WHERE ID = 1
01.09 16:59:58 TEMP: load ./tmp/quest_daily_ids
01.09 16:59:58 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 16:59:58 TEMP: save ./tmp/quest_daily_ids
01.09 16:59:58 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 16:59:58 QUEUE: vdl.0 (thread) response server.login
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 16:59:58 DB: SELECT * FROM LocalizationStrings
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:59:58 TIME: core/server.query : 7.57 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 16:59:58 DB: SELECT * FROM GameVars
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:59:58 TIME: core/server.query : 0.89 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 16:59:58 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:59:58 TIME: core/server.query : 0.99 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 16:59:58 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:59:58 TIME: core/server.query : 0.59 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 16:59:58 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:59:58 TIME: core/server.query : 0.57 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 16:59:58 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:59:58 TIME: core/server.query : 0.77 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 16:59:58 TIME: core/quest.getDaily : 0.02 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 16:59:58 DB: SELECT * FROM UserAttributeTypes
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:59:58 TIME: core/server.query : 0.32 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 16:59:58 DB: SELECT * FROM UserVariableTypes
01.09 16:59:58 QUEUE: vdl.0 (thread) response core/server.query
01.09 16:59:58 TIME: core/server.query : 0.31 ms
01.09 16:59:58 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 16:59:58 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i