11.10 19:16:18 TIMER: Starting timer...
11.10 19:16:18 TIMER: Timer running...
11.10 19:16:18 DB: SELECT * FROM GameVars
11.10 19:16:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 19:16:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 19:16:18 DB: SELECT * FROM Shops WHERE ID = 1
11.10 19:16:18 TEMP: load ./tmp/quest_daily_ids
11.10 19:16:18 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 19:16:18 TEMP: save ./tmp/quest_daily_ids
11.10 19:16:18 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
11.10 19:16:18 QUEUE: vdl.0 (thread) response server.login
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 19:16:18 DB: SELECT * FROM LocalizationStrings
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:18 TIME: core/server.query : 11.79 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 19:16:18 DB: SELECT * FROM GameVars
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:18 TIME: core/server.query : 0.72 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 19:16:18 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:18 TIME: core/server.query : 0.99 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 19:16:18 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:18 TIME: core/server.query : 0.62 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 19:16:18 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:18 TIME: core/server.query : 1.72 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 19:16:18 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:18 TIME: core/server.query : 2.74 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/quest.getDaily
11.10 19:16:18 TIME: core/quest.getDaily : 0.03 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 19:16:18 DB: SELECT * FROM UserAttributeTypes
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:18 TIME: core/server.query : 0.53 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 19:16:18 DB: SELECT * FROM UserVariableTypes
11.10 19:16:18 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:18 TIME: core/server.query : 0.57 ms
11.10 19:16:18 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 19:16:18 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, 11.10 19:16:26 TIMER: Starting timer...
11.10 19:16:26 TIMER: Timer running...
11.10 19:16:26 DB: SELECT * FROM GameVars
11.10 19:16:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 19:16:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 19:16:26 DB: SELECT * FROM Shops WHERE ID = 1
11.10 19:16:26 TEMP: load ./tmp/quest_daily_ids
11.10 19:16:26 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 19:16:26 TEMP: save ./tmp/quest_daily_ids
11.10 19:16:26 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
11.10 19:16:26 QUEUE: vdl.0 (thread) response server.login
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM LocalizationStrings
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 6.45 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM GameVars
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.49 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.65 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.37 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.67 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.81 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/quest.getDaily
11.10 19:16:26 TIME: core/quest.getDaily : 0.02 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM UserAttributeTypes
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.45 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM UserVariableTypes
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.33 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 19:16:26 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.93 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM ItemGroups
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.37 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM Bundles ORDER BY ID
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.49 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.51 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/shop.getList
11.10 19:16:26 TIME: core/shop.getList : 0.02 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM EffectAttributeTypes
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.32 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM Effects
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.59 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
11.10 19:16:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.6 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
11.10 19:16:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.74 ms
11.10 19:16:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
11.10 19:16:26 DB: SELECT * FROM Badges
11.10 19:16:26 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:16:26 TIME: core/server.query : 0.33 ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:16:26 TIMER: Clans cache...
11.10 19:16:26 TIMER: Clans cache: 0ms
11.10 19:42:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
11.10 19:42:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
11.10 19:42:01 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:42:01 TIME: core/server.query : 90.34 ms
11.10 19:42:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
11.10 19:42:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID
11.10 19:42:01 TIME: core/user.isOnlineID : 0.05 ms
11.10 19:42:02 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
11.10 19:42:02 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 19:42:02 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
11.10 19:42:02 STATS: cache [user], database [1536 calls, 0 reads, 0 writes]
11.10 19:42:02 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
11.10 19:42:02 READDB: SELECT * FROM Users WHERE ID = 2
11.10 19:42:02 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.15 ms]
11.10 19:42:02 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
11.10 19:42:02 QUEUE: vdl.0 (thread) response core/cache.get
11.10 19:42:02 TIME: core/cache.get : 3.28 ms
11.10 19:42:02 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
11.10 19:42:02 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 19:42:02 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
11.10 19:42:02 STATS: cache [questdata], database [1536 calls, 0 reads, 0 writes]
11.10 19:42:02 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
11.10 19:42:02 READDB: SELECT * FROM UserQuests WHERE ID = 2
11.10 19:42:02 QUEUE: vdl.0 (thread) response core/cache.get
11.10 19:42:02 TIME: core/cache.get : 65.08 ms
11.10 19:42:02 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
11.10 19:42:02 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
11.10 19:42:02 TIME: core/user.loginPost : 0.09 ms
11.10 19:42:02 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp, _type => core/server.query }
11.10 19:42:02 DB: SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp
11.10 19:42:02 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 19:42:02 TIME: core/server.query : 75.44 ms
11.10 19:42:02 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (2, 'today'::timestamp)
11.10 19:42:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476204122, lastLoginDate => 285, lastLoadDate => 1012 } }}, type => user, unlock => false, id => 2, _type => core/cache.update }
11.10 19:42:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
11.10 19:42:11 TIME: core/cache.update : 0.1 ms
11.10 19:42:12 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476204122,"lastLoginDate":285,"lastLoadDate":1012},"effects":{"list":[]}}' WHERE ID = 2
11.10 19:42:14 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
11.10 19:42:14 DB: SELECT * FROM tournament WHERE winner = -1 AND status = "starting"
11.10 19:42:14 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [], count => 0, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
11.10 19:42:14 TIME: vdl/cache.tournament.getAvailableTournament : 9.21 ms
11.10 19:42:26 TIMER: Clans cache...
11.10 19:42:26 TIMER: Clans cache: 0ms
11.10 19:42:26 TIMER: Clans cache...
11.10 19:42:26 TIMER: Clans cache: 0ms
11.10 19:42:26 TIMER: Clans cache...
11.10 19:42:26 TIMER: Clans cache: 0ms
11.10 19:42:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
11.10 19:42:26 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
11.10 19:42:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 19:42:26 TIME: core/server.query : 81.04 ms
11.10 19:42:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
11.10 19:42:26 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 19:42:26 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
11.10 19:42:26 STATS: cache [battle], database [1740 calls, 0 reads, 0 writes]
11.10 19:42:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
11.10 19:42:26 READDB: SELECT * FROM Battle WHERE ID = 0
11.10 19:42:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
11.10 19:42:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 97
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
11.10 19:42:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
11.10 19:42:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
11.10 19:42:26 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
11.10 19:42:26 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
11.10 19:42:26 STATS: cache [user], database [1740 calls, 1 reads, 1 writes]
11.10 19:42:26 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
11.10 19:42:26 STATS: cache manager [1], get [2 calls, total 0.07 sec spent, avg 34.08 ms]
11.10 19:42:26 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.11 ms]
11.10 19:42:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
11.10 19:42:26 TIME: core/cache.update : 0.31 ms
11.10 19:42:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
11.10 19:42:26 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
11.10 19:42:26 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
11.10 19:42:26 STATS: cache [questdata], database [1740 calls, 1 reads, 0 writes]
11.10 19:42:26 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
11.10 19:42:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
11.10 19:42:26 TIME: core/cache.update : 0.24 ms
11.10 19:42:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
11.10 19:42:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
11.10 19:42:26 TIME: core/user.logoutPost : 0.07 ms
11.10 19:42:26 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476204122,"lastLoginDate":285,"lastLoadDate":1012},"effects":{"list":[]}}' WHERE ID = 2
11.10 19:42:26 TIMER: Clans cache...
11.10 19:42:26 TIMER: Clans cache: 0ms
11.10 19:42:26 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
11.10 19:45:36 BLOCKREMOVE: user 2 removed
11.10 19:45:36 BLOCKREMOVE: questdata 2 removed
11.10 19:47:19 TIMER: Starting timer...
11.10 19:47:19 DB: SELECT * FROM GameVars
11.10 19:47:19 TIMER: Timer running...
11.10 19:47:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 19:47:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 19:47:19 DB: SELECT * FROM Shops WHERE ID = 1
11.10 19:47:19 TEMP: load ./tmp/quest_daily_ids
11.10 19:47:19 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
11.10 19:47:19 TEMP: save ./tmp/quest_daily_ids
11.10 19:47:19 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
11.10 19:47:19 QUEUE: vdl.0 (thread) response server.login
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM LocalizationStrings
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 9.3 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM GameVars
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.57 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.76 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.45 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.8 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.97 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/quest.getDaily
11.10 19:47:19 TIME: core/quest.getDaily : 0.02 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM UserAttributeTypes
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.4 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM UserVariableTypes
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.35 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
11.10 19:47:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 2.15 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM ItemGroups
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.53 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM Bundles ORDER BY ID
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.62 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM BundleItems ORDER BY ID
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.61 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/shop.getList
11.10 19:47:19 TIME: core/shop.getList : 0.03 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM EffectAttributeTypes
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.56 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM Effects
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.55 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
11.10 19:47:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.86 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
11.10 19:47:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.76 ms
11.10 19:47:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
11.10 19:47:19 DB: SELECT * FROM Badges
11.10 19:47:19 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:47:19 TIME: core/server.query : 0.48 ms
11.10 19:47:19 TIMER: Clans cache...
11.10 19:47:19 TIMER: Clans cache: 0ms
11.10 19:47:19 TIMER: Clans cache...
11.10 19:47:19 TIMER: Clans cache: 0ms
11.10 19:47:19 TIMER: Clans cache...
11.10 19:47:19 TIMER: Clans cache: 0ms
11.10 19:47:19 TIMER: Clans cache...
11.10 19:47:19 TIMER: Clans cache: 0ms
11.10 19:47:19 TIMER: Clans cache...
11.10 19:47:19 TIMER: Clans cache: 0ms
11.10 19:53:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
11.10 19:53:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
11.10 19:53:01 QUEUE: vdl.0 (thread) response core/server.query
11.10 19:53:01 TIME: core/server.query : 1.37 ms
11.10 19:53:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
11.10 19:53:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID
11.10 19:53:01 TIME: core/user.isOnlineID : 0.04 ms
11.10 19:53:01 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
11.10 19:53:01 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 19:53:01 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
11.10 19:53:01 STATS: cache [user], database [342 calls, 0 reads, 0 writes]
11.10 19:53:01 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
11.10 19:53:01 READDB: SELECT * FROM Users WHERE ID = 2
11.10 19:53:01 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.18 ms]
11.10 19:53:01 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
11.10 19:53:01 QUEUE: vdl.0 (thread) response core/cache.get
11.10 19:53:01 TIME: core/cache.get : 2.27 ms
11.10 19:53:01 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
11.10 19:53:01 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 19:53:01 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
11.10 19:53:01 STATS: cache [questdata], database [342 calls, 0 reads, 0 writes]
11.10 19:53:01 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
11.10 19:53:01 READDB: SELECT * FROM UserQuests WHERE ID = 2
11.10 19:53:01 QUEUE: vdl.0 (thread) response core/cache.get
11.10 19:53:01 TIME: core/cache.get : 0.72 ms
11.10 19:53:01 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
11.10 19:53:01 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
11.10 19:53:01 TIME: core/user.loginPost : 0.07 ms
11.10 19:53:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
11.10 19:53:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
11.10 19:53:10 TIME: core/cache.update : 0.09 ms
11.10 19:53:10 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476204122,"lastLoginDate":285,"lastLoadDate":1012},"effects":{"list":[]}}' WHERE ID = 2
11.10 19:53:19 TIMER: Clans cache...
11.10 19:53:19 TIMER: Clans cache: 0ms
11.10 19:53:45 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
11.10 19:53:45 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
11.10 19:53:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, id => 1, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
11.10 19:53:45 TIME: vdl/cache.tournament.getAvailableTournament : 1.01 ms
11.10 19:54:19 TIMER: Clans cache...
11.10 19:54:19 TIMER: Clans cache: 0ms
11.10 19:54:19 TIMER: Clans cache...
11.10 19:54:19 TIMER: Clans cache: 0ms
11.10 19:54:19 TIMER: Clans cache...
11.10 19:54:19 TIMER: Clans cache: 0ms
11.10 19:54:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
11.10 19:54:19 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
11.10 19:54:19 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
11.10 19:54:19 TIME: core/server.query : 1.15 ms
11.10 19:54:19 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
11.10 19:54:19 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
11.10 19:54:19 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
11.10 19:54:19 STATS: cache [battle], database [600 calls, 0 reads, 0 writes]
11.10 19:54:19 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
11.10 19:54:19 READDB: SELECT * FROM Battle WHERE ID = 0
11.10 19:54:19 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
11.10 19:54:19 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 97
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
11.10 19:54:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
11.10 19:54:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
11.10 19:54:19 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
11.10 19:54:19 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
11.10 19:54:19 STATS: cache [user], database [600 calls, 1 reads, 1 writes]
11.10 19:54:19 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
11.10 19:54:19 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.43 ms]
11.10 19:54:19 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.12 ms]
11.10 19:54:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
11.10 19:54:19 TIME: core/cache.update : 0.38 ms
11.10 19:54:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
11.10 19:54:19 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
11.10 19:54:19 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
11.10 19:54:19 STATS: cache [questdata], database [600 calls, 1 reads, 0 writes]
11.10 19:54:19 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
11.10 19:54:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
11.10 19:54:19 TIME: core/cache.update : 0.28 ms
11.10 19:54:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
11.10 19:54:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
11.10 19:54:19 TIME: core/user.logoutPost : 0.25 ms
11.10 19:54:19 TIMER: Clans cache...
11.10 19:54:19 TIMER: Clans cache: 0ms
11.10 19:54:19 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476204122,"lastLoginDate":285,"lastLoadDate":1012},"effects":{"list":[]}}' WHERE ID = 2
11.10 19:54:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
11.10 19:57:29 BLOCKREMOVE: user 2 removed
11.10 19:57:29 BLOCKREMOVE: questdata 2 removed
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
11.10 19:58:19 TIMER: Clans cache...
11.10 19:58:19 TIMER: Clans cache: 0ms
