14.10 19:00:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:00:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:00:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:00:10 TIME: core/server.query : 1.68 ms
14.10 19:00:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:00:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:00:10 TIME: core/user.isOnlineID : 0.1 ms
14.10 19:00:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:00:10 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:00:10 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
14.10 19:00:10 STATS: cache [user], database [421 calls, 1 reads, 2 writes]
14.10 19:00:10 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
14.10 19:00:10 READDB: SELECT * FROM Users WHERE ID = 36
14.10 19:00:10 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.14 ms]
14.10 19:00:10 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.11 ms]
14.10 19:00:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:00:10 TIME: core/cache.get : 1.79 ms
14.10 19:00:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:00:10 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:00:10 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
14.10 19:00:10 STATS: cache [questdata], database [421 calls, 1 reads, 1 writes]
14.10 19:00:10 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 19:00:10 READDB: SELECT * FROM UserQuests WHERE ID = 36
14.10 19:00:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:00:10 TIME: core/cache.get : 1.04 ms
14.10 19:00:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:00:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:00:10 TIME: core/user.loginPost : 0.15 ms
14.10 19:00:18 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:18 DB: SELECT * FROM tournament
14.10 19:00:18 STATS: cache [tournament], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:00:18 STATS: cache [tournament], segments [4 calls, 2 hits, 1 misses]
14.10 19:00:18 STATS: cache [tournament], database [429 calls, 1 reads, 0 writes]
14.10 19:00:18 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 19:00:18 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:00:18 DB: SELECT name FROM users WHERE id = 34
14.10 19:00:18 DB: SELECT name FROM users WHERE id = 35
14.10 19:00:18 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 }], battleActive => null, startdate => 2016-14-10 19:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:18 TIME: vdl/cache.tournament.getAvailableTournament : 7.81 ms
14.10 19:00:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:00:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:00:19 TIME: core/cache.update : 0.38 ms
14.10 19:00:19 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:00:21 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 36, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 19:00:21 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:00:21 TIME: vdl/cache.tournament.addUsers : 0.21 ms
14.10 19:00:21 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:21 DB: SELECT * FROM tournament
14.10 19:00:21 DB: SELECT name FROM users WHERE id = 34
14.10 19:00:21 DB: SELECT name FROM users WHERE id = 35
14.10 19:00:21 DB: SELECT name FROM users WHERE id = 36
14.10 19:00:21 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 }], battleActive => null, startdate => 2016-14-10 19:40 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:00:21 TIME: vdl/cache.tournament.getAvailableTournament : 5.71 ms
14.10 19:00:23 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', round = E'1', startdate = E'2016-14-10 19:40', params = E'{"params":{"usersList":[34,35,36]}}' WHERE ID = 1
14.10 19:00:33 BLOCKREMOVE: tournament 1 removed
14.10 19:00:36 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:00:36 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:00:36 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:00:36 TIME: core/server.query : 2.21 ms
14.10 19:00:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:00:36 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
14.10 19:00:36 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
14.10 19:00:36 STATS: cache [battle], database [448 calls, 1 reads, 0 writes]
14.10 19:00:36 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 19:00:36 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 19:00:36 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 19:00:36 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 120
Called from modules/VDLCache.hx line 113
Called from modules/VDLCache.hx line 77
Called from snipe/cache/CacheServer.hx line 487
14.10 19:00:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 19:00:36 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:00:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:00:36 TIME: core/cache.update : 0.21 ms
14.10 19:00:36 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:00:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:00:36 TIME: core/cache.update : 0.2 ms
14.10 19:00:36 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:00:36 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:00:36 TIME: core/user.logoutPost : 0.16 ms
14.10 19:00:37 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:00:37 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
14.10 19:00:47 BLOCKREMOVE: user 36 removed
14.10 19:00:47 BLOCKREMOVE: questdata 36 removed
14.10 19:01:42 TIMER: Starting timer...
14.10 19:01:42 TIMER: Timer running...
14.10 19:01:42 DB: SELECT * FROM GameVars
14.10 19:01:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:01:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:01:42 DB: SELECT * FROM Shops WHERE ID = 1
14.10 19:01:42 TEMP: load ./tmp/quest_daily_ids
14.10 19:01:42 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 19:01:42 TEMP: save ./tmp/quest_daily_ids
14.10 19:01:42 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:01:42 QUEUE: vdl.0 (thread) response server.login
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM LocalizationStrings
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 22.65 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM GameVars
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 1.56 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 2.21 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 2.15 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 1.83 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 3.95 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 19:01:42 TIME: core/quest.getDaily : 0.08 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM UserAttributeTypes
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 1.76 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM UserVariableTypes
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 1.91 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:01:42 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 3.9 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM ItemGroups
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 1.67 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 1.78 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 2.77 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 19:01:42 TIME: core/shop.getList : 0.16 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM EffectAttributeTypes
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 1.71 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM Effects
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 2.36 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:01:42 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 4.1 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:01:42 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 2.54 ms
14.10 19:01:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:01:42 DB: SELECT * FROM Badges
14.10 19:01:42 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:01:42 TIME: core/server.query : 2.68 ms
14.10 19:02:27 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:02:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:02:27 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:02:27 TIME: core/server.query : 5.06 ms
14.10 19:02:27 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:02:27 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 19:02:27 TIME: core/user.isOnlineID : 0.11 ms
14.10 19:02:27 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:02:27 READDB: SELECT * FROM Users WHERE ID = 36
14.10 19:02:27 QUEUE: vdl.0 (thread) response core/cache.get
14.10 19:02:27 TIME: core/cache.get : 5.98 ms
14.10 19:02:27 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:02:27 READDB: SELECT * FROM UserQuests WHERE ID = 36
14.10 19:02:27 QUEUE: vdl.0 (thread) response core/cache.get
14.10 19:02:27 TIME: core/cache.get : 9.97 ms
14.10 19:02:27 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:02:27 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:02:27 TIME: core/user.loginPost : 0.16 ms
14.10 19:02:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:02:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:02:37 TIME: core/cache.update : 0.17 ms
14.10 19:02:38 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:02:42 TIMER: Clans cache...
14.10 19:02:42 TIMER: Clans cache: 0ms
14.10 19:02:42 TIMER: Check tournament...
14.10 19:02:42 DB: SELECT * FROM tournament WHERE startdate = ' 2016-14-10 19:02' AND winner = -1 AND status = 'starting'
14.10 19:02:42 TIMER: Check tournament: 2ms
14.10 19:03:29 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:03:29 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:03:29 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:03:29 TIME: core/server.query : 2.12 ms
14.10 19:03:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:03:29 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 19:03:29 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 19:03:29 STATS: cache [battle], database [107 calls, 0 reads, 0 writes]
14.10 19:03:29 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 19:03:29 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 19:03:29 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 19:03:29 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 120
Called from modules/VDLCache.hx line 113
Called from modules/VDLCache.hx line 77
Called from snipe/cache/CacheServer.hx line 487
14.10 19:03:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 19:03:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:03:29 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:03:29 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
14.10 19:03:29 STATS: cache [user], database [107 calls, 1 reads, 1 writes]
14.10 19:03:29 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 19:03:29 STATS: cache manager [1], get [2 calls, total 0.02 sec spent, avg 7.83 ms]
14.10 19:03:29 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.21 ms]
14.10 19:03:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:03:29 TIME: core/cache.update : 0.68 ms
14.10 19:03:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:03:29 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:03:29 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
14.10 19:03:29 STATS: cache [questdata], database [107 calls, 1 reads, 0 writes]
14.10 19:03:29 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 19:03:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:03:29 TIME: core/cache.update : 0.82 ms
14.10 19:03:29 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:03:29 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:03:29 TIME: core/user.logoutPost : 0.29 ms
14.10 19:03:29 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:03:29 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
14.10 19:03:39 BLOCKREMOVE: user 36 removed
14.10 19:03:39 BLOCKREMOVE: questdata 36 removed
14.10 19:09:05 TIMER: Starting timer...
14.10 19:09:05 TIMER: Timer running...
14.10 19:09:05 DB: SELECT * FROM GameVars
14.10 19:09:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:09:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:09:05 DB: SELECT * FROM Shops WHERE ID = 1
14.10 19:09:05 TEMP: load ./tmp/quest_daily_ids
14.10 19:09:05 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 19:09:05 TEMP: save ./tmp/quest_daily_ids
14.10 19:09:05 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:09:05 QUEUE: vdl.0 (thread) response server.login
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM LocalizationStrings
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 35.56 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM GameVars
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 1.99 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 2.47 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 2.01 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 4.12 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 2.66 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 19:09:05 TIME: core/quest.getDaily : 0.07 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM UserAttributeTypes
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 0.95 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM UserVariableTypes
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 1.2 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:09:05 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 2.99 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM ItemGroups
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 1.44 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 1.86 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 2.2 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 19:09:05 TIME: core/shop.getList : 0.85 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM EffectAttributeTypes
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 3.57 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM Effects
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 1.81 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:09:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 2.73 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:09:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 3.32 ms
14.10 19:09:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:09:05 DB: SELECT * FROM Badges
14.10 19:09:05 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:05 TIME: core/server.query : 1.27 ms
14.10 19:09:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid47' AND Password = E'uid47', _type => core/server.query }
14.10 19:09:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid47' AND Password = E'uid47'
14.10 19:09:10 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:10 TIME: core/server.query : 3.17 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
14.10 19:09:11 DB: SELECT * FROM users
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:11 TIME: core/server.query : 4.73 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid37', _type => core/server.query }
14.10 19:09:11 DB: SELECT ID FROM Users WHERE Name = E'uid37'
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:11 TIME: core/server.query : 2.96 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
14.10 19:09:11 DB: SELECT nextval('Users_id_seq') AS id
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:09:11 TIME: core/server.query : 23.96 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/user.register { password => uid37, name => uid37, fullParams => { password => uid37, name => uid37, networkid => , networktype => , messageType => user.register, id => 37 }, networkid => , connectionID => 55475713, networktype => , email => , id => 37, _type => core/user.register }
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/user.register { errorCode => ok, _type => core/user.register }
14.10 19:09:11 TIME: core/user.register : 0.29 ms
14.10 19:09:11 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (37,E'uid37',E'',E'',E'uid37',E'', now())
14.10 19:09:11 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (37, 0)
14.10 19:09:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid37' AND Password = E'uid37', _type => core/server.query }
14.10 19:09:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid37' AND Password = E'uid37'
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid37, networkid => , isbanned => false, id => 37 }}, errorCode => ok, _type => core/server.query }
14.10 19:09:11 TIME: core/server.query : 1.87 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 37, _type => core/user.isOnlineID }
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:09:11 TIME: core/user.isOnlineID : 0.42 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 37, _type => core/cache.get }
14.10 19:09:11 READDB: SELECT * FROM Users WHERE ID = 37
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid37, deleted => false, email => , networktype =>   , password => uid37, isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language =>   , networkid => , params => {}}, version => 0, id => 37 } }
14.10 19:09:11 TIME: core/cache.get : 4.96 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 37, _type => core/cache.get }
14.10 19:09:11 READDB: SELECT * FROM UserQuests WHERE ID = 37
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => notFound, _type => core/cache.get }
14.10 19:09:11 TIME: core/cache.get : 1.78 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/cache.create { type => questdata, id => 37, _type => core/cache.create }
14.10 19:09:11 READDB: SELECT ID FROM UserQuests WHERE ID = 37
14.10 19:09:11 READDB: INSERT INTO UserQuests (ID) VALUES (37)
14.10 19:09:11 CACHE: cache block locked: user.37
14.10 19:09:11 READDB: SELECT * FROM Users WHERE ID = 1
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/cache.create { errorCode => ok, _type => core/cache.create }
14.10 19:09:11 TIME: core/cache.create : 42.57 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 37, _type => core/cache.get }
14.10 19:09:11 READDB: SELECT * FROM UserQuests WHERE ID = 37
14.10 19:09:11 READDB: SELECT ID FROM UserQuests WHERE ID = 37
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 37 } }
14.10 19:09:11 TIME: core/cache.get : 1.01 ms
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid37, name => uid37, _isNotify => true, fullParams => { password => uid37, name => uid37, networkid => , networktype => , messageType => user.register, id => 37 }, networkid => , connectionID => 55475713, networktype => , email => , id => 37, _type => core/user.registerResponse }
14.10 19:09:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 37, _type => core/user.loginPost, ipAddr => 172.16.20.204 }
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:09:11 TIME: core/user.loginPost : 1.41 ms
14.10 19:09:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 37 AND Date = 'today'::timestamp, _type => core/server.query }
14.10 19:09:11 DB: SELECT ID FROM TempUserLogins WHERE UserID = 37 AND Date = 'today'::timestamp
14.10 19:09:11 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:09:11 TIME: core/server.query : 2.27 ms
14.10 19:09:11 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (37, 'today'::timestamp)
14.10 19:09:16 WRITEDB: UPDATE Users SET name = E'uid37', deleted = E'false', email = E'', networktype = E'  ', password = E'uid37', isbanned = E'false', regdate = E'2016-10-14 19:09:11.07001+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 37
14.10 19:09:16 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:16 DB: SELECT * FROM tournament
14.10 19:09:16 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:09:16 DB: SELECT name FROM users WHERE id = 34
14.10 19:09:16 DB: SELECT name FROM users WHERE id = 35
14.10 19:09:16 DB: SELECT name FROM users WHERE id = 36
14.10 19:09:16 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:16 TIME: vdl/cache.tournament.getAvailableTournament : 7.61 ms
14.10 19:09:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:20 TIME: core/cache.update : 0.2 ms
14.10 19:09:20 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 37, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 19:09:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:09:20 TIME: vdl/cache.tournament.addUsers : 0.28 ms
14.10 19:09:20 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:20 DB: SELECT * FROM tournament
14.10 19:09:20 DB: SELECT name FROM users WHERE id = 34
14.10 19:09:20 DB: SELECT name FROM users WHERE id = 35
14.10 19:09:20 DB: SELECT name FROM users WHERE id = 36
14.10 19:09:20 DB: SELECT name FROM users WHERE id = 37
14.10 19:09:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:09:20 TIME: vdl/cache.tournament.getAvailableTournament : 5 ms
14.10 19:09:21 BLOCKREMOVE: user 1 removed
14.10 19:09:22 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', round = E'1', startdate = E'2016-14-10 19:15', params = E'{"params":{"usersList":[34,35,36,37]}}' WHERE ID = 1
14.10 19:09:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:25 TIME: core/cache.update : 0.2 ms
14.10 19:09:26 BLOCKREMOVE: user 37 removed
14.10 19:09:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:30 TIME: core/cache.update : 0.19 ms
14.10 19:09:32 BLOCKREMOVE: tournament 1 removed
14.10 19:09:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:35 TIME: core/cache.update : 0.2 ms
14.10 19:09:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:40 TIME: core/cache.update : 0.19 ms
14.10 19:09:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:45 TIME: core/cache.update : 0.15 ms
14.10 19:09:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:50 TIME: core/cache.update : 0.23 ms
14.10 19:09:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:09:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:09:55 TIME: core/cache.update : 0.14 ms
14.10 19:10:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:00 TIME: core/cache.update : 0.2 ms
14.10 19:10:05 TIMER: Clans cache...
14.10 19:10:05 TIMER: Clans cache: 0ms
14.10 19:10:05 TIMER: Check tournament...
14.10 19:10:05 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:10' AND status = 'starting'
14.10 19:10:05 TIMER: Check tournament: 2ms
14.10 19:10:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:05 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 19:10:05 STATS: cache [user], segments [16 calls, 5 hits, 10 misses]
14.10 19:10:05 STATS: cache [user], database [61 calls, 2 reads, 1 writes]
14.10 19:10:05 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 19:10:05 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.33 ms]
14.10 19:10:05 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.07 ms]
14.10 19:10:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:05 TIME: core/cache.update : 0.42 ms
14.10 19:10:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:10 TIME: core/cache.update : 0.14 ms
14.10 19:10:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:15 TIME: core/cache.update : 0.19 ms
14.10 19:10:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:20 TIME: core/cache.update : 0.14 ms
14.10 19:10:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:25 TIME: core/cache.update : 0.2 ms
14.10 19:10:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:30 TIME: core/cache.update : 0.14 ms
14.10 19:10:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:35 TIME: core/cache.update : 0.2 ms
14.10 19:10:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:40 TIME: core/cache.update : 0.2 ms
14.10 19:10:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:45 TIME: core/cache.update : 0.21 ms
14.10 19:10:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:50 TIME: core/cache.update : 0.15 ms
14.10 19:10:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:10:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:10:55 TIME: core/cache.update : 0.17 ms
14.10 19:11:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:00 TIME: core/cache.update : 0.13 ms
14.10 19:11:05 TIMER: Clans cache...
14.10 19:11:05 TIMER: Clans cache: 0ms
14.10 19:11:05 TIMER: Check tournament...
14.10 19:11:05 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:11' AND status = 'starting'
14.10 19:11:05 TIMER: Check tournament: 2ms
14.10 19:11:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:05 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 19:11:05 STATS: cache [user], segments [28 calls, 5 hits, 22 misses]
14.10 19:11:05 STATS: cache [user], database [121 calls, 2 reads, 1 writes]
14.10 19:11:05 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 19:11:05 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.33 ms]
14.10 19:11:05 STATS: cache manager [1], update [23 calls, total 0 sec spent, avg 0.07 ms]
14.10 19:11:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:05 TIME: core/cache.update : 0.62 ms
14.10 19:11:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:10 TIME: core/cache.update : 0.2 ms
14.10 19:11:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:15 TIME: core/cache.update : 0.21 ms
14.10 19:11:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:20 TIME: core/cache.update : 0.21 ms
14.10 19:11:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:25 TIME: core/cache.update : 0.19 ms
14.10 19:11:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:30 TIME: core/cache.update : 0.14 ms
14.10 19:11:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:35 TIME: core/cache.update : 0.18 ms
14.10 19:11:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:40 TIME: core/cache.update : 0.19 ms
14.10 19:11:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:45 TIME: core/cache.update : 0.19 ms
14.10 19:11:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:50 TIME: core/cache.update : 0.21 ms
14.10 19:11:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:11:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:11:55 TIME: core/cache.update : 0.16 ms
14.10 19:12:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:00 TIME: core/cache.update : 0.19 ms
14.10 19:12:05 TIMER: Clans cache...
14.10 19:12:05 TIMER: Clans cache: 0ms
14.10 19:12:05 TIMER: Check tournament...
14.10 19:12:05 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:12' AND status = 'starting'
14.10 19:12:05 TIMER: Check tournament: 2ms
14.10 19:12:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:05 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 19:12:05 STATS: cache [user], segments [40 calls, 5 hits, 34 misses]
14.10 19:12:05 STATS: cache [user], database [181 calls, 2 reads, 1 writes]
14.10 19:12:05 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 19:12:05 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.33 ms]
14.10 19:12:05 STATS: cache manager [1], update [35 calls, total 0 sec spent, avg 0.07 ms]
14.10 19:12:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:05 TIME: core/cache.update : 0.72 ms
14.10 19:12:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:10 TIME: core/cache.update : 0.2 ms
14.10 19:12:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:15 TIME: core/cache.update : 0.2 ms
14.10 19:12:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:20 TIME: core/cache.update : 0.19 ms
14.10 19:12:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:25 TIME: core/cache.update : 0.19 ms
14.10 19:12:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:30 TIME: core/cache.update : 0.2 ms
14.10 19:12:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:35 TIME: core/cache.update : 0.2 ms
14.10 19:12:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:40 TIME: core/cache.update : 0.18 ms
14.10 19:12:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:45 TIME: core/cache.update : 0.19 ms
14.10 19:12:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:50 TIME: core/cache.update : 0.19 ms
14.10 19:12:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:12:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:12:55 TIME: core/cache.update : 0.19 ms
14.10 19:13:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:00 TIME: core/cache.update : 0.23 ms
14.10 19:13:05 TIMER: Clans cache...
14.10 19:13:05 TIMER: Clans cache: 0ms
14.10 19:13:05 TIMER: Check tournament...
14.10 19:13:05 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:13' AND status = 'starting'
14.10 19:13:05 TIMER: Check tournament: 1ms
14.10 19:13:05 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=37 OR secondid=37 AND finished <> true, _type => core/server.query }
14.10 19:13:05 DB: SELECT id FROM battle WHERE firstid=37 OR secondid=37 AND finished <> true
14.10 19:13:05 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:13:05 TIME: core/server.query : 2.35 ms
14.10 19:13:05 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:13:05 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 19:13:05 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 19:13:05 STATS: cache [battle], database [240 calls, 0 reads, 0 writes]
14.10 19:13:05 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 19:13:05 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 19:13:05 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 19:13:05 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 120
Called from modules/VDLCache.hx line 113
Called from modules/VDLCache.hx line 77
Called from snipe/cache/CacheServer.hx line 487
14.10 19:13:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 19:13:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => true, id => 37, _type => core/cache.update }
14.10 19:13:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:05 TIME: core/cache.update : 0.19 ms
14.10 19:13:05 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 37, _type => core/cache.update }
14.10 19:13:05 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 1 not found]
14.10 19:13:05 STATS: cache [questdata], segments [6 calls, 0 hits, 5 misses]
14.10 19:13:05 STATS: cache [questdata], database [241 calls, 2 reads, 0 writes]
14.10 19:13:05 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 19:13:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:13:05 TIME: core/cache.update : 0.51 ms
14.10 19:13:05 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 37, _type => core/user.logoutPost }
14.10 19:13:05 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:13:05 TIME: core/user.logoutPost : 0.14 ms
14.10 19:13:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:05 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 19:13:05 STATS: cache [user], segments [53 calls, 5 hits, 47 misses]
14.10 19:13:05 STATS: cache [user], database [241 calls, 2 reads, 1 writes]
14.10 19:13:05 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 19:13:05 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.33 ms]
14.10 19:13:05 STATS: cache manager [1], update [49 calls, total 0 sec spent, avg 0.07 ms]
14.10 19:13:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:05 TIME: core/cache.update : 0.69 ms
14.10 19:13:06 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 37
14.10 19:13:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:10 TIME: core/cache.update : 0.21 ms
14.10 19:13:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:15 TIME: core/cache.update : 0.19 ms
14.10 19:13:16 BLOCKREMOVE: questdata 37 removed
14.10 19:13:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:20 TIME: core/cache.update : 0.21 ms
14.10 19:13:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:25 TIME: core/cache.update : 0.14 ms
14.10 19:13:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:30 TIME: core/cache.update : 0.18 ms
14.10 19:13:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:35 TIME: core/cache.update : 0.14 ms
14.10 19:13:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:40 TIME: core/cache.update : 0.21 ms
14.10 19:13:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:45 TIME: core/cache.update : 0.19 ms
14.10 19:13:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:50 TIME: core/cache.update : 0.19 ms
14.10 19:13:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:13:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:13:55 TIME: core/cache.update : 0.15 ms
14.10 19:14:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:00 TIME: core/cache.update : 0.19 ms
14.10 19:14:05 TIMER: Clans cache...
14.10 19:14:05 TIMER: Clans cache: 0ms
14.10 19:14:05 TIMER: Check tournament...
14.10 19:14:05 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:14' AND status = 'starting'
14.10 19:14:05 TIMER: Check tournament: 1ms
14.10 19:14:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:05 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 19:14:05 STATS: cache [user], segments [65 calls, 5 hits, 59 misses]
14.10 19:14:05 STATS: cache [user], database [301 calls, 2 reads, 1 writes]
14.10 19:14:05 STATS: cache [user], lock [2 calls, 2 attempts, 1 failures]
14.10 19:14:05 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.33 ms]
14.10 19:14:05 STATS: cache manager [1], update [61 calls, total 0 sec spent, avg 0.07 ms]
14.10 19:14:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:05 TIME: core/cache.update : 0.48 ms
14.10 19:14:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:10 TIME: core/cache.update : 0.2 ms
14.10 19:14:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:15 TIME: core/cache.update : 0.2 ms
14.10 19:14:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:20 TIME: core/cache.update : 0.2 ms
14.10 19:14:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:25 TIME: core/cache.update : 0.21 ms
14.10 19:14:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:14:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:14:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:14:30 TIME: core/server.query : 1.54 ms
14.10 19:14:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:14:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:14:30 TIME: core/user.isOnlineID : 0.27 ms
14.10 19:14:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:14:30 READDB: SELECT * FROM Users WHERE ID = 36
14.10 19:14:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:14:30 TIME: core/cache.get : 1.51 ms
14.10 19:14:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:14:30 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 1 not found]
14.10 19:14:30 STATS: cache [questdata], segments [8 calls, 2 hits, 5 misses]
14.10 19:14:30 STATS: cache [questdata], database [325 calls, 2 reads, 1 writes]
14.10 19:14:30 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
14.10 19:14:30 READDB: SELECT * FROM UserQuests WHERE ID = 36
14.10 19:14:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:14:30 TIME: core/cache.get : 1.52 ms
14.10 19:14:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:14:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:14:30 TIME: core/user.loginPost : 0.11 ms
14.10 19:14:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:30 TIME: core/cache.update : 0.14 ms
14.10 19:14:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:35 TIME: core/cache.update : 0.14 ms
14.10 19:14:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:14:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:14:35 TIME: core/cache.update : 0.19 ms
14.10 19:14:36 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:14:36 DB: SELECT * FROM tournament
14.10 19:14:36 STATS: cache [tournament], get [4 calls, 2 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:14:36 STATS: cache [tournament], segments [5 calls, 3 hits, 1 misses]
14.10 19:14:36 STATS: cache [tournament], database [331 calls, 1 reads, 1 writes]
14.10 19:14:36 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 19:14:36 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:14:36 DB: SELECT name FROM users WHERE id = 34
14.10 19:14:36 DB: SELECT name FROM users WHERE id = 35
14.10 19:14:36 DB: SELECT name FROM users WHERE id = 36
14.10 19:14:36 DB: SELECT name FROM users WHERE id = 37
14.10 19:14:36 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:15 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:14:36 TIME: vdl/cache.tournament.getAvailableTournament : 6.5 ms
14.10 19:14:36 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:14:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:40 TIME: core/cache.update : 0.2 ms
14.10 19:14:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:45 TIME: core/cache.update : 0.21 ms
14.10 19:14:46 BLOCKREMOVE: tournament 1 removed
14.10 19:14:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:50 TIME: core/cache.update : 0.2 ms
14.10 19:14:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:14:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:14:55 TIME: core/cache.update : 0.2 ms
14.10 19:15:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:00 TIME: core/cache.update : 0.15 ms
14.10 19:15:05 TIMER: Clans cache...
14.10 19:15:05 TIMER: Clans cache: 0ms
14.10 19:15:05 TIMER: Check tournament...
14.10 19:15:05 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:15' AND status = 'starting'
14.10 19:15:05 QUEUE: vdl.0 (thread) response battle.startEvent { _isNotify => true, tournamentId => 1, round => 1, _type => battle.startEvent }
14.10 19:15:05 TIMER: Check tournament: 2ms
14.10 19:15:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:05 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 19:15:05 STATS: cache [user], segments [80 calls, 6 hits, 73 misses]
14.10 19:15:05 STATS: cache [user], database [360 calls, 3 reads, 2 writes]
14.10 19:15:05 STATS: cache [user], lock [3 calls, 3 attempts, 1 failures]
14.10 19:15:05 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.91 ms]
14.10 19:15:05 STATS: cache manager [1], update [74 calls, total 0.01 sec spent, avg 0.07 ms]
14.10 19:15:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:05 TIME: core/cache.update : 0.83 ms
14.10 19:15:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:10 TIME: core/cache.update : 0.25 ms
14.10 19:15:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:15 TIME: core/cache.update : 0.14 ms
14.10 19:15:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:20 TIME: core/cache.update : 0.18 ms
14.10 19:15:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:25 TIME: core/cache.update : 0.13 ms
14.10 19:15:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:30 TIME: core/cache.update : 0.13 ms
14.10 19:15:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:35 TIME: core/cache.update : 0.2 ms
14.10 19:15:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:40 TIME: core/cache.update : 0.14 ms
14.10 19:15:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:45 TIME: core/cache.update : 0.14 ms
14.10 19:15:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:50 TIME: core/cache.update : 0.14 ms
14.10 19:15:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:15:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:15:55 TIME: core/cache.update : 0.19 ms
14.10 19:16:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:00 TIME: core/cache.update : 0.2 ms
14.10 19:16:05 TIMER: Clans cache...
14.10 19:16:05 TIMER: Clans cache: 0ms
14.10 19:16:05 TIMER: Check tournament...
14.10 19:16:05 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:16' AND status = 'starting'
14.10 19:16:05 TIMER: Check tournament: 1ms
14.10 19:16:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:05 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 19:16:05 STATS: cache [user], segments [92 calls, 6 hits, 85 misses]
14.10 19:16:05 STATS: cache [user], database [420 calls, 3 reads, 2 writes]
14.10 19:16:05 STATS: cache [user], lock [3 calls, 3 attempts, 1 failures]
14.10 19:16:05 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.91 ms]
14.10 19:16:05 STATS: cache manager [1], update [86 calls, total 0.01 sec spent, avg 0.07 ms]
14.10 19:16:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:05 TIME: core/cache.update : 0.61 ms
14.10 19:16:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:10 TIME: core/cache.update : 0.15 ms
14.10 19:16:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:15 TIME: core/cache.update : 0.19 ms
14.10 19:16:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:20 TIME: core/cache.update : 0.14 ms
14.10 19:16:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:25 TIME: core/cache.update : 0.15 ms
14.10 19:16:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:30 TIME: core/cache.update : 0.2 ms
14.10 19:16:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:35 TIME: core/cache.update : 0.13 ms
14.10 19:16:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:40 TIME: core/cache.update : 0.14 ms
14.10 19:16:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:45 TIME: core/cache.update : 0.22 ms
14.10 19:16:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:50 TIME: core/cache.update : 0.2 ms
14.10 19:16:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:16:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:16:55 TIME: core/cache.update : 0.19 ms
14.10 19:17:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:00 TIME: core/cache.update : 0.19 ms
14.10 19:17:04 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:17:04 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:17:04 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 19:17:04 TIME: core/server.query : 2.14 ms
14.10 19:17:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 19:17:04 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
14.10 19:17:04 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
14.10 19:17:04 STATS: cache [battle], database [479 calls, 1 reads, 0 writes]
14.10 19:17:04 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 19:17:04 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 19:17:04 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 19:17:04 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 120
Called from modules/VDLCache.hx line 113
Called from modules/VDLCache.hx line 77
Called from snipe/cache/CacheServer.hx line 487
14.10 19:17:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 19:17:04 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:17:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:17:04 TIME: core/cache.update : 0.22 ms
14.10 19:17:04 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:17:04 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 1 not found]
14.10 19:17:04 STATS: cache [questdata], segments [10 calls, 2 hits, 7 misses]
14.10 19:17:04 STATS: cache [questdata], database [479 calls, 3 reads, 1 writes]
14.10 19:17:04 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
14.10 19:17:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:17:04 TIME: core/cache.update : 0.5 ms
14.10 19:17:04 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:17:04 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:17:04 TIME: core/user.logoutPost : 0.15 ms
14.10 19:17:04 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:17:04 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
14.10 19:17:05 TIMER: Clans cache...
14.10 19:17:05 TIMER: Clans cache: 0ms
14.10 19:17:05 TIMER: Check tournament...
14.10 19:17:05 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:17' AND status = 'starting'
14.10 19:17:05 TIMER: Check tournament: 1ms
14.10 19:17:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:05 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 19:17:05 STATS: cache [user], segments [106 calls, 8 hits, 97 misses]
14.10 19:17:05 STATS: cache [user], database [480 calls, 3 reads, 3 writes]
14.10 19:17:05 STATS: cache [user], lock [3 calls, 3 attempts, 1 failures]
14.10 19:17:05 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.91 ms]
14.10 19:17:05 STATS: cache manager [1], update [100 calls, total 0.01 sec spent, avg 0.07 ms]
14.10 19:17:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:05 TIME: core/cache.update : 0.67 ms
14.10 19:17:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:10 TIME: core/cache.update : 0.2 ms
14.10 19:17:14 BLOCKREMOVE: user 36 removed
14.10 19:17:14 BLOCKREMOVE: questdata 36 removed
14.10 19:17:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:15 TIME: core/cache.update : 0.2 ms
14.10 19:17:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:20 TIME: core/cache.update : 0.21 ms
14.10 19:17:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:17:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
14.10 19:17:25 TIME: core/cache.update : 0.19 ms
14.10 19:18:08 TIMER: Starting timer...
14.10 19:18:08 TIMER: Timer running...
14.10 19:18:08 DB: SELECT * FROM GameVars
14.10 19:18:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:18:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:18:08 DB: SELECT * FROM Shops WHERE ID = 1
14.10 19:18:08 TEMP: load ./tmp/quest_daily_ids
14.10 19:18:08 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 19:18:09 TEMP: save ./tmp/quest_daily_ids
14.10 19:18:09 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:18:09 QUEUE: vdl.0 (thread) response server.login
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM LocalizationStrings
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 19.73 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM GameVars
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.51 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.8 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.23 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.79 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 4.4 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 19:18:09 TIME: core/quest.getDaily : 0.08 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM UserAttributeTypes
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.51 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM UserVariableTypes
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.56 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:18:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 3.05 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM ItemGroups
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.31 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.97 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.43 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 19:18:09 TIME: core/shop.getList : 0.05 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM EffectAttributeTypes
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.7 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM Effects
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.22 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:18:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 3.1 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:18:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.75 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:18:09 DB: SELECT * FROM Badges
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 1.14 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:18:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:18:09 TIME: core/server.query : 3.22 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 19:18:09 TIME: core/user.isOnlineID : 0.21 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:18:09 READDB: SELECT * FROM Users WHERE ID = 36
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/cache.get
14.10 19:18:09 TIME: core/cache.get : 6.03 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:18:09 READDB: SELECT * FROM UserQuests WHERE ID = 36
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/cache.get
14.10 19:18:09 TIME: core/cache.get : 1.82 ms
14.10 19:18:09 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:18:09 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:18:09 TIME: core/user.loginPost : 0.1 ms
14.10 19:18:11 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:18:11 DB: SELECT * FROM tournament
14.10 19:18:11 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:18:11 DB: SELECT name FROM users WHERE id = 34
14.10 19:18:11 DB: SELECT name FROM users WHERE id = 35
14.10 19:18:11 DB: SELECT name FROM users WHERE id = 36
14.10 19:18:11 DB: SELECT name FROM users WHERE id = 37
14.10 19:18:11 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 },{ name => uid35, id => 35 },{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => null, startdate => 2016-14-10 19:20 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:18:11 TIME: vdl/cache.tournament.getAvailableTournament : 11.4 ms
14.10 19:18:15 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:18:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [34,35,36,37] }
14.10 19:18:15 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.21 ms
14.10 19:18:15 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ round => 1, player1 => 36, player2 => 37 },{ round => 1, player1 => 34, player2 => 35 }], _type => vdl/cache.tournament.setGrid }
14.10 19:18:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ round => 1, player1 => 36, player2 => 37 },{ round => 1, player1 => 34, player2 => 35 }], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:18:15 TIME: vdl/cache.tournament.setGrid : 0.34 ms
14.10 19:18:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:18:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:18:19 TIME: core/cache.update : 0.2 ms
14.10 19:18:20 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:18:26 BLOCKREMOVE: tournament 1 removed
14.10 19:21:37 TIMER: Starting timer...
14.10 19:21:37 TIMER: Timer running...
14.10 19:21:37 DB: SELECT * FROM GameVars
14.10 19:21:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:21:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:21:37 DB: SELECT * FROM Shops WHERE ID = 1
14.10 19:21:37 TEMP: load ./tmp/quest_daily_ids
14.10 19:21:37 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 19:21:37 TEMP: save ./tmp/quest_daily_ids
14.10 19:21:37 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:21:37 QUEUE: vdl.0 (thread) response server.login
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM LocalizationStrings
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 19.73 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM GameVars
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 1.32 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 2.5 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 1.75 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 1.5 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 2.89 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 19:21:37 TIME: core/quest.getDaily : 0.08 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM UserAttributeTypes
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 1.44 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM UserVariableTypes
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 1.42 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:21:37 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 2.99 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM ItemGroups
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 0.93 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 1.59 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 1.09 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 19:21:37 TIME: core/shop.getList : 0.05 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM EffectAttributeTypes
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 0.81 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM Effects
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 0.84 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:21:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 3.49 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:21:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 3.02 ms
14.10 19:21:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:21:37 DB: SELECT * FROM Badges
14.10 19:21:37 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:21:37 TIME: core/server.query : 1.6 ms
14.10 19:21:37 TIMER: Clans cache...
14.10 19:21:37 TIMER: Clans cache: 0ms
14.10 19:21:37 TIMER: Check tournament...
14.10 19:21:37 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:22' AND status = 'starting'
14.10 19:21:37 TIMER: Check tournament: 2ms
14.10 19:21:37 TIMER: Clans cache...
14.10 19:21:37 TIMER: Clans cache: 0ms
14.10 19:21:37 TIMER: Check tournament...
14.10 19:21:37 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:23' AND status = 'starting'
14.10 19:21:37 QUEUE: vdl.0 (thread) response tournament.startEvent
14.10 19:21:37 TIMER: Check tournament: 2ms
14.10 19:21:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:21:37 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 19:21:37 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 19:21:37 STATS: cache [tournament], database [121 calls, 0 reads, 0 writes]
14.10 19:21:37 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 19:21:37 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:21:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers
14.10 19:21:37 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 3.98 ms
14.10 19:23:48 BLOCKREMOVE: tournament 1 removed
14.10 19:25:25 TIMER: Starting timer...
14.10 19:25:25 TIMER: Timer running...
14.10 19:25:25 DB: SELECT * FROM GameVars
14.10 19:25:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:25:25 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:25:25 DB: SELECT * FROM Shops WHERE ID = 1
14.10 19:25:25 TEMP: load ./tmp/quest_daily_ids
14.10 19:25:25 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 19:25:25 TEMP: save ./tmp/quest_daily_ids
14.10 19:25:25 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 19:25:25 QUEUE: vdl.0 (thread) response server.login
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM LocalizationStrings
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 30.8 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM GameVars
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.76 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 2.25 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.06 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.21 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.78 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 19:25:25 TIME: core/quest.getDaily : 0.07 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM UserAttributeTypes
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 0.97 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM UserVariableTypes
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 0.84 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 19:25:25 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 2.68 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM ItemGroups
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 4.78 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM Bundles ORDER BY ID
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.48 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.3 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 19:25:25 TIME: core/shop.getList : 0.07 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM EffectAttributeTypes
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 0.95 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM Effects
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 0.98 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 19:25:25 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.6 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 19:25:25 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.78 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 19:25:25 DB: SELECT * FROM Badges
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query
14.10 19:25:25 TIME: core/server.query : 1.42 ms
14.10 19:25:25 TIMER: Clans cache...
14.10 19:25:25 TIMER: Clans cache: 0ms
14.10 19:25:25 TIMER: Check tournament...
14.10 19:25:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:26' AND status = 'starting'
14.10 19:25:25 TIMER: Check tournament: 2ms
14.10 19:25:25 TIMER: Clans cache...
14.10 19:25:25 TIMER: Clans cache: 0ms
14.10 19:25:25 TIMER: Check tournament...
14.10 19:25:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:27' AND status = 'starting'
14.10 19:25:25 QUEUE: vdl.0 (thread) response tournament.startEvent
14.10 19:25:25 TIMER: Check tournament: 2ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:25:25 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 19:25:25 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 19:25:25 STATS: cache [tournament], database [121 calls, 0 reads, 0 writes]
14.10 19:25:25 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 19:25:25 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers
14.10 19:25:25 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 3.62 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
14.10 19:25:25 DB: SELECT nextval('Battle_id_seq') AS id
14.10 19:25:25 READDB: SELECT ID FROM Battle WHERE ID = 44
14.10 19:25:25 READDB: INSERT INTO Battle (ID) VALUES (44)
14.10 19:25:25 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 19:25:25 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 19:25:25 STATS: cache [battle], database [121 calls, 0 reads, 0 writes]
14.10 19:25:25 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
14.10 19:25:25 READDB: SELECT * FROM Battle WHERE ID = 44
14.10 19:25:25 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.83 ms]
14.10 19:25:25 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.create
14.10 19:25:25 TIME: vdl/cache.battle.create : 160.63 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 44, selfId => 37, _type => vdl/cache.battle.join }
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.join
14.10 19:25:25 TIME: vdl/cache.battle.join : 0.33 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=36, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=36
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 TIME: core/server.query : 3.21 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=37, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=37
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid37 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 TIME: core/server.query : 2.16 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/user.sendTo { id => 36, _type => core/user.sendTo, msg => { name => uid36, type => tournament.enemy, tournamentId => 1, enemy.id => 36, enemy.name => uid37, round => 1, _type => tournament.enemy, enemy.num => 2, battleId => 44 } }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 TIME: core/user.sendTo : 0.15 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { name => uid37, type => tournament.enemy, tournamentId => 1, enemy.id => 37, enemy.name => uid36, round => 1, _type => tournament.enemy, enemy.num => 1, battleId => 44 } }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 TIME: core/user.sendTo : 0.14 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
14.10 19:25:25 DB: SELECT nextval('Battle_id_seq') AS id
14.10 19:25:25 READDB: SELECT ID FROM Battle WHERE ID = 45
14.10 19:25:25 READDB: INSERT INTO Battle (ID) VALUES (45)
14.10 19:25:25 READDB: SELECT * FROM Battle WHERE ID = 45
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 45, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
14.10 19:25:25 TIME: vdl/cache.battle.create : 11.87 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 45, selfId => 37, _type => vdl/cache.battle.join }
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 45, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
14.10 19:25:25 TIME: vdl/cache.battle.join : 0.12 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=36, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=36
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 TIME: core/server.query : 2.64 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=37, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=37
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid37 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 TIME: core/server.query : 1.24 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/user.sendTo { id => 36, _type => core/user.sendTo, msg => { name => uid36, type => tournament.enemy, tournamentId => 1, enemy.id => 36, enemy.name => uid37, round => 1, _type => tournament.enemy, enemy.num => 2, battleId => 45 } }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 TIME: core/user.sendTo : 0.1 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { name => uid37, type => tournament.enemy, tournamentId => 1, enemy.id => 37, enemy.name => uid36, round => 1, _type => tournament.enemy, enemy.num => 1, battleId => 45 } }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 TIME: core/user.sendTo : 0.09 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
14.10 19:25:25 DB: SELECT nextval('Battle_id_seq') AS id
14.10 19:25:25 READDB: SELECT ID FROM Battle WHERE ID = 46
14.10 19:25:25 READDB: INSERT INTO Battle (ID) VALUES (46)
14.10 19:25:25 READDB: SELECT * FROM Battle WHERE ID = 46
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 46, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
14.10 19:25:25 TIME: vdl/cache.battle.create : 16.4 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 46, selfId => 37, _type => vdl/cache.battle.join }
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 46, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
14.10 19:25:25 TIME: vdl/cache.battle.join : 0.12 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=36, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=36
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 TIME: core/server.query : 2.18 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=37, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=37
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid37 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 TIME: core/server.query : 1.03 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/user.sendTo { id => 36, _type => core/user.sendTo, msg => { name => uid36, type => tournament.enemy, tournamentId => 1, enemy.id => 36, enemy.name => uid37, round => 1, _type => tournament.enemy, enemy.num => 2, battleId => 46 } }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 TIME: core/user.sendTo : 0.2 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { name => uid37, type => tournament.enemy, tournamentId => 1, enemy.id => 37, enemy.name => uid36, round => 1, _type => tournament.enemy, enemy.num => 1, battleId => 46 } }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 TIME: core/user.sendTo : 0.2 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
14.10 19:25:25 DB: SELECT nextval('Battle_id_seq') AS id
14.10 19:25:25 READDB: SELECT ID FROM Battle WHERE ID = 47
14.10 19:25:25 READDB: INSERT INTO Battle (ID) VALUES (47)
14.10 19:25:25 READDB: SELECT * FROM Battle WHERE ID = 47
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 47, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
14.10 19:25:25 TIME: vdl/cache.battle.create : 16.18 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 47, selfId => 37, _type => vdl/cache.battle.join }
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 47, errorCode => ok, _type => vdl/cache.battle.join, player => 2 }
14.10 19:25:25 TIME: vdl/cache.battle.join : 0.24 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=36, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=36
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 TIME: core/server.query : 1.1 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=37, _type => core/server.query }
14.10 19:25:25 DB: SELECT name FROM users WHERE id=37
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid37 }}, errorCode => ok, _type => core/server.query }
14.10 19:25:25 TIME: core/server.query : 0.98 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/user.sendTo { id => 36, _type => core/user.sendTo, msg => { name => uid36, type => tournament.enemy, tournamentId => 1, enemy.id => 36, enemy.name => uid37, round => 1, _type => tournament.enemy, enemy.num => 2, battleId => 47 } }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 TIME: core/user.sendTo : 0.24 ms
14.10 19:25:25 NET: vdl.0 (thread) request core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { name => uid37, type => tournament.enemy, tournamentId => 1, enemy.id => 37, enemy.name => uid36, round => 1, _type => tournament.enemy, enemy.num => 1, battleId => 47 } }
14.10 19:25:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:25:25 TIME: core/user.sendTo : 0.22 ms
14.10 19:25:25 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => active, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [44,45,46,47] }
14.10 19:25:25 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
14.10 19:25:25 TIME: vdl/cache.tournament.setBattlesTournaments : 0.31 ms
14.10 19:27:31 WRITEDB: UPDATE Battle SET secondid = E'37', turnid = E'36', finished = E'false', firstid = E'36', params = E'{}', avaliable = E'false' WHERE ID = 47
14.10 19:27:31 WRITEDB: UPDATE Battle SET secondid = E'37', turnid = E'36', finished = E'false', firstid = E'36', params = E'{}', avaliable = E'false' WHERE ID = 46
14.10 19:27:31 WRITEDB: UPDATE Battle SET secondid = E'37', turnid = E'36', finished = E'false', firstid = E'36', params = E'{}', avaliable = E'false' WHERE ID = 45
14.10 19:27:31 WRITEDB: UPDATE Battle SET secondid = E'37', turnid = E'36', finished = E'false', firstid = E'36', params = E'{}', avaliable = E'false' WHERE ID = 44
14.10 19:27:31 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', round = E'1', startdate = E'2016-14-10 19:27', params = E'{"params":{"usersList":[34,35,36,37],"battleActive":[44,45,46,47]}}' WHERE ID = 1
14.10 19:27:41 BLOCKREMOVE: tournament 1 removed
14.10 19:28:25 TIMER: Clans cache...
14.10 19:28:25 TIMER: Clans cache: 0ms
14.10 19:28:25 TIMER: Check tournament...
14.10 19:28:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:28' AND status = 'starting'
14.10 19:28:25 TIMER: Check tournament: 2ms
14.10 19:28:25 TIMER: Clans cache...
14.10 19:28:25 TIMER: Clans cache: 0ms
14.10 19:28:25 TIMER: Check tournament...
14.10 19:28:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:29' AND status = 'starting'
14.10 19:28:25 TIMER: Check tournament: 2ms
14.10 19:28:25 TIMER: Clans cache...
14.10 19:28:25 TIMER: Clans cache: 0ms
14.10 19:28:25 TIMER: Check tournament...
14.10 19:28:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:30' AND status = 'starting'
14.10 19:28:25 TIMER: Check tournament: 1ms
14.10 19:28:25 TIMER: Clans cache...
14.10 19:28:25 TIMER: Clans cache: 0ms
14.10 19:28:25 TIMER: Check tournament...
14.10 19:28:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:31' AND status = 'starting'
14.10 19:28:25 TIMER: Check tournament: 1ms
14.10 19:28:25 TIMER: Clans cache...
14.10 19:28:25 TIMER: Clans cache: 0ms
14.10 19:28:25 TIMER: Check tournament...
14.10 19:28:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:32' AND status = 'starting'
14.10 19:28:25 TIMER: Check tournament: 1ms
14.10 19:28:25 TIMER: Clans cache...
14.10 19:28:25 TIMER: Clans cache: 0ms
14.10 19:28:25 TIMER: Check tournament...
14.10 19:28:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:33' AND status = 'starting'
14.10 19:28:25 TIMER: Check tournament: 1ms
14.10 19:33:29 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:33:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:33:29 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:33:29 TIME: core/server.query : 2.34 ms
14.10 19:33:29 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:33:29 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:33:29 TIME: core/user.isOnlineID : 0.12 ms
14.10 19:33:29 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:33:29 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 19:33:29 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 19:33:29 STATS: cache [user], database [485 calls, 0 reads, 0 writes]
14.10 19:33:29 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 19:33:29 READDB: SELECT * FROM Users WHERE ID = 36
14.10 19:33:29 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.1 ms]
14.10 19:33:29 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 19:33:29 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:33:29 TIME: core/cache.get : 4.7 ms
14.10 19:33:29 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:33:29 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 19:33:29 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
14.10 19:33:29 STATS: cache [questdata], database [485 calls, 0 reads, 0 writes]
14.10 19:33:29 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 19:33:29 READDB: SELECT * FROM UserQuests WHERE ID = 36
14.10 19:33:29 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:33:29 TIME: core/cache.get : 10.85 ms
14.10 19:33:29 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:33:29 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:33:29 TIME: core/user.loginPost : 1.11 ms
14.10 19:33:34 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:34 DB: SELECT * FROM tournament
14.10 19:33:34 STATS: cache [tournament], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:33:34 STATS: cache [tournament], segments [5 calls, 3 hits, 1 misses]
14.10 19:33:34 STATS: cache [tournament], database [490 calls, 1 reads, 1 writes]
14.10 19:33:34 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 19:33:34 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:33:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:34 TIME: vdl/cache.tournament.getAvailableTournament : 3.23 ms
14.10 19:33:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:33:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:33:35 TIME: core/cache.update : 0.23 ms
14.10 19:33:36 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:33:42 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 36, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 19:33:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:33:42 TIME: vdl/cache.tournament.addUsers : 0.25 ms
14.10 19:33:42 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:42 DB: SELECT * FROM tournament
14.10 19:33:42 DB: SELECT name FROM users WHERE id = 36
14.10 19:33:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:33:42 TIME: vdl/cache.tournament.getAvailableTournament : 2.23 ms
14.10 19:33:43 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', round = E'1', startdate = E'2016-14-10 20:30', params = E'{"params":{"usersList":[36],"battleActive":[]}}' WHERE ID = 1
14.10 19:33:43 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:33:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36] }
14.10 19:33:43 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.18 ms
14.10 19:33:43 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 }], _type => vdl/cache.tournament.setGrid }
14.10 19:33:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 }], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:33:43 TIME: vdl/cache.tournament.setGrid : 0.25 ms
14.10 19:33:54 BLOCKREMOVE: tournament 1 removed
14.10 19:34:25 TIMER: Clans cache...
14.10 19:34:25 TIMER: Clans cache: 0ms
14.10 19:34:25 TIMER: Check tournament...
14.10 19:34:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:34' AND status = 'starting'
14.10 19:34:25 TIMER: Check tournament: 0ms
14.10 19:34:25 TIMER: Clans cache...
14.10 19:34:25 TIMER: Clans cache: 0ms
14.10 19:34:25 TIMER: Check tournament...
14.10 19:34:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:35' AND status = 'starting'
14.10 19:34:25 TIMER: Check tournament: 1ms
14.10 19:34:25 TIMER: Clans cache...
14.10 19:34:25 TIMER: Clans cache: 0ms
14.10 19:34:25 TIMER: Check tournament...
14.10 19:34:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:36' AND status = 'starting'
14.10 19:34:25 TIMER: Check tournament: 1ms
14.10 19:34:25 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:34:25 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:34:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 47 }, { id => 46 }, { id => 45 }, { id => 44 }}, errorCode => ok, _type => core/server.query }
14.10 19:34:25 TIME: core/server.query : 1.92 ms
14.10 19:34:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 44, _type => vdl/cache.battle.infoRoom }
14.10 19:34:25 STATS: cache [battle], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
14.10 19:34:25 STATS: cache [battle], segments [17 calls, 8 hits, 8 misses]
14.10 19:34:25 STATS: cache [battle], database [720 calls, 4 reads, 4 writes]
14.10 19:34:25 STATS: cache [battle], lock [4 calls, 4 attempts, 0 failures]
14.10 19:34:25 TIMER: Clans cache...
14.10 19:34:25 TIMER: Clans cache: 0ms
14.10 19:34:25 TIMER: Check tournament...
14.10 19:34:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 37, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
14.10 19:34:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:37' AND status = 'starting'
14.10 19:34:25 TIME: vdl/cache.battle.infoRoom : 0.49 ms
14.10 19:34:25 TIMER: Check tournament: 1ms
14.10 19:34:25 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 44, _type => vdl/cache.battle.deleteRoom }
14.10 19:34:25 ROOM: deleted room 44
14.10 19:34:25 DB: DELETE FROM Battle WHERE ID = 44
14.10 19:34:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
14.10 19:34:25 TIME: vdl/cache.battle.deleteRoom : 40.67 ms
14.10 19:34:25 NET: vdl.0 (thread) request core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { _type => battle.end } }
14.10 19:34:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:34:25 TIME: core/user.sendTo : 0.14 ms
14.10 19:34:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:34:25 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:34:25 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
14.10 19:34:25 STATS: cache [user], database [720 calls, 1 reads, 1 writes]
14.10 19:34:25 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 19:34:25 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 6.96 ms]
14.10 19:34:25 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.34 ms]
14.10 19:34:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:34:25 TIME: core/cache.update : 0.92 ms
14.10 19:34:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:34:25 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 19:34:25 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
14.10 19:34:25 STATS: cache [questdata], database [720 calls, 1 reads, 0 writes]
14.10 19:34:25 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 19:34:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:34:25 TIME: core/cache.update : 0.45 ms
14.10 19:34:25 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:34:25 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:34:25 TIME: core/user.logoutPost : 0.16 ms
14.10 19:34:25 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:34:25 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
14.10 19:37:35 BLOCKREMOVE: user 36 removed
14.10 19:37:35 BLOCKREMOVE: questdata 36 removed
14.10 19:37:35 BLOCKREMOVE: battle 44 removed
14.10 19:37:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid37' AND Password = E'uid37', _type => core/server.query }
14.10 19:37:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid37' AND Password = E'uid37'
14.10 19:37:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid37, networkid => , isbanned => false, id => 37 }}, errorCode => ok, _type => core/server.query }
14.10 19:37:37 TIME: core/server.query : 1.74 ms
14.10 19:37:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 37, _type => core/user.isOnlineID }
14.10 19:37:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:37:37 TIME: core/user.isOnlineID : 0.09 ms
14.10 19:37:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 37, _type => core/cache.get }
14.10 19:37:37 READDB: SELECT * FROM Users WHERE ID = 37
14.10 19:37:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid37, deleted => false, email => , networktype =>   , password => uid37, isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476461351, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 37 } }
14.10 19:37:37 TIME: core/cache.get : 2 ms
14.10 19:37:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 37, _type => core/cache.get }
14.10 19:37:37 READDB: SELECT * FROM UserQuests WHERE ID = 37
14.10 19:37:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 37 } }
14.10 19:37:37 TIME: core/cache.get : 1.28 ms
14.10 19:37:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 37, _type => core/user.loginPost, ipAddr => 172.16.20.204 }
14.10 19:37:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:37:37 TIME: core/user.loginPost : 0.15 ms
14.10 19:37:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 37, _type => core/cache.update }
14.10 19:37:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:37:45 TIME: core/cache.update : 0.24 ms
14.10 19:37:45 WRITEDB: UPDATE Users SET name = E'uid37', deleted = E'false', email = E'', networktype = E'  ', password = E'uid37', isbanned = E'false', regdate = E'2016-10-14 19:09:11.07001+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 37
14.10 19:37:48 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:48 DB: SELECT * FROM tournament
14.10 19:37:48 STATS: cache [tournament], get [7 calls, 4 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 19:37:48 STATS: cache [tournament], segments [11 calls, 8 hits, 2 misses]
14.10 19:37:48 STATS: cache [tournament], database [743 calls, 2 reads, 2 writes]
14.10 19:37:48 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 19:37:48 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:37:48 DB: SELECT name FROM users WHERE id = 36
14.10 19:37:48 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:48 TIME: vdl/cache.tournament.getAvailableTournament : 3.47 ms
14.10 19:37:54 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 37, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 19:37:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 19:37:54 TIME: vdl/cache.tournament.addUsers : 0.18 ms
14.10 19:37:54 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:54 DB: SELECT * FROM tournament
14.10 19:37:54 DB: SELECT name FROM users WHERE id = 36
14.10 19:37:54 DB: SELECT name FROM users WHERE id = 37
14.10 19:37:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:37:54 TIME: vdl/cache.tournament.getAvailableTournament : 2.92 ms
14.10 19:37:54 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', round = E'1', startdate = E'2016-14-10 20:30', params = E'{"params":{"usersList":[36,37],"battleActive":[]}}' WHERE ID = 1
14.10 19:38:04 BLOCKREMOVE: tournament 1 removed
14.10 19:38:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:38:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:38:23 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:38:23 TIME: core/server.query : 1.43 ms
14.10 19:38:23 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:38:23 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:38:23 TIME: core/user.isOnlineID : 0.15 ms
14.10 19:38:23 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:38:23 READDB: SELECT * FROM Users WHERE ID = 36
14.10 19:38:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:38:23 TIME: core/cache.get : 1.97 ms
14.10 19:38:23 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:38:23 READDB: SELECT * FROM UserQuests WHERE ID = 36
14.10 19:38:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:38:23 TIME: core/cache.get : 1.13 ms
14.10 19:38:23 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:38:23 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:38:23 TIME: core/user.loginPost : 0.15 ms
14.10 19:38:25 TIMER: Clans cache...
14.10 19:38:25 TIMER: Clans cache: 0ms
14.10 19:38:25 TIMER: Check tournament...
14.10 19:38:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:38' AND status = 'starting'
14.10 19:38:25 TIMER: Check tournament: 1ms
14.10 19:38:30 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:38:30 DB: SELECT * FROM tournament
14.10 19:38:30 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:38:30 DB: SELECT name FROM users WHERE id = 36
14.10 19:38:30 DB: SELECT name FROM users WHERE id = 37
14.10 19:38:30 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:38:30 TIME: vdl/cache.tournament.getAvailableTournament : 3.97 ms
14.10 19:38:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:38:30 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 19:38:30 STATS: cache [user], segments [11 calls, 4 hits, 6 misses]
14.10 19:38:30 STATS: cache [user], database [785 calls, 3 reads, 3 writes]
14.10 19:38:30 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
14.10 19:38:30 STATS: cache manager [1], get [6 calls, total 0.02 sec spent, avg 3.17 ms]
14.10 19:38:30 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.3 ms]
14.10 19:38:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:38:30 TIME: core/cache.update : 0.69 ms
14.10 19:38:30 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:38:34 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:38:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
14.10 19:38:34 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.17 ms
14.10 19:38:34 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], _type => vdl/cache.tournament.setGrid }
14.10 19:38:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:38:34 TIME: vdl/cache.tournament.setGrid : 0.13 ms
14.10 19:38:44 BLOCKREMOVE: tournament 1 removed
14.10 19:39:25 TIMER: Clans cache...
14.10 19:39:25 TIMER: Clans cache: 0ms
14.10 19:39:25 TIMER: Check tournament...
14.10 19:39:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:39' AND status = 'starting'
14.10 19:39:25 TIMER: Check tournament: 1ms
14.10 19:39:25 TIMER: Clans cache...
14.10 19:39:25 TIMER: Clans cache: 0ms
14.10 19:39:25 TIMER: Check tournament...
14.10 19:39:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:40' AND status = 'starting'
14.10 19:39:25 TIMER: Check tournament: 1ms
14.10 19:39:25 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=37 OR secondid=37 AND finished <> true, _type => core/server.query }
14.10 19:39:25 DB: SELECT id FROM battle WHERE firstid=37 OR secondid=37 AND finished <> true
14.10 19:39:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 47 }, { id => 46 }, { id => 45 }}, errorCode => ok, _type => core/server.query }
14.10 19:39:25 TIME: core/server.query : 1.99 ms
14.10 19:39:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
14.10 19:39:25 STATS: cache [battle], get [6 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
14.10 19:39:25 STATS: cache [battle], segments [19 calls, 10 hits, 8 misses]
14.10 19:39:25 STATS: cache [battle], database [960 calls, 4 reads, 4 writes]
14.10 19:39:25 STATS: cache [battle], lock [4 calls, 4 attempts, 0 failures]
14.10 19:39:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 37, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
14.10 19:39:25 TIME: vdl/cache.battle.infoRoom : 0.51 ms
14.10 19:39:25 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 45, _type => vdl/cache.battle.deleteRoom }
14.10 19:39:25 ROOM: deleted room 45
14.10 19:39:25 DB: DELETE FROM Battle WHERE ID = 45
14.10 19:39:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
14.10 19:39:25 TIME: vdl/cache.battle.deleteRoom : 28.18 ms
14.10 19:39:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 37, _type => core/cache.update }
14.10 19:39:25 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 19:39:25 STATS: cache [user], segments [12 calls, 5 hits, 6 misses]
14.10 19:39:25 STATS: cache [user], database [960 calls, 3 reads, 4 writes]
14.10 19:39:25 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
14.10 19:39:25 STATS: cache manager [1], get [6 calls, total 0.02 sec spent, avg 3.17 ms]
14.10 19:39:25 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.3 ms]
14.10 19:39:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:39:25 TIME: core/cache.update : 0.55 ms
14.10 19:39:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 37, _type => core/cache.update }
14.10 19:39:25 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 19:39:25 STATS: cache [questdata], segments [9 calls, 2 hits, 6 misses]
14.10 19:39:25 STATS: cache [questdata], database [960 calls, 3 reads, 1 writes]
14.10 19:39:25 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
14.10 19:39:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:39:25 TIME: core/cache.update : 0.55 ms
14.10 19:39:25 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 37, _type => core/user.logoutPost }
14.10 19:39:25 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:39:25 TIME: core/user.logoutPost : 0.49 ms
14.10 19:39:25 TIMER: Clans cache...
14.10 19:39:25 TIMER: Clans cache: 0ms
14.10 19:39:25 TIMER: Check tournament...
14.10 19:39:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:41' AND status = 'starting'
14.10 19:39:25 TIMER: Check tournament: 1ms
14.10 19:39:25 WRITEDB: UPDATE Users SET name = E'uid37', deleted = E'false', email = E'', networktype = E'  ', password = E'uid37', isbanned = E'false', regdate = E'2016-10-14 19:09:11.07001+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 37
14.10 19:39:25 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 37
14.10 19:41:36 BLOCKREMOVE: user 37 removed
14.10 19:41:36 BLOCKREMOVE: questdata 37 removed
14.10 19:41:36 BLOCKREMOVE: battle 45 removed
14.10 19:42:25 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:42:25 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:42:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 47 }, { id => 46 }}, errorCode => ok, _type => core/server.query }
14.10 19:42:25 TIME: core/server.query : 2.26 ms
14.10 19:42:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
14.10 19:42:25 STATS: cache [battle], get [7 calls, 2 cache hits, 4 cache misses, 0 same version, 0 not found]
14.10 19:42:25 STATS: cache [battle], segments [21 calls, 12 hits, 8 misses]
14.10 19:42:25 STATS: cache [battle], database [1020 calls, 4 reads, 4 writes]
14.10 19:42:25 STATS: cache [battle], lock [4 calls, 4 attempts, 0 failures]
14.10 19:42:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 37, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
14.10 19:42:25 TIME: vdl/cache.battle.infoRoom : 0.5 ms
14.10 19:42:25 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 46, _type => vdl/cache.battle.deleteRoom }
14.10 19:42:25 ROOM: deleted room 46
14.10 19:42:25 DB: DELETE FROM Battle WHERE ID = 46
14.10 19:42:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
14.10 19:42:25 TIME: vdl/cache.battle.deleteRoom : 24.9 ms
14.10 19:42:25 NET: vdl.0 (thread) request core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { _type => battle.end } }
14.10 19:42:25 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:42:25 TIME: core/user.sendTo : 0.06 ms
14.10 19:42:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:42:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:42:25 TIME: core/cache.update : 0.09 ms
14.10 19:42:25 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:42:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:42:25 TIME: core/cache.update : 0.24 ms
14.10 19:42:25 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:42:25 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:42:25 TIME: core/user.logoutPost : 0.06 ms
14.10 19:42:25 TIMER: Clans cache...
14.10 19:42:25 TIMER: Clans cache: 0ms
14.10 19:42:25 TIMER: Check tournament...
14.10 19:42:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:42' AND status = 'starting'
14.10 19:42:25 TIMER: Check tournament: 0ms
14.10 19:42:26 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:42:26 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
14.10 19:42:36 BLOCKREMOVE: user 36 removed
14.10 19:42:36 BLOCKREMOVE: questdata 36 removed
14.10 19:42:36 BLOCKREMOVE: battle 46 removed
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:43' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:44' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:45' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:46' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:47' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:48' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:49' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:50' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:51' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:52' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:53' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:54' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:55' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:43:25 TIMER: Clans cache...
14.10 19:43:25 TIMER: Clans cache: 0ms
14.10 19:43:25 TIMER: Check tournament...
14.10 19:43:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:56' AND status = 'starting'
14.10 19:43:25 TIMER: Check tournament: 1ms
14.10 19:56:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
14.10 19:56:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
14.10 19:56:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
14.10 19:56:30 TIME: core/server.query : 2.39 ms
14.10 19:56:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
14.10 19:56:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 19:56:30 TIME: core/user.isOnlineID : 0.09 ms
14.10 19:56:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
14.10 19:56:30 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 19:56:30 STATS: cache [user], segments [16 calls, 9 hits, 6 misses]
14.10 19:56:30 STATS: cache [user], database [1865 calls, 3 reads, 6 writes]
14.10 19:56:30 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
14.10 19:56:30 READDB: SELECT * FROM Users WHERE ID = 36
14.10 19:56:30 STATS: cache manager [1], get [7 calls, total 0.02 sec spent, avg 3.09 ms]
14.10 19:56:30 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.26 ms]
14.10 19:56:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476458086, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 36 } }
14.10 19:56:30 TIME: core/cache.get : 3.09 ms
14.10 19:56:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
14.10 19:56:30 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 19:56:30 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
14.10 19:56:30 STATS: cache [questdata], database [1865 calls, 3 reads, 3 writes]
14.10 19:56:30 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
14.10 19:56:30 READDB: SELECT * FROM UserQuests WHERE ID = 36
14.10 19:56:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
14.10 19:56:30 TIME: core/cache.get : 1.41 ms
14.10 19:56:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 19:56:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 19:56:30 TIME: core/user.loginPost : 0.13 ms
14.10 19:56:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
14.10 19:56:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:56:35 TIME: core/cache.update : 0.17 ms
14.10 19:56:36 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:56:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:56:37 DB: SELECT * FROM tournament
14.10 19:56:37 STATS: cache [tournament], get [12 calls, 7 cache hits, 4 cache misses, 0 same version, 0 not found]
14.10 19:56:37 STATS: cache [tournament], segments [18 calls, 13 hits, 4 misses]
14.10 19:56:37 STATS: cache [tournament], database [1872 calls, 4 reads, 3 writes]
14.10 19:56:37 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 19:56:37 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 19:56:37 DB: SELECT name FROM users WHERE id = 36
14.10 19:56:37 DB: SELECT name FROM users WHERE id = 37
14.10 19:56:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 19:56:37 TIME: vdl/cache.tournament.getAvailableTournament : 6.06 ms
14.10 19:56:41 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 19:56:41 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
14.10 19:56:41 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.27 ms
14.10 19:56:41 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], _type => vdl/cache.tournament.setGrid }
14.10 19:56:41 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ tournamentId => 1, round => 1, player1 => null, player2 => 36 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 },{ tournamentId => 1, round => 1, player1 => 36, player2 => 37 }], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 19:56:41 TIME: vdl/cache.tournament.setGrid : 0.2 ms
14.10 19:56:52 BLOCKREMOVE: tournament 1 removed
14.10 19:57:08 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
14.10 19:57:08 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
14.10 19:57:08 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 47 }}, errorCode => ok, _type => core/server.query }
14.10 19:57:08 TIME: core/server.query : 1.43 ms
14.10 19:57:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
14.10 19:57:08 STATS: cache [battle], get [8 calls, 3 cache hits, 4 cache misses, 0 same version, 0 not found]
14.10 19:57:08 STATS: cache [battle], segments [23 calls, 14 hits, 8 misses]
14.10 19:57:08 STATS: cache [battle], database [1902 calls, 4 reads, 4 writes]
14.10 19:57:08 STATS: cache [battle], lock [4 calls, 4 attempts, 0 failures]
14.10 19:57:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 37, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
14.10 19:57:08 TIME: vdl/cache.battle.infoRoom : 5.84 ms
14.10 19:57:08 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 47, _type => vdl/cache.battle.deleteRoom }
14.10 19:57:08 ROOM: deleted room 47
14.10 19:57:08 DB: DELETE FROM Battle WHERE ID = 47
14.10 19:57:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
14.10 19:57:08 TIME: vdl/cache.battle.deleteRoom : 24.05 ms
14.10 19:57:08 NET: vdl.0 (thread) request core/user.sendTo { id => 37, _type => core/user.sendTo, msg => { _type => battle.end } }
14.10 19:57:08 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
14.10 19:57:08 TIME: core/user.sendTo : 0.18 ms
14.10 19:57:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
14.10 19:57:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 19:57:08 TIME: core/cache.update : 0.23 ms
14.10 19:57:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
14.10 19:57:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 19:57:08 TIME: core/cache.update : 0.26 ms
14.10 19:57:08 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
14.10 19:57:08 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 19:57:08 TIME: core/user.logoutPost : 0.29 ms
14.10 19:57:08 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458086,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 36
14.10 19:57:08 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
14.10 19:57:18 BLOCKREMOVE: user 36 removed
14.10 19:57:18 BLOCKREMOVE: questdata 36 removed
14.10 19:57:18 BLOCKREMOVE: battle 47 removed
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:57' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:58' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 19:59' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:00' AND status = 'starting'
14.10 19:57:25 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 2, 0)
14.10 19:57:25 TIMER: Check tournament: 4ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:01' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:02' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:03' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:04' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:05' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:06' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:07' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
14.10 19:57:25 TIMER: Clans cache...
14.10 19:57:25 TIMER: Clans cache: 0ms
14.10 19:57:25 TIMER: Check tournament...
14.10 19:57:25 DB: SELECT * FROM tournament WHERE startdate = '2016-14-10 20:08' AND status = 'starting'
14.10 19:57:25 TIMER: Check tournament: 1ms
