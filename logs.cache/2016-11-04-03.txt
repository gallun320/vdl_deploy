04.11 03:00:49 TIMER: Starting timer...
04.11 03:00:49 TIMER: Timer running...
04.11 03:00:49 DB: SELECT * FROM GameVars
04.11 03:00:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:00:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:00:49 DB: SELECT * FROM Shops WHERE ID = 1
04.11 03:00:49 TEMP: load ./tmp/quest_daily_ids
04.11 03:00:49 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 03:00:49 TEMP: save ./tmp/quest_daily_ids
04.11 03:00:49 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:00:49 QUEUE: vdl.0 (thread) response server.login
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM LocalizationStrings
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 15.5 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM GameVars
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 0.67 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.5 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 0.86 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.87 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 2.17 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 03:00:49 TIME: core/quest.getDaily : 0.04 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM UserAttributeTypes
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.07 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM UserVariableTypes
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 0.98 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:00:49 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 2.54 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM ItemGroups
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.29 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.52 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.45 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 03:00:49 TIME: core/shop.getList : 0.08 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM EffectAttributeTypes
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.27 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM Effects
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.11 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:00:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 2.18 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:00:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 1.29 ms
04.11 03:00:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:00:49 DB: SELECT * FROM Badges
04.11 03:00:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:00:49 TIME: core/server.query : 0.76 ms
04.11 03:01:13 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:01:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:01:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:01:13 TIME: core/server.query : 2.84 ms
04.11 03:01:13 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:01:13 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 03:01:13 TIME: core/user.isOnlineID : 0.1 ms
04.11 03:01:13 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:01:13 READDB: SELECT * FROM Users WHERE ID = 107
04.11 03:01:13 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:01:13 TIME: core/cache.get : 5.08 ms
04.11 03:01:13 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:01:13 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 03:01:13 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:01:13 TIME: core/cache.get : 1.81 ms
04.11 03:01:13 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:01:13 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:01:13 TIME: core/user.loginPost : 0.15 ms
04.11 03:01:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:01:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:01:19 TIME: core/cache.update : 0.17 ms
04.11 03:01:20 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:01:21 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 03:01:21 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 03:01:21 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 32 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 42 }, { id => 43 }}, errorCode => ok, _type => core/server.query }
04.11 03:01:21 TIME: core/server.query : 2.03 ms
04.11 03:01:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
04.11 03:01:21 READDB: SELECT * FROM Battle WHERE ID = 43
04.11 03:01:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:01:21 TIME: vdl/cache.battle.infoRoom : 1.89 ms
04.11 03:01:21 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 43, _type => vdl/cache.battle.deleteRoom }
04.11 03:01:21 ROOM: deleted room 43
04.11 03:01:21 DB: DELETE FROM Battle WHERE ID = 43
04.11 03:01:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 03:01:21 TIME: vdl/cache.battle.deleteRoom : 14.31 ms
04.11 03:01:21 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 43, _type => vdl/cache.battle.finishRoom }
04.11 03:01:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 03:01:21 TIME: vdl/cache.battle.finishRoom : 0.19 ms
04.11 03:01:21 NET: vdl.0 (thread) request core/user.sendTo { id => 116, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 03:01:21 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 03:01:21 TIME: core/user.sendTo : 0.13 ms
04.11 03:01:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 03:01:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 03:01:21 TIME: core/cache.update : 0.23 ms
04.11 03:01:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 03:01:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:01:21 TIME: core/cache.update : 0.17 ms
04.11 03:01:21 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 03:01:21 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 03:01:21 TIME: core/user.logoutPost : 0.27 ms
04.11 03:01:21 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 03:01:25 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:01:26 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 43
04.11 03:01:31 BLOCKREMOVE: questdata 107 removed
04.11 03:01:35 BLOCKREMOVE: user 107 removed
04.11 03:01:36 BLOCKREMOVE: battle 43 removed
04.11 03:01:49 TIMER: Clans cache...
04.11 03:01:49 TIMER: Clans cache: 0ms
04.11 03:01:49 TIMER: Check tournament...
04.11 03:01:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:01' OR rounddate = '2016-04-11 03:01' AND status <> 'finished'
04.11 03:01:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.70985885' AND avaliable = true AND finished <> true
04.11 03:01:49 TIMER: Check tournament: 3ms
04.11 03:01:49 TIMER: Clans cache...
04.11 03:01:49 TIMER: Clans cache: 0ms
04.11 03:01:49 TIMER: Check tournament...
04.11 03:01:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:02' OR rounddate = '2016-04-11 03:02' AND status <> 'finished'
04.11 03:01:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.76987173' AND avaliable = true AND finished <> true
04.11 03:01:49 TIMER: Check tournament: 3ms
04.11 03:03:48 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:03:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:03:48 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:03:48 TIME: core/server.query : 2.73 ms
04.11 03:03:48 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:03:48 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:03:48 TIME: core/user.isOnlineID : 0.12 ms
04.11 03:03:48 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:03:48 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 03:03:48 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
04.11 03:03:48 STATS: cache [user], database [179 calls, 1 reads, 2 writes]
04.11 03:03:48 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 03:03:48 READDB: SELECT * FROM Users WHERE ID = 116
04.11 03:03:48 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.74 ms]
04.11 03:03:48 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.05 ms]
04.11 03:03:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:03:48 TIME: core/cache.get : 2.08 ms
04.11 03:03:48 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:03:48 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 03:03:48 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
04.11 03:03:48 STATS: cache [questdata], database [179 calls, 1 reads, 1 writes]
04.11 03:03:48 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 03:03:48 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 03:03:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:03:48 TIME: core/cache.get : 1.42 ms
04.11 03:03:48 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:03:48 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:03:48 TIME: core/user.loginPost : 0.38 ms
04.11 03:03:49 TIMER: Clans cache...
04.11 03:03:49 TIMER: Clans cache: 0ms
04.11 03:03:49 TIMER: Check tournament...
04.11 03:03:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:03' OR rounddate = '2016-04-11 03:03' AND status <> 'finished'
04.11 03:03:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.82988547' AND avaliable = true AND finished <> true
04.11 03:03:49 TIMER: Check tournament: 3ms
04.11 03:03:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:03:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:03:54 TIME: core/cache.update : 0.19 ms
04.11 03:03:55 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 03:04:49 TIMER: Clans cache...
04.11 03:04:49 TIMER: Clans cache: 0ms
04.11 03:04:49 TIMER: Check tournament...
04.11 03:04:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:04' OR rounddate = '2016-04-11 03:04' AND status <> 'finished'
04.11 03:04:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.88989888' AND avaliable = true AND finished <> true
04.11 03:04:49 TIMER: Check tournament: 4ms
04.11 03:05:17 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:05:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:05:17 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
04.11 03:05:17 TIME: core/server.query : 1.31 ms
04.11 03:05:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:05:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:05:17 TIME: core/user.isOnlineID : 0.13 ms
04.11 03:05:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:05:17 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 03:05:17 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
04.11 03:05:17 STATS: cache [user], database [268 calls, 2 reads, 3 writes]
04.11 03:05:17 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
04.11 03:05:17 READDB: SELECT * FROM Users WHERE ID = 107
04.11 03:05:17 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2.26 ms]
04.11 03:05:17 STATS: cache manager [1], update [4 calls, total 0 sec spent, avg 0.06 ms]
04.11 03:05:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 107 } }
04.11 03:05:17 TIME: core/cache.get : 2.43 ms
04.11 03:05:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:05:17 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 03:05:17 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
04.11 03:05:17 STATS: cache [questdata], database [268 calls, 2 reads, 1 writes]
04.11 03:05:17 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
04.11 03:05:17 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 03:05:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
04.11 03:05:17 TIME: core/cache.get : 1.85 ms
04.11 03:05:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:05:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:05:17 TIME: core/user.loginPost : 0.37 ms
04.11 03:05:24 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:05:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:05:24 TIME: vdl/cache.battle.findRandom : 0.16 ms
04.11 03:05:24 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:05:24 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:05:24 TIME: core/cache.update : 0.18 ms
04.11 03:05:25 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:05:31 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:05:31 DB: SELECT nextval('Battle_id_seq') AS id
04.11 03:05:31 READDB: SELECT ID FROM Battle WHERE ID = 45
04.11 03:05:31 READDB: INSERT INTO Battle (ID) VALUES (45)
04.11 03:05:31 STATS: cache [battle], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 03:05:31 STATS: cache [battle], segments [5 calls, 3 hits, 1 misses]
04.11 03:05:31 STATS: cache [battle], database [282 calls, 1 reads, 1 writes]
04.11 03:05:31 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:05:31 READDB: SELECT * FROM Battle WHERE ID = 45
04.11 03:05:31 DB: SELECT name FROM users WHERE id=107
04.11 03:05:31 DB: SELECT name FROM users WHERE id=116
04.11 03:05:31 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 45, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:05:31 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 45, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:05:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:05:31 TIME: vdl/cache.battle.findRandom : 34.76 ms
04.11 03:05:36 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481817.93142333', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 45
04.11 03:05:37 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
04.11 03:05:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:05:37 TIME: vdl/cache.battle.infoRoom : 0.14 ms
04.11 03:05:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
04.11 03:05:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:05:42 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:05:42 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 45 }
04.11 03:05:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:05:42 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:05:49 TIMER: Clans cache...
04.11 03:05:49 TIMER: Clans cache: 0ms
04.11 03:05:49 TIMER: Check tournament...
04.11 03:05:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:05' OR rounddate = '2016-04-11 03:05' AND status <> 'finished'
04.11 03:05:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.94991333' AND avaliable = true AND finished <> true
04.11 03:05:49 TIMER: Check tournament: 2ms
04.11 03:05:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
04.11 03:05:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:05:50 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 03:06:01 BLOCKREMOVE: battle 45 removed
04.11 03:06:49 TIMER: Clans cache...
04.11 03:06:49 TIMER: Clans cache: 0ms
04.11 03:06:49 TIMER: Check tournament...
04.11 03:06:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:06' OR rounddate = '2016-04-11 03:06' AND status <> 'finished'
04.11 03:06:49 DB: SELECT * FROM battle WHERE endtime >= '1478218.00992653' AND avaliable = true AND finished <> true
04.11 03:06:49 TIMER: Check tournament: 2ms
04.11 03:06:54 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 03:06:54 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 03:06:54 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 32 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 42 }, { id => 45 }}, errorCode => ok, _type => core/server.query }
04.11 03:06:54 TIME: core/server.query : 1.4 ms
04.11 03:06:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 45, _type => vdl/cache.battle.infoRoom }
04.11 03:06:54 STATS: cache [battle], get [7 calls, 4 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 03:06:54 STATS: cache [battle], segments [11 calls, 8 hits, 2 misses]
04.11 03:06:54 STATS: cache [battle], database [365 calls, 2 reads, 2 writes]
04.11 03:06:54 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:06:54 READDB: SELECT * FROM Battle WHERE ID = 45
04.11 03:06:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:06:54 TIME: vdl/cache.battle.infoRoom : 1.45 ms
04.11 03:06:54 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 45, _type => vdl/cache.battle.deleteRoom }
04.11 03:06:54 ROOM: deleted room 45
04.11 03:06:54 DB: DELETE FROM Battle WHERE ID = 45
04.11 03:06:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 03:06:54 TIME: vdl/cache.battle.deleteRoom : 25.6 ms
04.11 03:06:54 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 45, _type => vdl/cache.battle.finishRoom }
04.11 03:06:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 03:06:54 TIME: vdl/cache.battle.finishRoom : 0.2 ms
04.11 03:06:54 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 03:06:54 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 03:06:54 STATS: cache [user], segments [12 calls, 5 hits, 6 misses]
04.11 03:06:54 STATS: cache [user], database [365 calls, 3 reads, 4 writes]
04.11 03:06:54 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
04.11 03:06:54 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 2.09 ms]
04.11 03:06:54 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.1 ms]
04.11 03:06:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 03:06:54 TIME: core/cache.update : 0.62 ms
04.11 03:06:54 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 03:06:54 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 03:06:54 STATS: cache [questdata], segments [9 calls, 2 hits, 6 misses]
04.11 03:06:54 STATS: cache [questdata], database [365 calls, 3 reads, 1 writes]
04.11 03:06:54 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
04.11 03:06:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:06:54 TIME: core/cache.update : 0.43 ms
04.11 03:06:54 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 03:06:54 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 03:06:54 TIME: core/user.logoutPost : 0.1 ms
04.11 03:06:55 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:06:55 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 03:07:00 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 45
04.11 03:07:05 BLOCKREMOVE: user 107 removed
04.11 03:07:05 BLOCKREMOVE: questdata 107 removed
04.11 03:07:05 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 03:07:05 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 03:07:05 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 10 }, { id => 32 }, { id => 13 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 42 }}, errorCode => ok, _type => core/server.query }
04.11 03:07:05 TIME: core/server.query : 1.18 ms
04.11 03:07:05 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 03:07:05 READDB: SELECT * FROM Battle WHERE ID = 42
04.11 03:07:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:07:05 TIME: vdl/cache.battle.infoRoom : 0.99 ms
04.11 03:07:05 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 42, _type => vdl/cache.battle.deleteRoom }
04.11 03:07:05 ROOM: deleted room 42
04.11 03:07:05 DB: DELETE FROM Battle WHERE ID = 42
04.11 03:07:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 03:07:05 TIME: vdl/cache.battle.deleteRoom : 18.32 ms
04.11 03:07:05 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 42, _type => vdl/cache.battle.finishRoom }
04.11 03:07:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 03:07:05 TIME: vdl/cache.battle.finishRoom : 0.17 ms
04.11 03:07:05 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 03:07:05 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 03:07:05 TIME: core/user.sendTo : 0.14 ms
04.11 03:07:05 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 03:07:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 03:07:05 TIME: core/cache.update : 0.23 ms
04.11 03:07:05 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 03:07:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:07:05 TIME: core/cache.update : 0.18 ms
04.11 03:07:05 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 03:07:05 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 03:07:05 TIME: core/user.logoutPost : 0.09 ms
04.11 03:07:06 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 03:07:06 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 03:07:10 BLOCKREMOVE: battle 45 removed
04.11 03:07:11 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'true', endtime = E'1481820', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 42
04.11 03:07:16 BLOCKREMOVE: user 116 removed
04.11 03:07:16 BLOCKREMOVE: questdata 116 removed
04.11 03:07:21 BLOCKREMOVE: battle 42 removed
04.11 03:07:49 TIMER: Clans cache...
04.11 03:07:49 TIMER: Clans cache: 0ms
04.11 03:07:49 TIMER: Check tournament...
04.11 03:07:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:07' OR rounddate = '2016-04-11 03:07' AND status <> 'finished'
04.11 03:07:49 DB: SELECT * FROM battle WHERE endtime >= '1478218.06993688' AND avaliable = true AND finished <> true
04.11 03:07:49 TIMER: Check tournament: 1ms
04.11 03:07:49 TIMER: Clans cache...
04.11 03:07:49 TIMER: Clans cache: 0ms
04.11 03:07:49 TIMER: Check tournament...
04.11 03:07:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:08' OR rounddate = '2016-04-11 03:08' AND status <> 'finished'
04.11 03:07:49 DB: SELECT * FROM battle WHERE endtime >= '1478218.12995055' AND avaliable = true AND finished <> true
04.11 03:07:49 TIMER: Check tournament: 1ms
04.11 03:09:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:09:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:09:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:09:43 TIME: core/server.query : 1.32 ms
04.11 03:09:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:09:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:09:43 TIME: core/user.isOnlineID : 0.11 ms
04.11 03:09:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:09:43 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 03:09:43 STATS: cache [user], segments [16 calls, 9 hits, 6 misses]
04.11 03:09:43 STATS: cache [user], database [534 calls, 3 reads, 6 writes]
04.11 03:09:43 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
04.11 03:09:43 READDB: SELECT * FROM Users WHERE ID = 116
04.11 03:09:43 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 2.05 ms]
04.11 03:09:43 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.12 ms]
04.11 03:09:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:09:43 TIME: core/cache.get : 2.32 ms
04.11 03:09:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:09:43 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 03:09:43 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
04.11 03:09:43 STATS: cache [questdata], database [534 calls, 3 reads, 3 writes]
04.11 03:09:43 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
04.11 03:09:43 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 03:09:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:09:43 TIME: core/cache.get : 2.38 ms
04.11 03:09:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:09:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:09:43 TIME: core/user.loginPost : 0.13 ms
04.11 03:09:49 TIMER: Clans cache...
04.11 03:09:49 TIMER: Clans cache: 0ms
04.11 03:09:49 TIMER: Check tournament...
04.11 03:09:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:09' OR rounddate = '2016-04-11 03:09' AND status <> 'finished'
04.11 03:09:49 DB: SELECT * FROM battle WHERE endtime >= '1478218.189967' AND avaliable = true AND finished <> true
04.11 03:09:49 TIMER: Check tournament: 3ms
04.11 03:09:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:09:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:09:50 TIME: core/cache.update : 0.14 ms
04.11 03:09:50 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 03:12:22 TIMER: Starting timer...
04.11 03:12:22 DB: SELECT * FROM GameVars
04.11 03:12:22 TIMER: Timer running...
04.11 03:12:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:12:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:12:22 DB: SELECT * FROM Shops WHERE ID = 1
04.11 03:12:22 TEMP: load ./tmp/quest_daily_ids
04.11 03:12:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 03:12:22 TEMP: save ./tmp/quest_daily_ids
04.11 03:12:22 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:12:22 QUEUE: vdl.0 (thread) response server.login
04.11 03:12:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:12:22 DB: SELECT * FROM LocalizationStrings
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 26.41 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM GameVars
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 2.67 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 2.34 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.97 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 2.76 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 2.91 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 03:12:23 TIME: core/quest.getDaily : 0.13 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM UserAttributeTypes
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.54 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM UserVariableTypes
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.73 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:12:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 3.78 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM ItemGroups
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.61 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.33 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.26 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 03:12:23 TIME: core/shop.getList : 0.04 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM EffectAttributeTypes
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.19 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM Effects
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.28 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:12:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 4.95 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:12:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 2.08 ms
04.11 03:12:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:12:23 DB: SELECT * FROM Badges
04.11 03:12:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:12:23 TIME: core/server.query : 1.08 ms
04.11 03:13:02 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:13:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:13:02 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:13:02 TIME: core/server.query : 2.53 ms
04.11 03:13:02 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:13:02 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 03:13:02 TIME: core/user.isOnlineID : 0.09 ms
04.11 03:13:02 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:13:02 READDB: SELECT * FROM Users WHERE ID = 107
04.11 03:13:02 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:13:02 TIME: core/cache.get : 5.74 ms
04.11 03:13:02 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:13:02 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 03:13:02 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:13:02 TIME: core/cache.get : 1.69 ms
04.11 03:13:02 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:13:02 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:13:02 TIME: core/user.loginPost : 0.15 ms
04.11 03:13:08 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:13:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:13:08 TIME: core/cache.update : 0.13 ms
04.11 03:13:08 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:13:13 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:13:13 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:13:13 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:13:13 TIME: core/server.query : 3.13 ms
04.11 03:13:13 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:13:13 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:13:13 TIME: core/user.isOnlineID : 0.13 ms
04.11 03:13:13 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:13:13 READDB: SELECT * FROM Users WHERE ID = 116
04.11 03:13:13 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:13:13 TIME: core/cache.get : 1.57 ms
04.11 03:13:13 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:13:13 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 03:13:13 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:13:13 TIME: core/cache.get : 1.2 ms
04.11 03:13:13 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:13:13 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:13:13 TIME: core/user.loginPost : 0.15 ms
04.11 03:13:23 TIMER: Clans cache...
04.11 03:13:23 TIMER: Clans cache: 0ms
04.11 03:13:23 TIMER: Check tournament...
04.11 03:13:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:13' OR rounddate = '2016-04-11 03:13' AND status <> 'finished'
04.11 03:13:23 DB: SELECT * FROM battle WHERE endtime >= '1478218.40302319' AND avaliable = true AND finished <> true
04.11 03:13:23 TIMER: Check tournament: 5ms
04.11 03:13:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:13:23 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 03:13:23 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
04.11 03:13:23 STATS: cache [user], database [61 calls, 2 reads, 1 writes]
04.11 03:13:23 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 03:13:23 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.37 ms]
04.11 03:13:23 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.18 ms]
04.11 03:13:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:13:23 TIME: core/cache.update : 0.54 ms
04.11 03:13:24 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 03:13:24 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:13:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:13:24 TIME: vdl/cache.battle.findRandom : 0.17 ms
04.11 03:13:30 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:13:30 DB: SELECT nextval('Battle_id_seq') AS id
04.11 03:13:30 READDB: SELECT ID FROM Battle WHERE ID = 46
04.11 03:13:30 READDB: INSERT INTO Battle (ID) VALUES (46)
04.11 03:13:30 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:13:30 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 03:13:30 STATS: cache [battle], database [68 calls, 0 reads, 0 writes]
04.11 03:13:30 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:13:30 READDB: SELECT * FROM Battle WHERE ID = 46
04.11 03:13:30 DB: SELECT name FROM users WHERE id=107
04.11 03:13:30 DB: SELECT name FROM users WHERE id=116
04.11 03:13:30 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 46, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:13:30 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 46, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:13:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:13:30 TIME: vdl/cache.battle.findRandom : 34.77 ms
04.11 03:13:36 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481818.41046879', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 46
04.11 03:13:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:13:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:13:36 TIME: vdl/cache.battle.infoRoom : 0.18 ms
04.11 03:13:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:13:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:13:41 TIME: vdl/cache.battle.infoRoom : 0.21 ms
04.11 03:13:41 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 46 }
04.11 03:13:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:13:41 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 03:13:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:13:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:13:46 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:13:46 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 46 }
04.11 03:13:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:13:46 TIME: vdl/cache.battle.setScores : 0.18 ms
04.11 03:13:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:13:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:13:52 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:14:03 BLOCKREMOVE: battle 46 removed
04.11 03:14:23 TIMER: Clans cache...
04.11 03:14:23 TIMER: Clans cache: 0ms
04.11 03:14:23 TIMER: Check tournament...
04.11 03:14:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:14' OR rounddate = '2016-04-11 03:14' AND status <> 'finished'
04.11 03:14:23 DB: SELECT * FROM battle WHERE endtime >= '1478218.46303757' AND avaliable = true AND finished <> true
04.11 03:14:23 TIMER: Check tournament: 3ms
04.11 03:14:23 TIMER: Clans cache...
04.11 03:14:23 TIMER: Clans cache: 0ms
04.11 03:14:23 TIMER: Check tournament...
04.11 03:14:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:15' OR rounddate = '2016-04-11 03:15' AND status <> 'finished'
04.11 03:14:23 DB: SELECT * FROM battle WHERE endtime >= '1478218.52305378' AND avaliable = true AND finished <> true
04.11 03:14:23 TIMER: Check tournament: 4ms
04.11 03:15:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:15:36 STATS: cache [battle], get [6 calls, 4 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 03:15:36 STATS: cache [battle], segments [8 calls, 6 hits, 1 misses]
04.11 03:15:36 STATS: cache [battle], database [194 calls, 1 reads, 1 writes]
04.11 03:15:36 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:15:36 READDB: SELECT * FROM Battle WHERE ID = 46
04.11 03:15:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:15:36 TIME: vdl/cache.battle.infoRoom : 1.52 ms
04.11 03:15:36 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 46, _type => vdl/cache.battle.makeTurn }
04.11 03:15:36 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.05 ms]
04.11 03:15:36 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 03:15:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:15:36 TIME: vdl/cache.battle.makeTurn : 0.4 ms
04.11 03:15:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'116', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 46
04.11 03:16:23 TIMER: Clans cache...
04.11 03:16:23 TIMER: Clans cache: 0ms
04.11 03:16:23 TIMER: Check tournament...
04.11 03:16:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:16' OR rounddate = '2016-04-11 03:16' AND status <> 'finished'
04.11 03:16:23 DB: SELECT * FROM battle WHERE endtime >= '1478218.58306568' AND avaliable = true AND finished <> true
04.11 03:16:23 TIMER: Check tournament: 1ms
04.11 03:16:23 TIMER: Clans cache...
04.11 03:16:23 TIMER: Clans cache: 0ms
04.11 03:16:23 TIMER: Check tournament...
04.11 03:16:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:17' OR rounddate = '2016-04-11 03:17' AND status <> 'finished'
04.11 03:16:23 DB: SELECT * FROM battle WHERE endtime >= '1478218.64307595' AND avaliable = true AND finished <> true
04.11 03:16:23 TIMER: Check tournament: 1ms
04.11 03:17:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:17:41 STATS: cache [battle], get [8 calls, 5 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 03:17:41 STATS: cache [battle], segments [12 calls, 9 hits, 2 misses]
04.11 03:17:41 STATS: cache [battle], database [319 calls, 2 reads, 2 writes]
04.11 03:17:41 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
04.11 03:17:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:17:41 TIME: vdl/cache.battle.infoRoom : 0.41 ms
04.11 03:17:41 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 46, _type => vdl/cache.battle.makeTurn }
04.11 03:17:41 CACHE: cache block locked: battle.46
04.11 03:17:41 TRACE: vdl/cache.battle.makeTurn : Invalid field access : get
04.11 03:17:41 TRACE: vdl/cache.battle.makeTurn : 
Called from modules/VDLCache.hx line 1010
Called from modules/VDLCache.hx line 868
Called from modules/VDLCache.hx line 113
Called from snipe/cache/CacheServer.hx line 487
04.11 03:17:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => _requestException, _type => vdl/cache.battle.makeTurn }
04.11 03:17:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:17:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:17:54 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:18:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:18:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:18:02 TIME: vdl/cache.battle.infoRoom : 0.13 ms
04.11 03:18:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:18:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:18:15 TIME: vdl/cache.battle.infoRoom : 0.13 ms
04.11 03:18:15 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 46 }
04.11 03:18:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:18:15 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:18:19 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 46, _type => vdl/cache.battle.infoRoom }
04.11 03:18:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:18:19 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 03:18:19 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 46 }
04.11 03:18:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:18:19 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:18:23 TIMER: Clans cache...
04.11 03:18:23 TIMER: Clans cache: 0ms
04.11 03:18:23 TIMER: Check tournament...
04.11 03:18:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:18' OR rounddate = '2016-04-11 03:18' AND status <> 'finished'
04.11 03:18:23 DB: SELECT * FROM battle WHERE endtime >= '1478218.70309177' AND avaliable = true AND finished <> true
04.11 03:18:23 TIMER: Check tournament: 1ms
04.11 03:19:13 TIMER: Starting timer...
04.11 03:19:13 DB: SELECT * FROM GameVars
04.11 03:19:13 TIMER: Timer running...
04.11 03:19:13 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:19:13 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:19:13 DB: SELECT * FROM Shops WHERE ID = 1
04.11 03:19:13 TEMP: load ./tmp/quest_daily_ids
04.11 03:19:13 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 03:19:13 TEMP: save ./tmp/quest_daily_ids
04.11 03:19:13 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:19:13 QUEUE: vdl.0 (thread) response server.login
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM LocalizationStrings
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 17.6 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM GameVars
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 0.96 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 5.57 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 1.28 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 1.43 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 1.9 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 03:19:13 TIME: core/quest.getDaily : 0.07 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM UserAttributeTypes
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 1.34 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM UserVariableTypes
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 0.85 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:19:13 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 2.54 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM ItemGroups
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 0.96 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 1.7 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 1.55 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 03:19:13 TIME: core/shop.getList : 0.13 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM EffectAttributeTypes
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 0.96 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM Effects
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 1.01 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:19:13 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 2.32 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:19:13 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 2.1 ms
04.11 03:19:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:19:13 DB: SELECT * FROM Badges
04.11 03:19:13 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:13 TIME: core/server.query : 1.56 ms
04.11 03:19:36 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:19:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:19:36 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:19:36 TIME: core/server.query : 2.79 ms
04.11 03:19:36 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:19:36 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 03:19:36 TIME: core/user.isOnlineID : 0.09 ms
04.11 03:19:36 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:19:36 READDB: SELECT * FROM Users WHERE ID = 107
04.11 03:19:36 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:19:36 TIME: core/cache.get : 3.29 ms
04.11 03:19:36 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:19:36 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 03:19:36 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:19:36 TIME: core/cache.get : 1.37 ms
04.11 03:19:36 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:19:36 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:19:36 TIME: core/user.loginPost : 0.11 ms
04.11 03:19:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:19:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:19:43 TIME: core/cache.update : 0.16 ms
04.11 03:19:44 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:20:00 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:20:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:20:00 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:20:00 TIME: core/server.query : 2.85 ms
04.11 03:20:00 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:20:00 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:20:00 TIME: core/user.isOnlineID : 0.13 ms
04.11 03:20:00 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:20:00 READDB: SELECT * FROM Users WHERE ID = 116
04.11 03:20:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:20:00 TIME: core/cache.get : 1.83 ms
04.11 03:20:00 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:20:00 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 03:20:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:20:00 TIME: core/cache.get : 1.16 ms
04.11 03:20:00 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:20:00 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:20:00 TIME: core/user.loginPost : 0.14 ms
04.11 03:20:08 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:20:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:20:08 TIME: core/cache.update : 0.14 ms
04.11 03:20:09 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 03:20:13 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:20:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:20:13 TIME: vdl/cache.battle.findRandom : 0.15 ms
04.11 03:20:13 TIMER: Clans cache...
04.11 03:20:13 TIMER: Clans cache: 0ms
04.11 03:20:13 TIMER: Check tournament...
04.11 03:20:13 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:20' OR rounddate = '2016-04-11 03:20' AND status <> 'finished'
04.11 03:20:13 DB: SELECT * FROM battle WHERE endtime >= '1478218.81330859' AND avaliable = true AND finished <> true
04.11 03:20:13 TIMER: Check tournament: 3ms
04.11 03:20:20 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:20:20 DB: SELECT nextval('Battle_id_seq') AS id
04.11 03:20:20 READDB: SELECT ID FROM Battle WHERE ID = 47
04.11 03:20:20 READDB: INSERT INTO Battle (ID) VALUES (47)
04.11 03:20:20 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:20:20 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 03:20:20 STATS: cache [battle], database [68 calls, 0 reads, 0 writes]
04.11 03:20:20 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:20:20 READDB: SELECT * FROM Battle WHERE ID = 47
04.11 03:20:20 DB: SELECT name FROM users WHERE id=107
04.11 03:20:20 DB: SELECT name FROM users WHERE id=116
04.11 03:20:20 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 47, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:20:20 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 47, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:20:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:20:20 TIME: vdl/cache.battle.findRandom : 44.81 ms
04.11 03:20:26 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481818.82074404', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 47
04.11 03:20:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:20:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:20:36 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:20:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:20:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:20:42 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:20:42 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:20:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:20:42 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:20:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:20:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:20:48 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 03:20:48 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:20:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:20:48 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 03:20:59 BLOCKREMOVE: battle 47 removed
04.11 03:21:01 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:21:01 READDB: SELECT * FROM Battle WHERE ID = 47
04.11 03:21:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:21:01 TIME: vdl/cache.battle.infoRoom : 1.12 ms
04.11 03:21:12 BLOCKREMOVE: battle 47 removed
04.11 03:21:13 TIMER: Clans cache...
04.11 03:21:13 TIMER: Clans cache: 0ms
04.11 03:21:13 TIMER: Check tournament...
04.11 03:21:13 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:21' OR rounddate = '2016-04-11 03:21' AND status <> 'finished'
04.11 03:21:13 DB: SELECT * FROM battle WHERE endtime >= '1478218.87332228' AND avaliable = true AND finished <> true
04.11 03:21:13 TIMER: Check tournament: 3ms
04.11 03:21:13 TIMER: Clans cache...
04.11 03:21:13 TIMER: Clans cache: 0ms
04.11 03:21:13 TIMER: Check tournament...
04.11 03:21:13 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:22' OR rounddate = '2016-04-11 03:22' AND status <> 'finished'
04.11 03:21:13 DB: SELECT * FROM battle WHERE endtime >= '1478218.93333828' AND avaliable = true AND finished <> true
04.11 03:21:13 TIMER: Check tournament: 3ms
04.11 03:23:07 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:07 STATS: cache [battle], get [6 calls, 3 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 03:23:07 STATS: cache [battle], segments [8 calls, 5 hits, 2 misses]
04.11 03:23:07 STATS: cache [battle], database [235 calls, 2 reads, 1 writes]
04.11 03:23:07 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:23:07 READDB: SELECT * FROM Battle WHERE ID = 47
04.11 03:23:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:23:07 TIME: vdl/cache.battle.infoRoom : 1.45 ms
04.11 03:23:07 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 47, _type => vdl/cache.battle.makeTurn }
04.11 03:23:07 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.05 ms]
04.11 03:23:07 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 03:23:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:23:07 TIME: vdl/cache.battle.makeTurn : 0.36 ms
04.11 03:23:13 TIMER: Clans cache...
04.11 03:23:13 TIMER: Clans cache: 0ms
04.11 03:23:13 TIMER: Check tournament...
04.11 03:23:13 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:23' OR rounddate = '2016-04-11 03:23' AND status <> 'finished'
04.11 03:23:13 DB: SELECT * FROM battle WHERE endtime >= '1478218.99335101' AND avaliable = true AND finished <> true
04.11 03:23:13 TIMER: Check tournament: 2ms
04.11 03:23:13 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'116', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 47
04.11 03:23:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:33 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:23:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:40 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:23:40 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:23:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:23:40 TIME: vdl/cache.battle.setScores : 0.18 ms
04.11 03:23:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:43 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:23:43 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:23:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:23:43 TIME: vdl/cache.battle.setScores : 0.1 ms
04.11 03:23:49 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:49 TIME: vdl/cache.battle.infoRoom : 0.12 ms
04.11 03:23:49 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 47, _type => vdl/cache.battle.makeTurn }
04.11 03:23:49 CACHE: cache block locked: battle.47
04.11 03:23:49 TRACE: vdl/cache.battle.makeTurn : Invalid field access : get
04.11 03:23:49 TRACE: vdl/cache.battle.makeTurn : 
Called from modules/VDLCache.hx line 1010
Called from modules/VDLCache.hx line 868
Called from modules/VDLCache.hx line 113
Called from snipe/cache/CacheServer.hx line 487
04.11 03:23:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => _requestException, _type => vdl/cache.battle.makeTurn }
04.11 03:23:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:23:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:23:56 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 03:24:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:08 STATS: cache [battle], get [13 calls, 9 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 03:24:08 STATS: cache [battle], segments [18 calls, 14 hits, 3 misses]
04.11 03:24:08 STATS: cache [battle], database [296 calls, 3 reads, 2 writes]
04.11 03:24:08 STATS: cache [battle], lock [2 calls, 2 attempts, 1 failures]
04.11 03:24:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:08 TIME: vdl/cache.battle.infoRoom : 0.42 ms
04.11 03:24:08 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:24:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:24:08 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:24:13 TIMER: Clans cache...
04.11 03:24:13 TIMER: Clans cache: 0ms
04.11 03:24:13 TIMER: Check tournament...
04.11 03:24:13 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:24' OR rounddate = '2016-04-11 03:24' AND status <> 'finished'
04.11 03:24:13 DB: SELECT * FROM battle WHERE endtime >= '1478219.05336506' AND avaliable = true AND finished <> true
04.11 03:24:13 TIMER: Check tournament: 1ms
04.11 03:24:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:18 TIME: vdl/cache.battle.infoRoom : 0.1 ms
04.11 03:24:18 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:24:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:24:18 TIME: vdl/cache.battle.setScores : 0.09 ms
04.11 03:24:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:21 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:24:21 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:24:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:24:21 TIME: vdl/cache.battle.setScores : 0.19 ms
04.11 03:24:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:54 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:24:54 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 47 }
04.11 03:24:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:24:54 TIME: vdl/cache.battle.setScores : 0.11 ms
04.11 03:24:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:24:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:24:55 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 03:25:13 TIMER: Clans cache...
04.11 03:25:13 TIMER: Clans cache: 0ms
04.11 03:25:13 TIMER: Check tournament...
04.11 03:25:13 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:25' OR rounddate = '2016-04-11 03:25' AND status <> 'finished'
04.11 03:25:13 DB: SELECT * FROM battle WHERE endtime >= '1478219.1133757' AND avaliable = true AND finished <> true
04.11 03:25:13 TIMER: Check tournament: 1ms
04.11 03:25:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 47, _type => vdl/cache.battle.infoRoom }
04.11 03:25:53 STATS: cache [battle], get [18 calls, 14 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 03:25:53 STATS: cache [battle], segments [23 calls, 19 hits, 3 misses]
04.11 03:25:53 STATS: cache [battle], database [401 calls, 3 reads, 2 writes]
04.11 03:25:53 STATS: cache [battle], lock [2 calls, 2 attempts, 1 failures]
04.11 03:25:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:25:53 TIME: vdl/cache.battle.infoRoom : 0.42 ms
04.11 03:27:04 TIMER: Starting timer...
04.11 03:27:04 TIMER: Timer running...
04.11 03:27:04 DB: SELECT * FROM GameVars
04.11 03:27:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:27:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:27:04 DB: SELECT * FROM Shops WHERE ID = 1
04.11 03:27:04 TEMP: load ./tmp/quest_daily_ids
04.11 03:27:04 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 03:27:04 TEMP: save ./tmp/quest_daily_ids
04.11 03:27:05 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:27:05 QUEUE: vdl.0 (thread) response server.login
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM LocalizationStrings
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 37.77 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM GameVars
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 1.68 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 2.15 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 2.18 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 2.19 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 3.62 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 03:27:05 TIME: core/quest.getDaily : 1.22 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM UserAttributeTypes
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 1.69 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM UserVariableTypes
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 2.33 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:27:05 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 3.62 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:27:05 DB: SELECT * FROM ItemGroups
04.11 03:27:05 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:27:05 TIME: core/server.query : 1.04 ms
04.11 03:27:05 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, 04.11 03:29:23 TIMER: Starting timer...
04.11 03:29:23 DB: SELECT * FROM GameVars
04.11 03:29:23 TIMER: Timer running...
04.11 03:29:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:29:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:29:23 DB: SELECT * FROM Shops WHERE ID = 1
04.11 03:29:23 TEMP: load ./tmp/quest_daily_ids
04.11 03:29:23 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 03:29:23 TEMP: save ./tmp/quest_daily_ids
04.11 03:29:23 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:29:23 QUEUE: vdl.0 (thread) response server.login
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM LocalizationStrings
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 37.07 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM GameVars
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.06 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.82 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.11 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.59 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 2.52 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 03:29:23 TIME: core/quest.getDaily : 0.17 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM UserAttributeTypes
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.32 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM UserVariableTypes
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 0.97 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:29:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 2.53 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM ItemGroups
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.36 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.25 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.19 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 03:29:23 TIME: core/shop.getList : 0.41 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM EffectAttributeTypes
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.27 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM Effects
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.7 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:29:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 2.4 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:29:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 2.37 ms
04.11 03:29:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:29:23 DB: SELECT * FROM Badges
04.11 03:29:23 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:29:23 TIME: core/server.query : 1.24 ms
04.11 03:29:23 TIMER: Clans cache...
04.11 03:29:23 TIMER: Clans cache: 0ms
04.11 03:29:23 TIMER: Check tournament...
04.11 03:29:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:30' OR rounddate = '2016-04-11 03:30' AND status <> 'finished'
04.11 03:29:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.42336555' AND avaliable = true AND finished <> true
04.11 03:29:23 TIMER: Check tournament: 3ms
04.11 03:29:23 TIMER: Clans cache...
04.11 03:29:23 TIMER: Clans cache: 0ms
04.11 03:29:23 TIMER: Check tournament...
04.11 03:29:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:31' OR rounddate = '2016-04-11 03:31' AND status <> 'finished'
04.11 03:29:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.48337837' AND avaliable = true AND finished <> true
04.11 03:29:23 TIMER: Check tournament: 3ms
04.11 03:29:23 TIMER: Clans cache...
04.11 03:29:23 TIMER: Clans cache: 0ms
04.11 03:29:23 TIMER: Check tournament...
04.11 03:29:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:32' OR rounddate = '2016-04-11 03:32' AND status <> 'finished'
04.11 03:29:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.54339253' AND avaliable = true AND finished <> true
04.11 03:29:23 TIMER: Check tournament: 1ms
04.11 03:29:23 TIMER: Clans cache...
04.11 03:29:23 TIMER: Clans cache: 0ms
04.11 03:29:23 TIMER: Check tournament...
04.11 03:29:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:33' OR rounddate = '2016-04-11 03:33' AND status <> 'finished'
04.11 03:29:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.60340357' AND avaliable = true AND finished <> true
04.11 03:29:23 TIMER: Check tournament: 1ms
04.11 03:33:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:33:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:33:37 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:33:37 TIME: core/server.query : 2.64 ms
04.11 03:33:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:33:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 03:33:37 TIME: core/user.isOnlineID : 0.09 ms
04.11 03:33:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:33:37 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:33:37 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 03:33:37 STATS: cache [user], database [254 calls, 0 reads, 0 writes]
04.11 03:33:37 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 03:33:37 READDB: SELECT * FROM Users WHERE ID = 107
04.11 03:33:37 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.25 ms]
04.11 03:33:37 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 03:33:37 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:33:37 TIME: core/cache.get : 4.51 ms
04.11 03:33:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:33:37 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:33:37 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 03:33:37 STATS: cache [questdata], database [254 calls, 0 reads, 0 writes]
04.11 03:33:37 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 03:33:37 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 03:33:37 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:33:37 TIME: core/cache.get : 1.64 ms
04.11 03:33:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:33:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:33:37 TIME: core/user.loginPost : 0.13 ms
04.11 03:33:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:33:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:33:43 TIME: core/cache.update : 0.2 ms
04.11 03:33:44 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:34:02 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:34:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:34:02 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:34:02 TIME: core/server.query : 2.84 ms
04.11 03:34:02 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:34:02 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:34:02 TIME: core/user.isOnlineID : 0.11 ms
04.11 03:34:02 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:34:02 READDB: SELECT * FROM Users WHERE ID = 116
04.11 03:34:02 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:34:02 TIME: core/cache.get : 2.72 ms
04.11 03:34:02 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:34:02 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 03:34:02 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:34:02 TIME: core/cache.get : 1.09 ms
04.11 03:34:02 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:34:02 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:34:02 TIME: core/user.loginPost : 0.12 ms
04.11 03:34:08 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:34:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:34:08 TIME: core/cache.update : 0.19 ms
04.11 03:34:09 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 03:34:23 TIMER: Clans cache...
04.11 03:34:23 TIMER: Clans cache: 0ms
04.11 03:34:23 TIMER: Check tournament...
04.11 03:34:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:34' OR rounddate = '2016-04-11 03:34' AND status <> 'finished'
04.11 03:34:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.66341481' AND avaliable = true AND finished <> true
04.11 03:34:23 TIMER: Check tournament: 2ms
04.11 03:34:37 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:34:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:34:37 TIME: vdl/cache.battle.findRandom : 0.16 ms
04.11 03:34:42 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:34:42 DB: SELECT nextval('Battle_id_seq') AS id
04.11 03:34:42 READDB: SELECT ID FROM Battle WHERE ID = 48
04.11 03:34:42 READDB: INSERT INTO Battle (ID) VALUES (48)
04.11 03:34:42 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:34:42 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 03:34:42 STATS: cache [battle], database [320 calls, 0 reads, 0 writes]
04.11 03:34:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:34:42 READDB: SELECT * FROM Battle WHERE ID = 48
04.11 03:34:42 DB: SELECT name FROM users WHERE id=107
04.11 03:34:42 DB: SELECT name FROM users WHERE id=116
04.11 03:34:42 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 48, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:34:42 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 48, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:34:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:34:42 TIME: vdl/cache.battle.findRandom : 33.57 ms
04.11 03:34:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481819.68291475', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 48
04.11 03:34:49 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:34:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:34:49 TIME: vdl/cache.battle.infoRoom : 0.18 ms
04.11 03:34:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:34:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:34:54 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 03:34:54 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 48 }
04.11 03:34:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:34:54 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:35:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:35:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:35:00 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:35:00 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 48 }
04.11 03:35:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:35:00 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:35:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:35:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:35:04 TIME: vdl/cache.battle.infoRoom : 0.18 ms
04.11 03:35:04 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 48, _type => vdl/cache.battle.makeTurn }
04.11 03:35:04 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.04 ms]
04.11 03:35:04 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 03:35:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 03:35:04 TIME: vdl/cache.battle.makeTurn : 0.23 ms
04.11 03:35:05 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'116', finished = E'false', endtime = E'1481819.68291475', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 48
04.11 03:35:09 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:35:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:35:09 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:35:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:35:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:35:17 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:35:23 TIMER: Clans cache...
04.11 03:35:23 TIMER: Clans cache: 0ms
04.11 03:35:23 TIMER: Check tournament...
04.11 03:35:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:35' OR rounddate = '2016-04-11 03:35' AND status <> 'finished'
04.11 03:35:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.72343003' AND avaliable = true AND finished <> true
04.11 03:35:23 TIMER: Check tournament: 3ms
04.11 03:35:23 TIMER: Clans cache...
04.11 03:35:23 TIMER: Clans cache: 0ms
04.11 03:35:23 TIMER: Check tournament...
04.11 03:35:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:36' OR rounddate = '2016-04-11 03:36' AND status <> 'finished'
04.11 03:35:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.78344589' AND avaliable = true AND finished <> true
04.11 03:35:23 TIMER: Check tournament: 3ms
04.11 03:37:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:37:08 STATS: cache [battle], get [9 calls, 7 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 03:37:08 STATS: cache [battle], segments [13 calls, 11 hits, 1 misses]
04.11 03:37:08 STATS: cache [battle], database [466 calls, 1 reads, 2 writes]
04.11 03:37:08 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
04.11 03:37:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:37:08 TIME: vdl/cache.battle.infoRoom : 0.46 ms
04.11 03:37:08 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 48, _type => vdl/cache.battle.makeTurn }
04.11 03:37:08 CACHE: cache block locked: battle.48
04.11 03:37:08 TRACE: vdl/cache.battle.makeTurn : Invalid field access : get
04.11 03:37:08 TRACE: vdl/cache.battle.makeTurn : 
Called from modules/VDLCache.hx line 1010
Called from modules/VDLCache.hx line 868
Called from modules/VDLCache.hx line 113
Called from snipe/cache/CacheServer.hx line 487
04.11 03:37:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => _requestException, _type => vdl/cache.battle.makeTurn }
04.11 03:37:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:37:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:37:18 TIME: vdl/cache.battle.infoRoom : 0.11 ms
04.11 03:37:23 TIMER: Clans cache...
04.11 03:37:23 TIMER: Clans cache: 0ms
04.11 03:37:23 TIMER: Check tournament...
04.11 03:37:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:37' OR rounddate = '2016-04-11 03:37' AND status <> 'finished'
04.11 03:37:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.84345818' AND avaliable = true AND finished <> true
04.11 03:37:23 TIMER: Check tournament: 2ms
04.11 03:37:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:37:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:37:29 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:37:29 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 48 }
04.11 03:37:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:37:29 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 03:38:23 TIMER: Clans cache...
04.11 03:38:23 TIMER: Clans cache: 0ms
04.11 03:38:23 TIMER: Check tournament...
04.11 03:38:23 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:38' OR rounddate = '2016-04-11 03:38' AND status <> 'finished'
04.11 03:38:23 DB: SELECT * FROM battle WHERE endtime >= '1478219.9034686' AND avaliable = true AND finished <> true
04.11 03:38:23 TIMER: Check tournament: 1ms
04.11 03:38:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 48, _type => vdl/cache.battle.infoRoom }
04.11 03:38:27 STATS: cache [battle], get [12 calls, 10 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 03:38:27 STATS: cache [battle], segments [17 calls, 15 hits, 1 misses]
04.11 03:38:27 STATS: cache [battle], database [544 calls, 1 reads, 2 writes]
04.11 03:38:27 STATS: cache [battle], lock [2 calls, 2 attempts, 1 failures]
04.11 03:38:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:38:27 TIME: vdl/cache.battle.infoRoom : 0.45 ms
04.11 03:39:54 TIMER: Starting timer...
04.11 03:39:54 DB: SELECT * FROM GameVars
04.11 03:39:54 TIMER: Timer running...
04.11 03:39:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:39:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:39:54 DB: SELECT * FROM Shops WHERE ID = 1
04.11 03:39:54 TEMP: load ./tmp/quest_daily_ids
04.11 03:39:54 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 03:39:54 TEMP: save ./tmp/quest_daily_ids
04.11 03:39:54 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:39:54 QUEUE: vdl.0 (thread) response server.login
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:39:54 DB: SELECT * FROM LocalizationStrings
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:39:54 TIME: core/server.query : 28.04 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:39:54 DB: SELECT * FROM GameVars
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:39:54 TIME: core/server.query : 1.3 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:39:54 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:39:54 TIME: core/server.query : 1.51 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:39:54 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:39:54 TIME: core/server.query : 1.08 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:39:54 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:39:54 TIME: core/server.query : 1.5 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:39:54 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:39:54 TIME: core/server.query : 2.56 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 03:39:54 TIME: core/quest.getDaily : 0.05 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:39:54 DB: SELECT * FROM UserAttributeTypes
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:39:54 TIME: core/server.query : 1.11 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:39:54 DB: SELECT * FROM UserVariableTypes
04.11 03:39:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:39:54 TIME: core/server.query : 1.03 ms
04.11 03:39:54 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:39:54 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.04.11 03:41:15 TIMER: Starting timer...
04.11 03:41:15 DB: SELECT * FROM GameVars
04.11 03:41:15 TIMER: Timer running...
04.11 03:41:15 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:41:15 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:41:15 DB: SELECT * FROM Shops WHERE ID = 1
04.11 03:41:15 TEMP: load ./tmp/quest_daily_ids
04.11 03:41:15 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 03:41:15 TEMP: save ./tmp/quest_daily_ids
04.11 03:41:15 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:41:15 QUEUE: vdl.0 (thread) response server.login
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM LocalizationStrings
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 18.26 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM GameVars
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.25 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.81 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.16 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.49 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.64 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 03:41:15 TIME: core/quest.getDaily : 0.04 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM UserAttributeTypes
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 0.91 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM UserVariableTypes
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 0.91 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:41:15 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 2.58 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM ItemGroups
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 0.77 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.31 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.28 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 03:41:15 TIME: core/shop.getList : 0.07 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM EffectAttributeTypes
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.32 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM Effects
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.18 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:41:15 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 5.03 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:41:15 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 2.06 ms
04.11 03:41:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:41:15 DB: SELECT * FROM Badges
04.11 03:41:15 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:15 TIME: core/server.query : 1.08 ms
04.11 03:41:54 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:41:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:41:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:41:54 TIME: core/server.query : 2.49 ms
04.11 03:41:54 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:41:54 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 03:41:54 TIME: core/user.isOnlineID : 0.08 ms
04.11 03:41:54 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:41:54 READDB: SELECT * FROM Users WHERE ID = 107
04.11 03:41:54 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:41:54 TIME: core/cache.get : 4.31 ms
04.11 03:41:54 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:41:54 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 03:41:54 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:41:54 TIME: core/cache.get : 1.45 ms
04.11 03:41:54 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:41:54 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:41:54 TIME: core/user.loginPost : 0.11 ms
04.11 03:42:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:42:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:42:00 TIME: core/cache.update : 0.19 ms
04.11 03:42:01 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:42:15 TIMER: Clans cache...
04.11 03:42:15 TIMER: Clans cache: 0ms
04.11 03:42:15 TIMER: Check tournament...
04.11 03:42:15 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:42' OR rounddate = '2016-04-11 03:42' AND status <> 'finished'
04.11 03:42:15 DB: SELECT * FROM battle WHERE endtime >= '1478220.13554109' AND avaliable = true AND finished <> true
04.11 03:42:15 TIMER: Check tournament: 3ms
04.11 03:42:22 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:42:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:42:22 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:42:22 TIME: core/server.query : 2.5 ms
04.11 03:42:22 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:42:22 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:42:22 TIME: core/user.isOnlineID : 5.98 ms
04.11 03:42:22 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:42:22 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 03:42:22 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
04.11 03:42:22 STATS: cache [user], database [68 calls, 1 reads, 1 writes]
04.11 03:42:22 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 03:42:22 READDB: SELECT * FROM Users WHERE ID = 116
04.11 03:42:22 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.43 ms]
04.11 03:42:22 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.06 ms]
04.11 03:42:22 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:42:22 TIME: core/cache.get : 2.71 ms
04.11 03:42:22 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:42:22 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 03:42:22 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
04.11 03:42:22 STATS: cache [questdata], database [68 calls, 1 reads, 0 writes]
04.11 03:42:22 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 03:42:22 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 03:42:22 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:42:22 TIME: core/cache.get : 4.89 ms
04.11 03:42:22 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:42:22 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:42:22 TIME: core/user.loginPost : 0.56 ms
04.11 03:42:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:42:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:42:30 TIME: core/cache.update : 0.13 ms
04.11 03:42:31 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 03:43:15 TIMER: Clans cache...
04.11 03:43:15 TIMER: Clans cache: 0ms
04.11 03:43:15 TIMER: Check tournament...
04.11 03:43:15 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:43' OR rounddate = '2016-04-11 03:43' AND status <> 'finished'
04.11 03:43:15 DB: SELECT * FROM battle WHERE endtime >= '1478220.19555805' AND avaliable = true AND finished <> true
04.11 03:43:15 TIMER: Check tournament: 3ms
04.11 03:43:15 TIMER: Clans cache...
04.11 03:43:15 TIMER: Clans cache: 0ms
04.11 03:43:15 TIMER: Check tournament...
04.11 03:43:15 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:44' OR rounddate = '2016-04-11 03:44' AND status <> 'finished'
04.11 03:43:15 DB: SELECT * FROM battle WHERE endtime >= '1478220.25557013' AND avaliable = true AND finished <> true
04.11 03:43:15 TIMER: Check tournament: 3ms
04.11 03:44:57 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:44:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:44:57 TIME: vdl/cache.battle.findRandom : 0.16 ms
04.11 03:45:00 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:45:00 DB: SELECT nextval('Battle_id_seq') AS id
04.11 03:45:00 READDB: SELECT ID FROM Battle WHERE ID = 49
04.11 03:45:00 READDB: INSERT INTO Battle (ID) VALUES (49)
04.11 03:45:00 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:45:00 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 03:45:00 STATS: cache [battle], database [225 calls, 0 reads, 0 writes]
04.11 03:45:00 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:45:00 READDB: SELECT * FROM Battle WHERE ID = 49
04.11 03:45:00 DB: SELECT name FROM users WHERE id=107
04.11 03:45:00 DB: SELECT name FROM users WHERE id=116
04.11 03:45:00 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 49, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:45:00 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 49, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:45:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:45:00 TIME: vdl/cache.battle.findRandom : 43.56 ms
04.11 03:45:05 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481820.30057773', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 49
04.11 03:45:07 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:07 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:45:15 TIMER: Clans cache...
04.11 03:45:15 TIMER: Clans cache: 0ms
04.11 03:45:15 TIMER: Check tournament...
04.11 03:45:15 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:45' OR rounddate = '2016-04-11 03:45' AND status <> 'finished'
04.11 03:45:15 DB: SELECT * FROM battle WHERE endtime >= '1478220.31558423' AND avaliable = true AND finished <> true
04.11 03:45:15 TIMER: Check tournament: 3ms
04.11 03:45:17 BLOCKREMOVE: battle 49 removed
04.11 03:45:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:18 READDB: SELECT * FROM Battle WHERE ID = 49
04.11 03:45:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:18 TIME: vdl/cache.battle.infoRoom : 1.24 ms
04.11 03:45:18 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 49 }
04.11 03:45:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:45:18 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:45:28 BLOCKREMOVE: battle 49 removed
04.11 03:45:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:39 READDB: SELECT * FROM Battle WHERE ID = 49
04.11 03:45:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:39 TIME: vdl/cache.battle.infoRoom : 1.28 ms
04.11 03:45:39 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 49 }
04.11 03:45:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:45:39 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 03:45:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:40 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:45:40 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 49 }
04.11 03:45:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:45:40 TIME: vdl/cache.battle.setScores : 0.11 ms
04.11 03:45:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:45:43 TIME: vdl/cache.battle.infoRoom : 0.13 ms
04.11 03:45:43 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 49, _type => vdl/cache.battle.makeTurn }
04.11 03:45:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:45:43 TIME: vdl/cache.battle.makeTurn : 0.16 ms
04.11 03:45:44 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'116', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 49
04.11 03:45:49 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:45:49 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:45:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:45:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:45:57 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:46:07 BLOCKREMOVE: battle 49 removed
04.11 03:46:15 TIMER: Clans cache...
04.11 03:46:15 TIMER: Clans cache: 0ms
04.11 03:46:15 TIMER: Check tournament...
04.11 03:46:15 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:46' OR rounddate = '2016-04-11 03:46' AND status <> 'finished'
04.11 03:46:15 DB: SELECT * FROM battle WHERE endtime >= '1478220.37559607' AND avaliable = true AND finished <> true
04.11 03:46:15 TIMER: Check tournament: 2ms
04.11 03:46:15 TIMER: Clans cache...
04.11 03:46:15 TIMER: Clans cache: 0ms
04.11 03:46:15 TIMER: Check tournament...
04.11 03:46:15 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:47' OR rounddate = '2016-04-11 03:47' AND status <> 'finished'
04.11 03:46:15 DB: SELECT * FROM battle WHERE endtime >= '1478220.43561333' AND avaliable = true AND finished <> true
04.11 03:46:15 TIMER: Check tournament: 3ms
04.11 03:47:49 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 49, _type => vdl/cache.battle.infoRoom }
04.11 03:47:49 STATS: cache [battle], get [10 calls, 6 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 03:47:49 STATS: cache [battle], segments [13 calls, 9 hits, 3 misses]
04.11 03:47:49 STATS: cache [battle], database [394 calls, 3 reads, 2 writes]
04.11 03:47:49 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:47:49 READDB: SELECT * FROM Battle WHERE ID = 49
04.11 03:47:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:47:49 TIME: vdl/cache.battle.infoRoom : 2.02 ms
04.11 03:47:49 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 49, _type => vdl/cache.battle.makeTurn }
04.11 03:47:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:47:49 TIME: vdl/cache.battle.makeTurn : 0.16 ms
04.11 03:47:54 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 49
04.11 03:48:04 BLOCKREMOVE: battle 49 removed
04.11 03:48:15 TIMER: Clans cache...
04.11 03:48:15 TIMER: Clans cache: 0ms
04.11 03:48:15 TIMER: Check tournament...
04.11 03:48:15 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:48' OR rounddate = '2016-04-11 03:48' AND status <> 'finished'
04.11 03:48:15 DB: SELECT * FROM battle WHERE endtime >= '1478220.49562465' AND avaliable = true AND finished <> true
04.11 03:48:15 TIMER: Check tournament: 1ms
04.11 03:48:15 TIMER: Clans cache...
04.11 03:48:15 TIMER: Clans cache: 0ms
04.11 03:48:15 TIMER: Check tournament...
04.11 03:48:15 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:49' OR rounddate = '2016-04-11 03:49' AND status <> 'finished'
04.11 03:48:15 DB: SELECT * FROM battle WHERE endtime >= '1478220.55563555' AND avaliable = true AND finished <> true
04.11 03:48:15 TIMER: Check tournament: 1ms
04.11 03:50:04 TIMER: Starting timer...
04.11 03:50:04 DB: SELECT * FROM GameVars
04.11 03:50:04 TIMER: Timer running...
04.11 03:50:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:50:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:50:04 DB: SELECT * FROM Shops WHERE ID = 1
04.11 03:50:04 TEMP: load ./tmp/quest_daily_ids
04.11 03:50:04 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 03:50:04 TEMP: save ./tmp/quest_daily_ids
04.11 03:50:04 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 03:50:04 QUEUE: vdl.0 (thread) response server.login
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM LocalizationStrings
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 28.63 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM GameVars
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.27 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.75 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.19 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.52 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 2.58 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 03:50:04 TIME: core/quest.getDaily : 0.04 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM UserAttributeTypes
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.77 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM UserVariableTypes
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.09 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 03:50:04 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 3.51 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM ItemGroups
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.12 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM Bundles ORDER BY ID
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.56 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.46 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 03:50:04 TIME: core/shop.getList : 0.11 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM EffectAttributeTypes
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.12 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM Effects
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.1 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 03:50:04 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 2.22 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 03:50:04 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.93 ms
04.11 03:50:04 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 03:50:04 DB: SELECT * FROM Badges
04.11 03:50:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:50:04 TIME: core/server.query : 1.69 ms
04.11 03:50:04 TIMER: Clans cache...
04.11 03:50:04 TIMER: Clans cache: 0ms
04.11 03:50:04 TIMER: Check tournament...
04.11 03:50:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:51' OR rounddate = '2016-04-11 03:51' AND status <> 'finished'
04.11 03:50:04 DB: SELECT * FROM battle WHERE endtime >= '1478220.66463007' AND avaliable = true AND finished <> true
04.11 03:50:04 TIMER: Check tournament: 3ms
04.11 03:51:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 03:51:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 03:51:53 QUEUE: vdl.0 (thread) response core/server.query
04.11 03:51:53 TIME: core/server.query : 2.46 ms
04.11 03:51:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 03:51:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 03:51:53 TIME: core/user.isOnlineID : 0.12 ms
04.11 03:51:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 03:51:53 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:51:53 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 03:51:53 STATS: cache [user], database [110 calls, 0 reads, 0 writes]
04.11 03:51:53 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 03:51:53 READDB: SELECT * FROM Users WHERE ID = 107
04.11 03:51:53 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.92 ms]
04.11 03:51:53 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 03:51:53 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:51:53 TIME: core/cache.get : 5.16 ms
04.11 03:51:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 03:51:53 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:51:53 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 03:51:53 STATS: cache [questdata], database [110 calls, 0 reads, 0 writes]
04.11 03:51:53 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 03:51:53 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 03:51:53 QUEUE: vdl.0 (thread) response core/cache.get
04.11 03:51:53 TIME: core/cache.get : 4.58 ms
04.11 03:51:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 03:51:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:51:53 TIME: core/user.loginPost : 0.12 ms
04.11 03:51:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 03:51:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:51:59 TIME: core/cache.update : 0.18 ms
04.11 03:52:00 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 03:52:04 TIMER: Clans cache...
04.11 03:52:04 TIMER: Clans cache: 0ms
04.11 03:52:04 TIMER: Check tournament...
04.11 03:52:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:52' OR rounddate = '2016-04-11 03:52' AND status <> 'finished'
04.11 03:52:04 DB: SELECT * FROM battle WHERE endtime >= '1478220.72464528' AND avaliable = true AND finished <> true
04.11 03:52:04 TIMER: Check tournament: 4ms
04.11 03:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 03:52:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 03:52:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 03:52:10 TIME: core/server.query : 2.16 ms
04.11 03:52:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 03:52:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 03:52:10 TIME: core/user.isOnlineID : 0.08 ms
04.11 03:52:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 03:52:10 READDB: SELECT * FROM Users WHERE ID = 116
04.11 03:52:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 03:52:10 TIME: core/cache.get : 1.42 ms
04.11 03:52:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 03:52:10 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 03:52:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 03:52:10 TIME: core/cache.get : 1.01 ms
04.11 03:52:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 03:52:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 03:52:10 TIME: core/user.loginPost : 0.09 ms
04.11 03:52:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 03:52:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 03:52:19 TIME: core/cache.update : 0.19 ms
04.11 03:52:20 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 03:52:22 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:52:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:52:22 TIME: vdl/cache.battle.findRandom : 0.16 ms
04.11 03:52:22 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 03:52:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:52:22 TIME: vdl/cache.battle.findRandom : 0.1 ms
04.11 03:53:03 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 03:53:03 DB: SELECT nextval('Battle_id_seq') AS id
04.11 03:53:03 READDB: SELECT ID FROM Battle WHERE ID = 50
04.11 03:53:03 READDB: INSERT INTO Battle (ID) VALUES (50)
04.11 03:53:03 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 03:53:03 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 03:53:03 STATS: cache [battle], database [179 calls, 0 reads, 0 writes]
04.11 03:53:03 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:53:03 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:53:03 DB: SELECT name FROM users WHERE id=107
04.11 03:53:03 DB: SELECT name FROM users WHERE id=116
04.11 03:53:03 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 50, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 03:53:03 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 50, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 03:53:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 03:53:03 TIME: vdl/cache.battle.findRandom : 41.05 ms
04.11 03:53:04 TIMER: Clans cache...
04.11 03:53:04 TIMER: Clans cache: 0ms
04.11 03:53:04 TIMER: Check tournament...
04.11 03:53:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:53' OR rounddate = '2016-04-11 03:53' AND status <> 'finished'
04.11 03:53:04 DB: SELECT * FROM battle WHERE endtime >= '1478220.78465862' AND avaliable = true AND finished <> true
04.11 03:53:04 TIMER: Check tournament: 4ms
04.11 03:53:08 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481820.78350287', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:53:18 BLOCKREMOVE: battle 50 removed
04.11 03:53:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:25 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:53:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:53:25 TIME: vdl/cache.battle.infoRoom : 1.78 ms
04.11 03:53:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:53:31 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:53:31 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:53:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:53:31 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:53:32 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:53:32 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:53:32 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:53:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:53:32 TIME: vdl/cache.battle.makeTurn : 0.16 ms
04.11 03:53:33 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'116', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:53:37 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:53:37 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:53:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:53:44 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:53:44 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:53:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:53:44 TIME: vdl/cache.battle.setScores : 0.11 ms
04.11 03:53:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:53:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:53:53 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:53:53 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:53:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:53:53 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:54:01 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:01 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:54:01 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:01 TIME: vdl/cache.battle.setScores : 0.11 ms
04.11 03:54:04 TIMER: Clans cache...
04.11 03:54:04 TIMER: Clans cache: 0ms
04.11 03:54:04 TIMER: Check tournament...
04.11 03:54:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:54' OR rounddate = '2016-04-11 03:54' AND status <> 'finished'
04.11 03:54:04 DB: SELECT * FROM battle WHERE endtime >= '1478220.84467507' AND avaliable = true AND finished <> true
04.11 03:54:04 TIMER: Check tournament: 1ms
04.11 03:54:07 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:07 STATS: cache [battle], get [10 calls, 7 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 03:54:07 STATS: cache [battle], segments [13 calls, 10 hits, 2 misses]
04.11 03:54:07 STATS: cache [battle], database [243 calls, 2 reads, 2 writes]
04.11 03:54:07 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:54:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:07 TIME: vdl/cache.battle.infoRoom : 0.28 ms
04.11 03:54:07 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:07 TIME: vdl/cache.battle.setScores : 0.1 ms
04.11 03:54:13 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:13 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:54:13 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:13 TIME: vdl/cache.battle.setScores : 0.11 ms
04.11 03:54:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:15 TIME: vdl/cache.battle.infoRoom : 0.12 ms
04.11 03:54:15 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:15 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:54:21 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:21 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:54:21 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:54:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:54:21 TIME: vdl/cache.battle.makeTurn : 0.15 ms
04.11 03:54:21 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:54:24 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:24 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:54:35 BLOCKREMOVE: battle 50 removed
04.11 03:54:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:40 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:54:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:40 TIME: vdl/cache.battle.infoRoom : 1.26 ms
04.11 03:54:40 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [1,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:40 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:54:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:42 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:54:42 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:42 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:54:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:43 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:54:43 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:43 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:54:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:45 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 03:54:45 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:54:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:54:45 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 03:54:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:54:50 TIME: vdl/cache.battle.infoRoom : 0.14 ms
04.11 03:54:50 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:54:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:54:50 TIME: vdl/cache.battle.makeTurn : 0.15 ms
04.11 03:54:50 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'116', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:54:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:54:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:54:56 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:55:04 TIMER: Clans cache...
04.11 03:55:04 TIMER: Clans cache: 0ms
04.11 03:55:04 TIMER: Check tournament...
04.11 03:55:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:55' OR rounddate = '2016-04-11 03:55' AND status <> 'finished'
04.11 03:55:04 DB: SELECT * FROM battle WHERE endtime >= '1478220.90468874' AND avaliable = true AND finished <> true
04.11 03:55:04 TIMER: Check tournament: 1ms
04.11 03:55:06 BLOCKREMOVE: battle 50 removed
04.11 03:55:09 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:09 STATS: cache [battle], get [23 calls, 19 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 03:55:09 STATS: cache [battle], segments [28 calls, 24 hits, 3 misses]
04.11 03:55:09 STATS: cache [battle], database [305 calls, 3 reads, 4 writes]
04.11 03:55:09 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:55:09 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:55:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:09 TIME: vdl/cache.battle.infoRoom : 1.42 ms
04.11 03:55:09 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:09 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:55:19 BLOCKREMOVE: battle 50 removed
04.11 03:55:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:27 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:55:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:27 TIME: vdl/cache.battle.infoRoom : 1.28 ms
04.11 03:55:27 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:27 TIME: vdl/cache.battle.setScores : 0.21 ms
04.11 03:55:35 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:35 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:55:35 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [2,1], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:35 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:55:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:36 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:55:36 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [2,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:36 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:55:47 BLOCKREMOVE: battle 50 removed
04.11 03:55:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:55:56 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:55:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:55:56 TIME: vdl/cache.battle.infoRoom : 1.15 ms
04.11 03:55:56 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [2,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:55:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:55:56 TIME: vdl/cache.battle.setScores : 0.18 ms
04.11 03:56:04 TIMER: Clans cache...
04.11 03:56:04 TIMER: Clans cache: 0ms
04.11 03:56:04 TIMER: Check tournament...
04.11 03:56:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:56' OR rounddate = '2016-04-11 03:56' AND status <> 'finished'
04.11 03:56:04 DB: SELECT * FROM battle WHERE endtime >= '1478220.96470179' AND avaliable = true AND finished <> true
04.11 03:56:04 TIMER: Check tournament: 1ms
04.11 03:56:07 BLOCKREMOVE: battle 50 removed
04.11 03:56:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:56:54 STATS: cache [battle], get [28 calls, 21 cache hits, 6 cache misses, 0 same version, 0 not found]
04.11 03:56:54 STATS: cache [battle], segments [33 calls, 26 hits, 6 misses]
04.11 03:56:54 STATS: cache [battle], database [410 calls, 6 reads, 4 writes]
04.11 03:56:54 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:56:54 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:56:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:56:54 TIME: vdl/cache.battle.infoRoom : 1.63 ms
04.11 03:56:54 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:56:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:56:54 TIME: vdl/cache.battle.makeTurn : 0.13 ms
04.11 03:56:59 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:57:01 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:01 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:57:04 TIMER: Clans cache...
04.11 03:57:04 TIMER: Clans cache: 0ms
04.11 03:57:04 TIMER: Check tournament...
04.11 03:57:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:57' OR rounddate = '2016-04-11 03:57' AND status <> 'finished'
04.11 03:57:04 DB: SELECT * FROM battle WHERE endtime >= '1478221.02471937' AND avaliable = true AND finished <> true
04.11 03:57:04 TIMER: Check tournament: 2ms
04.11 03:57:12 BLOCKREMOVE: battle 50 removed
04.11 03:57:28 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:28 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:57:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:28 TIME: vdl/cache.battle.infoRoom : 1.2 ms
04.11 03:57:28 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:28 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:57:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:31 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 03:57:31 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:31 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:57:34 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:34 TIME: vdl/cache.battle.infoRoom : 0.12 ms
04.11 03:57:34 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:34 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:57:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:43 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:57:43 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:43 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:57:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:45 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:57:45 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:45 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:57:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:57:48 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:57:48 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:57:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:57:48 TIME: vdl/cache.battle.makeTurn : 0.18 ms
04.11 03:57:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'116', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:57:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:57:52 TIME: vdl/cache.battle.infoRoom : 0.06 ms
04.11 03:57:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:57:59 STATS: cache [battle], get [39 calls, 30 cache hits, 8 cache misses, 0 same version, 0 not found]
04.11 03:57:59 STATS: cache [battle], segments [46 calls, 37 hits, 8 misses]
04.11 03:57:59 STATS: cache [battle], database [475 calls, 8 reads, 6 writes]
04.11 03:57:59 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:57:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:57:59 TIME: vdl/cache.battle.infoRoom : 0.29 ms
04.11 03:57:59 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:57:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:57:59 TIME: vdl/cache.battle.setScores : 0.11 ms
04.11 03:58:04 TIMER: Clans cache...
04.11 03:58:04 TIMER: Clans cache: 0ms
04.11 03:58:04 TIMER: Check tournament...
04.11 03:58:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:58' OR rounddate = '2016-04-11 03:58' AND status <> 'finished'
04.11 03:58:04 DB: SELECT * FROM battle WHERE endtime >= '1478221.08473335' AND avaliable = true AND finished <> true
04.11 03:58:04 TIMER: Check tournament: 1ms
04.11 03:58:09 BLOCKREMOVE: battle 50 removed
04.11 03:58:11 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:11 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:58:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:11 TIME: vdl/cache.battle.infoRoom : 1.32 ms
04.11 03:58:11 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:11 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:58:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:18 TIME: vdl/cache.battle.infoRoom : 0.12 ms
04.11 03:58:18 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:58:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:58:18 TIME: vdl/cache.battle.makeTurn : 0.11 ms
04.11 03:58:18 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:58:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:22 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:58:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:25 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:58:25 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:25 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 03:58:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:27 TIME: vdl/cache.battle.infoRoom : 0.11 ms
04.11 03:58:27 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:27 TIME: vdl/cache.battle.setScores : 0.15 ms
04.11 03:58:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:29 TIME: vdl/cache.battle.infoRoom : 0.14 ms
04.11 03:58:29 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:29 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:58:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:33 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:58:33 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:33 TIME: vdl/cache.battle.setScores : 0.13 ms
04.11 03:58:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:41 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:58:41 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:41 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:58:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:58:42 TIME: vdl/cache.battle.infoRoom : 0.18 ms
04.11 03:58:42 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:58:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:58:42 TIME: vdl/cache.battle.makeTurn : 0.16 ms
04.11 03:58:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'116', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:58:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:45 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:58:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:50 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:58:50 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [3,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:50 TIME: vdl/cache.battle.setScores : 0.11 ms
04.11 03:58:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:58:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:58:58 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:58:58 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [4,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:58:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:58:58 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 03:59:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:00 STATS: cache [battle], get [54 calls, 44 cache hits, 9 cache misses, 0 same version, 0 not found]
04.11 03:59:00 STATS: cache [battle], segments [63 calls, 53 hits, 9 misses]
04.11 03:59:00 STATS: cache [battle], database [536 calls, 9 reads, 8 writes]
04.11 03:59:00 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 03:59:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:59:00 TIME: vdl/cache.battle.infoRoom : 0.34 ms
04.11 03:59:00 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [5,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:59:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:59:00 TIME: vdl/cache.battle.setScores : 0.18 ms
04.11 03:59:04 TIMER: Clans cache...
04.11 03:59:04 TIMER: Clans cache: 0ms
04.11 03:59:04 TIMER: Check tournament...
04.11 03:59:04 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 03:59' OR rounddate = '2016-04-11 03:59' AND status <> 'finished'
04.11 03:59:04 DB: SELECT * FROM battle WHERE endtime >= '1478221.14474607' AND avaliable = true AND finished <> true
04.11 03:59:04 TIMER: Check tournament: 1ms
04.11 03:59:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:59:06 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 03:59:06 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [5,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:59:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:59:06 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 03:59:11 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 03:59:11 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 03:59:11 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 50, _type => vdl/cache.battle.makeTurn }
04.11 03:59:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 107 }
04.11 03:59:11 TIME: vdl/cache.battle.makeTurn : 0.16 ms
04.11 03:59:11 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 50
04.11 03:59:21 BLOCKREMOVE: battle 50 removed
04.11 03:59:23 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:23 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:59:23 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:59:23 TIME: vdl/cache.battle.infoRoom : 1.27 ms
04.11 03:59:33 BLOCKREMOVE: battle 50 removed
04.11 03:59:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
04.11 03:59:52 READDB: SELECT * FROM Battle WHERE ID = 50
04.11 03:59:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 03:59:52 TIME: vdl/cache.battle.infoRoom : 1.09 ms
04.11 03:59:52 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [5,2], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 50 }
04.11 03:59:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 03:59:52 TIME: vdl/cache.battle.setScores : 0.19 ms
