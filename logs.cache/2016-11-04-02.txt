04.11 02:03:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 02:03:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 02:03:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:03:06 TIME: core/server.query : 1.87 ms
04.11 02:03:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 02:03:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 02:03:06 TIME: core/user.isOnlineID : 0.08 ms
04.11 02:03:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 02:03:06 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:03:06 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 02:03:06 STATS: cache [user], database [239 calls, 0 reads, 0 writes]
04.11 02:03:06 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 02:03:06 READDB: SELECT * FROM Users WHERE ID = 107
04.11 02:03:06 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.81 ms]
04.11 02:03:06 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 02:03:06 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:03:06 TIME: core/cache.get : 4.08 ms
04.11 02:03:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 02:03:06 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:03:06 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 02:03:06 STATS: cache [questdata], database [239 calls, 0 reads, 0 writes]
04.11 02:03:06 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 02:03:06 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 02:03:06 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:03:06 TIME: core/cache.get : 1.73 ms
04.11 02:03:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 02:03:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:03:06 TIME: core/user.loginPost : 0.14 ms
04.11 02:03:08 TIMER: Clans cache...
04.11 02:03:08 TIMER: Clans cache: 0ms
04.11 02:03:08 TIMER: Check tournament...
04.11 02:03:08 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:03' OR rounddate = '2016-04-11 02:03' AND status <> 'finished'
04.11 02:03:08 DB: SELECT * FROM battle WHERE endtime >= '1478214.18828282' AND avaliable = true AND finished <> true
04.11 02:03:08 TIMER: Check tournament: 4ms
04.11 02:03:13 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 02:03:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:03:13 TIME: core/cache.update : 0.19 ms
04.11 02:03:14 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 02:03:35 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 02:03:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 02:03:35 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 02:03:35 TIME: core/server.query : 2.76 ms
04.11 02:03:35 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 02:03:35 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 02:03:35 TIME: core/user.isOnlineID : 0.13 ms
04.11 02:03:35 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 02:03:35 READDB: SELECT * FROM Users WHERE ID = 116
04.11 02:03:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 02:03:35 TIME: core/cache.get : 1.88 ms
04.11 02:03:35 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 02:03:35 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 02:03:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 02:03:35 TIME: core/cache.get : 1.22 ms
04.11 02:03:35 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 02:03:35 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:03:35 TIME: core/user.loginPost : 0.14 ms
04.11 02:03:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 02:03:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:03:43 TIME: core/cache.update : 0.18 ms
04.11 02:03:44 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 02:03:49 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 02:03:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:03:49 TIME: vdl/cache.battle.findRandom : 0.16 ms
04.11 02:03:54 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 02:03:54 DB: SELECT nextval('Battle_id_seq') AS id
04.11 02:03:54 READDB: SELECT ID FROM Battle WHERE ID = 40
04.11 02:03:54 READDB: INSERT INTO Battle (ID) VALUES (40)
04.11 02:03:54 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:03:54 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 02:03:54 STATS: cache [battle], database [286 calls, 0 reads, 0 writes]
04.11 02:03:54 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:03:54 READDB: SELECT * FROM Battle WHERE ID = 40
04.11 02:03:54 DB: SELECT name FROM users WHERE id=107
04.11 02:03:54 DB: SELECT name FROM users WHERE id=116
04.11 02:03:54 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 40, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 02:03:54 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 40, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 02:03:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:03:54 TIME: vdl/cache.battle.findRandom : 40.35 ms
04.11 02:03:59 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481814.2343067', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 40
04.11 02:04:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 40, _type => vdl/cache.battle.infoRoom }
04.11 02:04:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:04:02 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 02:04:07 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 40, _type => vdl/cache.battle.infoRoom }
04.11 02:04:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:04:07 TIME: vdl/cache.battle.infoRoom : 0.19 ms
04.11 02:04:07 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 40 }
04.11 02:04:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 02:04:07 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 02:04:08 TIMER: Clans cache...
04.11 02:04:08 TIMER: Clans cache: 0ms
04.11 02:04:08 TIMER: Check tournament...
04.11 02:04:08 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:04' OR rounddate = '2016-04-11 02:04' AND status <> 'finished'
04.11 02:04:08 DB: SELECT * FROM battle WHERE endtime >= '1478214.2483' AND avaliable = true AND finished <> true
04.11 02:04:08 TIMER: Check tournament: 3ms
04.11 02:04:18 BLOCKREMOVE: battle 40 removed
04.11 02:04:28 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 40, _type => vdl/cache.battle.infoRoom }
04.11 02:04:28 READDB: SELECT * FROM Battle WHERE ID = 40
04.11 02:04:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:04:28 TIME: vdl/cache.battle.infoRoom : 1.17 ms
04.11 02:04:39 BLOCKREMOVE: battle 40 removed
04.11 02:04:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 40, _type => vdl/cache.battle.infoRoom }
04.11 02:04:43 READDB: SELECT * FROM Battle WHERE ID = 40
04.11 02:04:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:04:43 TIME: vdl/cache.battle.infoRoom : 1.33 ms
04.11 02:04:54 BLOCKREMOVE: battle 40 removed
04.11 02:06:06 TIMER: Starting timer...
04.11 02:06:06 TIMER: Timer running...
04.11 02:06:06 DB: SELECT * FROM GameVars
04.11 02:06:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:06:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:06:06 DB: SELECT * FROM Shops WHERE ID = 1
04.11 02:06:06 TEMP: load ./tmp/quest_daily_ids
04.11 02:06:06 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 02:06:06 TEMP: save ./tmp/quest_daily_ids
04.11 02:06:06 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 02:06:06 QUEUE: vdl.0 (thread) response server.login
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM LocalizationStrings
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 17.79 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM GameVars
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.56 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.92 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.21 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 2.23 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 2.82 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 02:06:06 TIME: core/quest.getDaily : 0.08 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM UserAttributeTypes
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 2.1 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM UserVariableTypes
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.18 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 02:06:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 2.4 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM ItemGroups
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.17 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM Bundles ORDER BY ID
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 5.26 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 2.24 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 02:06:06 TIME: core/shop.getList : 0.06 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM EffectAttributeTypes
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.14 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM Effects
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.04 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 02:06:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.44 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 02:06:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.84 ms
04.11 02:06:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 02:06:06 DB: SELECT * FROM Badges
04.11 02:06:06 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:06:06 TIME: core/server.query : 1.35 ms
04.11 02:06:06 TIMER: Clans cache...
04.11 02:06:06 TIMER: Clans cache: 0ms
04.11 02:06:06 TIMER: Check tournament...
04.11 02:06:06 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:07' OR rounddate = '2016-04-11 02:07' AND status <> 'finished'
04.11 02:06:06 DB: SELECT * FROM battle WHERE endtime >= '1478214.42656309' AND avaliable = true AND finished <> true
04.11 02:06:06 TIMER: Check tournament: 4ms
04.11 02:08:04 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 02:08:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 02:08:04 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:08:04 TIME: core/server.query : 3.14 ms
04.11 02:08:04 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 02:08:04 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 02:08:04 TIME: core/user.isOnlineID : 0.09 ms
04.11 02:08:04 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 02:08:04 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:08:04 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
04.11 02:08:04 STATS: cache [user], database [118 calls, 0 reads, 0 writes]
04.11 02:08:04 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 02:08:04 READDB: SELECT * FROM Users WHERE ID = 107
04.11 02:08:04 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.56 ms]
04.11 02:08:04 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 02:08:04 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:08:04 TIME: core/cache.get : 4.79 ms
04.11 02:08:04 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 02:08:04 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:08:04 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
04.11 02:08:04 STATS: cache [questdata], database [118 calls, 0 reads, 0 writes]
04.11 02:08:04 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
04.11 02:08:04 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 02:08:04 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:08:04 TIME: core/cache.get : 1.69 ms
04.11 02:08:04 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 02:08:04 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:08:04 TIME: core/user.loginPost : 0.12 ms
04.11 02:08:06 TIMER: Clans cache...
04.11 02:08:06 TIMER: Clans cache: 0ms
04.11 02:08:06 TIMER: Check tournament...
04.11 02:08:06 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:08' OR rounddate = '2016-04-11 02:08' AND status <> 'finished'
04.11 02:08:06 DB: SELECT * FROM battle WHERE endtime >= '1478214.48657897' AND avaliable = true AND finished <> true
04.11 02:08:06 TIMER: Check tournament: 3ms
04.11 02:08:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 02:08:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:08:11 TIME: core/cache.update : 0.18 ms
04.11 02:08:12 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 02:08:19 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 02:08:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 02:08:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 02:08:19 TIME: core/server.query : 2.73 ms
04.11 02:08:19 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 02:08:19 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 02:08:19 TIME: core/user.isOnlineID : 0.14 ms
04.11 02:08:19 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 02:08:19 READDB: SELECT * FROM Users WHERE ID = 116
04.11 02:08:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 02:08:19 TIME: core/cache.get : 1.61 ms
04.11 02:08:19 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 02:08:19 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 02:08:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 02:08:19 TIME: core/cache.get : 1.06 ms
04.11 02:08:19 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 02:08:19 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:08:19 TIME: core/user.loginPost : 0.13 ms
04.11 02:08:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 02:08:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:08:26 TIME: core/cache.update : 0.19 ms
04.11 02:08:27 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 02:08:30 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 02:08:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:08:30 TIME: vdl/cache.battle.findRandom : 0.14 ms
04.11 02:08:36 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 02:08:36 DB: SELECT nextval('Battle_id_seq') AS id
04.11 02:08:36 READDB: SELECT ID FROM Battle WHERE ID = 41
04.11 02:08:36 READDB: INSERT INTO Battle (ID) VALUES (41)
04.11 02:08:36 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:08:36 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 02:08:36 STATS: cache [battle], database [151 calls, 0 reads, 0 writes]
04.11 02:08:36 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:08:36 READDB: SELECT * FROM Battle WHERE ID = 41
04.11 02:08:36 DB: SELECT name FROM users WHERE id=116
04.11 02:08:36 DB: SELECT name FROM users WHERE id=107
04.11 02:08:36 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 41, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 02:08:36 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 41, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 02:08:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:08:36 TIME: vdl/cache.battle.findRandom : 118.19 ms
04.11 02:08:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481814.51670596', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 41
04.11 02:08:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 41, _type => vdl/cache.battle.infoRoom }
04.11 02:08:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:08:47 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 02:08:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 41, _type => vdl/cache.battle.infoRoom }
04.11 02:08:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:08:55 TIME: vdl/cache.battle.infoRoom : 0.12 ms
04.11 02:08:55 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 116, player2 => 107, battleId => 41 }
04.11 02:08:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 02:08:55 TIME: vdl/cache.battle.setScores : 0.11 ms
04.11 02:08:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 41, _type => vdl/cache.battle.infoRoom }
04.11 02:08:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:08:58 TIME: vdl/cache.battle.infoRoom : 0.18 ms
04.11 02:09:06 TIMER: Clans cache...
04.11 02:09:06 TIMER: Clans cache: 0ms
04.11 02:09:06 TIMER: Check tournament...
04.11 02:09:06 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:09' OR rounddate = '2016-04-11 02:09' AND status <> 'finished'
04.11 02:09:06 DB: SELECT * FROM battle WHERE endtime >= '1478214.54659082' AND avaliable = true AND finished <> true
04.11 02:09:06 TIMER: Check tournament: 2ms
04.11 02:09:08 BLOCKREMOVE: battle 41 removed
04.11 02:09:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 41, _type => vdl/cache.battle.infoRoom }
04.11 02:09:48 STATS: cache [battle], get [5 calls, 3 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 02:09:48 STATS: cache [battle], segments [7 calls, 5 hits, 1 misses]
04.11 02:09:48 STATS: cache [battle], database [223 calls, 1 reads, 1 writes]
04.11 02:09:48 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:09:48 READDB: SELECT * FROM Battle WHERE ID = 41
04.11 02:09:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:09:48 TIME: vdl/cache.battle.infoRoom : 1.26 ms
04.11 02:09:59 BLOCKREMOVE: battle 41 removed
04.11 02:10:06 TIMER: Clans cache...
04.11 02:10:06 TIMER: Clans cache: 0ms
04.11 02:10:06 TIMER: Check tournament...
04.11 02:10:06 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:10' OR rounddate = '2016-04-11 02:10' AND status <> 'finished'
04.11 02:10:06 DB: SELECT * FROM battle WHERE endtime >= '1478214.60660518' AND avaliable = true AND finished <> true
04.11 02:10:06 TIMER: Check tournament: 1ms
04.11 02:10:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 41, _type => vdl/cache.battle.infoRoom }
04.11 02:10:44 READDB: SELECT * FROM Battle WHERE ID = 41
04.11 02:10:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:10:44 TIME: vdl/cache.battle.infoRoom : 1 ms
04.11 02:10:44 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 41, _type => vdl/cache.battle.makeTurn }
04.11 02:10:44 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.03 ms]
04.11 02:10:44 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 02:10:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 02:10:44 TIME: vdl/cache.battle.makeTurn : 0.21 ms
04.11 02:10:49 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'false', endtime = E'1481810', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 41
04.11 02:11:06 TIMER: Clans cache...
04.11 02:11:06 TIMER: Clans cache: 0ms
04.11 02:11:06 TIMER: Check tournament...
04.11 02:11:06 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:11' OR rounddate = '2016-04-11 02:11' AND status <> 'finished'
04.11 02:11:06 DB: SELECT * FROM battle WHERE endtime >= '1478214.66661555' AND avaliable = true AND finished <> true
04.11 02:11:06 TIMER: Check tournament: 1ms
04.11 02:11:39 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 02:11:39 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 02:11:39 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 32 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 40 }, { id => 41 }}, errorCode => ok, _type => core/server.query }
04.11 02:11:39 TIME: core/server.query : 1.57 ms
04.11 02:11:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 41, _type => vdl/cache.battle.infoRoom }
04.11 02:11:39 STATS: cache [battle], get [8 calls, 4 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 02:11:39 STATS: cache [battle], segments [12 calls, 8 hits, 3 misses]
04.11 02:11:39 STATS: cache [battle], database [333 calls, 3 reads, 2 writes]
04.11 02:11:39 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
04.11 02:11:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:11:39 TIME: vdl/cache.battle.infoRoom : 0.26 ms
04.11 02:11:39 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 41, _type => vdl/cache.battle.deleteRoom }
04.11 02:11:39 ROOM: deleted room 41
04.11 02:11:39 DB: DELETE FROM Battle WHERE ID = 41
04.11 02:11:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 02:11:39 TIME: vdl/cache.battle.deleteRoom : 59.78 ms
04.11 02:11:39 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 41, _type => vdl/cache.battle.finishRoom }
04.11 02:11:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 02:11:39 TIME: vdl/cache.battle.finishRoom : 0.17 ms
04.11 02:11:39 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 02:11:39 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:11:39 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
04.11 02:11:39 STATS: cache [user], database [333 calls, 2 reads, 2 writes]
04.11 02:11:39 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 02:11:39 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.09 ms]
04.11 02:11:39 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.14 ms]
04.11 02:11:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 02:11:39 TIME: core/cache.update : 0.51 ms
04.11 02:11:39 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 02:11:39 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:11:39 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
04.11 02:11:39 STATS: cache [questdata], database [333 calls, 2 reads, 0 writes]
04.11 02:11:39 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 02:11:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:11:39 TIME: core/cache.update : 0.38 ms
04.11 02:11:39 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 02:11:39 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 02:11:39 TIME: core/user.logoutPost : 0.11 ms
04.11 02:11:39 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 02:11:39 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 02:11:39 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 41
04.11 02:11:49 BLOCKREMOVE: user 107 removed
04.11 02:11:49 BLOCKREMOVE: questdata 107 removed
04.11 02:11:49 BLOCKREMOVE: battle 41 removed
04.11 02:12:06 TIMER: Clans cache...
04.11 02:12:06 TIMER: Clans cache: 0ms
04.11 02:12:06 TIMER: Check tournament...
04.11 02:12:06 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:12' OR rounddate = '2016-04-11 02:12' AND status <> 'finished'
04.11 02:12:06 DB: SELECT * FROM battle WHERE endtime >= '1478214.72662602' AND avaliable = true AND finished <> true
04.11 02:12:06 TIMER: Check tournament: 1ms
04.11 02:12:06 TIMER: Clans cache...
04.11 02:12:06 TIMER: Clans cache: 0ms
04.11 02:12:06 TIMER: Check tournament...
04.11 02:12:06 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:13' OR rounddate = '2016-04-11 02:13' AND status <> 'finished'
04.11 02:12:06 DB: SELECT * FROM battle WHERE endtime >= '1478214.7866422' AND avaliable = true AND finished <> true
04.11 02:12:06 TIMER: Check tournament: 1ms
04.11 02:13:47 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true, _type => core/server.query }
04.11 02:13:47 DB: SELECT id FROM battle WHERE firstid=116 OR secondid=116 AND finished <> true
04.11 02:13:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 26 }, { id => 24 }, { id => 27 }, { id => 17 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 10 }, { id => 32 }, { id => 13 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 40 }}, errorCode => ok, _type => core/server.query }
04.11 02:13:47 TIME: core/server.query : 1.08 ms
04.11 02:13:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 40, _type => vdl/cache.battle.infoRoom }
04.11 02:13:47 STATS: cache [battle], get [10 calls, 6 cache hits, 3 cache misses, 0 same version, 0 not found]
04.11 02:13:47 STATS: cache [battle], segments [16 calls, 12 hits, 3 misses]
04.11 02:13:47 STATS: cache [battle], database [461 calls, 3 reads, 3 writes]
04.11 02:13:47 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
04.11 02:13:47 READDB: SELECT * FROM Battle WHERE ID = 40
04.11 02:13:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:13:47 TIME: vdl/cache.battle.infoRoom : 1.25 ms
04.11 02:13:47 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 40, _type => vdl/cache.battle.deleteRoom }
04.11 02:13:47 ROOM: deleted room 40
04.11 02:13:47 DB: DELETE FROM Battle WHERE ID = 40
04.11 02:13:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 02:13:47 TIME: vdl/cache.battle.deleteRoom : 16.92 ms
04.11 02:13:47 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 40, _type => vdl/cache.battle.finishRoom }
04.11 02:13:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 02:13:47 TIME: vdl/cache.battle.finishRoom : 0.18 ms
04.11 02:13:47 NET: vdl.0 (thread) request core/user.sendTo { id => 107, _type => core/user.sendTo, msg => { _type => battle.leave } }
04.11 02:13:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
04.11 02:13:47 TIME: core/user.sendTo : 0.12 ms
04.11 02:13:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 116, _type => core/cache.update }
04.11 02:13:47 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:13:47 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
04.11 02:13:47 STATS: cache [user], database [461 calls, 2 reads, 3 writes]
04.11 02:13:47 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 02:13:47 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.09 ms]
04.11 02:13:47 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.19 ms]
04.11 02:13:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 02:13:47 TIME: core/cache.update : 0.46 ms
04.11 02:13:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 116, _type => core/cache.update }
04.11 02:13:47 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:13:47 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
04.11 02:13:47 STATS: cache [questdata], database [461 calls, 2 reads, 1 writes]
04.11 02:13:47 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 02:13:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:13:47 TIME: core/cache.update : 0.59 ms
04.11 02:13:47 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 116, _type => core/user.logoutPost }
04.11 02:13:47 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 02:13:47 TIME: core/user.logoutPost : 0.2 ms
04.11 02:13:47 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 02:13:47 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 116
04.11 02:13:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481810', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 40
04.11 02:13:57 BLOCKREMOVE: user 116 removed
04.11 02:13:57 BLOCKREMOVE: questdata 116 removed
04.11 02:14:02 BLOCKREMOVE: battle 40 removed
04.11 02:14:06 TIMER: Clans cache...
04.11 02:14:06 TIMER: Clans cache: 0ms
04.11 02:14:06 TIMER: Check tournament...
04.11 02:14:06 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:14' OR rounddate = '2016-04-11 02:14' AND status <> 'finished'
04.11 02:14:06 DB: SELECT * FROM battle WHERE endtime >= '1478214.84665307' AND avaliable = true AND finished <> true
04.11 02:14:06 TIMER: Check tournament: 2ms
04.11 02:14:17 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 02:14:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 02:14:17 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 02:14:17 TIME: core/server.query : 1.33 ms
04.11 02:14:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 02:14:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 02:14:17 TIME: core/user.isOnlineID : 0.11 ms
04.11 02:14:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 02:14:17 READDB: SELECT * FROM Users WHERE ID = 116
04.11 02:14:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 02:14:17 TIME: core/cache.get : 1.85 ms
04.11 02:14:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 02:14:17 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 02:14:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 02:14:17 TIME: core/cache.get : 1.22 ms
04.11 02:14:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 02:14:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:14:17 TIME: core/user.loginPost : 0.15 ms
04.11 02:14:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 02:14:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:14:26 TIME: core/cache.update : 0.14 ms
04.11 02:14:26 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 02:17:16 TIMER: Starting timer...
04.11 02:17:16 TIMER: Timer running...
04.11 02:17:16 DB: SELECT * FROM GameVars
04.11 02:17:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:17:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:17:16 DB: SELECT * FROM Shops WHERE ID = 1
04.11 02:17:16 TEMP: load ./tmp/quest_daily_ids
04.11 02:17:16 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 02:17:16 TEMP: save ./tmp/quest_daily_ids
04.11 02:17:16 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 02:17:16 QUEUE: vdl.0 (thread) response server.login
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM LocalizationStrings
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 18.64 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM GameVars
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.57 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.89 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 2.06 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.56 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 2.86 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 02:17:16 TIME: core/quest.getDaily : 0.09 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM UserAttributeTypes
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.2 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM UserVariableTypes
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.15 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 02:17:16 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 2.39 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM ItemGroups
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.1 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM Bundles ORDER BY ID
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.22 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.27 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 02:17:16 TIME: core/shop.getList : 0.06 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM EffectAttributeTypes
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.1 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM Effects
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 0.98 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 02:17:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 2.01 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 02:17:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 1.85 ms
04.11 02:17:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 02:17:16 DB: SELECT * FROM Badges
04.11 02:17:16 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:17:16 TIME: core/server.query : 0.97 ms
04.11 02:18:14 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 02:18:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 02:18:14 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:18:14 TIME: core/server.query : 2.72 ms
04.11 02:18:14 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 02:18:14 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 02:18:14 TIME: core/user.isOnlineID : 0.08 ms
04.11 02:18:14 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 02:18:14 READDB: SELECT * FROM Users WHERE ID = 107
04.11 02:18:14 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:18:14 TIME: core/cache.get : 4.48 ms
04.11 02:18:14 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 02:18:14 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 02:18:14 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:18:14 TIME: core/cache.get : 1.61 ms
04.11 02:18:14 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 02:18:14 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:18:14 TIME: core/user.loginPost : 0.13 ms
04.11 02:18:16 TIMER: Clans cache...
04.11 02:18:16 TIMER: Clans cache: 0ms
04.11 02:18:16 TIMER: Check tournament...
04.11 02:18:16 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:18' OR rounddate = '2016-04-11 02:18' AND status <> 'finished'
04.11 02:18:16 DB: SELECT * FROM battle WHERE endtime >= '1478215.09667564' AND avaliable = true AND finished <> true
04.11 02:18:16 TIMER: Check tournament: 2ms
04.11 02:18:21 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 02:18:21 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 02:18:21 STATS: cache [user], segments [3 calls, 0 hits, 2 misses]
04.11 02:18:21 STATS: cache [user], database [66 calls, 1 reads, 0 writes]
04.11 02:18:21 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 02:18:21 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.93 ms]
04.11 02:18:21 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.35 ms]
04.11 02:18:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:18:21 TIME: core/cache.update : 0.61 ms
04.11 02:18:22 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 02:18:31 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 02:18:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:18:31 TIME: vdl/cache.battle.findRandom : 0.15 ms
04.11 02:19:16 TIMER: Clans cache...
04.11 02:19:16 TIMER: Clans cache: 0ms
04.11 02:19:16 TIMER: Check tournament...
04.11 02:19:16 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:19' OR rounddate = '2016-04-11 02:19' AND status <> 'finished'
04.11 02:19:16 DB: SELECT * FROM battle WHERE endtime >= '1478215.15668998' AND avaliable = true AND finished <> true
04.11 02:19:16 TIMER: Check tournament: 3ms
04.11 02:19:17 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 02:19:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 02:19:17 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 02:19:17 TIME: core/server.query : 2.36 ms
04.11 02:19:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 02:19:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 02:19:17 TIME: core/user.isOnlineID : 0.11 ms
04.11 02:19:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 02:19:17 READDB: SELECT * FROM Users WHERE ID = 116
04.11 02:19:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 02:19:17 TIME: core/cache.get : 1.77 ms
04.11 02:19:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 02:19:17 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 02:19:17 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
04.11 02:19:17 STATS: cache [questdata], database [121 calls, 1 reads, 0 writes]
04.11 02:19:17 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 02:19:17 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 02:19:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 02:19:17 TIME: core/cache.get : 1.45 ms
04.11 02:19:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 02:19:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:19:17 TIME: core/user.loginPost : 0.12 ms
04.11 02:19:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 02:19:26 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:19:26 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
04.11 02:19:26 STATS: cache [user], database [131 calls, 2 reads, 1 writes]
04.11 02:19:26 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 02:19:26 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.14 ms]
04.11 02:19:26 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.34 ms]
04.11 02:19:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:19:26 TIME: core/cache.update : 0.55 ms
04.11 02:19:27 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 02:19:31 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 02:19:31 DB: SELECT nextval('Battle_id_seq') AS id
04.11 02:19:31 READDB: SELECT ID FROM Battle WHERE ID = 42
04.11 02:19:31 READDB: INSERT INTO Battle (ID) VALUES (42)
04.11 02:19:31 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:19:31 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 02:19:31 STATS: cache [battle], database [135 calls, 0 reads, 0 writes]
04.11 02:19:31 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:19:31 READDB: SELECT * FROM Battle WHERE ID = 42
04.11 02:19:31 DB: SELECT name FROM users WHERE id=116
04.11 02:19:31 DB: SELECT name FROM users WHERE id=107
04.11 02:19:31 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 2, battleId => 42, player => 1 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 02:19:31 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 1, battleId => 42, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 02:19:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:19:31 TIME: vdl/cache.battle.findRandom : 38.95 ms
04.11 02:19:36 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'116', finished = E'false', endtime = E'1481815.17128351', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 42
04.11 02:19:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:19:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:19:38 TIME: vdl/cache.battle.infoRoom : 0.11 ms
04.11 02:19:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:19:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:19:43 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 02:19:43 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 116, player2 => 107, battleId => 42 }
04.11 02:19:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 02:19:43 TIME: vdl/cache.battle.setScores : 0.17 ms
04.11 02:19:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:19:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:19:48 TIME: vdl/cache.battle.infoRoom : 0.2 ms
04.11 02:19:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:19:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:19:55 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 02:19:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:19:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:19:59 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 02:20:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:20:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:20:02 TIME: vdl/cache.battle.infoRoom : 0.11 ms
04.11 02:20:03 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:20:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:20:03 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 02:20:05 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:20:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:20:05 TIME: vdl/cache.battle.infoRoom : 0.13 ms
04.11 02:20:07 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:20:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:20:07 TIME: vdl/cache.battle.infoRoom : 0.15 ms
04.11 02:20:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:20:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:20:08 TIME: vdl/cache.battle.infoRoom : 0.12 ms
04.11 02:20:09 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:20:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:20:09 TIME: vdl/cache.battle.infoRoom : 0.11 ms
04.11 02:20:11 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:20:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:20:11 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 02:20:13 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:20:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:20:13 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 02:20:16 TIMER: Clans cache...
04.11 02:20:16 TIMER: Clans cache: 0ms
04.11 02:20:16 TIMER: Check tournament...
04.11 02:20:16 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:20' OR rounddate = '2016-04-11 02:20' AND status <> 'finished'
04.11 02:20:16 DB: SELECT * FROM battle WHERE endtime >= '1478215.21670388' AND avaliable = true AND finished <> true
04.11 02:20:16 TIMER: Check tournament: 1ms
04.11 02:20:23 BLOCKREMOVE: battle 42 removed
04.11 02:21:16 TIMER: Clans cache...
04.11 02:21:16 TIMER: Clans cache: 0ms
04.11 02:21:16 TIMER: Check tournament...
04.11 02:21:16 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:21' OR rounddate = '2016-04-11 02:21' AND status <> 'finished'
04.11 02:21:16 DB: SELECT * FROM battle WHERE endtime >= '1478215.27671428' AND avaliable = true AND finished <> true
04.11 02:21:16 TIMER: Check tournament: 1ms
04.11 02:21:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:21:38 STATS: cache [battle], get [15 calls, 13 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 02:21:38 STATS: cache [battle], segments [17 calls, 15 hits, 1 misses]
04.11 02:21:38 STATS: cache [battle], database [262 calls, 1 reads, 1 writes]
04.11 02:21:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:21:38 READDB: SELECT * FROM Battle WHERE ID = 42
04.11 02:21:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 116 }
04.11 02:21:38 TIME: vdl/cache.battle.infoRoom : 1.57 ms
04.11 02:21:38 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 116, roomId => 42, _type => vdl/cache.battle.makeTurn }
04.11 02:21:38 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.05 ms]
04.11 02:21:38 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
04.11 02:21:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 116 }
04.11 02:21:38 TIME: vdl/cache.battle.makeTurn : 0.27 ms
04.11 02:21:43 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'107', finished = E'false', endtime = E'1481820', firstid = E'116', params = E'{}', avaliable = E'false' WHERE ID = 42
04.11 02:22:16 TIMER: Clans cache...
04.11 02:22:16 TIMER: Clans cache: 0ms
04.11 02:22:16 TIMER: Check tournament...
04.11 02:22:16 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:22' OR rounddate = '2016-04-11 02:22' AND status <> 'finished'
04.11 02:22:16 DB: SELECT * FROM battle WHERE endtime >= '1478215.33672741' AND avaliable = true AND finished <> true
04.11 02:22:16 TIMER: Check tournament: 1ms
04.11 02:22:16 TIMER: Clans cache...
04.11 02:22:16 TIMER: Clans cache: 0ms
04.11 02:22:16 TIMER: Check tournament...
04.11 02:22:16 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:23' OR rounddate = '2016-04-11 02:23' AND status <> 'finished'
04.11 02:22:16 DB: SELECT * FROM battle WHERE endtime >= '1478215.39673789' AND avaliable = true AND finished <> true
04.11 02:22:16 TIMER: Check tournament: 2ms
04.11 02:23:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:23:41 STATS: cache [battle], get [17 calls, 14 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:23:41 STATS: cache [battle], segments [21 calls, 18 hits, 2 misses]
04.11 02:23:41 STATS: cache [battle], database [385 calls, 2 reads, 2 writes]
04.11 02:23:41 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
04.11 02:23:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:23:41 TIME: vdl/cache.battle.infoRoom : 0.27 ms
04.11 02:23:41 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 107, roomId => 42, _type => vdl/cache.battle.makeTurn }
04.11 02:23:41 CACHE: cache block locked: battle.42
04.11 02:23:41 TRACE: vdl/cache.battle.makeTurn : Invalid field access : get
04.11 02:23:41 TRACE: vdl/cache.battle.makeTurn : 
Called from modules/VDLCache.hx line 1010
Called from modules/VDLCache.hx line 868
Called from modules/VDLCache.hx line 113
Called from snipe/cache/CacheServer.hx line 487
04.11 02:23:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => _requestException, _type => vdl/cache.battle.makeTurn }
04.11 02:24:16 TIMER: Clans cache...
04.11 02:24:16 TIMER: Clans cache: 0ms
04.11 02:24:16 TIMER: Check tournament...
04.11 02:24:16 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:24' OR rounddate = '2016-04-11 02:24' AND status <> 'finished'
04.11 02:24:16 DB: SELECT * FROM battle WHERE endtime >= '1478215.45674849' AND avaliable = true AND finished <> true
04.11 02:24:16 TIMER: Check tournament: 1ms
04.11 02:24:16 TIMER: Clans cache...
04.11 02:24:16 TIMER: Clans cache: 0ms
04.11 02:24:16 TIMER: Check tournament...
04.11 02:24:16 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:25' OR rounddate = '2016-04-11 02:25' AND status <> 'finished'
04.11 02:24:16 DB: SELECT * FROM battle WHERE endtime >= '1478215.51676138' AND avaliable = true AND finished <> true
04.11 02:24:16 TIMER: Check tournament: 1ms
04.11 02:25:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
04.11 02:25:46 STATS: cache [battle], get [18 calls, 15 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:25:46 STATS: cache [battle], segments [23 calls, 20 hits, 2 misses]
04.11 02:25:46 STATS: cache [battle], database [510 calls, 2 reads, 2 writes]
04.11 02:25:46 STATS: cache [battle], lock [2 calls, 2 attempts, 1 failures]
04.11 02:25:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 116, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:25:46 TIME: vdl/cache.battle.infoRoom : 0.42 ms
04.11 02:34:19 TIMER: Starting timer...
04.11 02:34:19 DB: SELECT * FROM GameVars
04.11 02:34:19 TIMER: Timer running...
04.11 02:34:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:34:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:34:19 DB: SELECT * FROM Shops WHERE ID = 1
04.11 02:34:19 TEMP: load ./tmp/quest_daily_ids
04.11 02:34:19 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 02:34:19 TEMP: save ./tmp/quest_daily_ids
04.11 02:34:19 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 02:34:19 QUEUE: vdl.0 (thread) response server.login
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM LocalizationStrings
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 18.08 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM GameVars
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 0.93 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1.54 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1.1 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1.45 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1.92 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 02:34:19 TIME: core/quest.getDaily : 0.05 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM UserAttributeTypes
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 0.76 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM UserVariableTypes
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 0.85 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 02:34:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 3.3 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM ItemGroups
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 0.96 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM Bundles ORDER BY ID
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 8.09 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1.36 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 02:34:19 TIME: core/shop.getList : 0.06 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM EffectAttributeTypes
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 0.99 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM Effects
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 02:34:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1.44 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 02:34:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1.75 ms
04.11 02:34:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 02:34:19 DB: SELECT * FROM Badges
04.11 02:34:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:19 TIME: core/server.query : 1.02 ms
04.11 02:34:57 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 02:34:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 02:34:57 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:34:57 TIME: core/server.query : 2.39 ms
04.11 02:34:57 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 02:34:57 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 02:34:57 TIME: core/user.isOnlineID : 0.1 ms
04.11 02:34:57 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 02:34:57 READDB: SELECT * FROM Users WHERE ID = 107
04.11 02:34:57 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:34:57 TIME: core/cache.get : 4.44 ms
04.11 02:34:57 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 02:34:57 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 02:34:57 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:34:57 TIME: core/cache.get : 1.21 ms
04.11 02:34:57 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 02:34:57 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:34:57 TIME: core/user.loginPost : 0.15 ms
04.11 02:35:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 02:35:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:35:04 TIME: core/cache.update : 0.21 ms
04.11 02:35:05 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 02:35:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 02:35:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 02:35:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 02:35:12 TIME: core/server.query : 4.19 ms
04.11 02:35:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 02:35:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 02:35:12 TIME: core/user.isOnlineID : 0.09 ms
04.11 02:35:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 02:35:12 READDB: SELECT * FROM Users WHERE ID = 116
04.11 02:35:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 02:35:12 TIME: core/cache.get : 1.71 ms
04.11 02:35:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 02:35:12 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 02:35:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 02:35:12 TIME: core/cache.get : 1.08 ms
04.11 02:35:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 02:35:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:35:12 TIME: core/user.loginPost : 0.09 ms
04.11 02:35:19 TIMER: Clans cache...
04.11 02:35:19 TIMER: Clans cache: 0ms
04.11 02:35:19 TIMER: Check tournament...
04.11 02:35:19 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:35' OR rounddate = '2016-04-11 02:35' AND status <> 'finished'
04.11 02:35:19 DB: SELECT * FROM battle WHERE endtime >= '1478216.11930649' AND avaliable = true AND finished <> true
04.11 02:35:19 TIMER: Check tournament: 3ms
04.11 02:35:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 02:35:19 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:35:19 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
04.11 02:35:19 STATS: cache [user], database [61 calls, 2 reads, 1 writes]
04.11 02:35:19 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 02:35:19 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.95 ms]
04.11 02:35:19 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.2 ms]
04.11 02:35:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:35:19 TIME: core/cache.update : 0.6 ms
04.11 02:35:20 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 02:35:26 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 02:35:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:35:26 TIME: vdl/cache.battle.findRandom : 0.16 ms
04.11 02:35:30 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 02:35:30 DB: SELECT nextval('Battle_id_seq') AS id
04.11 02:35:30 READDB: SELECT ID FROM Battle WHERE ID = 43
04.11 02:35:30 READDB: INSERT INTO Battle (ID) VALUES (43)
04.11 02:35:30 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:35:30 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 02:35:30 STATS: cache [battle], database [71 calls, 0 reads, 0 writes]
04.11 02:35:30 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:35:30 READDB: SELECT * FROM Battle WHERE ID = 43
04.11 02:35:30 DB: SELECT name FROM users WHERE id=107
04.11 02:35:30 DB: SELECT name FROM users WHERE id=116
04.11 02:35:30 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 43, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 02:35:30 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 43, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 02:35:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:35:30 TIME: vdl/cache.battle.findRandom : 33.71 ms
04.11 02:35:35 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481816.13027693', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 43
04.11 02:35:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
04.11 02:35:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:35:38 TIME: vdl/cache.battle.infoRoom : 0.11 ms
04.11 02:35:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
04.11 02:35:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:35:45 TIME: vdl/cache.battle.infoRoom : 0.17 ms
04.11 02:35:45 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 43 }
04.11 02:35:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 02:35:45 TIME: vdl/cache.battle.setScores : 0.12 ms
04.11 02:35:56 BLOCKREMOVE: battle 43 removed
04.11 02:36:19 TIMER: Clans cache...
04.11 02:36:19 TIMER: Clans cache: 0ms
04.11 02:36:19 TIMER: Check tournament...
04.11 02:36:19 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:36' OR rounddate = '2016-04-11 02:36' AND status <> 'finished'
04.11 02:36:19 DB: SELECT * FROM battle WHERE endtime >= '1478216.17931903' AND avaliable = true AND finished <> true
04.11 02:36:19 TIMER: Check tournament: 3ms
04.11 02:36:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
04.11 02:36:40 STATS: cache [battle], get [4 calls, 2 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 02:36:40 STATS: cache [battle], segments [6 calls, 4 hits, 1 misses]
04.11 02:36:40 STATS: cache [battle], database [141 calls, 1 reads, 1 writes]
04.11 02:36:40 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:36:40 READDB: SELECT * FROM Battle WHERE ID = 43
04.11 02:36:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:36:40 TIME: vdl/cache.battle.infoRoom : 1.57 ms
04.11 02:36:50 BLOCKREMOVE: battle 43 removed
04.11 02:38:54 TIMER: Starting timer...
04.11 02:38:54 TIMER: Timer running...
04.11 02:38:54 DB: SELECT * FROM GameVars
04.11 02:38:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:38:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:38:54 DB: SELECT * FROM Shops WHERE ID = 1
04.11 02:38:54 TEMP: load ./tmp/quest_daily_ids
04.11 02:38:54 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 02:38:54 TEMP: save ./tmp/quest_daily_ids
04.11 02:38:54 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 02:38:54 QUEUE: vdl.0 (thread) response server.login
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM LocalizationStrings
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 15.35 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM GameVars
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 1.12 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 1.3 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 0.92 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 0.98 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 1.69 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 02:38:54 TIME: core/quest.getDaily : 0.05 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM UserAttributeTypes
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 0.74 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM UserVariableTypes
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 0.89 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 02:38:54 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 2.52 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM ItemGroups
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 0.75 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM Bundles ORDER BY ID
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 0.95 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 1.16 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 02:38:54 TIME: core/shop.getList : 0.06 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM EffectAttributeTypes
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 1.09 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM Effects
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 2 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 02:38:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 1.59 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 02:38:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 1.67 ms
04.11 02:38:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 02:38:54 DB: SELECT * FROM Badges
04.11 02:38:54 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:38:54 TIME: core/server.query : 1.45 ms
04.11 02:39:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 02:39:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 02:39:45 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:39:45 TIME: core/server.query : 3.06 ms
04.11 02:39:45 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 02:39:45 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 02:39:45 TIME: core/user.isOnlineID : 0.09 ms
04.11 02:39:45 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 02:39:45 READDB: SELECT * FROM Users WHERE ID = 107
04.11 02:39:45 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:39:45 TIME: core/cache.get : 5.19 ms
04.11 02:39:45 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 02:39:45 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 02:39:45 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:39:45 TIME: core/cache.get : 1.96 ms
04.11 02:39:45 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 02:39:45 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:39:45 TIME: core/user.loginPost : 0.16 ms
04.11 02:39:54 TIMER: Clans cache...
04.11 02:39:54 TIMER: Clans cache: 0ms
04.11 02:39:54 TIMER: Check tournament...
04.11 02:39:54 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:39' OR rounddate = '2016-04-11 02:39' AND status <> 'finished'
04.11 02:39:54 DB: SELECT * FROM battle WHERE endtime >= '1478216.39476832' AND avaliable = true AND finished <> true
04.11 02:39:54 TIMER: Check tournament: 3ms
04.11 02:39:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 02:39:54 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 02:39:54 STATS: cache [user], segments [3 calls, 0 hits, 2 misses]
04.11 02:39:54 STATS: cache [user], database [61 calls, 1 reads, 0 writes]
04.11 02:39:54 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
04.11 02:39:54 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 3.47 ms]
04.11 02:39:54 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.39 ms]
04.11 02:39:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:39:54 TIME: core/cache.update : 0.64 ms
04.11 02:39:55 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 02:40:02 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 02:40:02 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 02:40:02 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 02:40:02 TIME: core/server.query : 3.75 ms
04.11 02:40:02 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 02:40:02 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 02:40:02 TIME: core/user.isOnlineID : 0.12 ms
04.11 02:40:02 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 02:40:02 READDB: SELECT * FROM Users WHERE ID = 116
04.11 02:40:02 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 02:40:02 TIME: core/cache.get : 1.85 ms
04.11 02:40:02 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 02:40:02 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
04.11 02:40:02 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
04.11 02:40:02 STATS: cache [questdata], database [68 calls, 1 reads, 0 writes]
04.11 02:40:02 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 02:40:02 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 02:40:02 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 02:40:02 TIME: core/cache.get : 7.61 ms
04.11 02:40:02 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 02:40:02 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:40:02 TIME: core/user.loginPost : 0.2 ms
04.11 02:40:19 TIMER: Starting timer...
04.11 02:40:19 TIMER: Timer running...
04.11 02:40:19 DB: SELECT * FROM GameVars
04.11 02:40:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:40:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:40:19 DB: SELECT * FROM Shops WHERE ID = 1
04.11 02:40:19 TEMP: load ./tmp/quest_daily_ids
04.11 02:40:19 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 02:40:19 TEMP: save ./tmp/quest_daily_ids
04.11 02:40:19 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 02:40:19 QUEUE: vdl.0 (thread) response server.login
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM LocalizationStrings
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 17.63 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM GameVars
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.17 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.65 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.19 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 3.91 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 2.58 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 02:40:19 TIME: core/quest.getDaily : 0.06 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM UserAttributeTypes
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.3 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM UserVariableTypes
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.61 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 02:40:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 3.6 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM ItemGroups
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.54 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM Bundles ORDER BY ID
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.63 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.34 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 02:40:19 TIME: core/shop.getList : 0.2 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM EffectAttributeTypes
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.57 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM Effects
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.22 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 02:40:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 2.2 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 02:40:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 2.04 ms
04.11 02:40:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 02:40:19 DB: SELECT * FROM Badges
04.11 02:40:19 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:19 TIME: core/server.query : 1.31 ms
04.11 02:40:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
04.11 02:40:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
04.11 02:40:47 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:40:47 TIME: core/server.query : 2.56 ms
04.11 02:40:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
04.11 02:40:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID
04.11 02:40:47 TIME: core/user.isOnlineID : 0.06 ms
04.11 02:40:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
04.11 02:40:47 READDB: SELECT * FROM Users WHERE ID = 107
04.11 02:40:47 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:40:47 TIME: core/cache.get : 3.14 ms
04.11 02:40:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
04.11 02:40:47 READDB: SELECT * FROM UserQuests WHERE ID = 107
04.11 02:40:47 QUEUE: vdl.0 (thread) response core/cache.get
04.11 02:40:47 TIME: core/cache.get : 1.32 ms
04.11 02:40:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
04.11 02:40:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:40:47 TIME: core/user.loginPost : 0.15 ms
04.11 02:40:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
04.11 02:40:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:40:54 TIME: core/cache.update : 0.19 ms
04.11 02:40:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116', _type => core/server.query }
04.11 02:40:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid116' AND Password = E'uid116'
04.11 02:40:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid116, networkid => , isbanned => false, id => 116 }}, errorCode => ok, _type => core/server.query }
04.11 02:40:55 TIME: core/server.query : 3.19 ms
04.11 02:40:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 116, _type => core/user.isOnlineID }
04.11 02:40:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
04.11 02:40:55 TIME: core/user.isOnlineID : 0.18 ms
04.11 02:40:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 116, _type => core/cache.get }
04.11 02:40:55 READDB: SELECT * FROM Users WHERE ID = 116
04.11 02:40:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid116, deleted => false, email => , networktype =>   , password => uid116, isbanned => false, regdate => 2016-11-03 21:26:31.138113+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478199280, lastLoginDate => 309, lastLoadDate => 1105 }, effects => { list => [] } }}, version => 0, id => 116 } }
04.11 02:40:55 TIME: core/cache.get : 1.54 ms
04.11 02:40:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 116, _type => core/cache.get }
04.11 02:40:55 READDB: SELECT * FROM UserQuests WHERE ID = 116
04.11 02:40:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 116 } }
04.11 02:40:55 TIME: core/cache.get : 1.08 ms
04.11 02:40:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 116, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
04.11 02:40:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
04.11 02:40:55 TIME: core/user.loginPost : 0.17 ms
04.11 02:40:55 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 02:41:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 116, _type => core/cache.update }
04.11 02:41:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:41:04 TIME: core/cache.update : 0.17 ms
04.11 02:41:05 WRITEDB: UPDATE Users SET name = E'uid116', deleted = E'false', email = E'', networktype = E'  ', password = E'uid116', isbanned = E'false', regdate = E'2016-11-03 21:26:31.138113+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478199280,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 116
04.11 02:41:19 TIMER: Clans cache...
04.11 02:41:19 TIMER: Clans cache: 0ms
04.11 02:41:19 TIMER: Check tournament...
04.11 02:41:19 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:41' OR rounddate = '2016-04-11 02:41' AND status <> 'finished'
04.11 02:41:19 DB: SELECT * FROM battle WHERE endtime >= '1478216.47970198' AND avaliable = true AND finished <> true
04.11 02:41:19 TIMER: Check tournament: 4ms
04.11 02:41:21 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 116 }, _type => vdl/cache.battle.findRandom }
04.11 02:41:21 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:41:21 TIME: vdl/cache.battle.findRandom : 0.15 ms
04.11 02:41:23 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
04.11 02:41:23 DB: SELECT nextval('Battle_id_seq') AS id
04.11 02:41:23 READDB: SELECT ID FROM Battle WHERE ID = 44
04.11 02:41:23 READDB: INSERT INTO Battle (ID) VALUES (44)
04.11 02:41:23 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
04.11 02:41:23 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
04.11 02:41:23 STATS: cache [battle], database [65 calls, 0 reads, 0 writes]
04.11 02:41:23 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:41:23 READDB: SELECT * FROM Battle WHERE ID = 44
04.11 02:41:24 DB: SELECT name FROM users WHERE id=107
04.11 02:41:24 DB: SELECT name FROM users WHERE id=116
04.11 02:41:24 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 116, enemy.name => uid116, id => 107, enemy.num => 2, battleId => 44, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
04.11 02:41:24 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid116, enemy.id => 107, enemy.name => uid107, id => 116, enemy.num => 1, battleId => 44, player => 2 }, _isNotify => true, id => 116, _type => battle.enemyEvent }
04.11 02:41:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
04.11 02:41:24 TIME: vdl/cache.battle.findRandom : 39.07 ms
04.11 02:41:29 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'false', endtime = E'1481816.48400509', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 44
04.11 02:41:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 44, _type => vdl/cache.battle.infoRoom }
04.11 02:41:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:41:31 TIME: vdl/cache.battle.infoRoom : 0.13 ms
04.11 02:41:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 44, _type => vdl/cache.battle.infoRoom }
04.11 02:41:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:41:38 TIME: vdl/cache.battle.infoRoom : 0.16 ms
04.11 02:41:38 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 107, player2 => 116, battleId => 44 }
04.11 02:41:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
04.11 02:41:38 TIME: vdl/cache.battle.setScores : 0.16 ms
04.11 02:41:48 BLOCKREMOVE: battle 44 removed
04.11 02:41:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 44, _type => vdl/cache.battle.infoRoom }
04.11 02:41:53 READDB: SELECT * FROM Battle WHERE ID = 44
04.11 02:41:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:41:53 TIME: vdl/cache.battle.infoRoom : 1.22 ms
04.11 02:42:03 BLOCKREMOVE: battle 44 removed
04.11 02:42:19 TIMER: Clans cache...
04.11 02:42:19 TIMER: Clans cache: 0ms
04.11 02:42:19 TIMER: Check tournament...
04.11 02:42:19 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:42' OR rounddate = '2016-04-11 02:42' AND status <> 'finished'
04.11 02:42:19 DB: SELECT * FROM battle WHERE endtime >= '1478216.53971598' AND avaliable = true AND finished <> true
04.11 02:42:19 TIMER: Check tournament: 3ms
04.11 02:42:19 TIMER: Clans cache...
04.11 02:42:19 TIMER: Clans cache: 0ms
04.11 02:42:19 TIMER: Check tournament...
04.11 02:42:19 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:43' OR rounddate = '2016-04-11 02:43' AND status <> 'finished'
04.11 02:42:19 DB: SELECT * FROM battle WHERE endtime >= '1478216.59972846' AND avaliable = true AND finished <> true
04.11 02:42:19 TIMER: Check tournament: 3ms
04.11 02:42:19 TIMER: Clans cache...
04.11 02:42:19 TIMER: Clans cache: 0ms
04.11 02:42:19 TIMER: Check tournament...
04.11 02:42:19 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:44' OR rounddate = '2016-04-11 02:44' AND status <> 'finished'
04.11 02:42:19 DB: SELECT * FROM battle WHERE endtime >= '1478216.6597435' AND avaliable = true AND finished <> true
04.11 02:42:19 TIMER: Check tournament: 1ms
04.11 02:42:19 TIMER: Clans cache...
04.11 02:42:19 TIMER: Clans cache: 0ms
04.11 02:42:19 TIMER: Check tournament...
04.11 02:42:19 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:45' OR rounddate = '2016-04-11 02:45' AND status <> 'finished'
04.11 02:42:19 DB: SELECT * FROM battle WHERE endtime >= '1478216.71975415' AND avaliable = true AND finished <> true
04.11 02:42:19 TIMER: Check tournament: 2ms
04.11 02:42:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
04.11 02:42:19 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
04.11 02:42:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }, { id => 23 }, { id => 26 }, { id => 21 }, { id => 18 }, { id => 27 }, { id => 28 }, { id => 29 }, { id => 30 }, { id => 32 }, { id => 33 }, { id => 35 }, { id => 37 }, { id => 38 }, { id => 39 }, { id => 42 }, { id => 43 }, { id => 44 }}, errorCode => ok, _type => core/server.query }
04.11 02:42:19 TIME: core/server.query : 1.28 ms
04.11 02:42:19 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 44, _type => vdl/cache.battle.infoRoom }
04.11 02:42:19 STATS: cache [battle], get [5 calls, 2 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:42:19 STATS: cache [battle], segments [7 calls, 4 hits, 2 misses]
04.11 02:42:19 STATS: cache [battle], database [300 calls, 2 reads, 1 writes]
04.11 02:42:19 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
04.11 02:42:19 READDB: SELECT * FROM Battle WHERE ID = 44
04.11 02:42:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 116, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
04.11 02:42:19 TIME: vdl/cache.battle.infoRoom : 1.39 ms
04.11 02:42:19 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 44, _type => vdl/cache.battle.deleteRoom }
04.11 02:42:19 ROOM: deleted room 44
04.11 02:42:19 DB: DELETE FROM Battle WHERE ID = 44
04.11 02:42:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
04.11 02:42:19 TIME: vdl/cache.battle.deleteRoom : 23.3 ms
04.11 02:42:19 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 44, _type => vdl/cache.battle.finishRoom }
04.11 02:42:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
04.11 02:42:19 TIME: vdl/cache.battle.finishRoom : 0.12 ms
04.11 02:42:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
04.11 02:42:19 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:42:19 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
04.11 02:42:19 STATS: cache [user], database [300 calls, 2 reads, 2 writes]
04.11 02:42:19 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
04.11 02:42:19 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.62 ms]
04.11 02:42:19 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.1 ms]
04.11 02:42:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
04.11 02:42:19 TIME: core/cache.update : 0.34 ms
04.11 02:42:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
04.11 02:42:19 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
04.11 02:42:19 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
04.11 02:42:19 STATS: cache [questdata], database [300 calls, 2 reads, 0 writes]
04.11 02:42:19 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
04.11 02:42:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
04.11 02:42:19 TIME: core/cache.update : 0.28 ms
04.11 02:42:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
04.11 02:42:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
04.11 02:42:19 TIME: core/user.logoutPost : 0.09 ms
04.11 02:42:19 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":309,"lastLoadDate":1105},"effects":{"list":[]}}' WHERE ID = 107
04.11 02:42:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
04.11 02:45:24 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'116', turnid = E'107', finished = E'true', endtime = E'1481820', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 44
04.11 02:45:29 BLOCKREMOVE: user 107 removed
04.11 02:45:29 BLOCKREMOVE: questdata 107 removed
04.11 02:45:49 TIMER: Starting timer...
04.11 02:45:49 DB: SELECT * FROM GameVars
04.11 02:45:49 TIMER: Timer running...
04.11 02:45:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:45:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:45:49 DB: SELECT * FROM Shops WHERE ID = 1
04.11 02:45:49 TEMP: load ./tmp/quest_daily_ids
04.11 02:45:49 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
04.11 02:45:49 TEMP: save ./tmp/quest_daily_ids
04.11 02:45:49 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
04.11 02:45:49 QUEUE: vdl.0 (thread) response server.login
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM LocalizationStrings
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 26.76 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM GameVars
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.22 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.43 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.13 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.42 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 2.19 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/quest.getDaily
04.11 02:45:49 TIME: core/quest.getDaily : 0.07 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM UserAttributeTypes
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.04 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM UserVariableTypes
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 0.99 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
04.11 02:45:49 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 3.68 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM ItemGroups
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 4.24 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM Bundles ORDER BY ID
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.37 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM BundleItems ORDER BY ID
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 2.42 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/shop.getList
04.11 02:45:49 TIME: core/shop.getList : 0.33 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM EffectAttributeTypes
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.37 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM Effects
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.15 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
04.11 02:45:49 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 2.03 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
04.11 02:45:49 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 2 ms
04.11 02:45:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
04.11 02:45:49 DB: SELECT * FROM Badges
04.11 02:45:49 QUEUE: vdl.0 (thread) response core/server.query
04.11 02:45:49 TIME: core/server.query : 1.07 ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:46' OR rounddate = '2016-04-11 02:46' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478216.8091523' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 3ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:47' OR rounddate = '2016-04-11 02:47' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478216.86916436' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 3ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:48' OR rounddate = '2016-04-11 02:48' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478216.92917806' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 2ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:49' OR rounddate = '2016-04-11 02:49' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478216.98919187' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 1ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:50' OR rounddate = '2016-04-11 02:50' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.04920244' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 2ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:51' OR rounddate = '2016-04-11 02:51' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.10921381' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 2ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:52' OR rounddate = '2016-04-11 02:52' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.16922678' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 1ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:53' OR rounddate = '2016-04-11 02:53' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.22923888' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 2ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:54' OR rounddate = '2016-04-11 02:54' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.28924933' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 1ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:55' OR rounddate = '2016-04-11 02:55' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.34926096' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 1ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:56' OR rounddate = '2016-04-11 02:56' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.40927163' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 1ms
04.11 02:45:49 TIMER: Clans cache...
04.11 02:45:49 TIMER: Clans cache: 0ms
04.11 02:45:49 TIMER: Check tournament...
04.11 02:45:49 DB: SELECT * FROM tournament WHERE startdate = '2016-04-11 02:57' OR rounddate = '2016-04-11 02:57' AND status <> 'finished'
04.11 02:45:49 DB: SELECT * FROM battle WHERE endtime >= '1478217.46928587' AND avaliable = true AND finished <> true
04.11 02:45:49 TIMER: Check tournament: 1ms
04.11 02:45:49 TIMER: Clans cac