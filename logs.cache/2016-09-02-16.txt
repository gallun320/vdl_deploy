02.09 16:13:18 TIMER: Starting timer...
02.09 16:13:18 TIMER: Timer running...
02.09 16:13:18 DB: SELECT * FROM GameVars
02.09 16:13:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:13:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:13:18 DB: SELECT * FROM Shops WHERE ID = 1
02.09 16:13:18 TEMP: load ./tmp/quest_daily_ids
02.09 16:13:18 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 16:13:18 TEMP: save ./tmp/quest_daily_ids
02.09 16:13:18 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 16:13:18 QUEUE: vdl.0 (thread) response server.login
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 16:13:18 DB: SELECT * FROM LocalizationStrings
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:13:18 TIME: core/server.query : 13.94 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 16:13:18 DB: SELECT * FROM GameVars
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:13:18 TIME: core/server.query : 1.01 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 16:13:18 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:13:18 TIME: core/server.query : 1.64 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 16:13:18 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:13:18 TIME: core/server.query : 2.91 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 16:13:18 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:13:18 TIME: core/server.query : 1.12 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 16:13:18 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:13:18 TIME: core/server.query : 2.61 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 16:13:18 TIME: core/quest.getDaily : 0.03 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 16:13:18 DB: SELECT * FROM UserAttributeTypes
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:13:18 TIME: core/server.query : 0.61 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 16:13:18 DB: SELECT * FROM UserVariableTypes
02.09 16:13:18 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:13:18 TIME: core/server.query : 0.68 ms
02.09 16:13:18 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 16:13:18 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, 02.09 16:15:03 TIMER: Starting timer...
02.09 16:15:03 TIMER: Timer running...
02.09 16:15:03 DB: SELECT * FROM GameVars
02.09 16:15:03 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:15:03 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:15:03 DB: SELECT * FROM Shops WHERE ID = 1
02.09 16:15:03 TEMP: load ./tmp/quest_daily_ids
02.09 16:15:03 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 16:15:03 TEMP: save ./tmp/quest_daily_ids
02.09 16:15:03 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 16:15:03 QUEUE: vdl.0 (thread) response server.login
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM LocalizationStrings
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 8.41 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM GameVars
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.76 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 1.02 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.42 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.76 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 1.21 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 16:15:03 TIME: core/quest.getDaily : 0.02 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM UserAttributeTypes
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.48 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM UserVariableTypes
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.62 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 16:15:03 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 1.21 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM ItemGroups
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.4 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM Bundles ORDER BY ID
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 1.86 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.59 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 16:15:03 TIME: core/shop.getList : 0.02 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM EffectAttributeTypes
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.49 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM Effects
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.5 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 16:15:03 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.96 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 16:15:03 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.73 ms
02.09 16:15:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 16:15:03 DB: SELECT * FROM Badges
02.09 16:15:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:15:03 TIME: core/server.query : 0.34 ms
02.09 16:15:03 TIMER: Clans cache...
02.09 16:15:03 TIMER: Clans cache: 0ms
02.09 16:16:15 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 16:16:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 16:16:15 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:16:15 TIME: core/server.query : 1.51 ms
02.09 16:16:15 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 16:16:15 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 16:16:15 TIME: core/user.isOnlineID : 0.27 ms
02.09 16:16:15 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 16:16:15 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:16:15 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 16:16:15 STATS: cache [user], database [73 calls, 0 reads, 0 writes]
02.09 16:16:15 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 16:16:15 READDB: SELECT * FROM Users WHERE ID = 2
02.09 16:16:16 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.79 ms]
02.09 16:16:16 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 16:16:16 QUEUE: vdl.0 (thread) response core/cache.get
02.09 16:16:16 TIME: core/cache.get : 4.32 ms
02.09 16:16:16 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 16:16:16 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:16:16 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 16:16:16 STATS: cache [questdata], database [73 calls, 0 reads, 0 writes]
02.09 16:16:16 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 16:16:16 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 16:16:16 QUEUE: vdl.0 (thread) response core/cache.get
02.09 16:16:16 TIME: core/cache.get : 2.37 ms
02.09 16:16:16 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 16:16:16 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 16:16:16 TIME: core/user.loginPost : 0.08 ms
02.09 16:16:16 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 16:16:16 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 16:16:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 16:16:16 TIME: vdl/cache.battle.find : 2.12 ms
02.09 16:16:16 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
02.09 16:16:16 DB: SELECT nextval('Battle_id_seq') AS id
02.09 16:16:16 READDB: SELECT ID FROM Battle WHERE ID = 24
02.09 16:16:16 READDB: INSERT INTO Battle (ID) VALUES (24)
02.09 16:16:16 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:16:16 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.09 16:16:16 STATS: cache [battle], database [73 calls, 0 reads, 0 writes]
02.09 16:16:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.09 16:16:16 READDB: SELECT * FROM Battle WHERE ID = 24
02.09 16:16:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 24, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 16:16:16 TIME: vdl/cache.battle.create : 41.26 ms
02.09 16:16:21 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 24
02.09 16:16:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 16:16:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:16:23 TIME: core/cache.update : 0.28 ms
02.09 16:16:24 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472741968,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 16:16:31 BLOCKREMOVE: battle 24 removed
02.09 16:17:03 TIMER: Clans cache...
02.09 16:17:03 TIMER: Clans cache: 0ms
02.09 16:17:07 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2OR secondid=2, _type => core/server.query }
02.09 16:17:07 DB: SELECT id FROM battle WHERE firstid=2OR secondid=2
02.09 16:17:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 24 }}, errorCode => ok, _type => core/server.query }
02.09 16:17:07 TIME: core/server.query : 4.42 ms
02.09 16:17:07 NET: vdl.0 (thread) request core/server.query { q => SELECT firstid FROM battle WHERE id=24, _type => core/server.query }
02.09 16:17:07 DB: SELECT firstid FROM battle WHERE id=24
02.09 16:17:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ firstid => 2 }}, errorCode => ok, _type => core/server.query }
02.09 16:17:07 TIME: core/server.query : 1.15 ms
02.09 16:17:07 NET: vdl.0 (thread) request core/server.query { q => SELECT secondid FROM battle WHERE id=24, _type => core/server.query }
02.09 16:17:07 DB: SELECT secondid FROM battle WHERE id=24
02.09 16:17:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ secondid => 0 }}, errorCode => ok, _type => core/server.query }
02.09 16:17:07 TIME: core/server.query : 1.22 ms
02.09 16:17:07 NET: vdl.0 (thread) request core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { type => battle.endGame } }
02.09 16:17:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
02.09 16:17:07 TIME: core/user.sendTo : 0.27 ms
02.09 16:17:07 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 24, _type => vdl/cache.battle.deleteRoom }
02.09 16:17:07 ROOM: deleted room 24
02.09 16:17:07 DB: DELETE FROM Battle WHERE ID = 24
02.09 16:17:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 16:17:07 TIME: vdl/cache.battle.deleteRoom : 30.91 ms
02.09 16:17:07 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 16:17:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 16:17:07 TIME: core/cache.update : 0.19 ms
02.09 16:17:07 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 16:17:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:17:07 TIME: core/cache.update : 0.2 ms
02.09 16:17:07 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 16:17:07 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 16:17:07 TIME: core/user.logoutPost : 0.12 ms
02.09 16:17:08 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472741968,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 16:17:08 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 16:17:18 BLOCKREMOVE: user 2 removed
02.09 16:17:18 BLOCKREMOVE: questdata 2 removed
02.09 16:17:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 16:17:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 16:17:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.09 16:17:51 TIME: core/server.query : 2.1 ms
02.09 16:17:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 16:17:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 16:17:51 TIME: core/user.isOnlineID : 0.11 ms
02.09 16:17:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 16:17:51 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 16:17:51 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
02.09 16:17:51 STATS: cache [user], database [169 calls, 1 reads, 2 writes]
02.09 16:17:51 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 16:17:51 READDB: SELECT * FROM Users WHERE ID = 3
02.09 16:17:51 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.55 ms]
02.09 16:17:51 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.08 ms]
02.09 16:17:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472738532, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.09 16:17:51 TIME: core/cache.get : 2.24 ms
02.09 16:17:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 16:17:51 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 16:17:51 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
02.09 16:17:51 STATS: cache [questdata], database [169 calls, 1 reads, 1 writes]
02.09 16:17:51 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 16:17:51 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 16:17:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.09 16:17:51 TIME: core/cache.get : 1.58 ms
02.09 16:17:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 16:17:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 16:17:51 TIME: core/user.loginPost : 0.11 ms
02.09 16:17:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 3 AND Date = 'today'::timestamp, _type => core/server.query }
02.09 16:17:51 DB: SELECT ID FROM TempUserLogins WHERE UserID = 3 AND Date = 'today'::timestamp
02.09 16:17:51 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.09 16:17:51 TIME: core/server.query : 2.42 ms
02.09 16:17:52 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (3, 'today'::timestamp)
02.09 16:17:55 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 16:17:55 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 16:17:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 16:17:55 TIME: vdl/cache.battle.find : 0.54 ms
02.09 16:17:55 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
02.09 16:17:55 DB: SELECT nextval('Battle_id_seq') AS id
02.09 16:17:55 READDB: SELECT ID FROM Battle WHERE ID = 25
02.09 16:17:55 READDB: INSERT INTO Battle (ID) VALUES (25)
02.09 16:17:55 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 16:17:55 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
02.09 16:17:55 STATS: cache [battle], database [172 calls, 1 reads, 1 writes]
02.09 16:17:55 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
02.09 16:17:55 READDB: SELECT * FROM Battle WHERE ID = 25
02.09 16:17:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 25, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 16:17:55 TIME: vdl/cache.battle.create : 17.43 ms
02.09 16:17:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 246, lastLoadDate => 903 } }}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 16:17:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:17:58 TIME: core/cache.update : 0.23 ms
02.09 16:17:58 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 16:18:00 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 25
02.09 16:18:03 TIMER: Clans cache...
02.09 16:18:03 TIMER: Clans cache: 0ms
02.09 16:18:10 BLOCKREMOVE: battle 25 removed
02.09 16:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3OR secondid=3, _type => core/server.query }
02.09 16:18:38 DB: SELECT id FROM battle WHERE firstid=3OR secondid=3
02.09 16:18:38 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 25 }}, errorCode => ok, _type => core/server.query }
02.09 16:18:38 TIME: core/server.query : 0.63 ms
02.09 16:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT firstid FROM battle WHERE id=25, _type => core/server.query }
02.09 16:18:38 DB: SELECT firstid FROM battle WHERE id=25
02.09 16:18:38 QUEUE: vdl.0 (thread) response core/server.query { list => {{ firstid => 3 }}, errorCode => ok, _type => core/server.query }
02.09 16:18:38 TIME: core/server.query : 0.32 ms
02.09 16:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT secondid FROM battle WHERE id=25, _type => core/server.query }
02.09 16:18:38 DB: SELECT secondid FROM battle WHERE id=25
02.09 16:18:38 QUEUE: vdl.0 (thread) response core/server.query { list => {{ secondid => 0 }}, errorCode => ok, _type => core/server.query }
02.09 16:18:38 TIME: core/server.query : 0.71 ms
02.09 16:18:38 NET: vdl.0 (thread) request core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { type => battle.endGame } }
02.09 16:18:38 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
02.09 16:18:38 TIME: core/user.sendTo : 0.05 ms
02.09 16:18:38 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 25, _type => vdl/cache.battle.deleteRoom }
02.09 16:18:38 ROOM: deleted room 25
02.09 16:18:38 DB: DELETE FROM Battle WHERE ID = 25
02.09 16:18:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 16:18:38 TIME: vdl/cache.battle.deleteRoom : 27.42 ms
02.09 16:18:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.09 16:18:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 16:18:38 TIME: core/cache.update : 0.08 ms
02.09 16:18:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.09 16:18:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:18:38 TIME: core/cache.update : 0.07 ms
02.09 16:18:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.09 16:18:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 16:18:38 TIME: core/user.logoutPost : 0.06 ms
02.09 16:18:38 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 16:18:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.09 16:18:48 BLOCKREMOVE: user 3 removed
02.09 16:18:48 BLOCKREMOVE: questdata 3 removed
02.09 16:23:31 TIMER: Starting timer...
02.09 16:23:31 TIMER: Timer running...
02.09 16:23:31 DB: SELECT * FROM GameVars
02.09 16:23:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:23:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:23:31 DB: SELECT * FROM Shops WHERE ID = 1
02.09 16:23:31 TEMP: load ./tmp/quest_daily_ids
02.09 16:23:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 16:23:31 TEMP: save ./tmp/quest_daily_ids
02.09 16:23:31 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 16:23:31 QUEUE: vdl.0 (thread) response server.login
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM LocalizationStrings
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 6.84 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM GameVars
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.68 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.81 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.44 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.48 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.73 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 16:23:31 TIME: core/quest.getDaily : 0.03 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM UserAttributeTypes
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.33 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM UserVariableTypes
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.31 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 16:23:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 1.06 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM ItemGroups
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.96 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM Bundles ORDER BY ID
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.63 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.52 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 16:23:31 TIME: core/shop.getList : 0.02 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM EffectAttributeTypes
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.44 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM Effects
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.32 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 16:23:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.55 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 16:23:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.73 ms
02.09 16:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 16:23:31 DB: SELECT * FROM Badges
02.09 16:23:31 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:23:31 TIME: core/server.query : 0.28 ms
02.09 16:23:31 TIMER: Clans cache...
02.09 16:23:31 TIMER: Clans cache: 0ms
02.09 16:23:31 TIMER: Clans cache...
02.09 16:23:31 TIMER: Clans cache: 0ms
02.09 16:23:31 TIMER: Clans cache...
02.09 16:23:31 TIMER: Clans cache: 0ms
02.09 16:26:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 16:26:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 16:26:45 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:26:45 TIME: core/server.query : 2.87 ms
02.09 16:26:45 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 16:26:45 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 16:26:45 TIME: core/user.isOnlineID : 0.06 ms
02.09 16:26:45 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 16:26:45 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:26:45 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 16:26:45 STATS: cache [user], database [195 calls, 0 reads, 0 writes]
02.09 16:26:45 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 16:26:45 READDB: SELECT * FROM Users WHERE ID = 2
02.09 16:26:45 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.58 ms]
02.09 16:26:45 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 16:26:45 QUEUE: vdl.0 (thread) response core/cache.get
02.09 16:26:45 TIME: core/cache.get : 3.77 ms
02.09 16:26:45 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 16:26:45 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:26:45 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 16:26:45 STATS: cache [questdata], database [195 calls, 0 reads, 0 writes]
02.09 16:26:45 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 16:26:45 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 16:26:45 QUEUE: vdl.0 (thread) response core/cache.get
02.09 16:26:45 TIME: core/cache.get : 1.29 ms
02.09 16:26:45 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 16:26:45 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 16:26:45 TIME: core/user.loginPost : 0.12 ms
02.09 16:26:45 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 16:26:45 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 16:26:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 16:26:45 TIME: vdl/cache.battle.find : 5.42 ms
02.09 16:26:45 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
02.09 16:26:45 DB: SELECT nextval('Battle_id_seq') AS id
02.09 16:26:45 READDB: SELECT ID FROM Battle WHERE ID = 26
02.09 16:26:45 READDB: INSERT INTO Battle (ID) VALUES (26)
02.09 16:26:45 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:26:45 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.09 16:26:45 STATS: cache [battle], database [195 calls, 0 reads, 0 writes]
02.09 16:26:45 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 16:26:45 READDB: SELECT * FROM Battle WHERE ID = 26
02.09 16:26:45 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.81 ms]
02.09 16:26:45 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 16:26:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 26, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 16:26:45 TIME: vdl/cache.battle.create : 37.03 ms
02.09 16:26:51 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 26
02.09 16:26:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 16:26:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:26:51 TIME: core/cache.update : 0.24 ms
02.09 16:26:52 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472741968,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 16:27:19 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 16:27:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 16:27:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.09 16:27:19 TIME: core/server.query : 1.7 ms
02.09 16:27:19 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 16:27:19 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 16:27:19 TIME: core/user.isOnlineID : 0.14 ms
02.09 16:27:19 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 16:27:19 READDB: SELECT * FROM Users WHERE ID = 3
02.09 16:27:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472738532, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.09 16:27:19 TIME: core/cache.get : 1.02 ms
02.09 16:27:19 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 16:27:19 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 16:27:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.09 16:27:19 TIME: core/cache.get : 1.83 ms
02.09 16:27:19 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 16:27:19 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 16:27:19 TIME: core/user.loginPost : 0.06 ms
02.09 16:27:20 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 16:27:20 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 16:27:20 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 16:27:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 26, first => 2 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 16:27:20 TIME: vdl/cache.battle.find : 6.63 ms
02.09 16:27:20 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 26, selfId => 3, _type => vdl/cache.battle.join }
02.09 16:27:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 26, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 16:27:20 TIME: vdl/cache.battle.join : 0.15 ms
02.09 16:27:20 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 16:27:20 DB: SELECT name FROM users WHERE id=3
02.09 16:27:20 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 16:27:20 TIME: core/server.query : 1.77 ms
02.09 16:27:20 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 16:27:20 DB: SELECT name FROM users WHERE id=2
02.09 16:27:20 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 16:27:20 TIME: core/server.query : 0.77 ms
02.09 16:27:20 WRITEDB: UPDATE Battle SET secondid = E'3', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 26
02.09 16:27:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 16:27:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:27:26 TIME: core/cache.update : 0.18 ms
02.09 16:27:27 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 16:27:31 TIMER: Clans cache...
02.09 16:27:31 TIMER: Clans cache: 0ms
02.09 16:27:31 TIMER: Clans cache...
02.09 16:27:31 TIMER: Clans cache: 0ms
02.09 16:29:05 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.09 16:29:05 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 16:29:05 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
02.09 16:29:05 STATS: cache [user], database [334 calls, 2 reads, 2 writes]
02.09 16:29:05 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 16:29:05 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.84 ms]
02.09 16:29:05 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.45 ms]
02.09 16:29:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 16:29:05 TIME: core/cache.update : 2.13 ms
02.09 16:29:05 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.09 16:29:05 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 16:29:05 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
02.09 16:29:05 STATS: cache [questdata], database [334 calls, 2 reads, 0 writes]
02.09 16:29:05 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 16:29:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:29:05 TIME: core/cache.update : 2.97 ms
02.09 16:29:05 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.09 16:29:05 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 16:29:05 TIME: core/user.logoutPost : 0.56 ms
02.09 16:29:05 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 16:29:05 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.09 16:29:15 BLOCKREMOVE: user 3 removed
02.09 16:29:15 BLOCKREMOVE: questdata 3 removed
02.09 16:29:56 TIMER: Starting timer...
02.09 16:29:56 TIMER: Timer running...
02.09 16:29:56 DB: SELECT * FROM GameVars
02.09 16:29:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:29:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:29:56 DB: SELECT * FROM Shops WHERE ID = 1
02.09 16:29:56 TEMP: load ./tmp/quest_daily_ids
02.09 16:29:56 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 16:29:56 TEMP: save ./tmp/quest_daily_ids
02.09 16:29:56 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 16:29:56 QUEUE: vdl.0 (thread) response server.login
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM LocalizationStrings
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 6.58 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM GameVars
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.61 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 1.01 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.52 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.97 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 1.21 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 16:29:56 TIME: core/quest.getDaily : 0.02 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM UserAttributeTypes
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.41 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM UserVariableTypes
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.46 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 16:29:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 1.02 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM ItemGroups
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.33 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM Bundles ORDER BY ID
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.79 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.38 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 16:29:56 TIME: core/shop.getList : 0.02 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM EffectAttributeTypes
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.46 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM Effects
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.32 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 16:29:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 1.23 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 16:29:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.64 ms
02.09 16:29:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 16:29:56 DB: SELECT * FROM Badges
02.09 16:29:56 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:29:56 TIME: core/server.query : 0.3 ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Clans cache: 0ms
02.09 16:29:56 TIMER: Clans cache...
02.09 16:29:56 TIMER: Cl02.09 16:52:09 TIMER: Starting timer...
02.09 16:52:09 TIMER: Timer running...
02.09 16:52:09 DB: SELECT * FROM GameVars
02.09 16:52:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:52:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:52:09 DB: SELECT * FROM Shops WHERE ID = 1
02.09 16:52:09 TEMP: load ./tmp/quest_daily_ids
02.09 16:52:09 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 16:52:09 TEMP: save ./tmp/quest_daily_ids
02.09 16:52:10 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 16:52:10 QUEUE: vdl.0 (thread) response server.login
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM LocalizationStrings
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 22.34 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM GameVars
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 1.41 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 1.71 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.8 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 1.17 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 1.97 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 16:52:10 TIME: core/quest.getDaily : 0.05 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM UserAttributeTypes
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 1.09 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM UserVariableTypes
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.73 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 16:52:10 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 1.59 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM ItemGroups
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.55 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM Bundles ORDER BY ID
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.92 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.58 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 16:52:10 TIME: core/shop.getList : 0.08 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM EffectAttributeTypes
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.88 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM Effects
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.47 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 16:52:10 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 1.29 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 16:52:10 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.81 ms
02.09 16:52:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 16:52:10 DB: SELECT * FROM Badges
02.09 16:52:10 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:52:10 TIME: core/server.query : 0.41 ms
02.09 16:52:10 TIMER: Clans cache...
02.09 16:52:10 TIMER: Clans cache: 0ms
02.09 16:52:10 TIMER: Clans cache...
02.09 16:52:10 TIMER: Clans cache: 0ms
02.09 16:52:10 TIMER: Clans cache...
02.09 16:52:10 TIMER: Clans cache: 0ms
02.09 16:55:15 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 16:55:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 16:55:15 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:55:15 TIME: core/server.query : 1.9 ms
02.09 16:55:15 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 16:55:15 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 16:55:15 TIME: core/user.isOnlineID : 0.09 ms
02.09 16:55:15 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 16:55:15 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:55:15 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 16:55:15 STATS: cache [user], database [186 calls, 0 reads, 0 writes]
02.09 16:55:15 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 16:55:15 READDB: SELECT * FROM Users WHERE ID = 3
02.09 16:55:15 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 9.26 ms]
02.09 16:55:15 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 16:55:15 QUEUE: vdl.0 (thread) response core/cache.get
02.09 16:55:15 TIME: core/cache.get : 9.51 ms
02.09 16:55:15 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 16:55:15 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:55:15 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 16:55:15 STATS: cache [questdata], database [186 calls, 0 reads, 0 writes]
02.09 16:55:15 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 16:55:15 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 16:55:15 QUEUE: vdl.0 (thread) response core/cache.get
02.09 16:55:15 TIME: core/cache.get : 2.32 ms
02.09 16:55:15 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 16:55:15 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 16:55:15 TIME: core/user.loginPost : 0.06 ms
02.09 16:55:16 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 16:55:16 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 16:55:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 16:55:16 TIME: vdl/cache.battle.find : 1.15 ms
02.09 16:55:16 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
02.09 16:55:16 DB: SELECT nextval('Battle_id_seq') AS id
02.09 16:55:16 READDB: SELECT ID FROM Battle WHERE ID = 27
02.09 16:55:16 READDB: INSERT INTO Battle (ID) VALUES (27)
02.09 16:55:16 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 16:55:16 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.09 16:55:16 STATS: cache [battle], database [187 calls, 0 reads, 0 writes]
02.09 16:55:16 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 16:55:16 READDB: SELECT * FROM Battle WHERE ID = 27
02.09 16:55:16 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.82 ms]
02.09 16:55:16 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 16:55:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 27, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 16:55:16 TIME: vdl/cache.battle.create : 31.47 ms
02.09 16:55:22 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 27
02.09 16:55:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 16:55:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:55:25 TIME: core/cache.update : 0.19 ms
02.09 16:55:26 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472738532,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 16:56:10 TIMER: Clans cache...
02.09 16:56:10 TIMER: Clans cache: 0ms
02.09 16:56:10 TIMER: Clans cache...
02.09 16:56:10 TIMER: Clans cache: 0ms
02.09 16:57:12 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 16:57:12 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 16:57:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
02.09 16:57:12 TIME: core/server.query : 3.62 ms
02.09 16:57:12 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 16:57:12 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 16:57:12 TIME: core/user.isOnlineID : 0.14 ms
02.09 16:57:12 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 16:57:12 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 16:57:12 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
02.09 16:57:12 STATS: cache [user], database [303 calls, 1 reads, 1 writes]
02.09 16:57:12 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 16:57:12 READDB: SELECT * FROM Users WHERE ID = 2
02.09 16:57:12 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 4.34 ms]
02.09 16:57:12 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.06 ms]
02.09 16:57:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472741968, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 2 } }
02.09 16:57:12 TIME: core/cache.get : 1.89 ms
02.09 16:57:12 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 16:57:12 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 16:57:12 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
02.09 16:57:12 STATS: cache [questdata], database [303 calls, 1 reads, 0 writes]
02.09 16:57:12 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 16:57:12 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 16:57:12 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
02.09 16:57:12 TIME: core/cache.get : 1.02 ms
02.09 16:57:12 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 16:57:12 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 16:57:12 TIME: core/user.loginPost : 0.11 ms
02.09 16:57:12 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 16:57:12 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 16:57:12 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 16:57:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 27, first => 3 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 16:57:12 TIME: vdl/cache.battle.find : 1.51 ms
02.09 16:57:12 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 27, selfId => 2, _type => vdl/cache.battle.join }
02.09 16:57:12 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 16:57:12 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
02.09 16:57:12 STATS: cache [battle], database [303 calls, 1 reads, 1 writes]
02.09 16:57:12 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 16:57:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 27, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 16:57:12 TIME: vdl/cache.battle.join : 0.23 ms
02.09 16:57:12 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 16:57:12 DB: SELECT name FROM users WHERE id=2
02.09 16:57:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 16:57:12 TIME: core/server.query : 1.49 ms
02.09 16:57:12 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 16:57:12 DB: SELECT name FROM users WHERE id=3
02.09 16:57:12 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 16:57:12 TIME: core/server.query : 0.4 ms
02.09 16:57:13 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 27
02.09 16:57:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 16:57:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 16:57:20 TIME: core/cache.update : 0.19 ms
02.09 16:57:21 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472741968,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 16:59:37 TIMER: Starting timer...
02.09 16:59:37 TIMER: Timer running...
02.09 16:59:37 DB: SELECT * FROM GameVars
02.09 16:59:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:59:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:59:37 DB: SELECT * FROM Shops WHERE ID = 1
02.09 16:59:37 TEMP: load ./tmp/quest_daily_ids
02.09 16:59:37 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 16:59:37 TEMP: save ./tmp/quest_daily_ids
02.09 16:59:37 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 16:59:37 QUEUE: vdl.0 (thread) response server.login
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM LocalizationStrings
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 7.72 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM GameVars
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.74 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.89 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.56 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.68 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 2.85 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 16:59:37 TIME: core/quest.getDaily : 0.04 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM UserAttributeTypes
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.61 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM UserVariableTypes
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.54 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 16:59:37 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 2.8 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM ItemGroups
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.68 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM Bundles ORDER BY ID
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.58 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 1.01 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 16:59:37 TIME: core/shop.getList : 0.04 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM EffectAttributeTypes
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.78 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM Effects
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.75 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 16:59:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.94 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 16:59:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.56 ms
02.09 16:59:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 16:59:37 DB: SELECT * FROM Badges
02.09 16:59:37 QUEUE: vdl.0 (thread) response core/server.query
02.09 16:59:37 TIME: core/server.query : 0.64 ms
02.09 16:59:37 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
02.09 16:59:37 TIMER: Clans cache...
02.09 16:59:37 TIMER: Clans cache: 0ms
