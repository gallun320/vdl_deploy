20.01 17:10:14 TIMER: Starting timer...
20.01 17:10:14 TIMER: Timer running...
20.01 17:10:14 DB: SELECT * FROM GameVars
20.01 17:10:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
20.01 17:10:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
20.01 17:10:14 DB: SELECT * FROM Shops WHERE ID = 1
20.01 17:10:14 TEMP: load ./tmp/quest_daily_ids
20.01 17:10:14 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
20.01 17:10:14 TEMP: save ./tmp/quest_daily_ids
20.01 17:10:14 NET: ??? request core/server.login { host => 172.16.20.171, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.20.171, externalPort => 2030 }
20.01 17:10:14 QUEUE: vdl.0 (thread) response server.login
20.01 17:10:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
20.01 17:10:14 DB: SELECT * FROM LocalizationStrings
20.01 17:10:14 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:14 TIME: core/server.query : 11.28 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM GameVars
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.53 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.74 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.45 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.63 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.85 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/quest.getDaily
20.01 17:10:15 TIME: core/quest.getDaily : 0.03 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM UserAttributeTypes
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.34 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM UserVariableTypes
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.46 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
20.01 17:10:15 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 1.08 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM ItemGroups
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.33 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM Bundles ORDER BY ID
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.42 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM BundleItems ORDER BY ID
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.57 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/shop.getList
20.01 17:10:15 TIME: core/shop.getList : 0.03 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM EffectAttributeTypes
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.34 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM Effects
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.33 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
20.01 17:10:15 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.72 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
20.01 17:10:15 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.51 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
20.01 17:10:15 DB: SELECT * FROM Badges
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 0.5 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 17:10:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query
20.01 17:10:15 TIME: core/server.query : 2.54 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/user.isOnlineID
20.01 17:10:15 TIME: core/user.isOnlineID : 0.08 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
20.01 17:10:15 READDB: SELECT * FROM Users WHERE ID = 76
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/cache.get
20.01 17:10:15 TIME: core/cache.get : 4.14 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
20.01 17:10:15 READDB: SELECT * FROM UserQuests WHERE ID = 76
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/cache.get
20.01 17:10:15 TIME: core/cache.get : 1.34 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
20.01 17:10:15 TIME: core/user.loginPost : 0.09 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 17:10:15 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf'
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer2, networkid => , isbanned => false, id => 163 }}, errorCode => ok, _type => core/server.query }
20.01 17:10:15 TIME: core/server.query : 1.84 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/user.isOnlineID { id => 163, _type => core/user.isOnlineID }
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 17:10:15 TIME: core/user.isOnlineID : 0.09 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 163, _type => core/cache.get }
20.01 17:10:15 READDB: SELECT * FROM Users WHERE ID = 163
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer2, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2017-01-20 12:39:54.038596+03, language => en, networkid => , params => { info => { city => , year => , email =>  }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905194, lastLoginDate => 20, lastLoadDate => 121 }, effects => { list => [] } }}, version => 0, id => 163 } }
20.01 17:10:15 TIME: core/cache.get : 1.5 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 163, _type => core/cache.get }
20.01 17:10:15 READDB: SELECT * FROM UserQuests WHERE ID = 163
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 163 } }
20.01 17:10:15 TIME: core/cache.get : 1.1 ms
20.01 17:10:15 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 163, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 17:10:15 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
20.01 17:10:15 TIME: core/user.loginPost : 0.11 ms
20.01 17:10:15 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData, money => 3 }
20.01 17:10:15 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 3 }
20.01 17:10:15 TIME: vdl/cache.user.getData : 0.19 ms
20.01 17:10:15 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 163, _type => vdl/cache.user.getData, money => 0 }
20.01 17:10:15 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => , year => , email =>  }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 17:10:15 TIME: vdl/cache.user.getData : 0.07 ms
20.01 17:10:20 TIMER: Check step...
20.01 17:10:20 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:10:20 TIMER: Check step: 3ms
20.01 17:10:25 TIMER: Check step...
20.01 17:10:25 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:10:25 TIMER: Check step: 5ms
20.01 17:10:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
20.01 17:10:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 17:10:25 TIME: core/cache.update : 0.06 ms
20.01 17:10:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 163, _type => core/cache.update }
20.01 17:10:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 17:10:25 TIME: core/cache.update : 0.05 ms
20.01 17:10:26 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1484905045,"lastLoginDate":20,"money":3,"lastLoadDate":121},"effects":{"list":[]}}' WHERE ID = 76
20.01 17:10:26 WRITEDB: UPDATE Users SET name = E'Aimer2', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2017-01-20 12:39:54.038596+03', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1484905194,"lastLoginDate":20,"lastLoadDate":121},"effects":{"list":[]}}' WHERE ID = 163
20.01 17:10:30 TIMER: Check step...
20.01 17:10:30 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:10:30 TIMER: Check step: 3ms
20.01 17:10:35 TIMER: Check step...
20.01 17:10:35 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:10:35 TIMER: Check step: 2ms
20.01 17:10:40 TIMER: Check step...
20.01 17:10:40 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:10:40 TIMER: Check step: 1ms
20.01 17:10:45 TIMER: Check step...
20.01 17:10:45 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:10:45 TIMER: Check step: 1ms
20.01 17:10:49 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true, _type => core/server.query }
20.01 17:10:49 DB: SELECT id FROM battle WHERE firstid=163 OR secondid=163 AND finished <> true
20.01 17:10:49 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
20.01 17:10:49 TIME: core/server.query : 0.97 ms
20.01 17:10:49 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
20.01 17:10:49 READDB: SELECT * FROM Battle WHERE ID = 0
20.01 17:10:49 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
20.01 17:10:49 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 233
Called from modules/VDLCache.hx line 226
Called from modules/VDLCache.hx line 163
Called from snipe/cache/CacheServer.hx line 487
20.01 17:10:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
20.01 17:10:49 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 163, _type => core/cache.update }
20.01 17:10:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
20.01 17:10:49 TIME: core/cache.update : 0.15 ms
20.01 17:10:49 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 163, _type => core/cache.update }
20.01 17:10:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
20.01 17:10:49 TIME: core/cache.update : 0.12 ms
20.01 17:10:49 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 163, _type => core/user.logoutPost }
20.01 17:10:49 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
20.01 17:10:49 TIME: core/user.logoutPost : 0.1 ms
20.01 17:10:50 WRITEDB: UPDATE Users SET name = E'Aimer2', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2017-01-20 12:39:54.038596+03', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1484905194,"lastLoginDate":20,"lastLoadDate":121},"effects":{"list":[]}}' WHERE ID = 163
20.01 17:10:50 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 163
20.01 17:10:50 TIMER: Check step...
20.01 17:10:50 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:10:50 TIMER: Check step: 1ms
20.01 17:10:55 TIMER: Check step...
20.01 17:10:55 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:10:55 TIMER: Check step: 1ms
20.01 17:10:56 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf', _type => core/server.query }
20.01 17:10:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer2' AND Password = E'kO2YJdf'
20.01 17:10:56 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => Aimer2, networkid => , isbanned => false, id => 163 }}, errorCode => ok, _type => core/server.query }
20.01 17:10:56 TIME: core/server.query : 3.54 ms
20.01 17:10:56 NET: vdl.0 (thread) request core/user.isOnlineID { id => 163, _type => core/user.isOnlineID }
20.01 17:10:56 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
20.01 17:10:56 TIME: core/user.isOnlineID : 0.13 ms
20.01 17:10:56 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 163, _type => core/cache.get }
20.01 17:10:56 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => Aimer2, deleted => false, email => , networktype =>   , password => kO2YJdf, isbanned => false, regdate => 2017-01-20 12:39:54.038596+03, language => en, networkid => , params => { info => { city => , year => , email =>  }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1484905194, lastLoginDate => 20, lastLoadDate => 121 }, effects => { list => [] } }}, version => 2, id => 163 } }
20.01 17:10:56 TIME: core/cache.get : 0.54 ms
20.01 17:10:56 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 163, _type => core/cache.get }
20.01 17:10:56 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 163 } }
20.01 17:10:56 TIME: core/cache.get : 0.23 ms
20.01 17:10:56 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 163, _type => core/user.loginPost, ipAddr => 172.16.20.200 }
20.01 17:10:56 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
20.01 17:10:56 TIME: core/user.loginPost : 0.1 ms
20.01 17:10:57 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 163, _type => vdl/cache.user.getData, money => 0 }
20.01 17:10:57 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => , year => , email =>  }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
20.01 17:10:57 TIME: vdl/cache.user.getData : 0.17 ms
20.01 17:11:00 TIMER: Check step...
20.01 17:11:00 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:00 TIMER: Check step: 1ms
20.01 17:11:05 TIMER: Check step...
20.01 17:11:05 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:05 TIMER: Check step: 1ms
20.01 17:11:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 163, _type => core/cache.update }
20.01 17:11:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
20.01 17:11:05 TIME: core/cache.update : 0.15 ms
20.01 17:11:06 WRITEDB: UPDATE Users SET name = E'Aimer2', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2017-01-20 12:39:54.038596+03', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1484905194,"lastLoginDate":20,"lastLoadDate":121},"effects":{"list":[]}}' WHERE ID = 163
20.01 17:11:06 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 163 }, _type => vdl/cache.battle.findRandom }
20.01 17:11:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
20.01 17:11:06 TIME: vdl/cache.battle.findRandom : 0.05 ms
20.01 17:11:10 TIMER: Check step...
20.01 17:11:10 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:10 TIMER: Check step: 1ms
20.01 17:11:10 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 76 }, _type => vdl/cache.battle.findRandom }
20.01 17:11:10 DB: SELECT nextval('Battle_id_seq') AS id
20.01 17:11:10 READDB: SELECT ID FROM Battle WHERE ID = 42
20.01 17:11:10 READDB: INSERT INTO Battle (ID) VALUES (42)
20.01 17:11:10 READDB: SELECT * FROM Battle WHERE ID = 42
20.01 17:11:10 DB: SELECT name FROM users WHERE id=76
20.01 17:11:10 DB: SELECT name FROM users WHERE id=163
20.01 17:11:10 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => Aimer, enemy.id => 163, enemy.name => Aimer2, id => 76, enemy.num => 2, battleId => 42, player => 1 }, _isNotify => true, id => 76, _type => battle.enemyEvent }
20.01 17:11:10 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => Aimer2, enemy.id => 76, enemy.name => Aimer, id => 163, enemy.num => 1, battleId => 42, player => 2 }, _isNotify => true, id => 163, _type => battle.enemyEvent }
20.01 17:11:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
20.01 17:11:10 TIME: vdl/cache.battle.findRandom : 9.24 ms
20.01 17:11:15 TIMER: Clans cache...
20.01 17:11:15 TIMER: Clans cache: 0ms
20.01 17:11:15 TIMER: Check step...
20.01 17:11:15 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:15 TIMER: Check step: 0ms
20.01 17:11:15 TIMER: Check round...
20.01 17:11:15 DB: SELECT * FROM tournament WHERE startdate = '2017-20-01 20:11' OR rounddate = '2017-20-01 20:11' AND status <> 'finished'
20.01 17:11:15 DB: SELECT * FROM battle WHERE endtime >= '1484921.4750939' AND avaliable = false AND finished <> true
20.01 17:11:15 TIMER: Check round: 1ms
20.01 17:11:16 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.47695162', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:11:20 TIMER: Check step...
20.01 17:11:20 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:20 STATS: cache [battle], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 1 not found]
20.01 17:11:20 STATS: cache [battle], segments [7 calls, 4 hits, 2 misses]
20.01 17:11:20 STATS: cache [battle], database [66 calls, 2 reads, 1 writes]
20.01 17:11:20 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.01 17:11:20 TRACE: Check step timer exception:
20.01 17:11:20 TRACE: Invalid field access : response

20.01 17:11:20 TIMER: Check step: 2ms
20.01 17:11:21 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.48609707', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:11:25 TIMER: Check step...
20.01 17:11:25 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:25 TIMER: Check step: 1ms
20.01 17:11:30 TIMER: Check step...
20.01 17:11:30 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:30 TRACE: Check step timer exception:
20.01 17:11:30 TRACE: Invalid field access : response

20.01 17:11:30 TIMER: Check step: 2ms
20.01 17:11:31 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.49610576', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:11:35 TIMER: Check step...
20.01 17:11:35 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:35 TIMER: Check step: 1ms
20.01 17:11:40 TIMER: Check step...
20.01 17:11:40 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:40 TRACE: Check step timer exception:
20.01 17:11:40 TRACE: Invalid field access : response

20.01 17:11:40 TIMER: Check step: 3ms
20.01 17:11:41 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.50611645', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:11:45 TIMER: Check step...
20.01 17:11:45 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:45 TIMER: Check step: 1ms
20.01 17:11:50 TIMER: Check step...
20.01 17:11:50 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:50 TRACE: Check step timer exception:
20.01 17:11:50 TRACE: Invalid field access : response

20.01 17:11:50 TIMER: Check step: 2ms
20.01 17:11:51 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.51612697', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:11:55 TIMER: Check step...
20.01 17:11:55 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:11:55 TIMER: Check step: 2ms
20.01 17:12:00 TIMER: Check step...
20.01 17:12:00 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:00 TRACE: Check step timer exception:
20.01 17:12:00 TRACE: Invalid field access : response

20.01 17:12:00 TIMER: Check step: 1ms
20.01 17:12:01 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.52613664', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:12:05 TIMER: Check step...
20.01 17:12:05 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:05 TIMER: Check step: 0ms
20.01 17:12:10 TIMER: Check step...
20.01 17:12:10 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:10 TRACE: Check step timer exception:
20.01 17:12:10 TRACE: Invalid field access : response

20.01 17:12:10 TIMER: Check step: 3ms
20.01 17:12:11 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.53614209', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:12:15 TIMER: Clans cache...
20.01 17:12:15 TIMER: Clans cache: 0ms
20.01 17:12:15 TIMER: Check step...
20.01 17:12:15 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:15 TIMER: Check step: 0ms
20.01 17:12:15 TIMER: Check round...
20.01 17:12:15 DB: SELECT * FROM tournament WHERE startdate = '2017-20-01 20:12' OR rounddate = '2017-20-01 20:12' AND status <> 'finished'
20.01 17:12:15 DB: SELECT * FROM battle WHERE endtime >= '1484921.53514486' AND avaliable = false AND finished <> true
20.01 17:12:15 TRACE: Check round timer exception:
20.01 17:12:15 TRACE: Invalid field access : player1

20.01 17:12:15 TIMER: Check round: 1ms
20.01 17:12:20 TIMER: Check step...
20.01 17:12:20 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:20 STATS: cache [battle], get [10 calls, 7 cache hits, 2 cache misses, 0 same version, 1 not found]
20.01 17:12:20 STATS: cache [battle], segments [19 calls, 16 hits, 2 misses]
20.01 17:12:20 STATS: cache [battle], database [126 calls, 2 reads, 7 writes]
20.01 17:12:20 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.01 17:12:20 TRACE: Check step timer exception:
20.01 17:12:20 TRACE: Invalid field access : response

20.01 17:12:20 TIMER: Check step: 3ms
20.01 17:12:21 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.54614883', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:12:25 TIMER: Check step...
20.01 17:12:25 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:25 TIMER: Check step: 1ms
20.01 17:12:30 TIMER: Check step...
20.01 17:12:30 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:30 TRACE: Check step timer exception:
20.01 17:12:30 TRACE: Invalid field access : response

20.01 17:12:30 TIMER: Check step: 3ms
20.01 17:12:31 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.55615867', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:12:35 TIMER: Check step...
20.01 17:12:35 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:35 TIMER: Check step: 2ms
20.01 17:12:40 TIMER: Check step...
20.01 17:12:40 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:40 TRACE: Check step timer exception:
20.01 17:12:40 TRACE: Invalid field access : response

20.01 17:12:40 TIMER: Check step: 2ms
20.01 17:12:41 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.56617235', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:12:45 TIMER: Check step...
20.01 17:12:45 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:45 TIMER: Check step: 2ms
20.01 17:12:50 TIMER: Check step...
20.01 17:12:50 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:50 TRACE: Check step timer exception:
20.01 17:12:50 TRACE: Invalid field access : response

20.01 17:12:50 TIMER: Check step: 2ms
20.01 17:12:51 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.57618378', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:12:55 TIMER: Check step...
20.01 17:12:55 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:12:55 TIMER: Check step: 1ms
20.01 17:13:00 TIMER: Check step...
20.01 17:13:00 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:00 TRACE: Check step timer exception:
20.01 17:13:00 TRACE: Invalid field access : response

20.01 17:13:00 TIMER: Check step: 3ms
20.01 17:13:01 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.58619519', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:13:05 TIMER: Check step...
20.01 17:13:05 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:05 TIMER: Check step: 1ms
20.01 17:13:10 TIMER: Check step...
20.01 17:13:10 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:10 TRACE: Check step timer exception:
20.01 17:13:10 TRACE: Invalid field access : response

20.01 17:13:10 TIMER: Check step: 5ms
20.01 17:13:11 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.59620914', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:13:15 TIMER: Clans cache...
20.01 17:13:15 TIMER: Clans cache: 0ms
20.01 17:13:15 TIMER: Check step...
20.01 17:13:15 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:15 TIMER: Check step: 1ms
20.01 17:13:15 TIMER: Check round...
20.01 17:13:15 DB: SELECT * FROM tournament WHERE startdate = '2017-20-01 20:13' OR rounddate = '2017-20-01 20:13' AND status <> 'finished'
20.01 17:13:15 DB: SELECT * FROM battle WHERE endtime >= '1484921.59521307' AND avaliable = false AND finished <> true
20.01 17:13:15 TRACE: Check round timer exception:
20.01 17:13:15 TRACE: Invalid field access : player1

20.01 17:13:15 TIMER: Check round: 1ms
20.01 17:13:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
20.01 17:13:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 163, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 76 }
20.01 17:13:16 TIME: vdl/cache.battle.infoRoom : 0.18 ms
20.01 17:13:16 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 76, roomId => 42, _type => vdl/cache.battle.makeTurn }
20.01 17:13:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 0 }
20.01 17:13:16 TIME: vdl/cache.battle.makeTurn : 0.21 ms
20.01 17:13:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.60280064', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:13:20 TIMER: Check step...
20.01 17:13:20 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:20 TIMER: Check step: 3ms
20.01 17:13:24 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
20.01 17:13:24 STATS: cache [battle], get [18 calls, 15 cache hits, 2 cache misses, 0 same version, 1 not found]
20.01 17:13:24 STATS: cache [battle], segments [34 calls, 31 hits, 2 misses]
20.01 17:13:24 STATS: cache [battle], database [190 calls, 2 reads, 14 writes]
20.01 17:13:24 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.01 17:13:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 163, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 17:13:24 TIME: vdl/cache.battle.infoRoom : 0.72 ms
20.01 17:13:25 TIMER: Check step...
20.01 17:13:25 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:25 TRACE: Check step timer exception:
20.01 17:13:25 TRACE: Invalid field access : response

20.01 17:13:25 TIMER: Check step: 2ms
20.01 17:13:26 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.61122416', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:13:30 TIMER: Check step...
20.01 17:13:30 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:30 TIMER: Check step: 2ms
20.01 17:13:35 TIMER: Check step...
20.01 17:13:35 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:35 TRACE: Check step timer exception:
20.01 17:13:35 TRACE: Invalid field access : response

20.01 17:13:35 TIMER: Check step: 2ms
20.01 17:13:36 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.62123142', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:13:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
20.01 17:13:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 163, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 17:13:38 TIME: vdl/cache.battle.infoRoom : 0.24 ms
20.01 17:13:40 TIMER: Check step...
20.01 17:13:40 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:40 TIMER: Check step: 1ms
20.01 17:13:45 TIMER: Check step...
20.01 17:13:45 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:45 TRACE: Check step timer exception:
20.01 17:13:45 TRACE: Invalid field access : response

20.01 17:13:45 TIMER: Check step: 3ms
20.01 17:13:46 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.63124061', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:13:50 TIMER: Check step...
20.01 17:13:50 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:50 TIMER: Check step: 2ms
20.01 17:13:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
20.01 17:13:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 163, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 76 }
20.01 17:13:53 TIME: vdl/cache.battle.infoRoom : 0.17 ms
20.01 17:13:55 TIMER: Check step...
20.01 17:13:55 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:13:55 TRACE: Check step timer exception:
20.01 17:13:55 TRACE: Invalid field access : response

20.01 17:13:55 TIMER: Check step: 2ms
20.01 17:13:56 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.64124775', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:13:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
20.01 17:13:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 163, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 17:13:59 TIME: vdl/cache.battle.infoRoom : 0.17 ms
20.01 17:13:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
20.01 17:13:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 163, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 17:13:59 TIME: vdl/cache.battle.infoRoom : 0.24 ms
20.01 17:13:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
20.01 17:13:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 163, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 17:13:59 TIME: vdl/cache.battle.infoRoom : 0.11 ms
20.01 17:14:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 42, _type => vdl/cache.battle.infoRoom }
20.01 17:14:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 163, firstId => 76, _type => vdl/cache.battle.infoRoom, turnId => 163 }
20.01 17:14:00 TIME: vdl/cache.battle.infoRoom : 0.14 ms
20.01 17:14:00 TIMER: Check step...
20.01 17:14:00 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:14:00 TIMER: Check step: 1ms
20.01 17:14:05 TIMER: Check step...
20.01 17:14:05 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:14:05 TRACE: Check step timer exception:
20.01 17:14:05 TRACE: Invalid field access : response

20.01 17:14:05 TIMER: Check step: 3ms
20.01 17:14:06 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.65125388', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:14:10 TIMER: Check step...
20.01 17:14:10 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:14:10 TIMER: Check step: 1ms
20.01 17:14:15 TIMER: Clans cache...
20.01 17:14:15 TIMER: Clans cache: 0ms
20.01 17:14:15 TIMER: Check step...
20.01 17:14:15 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:14:15 TRACE: Check step timer exception:
20.01 17:14:15 TRACE: Invalid field access : response

20.01 17:14:15 TIMER: Check step: 1ms
20.01 17:14:15 TIMER: Check round...
20.01 17:14:15 DB: SELECT * FROM tournament WHERE startdate = '2017-20-01 20:14' OR rounddate = '2017-20-01 20:14' AND status <> 'finished'
20.01 17:14:15 DB: SELECT * FROM battle WHERE endtime >= '1484921.65526002' AND avaliable = false AND finished <> true
20.01 17:14:15 TRACE: Check round timer exception:
20.01 17:14:15 TRACE: Invalid field access : player1

20.01 17:14:15 TIMER: Check round: 1ms
20.01 17:14:16 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'163', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.66125907', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:14:20 TIMER: Check step...
20.01 17:14:20 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:14:20 TIMER: Check step: 2ms
20.01 17:14:25 TIMER: Check step...
20.01 17:14:25 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:14:25 STATS: cache [battle], get [31 calls, 28 cache hits, 2 cache misses, 0 same version, 1 not found]
20.01 17:14:25 STATS: cache [battle], segments [53 calls, 50 hits, 2 misses]
20.01 17:14:25 STATS: cache [battle], database [251 calls, 2 reads, 20 writes]
20.01 17:14:25 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
20.01 17:14:25 TRACE: Check step timer exception:
20.01 17:14:25 TRACE: Invalid field access : response

20.01 17:14:25 TIMER: Check step: 3ms
20.01 17:14:26 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'163', turnid = E'76', finished = E'false', endtime = E'1488521.47095046', firstid = E'76', steptime = E'1484921.67126888', params = E'{}', avaliable = E'false' WHERE ID = 42
20.01 17:14:30 TIMER: Check step...
20.01 17:14:30 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:14:30 TIMER: Check step: 1ms
20.01 17:14:35 TIMER: Check step...
20.01 17:14:35 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
20.01 17:14:35 TRACE: Check step timer exception:
20.01 17:14:35 TRACE: Invalid field access : response

20.01 17:14:35 TIMER: Check step: 3ms
