14.10 15:00:26 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 15:00:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 15:00:26 QUEUE: vdl.0 (thread) response core/server.query
14.10 15:00:26 TIME: core/server.query : 2.47 ms
14.10 15:00:26 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 15:00:26 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 15:00:26 TIME: core/user.isOnlineID : 0.12 ms
14.10 15:00:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 15:00:26 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 15:00:26 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 15:00:26 STATS: cache [user], database [117 calls, 0 reads, 0 writes]
14.10 15:00:26 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 15:00:26 READDB: SELECT * FROM Users WHERE ID = 34
14.10 15:00:26 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.7 ms]
14.10 15:00:26 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 15:00:26 QUEUE: vdl.0 (thread) response core/cache.get
14.10 15:00:26 TIME: core/cache.get : 4.93 ms
14.10 15:00:26 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 15:00:26 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 15:00:26 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
14.10 15:00:26 STATS: cache [questdata], database [117 calls, 0 reads, 0 writes]
14.10 15:00:26 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 15:00:26 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 15:00:26 QUEUE: vdl.0 (thread) response core/cache.get
14.10 15:00:26 TIME: core/cache.get : 2.77 ms
14.10 15:00:26 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 15:00:26 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 15:00:26 TIME: core/user.loginPost : 0.17 ms
14.10 15:00:29 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
14.10 15:00:29 TIMER: Clans cache...
14.10 15:00:29 TIMER: Clans cache: 0ms
14.10 15:00:32 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 15:00:32 DB: SELECT * FROM tournament
14.10 15:00:32 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 15:00:32 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 15:00:32 STATS: cache [tournament], database [123 calls, 0 reads, 0 writes]
14.10 15:00:32 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 15:00:32 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 15:00:32 DB: SELECT name FROM users WHERE id = 34
14.10 15:00:32 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 15:00:32 TIME: vdl/cache.tournament.getAvailableTournament : 4.94 ms
14.10 15:00:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 15:00:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:00:34 TIME: core/cache.update : 0.2 ms
14.10 15:00:35 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 15:00:42 BLOCKREMOVE: tournament 1 removed
14.10 15:00:45 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 15:00:45 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 15:00:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [34] }
14.10 15:00:45 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 1.55 ms
14.10 15:00:45 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], _type => vdl/cache.tournament.setGrid }
14.10 15:00:45 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 15:00:45 TIME: vdl/cache.tournament.setGrid : 0.23 ms
14.10 15:00:55 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 15:00:55 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [34] }
14.10 15:00:55 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.24 ms
14.10 15:00:55 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], _type => vdl/cache.tournament.setGrid }
14.10 15:00:55 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 15:00:55 TIME: vdl/cache.tournament.setGrid : 0.1 ms
14.10 15:01:05 BLOCKREMOVE: tournament 1 removed
14.10 15:01:29 TIMER: Clans cache...
14.10 15:01:29 TIMER: Clans cache: 0ms
14.10 15:01:29 TIMER: Clans cache...
14.10 15:01:29 TIMER: Clans cache: 0ms
14.10 15:01:29 TIMER: Clans cache...
14.10 15:01:29 TIMER: Clans cache: 0ms
14.10 15:01:29 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 15:01:29 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 15:01:29 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 15:01:29 TIME: core/server.query : 0.99 ms
14.10 15:01:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 15:01:29 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 15:01:29 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 15:01:29 STATS: cache [battle], database [360 calls, 0 reads, 0 writes]
14.10 15:01:29 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 15:01:29 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 15:01:29 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 15:01:29 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 15:01:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 15:01:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 15:01:29 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 15:01:29 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
14.10 15:01:29 STATS: cache [user], database [360 calls, 1 reads, 1 writes]
14.10 15:01:29 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 15:01:29 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 3.46 ms]
14.10 15:01:29 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.12 ms]
14.10 15:01:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 15:01:29 TIME: core/cache.update : 0.33 ms
14.10 15:01:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 15:01:29 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 15:01:29 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
14.10 15:01:29 STATS: cache [questdata], database [360 calls, 1 reads, 0 writes]
14.10 15:01:29 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 15:01:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:01:29 TIME: core/cache.update : 0.29 ms
14.10 15:01:29 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 15:01:29 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 15:01:29 TIME: core/user.logoutPost : 0.06 ms
14.10 15:01:29 TIMER: Clans cache...
14.10 15:01:29 TIMER: Clans cache: 0ms
14.10 15:01:29 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 15:04:30 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 15:04:40 BLOCKREMOVE: user 34 removed
14.10 15:04:40 BLOCKREMOVE: questdata 34 removed
14.10 15:05:29 TIMER: Clans cache...
14.10 15:05:29 TIMER: Clans cache: 0ms
14.10 15:05:29 TIMER: Clans cache...
14.10 15:05:29 TIMER: Clans cache: 0ms
14.10 15:07:30 TIMER: Clans cache...
14.10 15:07:30 TIMER: Clans cache: 0ms
14.10 15:08:08 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 15:08:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 15:08:08 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 15:08:08 TIME: core/server.query : 0.95 ms
14.10 15:08:08 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 15:08:08 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 15:08:08 TIME: core/user.isOnlineID : 0.07 ms
14.10 15:08:08 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 15:08:08 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 15:08:08 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
14.10 15:08:08 STATS: cache [user], database [579 calls, 1 reads, 2 writes]
14.10 15:08:08 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
14.10 15:08:08 READDB: SELECT * FROM Users WHERE ID = 34
14.10 15:08:08 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.68 ms]
14.10 15:08:08 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.16 ms]
14.10 15:08:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 15:08:08 TIME: core/cache.get : 1.39 ms
14.10 15:08:08 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 15:08:08 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 15:08:08 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
14.10 15:08:08 STATS: cache [questdata], database [579 calls, 1 reads, 1 writes]
14.10 15:08:08 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 15:08:08 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 15:08:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 15:08:08 TIME: core/cache.get : 0.78 ms
14.10 15:08:08 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 15:08:08 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 15:08:08 TIME: core/user.loginPost : 0.1 ms
14.10 15:08:13 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 15:08:13 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 15:08:13 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 15:08:13 TIME: core/server.query : 1.98 ms
14.10 15:08:13 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 15:08:13 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
14.10 15:08:13 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
14.10 15:08:13 STATS: cache [battle], database [584 calls, 1 reads, 0 writes]
14.10 15:08:13 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 15:08:13 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 15:08:13 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 15:08:13 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 15:08:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 15:08:13 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 15:08:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:08:13 TIME: core/cache.update : 0.24 ms
14.10 15:08:13 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 15:08:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:08:13 TIME: core/cache.update : 0.2 ms
14.10 15:08:13 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 15:08:13 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 15:08:13 TIME: core/user.logoutPost : 0.14 ms
14.10 15:08:14 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 15:08:14 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 15:08:24 BLOCKREMOVE: user 34 removed
14.10 15:08:24 BLOCKREMOVE: questdata 34 removed
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:08:30 TIMER: Clans cache...
14.10 15:08:30 TIMER: Clans cache: 0ms
14.10 15:23:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 15:23:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 15:23:41 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 15:23:41 TIME: core/server.query : 1.7 ms
14.10 15:23:41 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 15:23:41 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 15:23:41 TIME: core/user.isOnlineID : 0.1 ms
14.10 15:23:41 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 15:23:41 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 15:23:41 STATS: cache [user], segments [10 calls, 5 hits, 4 misses]
14.10 15:23:41 STATS: cache [user], database [1512 calls, 2 reads, 3 writes]
14.10 15:23:41 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
14.10 15:23:41 READDB: SELECT * FROM Users WHERE ID = 34
14.10 15:23:41 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2.16 ms]
14.10 15:23:41 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.12 ms]
14.10 15:23:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 15:23:41 TIME: core/cache.get : 2.38 ms
14.10 15:23:41 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 15:23:41 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 15:23:41 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
14.10 15:23:41 STATS: cache [questdata], database [1512 calls, 2 reads, 2 writes]
14.10 15:23:41 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
14.10 15:23:41 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 15:23:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 15:23:41 TIME: core/cache.get : 1.03 ms
14.10 15:23:41 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 15:23:41 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 15:23:41 TIME: core/user.loginPost : 0.09 ms
14.10 15:23:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 15:23:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:23:50 TIME: core/cache.update : 0.18 ms
14.10 15:23:50 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 15:23:51 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 15:23:51 DB: SELECT * FROM tournament
14.10 15:23:51 STATS: cache [tournament], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 15:23:51 STATS: cache [tournament], segments [6 calls, 3 hits, 2 misses]
14.10 15:23:51 STATS: cache [tournament], database [1522 calls, 2 reads, 0 writes]
14.10 15:23:51 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 15:23:51 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 15:23:51 DB: SELECT name FROM users WHERE id = 34
14.10 15:23:51 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 15:23:51 TIME: vdl/cache.tournament.getAvailableTournament : 3.76 ms
14.10 15:24:02 BLOCKREMOVE: tournament 1 removed
14.10 15:24:26 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 34, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 15:24:26 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 15:24:26 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => userExist, _type => vdl/cache.tournament.addUsers }
14.10 15:24:26 TIME: vdl/cache.tournament.addUsers : 1.34 ms
14.10 15:24:30 TIMER: Clans cache...
14.10 15:24:30 TIMER: Clans cache: 0ms
14.10 15:24:37 BLOCKREMOVE: tournament 1 removed
14.10 15:25:30 TIMER: Clans cache...
14.10 15:25:30 TIMER: Clans cache: 0ms
14.10 15:25:30 TIMER: Clans cache...
14.10 15:25:30 TIMER: Clans cache: 0ms
14.10 15:27:29 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 15:27:29 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 15:27:29 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 15:27:29 TIME: core/server.query : 1.17 ms
14.10 15:27:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 15:27:29 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
14.10 15:27:29 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
14.10 15:27:29 STATS: cache [battle], database [1740 calls, 2 reads, 0 writes]
14.10 15:27:29 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 15:27:29 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 15:27:29 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 15:27:29 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 15:27:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 15:27:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 15:27:29 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 15:27:29 STATS: cache [user], segments [13 calls, 6 hits, 6 misses]
14.10 15:27:29 STATS: cache [user], database [1740 calls, 3 reads, 4 writes]
14.10 15:27:29 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
14.10 15:27:29 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1.95 ms]
14.10 15:27:29 STATS: cache manager [1], update [7 calls, total 0 sec spent, avg 0.15 ms]
14.10 15:27:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 15:27:29 TIME: core/cache.update : 0.64 ms
14.10 15:27:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 15:27:29 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 15:27:29 STATS: cache [questdata], segments [11 calls, 4 hits, 6 misses]
14.10 15:27:29 STATS: cache [questdata], database [1740 calls, 3 reads, 2 writes]
14.10 15:27:29 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
14.10 15:27:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:27:29 TIME: core/cache.update : 0.36 ms
14.10 15:27:29 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 15:27:29 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 15:27:29 TIME: core/user.logoutPost : 0.15 ms
14.10 15:27:30 TIMER: Clans cache...
14.10 15:27:30 TIMER: Clans cache: 0ms
14.10 15:27:30 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 15:27:30 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 15:27:40 BLOCKREMOVE: user 34 removed
14.10 15:27:40 BLOCKREMOVE: questdata 34 removed
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM tournament WHERE startdate = 2016-14-10 15:10 AND winner = -1 AND status = 'starting', _type => core/server.query }
14.10 15:28:30 DB: SELECT * FROM tournament WHERE startdate = 2016-14-10 15:10 AND winner = -1 AND status = 'starting'
14.10 15:28:30 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 15:28:30 TIME: core/server.query : 19.18 ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:28:30 TIMER: Clans cache...
14.10 15:28:30 TIMER: Clans cache: 0ms
14.10 15:41:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 15:41:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 15:41:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 15:41:47 TIME: core/server.query : 2.18 ms
14.10 15:41:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 15:41:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 15:41:47 TIME: core/user.isOnlineID : 0.04 ms
14.10 15:41:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 15:41:47 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 15:41:47 STATS: cache [user], segments [15 calls, 8 hits, 6 misses]
14.10 15:41:47 STATS: cache [user], database [2598 calls, 3 reads, 5 writes]
14.10 15:41:47 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
14.10 15:41:47 READDB: SELECT * FROM Users WHERE ID = 34
14.10 15:41:47 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.76 ms]
14.10 15:41:47 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.16 ms]
14.10 15:41:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 15:41:47 TIME: core/cache.get : 0.82 ms
14.10 15:41:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 15:41:47 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
14.10 15:41:47 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
14.10 15:41:47 STATS: cache [questdata], database [2598 calls, 3 reads, 3 writes]
14.10 15:41:47 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
14.10 15:41:47 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 15:41:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 15:41:47 TIME: core/cache.get : 0.53 ms
14.10 15:41:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 15:41:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 15:41:47 TIME: core/user.loginPost : 0.06 ms
14.10 15:41:50 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 15:41:50 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 15:41:50 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 15:41:50 TIME: core/server.query : 0.86 ms
14.10 15:41:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 15:41:50 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
14.10 15:41:50 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
14.10 15:41:50 STATS: cache [battle], database [2600 calls, 3 reads, 0 writes]
14.10 15:41:50 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 15:41:50 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 15:41:50 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 15:41:50 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 15:41:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 15:41:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 15:41:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:41:50 TIME: core/cache.update : 0.07 ms
14.10 15:41:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 15:41:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:41:50 TIME: core/cache.update : 0.07 ms
14.10 15:41:50 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 15:41:50 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 15:41:50 TIME: core/user.logoutPost : 0.05 ms
14.10 15:41:53 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 15:41:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 15:42:03 BLOCKREMOVE: user 34 removed
14.10 15:42:03 BLOCKREMOVE: questdata 34 removed
14.10 15:42:30 TIMER: Clans cache...
14.10 15:42:30 TIMER: Clans cache: 0ms
14.10 15:42:36 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 15:42:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 15:42:36 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 15:42:36 TIME: core/server.query : 2.59 ms
14.10 15:42:36 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 15:42:36 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 15:42:36 TIME: core/user.isOnlineID : 0.07 ms
14.10 15:42:36 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 15:42:36 READDB: SELECT * FROM Users WHERE ID = 34
14.10 15:42:36 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 15:42:36 TIME: core/cache.get : 1.46 ms
14.10 15:42:36 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 15:42:36 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 15:42:36 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 15:42:36 TIME: core/cache.get : 0.93 ms
14.10 15:42:36 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 15:42:36 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 15:42:36 TIME: core/user.loginPost : 0.09 ms
14.10 15:42:44 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 15:42:44 DB: SELECT * FROM tournament
14.10 15:42:44 STATS: cache [tournament], get [6 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
14.10 15:42:44 STATS: cache [tournament], segments [8 calls, 3 hits, 4 misses]
14.10 15:42:44 STATS: cache [tournament], database [2655 calls, 4 reads, 0 writes]
14.10 15:42:44 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 15:42:44 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 15:42:44 DB: SELECT name FROM users WHERE id = 34
14.10 15:42:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 15:42:44 TIME: vdl/cache.tournament.getAvailableTournament : 4.57 ms
14.10 15:42:45 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 15:42:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:42:45 TIME: core/cache.update : 0.16 ms
14.10 15:42:45 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 15:42:51 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 34, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 15:42:51 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => userExist, _type => vdl/cache.tournament.addUsers }
14.10 15:42:51 TIME: vdl/cache.tournament.addUsers : 0.22 ms
14.10 15:42:51 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 15:42:51 DB: SELECT * FROM tournament
14.10 15:42:51 DB: SELECT name FROM users WHERE id = 34
14.10 15:42:51 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10 15:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 15:42:51 TIME: vdl/cache.tournament.getAvailableTournament : 1.3 ms
14.10 15:42:53 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 15:42:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [34] }
14.10 15:42:53 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.11 ms
14.10 15:42:53 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], _type => vdl/cache.tournament.setGrid }
14.10 15:42:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [], errorCode => ok, _type => vdl/cache.tournament.setGrid }
14.10 15:42:53 TIME: vdl/cache.tournament.setGrid : 0.08 ms
14.10 15:43:04 BLOCKREMOVE: tournament 1 removed
14.10 15:43:30 TIMER: Clans cache...
14.10 15:43:30 TIMER: Clans cache: 0ms
14.10 15:44:01 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 15:44:01 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 15:44:01 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 15:44:01 TIME: core/server.query : 2.08 ms
14.10 15:44:01 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 15:44:01 STATS: cache [battle], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 4 not found]
14.10 15:44:01 STATS: cache [battle], segments [5 calls, 0 hits, 4 misses]
14.10 15:44:01 STATS: cache [battle], database [2731 calls, 4 reads, 0 writes]
14.10 15:44:01 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 15:44:01 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 15:44:01 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 15:44:01 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 15:44:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 15:44:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 15:44:01 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
14.10 15:44:01 STATS: cache [user], segments [22 calls, 11 hits, 10 misses]
14.10 15:44:01 STATS: cache [user], database [2731 calls, 5 reads, 7 writes]
14.10 15:44:01 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
14.10 15:44:01 STATS: cache manager [1], get [10 calls, total 0.01 sec spent, avg 1.48 ms]
14.10 15:44:01 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.13 ms]
14.10 15:44:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 15:44:01 TIME: core/cache.update : 0.36 ms
14.10 15:44:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 15:44:01 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
14.10 15:44:01 STATS: cache [questdata], segments [19 calls, 8 hits, 10 misses]
14.10 15:44:01 STATS: cache [questdata], database [2731 calls, 5 reads, 4 writes]
14.10 15:44:01 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
14.10 15:44:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 15:44:01 TIME: core/cache.update : 0.34 ms
14.10 15:44:01 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 15:44:01 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 15:44:01 TIME: core/user.logoutPost : 0.11 ms
14.10 15:44:01 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 15:44:01 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 15:44:11 BLOCKREMOVE: user 34 removed
14.10 15:44:11 BLOCKREMOVE: questdata 34 removed
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM tournament WHERE startdate = 2016-14-10 15:10 AND winner = -1 AND status = 'starting', _type => core/server.query }
14.10 15:44:30 DB: SELECT * FROM tournament WHERE startdate = 2016-14-10 15:10 AND winner = -1 AND status = 'starting'
14.10 15:44:30 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 15:44:30 TIME: core/server.query : 17.2 ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
14.10 15:44:30 TIMER: Clans cache...
14.10 15:44:30 TIMER: Clans cache: 0ms
