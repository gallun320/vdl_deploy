14.10 16:05:07 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 16:05:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 16:05:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 16:05:07 TIME: core/server.query : 1.34 ms
14.10 16:05:07 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 16:05:07 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 16:05:07 TIME: core/user.isOnlineID : 0.11 ms
14.10 16:05:07 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 16:05:07 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
14.10 16:05:07 STATS: cache [user], segments [24 calls, 13 hits, 10 misses]
14.10 16:05:07 STATS: cache [user], database [3997 calls, 5 reads, 8 writes]
14.10 16:05:07 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
14.10 16:05:07 READDB: SELECT * FROM Users WHERE ID = 34
14.10 16:05:07 STATS: cache manager [1], get [11 calls, total 0.02 sec spent, avg 1.48 ms]
14.10 16:05:07 STATS: cache manager [1], update [13 calls, total 0 sec spent, avg 0.14 ms]
14.10 16:05:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 16:05:07 TIME: core/cache.get : 1.93 ms
14.10 16:05:07 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 16:05:07 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
14.10 16:05:07 STATS: cache [questdata], segments [21 calls, 10 hits, 10 misses]
14.10 16:05:07 STATS: cache [questdata], database [3997 calls, 5 reads, 5 writes]
14.10 16:05:07 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
14.10 16:05:07 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 16:05:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 16:05:07 TIME: core/cache.get : 0.94 ms
14.10 16:05:07 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 16:05:07 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 16:05:07 TIME: core/user.loginPost : 0.1 ms
14.10 16:05:15 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:05:15 DB: SELECT * FROM tournament
14.10 16:05:15 STATS: cache [tournament], get [10 calls, 4 cache hits, 5 cache misses, 0 same version, 0 not found]
14.10 16:05:15 STATS: cache [tournament], segments [13 calls, 7 hits, 5 misses]
14.10 16:05:15 STATS: cache [tournament], database [4005 calls, 5 reads, 0 writes]
14.10 16:05:15 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 16:05:15 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 16:05:15 DB: SELECT name FROM users WHERE id = 34
14.10 16:05:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_16:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:05:15 TIME: vdl/cache.tournament.getAvailableTournament : 4.49 ms
14.10 16:05:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 16:05:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 16:05:15 TIME: core/cache.update : 0.21 ms
14.10 16:05:16 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 16:05:26 BLOCKREMOVE: tournament 1 removed
14.10 16:05:30 TIMER: Clans cache...
14.10 16:05:30 TIMER: Clans cache: 0ms
14.10 16:05:30 TIMER: Clans cache...
14.10 16:05:30 TIMER: Clans cache: 0ms
14.10 16:05:30 TIMER: Clans cache...
14.10 16:05:30 TIMER: Clans cache: 0ms
14.10 16:08:29 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 16:08:29 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 16:08:29 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 16:08:29 TIME: core/server.query : 1.41 ms
14.10 16:08:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 16:08:29 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 5 not found]
14.10 16:08:29 STATS: cache [battle], segments [6 calls, 0 hits, 5 misses]
14.10 16:08:29 STATS: cache [battle], database [4199 calls, 5 reads, 0 writes]
14.10 16:08:29 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 16:08:29 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 16:08:29 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 16:08:29 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 16:08:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 16:08:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 16:08:29 STATS: cache [user], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
14.10 16:08:29 STATS: cache [user], segments [27 calls, 14 hits, 12 misses]
14.10 16:08:29 STATS: cache [user], database [4199 calls, 6 reads, 9 writes]
14.10 16:08:29 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
14.10 16:08:29 STATS: cache manager [1], get [12 calls, total 0.02 sec spent, avg 1.42 ms]
14.10 16:08:29 STATS: cache manager [1], update [15 calls, total 0 sec spent, avg 0.14 ms]
14.10 16:08:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 16:08:29 TIME: core/cache.update : 0.27 ms
14.10 16:08:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 16:08:29 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
14.10 16:08:29 STATS: cache [questdata], segments [23 calls, 10 hits, 12 misses]
14.10 16:08:29 STATS: cache [questdata], database [4199 calls, 6 reads, 5 writes]
14.10 16:08:29 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
14.10 16:08:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 16:08:29 TIME: core/cache.update : 0.24 ms
14.10 16:08:29 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 16:08:29 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 16:08:29 TIME: core/user.logoutPost : 0.11 ms
14.10 16:08:30 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 16:08:30 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 16:08:30 TIMER: Clans cache...
14.10 16:08:30 TIMER: Clans cache: 0ms
14.10 16:08:40 BLOCKREMOVE: user 34 removed
14.10 16:08:40 BLOCKREMOVE: questdata 34 removed
14.10 16:09:30 TIMER: Clans cache...
14.10 16:09:30 TIMER: Clans cache: 0ms
14.10 16:09:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 16:09:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 16:09:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 16:09:55 TIME: core/server.query : 0.5 ms
14.10 16:09:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 16:09:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 16:09:55 TIME: core/user.isOnlineID : 0.04 ms
14.10 16:09:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 16:09:55 STATS: cache [user], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
14.10 16:09:55 STATS: cache [user], segments [29 calls, 16 hits, 12 misses]
14.10 16:09:55 STATS: cache [user], database [4285 calls, 6 reads, 10 writes]
14.10 16:09:55 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
14.10 16:09:55 READDB: SELECT * FROM Users WHERE ID = 34
14.10 16:09:55 STATS: cache manager [1], get [13 calls, total 0.02 sec spent, avg 1.37 ms]
14.10 16:09:55 STATS: cache manager [1], update [16 calls, total 0 sec spent, avg 0.14 ms]
14.10 16:09:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 16:09:55 TIME: core/cache.get : 1.03 ms
14.10 16:09:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 16:09:55 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
14.10 16:09:55 STATS: cache [questdata], segments [25 calls, 12 hits, 12 misses]
14.10 16:09:55 STATS: cache [questdata], database [4285 calls, 6 reads, 6 writes]
14.10 16:09:55 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
14.10 16:09:55 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 16:09:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 16:09:55 TIME: core/cache.get : 0.61 ms
14.10 16:09:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 16:09:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 16:09:55 TIME: core/user.loginPost : 0.06 ms
14.10 16:10:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 16:10:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 16:10:00 TIME: core/cache.update : 0.11 ms
14.10 16:10:01 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 16:10:04 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:10:04 DB: SELECT * FROM tournament
14.10 16:10:04 STATS: cache [tournament], get [11 calls, 4 cache hits, 6 cache misses, 0 same version, 0 not found]
14.10 16:10:04 STATS: cache [tournament], segments [14 calls, 7 hits, 6 misses]
14.10 16:10:04 STATS: cache [tournament], database [4294 calls, 6 reads, 0 writes]
14.10 16:10:04 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 16:10:04 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 16:10:04 DB: SELECT name FROM users WHERE id = 34
14.10 16:10:04 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_16:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:10:04 TIME: vdl/cache.tournament.getAvailableTournament : 3.35 ms
14.10 16:10:12 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
14.10 16:10:12 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [34] }
14.10 16:10:12 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.08 ms
14.10 16:10:12 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [], _type => vdl/cache.tournament.setUsersTournament }
14.10 16:10:12 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
14.10 16:10:12 TIME: vdl/cache.tournament.setUsersTournament : 0.08 ms
14.10 16:10:12 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:10:12 DB: SELECT * FROM tournament
14.10 16:10:12 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, startdate => 2016-14-10_16:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:10:12 TIME: vdl/cache.tournament.getAvailableTournament : 0.92 ms
14.10 16:10:13 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', round = E'1', startdate = E'2016-14-10_16:30', params = E'{"params":{"usersList":[]}}' WHERE ID = 1
14.10 16:10:17 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 34, tournament => 1, _type => vdl/cache.tournament.addUsers }
14.10 16:10:17 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
14.10 16:10:17 TIME: vdl/cache.tournament.addUsers : 0.08 ms
14.10 16:10:17 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:10:17 DB: SELECT * FROM tournament
14.10 16:10:17 DB: SELECT name FROM users WHERE id = 34
14.10 16:10:17 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_16:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:10:17 TIME: vdl/cache.tournament.getAvailableTournament : 0.81 ms
14.10 16:10:18 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', round = E'1', startdate = E'2016-14-10_16:30', params = E'{"params":{"usersList":[34]}}' WHERE ID = 1
14.10 16:10:28 BLOCKREMOVE: tournament 1 removed
14.10 16:10:30 TIMER: Clans cache...
14.10 16:10:30 TIMER: Clans cache: 0ms
14.10 16:10:30 TIMER: Clans cache...
14.10 16:10:30 TIMER: Clans cache: 0ms
14.10 16:10:30 TIMER: Clans cache...
14.10 16:10:30 TIMER: Clans cache: 0ms
14.10 16:12:40 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 16:12:40 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 16:12:40 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 16:12:40 TIME: core/server.query : 0.62 ms
14.10 16:12:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 16:12:40 STATS: cache [battle], get [7 calls, 0 cache hits, 6 cache misses, 0 same version, 6 not found]
14.10 16:12:40 STATS: cache [battle], segments [7 calls, 0 hits, 6 misses]
14.10 16:12:40 STATS: cache [battle], database [4449 calls, 6 reads, 0 writes]
14.10 16:12:40 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 16:12:40 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 16:12:40 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 16:12:40 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 16:12:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 16:12:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 16:12:40 STATS: cache [user], get [7 calls, 0 cache hits, 7 cache misses, 0 same version, 0 not found]
14.10 16:12:40 STATS: cache [user], segments [32 calls, 17 hits, 14 misses]
14.10 16:12:40 STATS: cache [user], database [4449 calls, 7 reads, 11 writes]
14.10 16:12:40 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
14.10 16:12:40 STATS: cache manager [1], get [14 calls, total 0.02 sec spent, avg 1.31 ms]
14.10 16:12:40 STATS: cache manager [1], update [18 calls, total 0 sec spent, avg 0.14 ms]
14.10 16:12:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 16:12:40 TIME: core/cache.update : 0.45 ms
14.10 16:12:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 16:12:40 STATS: cache [questdata], get [7 calls, 0 cache hits, 7 cache misses, 0 same version, 0 not found]
14.10 16:12:40 STATS: cache [questdata], segments [27 calls, 12 hits, 14 misses]
14.10 16:12:40 STATS: cache [questdata], database [4449 calls, 7 reads, 6 writes]
14.10 16:12:40 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
14.10 16:12:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 16:12:40 TIME: core/cache.update : 0.14 ms
14.10 16:12:40 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 16:12:40 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 16:12:40 TIME: core/user.logoutPost : 0.05 ms
14.10 16:12:40 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 16:12:40 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 16:12:50 BLOCKREMOVE: user 34 removed
14.10 16:12:50 BLOCKREMOVE: questdata 34 removed
14.10 16:13:30 TIMER: Clans cache...
14.10 16:13:30 TIMER: Clans cache: 0ms
14.10 16:13:30 TIMER: Clans cache...
14.10 16:13:30 TIMER: Clans cache: 0ms
14.10 16:13:30 TIMER: Clans cache...
14.10 16:13:30 TIMER: Clans cache: 0ms
14.10 16:13:30 TIMER: Clans cache...
14.10 16:13:30 TIMER: Clans cache: 0ms
14.10 16:13:30 TIMER: Clans cache...
14.10 16:13:30 TIMER: Clans cache: 0ms
14.10 16:13:30 TIMER: Clans cache...
14.10 16:13:30 TIMER: Clans cache: 0ms
14.10 16:13:30 TIMER: Clans cache...
14.10 16:13:30 TIMER: Clans cache: 0ms
14.10 16:19:35 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 16:19:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 16:19:35 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 16:19:35 TIME: core/server.query : 1.48 ms
14.10 16:19:35 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 16:19:35 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 16:19:35 TIME: core/user.isOnlineID : 0.06 ms
14.10 16:19:35 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 16:19:35 STATS: cache [user], get [7 calls, 0 cache hits, 7 cache misses, 0 same version, 0 not found]
14.10 16:19:35 STATS: cache [user], segments [34 calls, 19 hits, 14 misses]
14.10 16:19:35 STATS: cache [user], database [4864 calls, 7 reads, 12 writes]
14.10 16:19:35 STATS: cache [user], lock [8 calls, 8 attempts, 0 failures]
14.10 16:19:35 READDB: SELECT * FROM Users WHERE ID = 34
14.10 16:19:35 STATS: cache manager [1], get [15 calls, total 0.02 sec spent, avg 1.28 ms]
14.10 16:19:35 STATS: cache manager [1], update [19 calls, total 0 sec spent, avg 0.14 ms]
14.10 16:19:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 16:19:35 TIME: core/cache.get : 1.01 ms
14.10 16:19:35 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 16:19:35 STATS: cache [questdata], get [7 calls, 0 cache hits, 7 cache misses, 0 same version, 0 not found]
14.10 16:19:35 STATS: cache [questdata], segments [29 calls, 14 hits, 14 misses]
14.10 16:19:35 STATS: cache [questdata], database [4864 calls, 7 reads, 7 writes]
14.10 16:19:35 STATS: cache [questdata], lock [8 calls, 8 attempts, 0 failures]
14.10 16:19:35 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 16:19:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 16:19:35 TIME: core/cache.get : 0.61 ms
14.10 16:19:35 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 16:19:35 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 16:19:35 TIME: core/user.loginPost : 0.06 ms
14.10 16:19:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 16:19:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 16:19:40 TIME: core/cache.update : 0.15 ms
14.10 16:19:41 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 16:19:42 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:19:42 DB: SELECT * FROM tournament
14.10 16:19:42 STATS: cache [tournament], get [17 calls, 9 cache hits, 7 cache misses, 0 same version, 0 not found]
14.10 16:19:42 STATS: cache [tournament], segments [23 calls, 15 hits, 7 misses]
14.10 16:19:42 STATS: cache [tournament], database [4872 calls, 7 reads, 2 writes]
14.10 16:19:42 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 16:19:42 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 16:19:42 DB: SELECT name FROM users WHERE id = 34
14.10 16:19:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_16:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:19:42 TIME: vdl/cache.tournament.getAvailableTournament : 3.08 ms
14.10 16:19:53 BLOCKREMOVE: tournament 1 removed
14.10 16:42:52 TIMER: Starting timer...
14.10 16:42:52 TIMER: Timer running...
14.10 16:42:52 DB: SELECT * FROM GameVars
14.10 16:42:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:42:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:42:52 DB: SELECT * FROM Shops WHERE ID = 1
14.10 16:42:52 TEMP: load ./tmp/quest_daily_ids
14.10 16:42:52 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 16:42:52 TEMP: save ./tmp/quest_daily_ids
14.10 16:42:52 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 16:42:52 QUEUE: vdl.0 (thread) response server.login
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM LocalizationStrings
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 9.93 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM GameVars
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.76 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.75 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.52 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.69 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 1.31 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 16:42:52 TIME: core/quest.getDaily : 0.05 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM UserAttributeTypes
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.49 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM UserVariableTypes
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.52 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 16:42:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 1.34 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM ItemGroups
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.43 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM Bundles ORDER BY ID
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.68 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.6 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 16:42:52 TIME: core/shop.getList : 0.07 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM EffectAttributeTypes
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.4 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM Effects
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.76 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 16:42:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.75 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 16:42:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.65 ms
14.10 16:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 16:42:52 DB: SELECT * FROM Badges
14.10 16:42:52 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:52 TIME: core/server.query : 0.43 ms
14.10 16:42:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 16:42:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 16:42:53 QUEUE: vdl.0 (thread) response core/server.query
14.10 16:42:53 TIME: core/server.query : 1.21 ms
14.10 16:42:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 16:42:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 16:42:53 TIME: core/user.isOnlineID : 0.06 ms
14.10 16:42:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 16:42:53 READDB: SELECT * FROM Users WHERE ID = 34
14.10 16:42:53 QUEUE: vdl.0 (thread) response core/cache.get
14.10 16:42:53 TIME: core/cache.get : 2.2 ms
14.10 16:42:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 16:42:53 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 16:42:53 QUEUE: vdl.0 (thread) response core/cache.get
14.10 16:42:53 TIME: core/cache.get : 0.7 ms
14.10 16:42:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 16:42:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 16:42:53 TIME: core/user.loginPost : 0.08 ms
14.10 16:43:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 16:43:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 16:43:02 TIME: core/cache.update : 0.13 ms
14.10 16:43:03 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 16:43:28 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:43:28 DB: SELECT * FROM tournament
14.10 16:43:28 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 16:43:28 DB: SELECT name FROM users WHERE id = 34
14.10 16:43:28 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_16:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:43:28 TIME: vdl/cache.tournament.getAvailableTournament : 3.37 ms
14.10 16:43:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:43:37 DB: SELECT * FROM tournament
14.10 16:43:37 DB: SELECT name FROM users WHERE id = 34
14.10 16:43:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid34, id => 34 }], battleActive => null, startdate => 2016-14-10_16:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 16:43:37 TIME: vdl/cache.tournament.getAvailableTournament : 1.37 ms
14.10 16:43:47 BLOCKREMOVE: tournament 1 removed
14.10 16:43:52 TIMER: Clans cache...
14.10 16:43:52 TIMER: Clans cache: 0ms
14.10 16:43:52 TIMER: Clans cache...
14.10 16:43:52 TIMER: Clans cache: 0ms
14.10 16:43:52 TIMER: Clans cache...
14.10 16:43:52 TIMER: Clans cache: 0ms
14.10 16:43:52 TIMER: Clans cache...
14.10 16:43:52 TIMER: Clans cache: 0ms
14.10 16:43:52 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 16:43:52 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 16:43:52 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 16:43:52 TIME: core/server.query : 1.22 ms
14.10 16:43:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 16:43:52 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 16:43:52 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 16:43:52 STATS: cache [battle], database [241 calls, 0 reads, 0 writes]
14.10 16:43:52 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 16:43:52 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 16:43:52 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 16:43:52 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 113
Called from modules/VDLCache.hx line 106
Called from modules/VDLCache.hx line 76
Called from snipe/cache/CacheServer.hx line 487
14.10 16:43:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 16:43:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 16:43:52 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 16:43:52 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
14.10 16:43:52 STATS: cache [user], database [241 calls, 1 reads, 1 writes]
14.10 16:43:52 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 16:43:52 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.39 ms]
14.10 16:43:52 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.15 ms]
14.10 16:43:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 16:43:52 TIME: core/cache.update : 0.47 ms
14.10 16:43:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 16:43:52 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 16:43:52 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
14.10 16:43:52 STATS: cache [questdata], database [241 calls, 1 reads, 0 writes]
14.10 16:43:52 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 16:43:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 16:43:52 TIME: core/cache.update : 0.35 ms
14.10 16:43:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 16:43:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 16:43:52 TIME: core/user.logoutPost : 0.12 ms
14.10 16:46:53 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 16:46:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 16:47:03 BLOCKREMOVE: user 34 removed
14.10 16:47:03 BLOCKREMOVE: questdata 34 removed
