18.10 18:10:03 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:10:03 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:10:03 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:10:03 TIME: core/server.query : 0.86 ms
18.10 18:10:03 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:10:03 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:10:03 TIME: core/user.isOnlineID : 0.08 ms
18.10 18:10:03 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:10:03 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
18.10 18:10:03 STATS: cache [user], segments [16 calls, 9 hits, 6 misses]
18.10 18:10:03 STATS: cache [user], database [9744 calls, 3 reads, 6 writes]
18.10 18:10:03 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
18.10 18:10:03 READDB: SELECT * FROM Users WHERE ID = 2
18.10 18:10:03 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.43 ms]
18.10 18:10:03 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.11 ms]
18.10 18:10:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:10:03 TIME: core/cache.get : 1.28 ms
18.10 18:10:03 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:10:03 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
18.10 18:10:03 STATS: cache [questdata], segments [13 calls, 6 hits, 6 misses]
18.10 18:10:03 STATS: cache [questdata], database [9744 calls, 3 reads, 3 writes]
18.10 18:10:03 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
18.10 18:10:03 READDB: SELECT * FROM UserQuests WHERE ID = 2
18.10 18:10:03 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:10:03 TIME: core/cache.get : 0.79 ms
18.10 18:10:03 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:10:03 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
18.10 18:10:03 TIME: core/user.loginPost : 0.1 ms
18.10 18:10:07 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:10:07 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:10:07 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:10:07 TIME: core/server.query : 1.28 ms
18.10 18:10:07 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:10:07 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
18.10 18:10:07 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
18.10 18:10:07 STATS: cache [battle], database [9748 calls, 3 reads, 0 writes]
18.10 18:10:07 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
18.10 18:10:07 READDB: SELECT * FROM Battle WHERE ID = 0
18.10 18:10:07 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
18.10 18:10:07 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
18.10 18:10:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:10:07 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:10:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:10:07 TIME: core/cache.update : 0.13 ms
18.10 18:10:07 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:10:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:10:07 TIME: core/cache.update : 0.11 ms
18.10 18:10:07 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:10:07 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:10:07 TIME: core/user.logoutPost : 0.09 ms
18.10 18:10:08 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 2
18.10 18:10:08 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
18.10 18:10:18 BLOCKREMOVE: user 2 removed
18.10 18:10:18 BLOCKREMOVE: questdata 2 removed
18.10 18:10:22 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:10:22 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:10:22 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:10:22 TIME: core/server.query : 0.95 ms
18.10 18:10:22 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:10:22 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:10:22 TIME: core/user.isOnlineID : 0.1 ms
18.10 18:10:22 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:10:22 READDB: SELECT * FROM Users WHERE ID = 2
18.10 18:10:22 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:10:22 TIME: core/cache.get : 1.38 ms
18.10 18:10:22 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:10:22 READDB: SELECT * FROM UserQuests WHERE ID = 2
18.10 18:10:22 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:10:22 TIME: core/cache.get : 0.82 ms
18.10 18:10:22 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:10:22 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
18.10 18:10:22 TIME: core/user.loginPost : 0.07 ms
18.10 18:10:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
18.10 18:10:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:10:29 TIME: core/cache.update : 0.22 ms
18.10 18:10:29 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:10:29 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:10:29 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:10:29 TIME: core/server.query : 0.76 ms
18.10 18:10:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:10:29 READDB: SELECT * FROM Battle WHERE ID = 0
18.10 18:10:29 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
18.10 18:10:29 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
18.10 18:10:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:10:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:10:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.10 18:10:29 TIME: core/cache.update : 0.15 ms
18.10 18:10:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:10:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:10:29 TIME: core/cache.update : 0.1 ms
18.10 18:10:29 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:10:29 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:10:29 TIME: core/user.logoutPost : 0.07 ms
18.10 18:10:29 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 2
18.10 18:10:29 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
18.10 18:10:39 TIMER: Clans cache...
18.10 18:10:39 TIMER: Clans cache: 0ms
18.10 18:10:39 TIMER: Check tournament...
18.10 18:10:39 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:10' AND status = 'starting'
18.10 18:10:39 TIMER: Check tournament: 0ms
18.10 18:10:39 BLOCKREMOVE: user 2 removed
18.10 18:10:39 BLOCKREMOVE: questdata 2 removed
18.10 18:10:39 TIMER: Clans cache...
18.10 18:10:39 TIMER: Clans cache: 0ms
18.10 18:10:39 TIMER: Check tournament...
18.10 18:10:39 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:11' AND status = 'starting'
18.10 18:10:39 TIMER: Check tournament: 0ms
18.10 18:10:39 TIMER: Clans cache...
18.10 18:10:39 TIMER: Clans cache: 0ms
18.10 18:10:39 TIMER: Check tournament...
18.10 18:10:39 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:12' AND status = 'starting'
18.10 18:10:39 TIMER: Check tournament: 0ms
18.10 18:10:39 TIMER: Clans cache...
18.10 18:10:39 TIMER: Clans cache: 0ms
18.10 18:10:39 TIMER: Check tournament...
18.10 18:10:39 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:13' AND status = 'starting'
18.10 18:10:39 TIMER: Check tournament: 0ms
18.10 18:10:39 TIMER: Clans cache...
18.10 18:10:39 TIMER: Clans cache: 0ms
18.10 18:10:39 TIMER: Check tournament...
18.10 18:10:39 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:14' AND status = 'starting'
18.10 18:10:39 TIMER: Check tournament: 0ms
18.10 18:10:39 TIMER: Clans cache...
18.10 18:10:39 TIMER: Clans cache: 0ms
18.10 18:10:39 TIMER: Check tournament...
18.10 18:10:39 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:15' AND status = 'starting'
18.10 18:10:39 TIMER: Check tournament: 0ms
18.10 18:10:39 TIMER: Clans cache...
18.10 18:10:39 TIMER: Clans cache: 0ms
18.10 18:10:39 TIMER: Check tournament...
18.10 18:10:39 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:16' AND status = 'starting'
18.10 18:10:39 TIMER: Check tournament: 0ms
18.10 18:10:39 TIMER: Clans cache...
18.10 18:10:39 TIMER: Clans cache: 0ms
18.10 18:10:39 TIMER: Check tournament...
18.10 18:10:39 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:17' AND status = 'starting'
18.10 18:10:39 TIMER: Check tournament: 1ms
18.10 18:18:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:18:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:18:05 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:18:05 TIME: core/server.query : 1.05 ms
18.10 18:18:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:18:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:18:05 TIME: core/user.isOnlineID : 0.09 ms
18.10 18:18:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:18:05 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
18.10 18:18:05 STATS: cache [user], segments [25 calls, 14 hits, 10 misses]
18.10 18:18:05 STATS: cache [user], database [10226 calls, 5 reads, 8 writes]
18.10 18:18:05 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
18.10 18:18:05 READDB: SELECT * FROM Users WHERE ID = 2
18.10 18:18:05 STATS: cache manager [1], get [11 calls, total 0.01 sec spent, avg 1.23 ms]
18.10 18:18:05 STATS: cache manager [1], update [14 calls, total 0 sec spent, avg 0.09 ms]
18.10 18:18:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:18:05 TIME: core/cache.get : 1.32 ms
18.10 18:18:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:18:05 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
18.10 18:18:05 STATS: cache [questdata], segments [21 calls, 10 hits, 10 misses]
18.10 18:18:05 STATS: cache [questdata], database [10226 calls, 5 reads, 5 writes]
18.10 18:18:05 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
18.10 18:18:05 READDB: SELECT * FROM UserQuests WHERE ID = 2
18.10 18:18:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:18:05 TIME: core/cache.get : 0.98 ms
18.10 18:18:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:18:05 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
18.10 18:18:05 TIME: core/user.loginPost : 0.1 ms
18.10 18:18:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
18.10 18:18:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:18:14 TIME: core/cache.update : 0.11 ms
18.10 18:18:15 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 2
18.10 18:18:15 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:18:15 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:18:15 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:18:15 TIME: core/server.query : 0.76 ms
18.10 18:18:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:18:15 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 5 not found]
18.10 18:18:15 STATS: cache [battle], segments [6 calls, 0 hits, 5 misses]
18.10 18:18:15 STATS: cache [battle], database [10236 calls, 5 reads, 0 writes]
18.10 18:18:15 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
18.10 18:18:15 READDB: SELECT * FROM Battle WHERE ID = 0
18.10 18:18:15 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
18.10 18:18:15 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
18.10 18:18:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:18:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:18:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.10 18:18:15 TIME: core/cache.update : 0.17 ms
18.10 18:18:15 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:18:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:18:15 TIME: core/cache.update : 0.1 ms
18.10 18:18:15 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:18:15 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:18:15 TIME: core/user.logoutPost : 0.07 ms
18.10 18:18:16 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
18.10 18:18:20 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 2
18.10 18:18:26 BLOCKREMOVE: questdata 2 removed
18.10 18:18:30 BLOCKREMOVE: user 2 removed
18.10 18:23:06 TIMER: Starting timer...
18.10 18:23:06 DB: SELECT * FROM GameVars
18.10 18:23:06 TIMER: Timer running...
18.10 18:23:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.10 18:23:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.10 18:23:06 DB: SELECT * FROM Shops WHERE ID = 1
18.10 18:23:06 TEMP: load ./tmp/quest_daily_ids
18.10 18:23:06 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
18.10 18:23:06 TEMP: save ./tmp/quest_daily_ids
18.10 18:23:06 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
18.10 18:23:06 QUEUE: vdl.0 (thread) response server.login
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM LocalizationStrings
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 12.83 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM GameVars
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.02 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.57 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.1 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 2.3 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 3.51 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/quest.getDaily
18.10 18:23:06 TIME: core/quest.getDaily : 0.17 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM UserAttributeTypes
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 2.02 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM UserVariableTypes
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.02 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
18.10 18:23:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 3.6 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM ItemGroups
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.14 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM Bundles ORDER BY ID
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.11 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM BundleItems ORDER BY ID
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.44 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/shop.getList
18.10 18:23:06 TIME: core/shop.getList : 0.05 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM EffectAttributeTypes
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 0.97 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM Effects
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.07 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
18.10 18:23:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.35 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
18.10 18:23:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 1.88 ms
18.10 18:23:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
18.10 18:23:06 DB: SELECT * FROM Badges
18.10 18:23:06 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:23:06 TIME: core/server.query : 0.62 ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:24' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 1ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:25' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 1ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:26' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 1ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:27' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 1ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:28' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 0ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:29' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 0ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:30' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 0ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:31' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 0ms
18.10 18:23:06 TIMER: Clans cache...
18.10 18:23:06 TIMER: Clans cache: 0ms
18.10 18:23:06 TIMER: Check tournament...
18.10 18:23:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:32' AND status = 'starting'
18.10 18:23:06 TIMER: Check tournament: 0ms
18.10 18:32:26 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:32:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:32:26 QUEUE: vdl.0 (thread) response core/server.query
18.10 18:32:26 TIME: core/server.query : 1.82 ms
18.10 18:32:26 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:32:26 QUEUE: vdl.0 (thread) response core/user.isOnlineID
18.10 18:32:26 TIME: core/user.isOnlineID : 0.06 ms
18.10 18:32:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:32:26 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
18.10 18:32:26 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
18.10 18:32:26 STATS: cache [user], database [560 calls, 0 reads, 0 writes]
18.10 18:32:26 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
18.10 18:32:26 READDB: SELECT * FROM Users WHERE ID = 2
18.10 18:32:26 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.68 ms]
18.10 18:32:26 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
18.10 18:32:26 QUEUE: vdl.0 (thread) response core/cache.get
18.10 18:32:26 TIME: core/cache.get : 3.87 ms
18.10 18:32:26 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:32:26 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
18.10 18:32:26 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
18.10 18:32:26 STATS: cache [questdata], database [560 calls, 0 reads, 0 writes]
18.10 18:32:26 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
18.10 18:32:26 READDB: SELECT * FROM UserQuests WHERE ID = 2
18.10 18:32:26 QUEUE: vdl.0 (thread) response core/cache.get
18.10 18:32:26 TIME: core/cache.get : 1.34 ms
18.10 18:32:26 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:32:26 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
18.10 18:32:26 TIME: core/user.loginPost : 0.09 ms
18.10 18:32:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
18.10 18:32:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:32:31 TIME: core/cache.update : 0.14 ms
18.10 18:32:32 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 2
18.10 18:32:33 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:32:33 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:32:33 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:32:33 TIME: core/server.query : 1.5 ms
18.10 18:32:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:32:33 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
18.10 18:32:33 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
18.10 18:32:33 STATS: cache [battle], database [567 calls, 0 reads, 0 writes]
18.10 18:32:33 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
18.10 18:32:33 READDB: SELECT * FROM Battle WHERE ID = 0
18.10 18:32:33 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
18.10 18:32:33 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
18.10 18:32:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:32:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:32:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.10 18:32:33 TIME: core/cache.update : 0.16 ms
18.10 18:32:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:32:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:32:33 TIME: core/cache.update : 0.13 ms
18.10 18:32:33 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:32:33 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:32:33 TIME: core/user.logoutPost : 0.11 ms
18.10 18:32:33 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
18.10 18:32:37 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 2
18.10 18:32:43 BLOCKREMOVE: questdata 2 removed
18.10 18:32:47 BLOCKREMOVE: user 2 removed
18.10 18:33:06 TIMER: Clans cache...
18.10 18:33:06 TIMER: Clans cache: 0ms
18.10 18:33:06 TIMER: Check tournament...
18.10 18:33:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:33' AND status = 'starting'
18.10 18:33:06 TIMER: Check tournament: 0ms
18.10 18:33:06 TIMER: Clans cache...
18.10 18:33:06 TIMER: Clans cache: 0ms
18.10 18:33:06 TIMER: Check tournament...
18.10 18:33:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:34' AND status = 'starting'
18.10 18:33:06 TIMER: Check tournament: 0ms
18.10 18:33:06 TIMER: Clans cache...
18.10 18:33:06 TIMER: Clans cache: 0ms
18.10 18:33:06 TIMER: Check tournament...
18.10 18:33:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:35' AND status = 'starting'
18.10 18:33:06 TIMER: Check tournament: 0ms
18.10 18:33:06 TIMER: Clans cache...
18.10 18:33:06 TIMER: Clans cache: 0ms
18.10 18:33:06 TIMER: Check tournament...
18.10 18:33:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:36' AND status = 'starting'
18.10 18:33:06 TIMER: Check tournament: 1ms
18.10 18:36:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:36:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:36:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:36:37 TIME: core/server.query : 1.81 ms
18.10 18:36:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:36:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:36:37 TIME: core/user.isOnlineID : 0.08 ms
18.10 18:36:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:36:37 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
18.10 18:36:37 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
18.10 18:36:37 STATS: cache [user], database [811 calls, 1 reads, 2 writes]
18.10 18:36:37 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
18.10 18:36:37 READDB: SELECT * FROM Users WHERE ID = 2
18.10 18:36:37 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.44 ms]
18.10 18:36:37 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.04 ms]
18.10 18:36:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:36:37 TIME: core/cache.get : 2.61 ms
18.10 18:36:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:36:37 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
18.10 18:36:37 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
18.10 18:36:37 STATS: cache [questdata], database [811 calls, 1 reads, 1 writes]
18.10 18:36:37 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
18.10 18:36:37 READDB: SELECT * FROM UserQuests WHERE ID = 2
18.10 18:36:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:36:37 TIME: core/cache.get : 0.81 ms
18.10 18:36:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:36:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
18.10 18:36:37 TIME: core/user.loginPost : 0.09 ms
18.10 18:36:46 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:36:46 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:36:46 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:36:46 TIME: core/server.query : 1.77 ms
18.10 18:36:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:36:46 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
18.10 18:36:46 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
18.10 18:36:46 STATS: cache [battle], database [820 calls, 1 reads, 0 writes]
18.10 18:36:46 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
18.10 18:36:46 READDB: SELECT * FROM Battle WHERE ID = 0
18.10 18:36:46 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
18.10 18:36:46 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
18.10 18:36:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:36:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:36:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:36:46 TIME: core/cache.update : 0.14 ms
18.10 18:36:46 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:36:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:36:46 TIME: core/cache.update : 0.09 ms
18.10 18:36:46 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:36:46 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:36:46 TIME: core/user.logoutPost : 0.07 ms
18.10 18:36:46 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 2
18.10 18:36:46 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
18.10 18:36:56 BLOCKREMOVE: user 2 removed
18.10 18:36:56 BLOCKREMOVE: questdata 2 removed
18.10 18:37:06 TIMER: Clans cache...
18.10 18:37:06 TIMER: Clans cache: 0ms
18.10 18:37:06 TIMER: Check tournament...
18.10 18:37:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:37' AND status = 'starting'
18.10 18:37:06 TIMER: Check tournament: 0ms
18.10 18:37:06 TIMER: Clans cache...
18.10 18:37:06 TIMER: Clans cache: 0ms
18.10 18:37:06 TIMER: Check tournament...
18.10 18:37:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:38' AND status = 'starting'
18.10 18:37:06 TIMER: Check tournament: 0ms
18.10 18:37:06 TIMER: Clans cache...
18.10 18:37:06 TIMER: Clans cache: 0ms
18.10 18:37:06 TIMER: Check tournament...
18.10 18:37:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:39' AND status = 'starting'
18.10 18:37:06 TIMER: Check tournament: 0ms
18.10 18:37:06 TIMER: Clans cache...
18.10 18:37:06 TIMER: Clans cache: 0ms
18.10 18:37:06 TIMER: Check tournament...
18.10 18:37:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:40' AND status = 'starting'
18.10 18:37:06 TIMER: Check tournament: 0ms
18.10 18:40:34 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
18.10 18:40:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
18.10 18:40:34 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
18.10 18:40:34 TIME: core/server.query : 2.04 ms
18.10 18:40:34 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
18.10 18:40:34 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 18:40:34 TIME: core/user.isOnlineID : 0.1 ms
18.10 18:40:34 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
18.10 18:40:34 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
18.10 18:40:34 STATS: cache [user], segments [10 calls, 5 hits, 4 misses]
18.10 18:40:34 STATS: cache [user], database [1048 calls, 2 reads, 3 writes]
18.10 18:40:34 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
18.10 18:40:34 READDB: SELECT * FROM Users WHERE ID = 2
18.10 18:40:34 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.88 ms]
18.10 18:40:34 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.04 ms]
18.10 18:40:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1476799454, lastLoginDate => 292, lastLoadDate => 1019 }, effects => { list => [] } }}, version => 0, id => 2 } }
18.10 18:40:34 TIME: core/cache.get : 1.79 ms
18.10 18:40:34 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
18.10 18:40:34 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
18.10 18:40:34 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
18.10 18:40:34 STATS: cache [questdata], database [1048 calls, 2 reads, 2 writes]
18.10 18:40:34 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
18.10 18:40:34 READDB: SELECT * FROM UserQuests WHERE ID = 2
18.10 18:40:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
18.10 18:40:34 TIME: core/cache.get : 1.57 ms
18.10 18:40:34 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 18:40:34 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
18.10 18:40:34 TIME: core/user.loginPost : 0.11 ms
18.10 18:40:41 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
18.10 18:40:41 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
18.10 18:40:41 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 18:40:41 TIME: core/server.query : 0.78 ms
18.10 18:40:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 18:40:41 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
18.10 18:40:41 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
18.10 18:40:41 STATS: cache [battle], database [1055 calls, 2 reads, 0 writes]
18.10 18:40:41 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
18.10 18:40:41 READDB: SELECT * FROM Battle WHERE ID = 0
18.10 18:40:41 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
18.10 18:40:41 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
18.10 18:40:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 18:40:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
18.10 18:40:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:40:41 TIME: core/cache.update : 0.16 ms
18.10 18:40:41 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
18.10 18:40:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 18:40:41 TIME: core/cache.update : 0.13 ms
18.10 18:40:41 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
18.10 18:40:41 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 18:40:41 TIME: core/user.logoutPost : 0.1 ms
18.10 18:40:41 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1476799454,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 2
18.10 18:40:41 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
18.10 18:40:51 BLOCKREMOVE: user 2 removed
18.10 18:40:51 BLOCKREMOVE: questdata 2 removed
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:41' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 1ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:42' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:43' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:44' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:45' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:46' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:47' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 1ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:48' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:49' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 1ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:50' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:51' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:52' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:53' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:54' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:55' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 1ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:56' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 1ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:57' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:58' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
18.10 18:41:06 TIMER: Clans cache...
18.10 18:41:06 TIMER: Clans cache: 0ms
18.10 18:41:06 TIMER: Check tournament...
18.10 18:41:06 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 18:59' AND status = 'starting'
18.10 18:41:06 TIMER: Check tournament: 0ms
