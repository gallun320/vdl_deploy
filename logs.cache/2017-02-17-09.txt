17.02 09:00:01 WRITEDB: UPDATE Users SET name = E'uid113', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2017-02-17 08:59:56.473135-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339996,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 113
17.02 09:00:01 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 113
17.02 09:00:01 TIMER: Check step...
17.02 09:00:01 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:01 READDB: SELECT * FROM Battle WHERE ID = 31
17.02 09:00:01 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:01 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:01 TIMER: Check step: 1ms
17.02 09:00:01 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:01 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:01 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:01 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:01 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:01 TIME: core/user.sendTo : 0.04 ms
17.02 09:00:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 31, _type => vdl/cache.battle.infoRoom }
17.02 09:00:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 91, firstId => 90, _type => vdl/cache.battle.infoRoom, turnId => 90 }
17.02 09:00:04 TIME: vdl/cache.battle.infoRoom : 0.07 ms
17.02 09:00:06 TIMER: Check step...
17.02 09:00:06 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:06 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:06 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:06 TIMER: Check step: 1ms
17.02 09:00:06 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:06 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:06 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:06 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:06 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:06 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.01293566', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:11 BLOCKREMOVE: user 113 removed
17.02 09:00:11 BLOCKREMOVE: questdata 113 removed
17.02 09:00:11 TIMER: Check step...
17.02 09:00:11 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:11 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:11 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:11 TIMER: Check step: 1ms
17.02 09:00:11 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:11 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:11 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:11 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:11 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:11 TIME: core/user.sendTo : 0.04 ms
17.02 09:00:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.01793757', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=108 OR secondid=108 AND finished <> true, _type => core/server.query }
17.02 09:00:16 DB: SELECT id FROM battle WHERE firstid=108 OR secondid=108 AND finished <> true
17.02 09:00:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:00:16 TIME: core/server.query : 0.61 ms
17.02 09:00:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:00:16 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:00:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:00:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:00:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:00:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 108, _type => core/cache.update }
17.02 09:00:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
17.02 09:00:16 TIME: core/cache.update : 0.06 ms
17.02 09:00:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 108, _type => core/cache.update }
17.02 09:00:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
17.02 09:00:16 TIME: core/cache.update : 0.06 ms
17.02 09:00:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 108, _type => core/user.logoutPost }
17.02 09:00:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:00:16 TIME: core/user.logoutPost : 0.08 ms
17.02 09:00:16 TIMER: Clans cache...
17.02 09:00:16 TIMER: Clans cache: 0ms
17.02 09:00:16 TIMER: Check step...
17.02 09:00:16 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:16 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 4, 2)
17.02 09:00:16 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:16 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:16 TIMER: Check step: 2ms
17.02 09:00:16 TIMER: Check round...
17.02 09:00:16 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:00' OR rounddate = '2017-17-02 12:00' AND status <> 'finished'
17.02 09:00:16 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:16 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:16 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:16 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:16 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:16 TIME: core/user.sendTo : 0.07 ms
17.02 09:00:16 DB: SELECT * FROM battle WHERE endtime >= '1487340.01694271' AND avaliable = false AND finished <> true
17.02 09:00:16 QUEUE: vdl.0 (thread) response battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 90, battleId => 31 }
17.02 09:00:16 TIMER: Check round: 2ms
17.02 09:00:16 TIMER: Check tournaments...
17.02 09:00:16 DB: SELECT * FROM tournament
17.02 09:00:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 09:00:16 STATS: cache [user], get [37 calls, 21 cache hits, 16 cache misses, 0 same version, 0 not found]
17.02 09:00:16 STATS: cache [user], segments [141 calls, 104 hits, 36 misses]
17.02 09:00:16 STATS: cache [user], database [841 calls, 16 reads, 23 writes]
17.02 09:00:16 STATS: cache [user], lock [41 calls, 41 attempts, 13 failures]
17.02 09:00:16 CACHE: cache block locked: user.1
17.02 09:00:16 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 09:00:16 TIME: core/cache.get : 0.18 ms
17.02 09:00:16 TIMER: Check tournaments: 0ms
17.02 09:00:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.02294118', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:21 TIMER: Check step...
17.02 09:00:21 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:21 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:21 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:21 TIMER: Check step: 1ms
17.02 09:00:21 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:21 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:21 TIME: core/user.sendTo : 0.06 ms
17.02 09:00:21 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:21 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:21 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.02794596', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:26 TIMER: Check step...
17.02 09:00:26 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:26 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:26 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:26 TIMER: Check step: 0ms
17.02 09:00:26 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:26 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:26 TIME: core/user.sendTo : 0.04 ms
17.02 09:00:26 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:26 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:26 TIME: core/user.sendTo : 0.04 ms
17.02 09:00:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.0329513', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:31 TIMER: Check step...
17.02 09:00:31 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:31 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:31 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:31 TIMER: Check step: 1ms
17.02 09:00:31 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:31 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:31 TIME: core/user.sendTo : 0.1 ms
17.02 09:00:31 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:31 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:31 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.03795304', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:36 TIMER: Check step...
17.02 09:00:36 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:36 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:36 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:36 TIMER: Check step: 0ms
17.02 09:00:36 TIMER: Check tournaments...
17.02 09:00:36 DB: SELECT * FROM tournament
17.02 09:00:36 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:36 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:36 TIME: core/user.sendTo : 0.03 ms
17.02 09:00:36 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:36 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:36 TIME: core/user.sendTo : 0.03 ms
17.02 09:00:36 TIMER: Check tournaments: 0ms
17.02 09:00:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.04295468', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:41 TIMER: Check step...
17.02 09:00:41 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:41 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:41 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:41 TIMER: Check step: 1ms
17.02 09:00:41 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:41 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:41 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:41 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:41 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:41 TIME: core/user.sendTo : 0.07 ms
17.02 09:00:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.04795692', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:46 TIMER: Check step...
17.02 09:00:46 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:46 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:46 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:46 TIMER: Check step: 1ms
17.02 09:00:46 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:46 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:46 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:46 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:46 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:46 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.05295914', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:51 TIMER: Check step...
17.02 09:00:51 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:51 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:51 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:51 TIMER: Check step: 1ms
17.02 09:00:51 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:51 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:51 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:51 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:51 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:51 TIME: core/user.sendTo : 0.05 ms
17.02 09:00:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.05796099', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:00:56 TIMER: Check step...
17.02 09:00:56 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:00:56 STATS: cache [battle], get [89 calls, 48 cache hits, 40 cache misses, 0 same version, 10 not found]
17.02 09:00:56 STATS: cache [battle], segments [132 calls, 91 hits, 40 misses]
17.02 09:00:56 STATS: cache [battle], database [881 calls, 40 reads, 28 writes]
17.02 09:00:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:00:56 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:00:56 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:00:56 TIMER: Check step: 0ms
17.02 09:00:56 TIMER: Check tournaments...
17.02 09:00:56 DB: SELECT * FROM tournament
17.02 09:00:56 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:56 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:56 TIME: core/user.sendTo : 0.04 ms
17.02 09:00:56 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:00:56 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:00:56 TIME: core/user.sendTo : 0.03 ms
17.02 09:00:56 TIMER: Check tournaments: 0ms
17.02 09:00:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.06296271', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:01 TIMER: Check step...
17.02 09:01:01 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:01 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:01 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:01 TIMER: Check step: 1ms
17.02 09:01:01 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:01 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:01 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:01 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:01 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:01 TIME: core/user.sendTo : 0.03 ms
17.02 09:01:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.06796493', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:06 TIMER: Check step...
17.02 09:01:06 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:06 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:06 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:06 TIMER: Check step: 1ms
17.02 09:01:06 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:06 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:06 TIME: core/user.sendTo : 0.06 ms
17.02 09:01:06 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:06 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:06 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.0729671', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:11 TIMER: Check step...
17.02 09:01:11 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:11 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:11 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:11 TIMER: Check step: 1ms
17.02 09:01:11 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:11 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:11 TIME: core/user.sendTo : 0.08 ms
17.02 09:01:11 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:11 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:11 TIME: core/user.sendTo : 0.04 ms
17.02 09:01:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.077969', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:16 TIMER: Clans cache...
17.02 09:01:16 TIMER: Clans cache: 0ms
17.02 09:01:16 TIMER: Check step...
17.02 09:01:16 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:16 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:16 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:16 TIMER: Check step: 1ms
17.02 09:01:16 TIMER: Check round...
17.02 09:01:16 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:01' OR rounddate = '2017-17-02 12:01' AND status <> 'finished'
17.02 09:01:16 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:16 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:16 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:16 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:16 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:16 TIME: core/user.sendTo : 0.04 ms
17.02 09:01:16 DB: SELECT * FROM battle WHERE endtime >= '1487340.07697218' AND avaliable = false AND finished <> true
17.02 09:01:16 QUEUE: vdl.0 (thread) response battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 90, battleId => 31 }
17.02 09:01:16 TIMER: Check round: 1ms
17.02 09:01:16 TIMER: Check tournaments...
17.02 09:01:16 DB: SELECT * FROM tournament
17.02 09:01:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 09:01:16 STATS: cache [user], get [37 calls, 21 cache hits, 16 cache misses, 0 same version, 0 not found]
17.02 09:01:16 STATS: cache [user], segments [142 calls, 105 hits, 36 misses]
17.02 09:01:16 STATS: cache [user], database [901 calls, 16 reads, 23 writes]
17.02 09:01:16 STATS: cache [user], lock [42 calls, 42 attempts, 14 failures]
17.02 09:01:16 CACHE: cache block locked: user.1
17.02 09:01:16 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 09:01:16 TIME: core/cache.get : 0.14 ms
17.02 09:01:16 TIMER: Check tournaments: 0ms
17.02 09:01:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.08297102', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:21 TIMER: Check step...
17.02 09:01:21 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:21 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:21 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:21 TIMER: Check step: 1ms
17.02 09:01:21 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:21 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:21 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:21 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:21 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:21 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.08797843', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:26 TIMER: Check step...
17.02 09:01:26 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:26 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:26 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:26 TIMER: Check step: 1ms
17.02 09:01:26 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:26 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:26 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:26 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:26 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:26 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.09298194', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:31 TIMER: Check step...
17.02 09:01:31 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:31 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:31 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:31 TIMER: Check step: 1ms
17.02 09:01:31 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:31 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:31 TIME: core/user.sendTo : 0.08 ms
17.02 09:01:31 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:31 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:31 TIME: core/user.sendTo : 0.08 ms
17.02 09:01:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.09798418', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:36 TIMER: Check step...
17.02 09:01:36 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:36 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:36 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:36 TIMER: Check step: 1ms
17.02 09:01:36 TIMER: Check tournaments...
17.02 09:01:36 DB: SELECT * FROM tournament
17.02 09:01:36 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:36 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:36 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:36 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:36 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:36 TIME: core/user.sendTo : 0.03 ms
17.02 09:01:36 TIMER: Check tournaments: 0ms
17.02 09:01:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.10298792', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:41 TIMER: Check step...
17.02 09:01:41 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:41 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:41 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:41 TIMER: Check step: 1ms
17.02 09:01:41 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:41 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:41 TIME: core/user.sendTo : 0.09 ms
17.02 09:01:41 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:41 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:41 TIME: core/user.sendTo : 0.04 ms
17.02 09:01:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.10799055', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:46 TIMER: Check step...
17.02 09:01:46 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:46 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:46 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:46 TIMER: Check step: 1ms
17.02 09:01:46 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:46 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:46 TIME: core/user.sendTo : 0.06 ms
17.02 09:01:46 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:46 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:46 TIME: core/user.sendTo : 0.04 ms
17.02 09:01:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.11299275', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:51 TIMER: Check step...
17.02 09:01:51 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:51 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:51 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:51 TIMER: Check step: 1ms
17.02 09:01:51 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:51 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:51 TIME: core/user.sendTo : 0.09 ms
17.02 09:01:51 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:51 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:51 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.11799492', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:01:56 TIMER: Check step...
17.02 09:01:56 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:01:56 STATS: cache [battle], get [101 calls, 60 cache hits, 40 cache misses, 0 same version, 10 not found]
17.02 09:01:56 STATS: cache [battle], segments [156 calls, 115 hits, 40 misses]
17.02 09:01:56 STATS: cache [battle], database [941 calls, 40 reads, 40 writes]
17.02 09:01:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:01:56 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:01:56 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:01:56 TIMER: Check step: 1ms
17.02 09:01:56 TIMER: Check tournaments...
17.02 09:01:56 DB: SELECT * FROM tournament
17.02 09:01:56 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:56 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:56 TIME: core/user.sendTo : 0.06 ms
17.02 09:01:56 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:01:56 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:01:56 TIME: core/user.sendTo : 0.05 ms
17.02 09:01:56 TIMER: Check tournaments: 1ms
17.02 09:01:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.12299718', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:02 TIMER: Check step...
17.02 09:02:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:02 TIMER: Check step: 1ms
17.02 09:02:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:02:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:02:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.12800002', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:07 TIMER: Check step...
17.02 09:02:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:07 TIMER: Check step: 0ms
17.02 09:02:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:07 TIME: core/user.sendTo : 0.06 ms
17.02 09:02:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:07 TIME: core/user.sendTo : 0.04 ms
17.02 09:02:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.13300148', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:12 TIMER: Check step...
17.02 09:02:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:12 TIMER: Check step: 1ms
17.02 09:02:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:12 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:12 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.13800369', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:17 TIMER: Clans cache...
17.02 09:02:17 TIMER: Clans cache: 0ms
17.02 09:02:17 TIMER: Check step...
17.02 09:02:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:17 TIMER: Check step: 1ms
17.02 09:02:17 TIMER: Check round...
17.02 09:02:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:02' OR rounddate = '2017-17-02 12:02' AND status <> 'finished'
17.02 09:02:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:17 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:17 TIME: core/user.sendTo : 0.07 ms
17.02 09:02:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.13700769' AND avaliable = false AND finished <> true
17.02 09:02:17 QUEUE: vdl.0 (thread) response battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 90, battleId => 31 }
17.02 09:02:17 TIMER: Check round: 1ms
17.02 09:02:17 TIMER: Check tournaments...
17.02 09:02:17 DB: SELECT * FROM tournament
17.02 09:02:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 09:02:17 STATS: cache [user], get [37 calls, 21 cache hits, 16 cache misses, 0 same version, 0 not found]
17.02 09:02:17 STATS: cache [user], segments [143 calls, 106 hits, 36 misses]
17.02 09:02:17 STATS: cache [user], database [961 calls, 16 reads, 23 writes]
17.02 09:02:17 STATS: cache [user], lock [43 calls, 43 attempts, 15 failures]
17.02 09:02:17 CACHE: cache block locked: user.1
17.02 09:02:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 09:02:17 TIME: core/cache.get : 0.19 ms
17.02 09:02:17 TIMER: Check tournaments: 4ms
17.02 09:02:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.14300626', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:22 TIMER: Check step...
17.02 09:02:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:22 TIMER: Check step: 1ms
17.02 09:02:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:22 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:22 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.14801487', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:27 TIMER: Check step...
17.02 09:02:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:27 TIMER: Check step: 1ms
17.02 09:02:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:27 TIME: core/user.sendTo : 0.06 ms
17.02 09:02:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:27 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.15301719', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:32 TIMER: Check step...
17.02 09:02:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:32 TIMER: Check step: 2ms
17.02 09:02:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:32 TIME: core/user.sendTo : 0.09 ms
17.02 09:02:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:32 TIME: core/user.sendTo : 0.09 ms
17.02 09:02:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.15801945', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:37 TIMER: Check step...
17.02 09:02:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:37 TIMER: Check step: 1ms
17.02 09:02:37 TIMER: Check tournaments...
17.02 09:02:37 DB: SELECT * FROM tournament
17.02 09:02:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:37 TIME: core/user.sendTo : 0.06 ms
17.02 09:02:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:37 TIME: core/user.sendTo : 0.04 ms
17.02 09:02:37 TIMER: Check tournaments: 1ms
17.02 09:02:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.16302183', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:42 TIMER: Check step...
17.02 09:02:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:42 TIMER: Check step: 1ms
17.02 09:02:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:42 TIME: core/user.sendTo : 0.06 ms
17.02 09:02:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:42 TIME: core/user.sendTo : 0.04 ms
17.02 09:02:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.16802494', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:47 TIMER: Check step...
17.02 09:02:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:47 TIMER: Check step: 1ms
17.02 09:02:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:47 TIME: core/user.sendTo : 0.03 ms
17.02 09:02:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:47 TIME: core/user.sendTo : 0.03 ms
17.02 09:02:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.17302705', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:52 TIMER: Check step...
17.02 09:02:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:52 TIMER: Check step: 1ms
17.02 09:02:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:52 TIME: core/user.sendTo : 0.07 ms
17.02 09:02:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:52 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.17802903', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:02:56 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true, _type => core/server.query }
17.02 09:02:56 DB: SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true
17.02 09:02:56 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:02:56 TIME: core/server.query : 0.74 ms
17.02 09:02:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:02:56 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:02:56 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:02:56 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:02:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:02:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 113, _type => core/cache.update }
17.02 09:02:56 STATS: cache manager [1], get [44 calls, total 0.02 sec spent, avg 0.53 ms]
17.02 09:02:56 STATS: cache manager [1], update [61 calls, total 0 sec spent, avg 0.05 ms]
17.02 09:02:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
17.02 09:02:56 TIME: core/cache.update : 0.12 ms
17.02 09:02:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 113, _type => core/cache.update }
17.02 09:02:56 STATS: cache [questdata], get [17 calls, 1 cache hits, 16 cache misses, 0 same version, 0 not found]
17.02 09:02:56 STATS: cache [questdata], segments [70 calls, 33 hits, 36 misses]
17.02 09:02:56 STATS: cache [questdata], database [1000 calls, 16 reads, 14 writes]
17.02 09:02:56 STATS: cache [questdata], lock [17 calls, 17 attempts, 0 failures]
17.02 09:02:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
17.02 09:02:56 TIME: core/cache.update : 0.14 ms
17.02 09:02:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 113, _type => core/user.logoutPost }
17.02 09:02:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:02:56 TIME: core/user.logoutPost : 0.04 ms
17.02 09:02:57 TIMER: Check step...
17.02 09:02:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:02:57 STATS: cache [battle], get [114 calls, 72 cache hits, 41 cache misses, 0 same version, 11 not found]
17.02 09:02:57 STATS: cache [battle], segments [181 calls, 139 hits, 41 misses]
17.02 09:02:57 STATS: cache [battle], database [1001 calls, 41 reads, 52 writes]
17.02 09:02:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:02:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:02:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:02:57 TIMER: Check step: 1ms
17.02 09:02:57 TIMER: Check tournaments...
17.02 09:02:57 DB: SELECT * FROM tournament
17.02 09:02:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:57 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:02:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:02:57 TIME: core/user.sendTo : 0.05 ms
17.02 09:02:57 TIMER: Check tournaments: 0ms
17.02 09:02:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.18303427', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:02 TIMER: Check step...
17.02 09:03:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:02 TIMER: Check step: 1ms
17.02 09:03:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:02 TIME: core/user.sendTo : 0.07 ms
17.02 09:03:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:03:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.18803704', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:07 TIMER: Check step...
17.02 09:03:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:07 TIMER: Check step: 1ms
17.02 09:03:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:07 TIME: core/user.sendTo : 0.07 ms
17.02 09:03:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:07 TIME: core/user.sendTo : 0.05 ms
17.02 09:03:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.19303932', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:12 TIMER: Check step...
17.02 09:03:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:12 TIMER: Check step: 1ms
17.02 09:03:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:12 TIME: core/user.sendTo : 0.05 ms
17.02 09:03:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:12 TIME: core/user.sendTo : 0.04 ms
17.02 09:03:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.19804377', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:17 TIMER: Clans cache...
17.02 09:03:17 TIMER: Clans cache: 0ms
17.02 09:03:17 TIMER: Check step...
17.02 09:03:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:17 TIMER: Check step: 1ms
17.02 09:03:17 TIMER: Check round...
17.02 09:03:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:03' OR rounddate = '2017-17-02 12:03' AND status <> 'finished'
17.02 09:03:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:17 TIME: core/user.sendTo : 0.06 ms
17.02 09:03:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:17 TIME: core/user.sendTo : 0.06 ms
17.02 09:03:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.19704766' AND avaliable = false AND finished <> true
17.02 09:03:17 QUEUE: vdl.0 (thread) response battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 90, battleId => 31 }
17.02 09:03:17 TIMER: Check round: 1ms
17.02 09:03:17 TIMER: Check tournaments...
17.02 09:03:17 DB: SELECT * FROM tournament
17.02 09:03:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 09:03:17 STATS: cache [user], get [37 calls, 21 cache hits, 16 cache misses, 0 same version, 0 not found]
17.02 09:03:17 STATS: cache [user], segments [145 calls, 107 hits, 37 misses]
17.02 09:03:17 STATS: cache [user], database [1021 calls, 16 reads, 23 writes]
17.02 09:03:17 STATS: cache [user], lock [44 calls, 44 attempts, 16 failures]
17.02 09:03:17 CACHE: cache block locked: user.1
17.02 09:03:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 09:03:17 TIME: core/cache.get : 0.17 ms
17.02 09:03:17 TIMER: Check tournaments: 0ms
17.02 09:03:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.20304615', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:22 TIMER: Check step...
17.02 09:03:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:22 TIMER: Check step: 1ms
17.02 09:03:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:22 TIME: core/user.sendTo : 0.06 ms
17.02 09:03:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:22 TIME: core/user.sendTo : 0.04 ms
17.02 09:03:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.20805098', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:27 TIMER: Check step...
17.02 09:03:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:27 TIMER: Check step: 0ms
17.02 09:03:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:27 TIME: core/user.sendTo : 0.03 ms
17.02 09:03:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:27 TIME: core/user.sendTo : 0.03 ms
17.02 09:03:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.21305256', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:32 TIMER: Check step...
17.02 09:03:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:32 TIMER: Check step: 1ms
17.02 09:03:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:32 TIME: core/user.sendTo : 0.06 ms
17.02 09:03:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:32 TIME: core/user.sendTo : 0.05 ms
17.02 09:03:32 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113', _type => core/server.query }
17.02 09:03:32 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113'
17.02 09:03:32 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid113, networkid => , isbanned => false, id => 113 }}, errorCode => ok, _type => core/server.query }
17.02 09:03:32 TIME: core/server.query : 1 ms
17.02 09:03:32 NET: vdl.0 (thread) request core/user.isOnlineID { id => 113, _type => core/user.isOnlineID }
17.02 09:03:32 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:03:32 TIME: core/user.isOnlineID : 0.09 ms
17.02 09:03:32 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 113, _type => core/cache.get }
17.02 09:03:32 READDB: SELECT * FROM Users WHERE ID = 113
17.02 09:03:32 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid113, money => 0, deleted => false, year => , email => , networktype =>   , password => uid113, isbanned => false, regdate => 2017-02-17 08:59:56.473135-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487339996, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 113 } }
17.02 09:03:32 TIME: core/cache.get : 0.9 ms
17.02 09:03:32 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 113, _type => core/cache.get }
17.02 09:03:32 READDB: SELECT * FROM UserQuests WHERE ID = 113
17.02 09:03:32 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 113 } }
17.02 09:03:32 TIME: core/cache.get : 0.5 ms
17.02 09:03:32 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 113, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 09:03:32 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:03:32 TIME: core/user.loginPost : 0.06 ms
17.02 09:03:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.2180544', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:37 TIMER: Check step...
17.02 09:03:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:37 TIMER: Check step: 1ms
17.02 09:03:37 TIMER: Check tournaments...
17.02 09:03:37 DB: SELECT * FROM tournament
17.02 09:03:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:03:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:03:37 TIMER: Check tournaments: 1ms
17.02 09:03:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.22305659', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:41 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 113, _type => core/cache.update }
17.02 09:03:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:03:41 TIME: core/cache.update : 0.13 ms
17.02 09:03:41 WRITEDB: UPDATE Users SET name = E'uid113', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2017-02-17 08:59:56.473135-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339996,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 113
17.02 09:03:42 TIMER: Check step...
17.02 09:03:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:42 TIMER: Check step: 2ms
17.02 09:03:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:42 TIME: core/user.sendTo : 0.09 ms
17.02 09:03:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:42 TIME: core/user.sendTo : 0.07 ms
17.02 09:03:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.2280599', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:47 TIMER: Check step...
17.02 09:03:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:47 TIMER: Check step: 2ms
17.02 09:03:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:47 TIME: core/user.sendTo : 0.1 ms
17.02 09:03:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:47 TIME: core/user.sendTo : 0.08 ms
17.02 09:03:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.23306288', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:52 TIMER: Check step...
17.02 09:03:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:52 TIMER: Check step: 0ms
17.02 09:03:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:52 TIME: core/user.sendTo : 0.03 ms
17.02 09:03:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:52 TIME: core/user.sendTo : 0.02 ms
17.02 09:03:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.2380645', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:03:57 TIMER: Check step...
17.02 09:03:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:03:57 STATS: cache [battle], get [126 calls, 84 cache hits, 41 cache misses, 0 same version, 11 not found]
17.02 09:03:57 STATS: cache [battle], segments [205 calls, 163 hits, 41 misses]
17.02 09:03:57 STATS: cache [battle], database [1061 calls, 41 reads, 64 writes]
17.02 09:03:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:03:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:03:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:03:57 TIMER: Check step: 1ms
17.02 09:03:57 TIMER: Check tournaments...
17.02 09:03:57 DB: SELECT * FROM tournament
17.02 09:03:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:57 TIME: core/user.sendTo : 0.06 ms
17.02 09:03:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:03:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:03:57 TIME: core/user.sendTo : 0.05 ms
17.02 09:03:57 TIMER: Check tournaments: 1ms
17.02 09:03:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.24306974', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:02 TIMER: Check step...
17.02 09:04:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:02 TIMER: Check step: 1ms
17.02 09:04:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:04:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:04:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.24807273', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:07 TIMER: Check step...
17.02 09:04:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:07 TIMER: Check step: 1ms
17.02 09:04:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:07 TIME: core/user.sendTo : 0.06 ms
17.02 09:04:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:07 TIME: core/user.sendTo : 0.04 ms
17.02 09:04:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.25307475', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:12 TIMER: Check step...
17.02 09:04:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:12 TIMER: Check step: 1ms
17.02 09:04:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:12 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:12 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.25807662', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:17 TIMER: Clans cache...
17.02 09:04:17 TIMER: Clans cache: 0ms
17.02 09:04:17 TIMER: Check step...
17.02 09:04:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:17 TIMER: Check step: 1ms
17.02 09:04:17 TIMER: Check round...
17.02 09:04:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:04' OR rounddate = '2017-17-02 12:04' AND status <> 'finished'
17.02 09:04:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:17 TIME: core/user.sendTo : 0.04 ms
17.02 09:04:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:17 TIME: core/user.sendTo : 0.04 ms
17.02 09:04:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.25708077' AND avaliable = false AND finished <> true
17.02 09:04:17 QUEUE: vdl.0 (thread) response battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 90, battleId => 31 }
17.02 09:04:17 TIMER: Check round: 1ms
17.02 09:04:17 TIMER: Check tournaments...
17.02 09:04:17 DB: SELECT * FROM tournament
17.02 09:04:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 09:04:17 STATS: cache [user], get [38 calls, 21 cache hits, 17 cache misses, 0 same version, 0 not found]
17.02 09:04:17 STATS: cache [user], segments [149 calls, 109 hits, 39 misses]
17.02 09:04:17 STATS: cache [user], database [1081 calls, 17 reads, 24 writes]
17.02 09:04:17 STATS: cache [user], lock [46 calls, 46 attempts, 17 failures]
17.02 09:04:17 CACHE: cache block locked: user.1
17.02 09:04:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 09:04:17 TIME: core/cache.get : 0.19 ms
17.02 09:04:17 TIMER: Check tournaments: 1ms
17.02 09:04:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.26307958', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:22 TIMER: Check step...
17.02 09:04:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:22 TIMER: Check step: 0ms
17.02 09:04:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:22 TIME: core/user.sendTo : 0.03 ms
17.02 09:04:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:22 TIME: core/user.sendTo : 0.03 ms
17.02 09:04:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.26808347', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:27 TIMER: Check step...
17.02 09:04:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:27 TIMER: Check step: 1ms
17.02 09:04:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:27 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:27 TIME: core/user.sendTo : 0.27 ms
17.02 09:04:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.27308577', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:32 TIMER: Check step...
17.02 09:04:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:32 TIMER: Check step: 1ms
17.02 09:04:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:32 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:32 TIME: core/user.sendTo : 0.06 ms
17.02 09:04:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.27808782', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:37 TIMER: Check step...
17.02 09:04:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:37 TIMER: Check step: 1ms
17.02 09:04:37 TIMER: Check tournaments...
17.02 09:04:37 DB: SELECT * FROM tournament
17.02 09:04:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:37 TIME: core/user.sendTo : 0.07 ms
17.02 09:04:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:37 TIMER: Check tournaments: 1ms
17.02 09:04:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.28308999', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:42 TIMER: Check step...
17.02 09:04:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:42 TIMER: Check step: 1ms
17.02 09:04:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:42 TIME: core/user.sendTo : 0.06 ms
17.02 09:04:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:42 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.28809296', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:47 TIMER: Check step...
17.02 09:04:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:47 TIMER: Check step: 1ms
17.02 09:04:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:47 TIME: core/user.sendTo : 0.09 ms
17.02 09:04:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:47 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.293095', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:52 TIMER: Check step...
17.02 09:04:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:52 TIMER: Check step: 0ms
17.02 09:04:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:52 TIME: core/user.sendTo : 0.03 ms
17.02 09:04:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:52 TIME: core/user.sendTo : 0.02 ms
17.02 09:04:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.29810089', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:04:57 TIMER: Check step...
17.02 09:04:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:04:57 STATS: cache [battle], get [138 calls, 96 cache hits, 41 cache misses, 0 same version, 11 not found]
17.02 09:04:57 STATS: cache [battle], segments [229 calls, 187 hits, 41 misses]
17.02 09:04:57 STATS: cache [battle], database [1121 calls, 41 reads, 76 writes]
17.02 09:04:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:04:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:04:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:04:57 TIMER: Check step: 1ms
17.02 09:04:57 TIMER: Check tournaments...
17.02 09:04:57 DB: SELECT * FROM tournament
17.02 09:04:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:57 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:04:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:04:57 TIME: core/user.sendTo : 0.05 ms
17.02 09:04:57 TIMER: Check tournaments: 1ms
17.02 09:04:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.3031032', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:02 TIMER: Check step...
17.02 09:05:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:02 TIMER: Check step: 1ms
17.02 09:05:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:02 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:05:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.30810589', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:07 TIMER: Check step...
17.02 09:05:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:07 TIMER: Check step: 1ms
17.02 09:05:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:07 TIME: core/user.sendTo : 0.06 ms
17.02 09:05:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:07 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.31310798', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:12 TIMER: Check step...
17.02 09:05:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:12 TIMER: Check step: 1ms
17.02 09:05:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:12 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:12 TIME: core/user.sendTo : 0.06 ms
17.02 09:05:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.31810984', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:17 TIMER: Clans cache...
17.02 09:05:17 TIMER: Clans cache: 0ms
17.02 09:05:17 TIMER: Check step...
17.02 09:05:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:17 TIMER: Check step: 1ms
17.02 09:05:17 TIMER: Check round...
17.02 09:05:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:05' OR rounddate = '2017-17-02 12:05' AND status <> 'finished'
17.02 09:05:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:17 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:17 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.31711376' AND avaliable = false AND finished <> true
17.02 09:05:17 QUEUE: vdl.0 (thread) response battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 90, battleId => 31 }
17.02 09:05:17 TIMER: Check round: 2ms
17.02 09:05:17 TIMER: Check tournaments...
17.02 09:05:17 DB: SELECT * FROM tournament
17.02 09:05:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 09:05:17 STATS: cache [user], get [38 calls, 21 cache hits, 17 cache misses, 0 same version, 0 not found]
17.02 09:05:17 STATS: cache [user], segments [150 calls, 110 hits, 39 misses]
17.02 09:05:17 STATS: cache [user], database [1141 calls, 17 reads, 24 writes]
17.02 09:05:17 STATS: cache [user], lock [47 calls, 47 attempts, 18 failures]
17.02 09:05:17 CACHE: cache block locked: user.1
17.02 09:05:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 09:05:17 TIME: core/cache.get : 0.19 ms
17.02 09:05:17 TIMER: Check tournaments: 0ms
17.02 09:05:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.32311206', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:22 TIMER: Check step...
17.02 09:05:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:22 TIMER: Check step: 1ms
17.02 09:05:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:22 TIME: core/user.sendTo : 0.08 ms
17.02 09:05:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:22 TIME: core/user.sendTo : 0.07 ms
17.02 09:05:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.32811699', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:27 TIMER: Check step...
17.02 09:05:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:27 TIMER: Check step: 1ms
17.02 09:05:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:27 TIME: core/user.sendTo : 0.06 ms
17.02 09:05:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:27 TIME: core/user.sendTo : 0.04 ms
17.02 09:05:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.3331192', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:32 TIMER: Check step...
17.02 09:05:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:32 TIMER: Check step: 1ms
17.02 09:05:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:32 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:32 TIME: core/user.sendTo : 0.04 ms
17.02 09:05:33 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.33812101', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:37 TIMER: Check step...
17.02 09:05:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:37 TIMER: Check step: 1ms
17.02 09:05:37 TIMER: Check tournaments...
17.02 09:05:37 DB: SELECT * FROM tournament
17.02 09:05:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:37 TIME: core/user.sendTo : 0.06 ms
17.02 09:05:37 TIMER: Check tournaments: 0ms
17.02 09:05:38 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.34312298', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:42 TIMER: Check step...
17.02 09:05:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:42 TIMER: Check step: 1ms
17.02 09:05:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:42 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:42 TIME: core/user.sendTo : 0.06 ms
17.02 09:05:43 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.34812603', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:47 TIMER: Check step...
17.02 09:05:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:47 TIMER: Check step: 1ms
17.02 09:05:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:47 TIME: core/user.sendTo : 0.04 ms
17.02 09:05:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:47 TIME: core/user.sendTo : 0.04 ms
17.02 09:05:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.35313157', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:52 TIMER: Check step...
17.02 09:05:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:52 TIMER: Check step: 2ms
17.02 09:05:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:52 TIME: core/user.sendTo : 0.1 ms
17.02 09:05:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:52 TIME: core/user.sendTo : 0.1 ms
17.02 09:05:53 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.35813532', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:05:57 TIMER: Check step...
17.02 09:05:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:05:57 STATS: cache [battle], get [150 calls, 108 cache hits, 41 cache misses, 0 same version, 11 not found]
17.02 09:05:57 STATS: cache [battle], segments [253 calls, 211 hits, 41 misses]
17.02 09:05:57 STATS: cache [battle], database [1181 calls, 41 reads, 88 writes]
17.02 09:05:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:05:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:05:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:05:57 TIMER: Check step: 1ms
17.02 09:05:57 TIMER: Check tournaments...
17.02 09:05:57 DB: SELECT * FROM tournament
17.02 09:05:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:57 TIME: core/user.sendTo : 0.06 ms
17.02 09:05:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:05:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:05:57 TIME: core/user.sendTo : 0.05 ms
17.02 09:05:57 TIMER: Check tournaments: 1ms
17.02 09:05:58 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.36313783', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:06:02 TIMER: Check step...
17.02 09:06:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:06:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:06:02 TIMER: Check step: 1ms
17.02 09:06:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:06:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:06:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:06:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:06:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:06:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:06:03 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.36814052', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:06:07 TIMER: Check step...
17.02 09:06:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:06:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:06:07 TIMER: Check step: 1ms
17.02 09:06:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:06:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:06:07 TIME: core/user.sendTo : 0.05 ms
17.02 09:06:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:06:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:06:07 TIME: core/user.sendTo : 0.04 ms
17.02 09:06:08 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'90', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.37314234', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:06:12 TIMER: Check step...
17.02 09:06:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }
17.02 09:06:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }
17.02 09:06:12 TIMER: Check step: 1ms
17.02 09:06:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 91, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:06:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:06:12 TIME: core/user.sendTo : 0.04 ms
17.02 09:06:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 90, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:06:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:06:12 TIME: core/user.sendTo : 0.03 ms
17.02 09:06:13 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'false', endtime = E'1489140', firstid = E'90', steptime = E'1487340.3781442', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:06:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=91 OR secondid=91 AND finished <> true, _type => core/server.query }
17.02 09:06:16 DB: SELECT id FROM battle WHERE firstid=91 OR secondid=91 AND finished <> true
17.02 09:06:16 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 29 }, { id => 31 }}, errorCode => ok, _type => core/server.query }
17.02 09:06:16 TIME: core/server.query : 0.68 ms
17.02 09:06:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 31, _type => vdl/cache.battle.infoRoom }
17.02 09:06:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 91, firstId => 90, _type => vdl/cache.battle.infoRoom, turnId => 91 }
17.02 09:06:16 TIME: vdl/cache.battle.infoRoom : 0.08 ms
17.02 09:06:16 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 31, _type => vdl/cache.battle.deleteRoom }
17.02 09:06:16 ROOM: deleted room 31
17.02 09:06:16 DB: DELETE FROM Battle WHERE ID = 31
17.02 09:06:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 09:06:16 TIME: vdl/cache.battle.deleteRoom : 0.68 ms
17.02 09:06:16 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 31, _type => vdl/cache.battle.finishRoom }
17.02 09:06:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 09:06:16 TIME: vdl/cache.battle.finishRoom : 0.1 ms
17.02 09:06:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 91, _type => core/cache.update }
17.02 09:06:16 STATS: cache manager [1], get [46 calls, total 0.02 sec spent, avg 0.53 ms]
17.02 09:06:16 STATS: cache manager [1], update [64 calls, total 0 sec spent, avg 0.05 ms]
17.02 09:06:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:06:16 TIME: core/cache.update : 0.16 ms
17.02 09:06:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 91, _type => core/cache.update }
17.02 09:06:16 STATS: cache [questdata], get [18 calls, 1 cache hits, 17 cache misses, 0 same version, 0 not found]
17.02 09:06:16 STATS: cache [questdata], segments [73 calls, 33 hits, 39 misses]
17.02 09:06:16 STATS: cache [questdata], database [1200 calls, 17 reads, 14 writes]
17.02 09:06:16 STATS: cache [questdata], lock [18 calls, 18 attempts, 0 failures]
17.02 09:06:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:06:16 TIME: core/cache.update : 0.17 ms
17.02 09:06:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 91, _type => core/user.logoutPost }
17.02 09:06:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:06:16 TIME: core/user.logoutPost : 0.05 ms
17.02 09:06:17 WRITEDB: UPDATE Users SET name = E'uid91', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid91', isbanned = E'false', regdate = E'2017-02-17 03:48:07.057509-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321287,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 91
17.02 09:06:17 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 91
17.02 09:06:17 TIMER: Clans cache...
17.02 09:06:17 TIMER: Clans cache: 0ms
17.02 09:06:17 TIMER: Check step...
17.02 09:06:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:17 TIMER: Check step: 0ms
17.02 09:06:17 TIMER: Check round...
17.02 09:06:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:06' OR rounddate = '2017-17-02 12:06' AND status <> 'finished'
17.02 09:06:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.3771469' AND avaliable = false AND finished <> true
17.02 09:06:17 TIMER: Check round: 0ms
17.02 09:06:17 TIMER: Check tournaments...
17.02 09:06:17 DB: SELECT * FROM tournament
17.02 09:06:17 TIMER: Check tournaments: 0ms
17.02 09:06:18 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'91', turnid = E'91', finished = E'true', endtime = E'1489140', firstid = E'90', steptime = E'1487340.3781442', params = E'{}', avaliable = E'false' WHERE ID = 31
17.02 09:06:22 TIMER: Check step...
17.02 09:06:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:22 TIMER: Check step: 0ms
17.02 09:06:27 BLOCKREMOVE: user 91 removed
17.02 09:06:27 BLOCKREMOVE: questdata 91 removed
17.02 09:06:27 TIMER: Check step...
17.02 09:06:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:27 TIMER: Check step: 0ms
17.02 09:06:28 BLOCKREMOVE: battle 31 removed
17.02 09:06:32 TIMER: Check step...
17.02 09:06:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:32 TIMER: Check step: 0ms
17.02 09:06:37 TIMER: Check step...
17.02 09:06:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:37 TIMER: Check step: 0ms
17.02 09:06:37 TIMER: Check tournaments...
17.02 09:06:37 DB: SELECT * FROM tournament
17.02 09:06:37 TIMER: Check tournaments: 0ms
17.02 09:06:42 TIMER: Check step...
17.02 09:06:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:42 TIMER: Check step: 0ms
17.02 09:06:47 TIMER: Check step...
17.02 09:06:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:47 TIMER: Check step: 1ms
17.02 09:06:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid91' AND Password = E'uid91', _type => core/server.query }
17.02 09:06:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid91' AND Password = E'uid91'
17.02 09:06:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid91, networkid => , isbanned => false, id => 91 }}, errorCode => ok, _type => core/server.query }
17.02 09:06:47 TIME: core/server.query : 1.02 ms
17.02 09:06:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 91, _type => core/user.isOnlineID }
17.02 09:06:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:06:47 TIME: core/user.isOnlineID : 0.05 ms
17.02 09:06:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 91, _type => core/cache.get }
17.02 09:06:47 STATS: cache [user], get [38 calls, 21 cache hits, 17 cache misses, 0 same version, 0 not found]
17.02 09:06:47 STATS: cache [user], segments [153 calls, 113 hits, 39 misses]
17.02 09:06:47 STATS: cache [user], database [1231 calls, 17 reads, 25 writes]
17.02 09:06:47 STATS: cache [user], lock [48 calls, 48 attempts, 19 failures]
17.02 09:06:47 READDB: SELECT * FROM Users WHERE ID = 91
17.02 09:06:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid91, money => 0, deleted => false, year => , email => , networktype =>   , password => uid91, isbanned => false, regdate => 2017-02-17 03:48:07.057509-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487321287, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 91 } }
17.02 09:06:47 TIME: core/cache.get : 1.05 ms
17.02 09:06:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 91, _type => core/cache.get }
17.02 09:06:47 READDB: SELECT * FROM UserQuests WHERE ID = 91
17.02 09:06:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 91 } }
17.02 09:06:47 TIME: core/cache.get : 0.49 ms
17.02 09:06:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 91, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 09:06:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:06:47 TIME: core/user.loginPost : 0.06 ms
17.02 09:06:52 TIMER: Check step...
17.02 09:06:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:52 TIMER: Check step: 0ms
17.02 09:06:56 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=91 OR secondid=91 AND finished <> true, _type => core/server.query }
17.02 09:06:56 DB: SELECT id FROM battle WHERE firstid=91 OR secondid=91 AND finished <> true
17.02 09:06:56 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 29 }}, errorCode => ok, _type => core/server.query }
17.02 09:06:56 TIME: core/server.query : 0.68 ms
17.02 09:06:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 29, _type => vdl/cache.battle.infoRoom }
17.02 09:06:56 READDB: SELECT * FROM Battle WHERE ID = 29
17.02 09:06:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 90, firstId => 91, _type => vdl/cache.battle.infoRoom, turnId => 90 }
17.02 09:06:56 TIME: vdl/cache.battle.infoRoom : 0.6 ms
17.02 09:06:56 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 29, _type => vdl/cache.battle.deleteRoom }
17.02 09:06:56 ROOM: deleted room 29
17.02 09:06:56 DB: DELETE FROM Battle WHERE ID = 29
17.02 09:06:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 09:06:56 TIME: vdl/cache.battle.deleteRoom : 0.63 ms
17.02 09:06:56 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 29, _type => vdl/cache.battle.finishRoom }
17.02 09:06:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 09:06:56 TIME: vdl/cache.battle.finishRoom : 0.08 ms
17.02 09:06:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 91, _type => core/cache.update }
17.02 09:06:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:06:56 TIME: core/cache.update : 0.08 ms
17.02 09:06:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 91, _type => core/cache.update }
17.02 09:06:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:06:56 TIME: core/cache.update : 0.07 ms
17.02 09:06:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 91, _type => core/user.logoutPost }
17.02 09:06:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:06:56 TIME: core/user.logoutPost : 0.06 ms
17.02 09:06:57 WRITEDB: UPDATE Users SET name = E'uid91', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid91', isbanned = E'false', regdate = E'2017-02-17 03:48:07.057509-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321287,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 91
17.02 09:06:57 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 91
17.02 09:06:57 TIMER: Check step...
17.02 09:06:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:06:57 TIMER: Check step: 0ms
17.02 09:06:57 TIMER: Check tournaments...
17.02 09:06:57 DB: SELECT * FROM tournament
17.02 09:06:57 TIMER: Check tournaments: 0ms
17.02 09:07:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'90', turnid = E'90', finished = E'true', endtime = E'1489140', firstid = E'91', steptime = E'1487340', params = E'{}', avaliable = E'false' WHERE ID = 29
17.02 09:07:02 TIMER: Check step...
17.02 09:07:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:02 TIMER: Check step: 0ms
17.02 09:07:07 BLOCKREMOVE: user 91 removed
17.02 09:07:07 BLOCKREMOVE: questdata 91 removed
17.02 09:07:07 TIMER: Check step...
17.02 09:07:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:07 TIMER: Check step: 0ms
17.02 09:07:12 BLOCKREMOVE: battle 29 removed
17.02 09:07:12 TIMER: Check step...
17.02 09:07:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:12 TIMER: Check step: 0ms
17.02 09:07:17 TIMER: Clans cache...
17.02 09:07:17 TIMER: Clans cache: 0ms
17.02 09:07:17 TIMER: Check step...
17.02 09:07:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:17 TIMER: Check step: 0ms
17.02 09:07:17 TIMER: Check round...
17.02 09:07:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:07' OR rounddate = '2017-17-02 12:07' AND status <> 'finished'
17.02 09:07:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.43717255' AND avaliable = false AND finished <> true
17.02 09:07:17 TIMER: Check round: 0ms
17.02 09:07:17 TIMER: Check tournaments...
17.02 09:07:17 DB: SELECT * FROM tournament
17.02 09:07:17 TIMER: Check tournaments: 0ms
17.02 09:07:22 TIMER: Check step...
17.02 09:07:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:22 TIMER: Check step: 0ms
17.02 09:07:27 TIMER: Check step...
17.02 09:07:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:27 TIMER: Check step: 0ms
17.02 09:07:32 TIMER: Check step...
17.02 09:07:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:32 TIMER: Check step: 0ms
17.02 09:07:37 TIMER: Check step...
17.02 09:07:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:37 TIMER: Check step: 0ms
17.02 09:07:37 TIMER: Check tournaments...
17.02 09:07:37 DB: SELECT * FROM tournament
17.02 09:07:37 TIMER: Check tournaments: 0ms
17.02 09:07:42 TIMER: Check step...
17.02 09:07:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:42 TIMER: Check step: 1ms
17.02 09:07:47 TIMER: Check step...
17.02 09:07:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:47 TIMER: Check step: 0ms
17.02 09:07:52 TIMER: Check step...
17.02 09:07:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:52 TIMER: Check step: 0ms
17.02 09:07:57 TIMER: Check step...
17.02 09:07:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:07:57 TIMER: Check step: 0ms
17.02 09:07:57 TIMER: Check tournaments...
17.02 09:07:57 DB: SELECT * FROM tournament
17.02 09:07:57 TIMER: Check tournaments: 0ms
17.02 09:08:02 TIMER: Check step...
17.02 09:08:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:02 TIMER: Check step: 0ms
17.02 09:08:07 TIMER: Check step...
17.02 09:08:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:07 TIMER: Check step: 0ms
17.02 09:08:12 TIMER: Check step...
17.02 09:08:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:12 TIMER: Check step: 0ms
17.02 09:08:17 TIMER: Clans cache...
17.02 09:08:17 TIMER: Clans cache: 0ms
17.02 09:08:17 TIMER: Check step...
17.02 09:08:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:17 TIMER: Check step: 0ms
17.02 09:08:17 TIMER: Check round...
17.02 09:08:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:08' OR rounddate = '2017-17-02 12:08' AND status <> 'finished'
17.02 09:08:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.49719234' AND avaliable = false AND finished <> true
17.02 09:08:17 TIMER: Check round: 1ms
17.02 09:08:17 TIMER: Check tournaments...
17.02 09:08:17 DB: SELECT * FROM tournament
17.02 09:08:17 TIMER: Check tournaments: 0ms
17.02 09:08:22 TIMER: Check step...
17.02 09:08:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:22 TIMER: Check step: 0ms
17.02 09:08:27 TIMER: Check step...
17.02 09:08:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:27 TIMER: Check step: 0ms
17.02 09:08:32 TIMER: Check step...
17.02 09:08:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:32 TIMER: Check step: 0ms
17.02 09:08:37 TIMER: Check step...
17.02 09:08:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:37 TIMER: Check step: 0ms
17.02 09:08:37 TIMER: Check tournaments...
17.02 09:08:37 DB: SELECT * FROM tournament
17.02 09:08:37 TIMER: Check tournaments: 0ms
17.02 09:08:42 TIMER: Check step...
17.02 09:08:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:42 TIMER: Check step: 0ms
17.02 09:08:47 TIMER: Check step...
17.02 09:08:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:47 TIMER: Check step: 0ms
17.02 09:08:52 TIMER: Check step...
17.02 09:08:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:52 TIMER: Check step: 0ms
17.02 09:08:57 TIMER: Check step...
17.02 09:08:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:08:57 TIMER: Check step: 0ms
17.02 09:08:57 TIMER: Check tournaments...
17.02 09:08:57 DB: SELECT * FROM tournament
17.02 09:08:57 TIMER: Check tournaments: 0ms
17.02 09:09:02 TIMER: Check step...
17.02 09:09:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:02 TIMER: Check step: 0ms
17.02 09:09:07 TIMER: Check step...
17.02 09:09:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:07 TIMER: Check step: 0ms
17.02 09:09:12 TIMER: Check step...
17.02 09:09:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:12 TIMER: Check step: 0ms
17.02 09:09:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true, _type => core/server.query }
17.02 09:09:16 DB: SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true
17.02 09:09:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:09:16 TIME: core/server.query : 0.64 ms
17.02 09:09:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:09:16 STATS: cache [battle], get [158 calls, 115 cache hits, 42 cache misses, 0 same version, 11 not found]
17.02 09:09:16 STATS: cache [battle], segments [269 calls, 226 hits, 42 misses]
17.02 09:09:16 STATS: cache [battle], database [1380 calls, 42 reads, 94 writes]
17.02 09:09:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:09:16 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:09:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:09:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:09:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:09:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 113, _type => core/cache.update }
17.02 09:09:16 STATS: cache [user], get [39 calls, 21 cache hits, 18 cache misses, 0 same version, 0 not found]
17.02 09:09:16 STATS: cache [user], segments [157 calls, 115 hits, 41 misses]
17.02 09:09:16 STATS: cache [user], database [1380 calls, 18 reads, 26 writes]
17.02 09:09:16 STATS: cache [user], lock [48 calls, 48 attempts, 19 failures]
17.02 09:09:16 STATS: cache manager [1], get [48 calls, total 0.03 sec spent, avg 0.53 ms]
17.02 09:09:16 STATS: cache manager [1], update [68 calls, total 0 sec spent, avg 0.05 ms]
17.02 09:09:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:09:16 TIME: core/cache.update : 0.23 ms
17.02 09:09:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 113, _type => core/cache.update }
17.02 09:09:16 STATS: cache [questdata], get [19 calls, 1 cache hits, 18 cache misses, 0 same version, 0 not found]
17.02 09:09:16 STATS: cache [questdata], segments [79 calls, 37 hits, 41 misses]
17.02 09:09:16 STATS: cache [questdata], database [1380 calls, 18 reads, 16 writes]
17.02 09:09:16 STATS: cache [questdata], lock [19 calls, 19 attempts, 0 failures]
17.02 09:09:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:09:16 TIME: core/cache.update : 0.17 ms
17.02 09:09:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 113, _type => core/user.logoutPost }
17.02 09:09:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:09:16 TIME: core/user.logoutPost : 0.06 ms
17.02 09:09:17 WRITEDB: UPDATE Users SET name = E'uid113', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2017-02-17 08:59:56.473135-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339996,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 113
17.02 09:09:17 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 113
17.02 09:09:17 TIMER: Clans cache...
17.02 09:09:17 TIMER: Clans cache: 0ms
17.02 09:09:17 TIMER: Check step...
17.02 09:09:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:17 TIMER: Check step: 0ms
17.02 09:09:17 TIMER: Check round...
17.02 09:09:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:09' OR rounddate = '2017-17-02 12:09' AND status <> 'finished'
17.02 09:09:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.55723457' AND avaliable = false AND finished <> true
17.02 09:09:17 TIMER: Check round: 1ms
17.02 09:09:17 TIMER: Check tournaments...
17.02 09:09:17 DB: SELECT * FROM tournament
17.02 09:09:17 TIMER: Check tournaments: 0ms
17.02 09:09:22 TIMER: Check step...
17.02 09:09:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:22 TIMER: Check step: 0ms
17.02 09:09:27 BLOCKREMOVE: user 113 removed
17.02 09:09:27 BLOCKREMOVE: questdata 113 removed
17.02 09:09:27 TIMER: Check step...
17.02 09:09:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:27 TIMER: Check step: 0ms
17.02 09:09:32 TIMER: Check step...
17.02 09:09:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:32 TIMER: Check step: 1ms
17.02 09:09:37 TIMER: Check step...
17.02 09:09:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:37 TIMER: Check step: 1ms
17.02 09:09:37 TIMER: Check tournaments...
17.02 09:09:37 DB: SELECT * FROM tournament
17.02 09:09:37 TIMER: Check tournaments: 0ms
17.02 09:09:42 TIMER: Check step...
17.02 09:09:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:42 TIMER: Check step: 0ms
17.02 09:09:47 TIMER: Check step...
17.02 09:09:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:47 TIMER: Check step: 0ms
17.02 09:09:52 TIMER: Check step...
17.02 09:09:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:52 TIMER: Check step: 1ms
17.02 09:09:57 TIMER: Check step...
17.02 09:09:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:09:57 TIMER: Check step: 0ms
17.02 09:09:57 TIMER: Check tournaments...
17.02 09:09:57 DB: SELECT * FROM tournament
17.02 09:09:57 TIMER: Check tournaments: 0ms
17.02 09:10:02 TIMER: Check step...
17.02 09:10:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:02 TIMER: Check step: 0ms
17.02 09:10:07 TIMER: Check step...
17.02 09:10:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:07 TIMER: Check step: 0ms
17.02 09:10:12 TIMER: Check step...
17.02 09:10:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:12 TIMER: Check step: 0ms
17.02 09:10:17 TIMER: Clans cache...
17.02 09:10:17 TIMER: Clans cache: 0ms
17.02 09:10:17 TIMER: Check step...
17.02 09:10:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:17 TIMER: Check step: 0ms
17.02 09:10:17 TIMER: Check round...
17.02 09:10:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:10' OR rounddate = '2017-17-02 12:10' AND status <> 'finished'
17.02 09:10:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.61725847' AND avaliable = false AND finished <> true
17.02 09:10:17 TIMER: Check round: 0ms
17.02 09:10:17 TIMER: Check tournaments...
17.02 09:10:17 DB: SELECT * FROM tournament
17.02 09:10:17 TIMER: Check tournaments: 0ms
17.02 09:10:22 TIMER: Check step...
17.02 09:10:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:22 TIMER: Check step: 0ms
17.02 09:10:27 TIMER: Check step...
17.02 09:10:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:27 TIMER: Check step: 0ms
17.02 09:10:32 TIMER: Check step...
17.02 09:10:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:32 TIMER: Check step: 1ms
17.02 09:10:37 TIMER: Check step...
17.02 09:10:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:37 TIMER: Check step: 0ms
17.02 09:10:37 TIMER: Check tournaments...
17.02 09:10:37 DB: SELECT * FROM tournament
17.02 09:10:37 TIMER: Check tournaments: 0ms
17.02 09:10:42 TIMER: Check step...
17.02 09:10:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:42 TIMER: Check step: 0ms
17.02 09:10:47 TIMER: Check step...
17.02 09:10:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:47 TIMER: Check step: 0ms
17.02 09:10:52 TIMER: Check step...
17.02 09:10:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:52 TIMER: Check step: 0ms
17.02 09:10:57 TIMER: Check step...
17.02 09:10:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:10:57 TIMER: Check step: 0ms
17.02 09:10:57 TIMER: Check tournaments...
17.02 09:10:57 DB: SELECT * FROM tournament
17.02 09:10:57 TIMER: Check tournaments: 0ms
17.02 09:11:02 TIMER: Check step...
17.02 09:11:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:02 TIMER: Check step: 0ms
17.02 09:11:07 TIMER: Check step...
17.02 09:11:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:07 TIMER: Check step: 0ms
17.02 09:11:12 TIMER: Check step...
17.02 09:11:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:12 TIMER: Check step: 0ms
17.02 09:11:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=90 OR secondid=90 AND finished <> true, _type => core/server.query }
17.02 09:11:16 DB: SELECT id FROM battle WHERE firstid=90 OR secondid=90 AND finished <> true
17.02 09:11:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:11:16 TIME: core/server.query : 0.69 ms
17.02 09:11:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:11:16 STATS: cache [battle], get [159 calls, 115 cache hits, 43 cache misses, 0 same version, 12 not found]
17.02 09:11:16 STATS: cache [battle], segments [270 calls, 226 hits, 43 misses]
17.02 09:11:16 STATS: cache [battle], database [1500 calls, 43 reads, 94 writes]
17.02 09:11:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:11:16 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:11:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:11:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:11:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:11:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 90, _type => core/cache.update }
17.02 09:11:16 STATS: cache [user], get [39 calls, 21 cache hits, 18 cache misses, 0 same version, 0 not found]
17.02 09:11:16 STATS: cache [user], segments [159 calls, 117 hits, 41 misses]
17.02 09:11:16 STATS: cache [user], database [1500 calls, 18 reads, 27 writes]
17.02 09:11:16 STATS: cache [user], lock [48 calls, 48 attempts, 19 failures]
17.02 09:11:16 STATS: cache manager [1], get [48 calls, total 0.03 sec spent, avg 0.53 ms]
17.02 09:11:16 STATS: cache manager [1], update [70 calls, total 0 sec spent, avg 0.06 ms]
17.02 09:11:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:11:16 TIME: core/cache.update : 0.24 ms
17.02 09:11:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 90, _type => core/cache.update }
17.02 09:11:16 STATS: cache [questdata], get [19 calls, 1 cache hits, 18 cache misses, 0 same version, 0 not found]
17.02 09:11:16 STATS: cache [questdata], segments [81 calls, 39 hits, 41 misses]
17.02 09:11:16 STATS: cache [questdata], database [1500 calls, 18 reads, 17 writes]
17.02 09:11:16 STATS: cache [questdata], lock [19 calls, 19 attempts, 0 failures]
17.02 09:11:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:11:16 TIME: core/cache.update : 0.17 ms
17.02 09:11:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 90, _type => core/user.logoutPost }
17.02 09:11:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:11:16 TIME: core/user.logoutPost : 0.06 ms
17.02 09:11:17 WRITEDB: UPDATE Users SET name = E'uid90', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid90', isbanned = E'false', regdate = E'2017-02-17 03:48:05.98115-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321286,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 90
17.02 09:11:17 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 90
17.02 09:11:17 TIMER: Clans cache...
17.02 09:11:17 TIMER: Clans cache: 0ms
17.02 09:11:17 TIMER: Check step...
17.02 09:11:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:17 TIMER: Check step: 0ms
17.02 09:11:17 TIMER: Check round...
17.02 09:11:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:11' OR rounddate = '2017-17-02 12:11' AND status <> 'finished'
17.02 09:11:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.67727884' AND avaliable = false AND finished <> true
17.02 09:11:17 TIMER: Check round: 1ms
17.02 09:11:17 TIMER: Check tournaments...
17.02 09:11:17 DB: SELECT * FROM tournament
17.02 09:11:17 TIMER: Check tournaments: 0ms
17.02 09:11:22 TIMER: Check step...
17.02 09:11:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:22 TIMER: Check step: 0ms
17.02 09:11:27 BLOCKREMOVE: user 90 removed
17.02 09:11:27 BLOCKREMOVE: questdata 90 removed
17.02 09:11:27 TIMER: Check step...
17.02 09:11:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:27 TIMER: Check step: 1ms
17.02 09:11:32 TIMER: Check step...
17.02 09:11:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:32 TIMER: Check step: 1ms
17.02 09:11:37 TIMER: Check step...
17.02 09:11:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:37 TIMER: Check step: 0ms
17.02 09:11:37 TIMER: Check tournaments...
17.02 09:11:37 DB: SELECT * FROM tournament
17.02 09:11:37 TIMER: Check tournaments: 0ms
17.02 09:11:42 TIMER: Check step...
17.02 09:11:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:42 TIMER: Check step: 0ms
17.02 09:11:47 TIMER: Check step...
17.02 09:11:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:47 TIMER: Check step: 0ms
17.02 09:11:52 TIMER: Check step...
17.02 09:11:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:52 TIMER: Check step: 0ms
17.02 09:11:57 TIMER: Check step...
17.02 09:11:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:11:57 TIMER: Check step: 0ms
17.02 09:11:57 TIMER: Check tournaments...
17.02 09:11:57 DB: SELECT * FROM tournament
17.02 09:11:57 TIMER: Check tournaments: 0ms
17.02 09:12:02 TIMER: Check step...
17.02 09:12:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:02 TIMER: Check step: 0ms
17.02 09:12:07 TIMER: Check step...
17.02 09:12:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:07 TIMER: Check step: 0ms
17.02 09:12:12 TIMER: Check step...
17.02 09:12:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:12 TIMER: Check step: 0ms
17.02 09:12:17 TIMER: Clans cache...
17.02 09:12:17 TIMER: Clans cache: 0ms
17.02 09:12:17 TIMER: Check step...
17.02 09:12:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:17 TIMER: Check step: 0ms
17.02 09:12:17 TIMER: Check round...
17.02 09:12:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:12' OR rounddate = '2017-17-02 12:12' AND status <> 'finished'
17.02 09:12:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.73730049' AND avaliable = false AND finished <> true
17.02 09:12:17 TIMER: Check round: 1ms
17.02 09:12:17 TIMER: Check tournaments...
17.02 09:12:17 DB: SELECT * FROM tournament
17.02 09:12:17 TIMER: Check tournaments: 0ms
17.02 09:12:22 TIMER: Check step...
17.02 09:12:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:22 TIMER: Check step: 0ms
17.02 09:12:27 TIMER: Check step...
17.02 09:12:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:27 TIMER: Check step: 0ms
17.02 09:12:32 TIMER: Check step...
17.02 09:12:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:32 TIMER: Check step: 0ms
17.02 09:12:37 TIMER: Check step...
17.02 09:12:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:37 TIMER: Check step: 0ms
17.02 09:12:37 TIMER: Check tournaments...
17.02 09:12:37 DB: SELECT * FROM tournament
17.02 09:12:37 TIMER: Check tournaments: 0ms
17.02 09:12:42 TIMER: Check step...
17.02 09:12:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:42 TIMER: Check step: 0ms
17.02 09:12:47 TIMER: Check step...
17.02 09:12:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:47 TIMER: Check step: 0ms
17.02 09:12:52 TIMER: Check step...
17.02 09:12:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:52 TIMER: Check step: 0ms
17.02 09:12:57 TIMER: Check step...
17.02 09:12:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:12:57 TIMER: Check step: 0ms
17.02 09:12:57 TIMER: Check tournaments...
17.02 09:12:57 DB: SELECT * FROM tournament
17.02 09:12:57 TIMER: Check tournaments: 0ms
17.02 09:13:02 TIMER: Check step...
17.02 09:13:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:02 TIMER: Check step: 0ms
17.02 09:13:07 TIMER: Check step...
17.02 09:13:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:07 TIMER: Check step: 0ms
17.02 09:13:12 TIMER: Check step...
17.02 09:13:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:12 TIMER: Check step: 1ms
17.02 09:13:17 TIMER: Clans cache...
17.02 09:13:17 TIMER: Clans cache: 0ms
17.02 09:13:17 TIMER: Check step...
17.02 09:13:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:17 TIMER: Check step: 0ms
17.02 09:13:17 TIMER: Check round...
17.02 09:13:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:13' OR rounddate = '2017-17-02 12:13' AND status <> 'finished'
17.02 09:13:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.79732132' AND avaliable = false AND finished <> true
17.02 09:13:17 TIMER: Check round: 0ms
17.02 09:13:17 TIMER: Check tournaments...
17.02 09:13:17 DB: SELECT * FROM tournament
17.02 09:13:17 TIMER: Check tournaments: 0ms
17.02 09:13:22 TIMER: Check step...
17.02 09:13:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:22 TIMER: Check step: 0ms
17.02 09:13:27 TIMER: Check step...
17.02 09:13:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:27 TIMER: Check step: 0ms
17.02 09:13:32 TIMER: Check step...
17.02 09:13:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:32 TIMER: Check step: 0ms
17.02 09:13:37 TIMER: Check step...
17.02 09:13:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:37 TIMER: Check step: 0ms
17.02 09:13:37 TIMER: Check tournaments...
17.02 09:13:37 DB: SELECT * FROM tournament
17.02 09:13:37 TIMER: Check tournaments: 0ms
17.02 09:13:42 TIMER: Check step...
17.02 09:13:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:42 TIMER: Check step: 0ms
17.02 09:13:47 TIMER: Check step...
17.02 09:13:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:47 TIMER: Check step: 0ms
17.02 09:13:52 TIMER: Check step...
17.02 09:13:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:52 TIMER: Check step: 0ms
17.02 09:13:57 TIMER: Check step...
17.02 09:13:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:13:57 TIMER: Check step: 0ms
17.02 09:13:57 TIMER: Check tournaments...
17.02 09:13:57 DB: SELECT * FROM tournament
17.02 09:13:57 TIMER: Check tournaments: 0ms
17.02 09:14:02 TIMER: Check step...
17.02 09:14:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:02 TIMER: Check step: 0ms
17.02 09:14:07 TIMER: Check step...
17.02 09:14:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:07 TIMER: Check step: 0ms
17.02 09:14:12 TIMER: Check step...
17.02 09:14:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:12 TIMER: Check step: 0ms
17.02 09:14:17 TIMER: Clans cache...
17.02 09:14:17 TIMER: Clans cache: 0ms
17.02 09:14:17 TIMER: Check step...
17.02 09:14:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:17 TIMER: Check step: 0ms
17.02 09:14:17 TIMER: Check round...
17.02 09:14:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:14' OR rounddate = '2017-17-02 12:14' AND status <> 'finished'
17.02 09:14:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.85734367' AND avaliable = false AND finished <> true
17.02 09:14:17 TIMER: Check round: 1ms
17.02 09:14:17 TIMER: Check tournaments...
17.02 09:14:17 DB: SELECT * FROM tournament
17.02 09:14:17 TIMER: Check tournaments: 0ms
17.02 09:14:22 TIMER: Check step...
17.02 09:14:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:22 TIMER: Check step: 0ms
17.02 09:14:27 TIMER: Check step...
17.02 09:14:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:27 TIMER: Check step: 0ms
17.02 09:14:32 TIMER: Check step...
17.02 09:14:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:32 TIMER: Check step: 0ms
17.02 09:14:37 TIMER: Check step...
17.02 09:14:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:37 TIMER: Check step: 0ms
17.02 09:14:37 TIMER: Check tournaments...
17.02 09:14:37 DB: SELECT * FROM tournament
17.02 09:14:37 TIMER: Check tournaments: 0ms
17.02 09:14:42 TIMER: Check step...
17.02 09:14:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:42 TIMER: Check step: 0ms
17.02 09:14:47 TIMER: Check step...
17.02 09:14:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:47 TIMER: Check step: 0ms
17.02 09:14:52 TIMER: Check step...
17.02 09:14:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:52 TIMER: Check step: 0ms
17.02 09:14:57 TIMER: Check step...
17.02 09:14:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:14:57 TIMER: Check step: 0ms
17.02 09:14:57 TIMER: Check tournaments...
17.02 09:14:57 DB: SELECT * FROM tournament
17.02 09:14:57 TIMER: Check tournaments: 0ms
17.02 09:15:02 TIMER: Check step...
17.02 09:15:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:02 TIMER: Check step: 0ms
17.02 09:15:07 TIMER: Check step...
17.02 09:15:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:07 TIMER: Check step: 0ms
17.02 09:15:12 TIMER: Check step...
17.02 09:15:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:12 TIMER: Check step: 1ms
17.02 09:15:17 TIMER: Clans cache...
17.02 09:15:17 TIMER: Clans cache: 0ms
17.02 09:15:17 TIMER: Check step...
17.02 09:15:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:17 TIMER: Check step: 0ms
17.02 09:15:17 TIMER: Check round...
17.02 09:15:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:15' OR rounddate = '2017-17-02 12:15' AND status <> 'finished'
17.02 09:15:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.91736649' AND avaliable = false AND finished <> true
17.02 09:15:17 TIMER: Check round: 0ms
17.02 09:15:17 TIMER: Check tournaments...
17.02 09:15:17 DB: SELECT * FROM tournament
17.02 09:15:17 TIMER: Check tournaments: 0ms
17.02 09:15:22 TIMER: Check step...
17.02 09:15:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:22 TIMER: Check step: 0ms
17.02 09:15:27 TIMER: Check step...
17.02 09:15:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:27 TIMER: Check step: 0ms
17.02 09:15:32 TIMER: Check step...
17.02 09:15:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:32 TIMER: Check step: 0ms
17.02 09:15:37 TIMER: Check step...
17.02 09:15:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:37 TIMER: Check step: 0ms
17.02 09:15:37 TIMER: Check tournaments...
17.02 09:15:37 DB: SELECT * FROM tournament
17.02 09:15:37 TIMER: Check tournaments: 0ms
17.02 09:15:42 TIMER: Check step...
17.02 09:15:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:42 TIMER: Check step: 1ms
17.02 09:15:47 TIMER: Check step...
17.02 09:15:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:47 TIMER: Check step: 0ms
17.02 09:15:52 TIMER: Check step...
17.02 09:15:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:52 TIMER: Check step: 0ms
17.02 09:15:57 TIMER: Check step...
17.02 09:15:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:15:57 TIMER: Check step: 0ms
17.02 09:15:57 TIMER: Check tournaments...
17.02 09:15:57 DB: SELECT * FROM tournament
17.02 09:15:57 TIMER: Check tournaments: 0ms
17.02 09:16:02 TIMER: Check step...
17.02 09:16:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:02 TIMER: Check step: 0ms
17.02 09:16:07 TIMER: Check step...
17.02 09:16:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:07 TIMER: Check step: 0ms
17.02 09:16:12 TIMER: Check step...
17.02 09:16:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:12 TIMER: Check step: 0ms
17.02 09:16:17 TIMER: Clans cache...
17.02 09:16:17 TIMER: Clans cache: 0ms
17.02 09:16:17 TIMER: Check step...
17.02 09:16:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:17 TIMER: Check step: 0ms
17.02 09:16:17 TIMER: Check round...
17.02 09:16:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:16' OR rounddate = '2017-17-02 12:16' AND status <> 'finished'
17.02 09:16:17 DB: SELECT * FROM battle WHERE endtime >= '1487340.97738629' AND avaliable = false AND finished <> true
17.02 09:16:17 TIMER: Check round: 1ms
17.02 09:16:17 TIMER: Check tournaments...
17.02 09:16:17 DB: SELECT * FROM tournament
17.02 09:16:17 TIMER: Check tournaments: 0ms
17.02 09:16:22 TIMER: Check step...
17.02 09:16:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:22 TIMER: Check step: 1ms
17.02 09:16:27 TIMER: Check step...
17.02 09:16:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:27 TIMER: Check step: 0ms
17.02 09:16:32 TIMER: Check step...
17.02 09:16:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:32 TIMER: Check step: 0ms
17.02 09:16:37 TIMER: Check step...
17.02 09:16:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:37 TIMER: Check step: 0ms
17.02 09:16:37 TIMER: Check tournaments...
17.02 09:16:37 DB: SELECT * FROM tournament
17.02 09:16:37 TIMER: Check tournaments: 0ms
17.02 09:16:42 TIMER: Check step...
17.02 09:16:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:42 TIMER: Check step: 0ms
17.02 09:16:47 TIMER: Check step...
17.02 09:16:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:47 TIMER: Check step: 1ms
17.02 09:16:52 TIMER: Check step...
17.02 09:16:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:52 TIMER: Check step: 0ms
17.02 09:16:57 TIMER: Check step...
17.02 09:16:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:16:57 TIMER: Check step: 0ms
17.02 09:16:57 TIMER: Check tournaments...
17.02 09:16:57 DB: SELECT * FROM tournament
17.02 09:16:57 TIMER: Check tournaments: 0ms
17.02 09:17:02 TIMER: Check step...
17.02 09:17:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:02 TIMER: Check step: 0ms
17.02 09:17:07 TIMER: Check step...
17.02 09:17:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:07 TIMER: Check step: 0ms
17.02 09:17:12 TIMER: Check step...
17.02 09:17:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:12 TIMER: Check step: 0ms
17.02 09:17:17 TIMER: Clans cache...
17.02 09:17:17 TIMER: Clans cache: 0ms
17.02 09:17:17 TIMER: Check step...
17.02 09:17:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:17 TIMER: Check step: 0ms
17.02 09:17:17 TIMER: Check round...
17.02 09:17:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:17' OR rounddate = '2017-17-02 12:17' AND status <> 'finished'
17.02 09:17:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.03741231' AND avaliable = false AND finished <> true
17.02 09:17:17 TIMER: Check round: 0ms
17.02 09:17:17 TIMER: Check tournaments...
17.02 09:17:17 DB: SELECT * FROM tournament
17.02 09:17:17 TIMER: Check tournaments: 0ms
17.02 09:17:22 TIMER: Check step...
17.02 09:17:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:22 TIMER: Check step: 0ms
17.02 09:17:27 TIMER: Check step...
17.02 09:17:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:27 TIMER: Check step: 0ms
17.02 09:17:32 TIMER: Check step...
17.02 09:17:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:32 TIMER: Check step: 0ms
17.02 09:17:37 TIMER: Check step...
17.02 09:17:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:37 TIMER: Check step: 0ms
17.02 09:17:37 TIMER: Check tournaments...
17.02 09:17:37 DB: SELECT * FROM tournament
17.02 09:17:37 TIMER: Check tournaments: 0ms
17.02 09:17:42 TIMER: Check step...
17.02 09:17:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:42 TIMER: Check step: 0ms
17.02 09:17:47 TIMER: Check step...
17.02 09:17:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:47 TIMER: Check step: 0ms
17.02 09:17:52 TIMER: Check step...
17.02 09:17:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:52 TIMER: Check step: 0ms
17.02 09:17:57 TIMER: Check step...
17.02 09:17:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:17:57 TIMER: Check step: 0ms
17.02 09:17:57 TIMER: Check tournaments...
17.02 09:17:57 DB: SELECT * FROM tournament
17.02 09:17:57 TIMER: Check tournaments: 0ms
17.02 09:18:02 TIMER: Check step...
17.02 09:18:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:02 TIMER: Check step: 0ms
17.02 09:18:07 TIMER: Check step...
17.02 09:18:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:07 TIMER: Check step: 0ms
17.02 09:18:12 TIMER: Check step...
17.02 09:18:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:12 TIMER: Check step: 0ms
17.02 09:18:17 TIMER: Clans cache...
17.02 09:18:17 TIMER: Clans cache: 0ms
17.02 09:18:17 TIMER: Check step...
17.02 09:18:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:17 TIMER: Check step: 0ms
17.02 09:18:17 TIMER: Check round...
17.02 09:18:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:18' OR rounddate = '2017-17-02 12:18' AND status <> 'finished'
17.02 09:18:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.09743114' AND avaliable = false AND finished <> true
17.02 09:18:17 TIMER: Check round: 1ms
17.02 09:18:17 TIMER: Check tournaments...
17.02 09:18:17 DB: SELECT * FROM tournament
17.02 09:18:17 TIMER: Check tournaments: 0ms
17.02 09:18:22 TIMER: Check step...
17.02 09:18:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:22 TIMER: Check step: 0ms
17.02 09:18:27 TIMER: Check step...
17.02 09:18:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:27 TIMER: Check step: 0ms
17.02 09:18:32 TIMER: Check step...
17.02 09:18:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:32 TIMER: Check step: 0ms
17.02 09:18:37 TIMER: Check step...
17.02 09:18:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:37 TIMER: Check step: 0ms
17.02 09:18:37 TIMER: Check tournaments...
17.02 09:18:37 DB: SELECT * FROM tournament
17.02 09:18:37 TIMER: Check tournaments: 0ms
17.02 09:18:42 TIMER: Check step...
17.02 09:18:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:42 TIMER: Check step: 0ms
17.02 09:18:47 TIMER: Check step...
17.02 09:18:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:47 TIMER: Check step: 0ms
17.02 09:18:52 TIMER: Check step...
17.02 09:18:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:52 TIMER: Check step: 1ms
17.02 09:18:57 TIMER: Check step...
17.02 09:18:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:18:57 TIMER: Check step: 0ms
17.02 09:18:57 TIMER: Check tournaments...
17.02 09:18:57 DB: SELECT * FROM tournament
17.02 09:18:57 TIMER: Check tournaments: 0ms
17.02 09:19:02 TIMER: Check step...
17.02 09:19:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:02 TIMER: Check step: 0ms
17.02 09:19:07 TIMER: Check step...
17.02 09:19:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:07 TIMER: Check step: 1ms
17.02 09:19:12 TIMER: Check step...
17.02 09:19:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:12 TIMER: Check step: 0ms
17.02 09:19:17 TIMER: Clans cache...
17.02 09:19:17 TIMER: Clans cache: 0ms
17.02 09:19:17 TIMER: Check step...
17.02 09:19:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:17 TIMER: Check step: 0ms
17.02 09:19:17 TIMER: Check round...
17.02 09:19:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:19' OR rounddate = '2017-17-02 12:19' AND status <> 'finished'
17.02 09:19:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.1574515' AND avaliable = false AND finished <> true
17.02 09:19:17 TIMER: Check round: 0ms
17.02 09:19:17 TIMER: Check tournaments...
17.02 09:19:17 DB: SELECT * FROM tournament
17.02 09:19:17 TIMER: Check tournaments: 0ms
17.02 09:19:22 TIMER: Check step...
17.02 09:19:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:22 TIMER: Check step: 0ms
17.02 09:19:27 TIMER: Check step...
17.02 09:19:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:27 TIMER: Check step: 0ms
17.02 09:19:32 TIMER: Check step...
17.02 09:19:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:32 TIMER: Check step: 0ms
17.02 09:19:37 TIMER: Check step...
17.02 09:19:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:37 TIMER: Check step: 0ms
17.02 09:19:37 TIMER: Check tournaments...
17.02 09:19:37 DB: SELECT * FROM tournament
17.02 09:19:37 TIMER: Check tournaments: 0ms
17.02 09:19:42 TIMER: Check step...
17.02 09:19:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:42 TIMER: Check step: 0ms
17.02 09:19:47 TIMER: Check step...
17.02 09:19:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:47 TIMER: Check step: 0ms
17.02 09:19:52 TIMER: Check step...
17.02 09:19:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:52 TIMER: Check step: 0ms
17.02 09:19:57 TIMER: Check step...
17.02 09:19:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:19:57 TIMER: Check step: 0ms
17.02 09:19:57 TIMER: Check tournaments...
17.02 09:19:57 DB: SELECT * FROM tournament
17.02 09:19:57 TIMER: Check tournaments: 0ms
17.02 09:20:02 TIMER: Check step...
17.02 09:20:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:02 TIMER: Check step: 0ms
17.02 09:20:07 TIMER: Check step...
17.02 09:20:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:07 TIMER: Check step: 0ms
17.02 09:20:12 TIMER: Check step...
17.02 09:20:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:12 TIMER: Check step: 0ms
17.02 09:20:17 TIMER: Clans cache...
17.02 09:20:17 TIMER: Clans cache: 0ms
17.02 09:20:17 TIMER: Check step...
17.02 09:20:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:17 TIMER: Check step: 0ms
17.02 09:20:17 TIMER: Check round...
17.02 09:20:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:20' OR rounddate = '2017-17-02 12:20' AND status <> 'finished'
17.02 09:20:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.21746944' AND avaliable = false AND finished <> true
17.02 09:20:17 TIMER: Check round: 1ms
17.02 09:20:17 TIMER: Check tournaments...
17.02 09:20:17 DB: SELECT * FROM tournament
17.02 09:20:17 TIMER: Check tournaments: 0ms
17.02 09:20:22 TIMER: Check step...
17.02 09:20:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:22 TIMER: Check step: 0ms
17.02 09:20:27 TIMER: Check step...
17.02 09:20:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:27 TIMER: Check step: 0ms
17.02 09:20:32 TIMER: Check step...
17.02 09:20:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:32 TIMER: Check step: 0ms
17.02 09:20:37 TIMER: Check step...
17.02 09:20:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:37 TIMER: Check step: 0ms
17.02 09:20:37 TIMER: Check tournaments...
17.02 09:20:37 DB: SELECT * FROM tournament
17.02 09:20:37 TIMER: Check tournaments: 0ms
17.02 09:20:42 TIMER: Check step...
17.02 09:20:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:42 TIMER: Check step: 0ms
17.02 09:20:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid86' AND Password = E'uid86', _type => core/server.query }
17.02 09:20:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid86' AND Password = E'uid86'
17.02 09:20:45 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid86, networkid => , isbanned => false, id => 86 }}, errorCode => ok, _type => core/server.query }
17.02 09:20:45 TIME: core/server.query : 1.12 ms
17.02 09:20:45 NET: vdl.0 (thread) request core/user.isOnlineID { id => 86, _type => core/user.isOnlineID }
17.02 09:20:45 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:20:45 TIME: core/user.isOnlineID : 0.05 ms
17.02 09:20:45 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 86, _type => core/cache.get }
17.02 09:20:45 STATS: cache [user], get [39 calls, 21 cache hits, 18 cache misses, 0 same version, 0 not found]
17.02 09:20:45 STATS: cache [user], segments [161 calls, 119 hits, 41 misses]
17.02 09:20:45 STATS: cache [user], database [2069 calls, 18 reads, 28 writes]
17.02 09:20:45 STATS: cache [user], lock [49 calls, 49 attempts, 19 failures]
17.02 09:20:45 READDB: SELECT * FROM Users WHERE ID = 86
17.02 09:20:45 STATS: cache manager [1], get [49 calls, total 0.03 sec spent, avg 0.54 ms]
17.02 09:20:45 STATS: cache manager [1], update [71 calls, total 0 sec spent, avg 0.06 ms]
17.02 09:20:45 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid86, money => 0, deleted => false, year => , email => , networktype =>   , password => uid86, isbanned => false, regdate => 2017-02-14 04:31:56.112808-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487064718, lastLoginDate => 45, lastLoadDate => 215 }, effects => { list => [] } }}, version => 0, id => 86 } }
17.02 09:20:45 TIME: core/cache.get : 1.15 ms
17.02 09:20:45 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 86, _type => core/cache.get }
17.02 09:20:45 STATS: cache [questdata], get [19 calls, 1 cache hits, 18 cache misses, 0 same version, 0 not found]
17.02 09:20:45 STATS: cache [questdata], segments [83 calls, 41 hits, 41 misses]
17.02 09:20:45 STATS: cache [questdata], database [2069 calls, 18 reads, 18 writes]
17.02 09:20:45 STATS: cache [questdata], lock [20 calls, 20 attempts, 0 failures]
17.02 09:20:45 READDB: SELECT * FROM UserQuests WHERE ID = 86
17.02 09:20:45 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 86 } }
17.02 09:20:45 TIME: core/cache.get : 5.3 ms
17.02 09:20:45 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 86, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 09:20:45 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:20:45 TIME: core/user.loginPost : 0.2 ms
17.02 09:20:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 86 AND Date = 'today'::timestamp, _type => core/server.query }
17.02 09:20:45 DB: SELECT ID FROM TempUserLogins WHERE UserID = 86 AND Date = 'today'::timestamp
17.02 09:20:45 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:20:45 TIME: core/server.query : 1.18 ms
17.02 09:20:46 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (86, 'today'::timestamp)
17.02 09:20:47 TIMER: Check step...
17.02 09:20:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:47 TIMER: Check step: 0ms
17.02 09:20:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1487341245, lastLoginDate => 48, lastLoadDate => 218 } }}, type => user, unlock => false, id => 86, _type => core/cache.update }
17.02 09:20:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:20:51 TIME: core/cache.update : 0.19 ms
17.02 09:20:52 WRITEDB: UPDATE Users SET name = E'uid86', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid86', isbanned = E'false', regdate = E'2017-02-14 04:31:56.112808-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487341245,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 86
17.02 09:20:52 TIMER: Check step...
17.02 09:20:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:52 TIMER: Check step: 0ms
17.02 09:20:57 TIMER: Check step...
17.02 09:20:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:20:57 TIMER: Check step: 0ms
17.02 09:20:57 TIMER: Check tournaments...
17.02 09:20:57 DB: SELECT * FROM tournament
17.02 09:20:57 TIMER: Check tournaments: 0ms
17.02 09:21:02 TIMER: Check step...
17.02 09:21:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:02 TIMER: Check step: 0ms
17.02 09:21:07 TIMER: Check step...
17.02 09:21:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:07 TIMER: Check step: 0ms
17.02 09:21:12 TIMER: Check step...
17.02 09:21:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:12 TIMER: Check step: 0ms
17.02 09:21:17 TIMER: Clans cache...
17.02 09:21:17 TIMER: Clans cache: 0ms
17.02 09:21:17 TIMER: Check step...
17.02 09:21:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:17 TIMER: Check step: 0ms
17.02 09:21:17 TIMER: Check round...
17.02 09:21:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:21' OR rounddate = '2017-17-02 12:21' AND status <> 'finished'
17.02 09:21:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.27749246' AND avaliable = false AND finished <> true
17.02 09:21:17 TIMER: Check round: 1ms
17.02 09:21:17 TIMER: Check tournaments...
17.02 09:21:17 DB: SELECT * FROM tournament
17.02 09:21:17 TIMER: Check tournaments: 0ms
17.02 09:21:22 TIMER: Check step...
17.02 09:21:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:22 TIMER: Check step: 0ms
17.02 09:21:27 TIMER: Check step...
17.02 09:21:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:27 TIMER: Check step: 1ms
17.02 09:21:32 TIMER: Check step...
17.02 09:21:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:32 TIMER: Check step: 0ms
17.02 09:21:37 TIMER: Check step...
17.02 09:21:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:37 TIMER: Check step: 0ms
17.02 09:21:37 TIMER: Check tournaments...
17.02 09:21:37 DB: SELECT * FROM tournament
17.02 09:21:37 TIMER: Check tournaments: 0ms
17.02 09:21:42 TIMER: Check step...
17.02 09:21:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:42 TIMER: Check step: 0ms
17.02 09:21:47 TIMER: Check step...
17.02 09:21:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:47 TIMER: Check step: 1ms
17.02 09:21:52 TIMER: Check step...
17.02 09:21:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:52 TIMER: Check step: 1ms
17.02 09:21:52 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=86 OR secondid=86 AND finished <> true, _type => core/server.query }
17.02 09:21:52 DB: SELECT id FROM battle WHERE firstid=86 OR secondid=86 AND finished <> true
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:21:52 TIME: core/server.query : 0.66 ms
17.02 09:21:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:21:52 STATS: cache [battle], get [160 calls, 115 cache hits, 44 cache misses, 0 same version, 13 not found]
17.02 09:21:52 STATS: cache [battle], segments [271 calls, 226 hits, 44 misses]
17.02 09:21:52 STATS: cache [battle], database [2136 calls, 44 reads, 94 writes]
17.02 09:21:52 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:21:52 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:21:52 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:21:52 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:21:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:21:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 86, _type => core/cache.update }
17.02 09:21:52 STATS: cache [user], get [40 calls, 21 cache hits, 19 cache misses, 0 same version, 0 not found]
17.02 09:21:52 STATS: cache [user], segments [164 calls, 120 hits, 43 misses]
17.02 09:21:52 STATS: cache [user], database [2136 calls, 19 reads, 29 writes]
17.02 09:21:52 STATS: cache [user], lock [49 calls, 49 attempts, 19 failures]
17.02 09:21:52 STATS: cache manager [1], get [50 calls, total 0.03 sec spent, avg 0.63 ms]
17.02 09:21:52 STATS: cache manager [1], update [73 calls, total 0 sec spent, avg 0.06 ms]
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:21:52 TIME: core/cache.update : 0.25 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 86, _type => core/cache.update }
17.02 09:21:52 STATS: cache [questdata], get [20 calls, 1 cache hits, 19 cache misses, 0 same version, 0 not found]
17.02 09:21:52 STATS: cache [questdata], segments [85 calls, 41 hits, 43 misses]
17.02 09:21:52 STATS: cache [questdata], database [2136 calls, 19 reads, 18 writes]
17.02 09:21:52 STATS: cache [questdata], lock [20 calls, 20 attempts, 0 failures]
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:21:52 TIME: core/cache.update : 0.17 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 86, _type => core/user.logoutPost }
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:21:52 TIME: core/user.logoutPost : 0.05 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'nellil', _type => core/server.query }
17.02 09:21:52 DB: SELECT ID FROM Users WHERE Name = E'nellil'
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:21:52 TIME: core/server.query : 1.02 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
17.02 09:21:52 DB: SELECT nextval('Users_id_seq') AS id
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 114 }}, errorCode => ok, _type => core/server.query }
17.02 09:21:52 TIME: core/server.query : 0.64 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/user.register { password => qwerty1, name => nellil, fullParams => { city => Казань, password => qwerty1, name => nellil, year => 1987, networkid => , networktype => , email => nlabunskaua@mail.ru, messageType => user.register, id => 114 }, networkid => , connectionID => 10360531, networktype => , email => , id => 114, _type => core/user.register }
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/user.register { errorCode => ok, _type => core/user.register }
17.02 09:21:52 TIME: core/user.register : 0.05 ms
17.02 09:21:52 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (114,E'nellil',E'',E'',E'qwerty1',E'', now())
17.02 09:21:52 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (114, 0)
17.02 09:21:52 READDB: SELECT * FROM Users WHERE ID = 114
17.02 09:21:52 DB: UPDATE Users SET params=E'{"attrs":{},"inventory":{"list":[]}, "info": {"city":"Казань", "year": "1987", "email": "nlabunskaua@mail.ru"}}' WHERE id=114
17.02 09:21:52 READDB: SELECT ID FROM UserQuests WHERE ID = 114
17.02 09:21:52 READDB: INSERT INTO UserQuests (ID) VALUES (114)
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => qwerty1, name => nellil, _isNotify => true, fullParams => { city => Казань, password => qwerty1, name => nellil, year => 1987, networkid => , networktype => , email => nlabunskaua@mail.ru, messageType => user.register, id => 114 }, networkid => , connectionID => 10360531, networktype => , email => , id => 114, _type => core/user.registerResponse }
17.02 09:21:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'nellil' AND Password = E'qwerty1', _type => core/server.query }
17.02 09:21:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'nellil' AND Password = E'qwerty1'
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => nellil, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
17.02 09:21:52 TIME: core/server.query : 1.15 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:21:52 TIME: core/user.isOnlineID : 0.05 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => nellil, money => 0, deleted => false, year => , email => , networktype =>   , password => qwerty1, isbanned => false, regdate => 2017-02-17 09:21:52.84826-05, city => , language =>   , networkid => , params => { inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 114 } }
17.02 09:21:52 TIME: core/cache.get : 0.17 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
17.02 09:21:52 READDB: SELECT * FROM UserQuests WHERE ID = 114
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 114 } }
17.02 09:21:52 TIME: core/cache.get : 0.42 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:21:52 TIME: core/user.loginPost : 0.04 ms
17.02 09:21:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 114 AND Date = 'today'::timestamp, _type => core/server.query }
17.02 09:21:52 DB: SELECT ID FROM TempUserLogins WHERE UserID = 114 AND Date = 'today'::timestamp
17.02 09:21:52 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:21:52 TIME: core/server.query : 0.4 ms
17.02 09:21:53 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (114, 'today'::timestamp)
17.02 09:21:53 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 114, _type => vdl/cache.user.getData, money => 0 }
17.02 09:21:53 DB: SELECT params FROM users WHERE id=114
17.02 09:21:53 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Казань, year => 1987, email => nlabunskaua@mail.ru }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
17.02 09:21:53 TIME: vdl/cache.user.getData : 0.75 ms
17.02 09:21:53 WRITEDB: UPDATE Users SET name = E'uid86', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid86', isbanned = E'false', regdate = E'2017-02-14 04:31:56.112808-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487341245,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 86
17.02 09:21:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 86
17.02 09:21:55 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 114 }
17.02 09:21:55 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:21:55 TIME: vdl/cache.user.getAccessFriend : 0.29 ms
17.02 09:21:57 TIMER: Check step...
17.02 09:21:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:21:57 TIMER: Check step: 0ms
17.02 09:21:57 TIMER: Check tournaments...
17.02 09:21:57 DB: SELECT * FROM tournament
17.02 09:21:57 TIMER: Check tournaments: 0ms
17.02 09:21:58 WRITEDB: UPDATE Users SET name = E'nellil', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty1', isbanned = E'false', regdate = E'2017-02-17 09:21:52.84826-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487341312,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 114
17.02 09:22:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1487341312, lastLoginDate => 48, lastLoadDate => 218 } }}, type => user, unlock => false, id => 114, _type => core/cache.update }
17.02 09:22:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:22:01 TIME: core/cache.update : 0.12 ms
17.02 09:22:02 TIMER: Check step...
17.02 09:22:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:02 TIMER: Check step: 0ms
17.02 09:22:02 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 114 }, _type => vdl/cache.battle.findRandom }
17.02 09:22:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 09:22:02 TIME: vdl/cache.battle.findRandom : 0.05 ms
17.02 09:22:03 BLOCKREMOVE: user 86 removed
17.02 09:22:03 BLOCKREMOVE: questdata 86 removed
17.02 09:22:03 WRITEDB: UPDATE Users SET name = E'nellil', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty1', isbanned = E'false', regdate = E'2017-02-17 09:21:52.84826-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487341312,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 114
17.02 09:22:07 TIMER: Check step...
17.02 09:22:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:07 TIMER: Check step: 0ms
17.02 09:22:12 TIMER: Check step...
17.02 09:22:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:12 TIMER: Check step: 0ms
17.02 09:22:12 NET: vdl.0 (thread) request vdl/cache.battle.closeFind { userId => 114, _type => vdl/cache.battle.closeFind }
17.02 09:22:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
17.02 09:22:12 TIME: vdl/cache.battle.closeFind : 0.06 ms
17.02 09:22:16 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 114 }
17.02 09:22:16 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:22:16 TIME: vdl/cache.user.getFriendList : 0.07 ms
17.02 09:22:17 TIMER: Clans cache...
17.02 09:22:17 TIMER: Clans cache: 0ms
17.02 09:22:17 TIMER: Check step...
17.02 09:22:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:17 TIMER: Check step: 0ms
17.02 09:22:17 TIMER: Check round...
17.02 09:22:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:22' OR rounddate = '2017-17-02 12:22' AND status <> 'finished'
17.02 09:22:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.3375191' AND avaliable = false AND finished <> true
17.02 09:22:17 TIMER: Check round: 0ms
17.02 09:22:17 TIMER: Check tournaments...
17.02 09:22:17 DB: SELECT * FROM tournament
17.02 09:22:17 TIMER: Check tournaments: 0ms
17.02 09:22:22 TIMER: Check step...
17.02 09:22:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:22 TIMER: Check step: 0ms
17.02 09:22:24 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
17.02 09:22:24 DB: SELECT * FROM tournament WHERE status <> 'finished'
17.02 09:22:24 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [], count => 0, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.02 09:22:24 TIME: vdl/cache.tournament.getAvailableTournament : 0.69 ms
17.02 09:22:27 TIMER: Check step...
17.02 09:22:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:27 TIMER: Check step: 0ms
17.02 09:22:32 TIMER: Check step...
17.02 09:22:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:32 TIMER: Check step: 0ms
17.02 09:22:37 TIMER: Check step...
17.02 09:22:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:37 TIMER: Check step: 0ms
17.02 09:22:37 TIMER: Check tournaments...
17.02 09:22:37 DB: SELECT * FROM tournament
17.02 09:22:37 TIMER: Check tournaments: 0ms
17.02 09:22:40 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 114 }, _type => vdl/cache.battle.findRandom }
17.02 09:22:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 09:22:40 TIME: vdl/cache.battle.findRandom : 0.06 ms
17.02 09:22:42 TIMER: Check step...
17.02 09:22:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:42 TIMER: Check step: 0ms
17.02 09:22:47 TIMER: Check step...
17.02 09:22:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:47 TIMER: Check step: 0ms
17.02 09:22:52 TIMER: Check step...
17.02 09:22:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:52 TIMER: Check step: 0ms
17.02 09:22:54 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid108' AND Password = E'uid108', _type => core/server.query }
17.02 09:22:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid108' AND Password = E'uid108'
17.02 09:22:54 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid108, networkid => , isbanned => false, id => 108 }}, errorCode => ok, _type => core/server.query }
17.02 09:22:54 TIME: core/server.query : 1 ms
17.02 09:22:54 NET: vdl.0 (thread) request core/user.isOnlineID { id => 108, _type => core/user.isOnlineID }
17.02 09:22:54 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:22:54 TIME: core/user.isOnlineID : 0.06 ms
17.02 09:22:54 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 108, _type => core/cache.get }
17.02 09:22:54 STATS: cache [user], get [45 calls, 25 cache hits, 20 cache misses, 0 same version, 0 not found]
17.02 09:22:54 STATS: cache [user], segments [176 calls, 128 hits, 45 misses]
17.02 09:22:54 STATS: cache [user], database [2197 calls, 20 reads, 32 writes]
17.02 09:22:54 STATS: cache [user], lock [52 calls, 52 attempts, 19 failures]
17.02 09:22:54 READDB: SELECT * FROM Users WHERE ID = 108
17.02 09:22:54 STATS: cache manager [1], get [54 calls, total 0.03 sec spent, avg 0.62 ms]
17.02 09:22:54 STATS: cache manager [1], update [76 calls, total 0 sec spent, avg 0.06 ms]
17.02 09:22:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid108, money => 0, deleted => false, year => , email => , networktype =>   , password => uid108, isbanned => false, regdate => 2017-02-17 08:55:52.594924-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487339752, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 108 } }
17.02 09:22:54 TIME: core/cache.get : 1.16 ms
17.02 09:22:54 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 108, _type => core/cache.get }
17.02 09:22:54 STATS: cache [questdata], get [21 calls, 1 cache hits, 20 cache misses, 0 same version, 0 not found]
17.02 09:22:54 STATS: cache [questdata], segments [89 calls, 43 hits, 45 misses]
17.02 09:22:54 STATS: cache [questdata], database [2197 calls, 20 reads, 19 writes]
17.02 09:22:54 STATS: cache [questdata], lock [22 calls, 22 attempts, 0 failures]
17.02 09:22:54 READDB: SELECT * FROM UserQuests WHERE ID = 108
17.02 09:22:54 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 108 } }
17.02 09:22:54 TIME: core/cache.get : 0.6 ms
17.02 09:22:54 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 108, _type => core/user.loginPost, ipAddr => 188.162.39.30 }
17.02 09:22:54 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:22:54 TIME: core/user.loginPost : 0.06 ms
17.02 09:22:57 TIMER: Check step...
17.02 09:22:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:22:57 TIMER: Check step: 0ms
17.02 09:22:57 TIMER: Check tournaments...
17.02 09:22:57 DB: SELECT * FROM tournament
17.02 09:22:57 TIMER: Check tournaments: 0ms
17.02 09:22:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 32, _type => vdl/cache.battle.infoRoom }
17.02 09:22:59 STATS: cache [battle], get [161 calls, 115 cache hits, 45 cache misses, 0 same version, 14 not found]
17.02 09:22:59 STATS: cache [battle], segments [272 calls, 226 hits, 45 misses]
17.02 09:22:59 STATS: cache [battle], database [2203 calls, 45 reads, 94 writes]
17.02 09:22:59 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:22:59 READDB: SELECT * FROM Battle WHERE ID = 32
17.02 09:22:59 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:22:59 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:22:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:23:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 108, _type => core/cache.update }
17.02 09:23:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:23:01 TIME: core/cache.update : 0.08 ms
17.02 09:23:02 WRITEDB: UPDATE Users SET name = E'uid108', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid108', isbanned = E'false', regdate = E'2017-02-17 08:55:52.594924-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339752,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 108
17.02 09:23:02 TIMER: Check step...
17.02 09:23:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:02 TIMER: Check step: 0ms
17.02 09:23:04 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 108 }, _type => vdl/cache.battle.findRandom }
17.02 09:23:04 DB: SELECT nextval('Battle_id_seq') AS id
17.02 09:23:04 READDB: SELECT ID FROM Battle WHERE ID = 33
17.02 09:23:04 READDB: INSERT INTO Battle (ID) VALUES (33)
17.02 09:23:04 READDB: SELECT * FROM Battle WHERE ID = 33
17.02 09:23:04 DB: SELECT name FROM users WHERE id=108
17.02 09:23:04 DB: SELECT name FROM users WHERE id=114
17.02 09:23:04 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid108, enemy.id => 114, enemy.name => nellil, id => 108, enemy.num => 2, battleId => 33, player => 1 }, _isNotify => true, id => 108, _type => battle.enemyEvent }
17.02 09:23:04 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => nellil, enemy.id => 108, enemy.name => uid108, id => 114, enemy.num => 1, battleId => 33, player => 2 }, _isNotify => true, id => 114, _type => battle.enemyEvent }
17.02 09:23:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 09:23:04 TIME: vdl/cache.battle.findRandom : 6.4 ms
17.02 09:23:07 TIMER: Check step...
17.02 09:23:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:07 TIMER: Check step: 0ms
17.02 09:23:10 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.39035836', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:11 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:23:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:23:11 TIME: vdl/cache.battle.infoRoom : 0.1 ms
17.02 09:23:12 TIMER: Check step...
17.02 09:23:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:12 TIMER: Check step: 1ms
17.02 09:23:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:12 TIME: core/user.sendTo : 0.06 ms
17.02 09:23:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:12 TIME: core/user.sendTo : 0.08 ms
17.02 09:23:15 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.39853589', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:17 TIMER: Clans cache...
17.02 09:23:17 TIMER: Clans cache: 0ms
17.02 09:23:17 TIMER: Check step...
17.02 09:23:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:17 TIMER: Check step: 1ms
17.02 09:23:17 TIMER: Check round...
17.02 09:23:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:23' OR rounddate = '2017-17-02 12:23' AND status <> 'finished'
17.02 09:23:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:17 TIME: core/user.sendTo : 0.06 ms
17.02 09:23:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:17 TIME: core/user.sendTo : 0.07 ms
17.02 09:23:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.39754026' AND avaliable = false AND finished <> true
17.02 09:23:17 TRACE: Check round timer exception:
17.02 09:23:17 TRACE: Invalid field access : player1

17.02 09:23:17 TIMER: Check round: 2ms
17.02 09:23:17 TIMER: Check tournaments...
17.02 09:23:17 DB: SELECT * FROM tournament
17.02 09:23:17 TIMER: Check tournaments: 0ms
17.02 09:23:20 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.40353848', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:22 TIMER: Check step...
17.02 09:23:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:22 TIMER: Check step: 1ms
17.02 09:23:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:22 TIME: core/user.sendTo : 0.05 ms
17.02 09:23:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:22 TIME: core/user.sendTo : 0.05 ms
17.02 09:23:25 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.40854323', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:27 TIMER: Check step...
17.02 09:23:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:27 TIMER: Check step: 1ms
17.02 09:23:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:27 TIME: core/user.sendTo : 0.05 ms
17.02 09:23:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:27 TIME: core/user.sendTo : 0.05 ms
17.02 09:23:30 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.4135487', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:23:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:23:30 TIME: vdl/cache.battle.infoRoom : 0.12 ms
17.02 09:23:30 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 108, roomId => 33, _type => vdl/cache.battle.makeTurn }
17.02 09:23:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 114 }
17.02 09:23:30 TIME: vdl/cache.battle.makeTurn : 0.24 ms
17.02 09:23:32 TIMER: Check step...
17.02 09:23:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:32 TIMER: Check step: 1ms
17.02 09:23:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:32 TIME: core/user.sendTo : 0.07 ms
17.02 09:23:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:32 TIME: core/user.sendTo : 0.03 ms
17.02 09:23:35 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:23:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:23:35 TIME: vdl/cache.battle.infoRoom : 0.07 ms
17.02 09:23:35 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.41855061', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:37 TIMER: Check step...
17.02 09:23:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:37 TIMER: Check step: 1ms
17.02 09:23:37 TIMER: Check tournaments...
17.02 09:23:37 DB: SELECT * FROM tournament
17.02 09:23:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:23:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:37 TIME: core/user.sendTo : 0.04 ms
17.02 09:23:37 TIMER: Check tournaments: 0ms
17.02 09:23:40 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.42355256', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:42 TIMER: Check step...
17.02 09:23:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:42 TIMER: Check step: 1ms
17.02 09:23:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:42 TIME: core/user.sendTo : 0.05 ms
17.02 09:23:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:42 TIME: core/user.sendTo : 0.04 ms
17.02 09:23:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:23:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:23:44 TIME: vdl/cache.battle.infoRoom : 0.13 ms
17.02 09:23:44 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 108, player2 => 114, battleId => 33 }
17.02 09:23:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
17.02 09:23:44 TIME: vdl/cache.battle.setScores : 0.06 ms
17.02 09:23:45 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.42855515', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:47 TIMER: Check step...
17.02 09:23:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:47 TIMER: Check step: 2ms
17.02 09:23:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:47 TIME: core/user.sendTo : 0.1 ms
17.02 09:23:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:47 TIME: core/user.sendTo : 0.08 ms
17.02 09:23:49 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:23:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:23:49 TIME: vdl/cache.battle.infoRoom : 0.13 ms
17.02 09:23:49 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 108, player2 => 114, battleId => 33 }
17.02 09:23:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
17.02 09:23:49 TIME: vdl/cache.battle.setScores : 0.09 ms
17.02 09:23:50 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.43355781', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:51 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:23:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:23:51 TIME: vdl/cache.battle.infoRoom : 0.13 ms
17.02 09:23:51 NET: vdl.0 (thread) request vdl/cache.battle.setScores { scores => [0,0], _type => vdl/cache.battle.setScores, player1 => 108, player2 => 114, battleId => 33 }
17.02 09:23:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.setScores { errorCode => ok, _type => vdl/cache.battle.setScores }
17.02 09:23:51 TIME: vdl/cache.battle.setScores : 0.09 ms
17.02 09:23:52 TIMER: Check step...
17.02 09:23:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:52 TIME: core/user.sendTo : 0.03 ms
17.02 09:23:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:52 TIME: core/user.sendTo : 0.02 ms
17.02 09:23:52 TIMER: Check step: 2ms
17.02 09:23:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:23:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:23:55 TIME: vdl/cache.battle.infoRoom : 0.13 ms
17.02 09:23:55 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => 114, roomId => 33, _type => vdl/cache.battle.makeTurn }
17.02 09:23:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => ok, _type => vdl/cache.battle.makeTurn, turnId => 108 }
17.02 09:23:55 TIME: vdl/cache.battle.makeTurn : 0.2 ms
17.02 09:23:55 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.44109087', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:23:57 TIMER: Check step...
17.02 09:23:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:23:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:23:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:23:57 TIMER: Check step: 2ms
17.02 09:23:57 TIMER: Check tournaments...
17.02 09:23:57 DB: SELECT * FROM tournament
17.02 09:23:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:57 TIME: core/user.sendTo : 0.1 ms
17.02 09:23:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:23:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:23:57 TIME: core/user.sendTo : 0.08 ms
17.02 09:23:57 TIMER: Check tournaments: 1ms
17.02 09:23:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:23:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:23:57 TIME: vdl/cache.battle.infoRoom : 0.09 ms
17.02 09:24:00 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.44356518', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:02 TIMER: Check step...
17.02 09:24:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:02 STATS: cache [battle], get [184 calls, 136 cache hits, 47 cache misses, 0 same version, 15 not found]
17.02 09:24:02 STATS: cache [battle], segments [310 calls, 262 hits, 47 misses]
17.02 09:24:02 STATS: cache [battle], database [2266 calls, 47 reads, 105 writes]
17.02 09:24:02 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:24:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:02 TIMER: Check step: 1ms
17.02 09:24:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:24:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:24:05 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.44857046', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:07 TIMER: Check step...
17.02 09:24:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:07 TIMER: Check step: 1ms
17.02 09:24:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:07 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:07 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:10 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.45357263', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:12 TIMER: Check step...
17.02 09:24:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:12 TIMER: Check step: 1ms
17.02 09:24:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:12 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:12 TIME: core/user.sendTo : 0.04 ms
17.02 09:24:15 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:15 TIME: vdl/cache.battle.infoRoom : 0.11 ms
17.02 09:24:15 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.45857448', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:17 TIMER: Clans cache...
17.02 09:24:17 TIMER: Clans cache: 0ms
17.02 09:24:17 TIMER: Check step...
17.02 09:24:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:17 TIMER: Check step: 1ms
17.02 09:24:17 TIMER: Check round...
17.02 09:24:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:24' OR rounddate = '2017-17-02 12:24' AND status <> 'finished'
17.02 09:24:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:17 TIME: core/user.sendTo : 0.06 ms
17.02 09:24:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:17 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.45757843' AND avaliable = false AND finished <> true
17.02 09:24:17 QUEUE: vdl.0 (thread) response battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 114, battleId => 33 }
17.02 09:24:17 TIMER: Check round: 2ms
17.02 09:24:17 TIMER: Check tournaments...
17.02 09:24:17 DB: SELECT * FROM tournament
17.02 09:24:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 09:24:17 STATS: cache [user], get [46 calls, 25 cache hits, 21 cache misses, 0 same version, 0 not found]
17.02 09:24:17 STATS: cache [user], segments [179 calls, 129 hits, 47 misses]
17.02 09:24:17 STATS: cache [user], database [2281 calls, 21 reads, 33 writes]
17.02 09:24:17 STATS: cache [user], lock [53 calls, 53 attempts, 19 failures]
17.02 09:24:17 CACHE: cache block locked: user.1
17.02 09:24:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 09:24:17 TIME: core/cache.get : 0.18 ms
17.02 09:24:17 TIMER: Check tournaments: 0ms
17.02 09:24:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:24:18 TIME: vdl/cache.battle.infoRoom : 0.14 ms
17.02 09:24:20 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.46357683', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:22 TIMER: Check step...
17.02 09:24:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:22 TIMER: Check step: 1ms
17.02 09:24:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:22 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:22 TIME: core/user.sendTo : 0.04 ms
17.02 09:24:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:22 TIME: vdl/cache.battle.infoRoom : 0.13 ms
17.02 09:24:25 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:25 TIME: vdl/cache.battle.infoRoom : 0.07 ms
17.02 09:24:25 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.46858166', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:27 TIMER: Check step...
17.02 09:24:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:27 TIMER: Check step: 1ms
17.02 09:24:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:27 TIME: core/user.sendTo : 0.08 ms
17.02 09:24:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:27 TIME: core/user.sendTo : 0.07 ms
17.02 09:24:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:24:29 TIME: vdl/cache.battle.infoRoom : 0.09 ms
17.02 09:24:30 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.47358411', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:32 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:24:32 TIME: vdl/cache.battle.infoRoom : 0.15 ms
17.02 09:24:32 TIMER: Check step...
17.02 09:24:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:32 TIMER: Check step: 1ms
17.02 09:24:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:32 TIME: core/user.sendTo : 0.04 ms
17.02 09:24:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:32 TIME: core/user.sendTo : 0.04 ms
17.02 09:24:35 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.47858586', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:37 TIMER: Check step...
17.02 09:24:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:37 TIMER: Check step: 1ms
17.02 09:24:37 TIMER: Check tournaments...
17.02 09:24:37 DB: SELECT * FROM tournament
17.02 09:24:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:37 TIMER: Check tournaments: 0ms
17.02 09:24:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:24:38 TIME: vdl/cache.battle.infoRoom : 0.12 ms
17.02 09:24:40 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.48358799', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:24:42 TIME: vdl/cache.battle.infoRoom : 0.16 ms
17.02 09:24:42 TIMER: Check step...
17.02 09:24:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:42 TIMER: Check step: 1ms
17.02 09:24:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:42 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:42 TIME: core/user.sendTo : 0.04 ms
17.02 09:24:45 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.48859378', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:47 TIMER: Check step...
17.02 09:24:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:47 TIMER: Check step: 1ms
17.02 09:24:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:47 TIME: core/user.sendTo : 0.09 ms
17.02 09:24:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:47 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:50 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.493596', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:51 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:24:51 TIME: vdl/cache.battle.infoRoom : 0.14 ms
17.02 09:24:52 TIMER: Check step...
17.02 09:24:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:52 TIMER: Check step: 1ms
17.02 09:24:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:52 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:52 TIME: core/user.sendTo : 0.04 ms
17.02 09:24:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:53 TIME: vdl/cache.battle.infoRoom : 0.12 ms
17.02 09:24:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:53 TIME: vdl/cache.battle.infoRoom : 0.14 ms
17.02 09:24:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:54 TIME: vdl/cache.battle.infoRoom : 0.08 ms
17.02 09:24:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:55 TIME: vdl/cache.battle.infoRoom : 0.14 ms
17.02 09:24:55 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.49859777', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:24:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:56 TIME: vdl/cache.battle.infoRoom : 0.1 ms
17.02 09:24:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:24:57 TIME: vdl/cache.battle.infoRoom : 0.14 ms
17.02 09:24:57 TIMER: Check step...
17.02 09:24:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:24:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:24:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:24:57 TIMER: Check step: 1ms
17.02 09:24:57 TIMER: Check tournaments...
17.02 09:24:57 DB: SELECT * FROM tournament
17.02 09:24:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:57 TIME: core/user.sendTo : 0.06 ms
17.02 09:24:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:24:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:24:57 TIME: core/user.sendTo : 0.05 ms
17.02 09:24:57 TIMER: Check tournaments: 0ms
17.02 09:24:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:24:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:24:58 TIME: vdl/cache.battle.infoRoom : 0.09 ms
17.02 09:25:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:25:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:25:00 TIME: vdl/cache.battle.infoRoom : 0.16 ms
17.02 09:25:00 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.50359998', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:01 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:25:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:25:01 TIME: vdl/cache.battle.infoRoom : 0.08 ms
17.02 09:25:02 TIMER: Check step...
17.02 09:25:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:02 STATS: cache [battle], get [214 calls, 166 cache hits, 47 cache misses, 0 same version, 15 not found]
17.02 09:25:02 STATS: cache [battle], segments [352 calls, 304 hits, 47 misses]
17.02 09:25:02 STATS: cache [battle], database [2326 calls, 47 reads, 117 writes]
17.02 09:25:02 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:25:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:02 TIMER: Check step: 1ms
17.02 09:25:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:02 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:02 TIME: core/user.sendTo : 0.04 ms
17.02 09:25:03 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:25:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:25:03 TIME: vdl/cache.battle.infoRoom : 0.08 ms
17.02 09:25:05 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.50860267', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:25:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:25:06 TIME: vdl/cache.battle.infoRoom : 0.13 ms
17.02 09:25:07 TIMER: Check step...
17.02 09:25:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:07 TIMER: Check step: 1ms
17.02 09:25:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:07 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:07 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:10 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.51360476', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:11 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:25:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:25:11 TIME: vdl/cache.battle.infoRoom : 0.14 ms
17.02 09:25:12 TIMER: Check step...
17.02 09:25:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:12 TIMER: Check step: 1ms
17.02 09:25:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:12 TIME: core/user.sendTo : 0.08 ms
17.02 09:25:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:12 TIME: core/user.sendTo : 0.06 ms
17.02 09:25:15 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.51860664', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:17 TIMER: Clans cache...
17.02 09:25:17 TIMER: Clans cache: 0ms
17.02 09:25:17 TIMER: Check step...
17.02 09:25:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:17 TIMER: Check step: 1ms
17.02 09:25:17 TIMER: Check round...
17.02 09:25:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:25' OR rounddate = '2017-17-02 12:25' AND status <> 'finished'
17.02 09:25:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:17 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:17 TIME: core/user.sendTo : 0.04 ms
17.02 09:25:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.5176145' AND avaliable = false AND finished <> true
17.02 09:25:17 QUEUE: vdl.0 (thread) response battle.endEvent { type => winGame, typeBattle => battle, _isNotify => true, _type => battle.endEvent, win => 114, battleId => 33 }
17.02 09:25:17 TIMER: Check round: 2ms
17.02 09:25:17 TIMER: Check tournaments...
17.02 09:25:17 DB: SELECT * FROM tournament
17.02 09:25:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 09:25:17 STATS: cache [user], get [46 calls, 25 cache hits, 21 cache misses, 0 same version, 0 not found]
17.02 09:25:17 STATS: cache [user], segments [180 calls, 130 hits, 47 misses]
17.02 09:25:17 STATS: cache [user], database [2341 calls, 21 reads, 33 writes]
17.02 09:25:17 STATS: cache [user], lock [54 calls, 54 attempts, 20 failures]
17.02 09:25:17 CACHE: cache block locked: user.1
17.02 09:25:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 09:25:17 TIME: core/cache.get : 0.19 ms
17.02 09:25:17 TIMER: Check tournaments: 1ms
17.02 09:25:20 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.52361294', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:22 TIMER: Check step...
17.02 09:25:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:22 TIMER: Check step: 1ms
17.02 09:25:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:22 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:22 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:25 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.52861877', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:27 TIMER: Check step...
17.02 09:25:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:27 TIMER: Check step: 1ms
17.02 09:25:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:27 TIME: core/user.sendTo : 0.07 ms
17.02 09:25:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:27 TIME: core/user.sendTo : 0.07 ms
17.02 09:25:30 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.53362098', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:32 TIMER: Check step...
17.02 09:25:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:32 TIMER: Check step: 1ms
17.02 09:25:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:32 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:32 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:35 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.53862315', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:37 TIMER: Check step...
17.02 09:25:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:37 TIMER: Check step: 1ms
17.02 09:25:37 TIMER: Check tournaments...
17.02 09:25:37 DB: SELECT * FROM tournament
17.02 09:25:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:37 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:37 TIMER: Check tournaments: 0ms
17.02 09:25:40 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.5436273', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:42 TIMER: Check step...
17.02 09:25:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:42 TIMER: Check step: 1ms
17.02 09:25:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:42 TIME: core/user.sendTo : 0.09 ms
17.02 09:25:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:42 TIME: core/user.sendTo : 0.08 ms
17.02 09:25:45 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.54863012', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:47 TIMER: Check step...
17.02 09:25:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:47 TIMER: Check step: 1ms
17.02 09:25:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:47 TIME: core/user.sendTo : 0.06 ms
17.02 09:25:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:47 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:50 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'114', finished = E'false', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.55363237', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:51 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:25:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:25:51 TIME: vdl/cache.battle.infoRoom : 0.06 ms
17.02 09:25:51 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 33, _type => vdl/cache.battle.finishRoom }
17.02 09:25:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 09:25:51 TIME: vdl/cache.battle.finishRoom : 0.05 ms
17.02 09:25:52 TIMER: Check step...
17.02 09:25:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }
17.02 09:25:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:25:52 TIMER: Check step: 1ms
17.02 09:25:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 108, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:52 TIME: core/user.sendTo : 0.05 ms
17.02 09:25:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:25:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:25:52 TIME: core/user.sendTo : 0.06 ms
17.02 09:25:55 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'true', endtime = E'1489141.38435728', firstid = E'108', steptime = E'1487341.55863417', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:25:57 TIMER: Check step...
17.02 09:25:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:25:57 TIMER: Check step: 0ms
17.02 09:25:57 TIMER: Check tournaments...
17.02 09:25:57 DB: SELECT * FROM tournament
17.02 09:25:57 TIMER: Check tournaments: 0ms
17.02 09:26:02 TIMER: Check step...
17.02 09:26:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:02 TIMER: Check step: 0ms
17.02 09:26:05 BLOCKREMOVE: battle 33 removed
17.02 09:26:06 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=108 OR secondid=108 AND finished <> true, _type => core/server.query }
17.02 09:26:06 DB: SELECT id FROM battle WHERE firstid=108 OR secondid=108 AND finished <> true
17.02 09:26:06 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 33 }}, errorCode => ok, _type => core/server.query }
17.02 09:26:06 TIME: core/server.query : 0.67 ms
17.02 09:26:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 33, _type => vdl/cache.battle.infoRoom }
17.02 09:26:06 STATS: cache [battle], get [230 calls, 182 cache hits, 47 cache misses, 0 same version, 15 not found]
17.02 09:26:06 STATS: cache [battle], segments [380 calls, 332 hits, 47 misses]
17.02 09:26:06 STATS: cache [battle], database [2390 calls, 47 reads, 128 writes]
17.02 09:26:06 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:26:06 READDB: SELECT * FROM Battle WHERE ID = 33
17.02 09:26:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 114, firstId => 108, _type => vdl/cache.battle.infoRoom, turnId => 108 }
17.02 09:26:06 TIME: vdl/cache.battle.infoRoom : 0.97 ms
17.02 09:26:06 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 33, _type => vdl/cache.battle.deleteRoom }
17.02 09:26:06 ROOM: deleted room 33
17.02 09:26:06 DB: DELETE FROM Battle WHERE ID = 33
17.02 09:26:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 09:26:06 TIME: vdl/cache.battle.deleteRoom : 0.86 ms
17.02 09:26:06 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 33, _type => vdl/cache.battle.finishRoom }
17.02 09:26:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 09:26:06 TIME: vdl/cache.battle.finishRoom : 0.08 ms
17.02 09:26:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 108, _type => core/cache.update }
17.02 09:26:06 STATS: cache manager [1], get [55 calls, total 0.03 sec spent, avg 0.62 ms]
17.02 09:26:06 STATS: cache manager [1], update [78 calls, total 0 sec spent, avg 0.06 ms]
17.02 09:26:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:26:06 TIME: core/cache.update : 0.21 ms
17.02 09:26:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 108, _type => core/cache.update }
17.02 09:26:06 STATS: cache [questdata], get [22 calls, 1 cache hits, 21 cache misses, 0 same version, 0 not found]
17.02 09:26:06 STATS: cache [questdata], segments [91 calls, 43 hits, 47 misses]
17.02 09:26:06 STATS: cache [questdata], database [2390 calls, 21 reads, 19 writes]
17.02 09:26:06 STATS: cache [questdata], lock [22 calls, 22 attempts, 0 failures]
17.02 09:26:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:26:06 TIME: core/cache.update : 1.88 ms
17.02 09:26:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 108, _type => core/user.logoutPost }
17.02 09:26:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:26:06 TIME: core/user.logoutPost : 0.06 ms
17.02 09:26:07 WRITEDB: UPDATE Users SET name = E'uid108', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid108', isbanned = E'false', regdate = E'2017-02-17 08:55:52.594924-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339752,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 108
17.02 09:26:07 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 108
17.02 09:26:07 TIMER: Check step...
17.02 09:26:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:07 TIMER: Check step: 0ms
17.02 09:26:12 NET: vdl.0 (thread) request vdl/cache.user.addFriend { type => prepare, _type => vdl/cache.user.addFriend, friend => 108, player => 114 }
17.02 09:26:12 QUEUE: vdl.0 (thread) response vdl/cache.user.addFriend { errorCode => ok, _type => vdl/cache.user.addFriend }
17.02 09:26:12 TIME: vdl/cache.user.addFriend : 0.1 ms
17.02 09:26:12 NET: vdl.0 (thread) request core/user.sendTo { id => 108, _type => core/user.sendTo, msg => { _type => user.friendAccess, player => 114 } }
17.02 09:26:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:26:12 TIME: core/user.sendTo : 0.03 ms
17.02 09:26:12 WRITEDB: UPDATE Users SET name = E'uid108', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid108', isbanned = E'false', regdate = E'2017-02-17 08:55:52.594924-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487339752,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 108
17.02 09:26:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'114', turnid = E'108', finished = E'true', endtime = E'1489140', firstid = E'108', steptime = E'1487340', params = E'{}', avaliable = E'false' WHERE ID = 33
17.02 09:26:12 TIMER: Check step...
17.02 09:26:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:12 TIMER: Check step: 0ms
17.02 09:26:17 BLOCKREMOVE: questdata 108 removed
17.02 09:26:17 TIMER: Clans cache...
17.02 09:26:17 TIMER: Clans cache: 0ms
17.02 09:26:17 TIMER: Check step...
17.02 09:26:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:17 TIMER: Check step: 0ms
17.02 09:26:17 TIMER: Check round...
17.02 09:26:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:26' OR rounddate = '2017-17-02 12:26' AND status <> 'finished'
17.02 09:26:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.57764656' AND avaliable = false AND finished <> true
17.02 09:26:17 TIMER: Check round: 1ms
17.02 09:26:17 TIMER: Check tournaments...
17.02 09:26:17 DB: SELECT * FROM tournament
17.02 09:26:17 TIMER: Check tournaments: 0ms
17.02 09:26:22 BLOCKREMOVE: user 108 removed
17.02 09:26:22 BLOCKREMOVE: battle 33 removed
17.02 09:26:22 TIMER: Check step...
17.02 09:26:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:22 TIMER: Check step: 0ms
17.02 09:26:27 TIMER: Check step...
17.02 09:26:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:27 TIMER: Check step: 0ms
17.02 09:26:32 TIMER: Check step...
17.02 09:26:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:32 TIMER: Check step: 0ms
17.02 09:26:35 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid108' AND Password = E'uid108', _type => core/server.query }
17.02 09:26:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid108' AND Password = E'uid108'
17.02 09:26:35 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid108, networkid => , isbanned => false, id => 108 }}, errorCode => ok, _type => core/server.query }
17.02 09:26:35 TIME: core/server.query : 0.98 ms
17.02 09:26:35 NET: vdl.0 (thread) request core/user.isOnlineID { id => 108, _type => core/user.isOnlineID }
17.02 09:26:35 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:26:35 TIME: core/user.isOnlineID : 0.06 ms
17.02 09:26:35 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 108, _type => core/cache.get }
17.02 09:26:35 STATS: cache [user], get [48 calls, 27 cache hits, 21 cache misses, 0 same version, 0 not found]
17.02 09:26:35 STATS: cache [user], segments [187 calls, 133 hits, 47 misses]
17.02 09:26:35 STATS: cache [user], database [2419 calls, 21 reads, 35 writes]
17.02 09:26:35 STATS: cache [user], lock [55 calls, 55 attempts, 21 failures]
17.02 09:26:35 READDB: SELECT * FROM Users WHERE ID = 108
17.02 09:26:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid108, money => 0, deleted => false, year => , email => , networktype =>   , password => uid108, isbanned => false, regdate => 2017-02-17 08:55:52.594924-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, params => { friendPrepare => [114] }, attrs => { _lastTime.24hr => 1487339752, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 108 } }
17.02 09:26:35 TIME: core/cache.get : 1.08 ms
17.02 09:26:35 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 108, _type => core/cache.get }
17.02 09:26:35 READDB: SELECT * FROM UserQuests WHERE ID = 108
17.02 09:26:35 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 108 } }
17.02 09:26:35 TIME: core/cache.get : 0.51 ms
17.02 09:26:35 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 108, _type => core/user.loginPost, ipAddr => 188.162.39.30 }
17.02 09:26:35 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:26:35 TIME: core/user.loginPost : 0.06 ms
17.02 09:26:37 TIMER: Check step...
17.02 09:26:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:37 TIMER: Check step: 0ms
17.02 09:26:37 TIMER: Check tournaments...
17.02 09:26:37 DB: SELECT * FROM tournament
17.02 09:26:37 TIMER: Check tournaments: 0ms
17.02 09:26:42 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 108, _type => core/cache.update }
17.02 09:26:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:26:42 TIME: core/cache.update : 0.11 ms
17.02 09:26:42 WRITEDB: UPDATE Users SET name = E'uid108', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid108', isbanned = E'false', regdate = E'2017-02-17 08:55:52.594924-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487339752,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 108
17.02 09:26:42 TIMER: Check step...
17.02 09:26:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:42 TIMER: Check step: 0ms
17.02 09:26:47 TIMER: Check step...
17.02 09:26:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:47 TIMER: Check step: 0ms
17.02 09:26:52 TIMER: Check step...
17.02 09:26:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:52 TIMER: Check step: 0ms
17.02 09:26:53 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=108 OR secondid=108 AND finished <> true, _type => core/server.query }
17.02 09:26:53 DB: SELECT id FROM battle WHERE firstid=108 OR secondid=108 AND finished <> true
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:26:53 TIME: core/server.query : 0.7 ms
17.02 09:26:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:26:53 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:26:53 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:26:53 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:26:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:26:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 108, _type => core/cache.update }
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:26:53 TIME: core/cache.update : 0.11 ms
17.02 09:26:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 108, _type => core/cache.update }
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:26:53 TIME: core/cache.update : 0.11 ms
17.02 09:26:53 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 108, _type => core/user.logoutPost }
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:26:53 TIME: core/user.logoutPost : 0.1 ms
17.02 09:26:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'wert' AND Password = E'qwepoi', _type => core/server.query }
17.02 09:26:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'wert' AND Password = E'qwepoi'
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => wert, networkid => , isbanned => false, id => 104 }}, errorCode => ok, _type => core/server.query }
17.02 09:26:53 TIME: core/server.query : 0.97 ms
17.02 09:26:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 104, _type => core/user.isOnlineID }
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:26:53 TIME: core/user.isOnlineID : 0.08 ms
17.02 09:26:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 104, _type => core/cache.get }
17.02 09:26:53 READDB: SELECT * FROM Users WHERE ID = 104
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => wert, money => 0, deleted => false, year => , email => , networktype =>   , password => qwepoi, isbanned => false, regdate => 2017-02-17 08:55:25.473238-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487339725, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 104 } }
17.02 09:26:53 TIME: core/cache.get : 0.91 ms
17.02 09:26:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 104, _type => core/cache.get }
17.02 09:26:53 READDB: SELECT * FROM UserQuests WHERE ID = 104
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 104 } }
17.02 09:26:53 TIME: core/cache.get : 0.5 ms
17.02 09:26:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 104, _type => core/user.loginPost, ipAddr => 188.162.39.30 }
17.02 09:26:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:26:53 TIME: core/user.loginPost : 0.05 ms
17.02 09:26:53 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 104, _type => vdl/cache.user.getData, money => 0 }
17.02 09:26:53 DB: SELECT params FROM users WHERE id=104
17.02 09:26:53 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
17.02 09:26:53 TIME: vdl/cache.user.getData : 0.95 ms
17.02 09:26:54 WRITEDB: UPDATE Users SET name = E'uid108', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid108', isbanned = E'false', regdate = E'2017-02-17 08:55:52.594924-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487339752,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 108
17.02 09:26:54 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 108
17.02 09:26:57 TIMER: Check step...
17.02 09:26:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:26:57 TIMER: Check step: 0ms
17.02 09:26:57 TIMER: Check tournaments...
17.02 09:26:57 DB: SELECT * FROM tournament
17.02 09:26:57 TIMER: Check tournaments: 0ms
17.02 09:26:59 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 104 }
17.02 09:26:59 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:26:59 TIME: vdl/cache.user.getFriendList : 0.19 ms
17.02 09:27:00 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 114 }
17.02 09:27:00 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:27:00 TIME: vdl/cache.user.getFriendList : 0.2 ms
17.02 09:27:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 104, _type => core/cache.update }
17.02 09:27:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:27:02 TIME: core/cache.update : 0.1 ms
17.02 09:27:02 WRITEDB: UPDATE Users SET name = E'wert', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwepoi', isbanned = E'false', regdate = E'2017-02-17 08:55:25.473238-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339725,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 104
17.02 09:27:02 TIMER: Check step...
17.02 09:27:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:02 TIMER: Check step: 0ms
17.02 09:27:04 BLOCKREMOVE: user 108 removed
17.02 09:27:04 BLOCKREMOVE: questdata 108 removed
17.02 09:27:04 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => n, id => 104, _type => vdl/cache.user.searchEnemy }
17.02 09:27:04 DB: SELECT id, name FROM users WHERE name LIKE '%n%' LIMIT 50
17.02 09:27:04 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => nellil, isOnline => true, id => 114 }] }
17.02 09:27:04 TIME: vdl/cache.user.searchEnemy : 1.16 ms
17.02 09:27:07 TIMER: Check step...
17.02 09:27:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:07 TIMER: Check step: 0ms
17.02 09:27:12 TIMER: Check step...
17.02 09:27:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:12 TIMER: Check step: 0ms
17.02 09:27:15 NET: vdl.0 (thread) request vdl/cache.user.addFriend { type => prepare, _type => vdl/cache.user.addFriend, friend => 114, player => 104 }
17.02 09:27:15 QUEUE: vdl.0 (thread) response vdl/cache.user.addFriend { errorCode => ok, _type => vdl/cache.user.addFriend }
17.02 09:27:15 TIME: vdl/cache.user.addFriend : 0.17 ms
17.02 09:27:16 WRITEDB: UPDATE Users SET name = E'nellil', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty1', isbanned = E'false', regdate = E'2017-02-17 09:21:52.84826-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[104]},"attrs":{"_lastTime.24hr":1487341312,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 114
17.02 09:27:17 TIMER: Clans cache...
17.02 09:27:17 TIMER: Clans cache: 0ms
17.02 09:27:17 TIMER: Check step...
17.02 09:27:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:17 TIMER: Check step: 0ms
17.02 09:27:17 TIMER: Check round...
17.02 09:27:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:27' OR rounddate = '2017-17-02 12:27' AND status <> 'finished'
17.02 09:27:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.6376698' AND avaliable = false AND finished <> true
17.02 09:27:17 TIMER: Check round: 1ms
17.02 09:27:17 TIMER: Check tournaments...
17.02 09:27:17 DB: SELECT * FROM tournament
17.02 09:27:17 TIMER: Check tournaments: 0ms
17.02 09:27:22 TIMER: Check step...
17.02 09:27:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:22 TIMER: Check step: 0ms
17.02 09:27:23 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 114 }
17.02 09:27:23 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:27:23 TIME: vdl/cache.user.getFriendList : 0.12 ms
17.02 09:27:27 TIMER: Check step...
17.02 09:27:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:27 TIMER: Check step: 0ms
17.02 09:27:32 TIMER: Check step...
17.02 09:27:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:32 TIMER: Check step: 1ms
17.02 09:27:33 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => werd, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:27:33 DB: SELECT id, name FROM users WHERE name LIKE '%werd%' LIMIT 50
17.02 09:27:33 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [] }
17.02 09:27:33 TIME: vdl/cache.user.searchEnemy : 0.96 ms
17.02 09:27:37 TIMER: Check step...
17.02 09:27:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:37 TIMER: Check step: 0ms
17.02 09:27:37 TIMER: Check tournaments...
17.02 09:27:37 DB: SELECT * FROM tournament
17.02 09:27:37 TIMER: Check tournaments: 0ms
17.02 09:27:39 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => wert, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:27:39 DB: SELECT id, name FROM users WHERE name LIKE '%wert%' LIMIT 50
17.02 09:27:39 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => wert, isOnline => true, id => 104 },{ name => wert2, isOnline => false, id => 109 }] }
17.02 09:27:39 TIME: vdl/cache.user.searchEnemy : 1.03 ms
17.02 09:27:42 TIMER: Check step...
17.02 09:27:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:42 TIMER: Check step: 0ms
17.02 09:27:45 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 104 }
17.02 09:27:45 STATS: cache [user], get [56 calls, 32 cache hits, 23 cache misses, 0 same version, 0 not found]
17.02 09:27:45 STATS: cache [user], segments [202 calls, 137 hits, 51 misses]
17.02 09:27:45 STATS: cache [user], database [2489 calls, 23 reads, 39 writes]
17.02 09:27:45 STATS: cache [user], lock [56 calls, 56 attempts, 21 failures]
17.02 09:27:45 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:27:45 TIME: vdl/cache.user.getAccessFriend : 0.3 ms
17.02 09:27:46 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM Users WHERE id = 114, _type => core/server.query }
17.02 09:27:46 DB: SELECT name FROM Users WHERE id = 114
17.02 09:27:46 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => nellil }}, errorCode => ok, _type => core/server.query }
17.02 09:27:46 TIME: core/server.query : 1.44 ms
17.02 09:27:47 TIMER: Check step...
17.02 09:27:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:47 TIMER: Check step: 0ms
17.02 09:27:50 NET: vdl.0 (thread) request vdl/cache.battle.findCheck { _type => vdl/cache.battle.findCheck, roundTime => 30, player1 => 114, player2 => 104 }
17.02 09:27:50 DB: SELECT nextval('Battle_id_seq') AS id
17.02 09:27:50 READDB: SELECT ID FROM Battle WHERE ID = 34
17.02 09:27:50 READDB: INSERT INTO Battle (ID) VALUES (34)
17.02 09:27:50 STATS: cache [battle], get [233 calls, 183 cache hits, 49 cache misses, 0 same version, 16 not found]
17.02 09:27:50 STATS: cache [battle], segments [385 calls, 335 hits, 49 misses]
17.02 09:27:50 STATS: cache [battle], database [2493 calls, 49 reads, 129 writes]
17.02 09:27:50 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:27:50 READDB: SELECT * FROM Battle WHERE ID = 34
17.02 09:27:50 DB: SELECT name FROM users WHERE id=114
17.02 09:27:50 DB: SELECT name FROM users WHERE id=104
17.02 09:27:50 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => nellil, enemy.id => 104, enemy.name => wert, id => 114, enemy.num => 2, battleId => 34, player => 1 }, _isNotify => true, id => 114, _type => battle.enemyEvent }
17.02 09:27:50 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => wert, enemy.id => 114, enemy.name => nellil, id => 104, enemy.num => 1, battleId => 34, player => 2 }, _isNotify => true, id => 104, _type => battle.enemyEvent }
17.02 09:27:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.findCheck { errorCode => ok, _type => vdl/cache.battle.findCheck }
17.02 09:27:50 TIME: vdl/cache.battle.findCheck : 3.96 ms
17.02 09:27:52 TIMER: Check step...
17.02 09:27:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:52 TIMER: Check step: 0ms
17.02 09:27:55 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'104', turnid = E'114', finished = E'false', endtime = E'1489141.67013997', firstid = E'114', steptime = E'1487341.67614141', params = E'{}', avaliable = E'false' WHERE ID = 34
17.02 09:27:57 TIMER: Check step...
17.02 09:27:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:27:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 104, _type => battle.skipEvent }
17.02 09:27:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:27:57 TIMER: Check step: 1ms
17.02 09:27:57 TIMER: Check tournaments...
17.02 09:27:57 DB: SELECT * FROM tournament
17.02 09:27:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 104, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:27:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:27:57 TIME: core/user.sendTo : 0.04 ms
17.02 09:27:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:27:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:27:57 TIME: core/user.sendTo : 0.04 ms
17.02 09:27:57 TIMER: Check tournaments: 0ms
17.02 09:28:00 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'104', turnid = E'104', finished = E'false', endtime = E'1489141.67013997', firstid = E'114', steptime = E'1487341.68368305', params = E'{}', avaliable = E'false' WHERE ID = 34
17.02 09:28:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 34, _type => vdl/cache.battle.infoRoom }
17.02 09:28:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 114, _type => vdl/cache.battle.infoRoom, turnId => 104 }
17.02 09:28:02 TIME: vdl/cache.battle.infoRoom : 0.08 ms
17.02 09:28:02 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 34, _type => vdl/cache.battle.finishRoom }
17.02 09:28:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 09:28:02 TIME: vdl/cache.battle.finishRoom : 0.06 ms
17.02 09:28:02 TIMER: Check step...
17.02 09:28:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }
17.02 09:28:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 104, _type => battle.skipEvent }
17.02 09:28:02 TIMER: Check step: 1ms
17.02 09:28:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 114, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:28:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:28:02 TIME: core/user.sendTo : 0.35 ms
17.02 09:28:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 104, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:28:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:28:02 TIME: core/user.sendTo : 0.07 ms
17.02 09:28:04 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 114 }
17.02 09:28:04 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:28:04 TIME: vdl/cache.user.getFriendList : 0.14 ms
17.02 09:28:05 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'104', turnid = E'114', finished = E'true', endtime = E'1489141.67013997', firstid = E'114', steptime = E'1487341.68868604', params = E'{}', avaliable = E'false' WHERE ID = 34
17.02 09:28:07 TIMER: Check step...
17.02 09:28:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:07 TIMER: Check step: 0ms
17.02 09:28:12 TIMER: Check step...
17.02 09:28:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:12 TIMER: Check step: 0ms
17.02 09:28:15 BLOCKREMOVE: battle 34 removed
17.02 09:28:16 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => gaforest, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:28:16 DB: SELECT id, name FROM users WHERE name LIKE '%gaforest%' LIMIT 50
17.02 09:28:16 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [] }
17.02 09:28:16 TIME: vdl/cache.user.searchEnemy : 0.95 ms
17.02 09:28:17 TIMER: Clans cache...
17.02 09:28:17 TIMER: Clans cache: 0ms
17.02 09:28:17 TIMER: Check step...
17.02 09:28:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:17 TIMER: Check step: 0ms
17.02 09:28:17 TIMER: Check round...
17.02 09:28:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:28' OR rounddate = '2017-17-02 12:28' AND status <> 'finished'
17.02 09:28:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.69769161' AND avaliable = false AND finished <> true
17.02 09:28:17 TIMER: Check round: 0ms
17.02 09:28:17 TIMER: Check tournaments...
17.02 09:28:17 DB: SELECT * FROM tournament
17.02 09:28:17 TIMER: Check tournaments: 0ms
17.02 09:28:20 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => g, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:28:20 DB: SELECT id, name FROM users WHERE name LIKE '%g%' LIMIT 50
17.02 09:28:20 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => ga.forest, isOnline => false, id => 76 }] }
17.02 09:28:20 TIME: vdl/cache.user.searchEnemy : 1.07 ms
17.02 09:28:20 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => g, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:28:20 DB: SELECT id, name FROM users WHERE name LIKE '%g%' LIMIT 50
17.02 09:28:20 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => ga.forest, isOnline => false, id => 76 }] }
17.02 09:28:20 TIME: vdl/cache.user.searchEnemy : 1.28 ms
17.02 09:28:22 NET: vdl.0 (thread) request vdl/cache.user.addFriend { type => prepare, _type => vdl/cache.user.addFriend, friend => 76, player => 114 }
17.02 09:28:22 READDB: SELECT * FROM Users WHERE ID = 76
17.02 09:28:22 QUEUE: vdl.0 (thread) response vdl/cache.user.addFriend { errorCode => ok, _type => vdl/cache.user.addFriend }
17.02 09:28:22 TIME: vdl/cache.user.addFriend : 1.81 ms
17.02 09:28:22 NET: vdl.0 (thread) request core/user.sendTo { id => 76, _type => core/user.sendTo, msg => { _type => user.friendAccess, player => 114 } }
17.02 09:28:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:28:22 TIME: core/user.sendTo : 0.05 ms
17.02 09:28:22 TIMER: Check step...
17.02 09:28:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:22 TIMER: Check step: 0ms
17.02 09:28:27 TIMER: Check step...
17.02 09:28:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:27 TIMER: Check step: 0ms
17.02 09:28:28 WRITEDB: UPDATE Users SET name = E'ga.forest', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'77779999', isbanned = E'false', regdate = E'2017-02-12 14:50:59.369023-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487071866,"lastLoginDate":45,"lastLoadDate":215},"effects":{"list":[]}}' WHERE ID = 76
17.02 09:28:32 TIMER: Check step...
17.02 09:28:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:32 TIMER: Check step: 1ms
17.02 09:28:37 TIMER: Check step...
17.02 09:28:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:37 TIMER: Check step: 0ms
17.02 09:28:37 TIMER: Check tournaments...
17.02 09:28:37 DB: SELECT * FROM tournament
17.02 09:28:37 TIMER: Check tournaments: 0ms
17.02 09:28:38 BLOCKREMOVE: user 76 removed
17.02 09:28:42 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 114 }
17.02 09:28:42 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:28:42 TIME: vdl/cache.user.getFriendList : 0.13 ms
17.02 09:28:42 TIMER: Check step...
17.02 09:28:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:42 TIMER: Check step: 0ms
17.02 09:28:47 TIMER: Check step...
17.02 09:28:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:47 TIMER: Check step: 0ms
17.02 09:28:51 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => wert, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:28:51 DB: SELECT id, name FROM users WHERE name LIKE '%wert%' LIMIT 50
17.02 09:28:51 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => wert, isOnline => true, id => 104 },{ name => wert2, isOnline => false, id => 109 }] }
17.02 09:28:51 TIME: vdl/cache.user.searchEnemy : 1.05 ms
17.02 09:28:51 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => wert, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:28:51 DB: SELECT id, name FROM users WHERE name LIKE '%wert%' LIMIT 50
17.02 09:28:51 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => wert, isOnline => true, id => 104 },{ name => wert2, isOnline => false, id => 109 }] }
17.02 09:28:51 TIME: vdl/cache.user.searchEnemy : 1.27 ms
17.02 09:28:52 TIMER: Check step...
17.02 09:28:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:52 TIMER: Check step: 0ms
17.02 09:28:53 NET: vdl.0 (thread) request vdl/cache.user.addFriend { type => prepare, _type => vdl/cache.user.addFriend, friend => 104, player => 114 }
17.02 09:28:53 STATS: cache [user], get [61 calls, 36 cache hits, 24 cache misses, 0 same version, 0 not found]
17.02 09:28:53 STATS: cache [user], segments [209 calls, 138 hits, 52 misses]
17.02 09:28:53 STATS: cache [user], database [2556 calls, 24 reads, 40 writes]
17.02 09:28:53 STATS: cache [user], lock [56 calls, 56 attempts, 21 failures]
17.02 09:28:53 QUEUE: vdl.0 (thread) response vdl/cache.user.addFriend { errorCode => ok, _type => vdl/cache.user.addFriend }
17.02 09:28:53 TIME: vdl/cache.user.addFriend : 0.26 ms
17.02 09:28:53 WRITEDB: UPDATE Users SET name = E'wert', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwepoi', isbanned = E'false', regdate = E'2017-02-17 08:55:25.473238-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487339725,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 104
17.02 09:28:57 TIMER: Check step...
17.02 09:28:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:28:57 TIMER: Check step: 0ms
17.02 09:28:57 TIMER: Check tournaments...
17.02 09:28:57 DB: SELECT * FROM tournament
17.02 09:28:57 TIMER: Check tournaments: 0ms
17.02 09:29:02 TIMER: Check step...
17.02 09:29:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:02 TIMER: Check step: 0ms
17.02 09:29:07 TIMER: Check step...
17.02 09:29:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:07 TIMER: Check step: 0ms
17.02 09:29:12 TIMER: Check step...
17.02 09:29:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:12 TIMER: Check step: 0ms
17.02 09:29:17 TIMER: Clans cache...
17.02 09:29:17 TIMER: Clans cache: 0ms
17.02 09:29:17 TIMER: Check step...
17.02 09:29:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:17 TIMER: Check step: 0ms
17.02 09:29:17 TIMER: Check round...
17.02 09:29:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:29' OR rounddate = '2017-17-02 12:29' AND status <> 'finished'
17.02 09:29:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.75771578' AND avaliable = false AND finished <> true
17.02 09:29:17 TIMER: Check round: 1ms
17.02 09:29:17 TIMER: Check tournaments...
17.02 09:29:17 DB: SELECT * FROM tournament
17.02 09:29:17 TIMER: Check tournaments: 0ms
17.02 09:29:18 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 104 }
17.02 09:29:18 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:29:18 TIME: vdl/cache.user.getFriendList : 0.17 ms
17.02 09:29:22 TIMER: Check step...
17.02 09:29:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:22 TIMER: Check step: 0ms
17.02 09:29:26 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 104 }
17.02 09:29:26 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:29:26 TIME: vdl/cache.user.getFriendList : 0.14 ms
17.02 09:29:27 TIMER: Check step...
17.02 09:29:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:27 TIMER: Check step: 0ms
17.02 09:29:32 TIMER: Check step...
17.02 09:29:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:32 TIMER: Check step: 1ms
17.02 09:29:37 TIMER: Check step...
17.02 09:29:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:37 TIMER: Check step: 0ms
17.02 09:29:37 TIMER: Check tournaments...
17.02 09:29:37 DB: SELECT * FROM tournament
17.02 09:29:37 TIMER: Check tournaments: 0ms
17.02 09:29:42 TIMER: Check step...
17.02 09:29:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:42 TIMER: Check step: 0ms
17.02 09:29:47 TIMER: Check step...
17.02 09:29:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:47 TIMER: Check step: 0ms
17.02 09:29:52 TIMER: Check step...
17.02 09:29:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:52 TIMER: Check step: 0ms
17.02 09:29:57 TIMER: Check step...
17.02 09:29:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:29:57 TIMER: Check step: 0ms
17.02 09:29:57 TIMER: Check tournaments...
17.02 09:29:57 DB: SELECT * FROM tournament
17.02 09:29:57 TIMER: Check tournaments: 0ms
17.02 09:30:01 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
17.02 09:30:01 DB: SELECT * FROM tournament WHERE status <> 'finished'
17.02 09:30:01 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [], count => 0, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.02 09:30:01 TIME: vdl/cache.tournament.getAvailableTournament : 0.58 ms
17.02 09:30:02 TIMER: Check step...
17.02 09:30:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:02 TIMER: Check step: 0ms
17.02 09:30:07 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 114 }
17.02 09:30:07 STATS: cache [user], get [65 calls, 40 cache hits, 24 cache misses, 0 same version, 0 not found]
17.02 09:30:07 STATS: cache [user], segments [215 calls, 138 hits, 52 misses]
17.02 09:30:07 STATS: cache [user], database [2630 calls, 24 reads, 41 writes]
17.02 09:30:07 STATS: cache [user], lock [56 calls, 56 attempts, 21 failures]
17.02 09:30:07 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:30:07 TIME: vdl/cache.user.getFriendList : 0.45 ms
17.02 09:30:07 TIMER: Check step...
17.02 09:30:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:07 TIMER: Check step: 0ms
17.02 09:30:10 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true, _type => core/server.query }
17.02 09:30:10 DB: SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true
17.02 09:30:10 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:30:10 TIME: core/server.query : 0.59 ms
17.02 09:30:10 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:30:10 STATS: cache [battle], get [239 calls, 188 cache hits, 50 cache misses, 0 same version, 16 not found]
17.02 09:30:10 STATS: cache [battle], segments [397 calls, 346 hits, 50 misses]
17.02 09:30:10 STATS: cache [battle], database [2633 calls, 50 reads, 132 writes]
17.02 09:30:10 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:30:10 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:30:10 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:30:10 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:30:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:30:10 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 104, _type => core/cache.update }
17.02 09:30:10 STATS: cache manager [1], get [59 calls, total 0.04 sec spent, avg 0.62 ms]
17.02 09:30:10 STATS: cache manager [1], update [84 calls, total 0.01 sec spent, avg 0.08 ms]
17.02 09:30:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
17.02 09:30:10 TIME: core/cache.update : 0.12 ms
17.02 09:30:10 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 104, _type => core/cache.update }
17.02 09:30:10 STATS: cache [questdata], get [24 calls, 1 cache hits, 23 cache misses, 0 same version, 0 not found]
17.02 09:30:10 STATS: cache [questdata], segments [99 calls, 47 hits, 51 misses]
17.02 09:30:10 STATS: cache [questdata], database [2633 calls, 23 reads, 21 writes]
17.02 09:30:10 STATS: cache [questdata], lock [24 calls, 24 attempts, 0 failures]
17.02 09:30:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:30:10 TIME: core/cache.update : 0.13 ms
17.02 09:30:10 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 104, _type => core/user.logoutPost }
17.02 09:30:10 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:30:10 TIME: core/user.logoutPost : 0.04 ms
17.02 09:30:10 WRITEDB: UPDATE Users SET name = E'wert', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwepoi', isbanned = E'false', regdate = E'2017-02-17 08:55:25.473238-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487339725,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 104
17.02 09:30:10 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 104
17.02 09:30:12 TIMER: Check step...
17.02 09:30:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:12 TIMER: Check step: 1ms
17.02 09:30:17 TIMER: Clans cache...
17.02 09:30:17 TIMER: Clans cache: 0ms
17.02 09:30:17 TIMER: Check step...
17.02 09:30:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:17 TIMER: Check step: 0ms
17.02 09:30:17 TIMER: Check round...
17.02 09:30:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:30' OR rounddate = '2017-17-02 12:30' AND status <> 'finished'
17.02 09:30:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.81773755' AND avaliable = false AND finished <> true
17.02 09:30:17 TIMER: Check round: 0ms
17.02 09:30:17 TIMER: Check tournaments...
17.02 09:30:17 DB: SELECT * FROM tournament
17.02 09:30:17 TIMER: Check tournaments: 0ms
17.02 09:30:18 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => s, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:30:18 DB: SELECT id, name FROM users WHERE name LIKE '%s%' LIMIT 50
17.02 09:30:18 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => ga.forest, isOnline => false, id => 76 }] }
17.02 09:30:18 TIME: vdl/cache.user.searchEnemy : 1.08 ms
17.02 09:30:18 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => s, id => 114, _type => vdl/cache.user.searchEnemy }
17.02 09:30:18 DB: SELECT id, name FROM users WHERE name LIKE '%s%' LIMIT 50
17.02 09:30:18 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => ga.forest, isOnline => false, id => 76 }] }
17.02 09:30:18 TIME: vdl/cache.user.searchEnemy : 0.81 ms
17.02 09:30:20 BLOCKREMOVE: user 104 removed
17.02 09:30:20 BLOCKREMOVE: questdata 104 removed
17.02 09:30:22 TIMER: Check step...
17.02 09:30:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:22 TIMER: Check step: 0ms
17.02 09:30:25 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'wert' AND Password = E'qwepoi', _type => core/server.query }
17.02 09:30:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'wert' AND Password = E'qwepoi'
17.02 09:30:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => wert, networkid => , isbanned => false, id => 104 }}, errorCode => ok, _type => core/server.query }
17.02 09:30:25 TIME: core/server.query : 0.81 ms
17.02 09:30:25 NET: vdl.0 (thread) request core/user.isOnlineID { id => 104, _type => core/user.isOnlineID }
17.02 09:30:25 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:30:25 TIME: core/user.isOnlineID : 0.05 ms
17.02 09:30:25 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 104, _type => core/cache.get }
17.02 09:30:25 READDB: SELECT * FROM Users WHERE ID = 104
17.02 09:30:25 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => wert, money => 0, deleted => false, year => , email => , networktype =>   , password => qwepoi, isbanned => false, regdate => 2017-02-17 08:55:25.473238-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, params => { friendPrepare => [114] }, attrs => { _lastTime.24hr => 1487339725, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 104 } }
17.02 09:30:25 TIME: core/cache.get : 1.02 ms
17.02 09:30:25 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 104, _type => core/cache.get }
17.02 09:30:25 READDB: SELECT * FROM UserQuests WHERE ID = 104
17.02 09:30:25 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 104 } }
17.02 09:30:25 TIME: core/cache.get : 0.49 ms
17.02 09:30:25 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 104, _type => core/user.loginPost, ipAddr => 188.162.39.30 }
17.02 09:30:25 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:30:25 TIME: core/user.loginPost : 0.06 ms
17.02 09:30:26 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 104, _type => vdl/cache.user.getData, money => 0 }
17.02 09:30:26 DB: SELECT params FROM users WHERE id=104
17.02 09:30:26 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
17.02 09:30:26 TIME: vdl/cache.user.getData : 1.02 ms
17.02 09:30:27 TIMER: Check step...
17.02 09:30:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:27 TIMER: Check step: 0ms
17.02 09:30:32 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 104, _type => core/cache.update }
17.02 09:30:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:30:32 TIME: core/cache.update : 0.12 ms
17.02 09:30:32 WRITEDB: UPDATE Users SET name = E'wert', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwepoi', isbanned = E'false', regdate = E'2017-02-17 08:55:25.473238-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487339725,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 104
17.02 09:30:32 TIMER: Check step...
17.02 09:30:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:32 TIMER: Check step: 0ms
17.02 09:30:35 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 104 }
17.02 09:30:35 DB: SELECT name FROM users WHERE id = 114
17.02 09:30:35 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [{ name => nellil, id => 114 }], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:30:35 TIME: vdl/cache.user.getAccessFriend : 0.8 ms
17.02 09:30:37 TIMER: Check step...
17.02 09:30:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:37 TIMER: Check step: 0ms
17.02 09:30:37 TIMER: Check tournaments...
17.02 09:30:37 DB: SELECT * FROM tournament
17.02 09:30:37 TIMER: Check tournaments: 0ms
17.02 09:30:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
17.02 09:30:42 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
17.02 09:30:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 34 }}, errorCode => ok, _type => core/server.query }
17.02 09:30:42 TIME: core/server.query : 0.87 ms
17.02 09:30:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 34, _type => vdl/cache.battle.infoRoom }
17.02 09:30:42 READDB: SELECT * FROM Battle WHERE ID = 34
17.02 09:30:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 114, _type => vdl/cache.battle.infoRoom, turnId => 114 }
17.02 09:30:42 TIME: vdl/cache.battle.infoRoom : 0.88 ms
17.02 09:30:42 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 34, _type => vdl/cache.battle.deleteRoom }
17.02 09:30:42 ROOM: deleted room 34
17.02 09:30:42 DB: DELETE FROM Battle WHERE ID = 34
17.02 09:30:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 09:30:42 TIME: vdl/cache.battle.deleteRoom : 0.82 ms
17.02 09:30:42 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 34, _type => vdl/cache.battle.finishRoom }
17.02 09:30:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 09:30:42 TIME: vdl/cache.battle.finishRoom : 0.12 ms
17.02 09:30:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
17.02 09:30:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
17.02 09:30:42 TIME: core/cache.update : 0.13 ms
17.02 09:30:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
17.02 09:30:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:30:42 TIME: core/cache.update : 0.12 ms
17.02 09:30:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
17.02 09:30:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:30:42 TIME: core/user.logoutPost : 0.13 ms
17.02 09:30:42 WRITEDB: UPDATE Users SET name = E'nellil', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty1', isbanned = E'false', regdate = E'2017-02-17 09:21:52.84826-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[104]},"attrs":{"_lastTime.24hr":1487341312,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 114
17.02 09:30:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
17.02 09:30:42 TIMER: Check step...
17.02 09:30:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:42 TIMER: Check step: 1ms
17.02 09:30:43 NET: vdl.0 (thread) request vdl/cache.user.addFriend { type => add, _type => vdl/cache.user.addFriend, friend => 114, player => 104 }
17.02 09:30:43 QUEUE: vdl.0 (thread) response vdl/cache.user.addFriend { errorCode => ok, _type => vdl/cache.user.addFriend }
17.02 09:30:43 TIME: vdl/cache.user.addFriend : 0.19 ms
17.02 09:30:43 WRITEDB: UPDATE Users SET name = E'wert', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwepoi', isbanned = E'false', regdate = E'2017-02-17 08:55:25.473238-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[],"friendList":[114]},"attrs":{"_lastTime.24hr":1487339725,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 104
17.02 09:30:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'104', turnid = E'114', finished = E'true', endtime = E'1489140', firstid = E'114', steptime = E'1487340', params = E'{}', avaliable = E'false' WHERE ID = 34
17.02 09:30:47 TIMER: Check step...
17.02 09:30:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:47 TIMER: Check step: 0ms
17.02 09:30:48 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 104 }
17.02 09:30:48 DB: SELECT name FROM users WHERE id = 114
17.02 09:30:48 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [{ name => nellil, isOnline => false, id => 114 }], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:30:48 TIME: vdl/cache.user.getFriendList : 0.82 ms
17.02 09:30:52 BLOCKREMOVE: questdata 114 removed
17.02 09:30:52 TIMER: Check step...
17.02 09:30:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:52 TIMER: Check step: 0ms
17.02 09:30:57 BLOCKREMOVE: battle 34 removed
17.02 09:30:57 TIMER: Check step...
17.02 09:30:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:30:57 TIMER: Check step: 0ms
17.02 09:30:57 TIMER: Check tournaments...
17.02 09:30:57 DB: SELECT * FROM tournament
17.02 09:30:57 TIMER: Check tournaments: 0ms
17.02 09:30:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
17.02 09:30:58 DB: SELECT * FROM users
17.02 09:30:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ city => , password => uid4, name => uid4, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:11.793848-05, language =>   , id => 4, money => 0, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:11.459825-05, language =>   , id => 3, money => 0, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:12.76259-05, language =>   , id => 7, money => 0, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:12.437217-05, language =>   , id => 6, money => 0, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:12.109987-05, language =>   , id => 5, money => 0, deleted => false }, { city => , password => uid10, name => uid10, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:13.735592-05, language =>   , id => 10, money => 0, deleted => false }, { city => , password => uid9, name => uid9, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:13.403347-05, language =>   , id => 9, money => 0, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:13.083873-05, language =>   , id => 8, money => 0, deleted => false }, { city => , password => uid13, name => uid13, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:14.67559-05, language =>   , id => 13, money => 0, deleted => false }, { city => , password => uid12, name => uid12, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:14.363001-05, language =>   , id => 12, money => 0, deleted => false }, { city => , password => uid11, name => uid11, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:14.044099-05, language =>   , id => 11, money => 0, deleted => false }, { city => , password => uid16, name => uid16, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:15.662368-05, language =>   , id => 16, money => 0, deleted => false }, { city => , password => uid15, name => uid15, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:15.321183-05, language =>   , id => 15, money => 0, deleted => false }, { city => , password => uid14, name => uid14, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:14.99402-05, language =>   , id => 14, money => 0, deleted => false }, { city => , password => uid19, name => uid19, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:16.674693-05, language =>   , id => 19, money => 0, deleted => false }, { city => , password => uid18, name => uid18, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:16.349725-05, language =>   , id => 18, money => 0, deleted => false }, { city => , password => uid17, name => uid17, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:15.991021-05, language =>   , id => 17, money => 0, deleted => false }, { city => , password => uid22, name => uid22, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:17.665831-05, language =>   , id => 22, money => 0, deleted => false }, { city => , password => uid21, name => uid21, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:17.340501-05, language =>   , id => 21, money => 0, deleted => false }, { city => , password => uid20, name => uid20, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:17.021287-05, language =>   , id => 20, money => 0, deleted => false }, { city => , password => uid25, name => uid25, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:18.626759-05, language =>   , id => 25, money => 0, deleted => false }, { city => , password => uid24, name => uid24, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:18.307254-05, language =>   , id => 24, money => 0, deleted => false }, { city => , password => uid23, name => uid23, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:17.985274-05, language =>   , id => 23, money => 0, deleted => false }, { city => , password => uid27, name => uid27, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:19.29685-05, language =>   , id => 27, money => 0, deleted => false }, { city => , password => uid26, name => uid26, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:18.961177-05, language =>   , id => 26, money => 0, deleted => false }, { city => , password => uid28, name => uid28, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:19.645034-05, language =>   , id => 28, money => 0, deleted => false }, { city => , password => uid31, name => uid31, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:20.635252-05, language =>   , id => 31, money => 0, deleted => false }, { city => , password => uid30, name => uid30, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:20.298735-05, language =>   , id => 30, money => 0, deleted => false }, { city => , password => uid29, name => uid29, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:19.965299-05, language =>   , id => 29, money => 0, deleted => false }, { city => , password => uid34, name => uid34, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:21.637004-05, language =>   , id => 34, money => 0, deleted => false }, { city => , password => uid33, name => uid33, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:21.297997-05, language =>   , id => 33, money => 0, deleted => false }, { city => , password => uid32, name => uid32, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:20.959349-05, language =>   , id => 32, money => 0, deleted => false }, { city => , password => uid37, name => uid37, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:22.611041-05, language =>   , id => 37, money => 0, deleted => false }, { city => , password => uid35, name => uid35, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:21.972715-05, language =>   , id => 35, money => 0, deleted => false }, { city => , password => uid39, name => uid39, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:23.275852-05, language =>   , id => 39, money => 0, deleted => false }, { city => , password => uid43, name => uid43, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:24.614842-05, language =>   , id => 43, money => 0, deleted => false }, { city => , password => uid46, name => uid46, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:25.550909-05, language =>   , id => 46, money => 0, deleted => false }, { city => , password => uid50, name => uid50, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:26.893219-05, language =>   , id => 50, money => 0, deleted => false }, { city => , password => uid47, name => uid47, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:25.919935-05, language =>   , id => 47, money => 0, deleted => false }, { city => , password => uid51, name => uid51, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:27.276733-05, language =>   , id => 51, money => 0, deleted => false }, { city => , password => uid36, name => uid36, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:22.27566-05, language =>   , id => 36, money => 0, deleted => false }, { city => , password => uid40, name => uid40, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:23.629781-05, language =>   , id => 40, money => 0, deleted => false }, { city => , password => uid38, name => uid38, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:22.932048-05, language =>   , id => 38, money => 0, deleted => false }, { city => , password => uid41, name => uid41, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:23.960839-05, language =>   , id => 41, money => 0, deleted => false }, { city => , password => uid42, name => uid42, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:24.311632-05, language =>   , id => 42, money => 0, deleted => false }, { city => , password => uid45, name => uid45, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:25.231915-05, language =>   , id => 45, money => 0, deleted => false }, { city => , password => uid44, name => uid44, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:24.922462-05, language =>   , id => 44, money => 0, deleted => false }, { city => , password => uid49, name => uid49, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:26.563638-05, language =>   , id => 49, money => 0, deleted => false }, { city => , password => uid48, name => uid48, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:26.25379-05, language =>   , id => 48, money => 0, deleted => false }, { city => , password => uid52, name => uid52, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:27.647348-05, language =>   , id => 52, money => 0, deleted => false }, { city => , password => uid55, name => uid55, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:28.623469-05, language =>   , id => 55, money => 0, deleted => false }, { city => , password => uid54, name => uid54, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:28.304227-05, language =>   , id => 54, money => 0, deleted => false }, { city => , password => uid53, name => uid53, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:27.97266-05, language =>   , id => 53, money => 0, deleted => false }, { city => , password => uid56, name => uid56, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:05.794976-05, language =>   , id => 56, money => 0, deleted => false }, { city => , password => uid59, name => uid59, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:06.815017-05, language =>   , id => 59, money => 0, deleted => false }, { city => , password => uid58, name => uid58, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:06.478534-05, language =>   , id => 58, money => 0, deleted => false }, { city => , password => uid57, name => uid57, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:06.128981-05, language =>   , id => 57, money => 0, deleted => false }, { city => , password => uid61, name => uid61, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 14:16:55.785184-05, language =>   , id => 61, money => 0, deleted => false }, { city => , password => uid62, name => uid62, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 14:22:19.123091-05, language =>   , id => 62, money => 0, deleted => false }, { city => , password => qweqwe, name => Aimer, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486759954,"lastLoginDate":41,"money":100,"lastLoadDate":211},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-10 15:52:33.973174-05, language => en, id => 65, money => 0, deleted => false }, { city => , password => uid63, name => uid63, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487338020,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-10 14:36:33.648136-05, language => en, id => 63, money => 0, deleted => false }, { city => , password => uid66, name => uid66, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486818078,"lastLoginDate":42,"lastLoadDate":212},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-11 08:01:18.431347-05, language => en, id => 66, money => 0, deleted => false }, { city => , password => uid71, name => uid71, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486916893,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 11:28:13.257436-05, language => en, id => 71, money => 0, deleted => false }, { city => , password => uid75, name => uid75, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486929011,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:50:11.504677-05, language => en, id => 75, money => 0, deleted => false }, { city => , password => uid67, name => uid67, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486819206,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-11 08:20:06.728754-05, language => en, id => 67, money => 0, deleted => false }, { city => , password => uid64, name => uid64, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486755621,"lastLoginDate":41,"lastLoadDate":211},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-10 14:40:21.41515-05, language => en, id => 64, money => 0, deleted => false }, { city => , password => uid72, name => uid72, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487320163,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:48:12.760178-05, language => en, id => 72, money => 0, deleted => false }, { city => , password => uid68, name => uid68, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486905439,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 08:17:19.33505-05, language => en, id => 68, money => 0, deleted => false }, { city => , password => uid69, name => uid69, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487320302,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 08:40:31.139347-05, language => en, id => 69, money => 0, deleted => false }, { city => , password => uid73, name => uid73, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486928941,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:49:00.579486-05, language => en, id => 73, money => 0, deleted => false }, { city => , password => uid70, name => uid70, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486913928,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 10:38:44.702712-05, language => en, id => 70, money => 0, deleted => false }, { city => , password => uid74, name => uid74, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486929002,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:50:02.441222-05, language => en, id => 74, money => 0, deleted => false }, { city => , password => uid77, name => uid77, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486972789,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 02:59:48.722404-05, language => en, id => 77, money => 0, deleted => false }, { city => , password => uid81, name => uid81, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975164,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:24.252721-05, language => en, id => 81, money => 0, deleted => false }, { city => , password => uid82, name => uid82, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975165,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:25.566784-05, language => en, id => 82, money => 0, deleted => false }, { city => , password => uid78, name => uid78, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975159,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:19.505058-05, language => en, id => 78, money => 0, deleted => false }, { city => , password => uid79, name => uid79, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975161,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:21.867915-05, language => en, id => 79, money => 0, deleted => false }, { city => , password => uid85, name => uid85, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486995431,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 09:17:08.343899-05, language => en, id => 85, money => 0, deleted => false }, { city => , password => uid80, name => uid80, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975163,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:23.2322-05, language => en, id => 80, money => 0, deleted => false }, { city => , password => uid83, name => uid83, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486976083,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:54:42.680187-05, language => en, id => 83, money => 0, deleted => false }, { city => , password => uid84, name => uid84, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486976653,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 04:04:12.501372-05, language => en, id => 84, money => 0, deleted => false }, { city => , password => uid94, name => uid94, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, language => en, id => 94, money => 0, deleted => false }, { city => , password => uid106, name => uid106, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339741,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:55:41.303349-05, language => en, id => 106, money => 0, deleted => false }, { city => , password => uid87, name => uid87, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487073150,"lastLoginDate":45,"lastLoadDate":215},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-14 06:52:29.899108-05, language => en, id => 87, money => 0, deleted => false }, { city => , password => uid102, name => uid102, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487338861,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:41:00.700498-05, language => en, id => 102, money => 0, deleted => false }, { city => , password => uid107, name => uid107, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339745,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:55:45.10022-05, language => en, id => 107, money => 0, deleted => false }, { city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"inventory":{"list":[]},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-10 05:32:53.904032-05, language =>   , id => 1, money => 0, deleted => false }, { city => , password => uid93, name => uid93, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321426,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 03:50:25.683083-05, language => en, id => 93, money => 0, deleted => false }, { city => , password => uid92, name => uid92, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321330,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 03:48:49.450121-05, language => en, id => 92, money => 0, deleted => false }, { city => , password => uid100, name => uid100, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487337590,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:19:50.624389-05, language => en, id => 100, money => 0, deleted => false }, { city => , password => uid60, name => uid60, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487247134,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, language => en, id => 60, money => 0, deleted => false }, { city => , password => 77779999, name => vvp75, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[76,76]},"attrs":{"_lastTime.24hr":1487098937,"lastLoginDate":45,"lastLoadDate":215},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-14 14:02:17.317416-05, language => en, id => 88, money => 0, deleted => false }, { city => , password => qwerty1, name => nellil, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[104]},"attrs":{"_lastTime.24hr":1487341312,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 09:21:52.84826-05, language => en, id => 114, money => 0, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487338121,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:11.101608-05, language => en, id => 2, money => 0, deleted => false }, { city => , password => qwerty, name => aimer, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487327236,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 05:27:16.119291-05, language => en, id => 97, money => 0, deleted => false }, { city => , password => uid89, name => uid89, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487268382,"lastLoginDate":47,"lastLoadDate":217},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-15 03:47:42.00038-05, language => en, id => 89, money => 0, deleted => false }, { city => , password => uid95, name => uid95, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487327178,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 05:26:17.812853-05, language => en, id => 95, money => 0, deleted => false }, { city => , password => uid96, name => uid96, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487327186,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 05:26:26.523296-05, language => en, id => 96, money => 0, deleted => false }, { city => , password => uid98, name => uid98, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487334298,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 07:24:57.907152-05, language => en, id => 98, money => 0, deleted => false }, { city => , password => uid110, name => uid110, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339796,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:56:36.565869-05, language => en, id => 110, money => 0, deleted => false }, { city => , password => uid99, name => uid99, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487334526,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 07:28:45.976964-05, language => en, id => 99, money => 0, deleted => false }, { city => , password => uid108, name => uid108, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487339752,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:55:52.594924-05, language => en, id => 108, money => 0, deleted => false }, { city => , password => uid91, name => uid91, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321287,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 03:48:07.057509-05, language => en, id => 91, money => 0, deleted => false }, { city => , password => uid101, name => uid101, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487338724,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:38:43.96117-05, language => en, id => 101, money => 0, deleted => false }, { city => , password => uid111, name => uid111, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339862,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:57:42.051718-05, language => en, id => 111, money => 0, deleted => false }, { city => , password => uid105, name => uid105, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339741,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:55:39.242971-05, language => en, id => 105, money => 0, deleted => false }, { city => , password => qwepoi, name => wert2, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339786,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:56:26.264661-05, language => en, id => 109, money => 0, deleted => false }, { city => , password => uid103, name => uid103, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487338934,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:42:14.02126-05, language => en, id => 103, money => 0, deleted => false }, { city => , password => uid112, name => uid112, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339891,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:58:11.064918-05, language => en, id => 112, money => 0, deleted => false }, { city => , password => uid90, name => uid90, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321286,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 03:48:05.98115-05, language => en, id => 90, money => 0, deleted => false }, { city => , password => uid113, name => uid113, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339996,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:59:56.473135-05, language => en, id => 113, money => 0, deleted => false }, { city => , password => 77779999, name => ga.forest, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[114]},"attrs":{"_lastTime.24hr":1487071866,"lastLoginDate":45,"lastLoadDate":215},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:50:59.369023-05, language => en, id => 76, money => 0, deleted => false }, { city => , password => uid86, name => uid86, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487341245,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-14 04:31:56.112808-05, language => en, id => 86, money => 0, deleted => false }, { city => , password => qwepoi, name => wert, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[],"friendList":[114]},"attrs":{"_lastTime.24hr":1487339725,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 08:55:25.473238-05, language => en, id => 104, money => 0, deleted => false }}, errorCode => ok, _type => core/server.query }
17.02 09:30:58 TIME: core/server.query : 2.19 ms
17.02 09:30:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid115', _type => core/server.query }
17.02 09:30:58 DB: SELECT ID FROM Users WHERE Name = E'uid115'
17.02 09:30:58 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:30:58 TIME: core/server.query : 0.6 ms
17.02 09:30:58 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
17.02 09:30:58 DB: SELECT nextval('Users_id_seq') AS id
17.02 09:30:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 115 }}, errorCode => ok, _type => core/server.query }
17.02 09:30:58 TIME: core/server.query : 0.57 ms
17.02 09:30:58 NET: vdl.0 (thread) request core/user.register { password => uid115, name => uid115, fullParams => { password => uid115, name => uid115, networkid => , networktype => , messageType => user.register, id => 115 }, networkid => , connectionID => 27884971, networktype => , email => , id => 115, _type => core/user.register }
17.02 09:30:58 QUEUE: vdl.0 (thread) response core/user.register { errorCode => ok, _type => core/user.register }
17.02 09:30:58 TIME: core/user.register : 0.04 ms
17.02 09:30:58 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (115,E'uid115',E'',E'',E'uid115',E'', now())
17.02 09:30:58 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (115, 0)
17.02 09:30:58 READDB: SELECT * FROM Users WHERE ID = 115
17.02 09:30:58 DB: UPDATE Users SET params=E'{"attrs":{},"inventory":{"list":[]}, "info": {"city":"", "year": "", "email": ""}}' WHERE id=115
17.02 09:30:58 READDB: SELECT ID FROM UserQuests WHERE ID = 115
17.02 09:30:58 READDB: INSERT INTO UserQuests (ID) VALUES (115)
17.02 09:30:58 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid115, name => uid115, _isNotify => true, fullParams => { password => uid115, name => uid115, networkid => , networktype => , messageType => user.register, id => 115 }, networkid => , connectionID => 27884971, networktype => , email => , id => 115, _type => core/user.registerResponse }
17.02 09:30:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
17.02 09:30:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid115, networkid => , isbanned => false, id => 115 }}, errorCode => ok, _type => core/server.query }
17.02 09:30:59 TIME: core/server.query : 0.91 ms
17.02 09:30:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:30:59 TIME: core/user.isOnlineID : 0.06 ms
17.02 09:30:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid115, money => 0, deleted => false, year => , email => , networktype =>   , password => uid115, isbanned => false, regdate => 2017-02-17 09:30:58.795492-05, city => , language =>   , networkid => , params => { inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 115 } }
17.02 09:30:59 TIME: core/cache.get : 0.21 ms
17.02 09:30:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
17.02 09:30:59 READDB: SELECT * FROM UserQuests WHERE ID = 115
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 115 } }
17.02 09:30:59 TIME: core/cache.get : 0.61 ms
17.02 09:30:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:30:59 TIME: core/user.loginPost : 0.06 ms
17.02 09:30:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 115 AND Date = 'today'::timestamp, _type => core/server.query }
17.02 09:30:59 DB: SELECT ID FROM TempUserLogins WHERE UserID = 115 AND Date = 'today'::timestamp
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:30:59 TIME: core/server.query : 0.57 ms
17.02 09:30:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1487341859, lastLoginDate => 48, lastLoadDate => 218 } }}, type => user, unlock => true, id => 115, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (115, 'today'::timestamp), _type => core/server.pending }} }
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:30:59 TIME: core/cache.update : 0.2 ms
17.02 09:30:59 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (115, 'today'::timestamp)
17.02 09:30:59 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 115, _type => core/cache.update }
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:30:59 TIME: core/cache.update : 0.09 ms
17.02 09:30:59 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 115, _type => core/user.logoutPost }
17.02 09:30:59 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:30:59 TIME: core/user.logoutPost : 0.06 ms
17.02 09:31:02 TIMER: Check step...
17.02 09:31:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:02 TIMER: Check step: 0ms
17.02 09:31:04 WRITEDB: UPDATE Users SET name = E'uid115', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid115', isbanned = E'false', regdate = E'2017-02-17 09:30:58.795492-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487341859,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 115
17.02 09:31:05 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 115
17.02 09:31:07 TIMER: Check step...
17.02 09:31:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:07 TIMER: Check step: 0ms
17.02 09:31:12 TIMER: Check step...
17.02 09:31:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:12 TIMER: Check step: 1ms
17.02 09:31:14 BLOCKREMOVE: user 115 removed
17.02 09:31:15 BLOCKREMOVE: questdata 115 removed
17.02 09:31:17 TIMER: Clans cache...
17.02 09:31:17 TIMER: Clans cache: 0ms
17.02 09:31:17 TIMER: Check step...
17.02 09:31:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:17 TIMER: Check step: 0ms
17.02 09:31:17 TIMER: Check round...
17.02 09:31:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:31' OR rounddate = '2017-17-02 12:31' AND status <> 'finished'
17.02 09:31:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.8777598' AND avaliable = false AND finished <> true
17.02 09:31:17 TIMER: Check round: 0ms
17.02 09:31:17 TIMER: Check tournaments...
17.02 09:31:17 DB: SELECT * FROM tournament
17.02 09:31:17 TIMER: Check tournaments: 0ms
17.02 09:31:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true, _type => core/server.query }
17.02 09:31:19 DB: SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true
17.02 09:31:19 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:31:19 TIME: core/server.query : 0.85 ms
17.02 09:31:19 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:31:19 STATS: cache [battle], get [242 calls, 189 cache hits, 52 cache misses, 0 same version, 17 not found]
17.02 09:31:19 STATS: cache [battle], segments [402 calls, 349 hits, 52 misses]
17.02 09:31:19 STATS: cache [battle], database [2703 calls, 52 reads, 133 writes]
17.02 09:31:19 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:31:19 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:31:19 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:31:19 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:31:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:31:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 115, _type => core/cache.update }
17.02 09:31:19 STATS: cache [user], get [73 calls, 47 cache hits, 26 cache misses, 0 same version, 0 not found]
17.02 09:31:19 STATS: cache [user], segments [237 calls, 150 hits, 56 misses]
17.02 09:31:19 STATS: cache [user], database [2703 calls, 26 reads, 46 writes]
17.02 09:31:19 STATS: cache [user], lock [59 calls, 59 attempts, 21 failures]
17.02 09:31:19 STATS: cache manager [1], get [64 calls, total 0.04 sec spent, avg 0.61 ms]
17.02 09:31:19 STATS: cache manager [1], update [92 calls, total 0.01 sec spent, avg 0.08 ms]
17.02 09:31:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
17.02 09:31:19 TIME: core/cache.update : 0.4 ms
17.02 09:31:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 115, _type => core/cache.update }
17.02 09:31:19 STATS: cache [questdata], get [26 calls, 1 cache hits, 25 cache misses, 0 same version, 0 not found]
17.02 09:31:19 STATS: cache [questdata], segments [109 calls, 53 hits, 55 misses]
17.02 09:31:19 STATS: cache [questdata], database [2703 calls, 25 reads, 24 writes]
17.02 09:31:19 STATS: cache [questdata], lock [26 calls, 26 attempts, 0 failures]
17.02 09:31:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
17.02 09:31:19 TIME: core/cache.update : 0.3 ms
17.02 09:31:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 115, _type => core/user.logoutPost }
17.02 09:31:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:31:19 TIME: core/user.logoutPost : 0.09 ms
17.02 09:31:20 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'nellil' AND Password = E'qwerty1', _type => core/server.query }
17.02 09:31:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'nellil' AND Password = E'qwerty1'
17.02 09:31:20 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => nellil, networkid => , isbanned => false, id => 114 }}, errorCode => ok, _type => core/server.query }
17.02 09:31:20 TIME: core/server.query : 0.82 ms
17.02 09:31:20 NET: vdl.0 (thread) request core/user.isOnlineID { id => 114, _type => core/user.isOnlineID }
17.02 09:31:20 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:31:20 TIME: core/user.isOnlineID : 0.05 ms
17.02 09:31:20 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 114, _type => core/cache.get }
17.02 09:31:20 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => nellil, money => 0, deleted => false, year => , email => , networktype =>   , password => qwerty1, isbanned => false, regdate => 2017-02-17 09:21:52.84826-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, params => { friendPrepare => [104], friendList => [104] }, attrs => { _lastTime.24hr => 1487341312, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 5, id => 114 } }
17.02 09:31:20 TIME: core/cache.get : 0.24 ms
17.02 09:31:20 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 114, _type => core/cache.get }
17.02 09:31:20 READDB: SELECT * FROM UserQuests WHERE ID = 114
17.02 09:31:20 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 114 } }
17.02 09:31:20 TIME: core/cache.get : 0.62 ms
17.02 09:31:20 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 114, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 09:31:20 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:31:20 TIME: core/user.loginPost : 0.06 ms
17.02 09:31:20 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 114, _type => vdl/cache.user.getData, money => 0 }
17.02 09:31:20 DB: SELECT params FROM users WHERE id=114
17.02 09:31:20 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
17.02 09:31:20 TIME: vdl/cache.user.getData : 0.91 ms
17.02 09:31:22 TIMER: Check step...
17.02 09:31:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:22 TIMER: Check step: 0ms
17.02 09:31:27 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 114, _type => core/cache.update }
17.02 09:31:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
17.02 09:31:27 TIME: core/cache.update : 0.15 ms
17.02 09:31:27 WRITEDB: UPDATE Users SET name = E'nellil', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty1', isbanned = E'false', regdate = E'2017-02-17 09:21:52.84826-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[104],"friendList":[104]},"attrs":{"_lastTime.24hr":1487341312,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 114
17.02 09:31:27 TIMER: Check step...
17.02 09:31:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:27 TIMER: Check step: 0ms
17.02 09:31:32 TIMER: Check step...
17.02 09:31:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:32 TIMER: Check step: 0ms
17.02 09:31:37 TIMER: Check step...
17.02 09:31:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:37 TIMER: Check step: 0ms
17.02 09:31:37 TIMER: Check tournaments...
17.02 09:31:37 DB: SELECT * FROM tournament
17.02 09:31:37 TIMER: Check tournaments: 0ms
17.02 09:31:40 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 104 }
17.02 09:31:40 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:31:40 TIME: vdl/cache.user.getAccessFriend : 0.12 ms
17.02 09:31:42 TIMER: Check step...
17.02 09:31:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:42 TIMER: Check step: 0ms
17.02 09:31:47 TIMER: Check step...
17.02 09:31:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:47 TIMER: Check step: 0ms
17.02 09:31:52 TIMER: Check step...
17.02 09:31:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:52 TIMER: Check step: 0ms
17.02 09:31:53 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 104 }
17.02 09:31:53 DB: SELECT name FROM users WHERE id = 114
17.02 09:31:53 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [{ name => nellil, isOnline => true, id => 114 }], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:31:53 TIME: vdl/cache.user.getFriendList : 1.03 ms
17.02 09:31:57 TIMER: Check step...
17.02 09:31:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:31:57 TIMER: Check step: 1ms
17.02 09:31:57 TIMER: Check tournaments...
17.02 09:31:57 DB: SELECT * FROM tournament
17.02 09:31:57 TIMER: Check tournaments: 0ms
17.02 09:31:59 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 114 }
17.02 09:31:59 DB: SELECT name FROM users WHERE id = 104
17.02 09:31:59 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [{ name => wert, isOnline => true, id => 104 }], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:31:59 TIME: vdl/cache.user.getFriendList : 0.77 ms
17.02 09:32:02 TIMER: Check step...
17.02 09:32:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:02 TIMER: Check step: 0ms
17.02 09:32:07 TIMER: Check step...
17.02 09:32:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:07 TIMER: Check step: 0ms
17.02 09:32:12 TIMER: Check step...
17.02 09:32:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:12 TIMER: Check step: 0ms
17.02 09:32:17 TIMER: Clans cache...
17.02 09:32:17 TIMER: Clans cache: 0ms
17.02 09:32:17 TIMER: Check step...
17.02 09:32:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:17 TIMER: Check step: 0ms
17.02 09:32:17 TIMER: Check round...
17.02 09:32:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:32' OR rounddate = '2017-17-02 12:32' AND status <> 'finished'
17.02 09:32:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.93778282' AND avaliable = false AND finished <> true
17.02 09:32:17 TIMER: Check round: 0ms
17.02 09:32:17 TIMER: Check tournaments...
17.02 09:32:17 DB: SELECT * FROM tournament
17.02 09:32:17 TIMER: Check tournaments: 0ms
17.02 09:32:22 TIMER: Check step...
17.02 09:32:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:22 TIMER: Check step: 0ms
17.02 09:32:27 TIMER: Check step...
17.02 09:32:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:27 TIMER: Check step: 0ms
17.02 09:32:29 NET: vdl.0 (thread) request vdl/cache.user.getFriendList { _type => vdl/cache.user.getFriendList, player => 104 }
17.02 09:32:29 STATS: cache [user], get [78 calls, 51 cache hits, 26 cache misses, 0 same version, 0 not found]
17.02 09:32:29 STATS: cache [user], segments [244 calls, 153 hits, 57 misses]
17.02 09:32:29 STATS: cache [user], database [2773 calls, 26 reads, 47 writes]
17.02 09:32:29 STATS: cache [user], lock [60 calls, 60 attempts, 21 failures]
17.02 09:32:29 DB: SELECT name FROM users WHERE id = 114
17.02 09:32:29 QUEUE: vdl.0 (thread) response vdl/cache.user.getFriendList { list => [{ name => nellil, isOnline => true, id => 114 }], errorCode => ok, _type => vdl/cache.user.getFriendList }
17.02 09:32:29 TIME: vdl/cache.user.getFriendList : 1.29 ms
17.02 09:32:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113', _type => core/server.query }
17.02 09:32:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113'
17.02 09:32:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid113, networkid => , isbanned => false, id => 113 }}, errorCode => ok, _type => core/server.query }
17.02 09:32:31 TIME: core/server.query : 0.82 ms
17.02 09:32:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 113, _type => core/user.isOnlineID }
17.02 09:32:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:32:31 TIME: core/user.isOnlineID : 0.06 ms
17.02 09:32:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 113, _type => core/cache.get }
17.02 09:32:31 READDB: SELECT * FROM Users WHERE ID = 113
17.02 09:32:31 STATS: cache manager [1], get [67 calls, total 0.04 sec spent, avg 0.6 ms]
17.02 09:32:31 STATS: cache manager [1], update [94 calls, total 0.01 sec spent, avg 0.08 ms]
17.02 09:32:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid113, money => 0, deleted => false, year => , email => , networktype =>   , password => uid113, isbanned => false, regdate => 2017-02-17 08:59:56.473135-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487339996, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 113 } }
17.02 09:32:31 TIME: core/cache.get : 1.07 ms
17.02 09:32:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 113, _type => core/cache.get }
17.02 09:32:31 STATS: cache [questdata], get [27 calls, 1 cache hits, 26 cache misses, 0 same version, 0 not found]
17.02 09:32:31 STATS: cache [questdata], segments [112 calls, 53 hits, 58 misses]
17.02 09:32:31 STATS: cache [questdata], database [2775 calls, 26 reads, 24 writes]
17.02 09:32:31 STATS: cache [questdata], lock [28 calls, 28 attempts, 0 failures]
17.02 09:32:31 READDB: SELECT * FROM UserQuests WHERE ID = 113
17.02 09:32:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 113 } }
17.02 09:32:31 TIME: core/cache.get : 0.68 ms
17.02 09:32:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 113, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 09:32:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:32:31 TIME: core/user.loginPost : 0.06 ms
17.02 09:32:32 TIMER: Check step...
17.02 09:32:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:32 TIMER: Check step: 0ms
17.02 09:32:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 113, _type => core/cache.update }
17.02 09:32:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:32:37 TIME: core/cache.update : 0.13 ms
17.02 09:32:37 WRITEDB: UPDATE Users SET name = E'uid113', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2017-02-17 08:59:56.473135-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339996,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 113
17.02 09:32:37 TIMER: Check step...
17.02 09:32:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:37 TIMER: Check step: 0ms
17.02 09:32:37 TIMER: Check tournaments...
17.02 09:32:37 DB: SELECT * FROM tournament
17.02 09:32:37 TIMER: Check tournaments: 0ms
17.02 09:32:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true, _type => core/server.query }
17.02 09:32:42 DB: SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:32:42 TIME: core/server.query : 0.67 ms
17.02 09:32:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:32:42 STATS: cache [battle], get [243 calls, 189 cache hits, 53 cache misses, 0 same version, 18 not found]
17.02 09:32:42 STATS: cache [battle], segments [403 calls, 349 hits, 53 misses]
17.02 09:32:42 STATS: cache [battle], database [2785 calls, 53 reads, 133 writes]
17.02 09:32:42 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:32:42 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:32:42 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:32:42 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:32:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:32:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 113, _type => core/cache.update }
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 09:32:42 TIME: core/cache.update : 0.09 ms
17.02 09:32:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 113, _type => core/cache.update }
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:32:42 TIME: core/cache.update : 0.09 ms
17.02 09:32:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 113, _type => core/user.logoutPost }
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:32:42 TIME: core/user.logoutPost : 0.05 ms
17.02 09:32:42 WRITEDB: UPDATE Users SET name = E'uid113', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2017-02-17 08:59:56.473135-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487339996,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 113
17.02 09:32:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 113
17.02 09:32:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'aimer' AND Password = E'qwerty', _type => core/server.query }
17.02 09:32:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'aimer' AND Password = E'qwerty'
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => aimer, networkid => , isbanned => false, id => 97 }}, errorCode => ok, _type => core/server.query }
17.02 09:32:42 TIME: core/server.query : 0.86 ms
17.02 09:32:42 NET: vdl.0 (thread) request core/user.isOnlineID { id => 97, _type => core/user.isOnlineID }
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:32:42 TIME: core/user.isOnlineID : 0.05 ms
17.02 09:32:42 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 97, _type => core/cache.get }
17.02 09:32:42 READDB: SELECT * FROM Users WHERE ID = 97
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => aimer, money => 0, deleted => false, year => , email => , networktype =>   , password => qwerty, isbanned => false, regdate => 2017-02-17 05:27:16.119291-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487327236, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 97 } }
17.02 09:32:42 TIME: core/cache.get : 0.73 ms
17.02 09:32:42 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 97, _type => core/cache.get }
17.02 09:32:42 READDB: SELECT * FROM UserQuests WHERE ID = 97
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 97 } }
17.02 09:32:42 TIME: core/cache.get : 0.36 ms
17.02 09:32:42 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 97, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 09:32:42 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:32:42 TIME: core/user.loginPost : 0.05 ms
17.02 09:32:42 TIMER: Check step...
17.02 09:32:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:42 TIMER: Check step: 0ms
17.02 09:32:42 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 97, _type => vdl/cache.user.getData, money => 0 }
17.02 09:32:42 DB: SELECT params FROM users WHERE id=97
17.02 09:32:42 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => null, year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
17.02 09:32:42 TIME: vdl/cache.user.getData : 0.89 ms
17.02 09:32:44 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 104 }
17.02 09:32:44 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:32:44 TIME: vdl/cache.user.getAccessFriend : 0.07 ms
17.02 09:32:47 TIMER: Check step...
17.02 09:32:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:47 TIMER: Check step: 0ms
17.02 09:32:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 97, _type => core/cache.update }
17.02 09:32:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:32:52 TIME: core/cache.update : 0.11 ms
17.02 09:32:52 BLOCKREMOVE: user 113 removed
17.02 09:32:52 BLOCKREMOVE: questdata 113 removed
17.02 09:32:52 WRITEDB: UPDATE Users SET name = E'aimer', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2017-02-17 05:27:16.119291-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487327236,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 97
17.02 09:32:52 TIMER: Check step...
17.02 09:32:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:52 TIMER: Check step: 0ms
17.02 09:32:57 TIMER: Check step...
17.02 09:32:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:32:57 TIMER: Check step: 0ms
17.02 09:32:57 TIMER: Check tournaments...
17.02 09:32:57 DB: SELECT * FROM tournament
17.02 09:32:57 TIMER: Check tournaments: 0ms
17.02 09:33:01 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 97 }
17.02 09:33:01 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:33:01 TIME: vdl/cache.user.getAccessFriend : 0.1 ms
17.02 09:33:02 TIMER: Check step...
17.02 09:33:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:02 TIMER: Check step: 0ms
17.02 09:33:07 TIMER: Check step...
17.02 09:33:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:07 TIMER: Check step: 0ms
17.02 09:33:12 TIMER: Check step...
17.02 09:33:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:12 TIMER: Check step: 0ms
17.02 09:33:17 TIMER: Clans cache...
17.02 09:33:17 TIMER: Clans cache: 0ms
17.02 09:33:17 TIMER: Check step...
17.02 09:33:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:17 TIMER: Check step: 0ms
17.02 09:33:17 TIMER: Check round...
17.02 09:33:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:33' OR rounddate = '2017-17-02 12:33' AND status <> 'finished'
17.02 09:33:17 DB: SELECT * FROM battle WHERE endtime >= '1487341.99780816' AND avaliable = false AND finished <> true
17.02 09:33:17 TIMER: Check round: 0ms
17.02 09:33:17 TIMER: Check tournaments...
17.02 09:33:17 DB: SELECT * FROM tournament
17.02 09:33:17 TIMER: Check tournaments: 0ms
17.02 09:33:22 TIMER: Check step...
17.02 09:33:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:22 TIMER: Check step: 0ms
17.02 09:33:27 TIMER: Check step...
17.02 09:33:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:27 TIMER: Check step: 0ms
17.02 09:33:32 TIMER: Check step...
17.02 09:33:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:32 TIMER: Check step: 0ms
17.02 09:33:33 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 97 }
17.02 09:33:33 STATS: cache [user], get [83 calls, 54 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:33:33 STATS: cache [user], segments [255 calls, 157 hits, 61 misses]
17.02 09:33:33 STATS: cache [user], database [2837 calls, 28 reads, 50 writes]
17.02 09:33:33 STATS: cache [user], lock [62 calls, 62 attempts, 21 failures]
17.02 09:33:33 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:33:33 TIME: vdl/cache.user.getAccessFriend : 0.22 ms
17.02 09:33:37 TIMER: Check step...
17.02 09:33:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:37 TIMER: Check step: 0ms
17.02 09:33:37 TIMER: Check tournaments...
17.02 09:33:37 DB: SELECT * FROM tournament
17.02 09:33:37 TIMER: Check tournaments: 0ms
17.02 09:33:42 TIMER: Check step...
17.02 09:33:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:42 TIMER: Check step: 0ms
17.02 09:33:47 TIMER: Check step...
17.02 09:33:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:47 TIMER: Check step: 0ms
17.02 09:33:52 TIMER: Check step...
17.02 09:33:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:52 TIMER: Check step: 0ms
17.02 09:33:53 NET: vdl.0 (thread) request vdl/cache.user.searchEnemy { name => a, id => 104, _type => vdl/cache.user.searchEnemy }
17.02 09:33:53 DB: SELECT id, name FROM users WHERE name LIKE '%a%' LIMIT 50
17.02 09:33:53 QUEUE: vdl.0 (thread) response vdl/cache.user.searchEnemy { errorCode => ok, _type => vdl/cache.user.searchEnemy, users => [{ name => aimer, isOnline => true, id => 97 },{ name => ga.forest, isOnline => false, id => 76 }] }
17.02 09:33:53 TIME: vdl/cache.user.searchEnemy : 1.08 ms
17.02 09:33:55 NET: vdl.0 (thread) request vdl/cache.user.addFriend { type => prepare, _type => vdl/cache.user.addFriend, friend => 97, player => 104 }
17.02 09:33:55 QUEUE: vdl.0 (thread) response vdl/cache.user.addFriend { errorCode => ok, _type => vdl/cache.user.addFriend }
17.02 09:33:55 TIME: vdl/cache.user.addFriend : 0.2 ms
17.02 09:33:56 WRITEDB: UPDATE Users SET name = E'aimer', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2017-02-17 05:27:16.119291-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[104]},"attrs":{"_lastTime.24hr":1487327236,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 97
17.02 09:33:57 TIMER: Check step...
17.02 09:33:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:33:57 TIMER: Check step: 0ms
17.02 09:33:57 TIMER: Check tournaments...
17.02 09:33:57 DB: SELECT * FROM tournament
17.02 09:33:57 TIMER: Check tournaments: 0ms
17.02 09:34:02 TIMER: Check step...
17.02 09:34:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:02 TIMER: Check step: 1ms
17.02 09:34:05 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 97 }
17.02 09:34:05 DB: SELECT name FROM users WHERE id = 104
17.02 09:34:05 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [{ name => wert, id => 104 }], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:34:05 TIME: vdl/cache.user.getAccessFriend : 1.04 ms
17.02 09:34:07 NET: vdl.0 (thread) request vdl/cache.user.getAccessFriend { _type => vdl/cache.user.getAccessFriend, player => 104 }
17.02 09:34:07 QUEUE: vdl.0 (thread) response vdl/cache.user.getAccessFriend { list => [], errorCode => ok, _type => vdl/cache.user.getAccessFriend }
17.02 09:34:07 TIME: vdl/cache.user.getAccessFriend : 0.09 ms
17.02 09:34:07 TIMER: Check step...
17.02 09:34:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:07 TIMER: Check step: 0ms
17.02 09:34:12 TIMER: Check step...
17.02 09:34:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:12 TIMER: Check step: 0ms
17.02 09:34:17 TIMER: Clans cache...
17.02 09:34:17 TIMER: Clans cache: 0ms
17.02 09:34:17 TIMER: Check step...
17.02 09:34:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:17 TIMER: Check step: 0ms
17.02 09:34:17 TIMER: Check round...
17.02 09:34:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:34' OR rounddate = '2017-17-02 12:34' AND status <> 'finished'
17.02 09:34:17 DB: SELECT * FROM battle WHERE endtime >= '1487342.05782705' AND avaliable = false AND finished <> true
17.02 09:34:17 TIMER: Check round: 0ms
17.02 09:34:17 TIMER: Check tournaments...
17.02 09:34:17 DB: SELECT * FROM tournament
17.02 09:34:17 TIMER: Check tournaments: 0ms
17.02 09:34:21 NET: vdl.0 (thread) request vdl/cache.user.addFriend { type => denied, _type => vdl/cache.user.addFriend, friend => 104, player => 97 }
17.02 09:34:21 QUEUE: vdl.0 (thread) response vdl/cache.user.addFriend { errorCode => ok, _type => vdl/cache.user.addFriend }
17.02 09:34:21 TIME: vdl/cache.user.addFriend : 0.08 ms
17.02 09:34:21 WRITEDB: UPDATE Users SET name = E'aimer', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2017-02-17 05:27:16.119291-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[]},"attrs":{"_lastTime.24hr":1487327236,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 97
17.02 09:34:22 TIMER: Check step...
17.02 09:34:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:22 TIMER: Check step: 0ms
17.02 09:34:27 TIMER: Check step...
17.02 09:34:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:27 TIMER: Check step: 0ms
17.02 09:34:28 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 97 }, _type => vdl/cache.battle.findRandom }
17.02 09:34:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 09:34:28 TIME: vdl/cache.battle.findRandom : 0.04 ms
17.02 09:34:32 TIMER: Check step...
17.02 09:34:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:32 TIMER: Check step: 0ms
17.02 09:34:37 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 104 }, _type => vdl/cache.battle.findRandom }
17.02 09:34:37 DB: SELECT nextval('Battle_id_seq') AS id
17.02 09:34:37 READDB: SELECT ID FROM Battle WHERE ID = 35
17.02 09:34:37 READDB: INSERT INTO Battle (ID) VALUES (35)
17.02 09:34:37 STATS: cache [battle], get [244 calls, 189 cache hits, 54 cache misses, 0 same version, 19 not found]
17.02 09:34:37 STATS: cache [battle], segments [404 calls, 349 hits, 54 misses]
17.02 09:34:37 STATS: cache [battle], database [2901 calls, 54 reads, 133 writes]
17.02 09:34:37 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:34:37 READDB: SELECT * FROM Battle WHERE ID = 35
17.02 09:34:37 DB: SELECT name FROM users WHERE id=104
17.02 09:34:37 DB: SELECT name FROM users WHERE id=97
17.02 09:34:37 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => wert, enemy.id => 97, enemy.name => aimer, id => 104, enemy.num => 2, battleId => 35, player => 1 }, _isNotify => true, id => 104, _type => battle.enemyEvent }
17.02 09:34:37 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => aimer, enemy.id => 104, enemy.name => wert, id => 97, enemy.num => 1, battleId => 35, player => 2 }, _isNotify => true, id => 97, _type => battle.enemyEvent }
17.02 09:34:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 09:34:37 TIME: vdl/cache.battle.findRandom : 2.94 ms
17.02 09:34:37 TIMER: Check step...
17.02 09:34:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:37 TIMER: Check step: 0ms
17.02 09:34:37 TIMER: Check tournaments...
17.02 09:34:37 DB: SELECT * FROM tournament
17.02 09:34:37 TIMER: Check tournaments: 0ms
17.02 09:34:42 TIMER: Check step...
17.02 09:34:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:42 TIMER: Check step: 0ms
17.02 09:34:43 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'97', turnid = E'104', finished = E'false', endtime = E'1489142.07758529', firstid = E'104', steptime = E'1487342.08358623', params = E'{}', avaliable = E'false' WHERE ID = 35
17.02 09:34:47 TIMER: Check step...
17.02 09:34:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 97, _type => battle.skipEvent }
17.02 09:34:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 104, _type => battle.skipEvent }
17.02 09:34:47 TIMER: Check step: 1ms
17.02 09:34:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 97, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:34:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:34:47 TIME: core/user.sendTo : 0.05 ms
17.02 09:34:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 104, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:34:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:34:47 TIME: core/user.sendTo : 0.04 ms
17.02 09:34:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'97', turnid = E'97', finished = E'false', endtime = E'1489142.07758529', firstid = E'104', steptime = E'1487342.09383712', params = E'{}', avaliable = E'false' WHERE ID = 35
17.02 09:34:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 35, _type => vdl/cache.battle.infoRoom }
17.02 09:34:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 97, firstId => 104, _type => vdl/cache.battle.infoRoom, turnId => 97 }
17.02 09:34:50 TIME: vdl/cache.battle.infoRoom : 0.09 ms
17.02 09:34:50 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 35, _type => vdl/cache.battle.finishRoom }
17.02 09:34:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 09:34:50 TIME: vdl/cache.battle.finishRoom : 0.07 ms
17.02 09:34:52 TIMER: Check step...
17.02 09:34:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 104, _type => battle.skipEvent }
17.02 09:34:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 97, _type => battle.skipEvent }
17.02 09:34:52 TIMER: Check step: 1ms
17.02 09:34:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 104, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:34:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:34:52 TIME: core/user.sendTo : 0.05 ms
17.02 09:34:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 97, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 09:34:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:34:52 TIME: core/user.sendTo : 0.04 ms
17.02 09:34:53 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'97', turnid = E'104', finished = E'true', endtime = E'1489142.07758529', firstid = E'104', steptime = E'1487342.09884275', params = E'{}', avaliable = E'false' WHERE ID = 35
17.02 09:34:55 NET: vdl.0 (thread) request vdl/cache.user.addFriend { type => prepare, _type => vdl/cache.user.addFriend, friend => 97, player => 104 }
17.02 09:34:55 STATS: cache [user], get [89 calls, 60 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:34:55 STATS: cache [user], segments [264 calls, 157 hits, 61 misses]
17.02 09:34:55 STATS: cache [user], database [2918 calls, 28 reads, 52 writes]
17.02 09:34:55 STATS: cache [user], lock [62 calls, 62 attempts, 21 failures]
17.02 09:34:55 QUEUE: vdl.0 (thread) response vdl/cache.user.addFriend { errorCode => ok, _type => vdl/cache.user.addFriend }
17.02 09:34:55 TIME: vdl/cache.user.addFriend : 0.3 ms
17.02 09:34:55 WRITEDB: UPDATE Users SET name = E'aimer', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2017-02-17 05:27:16.119291-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[104]},"attrs":{"_lastTime.24hr":1487327236,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 97
17.02 09:34:57 TIMER: Check step...
17.02 09:34:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:34:57 TIMER: Check step: 0ms
17.02 09:34:57 TIMER: Check tournaments...
17.02 09:34:57 DB: SELECT * FROM tournament
17.02 09:34:57 TIMER: Check tournaments: 0ms
17.02 09:35:02 TIMER: Check step...
17.02 09:35:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:02 TIMER: Check step: 0ms
17.02 09:35:03 BLOCKREMOVE: battle 35 removed
17.02 09:35:07 TIMER: Check step...
17.02 09:35:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:07 TIMER: Check step: 0ms
17.02 09:35:12 TIMER: Check step...
17.02 09:35:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:12 TIMER: Check step: 0ms
17.02 09:35:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true, _type => core/server.query }
17.02 09:35:16 DB: SELECT id FROM battle WHERE firstid=114 OR secondid=114 AND finished <> true
17.02 09:35:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:35:16 TIME: core/server.query : 0.65 ms
17.02 09:35:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:35:16 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:35:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:35:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:35:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:35:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 114, _type => core/cache.update }
17.02 09:35:16 STATS: cache manager [1], get [70 calls, total 0.04 sec spent, avg 0.6 ms]
17.02 09:35:16 STATS: cache manager [1], update [99 calls, total 0.01 sec spent, avg 0.08 ms]
17.02 09:35:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 7, _type => core/cache.update }
17.02 09:35:16 TIME: core/cache.update : 0.15 ms
17.02 09:35:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 114, _type => core/cache.update }
17.02 09:35:16 STATS: cache [questdata], get [29 calls, 1 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:35:16 STATS: cache [questdata], segments [118 calls, 55 hits, 62 misses]
17.02 09:35:16 STATS: cache [questdata], database [2939 calls, 28 reads, 25 writes]
17.02 09:35:16 STATS: cache [questdata], lock [29 calls, 29 attempts, 0 failures]
17.02 09:35:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:35:16 TIME: core/cache.update : 0.17 ms
17.02 09:35:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 114, _type => core/user.logoutPost }
17.02 09:35:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:35:16 TIME: core/user.logoutPost : 0.06 ms
17.02 09:35:16 WRITEDB: UPDATE Users SET name = E'nellil', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty1', isbanned = E'false', regdate = E'2017-02-17 09:21:52.84826-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[104],"friendList":[104]},"attrs":{"_lastTime.24hr":1487341312,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 114
17.02 09:35:16 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 114
17.02 09:35:17 TIMER: Clans cache...
17.02 09:35:17 TIMER: Clans cache: 0ms
17.02 09:35:17 TIMER: Check step...
17.02 09:35:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:17 TIMER: Check step: 1ms
17.02 09:35:17 TIMER: Check round...
17.02 09:35:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:35' OR rounddate = '2017-17-02 12:35' AND status <> 'finished'
17.02 09:35:17 DB: SELECT * FROM battle WHERE endtime >= '1487342.11785218' AND avaliable = false AND finished <> true
17.02 09:35:17 TIMER: Check round: 1ms
17.02 09:35:17 TIMER: Check tournaments...
17.02 09:35:17 DB: SELECT * FROM tournament
17.02 09:35:17 TIMER: Check tournaments: 0ms
17.02 09:35:22 TIMER: Check step...
17.02 09:35:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:22 TIMER: Check step: 0ms
17.02 09:35:26 BLOCKREMOVE: user 114 removed
17.02 09:35:26 BLOCKREMOVE: questdata 114 removed
17.02 09:35:27 TIMER: Check step...
17.02 09:35:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:27 TIMER: Check step: 0ms
17.02 09:35:32 TIMER: Check step...
17.02 09:35:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:32 TIMER: Check step: 1ms
17.02 09:35:37 TIMER: Check step...
17.02 09:35:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:37 TIMER: Check step: 0ms
17.02 09:35:37 TIMER: Check tournaments...
17.02 09:35:37 DB: SELECT * FROM tournament
17.02 09:35:37 TIMER: Check tournaments: 0ms
17.02 09:35:42 TIMER: Check step...
17.02 09:35:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:42 TIMER: Check step: 0ms
17.02 09:35:47 TIMER: Check step...
17.02 09:35:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:47 TIMER: Check step: 0ms
17.02 09:35:52 TIMER: Check step...
17.02 09:35:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:52 TIMER: Check step: 0ms
17.02 09:35:57 TIMER: Check step...
17.02 09:35:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:35:57 TIMER: Check step: 0ms
17.02 09:35:57 TIMER: Check tournaments...
17.02 09:35:57 DB: SELECT * FROM tournament
17.02 09:35:57 TIMER: Check tournaments: 0ms
17.02 09:36:02 TIMER: Check step...
17.02 09:36:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:02 TIMER: Check step: 0ms
17.02 09:36:07 TIMER: Check step...
17.02 09:36:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:07 TIMER: Check step: 0ms
17.02 09:36:12 TIMER: Check step...
17.02 09:36:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:12 TIMER: Check step: 0ms
17.02 09:36:17 TIMER: Clans cache...
17.02 09:36:17 TIMER: Clans cache: 0ms
17.02 09:36:17 TIMER: Check step...
17.02 09:36:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:17 TIMER: Check step: 0ms
17.02 09:36:17 TIMER: Check round...
17.02 09:36:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:36' OR rounddate = '2017-17-02 12:36' AND status <> 'finished'
17.02 09:36:17 DB: SELECT * FROM battle WHERE endtime >= '1487342.1778722' AND avaliable = false AND finished <> true
17.02 09:36:17 TIMER: Check round: 0ms
17.02 09:36:17 TIMER: Check tournaments...
17.02 09:36:17 DB: SELECT * FROM tournament
17.02 09:36:17 TIMER: Check tournaments: 0ms
17.02 09:36:22 TIMER: Check step...
17.02 09:36:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:22 TIMER: Check step: 1ms
17.02 09:36:27 TIMER: Check step...
17.02 09:36:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:27 TIMER: Check step: 0ms
17.02 09:36:32 TIMER: Check step...
17.02 09:36:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:32 TIMER: Check step: 1ms
17.02 09:36:37 TIMER: Check step...
17.02 09:36:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:37 TIMER: Check step: 0ms
17.02 09:36:37 TIMER: Check tournaments...
17.02 09:36:37 DB: SELECT * FROM tournament
17.02 09:36:37 TIMER: Check tournaments: 0ms
17.02 09:36:42 TIMER: Check step...
17.02 09:36:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:42 TIMER: Check step: 0ms
17.02 09:36:47 TIMER: Check step...
17.02 09:36:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:47 TIMER: Check step: 0ms
17.02 09:36:52 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=97 OR secondid=97 AND finished <> true, _type => core/server.query }
17.02 09:36:52 DB: SELECT id FROM battle WHERE firstid=97 OR secondid=97 AND finished <> true
17.02 09:36:52 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:36:52 TIME: core/server.query : 0.67 ms
17.02 09:36:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:36:52 STATS: cache [battle], get [251 calls, 194 cache hits, 56 cache misses, 0 same version, 20 not found]
17.02 09:36:52 STATS: cache [battle], segments [417 calls, 360 hits, 56 misses]
17.02 09:36:52 STATS: cache [battle], database [3035 calls, 56 reads, 136 writes]
17.02 09:36:52 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:36:52 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:36:52 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:36:52 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:36:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:36:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 97, _type => core/cache.update }
17.02 09:36:52 STATS: cache [user], get [90 calls, 62 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:36:52 STATS: cache [user], segments [270 calls, 159 hits, 61 misses]
17.02 09:36:52 STATS: cache [user], database [3035 calls, 28 reads, 54 writes]
17.02 09:36:52 STATS: cache [user], lock [62 calls, 62 attempts, 21 failures]
17.02 09:36:52 STATS: cache manager [1], get [70 calls, total 0.04 sec spent, avg 0.6 ms]
17.02 09:36:52 STATS: cache manager [1], update [101 calls, total 0.01 sec spent, avg 0.08 ms]
17.02 09:36:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 5, _type => core/cache.update }
17.02 09:36:52 TIME: core/cache.update : 0.31 ms
17.02 09:36:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 97, _type => core/cache.update }
17.02 09:36:52 STATS: cache [questdata], get [29 calls, 1 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:36:52 STATS: cache [questdata], segments [120 calls, 57 hits, 62 misses]
17.02 09:36:52 STATS: cache [questdata], database [3035 calls, 28 reads, 26 writes]
17.02 09:36:52 STATS: cache [questdata], lock [29 calls, 29 attempts, 0 failures]
17.02 09:36:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:36:52 TIME: core/cache.update : 0.17 ms
17.02 09:36:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 97, _type => core/user.logoutPost }
17.02 09:36:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:36:52 TIME: core/user.logoutPost : 0.06 ms
17.02 09:36:52 WRITEDB: UPDATE Users SET name = E'aimer', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2017-02-17 05:27:16.119291-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[104]},"attrs":{"_lastTime.24hr":1487327236,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 97
17.02 09:36:52 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 97
17.02 09:36:52 TIMER: Check step...
17.02 09:36:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:52 TIMER: Check step: 0ms
17.02 09:36:57 TIMER: Check step...
17.02 09:36:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:36:57 TIMER: Check step: 0ms
17.02 09:36:57 TIMER: Check tournaments...
17.02 09:36:57 DB: SELECT * FROM tournament
17.02 09:36:57 TIMER: Check tournaments: 0ms
17.02 09:37:02 BLOCKREMOVE: user 97 removed
17.02 09:37:02 BLOCKREMOVE: questdata 97 removed
17.02 09:37:02 TIMER: Check step...
17.02 09:37:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:02 TIMER: Check step: 0ms
17.02 09:37:07 TIMER: Check step...
17.02 09:37:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:07 TIMER: Check step: 0ms
17.02 09:37:12 TIMER: Check step...
17.02 09:37:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:12 TIMER: Check step: 0ms
17.02 09:37:17 TIMER: Clans cache...
17.02 09:37:17 TIMER: Clans cache: 0ms
17.02 09:37:17 TIMER: Check step...
17.02 09:37:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:17 TIMER: Check step: 0ms
17.02 09:37:17 TIMER: Check round...
17.02 09:37:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:37' OR rounddate = '2017-17-02 12:37' AND status <> 'finished'
17.02 09:37:17 DB: SELECT * FROM battle WHERE endtime >= '1487342.2379029' AND avaliable = false AND finished <> true
17.02 09:37:17 TIMER: Check round: 1ms
17.02 09:37:17 TIMER: Check tournaments...
17.02 09:37:17 DB: SELECT * FROM tournament
17.02 09:37:17 TIMER: Check tournaments: 0ms
17.02 09:37:22 TIMER: Check step...
17.02 09:37:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:22 TIMER: Check step: 0ms
17.02 09:37:27 TIMER: Check step...
17.02 09:37:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:27 TIMER: Check step: 0ms
17.02 09:37:32 TIMER: Check step...
17.02 09:37:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:32 TIMER: Check step: 0ms
17.02 09:37:37 TIMER: Check step...
17.02 09:37:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:37 TIMER: Check step: 0ms
17.02 09:37:37 TIMER: Check tournaments...
17.02 09:37:37 DB: SELECT * FROM tournament
17.02 09:37:37 TIMER: Check tournaments: 0ms
17.02 09:37:42 TIMER: Check step...
17.02 09:37:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:42 TIMER: Check step: 0ms
17.02 09:37:47 TIMER: Check step...
17.02 09:37:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:47 TIMER: Check step: 0ms
17.02 09:37:52 TIMER: Check step...
17.02 09:37:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:52 TIMER: Check step: 0ms
17.02 09:37:57 TIMER: Check step...
17.02 09:37:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:37:57 TIMER: Check step: 0ms
17.02 09:37:57 TIMER: Check tournaments...
17.02 09:37:57 DB: SELECT * FROM tournament
17.02 09:37:57 TIMER: Check tournaments: 0ms
17.02 09:38:02 TIMER: Check step...
17.02 09:38:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:02 TIMER: Check step: 0ms
17.02 09:38:07 TIMER: Check step...
17.02 09:38:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:07 TIMER: Check step: 0ms
17.02 09:38:12 TIMER: Check step...
17.02 09:38:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:12 TIMER: Check step: 0ms
17.02 09:38:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true, _type => core/server.query }
17.02 09:38:16 DB: SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true
17.02 09:38:16 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 35 }}, errorCode => ok, _type => core/server.query }
17.02 09:38:16 TIME: core/server.query : 0.67 ms
17.02 09:38:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 35, _type => vdl/cache.battle.infoRoom }
17.02 09:38:16 STATS: cache [battle], get [252 calls, 194 cache hits, 57 cache misses, 0 same version, 21 not found]
17.02 09:38:16 STATS: cache [battle], segments [418 calls, 360 hits, 57 misses]
17.02 09:38:16 STATS: cache [battle], database [3119 calls, 57 reads, 136 writes]
17.02 09:38:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:38:16 READDB: SELECT * FROM Battle WHERE ID = 35
17.02 09:38:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 97, firstId => 104, _type => vdl/cache.battle.infoRoom, turnId => 104 }
17.02 09:38:16 TIME: vdl/cache.battle.infoRoom : 0.86 ms
17.02 09:38:16 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 35, _type => vdl/cache.battle.deleteRoom }
17.02 09:38:16 ROOM: deleted room 35
17.02 09:38:16 DB: DELETE FROM Battle WHERE ID = 35
17.02 09:38:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 09:38:16 TIME: vdl/cache.battle.deleteRoom : 0.65 ms
17.02 09:38:16 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 35, _type => vdl/cache.battle.finishRoom }
17.02 09:38:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 09:38:16 TIME: vdl/cache.battle.finishRoom : 0.08 ms
17.02 09:38:16 NET: vdl.0 (thread) request core/user.sendTo { id => 97, _type => core/user.sendTo, msg => { _type => battle.leave } }
17.02 09:38:16 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 09:38:16 TIME: core/user.sendTo : 0.05 ms
17.02 09:38:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 104, _type => core/cache.update }
17.02 09:38:16 STATS: cache [user], get [90 calls, 62 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:38:16 STATS: cache [user], segments [272 calls, 161 hits, 61 misses]
17.02 09:38:16 STATS: cache [user], database [3119 calls, 28 reads, 55 writes]
17.02 09:38:16 STATS: cache [user], lock [62 calls, 62 attempts, 21 failures]
17.02 09:38:16 STATS: cache manager [1], get [70 calls, total 0.04 sec spent, avg 0.6 ms]
17.02 09:38:16 STATS: cache manager [1], update [103 calls, total 0.01 sec spent, avg 0.08 ms]
17.02 09:38:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
17.02 09:38:16 TIME: core/cache.update : 0.24 ms
17.02 09:38:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 104, _type => core/cache.update }
17.02 09:38:16 STATS: cache [questdata], get [29 calls, 1 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:38:16 STATS: cache [questdata], segments [122 calls, 59 hits, 62 misses]
17.02 09:38:16 STATS: cache [questdata], database [3119 calls, 28 reads, 27 writes]
17.02 09:38:16 STATS: cache [questdata], lock [29 calls, 29 attempts, 0 failures]
17.02 09:38:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:38:16 TIME: core/cache.update : 0.22 ms
17.02 09:38:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 104, _type => core/user.logoutPost }
17.02 09:38:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:38:16 TIME: core/user.logoutPost : 0.06 ms
17.02 09:38:16 WRITEDB: UPDATE Users SET name = E'wert', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'qwepoi', isbanned = E'false', regdate = E'2017-02-17 08:55:25.473238-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[],"friendList":[114]},"attrs":{"_lastTime.24hr":1487339725,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 104
17.02 09:38:16 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 104
17.02 09:38:17 TIMER: Clans cache...
17.02 09:38:17 TIMER: Clans cache: 0ms
17.02 09:38:17 TIMER: Check step...
17.02 09:38:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:17 TIMER: Check step: 0ms
17.02 09:38:17 TIMER: Check round...
17.02 09:38:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:38' OR rounddate = '2017-17-02 12:38' AND status <> 'finished'
17.02 09:38:17 DB: SELECT * FROM battle WHERE endtime >= '1487342.29792237' AND avaliable = false AND finished <> true
17.02 09:38:17 TIMER: Check round: 0ms
17.02 09:38:17 TIMER: Check tournaments...
17.02 09:38:17 DB: SELECT * FROM tournament
17.02 09:38:17 TIMER: Check tournaments: 0ms
17.02 09:38:21 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'97', turnid = E'104', finished = E'true', endtime = E'1489140', firstid = E'104', steptime = E'1487340', params = E'{}', avaliable = E'false' WHERE ID = 35
17.02 09:38:22 TIMER: Check step...
17.02 09:38:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:22 TIMER: Check step: 0ms
17.02 09:38:26 BLOCKREMOVE: user 104 removed
17.02 09:38:26 BLOCKREMOVE: questdata 104 removed
17.02 09:38:27 TIMER: Check step...
17.02 09:38:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:27 TIMER: Check step: 0ms
17.02 09:38:31 BLOCKREMOVE: battle 35 removed
17.02 09:38:32 TIMER: Check step...
17.02 09:38:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:32 TIMER: Check step: 0ms
17.02 09:38:37 TIMER: Check step...
17.02 09:38:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:37 TIMER: Check step: 0ms
17.02 09:38:37 TIMER: Check tournaments...
17.02 09:38:37 DB: SELECT * FROM tournament
17.02 09:38:37 TIMER: Check tournaments: 0ms
17.02 09:38:42 TIMER: Check step...
17.02 09:38:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:42 TIMER: Check step: 0ms
17.02 09:38:47 TIMER: Check step...
17.02 09:38:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:47 TIMER: Check step: 0ms
17.02 09:38:52 TIMER: Check step...
17.02 09:38:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:52 TIMER: Check step: 0ms
17.02 09:38:57 TIMER: Check step...
17.02 09:38:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:38:57 TIMER: Check step: 0ms
17.02 09:38:57 TIMER: Check tournaments...
17.02 09:38:57 DB: SELECT * FROM tournament
17.02 09:38:57 TIMER: Check tournaments: 0ms
17.02 09:39:02 TIMER: Check step...
17.02 09:39:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:02 TIMER: Check step: 0ms
17.02 09:39:07 TIMER: Check step...
17.02 09:39:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:07 TIMER: Check step: 0ms
17.02 09:39:12 TIMER: Check step...
17.02 09:39:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:12 TIMER: Check step: 0ms
17.02 09:39:17 TIMER: Clans cache...
17.02 09:39:17 TIMER: Clans cache: 0ms
17.02 09:39:17 TIMER: Check step...
17.02 09:39:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:17 TIMER: Check step: 0ms
17.02 09:39:17 TIMER: Check round...
17.02 09:39:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:39' OR rounddate = '2017-17-02 12:39' AND status <> 'finished'
17.02 09:39:17 DB: SELECT * FROM battle WHERE endtime >= '1487342.35795119' AND avaliable = false AND finished <> true
17.02 09:39:17 TIMER: Check round: 1ms
17.02 09:39:17 TIMER: Check tournaments...
17.02 09:39:17 DB: SELECT * FROM tournament
17.02 09:39:17 TIMER: Check tournaments: 0ms
17.02 09:39:22 TIMER: Check step...
17.02 09:39:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:22 TIMER: Check step: 0ms
17.02 09:39:27 TIMER: Check step...
17.02 09:39:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:27 TIMER: Check step: 0ms
17.02 09:39:32 TIMER: Check step...
17.02 09:39:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:32 TIMER: Check step: 0ms
17.02 09:39:37 TIMER: Check step...
17.02 09:39:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:37 TIMER: Check step: 0ms
17.02 09:39:37 TIMER: Check tournaments...
17.02 09:39:37 DB: SELECT * FROM tournament
17.02 09:39:37 TIMER: Check tournaments: 0ms
17.02 09:39:42 TIMER: Check step...
17.02 09:39:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:42 TIMER: Check step: 0ms
17.02 09:39:47 TIMER: Check step...
17.02 09:39:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:47 TIMER: Check step: 0ms
17.02 09:39:52 TIMER: Check step...
17.02 09:39:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:52 TIMER: Check step: 1ms
17.02 09:39:57 TIMER: Check step...
17.02 09:39:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:39:57 TIMER: Check step: 0ms
17.02 09:39:57 TIMER: Check tournaments...
17.02 09:39:57 DB: SELECT * FROM tournament
17.02 09:39:57 TIMER: Check tournaments: 0ms
17.02 09:40:02 TIMER: Check step...
17.02 09:40:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:02 TIMER: Check step: 0ms
17.02 09:40:07 TIMER: Check step...
17.02 09:40:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:07 TIMER: Check step: 0ms
17.02 09:40:12 TIMER: Check step...
17.02 09:40:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:12 TIMER: Check step: 0ms
17.02 09:40:17 TIMER: Clans cache...
17.02 09:40:17 TIMER: Clans cache: 0ms
17.02 09:40:17 TIMER: Check step...
17.02 09:40:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:17 TIMER: Check step: 0ms
17.02 09:40:17 TIMER: Check round...
17.02 09:40:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:40' OR rounddate = '2017-17-02 12:40' AND status <> 'finished'
17.02 09:40:17 DB: SELECT * FROM battle WHERE endtime >= '1487342.41797485' AND avaliable = false AND finished <> true
17.02 09:40:17 TIMER: Check round: 1ms
17.02 09:40:17 TIMER: Check tournaments...
17.02 09:40:17 DB: SELECT * FROM tournament
17.02 09:40:17 TIMER: Check tournaments: 0ms
17.02 09:40:22 TIMER: Check step...
17.02 09:40:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:22 TIMER: Check step: 0ms
17.02 09:40:27 TIMER: Check step...
17.02 09:40:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:27 TIMER: Check step: 0ms
17.02 09:40:32 TIMER: Check step...
17.02 09:40:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:32 TIMER: Check step: 0ms
17.02 09:40:37 TIMER: Check step...
17.02 09:40:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:37 TIMER: Check step: 0ms
17.02 09:40:37 TIMER: Check tournaments...
17.02 09:40:37 DB: SELECT * FROM tournament
17.02 09:40:37 TIMER: Check tournaments: 0ms
17.02 09:40:42 TIMER: Check step...
17.02 09:40:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:42 TIMER: Check step: 0ms
17.02 09:40:47 TIMER: Check step...
17.02 09:40:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:47 TIMER: Check step: 0ms
17.02 09:40:52 TIMER: Check step...
17.02 09:40:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:52 TIMER: Check step: 0ms
17.02 09:40:57 TIMER: Check step...
17.02 09:40:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:40:57 TIMER: Check step: 0ms
17.02 09:40:57 TIMER: Check tournaments...
17.02 09:40:57 DB: SELECT * FROM tournament
17.02 09:40:57 TIMER: Check tournaments: 0ms
17.02 09:41:02 TIMER: Check step...
17.02 09:41:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:02 TIMER: Check step: 1ms
17.02 09:41:07 TIMER: Check step...
17.02 09:41:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:07 TIMER: Check step: 0ms
17.02 09:41:12 TIMER: Check step...
17.02 09:41:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:12 TIMER: Check step: 0ms
17.02 09:41:17 TIMER: Clans cache...
17.02 09:41:17 TIMER: Clans cache: 0ms
17.02 09:41:17 TIMER: Check step...
17.02 09:41:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:17 TIMER: Check step: 0ms
17.02 09:41:17 TIMER: Check round...
17.02 09:41:17 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:41' OR rounddate = '2017-17-02 12:41' AND status <> 'finished'
17.02 09:41:17 DB: SELECT * FROM battle WHERE endtime >= '1487342.47799348' AND avaliable = false AND finished <> true
17.02 09:41:17 TIMER: Check round: 1ms
17.02 09:41:17 TIMER: Check tournaments...
17.02 09:41:17 DB: SELECT * FROM tournament
17.02 09:41:17 TIMER: Check tournaments: 0ms
17.02 09:41:22 TIMER: Check step...
17.02 09:41:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:22 TIMER: Check step: 1ms
17.02 09:41:27 TIMER: Check step...
17.02 09:41:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:27 TIMER: Check step: 1ms
17.02 09:41:29 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid2' AND Password = E'uid2', _type => core/server.query }
17.02 09:41:29 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid2' AND Password = E'uid2'
17.02 09:41:29 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid2, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
17.02 09:41:29 TIME: core/server.query : 0.8 ms
17.02 09:41:29 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
17.02 09:41:29 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 09:41:29 TIME: core/user.isOnlineID : 0.05 ms
17.02 09:41:29 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
17.02 09:41:29 STATS: cache [user], get [90 calls, 62 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:41:29 STATS: cache [user], segments [274 calls, 163 hits, 61 misses]
17.02 09:41:29 STATS: cache [user], database [3312 calls, 28 reads, 56 writes]
17.02 09:41:29 STATS: cache [user], lock [63 calls, 63 attempts, 21 failures]
17.02 09:41:29 READDB: SELECT * FROM Users WHERE ID = 2
17.02 09:41:29 STATS: cache manager [1], get [71 calls, total 0.04 sec spent, avg 0.6 ms]
17.02 09:41:29 STATS: cache manager [1], update [104 calls, total 0.01 sec spent, avg 0.08 ms]
17.02 09:41:29 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid2, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid2, isbanned => false, regdate => 2017-02-10 11:27:11.101608-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487338121, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 2 } }
17.02 09:41:29 TIME: core/cache.get : 1.15 ms
17.02 09:41:29 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
17.02 09:41:29 STATS: cache [questdata], get [29 calls, 1 cache hits, 28 cache misses, 0 same version, 0 not found]
17.02 09:41:29 STATS: cache [questdata], segments [124 calls, 61 hits, 62 misses]
17.02 09:41:29 STATS: cache [questdata], database [3312 calls, 28 reads, 28 writes]
17.02 09:41:29 STATS: cache [questdata], lock [30 calls, 30 attempts, 0 failures]
17.02 09:41:29 READDB: SELECT * FROM UserQuests WHERE ID = 2
17.02 09:41:29 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
17.02 09:41:29 TIME: core/cache.get : 0.64 ms
17.02 09:41:29 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 188.162.198.202 }
17.02 09:41:29 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 09:41:29 TIME: core/user.loginPost : 0.06 ms
17.02 09:41:31 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 2, _type => vdl/cache.user.getData, money => 0 }
17.02 09:41:31 DB: SELECT params FROM users WHERE id=2
17.02 09:41:31 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => , year => null, email => null }, errorCode => ok, _type => vdl/cache.user.getData, money => 0 }
17.02 09:41:31 TIME: vdl/cache.user.getData : 0.92 ms
17.02 09:41:32 TIMER: Check step...
17.02 09:41:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:32 TIMER: Check step: 0ms
17.02 09:41:35 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
17.02 09:41:35 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
17.02 09:41:35 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 09:41:35 TIME: core/server.query : 0.63 ms
17.02 09:41:35 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 09:41:35 STATS: cache [battle], get [254 calls, 195 cache hits, 58 cache misses, 0 same version, 21 not found]
17.02 09:41:35 STATS: cache [battle], segments [422 calls, 363 hits, 58 misses]
17.02 09:41:35 STATS: cache [battle], database [3319 calls, 58 reads, 137 writes]
17.02 09:41:35 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 09:41:35 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 09:41:35 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 09:41:35 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 09:41:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 09:41:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 2, _type => core/cache.update }
17.02 09:41:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:41:35 TIME: core/cache.update : 0.05 ms
17.02 09:41:35 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
17.02 09:41:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 09:41:35 TIME: core/cache.update : 0.03 ms
17.02 09:41:35 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
17.02 09:41:35 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 09:41:35 TIME: core/user.logoutPost : 0.03 ms
17.02 09:41:36 WRITEDB: UPDATE Users SET name = E'uid2', money = E'0', deleted = E'false', year = E'', email = E'mail', networktype = E'  ', password = E'uid2', isbanned = E'false', regdate = E'2017-02-10 11:27:11.101608-05', city = E'', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487338121,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 2
17.02 09:41:36 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
17.02 09:41:38 TIMER: Check step...
17.02 09:41:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:38 TIMER: Check step: 1ms
17.02 09:41:38 TIMER: Check tournaments...
17.02 09:41:38 DB: SELECT * FROM tournament
17.02 09:41:38 TIMER: Check tournaments: 0ms
17.02 09:41:43 TIMER: Check step...
17.02 09:41:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:43 TIMER: Check step: 0ms
17.02 09:41:46 BLOCKREMOVE: user 2 removed
17.02 09:41:46 BLOCKREMOVE: questdata 2 removed
17.02 09:41:48 TIMER: Check step...
17.02 09:41:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:48 TIMER: Check step: 0ms
17.02 09:41:53 TIMER: Check step...
17.02 09:41:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:53 TIMER: Check step: 0ms
17.02 09:41:58 TIMER: Check step...
17.02 09:41:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:41:58 TIMER: Check step: 0ms
17.02 09:41:58 TIMER: Check tournaments...
17.02 09:41:58 DB: SELECT * FROM tournament
17.02 09:41:58 TIMER: Check tournaments: 0ms
17.02 09:42:03 TIMER: Check step...
17.02 09:42:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:03 TIMER: Check step: 0ms
17.02 09:42:08 TIMER: Check step...
17.02 09:42:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:08 TIMER: Check step: 1ms
17.02 09:42:13 TIMER: Check step...
17.02 09:42:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:13 TIMER: Check step: 0ms
17.02 09:42:18 TIMER: Clans cache...
17.02 09:42:18 TIMER: Clans cache: 0ms
17.02 09:42:18 TIMER: Check step...
17.02 09:42:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:18 TIMER: Check step: 0ms
17.02 09:42:18 TIMER: Check round...
17.02 09:42:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:42' OR rounddate = '2017-17-02 12:42' AND status <> 'finished'
17.02 09:42:18 DB: SELECT * FROM battle WHERE endtime >= '1487342.5380203' AND avaliable = false AND finished <> true
17.02 09:42:18 TIMER: Check round: 1ms
17.02 09:42:18 TIMER: Check tournaments...
17.02 09:42:18 DB: SELECT * FROM tournament
17.02 09:42:18 TIMER: Check tournaments: 0ms
17.02 09:42:23 TIMER: Check step...
17.02 09:42:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:23 TIMER: Check step: 0ms
17.02 09:42:28 TIMER: Check step...
17.02 09:42:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:28 TIMER: Check step: 0ms
17.02 09:42:33 TIMER: Check step...
17.02 09:42:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:33 TIMER: Check step: 0ms
17.02 09:42:38 TIMER: Check step...
17.02 09:42:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:38 TIMER: Check step: 0ms
17.02 09:42:38 TIMER: Check tournaments...
17.02 09:42:38 DB: SELECT * FROM tournament
17.02 09:42:38 TIMER: Check tournaments: 0ms
17.02 09:42:43 TIMER: Check step...
17.02 09:42:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:43 TIMER: Check step: 0ms
17.02 09:42:48 TIMER: Check step...
17.02 09:42:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:48 TIMER: Check step: 0ms
17.02 09:42:53 TIMER: Check step...
17.02 09:42:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:53 TIMER: Check step: 0ms
17.02 09:42:58 TIMER: Check step...
17.02 09:42:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:42:58 TIMER: Check step: 0ms
17.02 09:42:58 TIMER: Check tournaments...
17.02 09:42:58 DB: SELECT * FROM tournament
17.02 09:42:58 TIMER: Check tournaments: 0ms
17.02 09:43:03 TIMER: Check step...
17.02 09:43:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:03 TIMER: Check step: 0ms
17.02 09:43:08 TIMER: Check step...
17.02 09:43:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:08 TIMER: Check step: 0ms
17.02 09:43:13 TIMER: Check step...
17.02 09:43:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:13 TIMER: Check step: 0ms
17.02 09:43:18 TIMER: Clans cache...
17.02 09:43:18 TIMER: Clans cache: 0ms
17.02 09:43:18 TIMER: Check step...
17.02 09:43:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:18 TIMER: Check step: 1ms
17.02 09:43:18 TIMER: Check round...
17.02 09:43:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:43' OR rounddate = '2017-17-02 12:43' AND status <> 'finished'
17.02 09:43:18 DB: SELECT * FROM battle WHERE endtime >= '1487342.59804212' AND avaliable = false AND finished <> true
17.02 09:43:18 TIMER: Check round: 1ms
17.02 09:43:18 TIMER: Check tournaments...
17.02 09:43:18 DB: SELECT * FROM tournament
17.02 09:43:18 TIMER: Check tournaments: 0ms
17.02 09:43:23 TIMER: Check step...
17.02 09:43:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:23 TIMER: Check step: 0ms
17.02 09:43:28 TIMER: Check step...
17.02 09:43:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:28 TIMER: Check step: 0ms
17.02 09:43:33 TIMER: Check step...
17.02 09:43:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:33 TIMER: Check step: 0ms
17.02 09:43:38 TIMER: Check step...
17.02 09:43:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:38 TIMER: Check step: 0ms
17.02 09:43:38 TIMER: Check tournaments...
17.02 09:43:38 DB: SELECT * FROM tournament
17.02 09:43:38 TIMER: Check tournaments: 0ms
17.02 09:43:43 TIMER: Check step...
17.02 09:43:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:43 TIMER: Check step: 0ms
17.02 09:43:48 TIMER: Check step...
17.02 09:43:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:48 TIMER: Check step: 0ms
17.02 09:43:53 TIMER: Check step...
17.02 09:43:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:53 TIMER: Check step: 0ms
17.02 09:43:58 TIMER: Check step...
17.02 09:43:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:43:58 TIMER: Check step: 1ms
17.02 09:43:58 TIMER: Check tournaments...
17.02 09:43:58 DB: SELECT * FROM tournament
17.02 09:43:58 TIMER: Check tournaments: 0ms
17.02 09:44:03 TIMER: Check step...
17.02 09:44:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:03 TIMER: Check step: 0ms
17.02 09:44:08 TIMER: Check step...
17.02 09:44:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:08 TIMER: Check step: 0ms
17.02 09:44:13 TIMER: Check step...
17.02 09:44:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:13 TIMER: Check step: 0ms
17.02 09:44:18 TIMER: Clans cache...
17.02 09:44:18 TIMER: Clans cache: 0ms
17.02 09:44:18 TIMER: Check step...
17.02 09:44:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:18 TIMER: Check step: 0ms
17.02 09:44:18 TIMER: Check round...
17.02 09:44:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:44' OR rounddate = '2017-17-02 12:44' AND status <> 'finished'
17.02 09:44:18 DB: SELECT * FROM battle WHERE endtime >= '1487342.65806246' AND avaliable = false AND finished <> true
17.02 09:44:18 TIMER: Check round: 0ms
17.02 09:44:18 TIMER: Check tournaments...
17.02 09:44:18 DB: SELECT * FROM tournament
17.02 09:44:18 TIMER: Check tournaments: 0ms
17.02 09:44:23 TIMER: Check step...
17.02 09:44:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:23 TIMER: Check step: 0ms
17.02 09:44:28 TIMER: Check step...
17.02 09:44:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:28 TIMER: Check step: 0ms
17.02 09:44:33 TIMER: Check step...
17.02 09:44:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:33 TIMER: Check step: 0ms
17.02 09:44:38 TIMER: Check step...
17.02 09:44:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:38 TIMER: Check step: 0ms
17.02 09:44:38 TIMER: Check tournaments...
17.02 09:44:38 DB: SELECT * FROM tournament
17.02 09:44:38 TIMER: Check tournaments: 0ms
17.02 09:44:43 TIMER: Check step...
17.02 09:44:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:43 TIMER: Check step: 0ms
17.02 09:44:48 TIMER: Check step...
17.02 09:44:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:48 TIMER: Check step: 0ms
17.02 09:44:53 TIMER: Check step...
17.02 09:44:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:53 TIMER: Check step: 0ms
17.02 09:44:58 TIMER: Check step...
17.02 09:44:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:44:58 TIMER: Check step: 0ms
17.02 09:44:58 TIMER: Check tournaments...
17.02 09:44:58 DB: SELECT * FROM tournament
17.02 09:44:58 TIMER: Check tournaments: 0ms
17.02 09:45:03 TIMER: Check step...
17.02 09:45:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:03 TIMER: Check step: 1ms
17.02 09:45:08 TIMER: Check step...
17.02 09:45:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:08 TIMER: Check step: 0ms
17.02 09:45:13 TIMER: Check step...
17.02 09:45:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:13 TIMER: Check step: 0ms
17.02 09:45:18 TIMER: Clans cache...
17.02 09:45:18 TIMER: Clans cache: 0ms
17.02 09:45:18 TIMER: Check step...
17.02 09:45:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:18 TIMER: Check step: 0ms
17.02 09:45:18 TIMER: Check round...
17.02 09:45:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:45' OR rounddate = '2017-17-02 12:45' AND status <> 'finished'
17.02 09:45:18 DB: SELECT * FROM battle WHERE endtime >= '1487342.71808416' AND avaliable = false AND finished <> true
17.02 09:45:18 TIMER: Check round: 1ms
17.02 09:45:18 TIMER: Check tournaments...
17.02 09:45:18 DB: SELECT * FROM tournament
17.02 09:45:18 TIMER: Check tournaments: 0ms
17.02 09:45:23 TIMER: Check step...
17.02 09:45:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:23 TIMER: Check step: 1ms
17.02 09:45:28 TIMER: Check step...
17.02 09:45:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:28 TIMER: Check step: 0ms
17.02 09:45:33 TIMER: Check step...
17.02 09:45:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:33 TIMER: Check step: 0ms
17.02 09:45:38 TIMER: Check step...
17.02 09:45:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:38 TIMER: Check step: 0ms
17.02 09:45:38 TIMER: Check tournaments...
17.02 09:45:38 DB: SELECT * FROM tournament
17.02 09:45:38 TIMER: Check tournaments: 0ms
17.02 09:45:43 TIMER: Check step...
17.02 09:45:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:43 TIMER: Check step: 0ms
17.02 09:45:48 TIMER: Check step...
17.02 09:45:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:48 TIMER: Check step: 0ms
17.02 09:45:53 TIMER: Check step...
17.02 09:45:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:53 TIMER: Check step: 1ms
17.02 09:45:58 TIMER: Check step...
17.02 09:45:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:45:58 TIMER: Check step: 0ms
17.02 09:45:58 TIMER: Check tournaments...
17.02 09:45:58 DB: SELECT * FROM tournament
17.02 09:45:58 TIMER: Check tournaments: 0ms
17.02 09:46:03 TIMER: Check step...
17.02 09:46:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:03 TIMER: Check step: 0ms
17.02 09:46:08 TIMER: Check step...
17.02 09:46:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:08 TIMER: Check step: 3ms
17.02 09:46:13 TIMER: Check step...
17.02 09:46:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:13 TIMER: Check step: 0ms
17.02 09:46:18 TIMER: Clans cache...
17.02 09:46:18 TIMER: Clans cache: 0ms
17.02 09:46:18 TIMER: Check step...
17.02 09:46:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:18 TIMER: Check step: 0ms
17.02 09:46:18 TIMER: Check round...
17.02 09:46:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:46' OR rounddate = '2017-17-02 12:46' AND status <> 'finished'
17.02 09:46:18 DB: SELECT * FROM battle WHERE endtime >= '1487342.77810963' AND avaliable = false AND finished <> true
17.02 09:46:18 TIMER: Check round: 1ms
17.02 09:46:18 TIMER: Check tournaments...
17.02 09:46:18 DB: SELECT * FROM tournament
17.02 09:46:18 TIMER: Check tournaments: 0ms
17.02 09:46:23 TIMER: Check step...
17.02 09:46:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:23 TIMER: Check step: 0ms
17.02 09:46:28 TIMER: Check step...
17.02 09:46:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:28 TIMER: Check step: 0ms
17.02 09:46:33 TIMER: Check step...
17.02 09:46:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:33 TIMER: Check step: 0ms
17.02 09:46:38 TIMER: Check step...
17.02 09:46:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:38 TIMER: Check step: 0ms
17.02 09:46:38 TIMER: Check tournaments...
17.02 09:46:38 DB: SELECT * FROM tournament
17.02 09:46:38 TIMER: Check tournaments: 0ms
17.02 09:46:43 TIMER: Check step...
17.02 09:46:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:43 TIMER: Check step: 0ms
17.02 09:46:48 TIMER: Check step...
17.02 09:46:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:48 TIMER: Check step: 0ms
17.02 09:46:53 TIMER: Check step...
17.02 09:46:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:53 TIMER: Check step: 0ms
17.02 09:46:58 TIMER: Check step...
17.02 09:46:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:46:58 TIMER: Check step: 0ms
17.02 09:46:58 TIMER: Check tournaments...
17.02 09:46:58 DB: SELECT * FROM tournament
17.02 09:46:58 TIMER: Check tournaments: 0ms
17.02 09:47:03 TIMER: Check step...
17.02 09:47:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:03 TIMER: Check step: 0ms
17.02 09:47:08 TIMER: Check step...
17.02 09:47:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:08 TIMER: Check step: 0ms
17.02 09:47:13 TIMER: Check step...
17.02 09:47:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:13 TIMER: Check step: 0ms
17.02 09:47:18 TIMER: Clans cache...
17.02 09:47:18 TIMER: Clans cache: 0ms
17.02 09:47:18 TIMER: Check step...
17.02 09:47:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:18 TIMER: Check step: 0ms
17.02 09:47:18 TIMER: Check round...
17.02 09:47:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:47' OR rounddate = '2017-17-02 12:47' AND status <> 'finished'
17.02 09:47:18 DB: SELECT * FROM battle WHERE endtime >= '1487342.83812863' AND avaliable = false AND finished <> true
17.02 09:47:18 TIMER: Check round: 1ms
17.02 09:47:18 TIMER: Check tournaments...
17.02 09:47:18 DB: SELECT * FROM tournament
17.02 09:47:18 TIMER: Check tournaments: 0ms
17.02 09:47:23 TIMER: Check step...
17.02 09:47:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:23 TIMER: Check step: 0ms
17.02 09:47:28 TIMER: Check step...
17.02 09:47:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:28 TIMER: Check step: 0ms
17.02 09:47:33 TIMER: Check step...
17.02 09:47:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:33 TIMER: Check step: 0ms
17.02 09:47:38 TIMER: Check step...
17.02 09:47:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:38 TIMER: Check step: 0ms
17.02 09:47:38 TIMER: Check tournaments...
17.02 09:47:38 DB: SELECT * FROM tournament
17.02 09:47:38 TIMER: Check tournaments: 0ms
17.02 09:47:43 TIMER: Check step...
17.02 09:47:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:43 TIMER: Check step: 0ms
17.02 09:47:48 TIMER: Check step...
17.02 09:47:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:48 TIMER: Check step: 0ms
17.02 09:47:53 TIMER: Check step...
17.02 09:47:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:53 TIMER: Check step: 0ms
17.02 09:47:58 TIMER: Check step...
17.02 09:47:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:47:58 TIMER: Check step: 0ms
17.02 09:47:58 TIMER: Check tournaments...
17.02 09:47:58 DB: SELECT * FROM tournament
17.02 09:47:58 TIMER: Check tournaments: 0ms
17.02 09:48:03 TIMER: Check step...
17.02 09:48:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:03 TIMER: Check step: 0ms
17.02 09:48:08 TIMER: Check step...
17.02 09:48:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:08 TIMER: Check step: 0ms
17.02 09:48:13 TIMER: Check step...
17.02 09:48:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:13 TIMER: Check step: 0ms
17.02 09:48:18 TIMER: Clans cache...
17.02 09:48:18 TIMER: Clans cache: 0ms
17.02 09:48:18 TIMER: Check step...
17.02 09:48:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:18 TIMER: Check step: 0ms
17.02 09:48:18 TIMER: Check round...
17.02 09:48:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:48' OR rounddate = '2017-17-02 12:48' AND status <> 'finished'
17.02 09:48:18 DB: SELECT * FROM battle WHERE endtime >= '1487342.89814707' AND avaliable = false AND finished <> true
17.02 09:48:18 TIMER: Check round: 0ms
17.02 09:48:18 TIMER: Check tournaments...
17.02 09:48:18 DB: SELECT * FROM tournament
17.02 09:48:18 TIMER: Check tournaments: 0ms
17.02 09:48:23 TIMER: Check step...
17.02 09:48:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:23 TIMER: Check step: 1ms
17.02 09:48:28 TIMER: Check step...
17.02 09:48:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:28 TIMER: Check step: 0ms
17.02 09:48:33 TIMER: Check step...
17.02 09:48:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:33 TIMER: Check step: 0ms
17.02 09:48:38 TIMER: Check step...
17.02 09:48:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:38 TIMER: Check step: 0ms
17.02 09:48:38 TIMER: Check tournaments...
17.02 09:48:38 DB: SELECT * FROM tournament
17.02 09:48:38 TIMER: Check tournaments: 0ms
17.02 09:48:43 TIMER: Check step...
17.02 09:48:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:43 TIMER: Check step: 0ms
17.02 09:48:48 TIMER: Check step...
17.02 09:48:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:48 TIMER: Check step: 0ms
17.02 09:48:53 TIMER: Check step...
17.02 09:48:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:53 TIMER: Check step: 0ms
17.02 09:48:58 TIMER: Check step...
17.02 09:48:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:48:58 TIMER: Check step: 0ms
17.02 09:48:58 TIMER: Check tournaments...
17.02 09:48:58 DB: SELECT * FROM tournament
17.02 09:48:58 TIMER: Check tournaments: 0ms
17.02 09:49:03 TIMER: Check step...
17.02 09:49:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:03 TIMER: Check step: 0ms
17.02 09:49:08 TIMER: Check step...
17.02 09:49:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:08 TIMER: Check step: 1ms
17.02 09:49:13 TIMER: Check step...
17.02 09:49:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:13 TIMER: Check step: 0ms
17.02 09:49:18 TIMER: Clans cache...
17.02 09:49:18 TIMER: Clans cache: 0ms
17.02 09:49:18 TIMER: Check step...
17.02 09:49:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:18 TIMER: Check step: 0ms
17.02 09:49:18 TIMER: Check round...
17.02 09:49:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:49' OR rounddate = '2017-17-02 12:49' AND status <> 'finished'
17.02 09:49:18 DB: SELECT * FROM battle WHERE endtime >= '1487342.95816665' AND avaliable = false AND finished <> true
17.02 09:49:18 TIMER: Check round: 1ms
17.02 09:49:18 TIMER: Check tournaments...
17.02 09:49:18 DB: SELECT * FROM tournament
17.02 09:49:18 TIMER: Check tournaments: 0ms
17.02 09:49:23 TIMER: Check step...
17.02 09:49:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:23 TIMER: Check step: 0ms
17.02 09:49:28 TIMER: Check step...
17.02 09:49:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:28 TIMER: Check step: 0ms
17.02 09:49:33 TIMER: Check step...
17.02 09:49:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:33 TIMER: Check step: 0ms
17.02 09:49:38 TIMER: Check step...
17.02 09:49:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:38 TIMER: Check step: 0ms
17.02 09:49:38 TIMER: Check tournaments...
17.02 09:49:38 DB: SELECT * FROM tournament
17.02 09:49:38 TIMER: Check tournaments: 0ms
17.02 09:49:43 TIMER: Check step...
17.02 09:49:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:43 TIMER: Check step: 0ms
17.02 09:49:48 TIMER: Check step...
17.02 09:49:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:48 TIMER: Check step: 0ms
17.02 09:49:53 TIMER: Check step...
17.02 09:49:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:53 TIMER: Check step: 0ms
17.02 09:49:58 TIMER: Check step...
17.02 09:49:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:49:58 TIMER: Check step: 0ms
17.02 09:49:58 TIMER: Check tournaments...
17.02 09:49:58 DB: SELECT * FROM tournament
17.02 09:49:58 TIMER: Check tournaments: 0ms
17.02 09:50:03 TIMER: Check step...
17.02 09:50:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:03 TIMER: Check step: 0ms
17.02 09:50:08 TIMER: Check step...
17.02 09:50:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:08 TIMER: Check step: 1ms
17.02 09:50:13 TIMER: Check step...
17.02 09:50:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:13 TIMER: Check step: 0ms
17.02 09:50:18 TIMER: Clans cache...
17.02 09:50:18 TIMER: Clans cache: 0ms
17.02 09:50:18 TIMER: Check step...
17.02 09:50:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:18 TIMER: Check step: 0ms
17.02 09:50:18 TIMER: Check round...
17.02 09:50:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:50' OR rounddate = '2017-17-02 12:50' AND status <> 'finished'
17.02 09:50:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.01818961' AND avaliable = false AND finished <> true
17.02 09:50:18 TIMER: Check round: 1ms
17.02 09:50:18 TIMER: Check tournaments...
17.02 09:50:18 DB: SELECT * FROM tournament
17.02 09:50:18 TIMER: Check tournaments: 0ms
17.02 09:50:23 TIMER: Check step...
17.02 09:50:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:23 TIMER: Check step: 0ms
17.02 09:50:28 TIMER: Check step...
17.02 09:50:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:28 TIMER: Check step: 0ms
17.02 09:50:33 TIMER: Check step...
17.02 09:50:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:33 TIMER: Check step: 1ms
17.02 09:50:38 TIMER: Check step...
17.02 09:50:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:38 TIMER: Check step: 0ms
17.02 09:50:38 TIMER: Check tournaments...
17.02 09:50:38 DB: SELECT * FROM tournament
17.02 09:50:38 TIMER: Check tournaments: 0ms
17.02 09:50:43 TIMER: Check step...
17.02 09:50:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:43 TIMER: Check step: 0ms
17.02 09:50:48 TIMER: Check step...
17.02 09:50:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:48 TIMER: Check step: 0ms
17.02 09:50:53 TIMER: Check step...
17.02 09:50:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:53 TIMER: Check step: 0ms
17.02 09:50:58 TIMER: Check step...
17.02 09:50:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:50:58 TIMER: Check step: 0ms
17.02 09:50:58 TIMER: Check tournaments...
17.02 09:50:58 DB: SELECT * FROM tournament
17.02 09:50:58 TIMER: Check tournaments: 0ms
17.02 09:51:03 TIMER: Check step...
17.02 09:51:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:03 TIMER: Check step: 0ms
17.02 09:51:08 TIMER: Check step...
17.02 09:51:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:08 TIMER: Check step: 0ms
17.02 09:51:13 TIMER: Check step...
17.02 09:51:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:13 TIMER: Check step: 0ms
17.02 09:51:18 TIMER: Clans cache...
17.02 09:51:18 TIMER: Clans cache: 0ms
17.02 09:51:18 TIMER: Check step...
17.02 09:51:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:18 TIMER: Check step: 0ms
17.02 09:51:18 TIMER: Check round...
17.02 09:51:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:51' OR rounddate = '2017-17-02 12:51' AND status <> 'finished'
17.02 09:51:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.07820864' AND avaliable = false AND finished <> true
17.02 09:51:18 TIMER: Check round: 1ms
17.02 09:51:18 TIMER: Check tournaments...
17.02 09:51:18 DB: SELECT * FROM tournament
17.02 09:51:18 TIMER: Check tournaments: 0ms
17.02 09:51:23 TIMER: Check step...
17.02 09:51:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:23 TIMER: Check step: 0ms
17.02 09:51:28 TIMER: Check step...
17.02 09:51:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:28 TIMER: Check step: 0ms
17.02 09:51:33 TIMER: Check step...
17.02 09:51:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:33 TIMER: Check step: 1ms
17.02 09:51:38 TIMER: Check step...
17.02 09:51:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:38 TIMER: Check step: 0ms
17.02 09:51:38 TIMER: Check tournaments...
17.02 09:51:38 DB: SELECT * FROM tournament
17.02 09:51:38 TIMER: Check tournaments: 0ms
17.02 09:51:43 TIMER: Check step...
17.02 09:51:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:43 TIMER: Check step: 1ms
17.02 09:51:48 TIMER: Check step...
17.02 09:51:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:48 TIMER: Check step: 0ms
17.02 09:51:53 TIMER: Check step...
17.02 09:51:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:53 TIMER: Check step: 0ms
17.02 09:51:58 TIMER: Check step...
17.02 09:51:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:51:58 TIMER: Check step: 0ms
17.02 09:51:58 TIMER: Check tournaments...
17.02 09:51:58 DB: SELECT * FROM tournament
17.02 09:51:58 TIMER: Check tournaments: 0ms
17.02 09:52:03 TIMER: Check step...
17.02 09:52:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:03 TIMER: Check step: 0ms
17.02 09:52:08 TIMER: Check step...
17.02 09:52:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:08 TIMER: Check step: 0ms
17.02 09:52:13 TIMER: Check step...
17.02 09:52:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:13 TIMER: Check step: 0ms
17.02 09:52:18 TIMER: Clans cache...
17.02 09:52:18 TIMER: Clans cache: 0ms
17.02 09:52:18 TIMER: Check step...
17.02 09:52:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:18 TIMER: Check step: 0ms
17.02 09:52:18 TIMER: Check round...
17.02 09:52:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:52' OR rounddate = '2017-17-02 12:52' AND status <> 'finished'
17.02 09:52:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.1382592' AND avaliable = false AND finished <> true
17.02 09:52:18 TIMER: Check round: 0ms
17.02 09:52:18 TIMER: Check tournaments...
17.02 09:52:18 DB: SELECT * FROM tournament
17.02 09:52:18 TIMER: Check tournaments: 0ms
17.02 09:52:23 TIMER: Check step...
17.02 09:52:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:23 TIMER: Check step: 0ms
17.02 09:52:28 TIMER: Check step...
17.02 09:52:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:28 TIMER: Check step: 0ms
17.02 09:52:33 TIMER: Check step...
17.02 09:52:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:33 TIMER: Check step: 0ms
17.02 09:52:38 TIMER: Check step...
17.02 09:52:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:38 TIMER: Check step: 0ms
17.02 09:52:38 TIMER: Check tournaments...
17.02 09:52:38 DB: SELECT * FROM tournament
17.02 09:52:38 TIMER: Check tournaments: 0ms
17.02 09:52:43 TIMER: Check step...
17.02 09:52:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:43 TIMER: Check step: 0ms
17.02 09:52:48 TIMER: Check step...
17.02 09:52:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:48 TIMER: Check step: 0ms
17.02 09:52:53 TIMER: Check step...
17.02 09:52:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:53 TIMER: Check step: 0ms
17.02 09:52:58 TIMER: Check step...
17.02 09:52:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:52:58 TIMER: Check step: 0ms
17.02 09:52:58 TIMER: Check tournaments...
17.02 09:52:58 DB: SELECT * FROM tournament
17.02 09:52:58 TIMER: Check tournaments: 0ms
17.02 09:53:03 TIMER: Check step...
17.02 09:53:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:03 TIMER: Check step: 1ms
17.02 09:53:08 TIMER: Check step...
17.02 09:53:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:08 TIMER: Check step: 0ms
17.02 09:53:13 TIMER: Check step...
17.02 09:53:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:13 TIMER: Check step: 0ms
17.02 09:53:18 TIMER: Clans cache...
17.02 09:53:18 TIMER: Clans cache: 0ms
17.02 09:53:18 TIMER: Check step...
17.02 09:53:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:18 TIMER: Check step: 0ms
17.02 09:53:18 TIMER: Check round...
17.02 09:53:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:53' OR rounddate = '2017-17-02 12:53' AND status <> 'finished'
17.02 09:53:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.19827771' AND avaliable = false AND finished <> true
17.02 09:53:18 TIMER: Check round: 0ms
17.02 09:53:18 TIMER: Check tournaments...
17.02 09:53:18 DB: SELECT * FROM tournament
17.02 09:53:18 TIMER: Check tournaments: 0ms
17.02 09:53:23 TIMER: Check step...
17.02 09:53:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:23 TIMER: Check step: 0ms
17.02 09:53:28 TIMER: Check step...
17.02 09:53:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:28 TIMER: Check step: 0ms
17.02 09:53:33 TIMER: Check step...
17.02 09:53:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:33 TIMER: Check step: 0ms
17.02 09:53:38 TIMER: Check step...
17.02 09:53:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:38 TIMER: Check step: 0ms
17.02 09:53:38 TIMER: Check tournaments...
17.02 09:53:38 DB: SELECT * FROM tournament
17.02 09:53:38 TIMER: Check tournaments: 0ms
17.02 09:53:43 TIMER: Check step...
17.02 09:53:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:43 TIMER: Check step: 1ms
17.02 09:53:48 TIMER: Check step...
17.02 09:53:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:48 TIMER: Check step: 0ms
17.02 09:53:53 TIMER: Check step...
17.02 09:53:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:53 TIMER: Check step: 1ms
17.02 09:53:58 TIMER: Check step...
17.02 09:53:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:53:58 TIMER: Check step: 5ms
17.02 09:53:58 TIMER: Check tournaments...
17.02 09:53:58 DB: SELECT * FROM tournament
17.02 09:53:58 TIMER: Check tournaments: 0ms
17.02 09:54:03 TIMER: Check step...
17.02 09:54:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:03 TIMER: Check step: 0ms
17.02 09:54:08 TIMER: Check step...
17.02 09:54:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:08 TIMER: Check step: 0ms
17.02 09:54:13 TIMER: Check step...
17.02 09:54:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:13 TIMER: Check step: 0ms
17.02 09:54:18 TIMER: Clans cache...
17.02 09:54:18 TIMER: Clans cache: 0ms
17.02 09:54:18 TIMER: Check step...
17.02 09:54:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:18 TIMER: Check step: 0ms
17.02 09:54:18 TIMER: Check round...
17.02 09:54:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:54' OR rounddate = '2017-17-02 12:54' AND status <> 'finished'
17.02 09:54:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.25830733' AND avaliable = false AND finished <> true
17.02 09:54:18 TIMER: Check round: 1ms
17.02 09:54:18 TIMER: Check tournaments...
17.02 09:54:18 DB: SELECT * FROM tournament
17.02 09:54:18 TIMER: Check tournaments: 0ms
17.02 09:54:23 TIMER: Check step...
17.02 09:54:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:23 TIMER: Check step: 0ms
17.02 09:54:28 TIMER: Check step...
17.02 09:54:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:28 TIMER: Check step: 1ms
17.02 09:54:33 TIMER: Check step...
17.02 09:54:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:33 TIMER: Check step: 0ms
17.02 09:54:38 TIMER: Check step...
17.02 09:54:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:38 TIMER: Check step: 0ms
17.02 09:54:38 TIMER: Check tournaments...
17.02 09:54:38 DB: SELECT * FROM tournament
17.02 09:54:38 TIMER: Check tournaments: 0ms
17.02 09:54:43 TIMER: Check step...
17.02 09:54:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:43 TIMER: Check step: 0ms
17.02 09:54:48 TIMER: Check step...
17.02 09:54:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:48 TIMER: Check step: 0ms
17.02 09:54:53 TIMER: Check step...
17.02 09:54:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:53 TIMER: Check step: 0ms
17.02 09:54:58 TIMER: Check step...
17.02 09:54:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:54:58 TIMER: Check step: 1ms
17.02 09:54:58 TIMER: Check tournaments...
17.02 09:54:58 DB: SELECT * FROM tournament
17.02 09:54:58 TIMER: Check tournaments: 0ms
17.02 09:55:03 TIMER: Check step...
17.02 09:55:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:03 TIMER: Check step: 0ms
17.02 09:55:08 TIMER: Check step...
17.02 09:55:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:08 TIMER: Check step: 0ms
17.02 09:55:13 TIMER: Check step...
17.02 09:55:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:13 TIMER: Check step: 0ms
17.02 09:55:18 TIMER: Clans cache...
17.02 09:55:18 TIMER: Clans cache: 0ms
17.02 09:55:18 TIMER: Check step...
17.02 09:55:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:18 TIMER: Check step: 0ms
17.02 09:55:18 TIMER: Check round...
17.02 09:55:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:55' OR rounddate = '2017-17-02 12:55' AND status <> 'finished'
17.02 09:55:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.31832823' AND avaliable = false AND finished <> true
17.02 09:55:18 TIMER: Check round: 1ms
17.02 09:55:18 TIMER: Check tournaments...
17.02 09:55:18 DB: SELECT * FROM tournament
17.02 09:55:18 TIMER: Check tournaments: 0ms
17.02 09:55:23 TIMER: Check step...
17.02 09:55:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:23 TIMER: Check step: 0ms
17.02 09:55:28 TIMER: Check step...
17.02 09:55:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:28 TIMER: Check step: 0ms
17.02 09:55:33 TIMER: Check step...
17.02 09:55:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:33 TIMER: Check step: 0ms
17.02 09:55:38 TIMER: Check step...
17.02 09:55:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:38 TIMER: Check step: 0ms
17.02 09:55:38 TIMER: Check tournaments...
17.02 09:55:38 DB: SELECT * FROM tournament
17.02 09:55:38 TIMER: Check tournaments: 0ms
17.02 09:55:43 TIMER: Check step...
17.02 09:55:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:43 TIMER: Check step: 1ms
17.02 09:55:48 TIMER: Check step...
17.02 09:55:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:48 TIMER: Check step: 1ms
17.02 09:55:53 TIMER: Check step...
17.02 09:55:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:53 TIMER: Check step: 0ms
17.02 09:55:58 TIMER: Check step...
17.02 09:55:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:55:58 TIMER: Check step: 0ms
17.02 09:55:58 TIMER: Check tournaments...
17.02 09:55:58 DB: SELECT * FROM tournament
17.02 09:55:58 TIMER: Check tournaments: 0ms
17.02 09:56:03 TIMER: Check step...
17.02 09:56:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:03 TIMER: Check step: 0ms
17.02 09:56:08 TIMER: Check step...
17.02 09:56:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:08 TIMER: Check step: 1ms
17.02 09:56:13 TIMER: Check step...
17.02 09:56:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:13 TIMER: Check step: 0ms
17.02 09:56:18 TIMER: Clans cache...
17.02 09:56:18 TIMER: Clans cache: 0ms
17.02 09:56:18 TIMER: Check step...
17.02 09:56:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:18 TIMER: Check step: 0ms
17.02 09:56:18 TIMER: Check round...
17.02 09:56:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:56' OR rounddate = '2017-17-02 12:56' AND status <> 'finished'
17.02 09:56:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.37835085' AND avaliable = false AND finished <> true
17.02 09:56:18 TIMER: Check round: 0ms
17.02 09:56:18 TIMER: Check tournaments...
17.02 09:56:18 DB: SELECT * FROM tournament
17.02 09:56:18 TIMER: Check tournaments: 0ms
17.02 09:56:23 TIMER: Check step...
17.02 09:56:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:23 TIMER: Check step: 0ms
17.02 09:56:28 TIMER: Check step...
17.02 09:56:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:28 TIMER: Check step: 0ms
17.02 09:56:33 TIMER: Check step...
17.02 09:56:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:33 TIMER: Check step: 0ms
17.02 09:56:38 TIMER: Check step...
17.02 09:56:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:38 TIMER: Check step: 0ms
17.02 09:56:38 TIMER: Check tournaments...
17.02 09:56:38 DB: SELECT * FROM tournament
17.02 09:56:38 TIMER: Check tournaments: 0ms
17.02 09:56:43 TIMER: Check step...
17.02 09:56:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:43 TIMER: Check step: 0ms
17.02 09:56:48 TIMER: Check step...
17.02 09:56:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:48 TIMER: Check step: 0ms
17.02 09:56:53 TIMER: Check step...
17.02 09:56:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:53 TIMER: Check step: 1ms
17.02 09:56:58 TIMER: Check step...
17.02 09:56:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:56:58 TIMER: Check step: 0ms
17.02 09:56:58 TIMER: Check tournaments...
17.02 09:56:58 DB: SELECT * FROM tournament
17.02 09:56:58 TIMER: Check tournaments: 0ms
17.02 09:57:03 TIMER: Check step...
17.02 09:57:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:03 TIMER: Check step: 0ms
17.02 09:57:08 TIMER: Check step...
17.02 09:57:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:08 TIMER: Check step: 0ms
17.02 09:57:13 TIMER: Check step...
17.02 09:57:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:13 TIMER: Check step: 0ms
17.02 09:57:18 TIMER: Clans cache...
17.02 09:57:18 TIMER: Clans cache: 0ms
17.02 09:57:18 TIMER: Check step...
17.02 09:57:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:18 TIMER: Check step: 0ms
17.02 09:57:18 TIMER: Check round...
17.02 09:57:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:57' OR rounddate = '2017-17-02 12:57' AND status <> 'finished'
17.02 09:57:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.43837029' AND avaliable = false AND finished <> true
17.02 09:57:18 TIMER: Check round: 1ms
17.02 09:57:18 TIMER: Check tournaments...
17.02 09:57:18 DB: SELECT * FROM tournament
17.02 09:57:18 TIMER: Check tournaments: 0ms
17.02 09:57:23 TIMER: Check step...
17.02 09:57:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:23 TIMER: Check step: 0ms
17.02 09:57:28 TIMER: Check step...
17.02 09:57:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:28 TIMER: Check step: 0ms
17.02 09:57:33 TIMER: Check step...
17.02 09:57:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:33 TIMER: Check step: 0ms
17.02 09:57:38 TIMER: Check step...
17.02 09:57:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:38 TIMER: Check step: 0ms
17.02 09:57:38 TIMER: Check tournaments...
17.02 09:57:38 DB: SELECT * FROM tournament
17.02 09:57:38 TIMER: Check tournaments: 0ms
17.02 09:57:43 TIMER: Check step...
17.02 09:57:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:43 TIMER: Check step: 1ms
17.02 09:57:48 TIMER: Check step...
17.02 09:57:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:48 TIMER: Check step: 0ms
17.02 09:57:53 TIMER: Check step...
17.02 09:57:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:53 TIMER: Check step: 4ms
17.02 09:57:58 TIMER: Check step...
17.02 09:57:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:57:58 TIMER: Check step: 0ms
17.02 09:57:58 TIMER: Check tournaments...
17.02 09:57:58 DB: SELECT * FROM tournament
17.02 09:57:58 TIMER: Check tournaments: 0ms
17.02 09:58:03 TIMER: Check step...
17.02 09:58:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:03 TIMER: Check step: 0ms
17.02 09:58:08 TIMER: Check step...
17.02 09:58:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:08 TIMER: Check step: 0ms
17.02 09:58:13 TIMER: Check step...
17.02 09:58:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:13 TIMER: Check step: 0ms
17.02 09:58:18 TIMER: Clans cache...
17.02 09:58:18 TIMER: Clans cache: 0ms
17.02 09:58:18 TIMER: Check step...
17.02 09:58:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:18 TIMER: Check step: 0ms
17.02 09:58:18 TIMER: Check round...
17.02 09:58:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:58' OR rounddate = '2017-17-02 12:58' AND status <> 'finished'
17.02 09:58:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.49839375' AND avaliable = false AND finished <> true
17.02 09:58:18 TIMER: Check round: 0ms
17.02 09:58:18 TIMER: Check tournaments...
17.02 09:58:18 DB: SELECT * FROM tournament
17.02 09:58:18 TIMER: Check tournaments: 0ms
17.02 09:58:23 TIMER: Check step...
17.02 09:58:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:23 TIMER: Check step: 0ms
17.02 09:58:28 TIMER: Check step...
17.02 09:58:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:28 TIMER: Check step: 0ms
17.02 09:58:33 TIMER: Check step...
17.02 09:58:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:33 TIMER: Check step: 0ms
17.02 09:58:38 TIMER: Check step...
17.02 09:58:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:38 TIMER: Check step: 0ms
17.02 09:58:38 TIMER: Check tournaments...
17.02 09:58:38 DB: SELECT * FROM tournament
17.02 09:58:38 TIMER: Check tournaments: 0ms
17.02 09:58:43 TIMER: Check step...
17.02 09:58:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:43 TIMER: Check step: 0ms
17.02 09:58:48 TIMER: Check step...
17.02 09:58:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:48 TIMER: Check step: 0ms
17.02 09:58:53 TIMER: Check step...
17.02 09:58:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:53 TIMER: Check step: 0ms
17.02 09:58:58 TIMER: Check step...
17.02 09:58:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:58:58 TIMER: Check step: 0ms
17.02 09:58:58 TIMER: Check tournaments...
17.02 09:58:58 DB: SELECT * FROM tournament
17.02 09:58:58 TIMER: Check tournaments: 0ms
17.02 09:59:03 TIMER: Check step...
17.02 09:59:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:03 TIMER: Check step: 0ms
17.02 09:59:08 TIMER: Check step...
17.02 09:59:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:08 TIMER: Check step: 0ms
17.02 09:59:13 TIMER: Check step...
17.02 09:59:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:13 TIMER: Check step: 0ms
17.02 09:59:18 TIMER: Clans cache...
17.02 09:59:18 TIMER: Clans cache: 0ms
17.02 09:59:18 TIMER: Check step...
17.02 09:59:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:18 TIMER: Check step: 0ms
17.02 09:59:18 TIMER: Check round...
17.02 09:59:18 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 12:59' OR rounddate = '2017-17-02 12:59' AND status <> 'finished'
17.02 09:59:18 DB: SELECT * FROM battle WHERE endtime >= '1487343.55841301' AND avaliable = false AND finished <> true
17.02 09:59:18 TIMER: Check round: 0ms
17.02 09:59:18 TIMER: Check tournaments...
17.02 09:59:18 DB: SELECT * FROM tournament
17.02 09:59:18 TIMER: Check tournaments: 0ms
17.02 09:59:23 TIMER: Check step...
17.02 09:59:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:23 TIMER: Check step: 0ms
17.02 09:59:28 TIMER: Check step...
17.02 09:59:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:28 TIMER: Check step: 0ms
17.02 09:59:33 TIMER: Check step...
17.02 09:59:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:33 TIMER: Check step: 0ms
17.02 09:59:38 TIMER: Check step...
17.02 09:59:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:38 TIMER: Check step: 0ms
17.02 09:59:38 TIMER: Check tournaments...
17.02 09:59:38 DB: SELECT * FROM tournament
17.02 09:59:38 TIMER: Check tournaments: 0ms
17.02 09:59:43 TIMER: Check step...
17.02 09:59:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:43 TIMER: Check step: 0ms
17.02 09:59:48 TIMER: Check step...
17.02 09:59:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:48 TIMER: Check step: 0ms
17.02 09:59:53 TIMER: Check step...
17.02 09:59:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:53 TIMER: Check step: 0ms
17.02 09:59:58 TIMER: Check step...
17.02 09:59:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 09:59:58 TIMER: Check step: 0ms
17.02 09:59:58 TIMER: Check tournaments...
17.02 09:59:58 DB: SELECT * FROM tournament
17.02 09:59:58 TIMER: Check tournaments: 0ms
