26.10 14:00:07 BLOCKREMOVE: tournament 1 removed
26.10 14:18:38 TIMER: Starting timer...
26.10 14:18:38 TIMER: Timer running...
26.10 14:18:38 DB: SELECT * FROM GameVars
26.10 14:18:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:18:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:18:38 DB: SELECT * FROM Shops WHERE ID = 1
26.10 14:18:38 TEMP: load ./tmp/quest_daily_ids
26.10 14:18:38 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 14:18:38 TEMP: save ./tmp/quest_daily_ids
26.10 14:18:38 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 14:18:38 QUEUE: vdl.0 (thread) response server.login
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM LocalizationStrings
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 6.6 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM GameVars
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.55 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.84 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.53 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.46 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.97 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 14:18:38 TIME: core/quest.getDaily : 0.03 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM UserAttributeTypes
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.32 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM UserVariableTypes
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.28 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 14:18:38 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 1.06 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM ItemGroups
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.46 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM Bundles ORDER BY ID
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.42 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.49 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 14:18:38 TIME: core/shop.getList : 0.15 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM EffectAttributeTypes
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.53 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM Effects
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.49 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 14:18:38 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.81 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 14:18:38 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.75 ms
26.10 14:18:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 14:18:38 DB: SELECT * FROM Badges
26.10 14:18:38 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:18:38 TIME: core/server.query : 0.39 ms
26.10 14:18:38 TIMER: Clans cache...
26.10 14:18:38 TIMER: Clans cache: 0ms
26.10 14:18:38 TIMER: Check tournament...
26.10 14:18:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:19' OR rounddate = '2016-26-10 14:19' AND status <> 'finished'
26.10 14:18:38 TIMER: Check tournament: 1ms
26.10 14:20:35 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
26.10 14:20:35 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
26.10 14:20:35 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:20:35 TIME: core/server.query : 3.31 ms
26.10 14:20:35 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
26.10 14:20:35 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 14:20:35 TIME: core/user.isOnlineID : 0.11 ms
26.10 14:20:35 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
26.10 14:20:35 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:20:35 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
26.10 14:20:35 STATS: cache [user], database [118 calls, 0 reads, 0 writes]
26.10 14:20:35 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
26.10 14:20:35 READDB: SELECT * FROM Users WHERE ID = 94
26.10 14:20:35 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.48 ms]
26.10 14:20:35 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
26.10 14:20:35 QUEUE: vdl.0 (thread) response core/cache.get
26.10 14:20:35 TIME: core/cache.get : 3.69 ms
26.10 14:20:35 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
26.10 14:20:35 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:20:35 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
26.10 14:20:35 STATS: cache [questdata], database [118 calls, 0 reads, 0 writes]
26.10 14:20:35 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
26.10 14:20:35 READDB: SELECT * FROM UserQuests WHERE ID = 94
26.10 14:20:35 QUEUE: vdl.0 (thread) response core/cache.get
26.10 14:20:35 TIME: core/cache.get : 1.48 ms
26.10 14:20:35 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
26.10 14:20:35 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 14:20:35 TIME: core/user.loginPost : 0.06 ms
26.10 14:20:38 TIMER: Clans cache...
26.10 14:20:38 TIMER: Clans cache: 0ms
26.10 14:20:38 TIMER: Check tournament...
26.10 14:20:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:20' OR rounddate = '2016-26-10 14:20' AND status <> 'finished'
26.10 14:20:38 TIMER: Check tournament: 1ms
26.10 14:20:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
26.10 14:20:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:20:43 TIME: core/cache.update : 0.08 ms
26.10 14:20:44 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 14:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 14:21:28 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 14:21:28 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
26.10 14:21:28 TIME: core/server.query : 3.25 ms
26.10 14:21:28 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 14:21:28 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 14:21:28 TIME: core/user.isOnlineID : 0.11 ms
26.10 14:21:28 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 14:21:28 READDB: SELECT * FROM Users WHERE ID = 95
26.10 14:21:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 95 } }
26.10 14:21:28 TIME: core/cache.get : 2.76 ms
26.10 14:21:28 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 14:21:28 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 14:21:28 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
26.10 14:21:28 TIME: core/cache.get : 1.36 ms
26.10 14:21:28 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 14:21:28 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 14:21:28 TIME: core/user.loginPost : 0.14 ms
26.10 14:21:28 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 95 AND Date = 'today'::timestamp, _type => core/server.query }
26.10 14:21:28 DB: SELECT ID FROM TempUserLogins WHERE UserID = 95 AND Date = 'today'::timestamp
26.10 14:21:28 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 14:21:28 TIME: core/server.query : 2.39 ms
26.10 14:21:28 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (95, 'today'::timestamp)
26.10 14:21:38 TIMER: Clans cache...
26.10 14:21:38 TIMER: Clans cache: 0ms
26.10 14:21:38 TIMER: Check tournament...
26.10 14:21:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:21' OR rounddate = '2016-26-10 14:21' AND status <> 'finished'
26.10 14:21:38 TIMER: Check tournament: 1ms
26.10 14:21:38 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 300, lastLoadDate => 1027 } }}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 14:21:38 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 14:21:38 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
26.10 14:21:38 STATS: cache [user], database [181 calls, 2 reads, 1 writes]
26.10 14:21:38 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
26.10 14:21:38 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.12 ms]
26.10 14:21:38 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.2 ms]
26.10 14:21:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:21:38 TIME: core/cache.update : 0.57 ms
26.10 14:21:39 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 14:22:29 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:22:29 DB: SELECT * FROM tournament
26.10 14:22:29 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:22:29 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
26.10 14:22:29 STATS: cache [tournament], database [232 calls, 0 reads, 0 writes]
26.10 14:22:29 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 14:22:29 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 14:22:29 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-26-10 14:24, startdate => 2016-26-10 14:24 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:22:29 TIME: vdl/cache.tournament.getAvailableTournament : 3.39 ms
26.10 14:22:32 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.10 14:22:32 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.10 14:22:32 TIME: vdl/cache.tournament.addUsers : 0.23 ms
26.10 14:22:32 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:22:32 DB: SELECT * FROM tournament
26.10 14:22:32 DB: SELECT name FROM users WHERE id = 95
26.10 14:22:32 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-26-10 14:24, startdate => 2016-26-10 14:24 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:22:32 TIME: vdl/cache.tournament.getAvailableTournament : 2.22 ms
26.10 14:22:35 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 14:24', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95],"battleActive":[],"usersAll":[95]}}', rounddate = E'2016-26-10 14:24' WHERE ID = 1
26.10 14:22:36 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:22:36 DB: SELECT * FROM tournament
26.10 14:22:36 DB: SELECT name FROM users WHERE id = 95
26.10 14:22:36 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-26-10 14:24, startdate => 2016-26-10 14:24 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:22:36 TIME: vdl/cache.tournament.getAvailableTournament : 2.17 ms
26.10 14:22:38 TIMER: Clans cache...
26.10 14:22:38 TIMER: Clans cache: 0ms
26.10 14:22:38 TIMER: Check tournament...
26.10 14:22:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:22' OR rounddate = '2016-26-10 14:22' AND status <> 'finished'
26.10 14:22:38 TIMER: Check tournament: 1ms
26.10 14:22:39 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
26.10 14:22:39 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
26.10 14:22:39 TIME: vdl/cache.tournament.addUsers : 0.27 ms
26.10 14:22:40 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 14:24', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[],"usersAll":[95,94]}}', rounddate = E'2016-26-10 14:24' WHERE ID = 1
26.10 14:22:50 BLOCKREMOVE: tournament 1 removed
26.10 14:22:51 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:22:51 DB: SELECT * FROM tournament
26.10 14:22:51 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 14:22:51 DB: SELECT name FROM users WHERE id = 95
26.10 14:22:51 DB: SELECT name FROM users WHERE id = 94
26.10 14:22:51 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-26-10 14:24, startdate => 2016-26-10 14:24 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:22:51 TIME: vdl/cache.tournament.getAvailableTournament : 3.71 ms
26.10 14:23:02 BLOCKREMOVE: tournament 1 removed
26.10 14:23:34 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
26.10 14:23:34 STATS: cache [tournament], get [7 calls, 4 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 14:23:34 STATS: cache [tournament], segments [9 calls, 6 hits, 2 misses]
26.10 14:23:34 STATS: cache [tournament], database [296 calls, 2 reads, 2 writes]
26.10 14:23:34 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 14:23:34 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 14:23:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
26.10 14:23:34 TIME: vdl/cache.tournament.getStatus : 0.86 ms
26.10 14:23:34 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 14:23:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95,94] }
26.10 14:23:34 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.1 ms
26.10 14:23:34 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 95, player2 => 94 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
26.10 14:23:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 95, player2 => 94 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
26.10 14:23:34 TIME: vdl/cache.tournament.setGrid : 0.07 ms
26.10 14:23:38 TIMER: Clans cache...
26.10 14:23:38 TIMER: Clans cache: 0ms
26.10 14:23:38 TIMER: Check tournament...
26.10 14:23:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:23' OR rounddate = '2016-26-10 14:23' AND status <> 'finished'
26.10 14:23:38 TIMER: Check tournament: 0ms
26.10 14:23:44 BLOCKREMOVE: tournament 1 removed
26.10 14:24:38 TIMER: Clans cache...
26.10 14:24:38 TIMER: Clans cache: 0ms
26.10 14:24:38 TIMER: Check tournament...
26.10 14:24:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:24' OR rounddate = '2016-26-10 14:24' AND status <> 'finished'
26.10 14:24:38 STATS: cache [tournament], get [9 calls, 5 cache hits, 3 cache misses, 0 same version, 0 not found]
26.10 14:24:38 STATS: cache [tournament], segments [12 calls, 8 hits, 3 misses]
26.10 14:24:38 STATS: cache [tournament], database [360 calls, 3 reads, 2 writes]
26.10 14:24:38 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 14:24:38 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 14:24:38 DB: SELECT nextval('Battle_id_seq') AS id
26.10 14:24:38 READDB: SELECT ID FROM Battle WHERE ID = 85
26.10 14:24:38 READDB: INSERT INTO Battle (ID) VALUES (85)
26.10 14:24:38 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:24:38 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
26.10 14:24:38 STATS: cache [battle], database [360 calls, 0 reads, 0 writes]
26.10 14:24:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 14:24:38 READDB: SELECT * FROM Battle WHERE ID = 85
26.10 14:24:38 DB: SELECT name FROM users WHERE id=94
26.10 14:24:38 DB: SELECT name FROM users WHERE id=95
26.10 14:24:38 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-26-10 14:24, id => 94, enemy.num => 2, battleId => 85, player => 1 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
26.10 14:24:38 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-26-10 14:24, id => 95, enemy.num => 1, battleId => 85, player => 2 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
26.10 14:24:38 TIMER: Check tournament: 62ms
26.10 14:24:43 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'false', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 85
26.10 14:24:43 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 14:24', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[85],"usersAll":[95,94]}}', rounddate = E'2016-26-10 14:24' WHERE ID = 1
26.10 14:24:53 BLOCKREMOVE: battle 85 removed
26.10 14:24:53 BLOCKREMOVE: tournament 1 removed
26.10 14:25:38 TIMER: Clans cache...
26.10 14:25:38 TIMER: Clans cache: 0ms
26.10 14:25:38 TIMER: Check tournament...
26.10 14:25:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:25' OR rounddate = '2016-26-10 14:25' AND status <> 'finished'
26.10 14:25:38 TIMER: Check tournament: 1ms
26.10 14:25:38 TIMER: Clans cache...
26.10 14:25:38 TIMER: Clans cache: 0ms
26.10 14:25:38 TIMER: Check tournament...
26.10 14:25:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:26' OR rounddate = '2016-26-10 14:26' AND status <> 'finished'
26.10 14:25:38 TIMER: Check tournament: 0ms
26.10 14:27:09 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 85, _type => vdl/cache.battle.infoRoom }
26.10 14:27:09 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 14:27:09 STATS: cache [battle], segments [4 calls, 2 hits, 1 misses]
26.10 14:27:09 STATS: cache [battle], database [512 calls, 1 reads, 1 writes]
26.10 14:27:09 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 14:27:09 READDB: SELECT * FROM Battle WHERE ID = 85
26.10 14:27:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 14:27:09 TIME: vdl/cache.battle.infoRoom : 1.49 ms
26.10 14:27:09 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 85, _type => vdl/cache.battle.infoRoom }
26.10 14:27:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 14:27:09 TIME: vdl/cache.battle.infoRoom : 0.11 ms
26.10 14:27:20 BLOCKREMOVE: battle 85 removed
26.10 14:27:38 TIMER: Clans cache...
26.10 14:27:38 TIMER: Clans cache: 0ms
26.10 14:27:38 TIMER: Check tournament...
26.10 14:27:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:27' OR rounddate = '2016-26-10 14:27' AND status <> 'finished'
26.10 14:27:38 TIMER: Check tournament: 0ms
26.10 14:27:38 TIMER: Clans cache...
26.10 14:27:38 TIMER: Clans cache: 0ms
26.10 14:27:38 TIMER: Check tournament...
26.10 14:27:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:28' OR rounddate = '2016-26-10 14:28' AND status <> 'finished'
26.10 14:27:38 TIMER: Check tournament: 0ms
26.10 14:27:38 TIMER: Clans cache...
26.10 14:27:38 TIMER: Clans cache: 0ms
26.10 14:27:38 TIMER: Check tournament...
26.10 14:27:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:29' OR rounddate = '2016-26-10 14:29' AND status <> 'finished'
26.10 14:27:38 TIMER: Check tournament: 0ms
26.10 14:27:38 TIMER: Clans cache...
26.10 14:27:38 TIMER: Clans cache: 0ms
26.10 14:27:38 TIMER: Check tournament...
26.10 14:27:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:30' OR rounddate = '2016-26-10 14:30' AND status <> 'finished'
26.10 14:27:38 TIMER: Check tournament: 1ms
26.10 14:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 14:27:38 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 14:27:38 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 85 }}, errorCode => ok, _type => core/server.query }
26.10 14:27:38 TIME: core/server.query : 2.31 ms
26.10 14:27:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 85, _type => vdl/cache.battle.infoRoom }
26.10 14:27:38 STATS: cache [battle], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 14:27:38 STATS: cache [battle], segments [6 calls, 3 hits, 2 misses]
26.10 14:27:38 STATS: cache [battle], database [780 calls, 2 reads, 1 writes]
26.10 14:27:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 14:27:38 READDB: SELECT * FROM Battle WHERE ID = 85
26.10 14:27:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 14:27:38 TIME: vdl/cache.battle.infoRoom : 1.8 ms
26.10 14:27:38 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 85, _type => vdl/cache.battle.deleteRoom }
26.10 14:27:38 ROOM: deleted room 85
26.10 14:27:38 DB: DELETE FROM Battle WHERE ID = 85
26.10 14:27:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
26.10 14:27:38 TIME: vdl/cache.battle.deleteRoom : 18.76 ms
26.10 14:27:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 14:27:38 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 14:27:38 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
26.10 14:27:38 STATS: cache [user], database [780 calls, 2 reads, 2 writes]
26.10 14:27:38 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
26.10 14:27:38 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.12 ms]
26.10 14:27:38 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.22 ms]
26.10 14:27:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 14:27:38 TIME: core/cache.update : 0.4 ms
26.10 14:27:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 14:27:38 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 14:27:38 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
26.10 14:27:38 STATS: cache [questdata], database [780 calls, 2 reads, 0 writes]
26.10 14:27:38 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
26.10 14:27:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:27:38 TIME: core/cache.update : 0.38 ms
26.10 14:27:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 14:27:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 14:27:38 TIME: core/user.logoutPost : 0.11 ms
26.10 14:27:38 TIMER: Clans cache...
26.10 14:27:38 TIMER: Clans cache: 0ms
26.10 14:27:38 TIMER: Check tournament...
26.10 14:27:38 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:31' OR rounddate = '2016-26-10 14:31' AND status <> 'finished'
26.10 14:27:38 TIMER: Check tournament: 1ms
26.10 14:27:38 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 14:27:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 14:32:09 TIMER: Starting timer...
26.10 14:32:09 TIMER: Timer running...
26.10 14:32:09 DB: SELECT * FROM GameVars
26.10 14:32:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:32:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:32:09 DB: SELECT * FROM Shops WHERE ID = 1
26.10 14:32:09 TEMP: load ./tmp/quest_daily_ids
26.10 14:32:09 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 14:32:09 TEMP: save ./tmp/quest_daily_ids
26.10 14:32:10 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 14:32:10 QUEUE: vdl.0 (thread) response server.login
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM LocalizationStrings
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 11.72 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM GameVars
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.74 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.91 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.55 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.77 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 1.15 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 14:32:10 TIME: core/quest.getDaily : 0.02 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM UserAttributeTypes
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.5 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM UserVariableTypes
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.51 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 14:32:10 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 1.81 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM ItemGroups
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.8 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM Bundles ORDER BY ID
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.66 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.56 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 14:32:10 TIME: core/shop.getList : 0.03 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM EffectAttributeTypes
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.66 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM Effects
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.7 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 14:32:10 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.95 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 14:32:10 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.78 ms
26.10 14:32:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 14:32:10 DB: SELECT * FROM Badges
26.10 14:32:10 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:32:10 TIME: core/server.query : 0.57 ms
26.10 14:32:10 TIMER: Clans cache...
26.10 14:32:10 TIMER: Clans cache: 0ms
26.10 14:32:10 TIMER: Check tournament...
26.10 14:32:10 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:33' OR rounddate = '2016-26-10 14:33' AND status <> 'finished'
26.10 14:32:10 TIMER: Check tournament: 1ms
26.10 14:32:10 TIMER: Clans cache...
26.10 14:32:10 TIMER: Clans cache: 0ms
26.10 14:32:10 TIMER: Check tournament...
26.10 14:32:10 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:34' OR rounddate = '2016-26-10 14:34' AND status <> 'finished'
26.10 14:32:10 TIMER: Check tournament: 1ms
26.10 14:34:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
26.10 14:34:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
26.10 14:34:50 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:34:50 TIME: core/server.query : 2.27 ms
26.10 14:34:50 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
26.10 14:34:50 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 14:34:50 TIME: core/user.isOnlineID : 0.05 ms
26.10 14:34:50 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
26.10 14:34:50 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:34:50 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
26.10 14:34:50 STATS: cache [user], database [161 calls, 0 reads, 0 writes]
26.10 14:34:50 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
26.10 14:34:50 READDB: SELECT * FROM Users WHERE ID = 95
26.10 14:34:50 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.04 ms]
26.10 14:34:50 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
26.10 14:34:50 QUEUE: vdl.0 (thread) response core/cache.get
26.10 14:34:50 TIME: core/cache.get : 4.17 ms
26.10 14:34:50 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
26.10 14:34:50 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:34:50 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
26.10 14:34:50 STATS: cache [questdata], database [161 calls, 0 reads, 0 writes]
26.10 14:34:50 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
26.10 14:34:50 READDB: SELECT * FROM UserQuests WHERE ID = 95
26.10 14:34:50 QUEUE: vdl.0 (thread) response core/cache.get
26.10 14:34:50 TIME: core/cache.get : 0.95 ms
26.10 14:34:50 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
26.10 14:34:50 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 14:34:50 TIME: core/user.loginPost : 0.06 ms
26.10 14:34:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
26.10 14:34:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
26.10 14:34:59 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
26.10 14:34:59 TIME: core/server.query : 3.38 ms
26.10 14:34:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
26.10 14:34:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
26.10 14:34:59 TIME: core/user.isOnlineID : 0.78 ms
26.10 14:34:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
26.10 14:34:59 READDB: SELECT * FROM Users WHERE ID = 94
26.10 14:34:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 300, lastLoadDate => 1027 }, effects => { list => [] } }}, version => 0, id => 94 } }
26.10 14:34:59 TIME: core/cache.get : 1.63 ms
26.10 14:34:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
26.10 14:34:59 READDB: SELECT * FROM UserQuests WHERE ID = 94
26.10 14:34:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
26.10 14:34:59 TIME: core/cache.get : 1.11 ms
26.10 14:34:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
26.10 14:34:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 14:34:59 TIME: core/user.loginPost : 0.1 ms
26.10 14:35:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
26.10 14:35:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:35:00 TIME: core/cache.update : 0.08 ms
26.10 14:35:01 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 14:35:03 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:35:03 DB: SELECT * FROM tournament
26.10 14:35:03 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:35:03 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
26.10 14:35:03 STATS: cache [tournament], database [174 calls, 0 reads, 0 writes]
26.10 14:35:03 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 14:35:03 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 14:35:03 DB: SELECT name FROM users WHERE id = 95
26.10 14:35:03 DB: SELECT name FROM users WHERE id = 94
26.10 14:35:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-26-10 14:36, startdate => 2016-26-10 14:36 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:35:03 TIME: vdl/cache.tournament.getAvailableTournament : 5.57 ms
26.10 14:35:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
26.10 14:35:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:35:05 TIME: core/cache.update : 0.26 ms
26.10 14:35:06 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 94
26.10 14:35:07 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
26.10 14:35:07 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
26.10 14:35:07 TIME: vdl/cache.tournament.getStatus : 0.25 ms
26.10 14:35:07 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
26.10 14:35:07 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95,94] }
26.10 14:35:07 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.21 ms
26.10 14:35:07 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 95, player2 => 94 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
26.10 14:35:07 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 95, player2 => 94 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
26.10 14:35:07 TIME: vdl/cache.tournament.setGrid : 0.21 ms
26.10 14:35:10 TIMER: Clans cache...
26.10 14:35:10 TIMER: Clans cache: 0ms
26.10 14:35:10 TIMER: Check tournament...
26.10 14:35:10 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:35' OR rounddate = '2016-26-10 14:35' AND status <> 'finished'
26.10 14:35:10 TIMER: Check tournament: 1ms
26.10 14:35:11 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:35:11 DB: SELECT * FROM tournament
26.10 14:35:11 DB: SELECT name FROM users WHERE id = 95
26.10 14:35:11 DB: SELECT name FROM users WHERE id = 94
26.10 14:35:11 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-26-10 14:36, startdate => 2016-26-10 14:36 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
26.10 14:35:11 TIME: vdl/cache.tournament.getAvailableTournament : 2.99 ms
26.10 14:35:22 BLOCKREMOVE: tournament 1 removed
26.10 14:36:10 TIMER: Clans cache...
26.10 14:36:10 TIMER: Clans cache: 0ms
26.10 14:36:10 TIMER: Check tournament...
26.10 14:36:10 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:36' OR rounddate = '2016-26-10 14:36' AND status <> 'finished'
26.10 14:36:10 STATS: cache [tournament], get [5 calls, 3 cache hits, 1 cache misses, 0 same version, 0 not found]
26.10 14:36:10 STATS: cache [tournament], segments [6 calls, 4 hits, 1 misses]
26.10 14:36:10 STATS: cache [tournament], database [240 calls, 1 reads, 0 writes]
26.10 14:36:10 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 14:36:10 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 14:36:10 DB: SELECT nextval('Battle_id_seq') AS id
26.10 14:36:10 READDB: SELECT ID FROM Battle WHERE ID = 86
26.10 14:36:10 READDB: INSERT INTO Battle (ID) VALUES (86)
26.10 14:36:10 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:36:10 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
26.10 14:36:10 STATS: cache [battle], database [241 calls, 0 reads, 0 writes]
26.10 14:36:10 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 14:36:10 READDB: SELECT * FROM Battle WHERE ID = 86
26.10 14:36:10 DB: SELECT name FROM users WHERE id=94
26.10 14:36:10 DB: SELECT name FROM users WHERE id=95
26.10 14:36:10 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-26-10 14:36, id => 94, enemy.num => 2, battleId => 86, player => 1 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
26.10 14:36:10 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-26-10 14:36, id => 95, enemy.num => 1, battleId => 86, player => 2 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
26.10 14:36:10 TIMER: Check tournament: 59ms
26.10 14:36:15 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 14:36', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[86],"usersAll":[95,94]}}', rounddate = E'2016-26-10 14:36' WHERE ID = 1
26.10 14:36:16 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'false', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 86
26.10 14:36:25 BLOCKREMOVE: tournament 1 removed
26.10 14:36:26 BLOCKREMOVE: battle 86 removed
26.10 14:36:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 86, _type => vdl/cache.battle.infoRoom }
26.10 14:36:27 READDB: SELECT * FROM Battle WHERE ID = 86
26.10 14:36:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 14:36:27 TIME: vdl/cache.battle.infoRoom : 1.34 ms
26.10 14:36:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 86, _type => vdl/cache.battle.infoRoom }
26.10 14:36:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 14:36:33 TIME: vdl/cache.battle.infoRoom : 0.19 ms
26.10 14:36:44 BLOCKREMOVE: battle 86 removed
26.10 14:37:10 TIMER: Clans cache...
26.10 14:37:10 TIMER: Clans cache: 0ms
26.10 14:37:10 TIMER: Check tournament...
26.10 14:37:10 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:37' OR rounddate = '2016-26-10 14:37' AND status <> 'finished'
26.10 14:37:10 TIMER: Check tournament: 0ms
26.10 14:37:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 86, _type => vdl/cache.battle.infoRoom }
26.10 14:37:43 STATS: cache [battle], get [4 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 14:37:43 STATS: cache [battle], segments [6 calls, 3 hits, 2 misses]
26.10 14:37:43 STATS: cache [battle], database [334 calls, 2 reads, 1 writes]
26.10 14:37:43 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 14:37:43 READDB: SELECT * FROM Battle WHERE ID = 86
26.10 14:37:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 14:37:43 TIME: vdl/cache.battle.infoRoom : 1.56 ms
26.10 14:37:43 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
26.10 14:37:43 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
26.10 14:37:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 86 }}, errorCode => ok, _type => core/server.query }
26.10 14:37:43 TIME: core/server.query : 1.82 ms
26.10 14:37:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 86, _type => vdl/cache.battle.infoRoom }
26.10 14:37:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
26.10 14:37:43 TIME: vdl/cache.battle.infoRoom : 0.13 ms
26.10 14:37:43 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 86, _type => vdl/cache.battle.deleteRoom }
26.10 14:37:43 ROOM: deleted room 86
26.10 14:37:43 DB: DELETE FROM Battle WHERE ID = 86
26.10 14:37:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
26.10 14:37:43 TIME: vdl/cache.battle.deleteRoom : 26.3 ms
26.10 14:37:43 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
26.10 14:37:43 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 14:37:43 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
26.10 14:37:43 STATS: cache [user], database [334 calls, 2 reads, 2 writes]
26.10 14:37:43 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
26.10 14:37:43 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.82 ms]
26.10 14:37:43 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.09 ms]
26.10 14:37:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
26.10 14:37:43 TIME: core/cache.update : 0.27 ms
26.10 14:37:43 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
26.10 14:37:43 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
26.10 14:37:43 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
26.10 14:37:43 STATS: cache [questdata], database [334 calls, 2 reads, 0 writes]
26.10 14:37:43 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
26.10 14:37:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:37:43 TIME: core/cache.update : 0.36 ms
26.10 14:37:43 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
26.10 14:37:43 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 14:37:43 TIME: core/user.logoutPost : 0.06 ms
26.10 14:37:44 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 95
26.10 14:37:44 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
26.10 14:37:54 BLOCKREMOVE: user 95 removed
26.10 14:37:54 BLOCKREMOVE: questdata 95 removed
26.10 14:37:54 BLOCKREMOVE: battle 86 removed
26.10 14:40:00 TIMER: Starting timer...
26.10 14:40:00 TIMER: Timer running...
26.10 14:40:00 DB: SELECT * FROM GameVars
26.10 14:40:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:40:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:40:00 DB: SELECT * FROM Shops WHERE ID = 1
26.10 14:40:00 TEMP: load ./tmp/quest_daily_ids
26.10 14:40:00 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 14:40:00 TEMP: save ./tmp/quest_daily_ids
26.10 14:40:00 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 14:40:00 QUEUE: vdl.0 (thread) response server.login
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 14:40:00 DB: SELECT * FROM LocalizationStrings
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:40:00 TIME: core/server.query : 6.84 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 14:40:00 DB: SELECT * FROM GameVars
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:40:00 TIME: core/server.query : 0.84 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 14:40:00 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:40:00 TIME: core/server.query : 1.04 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 14:40:00 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:40:00 TIME: core/server.query : 0.54 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 14:40:00 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:40:00 TIME: core/server.query : 0.64 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 14:40:00 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:40:00 TIME: core/server.query : 1.16 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 14:40:00 TIME: core/quest.getDaily : 0.03 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 14:40:00 DB: SELECT * FROM UserAttributeTypes
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:40:00 TIME: core/server.query : 0.63 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 14:40:00 DB: SELECT * FROM UserVariableTypes
26.10 14:40:00 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:40:00 TIME: core/server.query : 0.75 ms
26.10 14:40:00 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 14:40:00 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i26.10 14:43:28 TIMER: Starting timer...
26.10 14:43:28 TIMER: Timer running...
26.10 14:43:28 DB: SELECT * FROM GameVars
26.10 14:43:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:43:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:43:28 DB: SELECT * FROM Shops WHERE ID = 1
26.10 14:43:28 TEMP: load ./tmp/quest_daily_ids
26.10 14:43:28 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 14:43:28 TEMP: save ./tmp/quest_daily_ids
26.10 14:43:28 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 14:43:28 QUEUE: vdl.0 (thread) response server.login
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM LocalizationStrings
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 7.67 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM GameVars
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.64 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.77 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.51 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.51 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.98 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 14:43:28 TIME: core/quest.getDaily : 0.03 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM UserAttributeTypes
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.43 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM UserVariableTypes
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.49 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 14:43:28 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 1.16 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM ItemGroups
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.4 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM Bundles ORDER BY ID
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.51 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.42 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 14:43:28 TIME: core/shop.getList : 0.03 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM EffectAttributeTypes
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.56 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM Effects
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.57 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 14:43:28 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.87 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 14:43:28 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.54 ms
26.10 14:43:28 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 14:43:28 DB: SELECT * FROM Badges
26.10 14:43:28 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:43:28 TIME: core/server.query : 0.37 ms
26.10 14:43:28 TIMER: Clans cache...
26.10 14:43:28 TIMER: Clans cache: 0ms
26.10 14:43:28 TIMER: Check tournament...
26.10 14:43:28 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:44' OR rounddate = '2016-26-10 14:44' AND status <> 'finished'
26.10 14:43:28 TIMER: Check tournament: 2ms
26.10 14:43:28 TIMER: Clans cache...
26.10 14:43:28 TIMER: Clans cache: 0ms
26.10 14:43:28 TIMER: Check tournament...
26.10 14:43:28 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:45' OR rounddate = '2016-26-10 14:45' AND status <> 'finished'
26.10 14:43:28 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:43:28 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
26.10 14:43:28 STATS: cache [tournament], database [121 calls, 0 reads, 0 writes]
26.10 14:43:28 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
26.10 14:43:28 READDB: SELECT * FROM Tournament WHERE ID = 1
26.10 14:43:28 DB: SELECT nextval('Battle_id_seq') AS id
26.10 14:43:28 READDB: SELECT ID FROM Battle WHERE ID = 87
26.10 14:43:28 READDB: INSERT INTO Battle (ID) VALUES (87)
26.10 14:43:28 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:43:28 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
26.10 14:43:28 STATS: cache [battle], database [121 calls, 0 reads, 0 writes]
26.10 14:43:28 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
26.10 14:43:28 READDB: SELECT * FROM Battle WHERE ID = 87
26.10 14:43:28 DB: SELECT name FROM users WHERE id=94
26.10 14:43:28 DB: SELECT name FROM users WHERE id=95
26.10 14:43:28 TRACE: Check tournament timer exception:
26.10 14:43:28 TRACE: Invalid field access : response

26.10 14:43:28 TIMER: Check tournament: 53ms
26.10 14:45:34 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'false', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 87
26.10 14:45:38 BLOCKREMOVE: tournament 1 removed
26.10 14:45:44 BLOCKREMOVE: battle 87 removed
26.10 14:55:29 TIMER: Starting timer...
26.10 14:55:29 TIMER: Timer running...
26.10 14:55:29 DB: SELECT * FROM GameVars
26.10 14:55:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:55:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:55:29 DB: SELECT * FROM Shops WHERE ID = 1
26.10 14:55:29 TEMP: load ./tmp/quest_daily_ids
26.10 14:55:29 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 14:55:29 TEMP: save ./tmp/quest_daily_ids
26.10 14:55:29 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 14:55:29 QUEUE: vdl.0 (thread) response server.login
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM LocalizationStrings
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 8.06 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM GameVars
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.54 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.75 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.73 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.63 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 1.38 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 14:55:29 TIME: core/quest.getDaily : 0.02 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM UserAttributeTypes
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.38 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM UserVariableTypes
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.51 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 14:55:29 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 1.36 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM ItemGroups
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.46 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM Bundles ORDER BY ID
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.73 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.48 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 14:55:29 TIME: core/shop.getList : 0.04 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM EffectAttributeTypes
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.34 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM Effects
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.31 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 14:55:29 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.79 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 14:55:29 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.53 ms
26.10 14:55:29 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 14:55:29 DB: SELECT * FROM Badges
26.10 14:55:29 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:55:29 TIME: core/server.query : 0.41 ms
26.10 14:55:29 TIMER: Clans cache...
26.10 14:55:29 TIMER: Clans cache: 0ms
26.10 14:55:29 TIMER: Check tournament...
26.10 14:55:29 DB: SELECT * FROM tournament WHERE startdate = '2016-26-10 14:56' OR rounddate = '2016-26-10 14:56' AND status <> 'finished'
26.10 14:55:29 TIMER: Check tournament: 1ms
26.10 14:56:48 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 14:56:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 14:56:48 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:56:48 TIME: core/server.query : 1.62 ms
26.10 14:56:48 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 14:56:48 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 14:56:48 TIME: core/user.isOnlineID : 0.05 ms
26.10 14:56:48 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 14:56:48 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:56:48 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
26.10 14:56:48 STATS: cache [user], database [79 calls, 0 reads, 0 writes]
26.10 14:56:48 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
26.10 14:56:48 READDB: SELECT * FROM Users WHERE ID = 76
26.10 14:56:48 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 1.84 ms]
26.10 14:56:48 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
26.10 14:56:48 QUEUE: vdl.0 (thread) response core/cache.get
26.10 14:56:48 TIME: core/cache.get : 1.96 ms
26.10 14:56:48 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 14:56:48 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
26.10 14:56:48 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
26.10 14:56:48 STATS: cache [questdata], database [79 calls, 0 reads, 0 writes]
26.10 14:56:48 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
26.10 14:56:48 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 14:56:48 QUEUE: vdl.0 (thread) response core/cache.get
26.10 14:56:48 TIME: core/cache.get : 0.81 ms
26.10 14:56:48 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 14:56:48 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 14:56:48 TIME: core/user.loginPost : 0.07 ms
26.10 14:56:48 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp, _type => core/server.query }
26.10 14:56:48 DB: SELECT ID FROM TempUserLogins WHERE UserID = 76 AND Date = 'today'::timestamp
26.10 14:56:48 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
26.10 14:56:48 TIME: core/server.query : 0.95 ms
26.10 14:56:48 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (76, 'today'::timestamp)
26.10 14:56:51 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
26.10 14:56:51 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
26.10 14:56:51 TIME: vdl/cache.user.getData : 0.08 ms
26.10 14:56:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 300, lastLoadDate => 1027 } }}, type => user, unlock => false, id => 76, _type => core/cache.update }
26.10 14:56:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:56:54 TIME: core/cache.update : 0.18 ms
26.10 14:56:55 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399027,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 14:58:32 TIMER: Starting timer...
26.10 14:58:32 TIMER: Timer running...
26.10 14:58:32 DB: SELECT * FROM GameVars
26.10 14:58:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:58:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:58:32 DB: SELECT * FROM Shops WHERE ID = 1
26.10 14:58:32 TEMP: load ./tmp/quest_daily_ids
26.10 14:58:32 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
26.10 14:58:32 TEMP: save ./tmp/quest_daily_ids
26.10 14:58:32 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
26.10 14:58:32 QUEUE: vdl.0 (thread) response server.login
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM LocalizationStrings
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 15.31 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM GameVars
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 0.55 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 1.22 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 0.85 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 0.77 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 1.74 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/quest.getDaily
26.10 14:58:32 TIME: core/quest.getDaily : 0.23 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM UserAttributeTypes
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 2.96 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM UserVariableTypes
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 2.82 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
26.10 14:58:32 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 2.09 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM ItemGroups
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 1.28 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM Bundles ORDER BY ID
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 0.91 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM BundleItems ORDER BY ID
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 1.25 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/shop.getList
26.10 14:58:32 TIME: core/shop.getList : 0.08 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM EffectAttributeTypes
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 1.13 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM Effects
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 0.66 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
26.10 14:58:32 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 1.05 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
26.10 14:58:32 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 1.24 ms
26.10 14:58:32 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
26.10 14:58:32 DB: SELECT * FROM Badges
26.10 14:58:32 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:32 TIME: core/server.query : 2.16 ms
26.10 14:58:39 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
26.10 14:58:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
26.10 14:58:39 QUEUE: vdl.0 (thread) response core/server.query
26.10 14:58:39 TIME: core/server.query : 1.9 ms
26.10 14:58:39 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
26.10 14:58:39 QUEUE: vdl.0 (thread) response core/user.isOnlineID
26.10 14:58:39 TIME: core/user.isOnlineID : 0.05 ms
26.10 14:58:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
26.10 14:58:39 READDB: SELECT * FROM Users WHERE ID = 76
26.10 14:58:39 QUEUE: vdl.0 (thread) response core/cache.get
26.10 14:58:39 TIME: core/cache.get : 2.46 ms
26.10 14:58:39 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
26.10 14:58:39 READDB: SELECT * FROM UserQuests WHERE ID = 76
26.10 14:58:39 QUEUE: vdl.0 (thread) response core/cache.get
26.10 14:58:39 TIME: core/cache.get : 0.78 ms
26.10 14:58:39 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
26.10 14:58:39 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
26.10 14:58:39 TIME: core/user.loginPost : 0.1 ms
26.10 14:58:39 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 1, _type => vdl/cache.battle.finishRoom }
26.10 14:58:39 READDB: SELECT * FROM Battle WHERE ID = 1
26.10 14:58:39 TRACE: vdl/cache.battle.finishRoom : Invalid field access : set
26.10 14:58:39 TRACE: vdl/cache.battle.finishRoom : 
Called from modules/VDLCache.hx line 712
Called from modules/VDLCache.hx line 137
Called from modules/VDLCache.hx line 100
Called from snipe/cache/CacheServer.hx line 487
26.10 14:58:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => _requestException, _type => vdl/cache.battle.finishRoom }
26.10 14:58:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 76, _type => core/cache.update }
26.10 14:58:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:58:39 TIME: core/cache.update : 0.09 ms
26.10 14:58:39 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
26.10 14:58:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
26.10 14:58:39 TIME: core/cache.update : 0.09 ms
26.10 14:58:39 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
26.10 14:58:39 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
26.10 14:58:39 TIME: core/user.logoutPost : 0.09 ms
26.10 14:58:45 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399027,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}' WHERE ID = 76
26.10 14:58:45 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
26.10 14:58:55 BLOCKREMOVE: user 76 removed
26.10 14:58:55 BLOCKREMOVE: questdata 76 removed
