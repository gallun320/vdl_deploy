02.09 15:05:12 TIMER: Starting timer...
02.09 15:05:12 TIMER: Timer running...
02.09 15:05:12 DB: SELECT * FROM GameVars
02.09 15:05:12 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 15:05:12 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 15:05:12 DB: SELECT * FROM Shops WHERE ID = 1
02.09 15:05:12 TEMP: load ./tmp/quest_daily_ids
02.09 15:05:12 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 15:05:12 TEMP: save ./tmp/quest_daily_ids
02.09 15:05:12 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 15:05:12 QUEUE: vdl.0 (thread) response server.login
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM LocalizationStrings
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 7.44 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM GameVars
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.63 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.8 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.42 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.63 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 1.37 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 15:05:12 TIME: core/quest.getDaily : 0.05 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM UserAttributeTypes
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.66 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM UserVariableTypes
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.46 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 15:05:12 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 1.09 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM ItemGroups
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 2.31 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM Bundles ORDER BY ID
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.7 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.62 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 15:05:12 TIME: core/shop.getList : 0.04 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM EffectAttributeTypes
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.38 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM Effects
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.62 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 15:05:12 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 1 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 15:05:12 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.94 ms
02.09 15:05:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 15:05:12 DB: SELECT * FROM Badges
02.09 15:05:12 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:05:12 TIME: core/server.query : 0.73 ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans cache: 0ms
02.09 15:05:12 TIMER: Clans cache...
02.09 15:05:12 TIMER: Clans 02.09 15:21:58 TIMER: Starting timer...
02.09 15:21:58 TIMER: Timer running...
02.09 15:21:58 DB: SELECT * FROM GameVars
02.09 15:21:58 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 15:21:58 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 15:21:58 DB: SELECT * FROM Shops WHERE ID = 1
02.09 15:21:58 TEMP: load ./tmp/quest_daily_ids
02.09 15:21:58 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 15:21:58 TEMP: save ./tmp/quest_daily_ids
02.09 15:21:58 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 15:21:58 QUEUE: vdl.0 (thread) response server.login
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 15:21:58 DB: SELECT * FROM LocalizationStrings
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:21:58 TIME: core/server.query : 7.25 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 15:21:58 DB: SELECT * FROM GameVars
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:21:58 TIME: core/server.query : 0.46 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 15:21:58 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:21:58 TIME: core/server.query : 0.7 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 15:21:58 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:21:58 TIME: core/server.query : 0.43 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 15:21:58 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:21:58 TIME: core/server.query : 0.79 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 15:21:58 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:21:58 TIME: core/server.query : 0.76 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 15:21:58 TIME: core/quest.getDaily : 0.02 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 15:21:58 DB: SELECT * FROM UserAttributeTypes
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:21:58 TIME: core/server.query : 0.43 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 15:21:58 DB: SELECT * FROM UserVariableTypes
02.09 15:21:58 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:21:58 TIME: core/server.query : 0.28 ms
02.09 15:21:58 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 15:21:58 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.02.09 15:22:03 TIMER: Starting timer...
02.09 15:22:03 DB: SELECT * FROM GameVars
02.09 15:22:03 TIMER: Timer running...
02.09 15:22:03 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 15:22:03 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 15:22:03 DB: SELECT * FROM Shops WHERE ID = 1
02.09 15:22:03 TEMP: load ./tmp/quest_daily_ids
02.09 15:22:03 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 15:22:03 TEMP: save ./tmp/quest_daily_ids
02.09 15:22:03 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 15:22:03 QUEUE: vdl.0 (thread) response server.login
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM LocalizationStrings
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 7.31 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM GameVars
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.5 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.75 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.47 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.59 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 1.25 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 15:22:03 TIME: core/quest.getDaily : 0.02 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM UserAttributeTypes
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.35 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM UserVariableTypes
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.41 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 15:22:03 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.91 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM ItemGroups
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.32 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM Bundles ORDER BY ID
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.4 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.42 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 15:22:03 TIME: core/shop.getList : 0.03 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM EffectAttributeTypes
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.32 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM Effects
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.44 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 15:22:03 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.61 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 15:22:03 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.51 ms
02.09 15:22:03 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 15:22:03 DB: SELECT * FROM Badges
02.09 15:22:03 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:22:03 TIME: core/server.query : 0.32 ms
02.09 15:22:03 TIMER: Clans cache...
02.09 15:22:03 TIMER: Clans cache: 0ms
02.09 15:22:03 TIMER: Clans cache...
02.09 15:22:03 TIMER: Clans cache: 0ms
02.09 15:22:03 TIMER: Clans cache...
02.09 15:22:03 TIMER: Clans cache: 0ms
02.09 15:25:26 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 15:25:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 15:25:26 QUEUE: vdl.0 (thread) response core/server.query
02.09 15:25:26 TIME: core/server.query : 9.22 ms
02.09 15:25:26 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 15:25:26 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 15:25:26 TIME: core/user.isOnlineID : 0.21 ms
02.09 15:25:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 15:25:26 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 15:25:26 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 15:25:26 STATS: cache [user], database [203 calls, 0 reads, 0 writes]
02.09 15:25:26 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 15:25:26 READDB: SELECT * FROM Users WHERE ID = 2
02.09 15:25:26 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 6 ms]
02.09 15:25:26 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 15:25:26 QUEUE: vdl.0 (thread) response core/cache.get
02.09 15:25:26 TIME: core/cache.get : 6.24 ms
02.09 15:25:26 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 15:25:26 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 15:25:26 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 15:25:26 STATS: cache [questdata], database [203 calls, 0 reads, 0 writes]
02.09 15:25:26 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 15:25:26 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 15:25:26 QUEUE: vdl.0 (thread) response core/cache.get
02.09 15:25:26 TIME: core/cache.get : 1.34 ms
02.09 15:25:26 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 15:25:26 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 15:25:26 TIME: core/user.loginPost : 0.14 ms
02.09 15:25:26 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 15:25:26 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 15:25:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 15:25:26 TIME: vdl/cache.battle.find : 6.22 ms
02.09 15:25:26 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
02.09 15:25:26 DB: SELECT nextval('Battle_id_seq') AS id
02.09 15:25:26 READDB: SELECT ID FROM Battle WHERE ID = 23
02.09 15:25:26 READDB: INSERT INTO Battle (ID) VALUES (23)
02.09 15:25:26 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 15:25:26 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.09 15:25:26 STATS: cache [battle], database [203 calls, 0 reads, 0 writes]
02.09 15:25:26 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 15:25:26 READDB: SELECT * FROM Battle WHERE ID = 23
02.09 15:25:26 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.16 ms]
02.09 15:25:26 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 15:25:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 23, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 15:25:26 TIME: vdl/cache.battle.create : 27.54 ms
02.09 15:25:31 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 23
02.09 15:25:33 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 15:25:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 15:25:33 TIME: core/cache.update : 0.27 ms
02.09 15:25:34 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472741968,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 15:26:03 TIMER: Clans cache...
02.09 15:26:03 TIMER: Clans cache: 0ms
02.09 15:26:03 TIMER: Clans cache...
02.09 15:26:03 TIMER: Clans cache: 0ms
02.09 15:26:03 TIMER: Clans cache...
02.09 15:26:03 TIMER: Clans cache: 0ms
02.09 15:26:03 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2OR secondid=2, _type => core/server.query }
02.09 15:26:03 DB: SELECT id FROM battle WHERE firstid=2OR secondid=2
02.09 15:26:03 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 23 }}, errorCode => ok, _type => core/server.query }
02.09 15:26:03 TIME: core/server.query : 1.56 ms
02.09 15:26:03 NET: vdl.0 (thread) request core/user.sendTo { id => null, _type => core/user.sendTo, msg => { type => battle.endGame } }
02.09 15:26:03 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
02.09 15:26:03 TIME: core/user.sendTo : 0.1 ms
02.09 15:26:03 NET: vdl.0 (thread) request vdl/cache.battle.makeTurn { userId => { __name__ => [Int] }, _type => vdl/cache.battle.makeTurn }
02.09 15:26:03 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 15:26:03 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
02.09 15:26:03 STATS: cache [battle], database [420 calls, 1 reads, 1 writes]
02.09 15:26:03 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 15:26:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.makeTurn { errorCode => true, _type => vdl/cache.battle.makeTurn, turnId => 2 }
02.09 15:26:03 TIME: vdl/cache.battle.makeTurn : 0.37 ms
02.09 15:26:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 15:26:03 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 15:26:03 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
02.09 15:26:03 STATS: cache [user], database [420 calls, 1 reads, 1 writes]
02.09 15:26:03 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 15:26:03 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 3.63 ms]
02.09 15:26:03 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.17 ms]
02.09 15:26:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 15:26:03 TIME: core/cache.update : 0.49 ms
02.09 15:26:03 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 15:26:03 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 15:26:03 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
02.09 15:26:03 STATS: cache [questdata], database [420 calls, 1 reads, 0 writes]
02.09 15:26:03 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 15:26:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 15:26:03 TIME: core/cache.update : 0.35 ms
02.09 15:26:03 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 15:26:03 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 15:26:03 TIME: core/user.logoutPost : 0.12 ms
02.09 15:26:03 TIMER: Clans cache...
02.09 15:26:03 TIMER: Clans cache: 0ms
02.09 15:26:03 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472741968,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 15:26:03 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 15:29:13 BLOCKREMOVE: user 2 removed
02.09 15:29:13 BLOCKREMOVE: questdata 2 removed
