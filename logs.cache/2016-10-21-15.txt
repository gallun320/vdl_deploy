21.10 15:01:12 BLOCKREMOVE: user 76 removed
21.10 15:01:12 BLOCKREMOVE: questdata 76 removed
21.10 15:01:12 BLOCKREMOVE: battle 54 removed
21.10 15:05:22 TIMER: Starting timer...
21.10 15:05:22 TIMER: Timer running...
21.10 15:05:22 DB: SELECT * FROM GameVars
21.10 15:05:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 15:05:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 15:05:22 DB: SELECT * FROM Shops WHERE ID = 1
21.10 15:05:22 TEMP: load ./tmp/quest_daily_ids
21.10 15:05:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
21.10 15:05:22 TEMP: save ./tmp/quest_daily_ids
21.10 15:05:22 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 15:05:22 QUEUE: vdl.0 (thread) response server.login
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM LocalizationStrings
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 10 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM GameVars
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.6 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.67 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.57 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.52 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.91 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/quest.getDaily
21.10 15:05:22 TIME: core/quest.getDaily : 0.02 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM UserAttributeTypes
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.33 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM UserVariableTypes
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.36 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 15:05:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 1.21 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM ItemGroups
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.5 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM Bundles ORDER BY ID
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.47 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.7 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/shop.getList
21.10 15:05:22 TIME: core/shop.getList : 0.25 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM EffectAttributeTypes
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.47 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM Effects
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 1.43 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 15:05:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 1.33 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 15:05:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 1.07 ms
21.10 15:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 15:05:22 DB: SELECT * FROM Badges
21.10 15:05:22 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:05:22 TIME: core/server.query : 0.72 ms
21.10 15:05:22 TIMER: Clans cache...
21.10 15:05:22 TIMER: Clans cache: 0ms
21.10 15:05:22 TIMER: Check tournament...
21.10 15:05:22 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:06' OR rounddate = '2016-21-10 15:06'
21.10 15:05:22 TIMER: Check tournament: 1ms
21.10 15:05:22 TIMER: Clans cache...
21.10 15:05:22 TIMER: Clans cache: 0ms
21.10 15:05:22 TIMER: Check tournament...
21.10 15:05:22 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:07' OR rounddate = '2016-21-10 15:07'
21.10 15:05:22 TIMER: Check tournament: 1ms
21.10 15:05:22 TIMER: Clans cache...
21.10 15:05:22 TIMER: Clans cache: 0ms
21.10 15:05:22 TIMER: Check tournament...
21.10 15:05:22 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:08' OR rounddate = '2016-21-10 15:08'
21.10 15:05:22 TIMER: Check tournament: 1ms
21.10 15:05:22 TIMER: Clans cache...
21.10 15:05:22 TIMER: Clans cache: 0ms
21.10 15:05:22 TIMER: Check tournament...
21.10 15:05:22 DB: SELECT * 21.10 15:15:33 TIMER: Starting timer...
21.10 15:15:33 TIMER: Timer running...
21.10 15:15:33 DB: SELECT * FROM GameVars
21.10 15:15:33 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 15:15:33 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 15:15:33 DB: SELECT * FROM Shops WHERE ID = 1
21.10 15:15:33 TEMP: load ./tmp/quest_daily_ids
21.10 15:15:33 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
21.10 15:15:33 TEMP: save ./tmp/quest_daily_ids
21.10 15:15:33 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 15:15:33 QUEUE: vdl.0 (thread) response server.login
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM LocalizationStrings
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 6.16 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM GameVars
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.54 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.63 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.42 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.58 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 1.13 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/quest.getDaily
21.10 15:15:33 TIME: core/quest.getDaily : 0.02 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM UserAttributeTypes
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.34 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM UserVariableTypes
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.44 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 15:15:33 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.88 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM ItemGroups
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.32 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM Bundles ORDER BY ID
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.4 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.49 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/shop.getList
21.10 15:15:33 TIME: core/shop.getList : 0.03 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM EffectAttributeTypes
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.3 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM Effects
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.29 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 15:15:33 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.86 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 15:15:33 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.67 ms
21.10 15:15:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 15:15:33 DB: SELECT * FROM Badges
21.10 15:15:33 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:15:33 TIME: core/server.query : 0.28 ms
21.10 15:15:33 TIMER: Clans cache...
21.10 15:15:33 TIMER: Clans cache: 0ms
21.10 15:15:33 TIMER: Check tournament...
21.10 15:15:33 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:16' OR rounddate = '2016-21-10 15:16'
21.10 15:15:33 TIMER: Check tournament: 3ms
21.10 15:15:33 TIMER: Clans cache...
21.10 15:15:33 TIMER: Clans cache: 0ms
21.10 15:15:33 TIMER: Check tournament...
21.10 15:15:33 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:17' OR rounddate = '2016-21-10 15:17'
21.10 15:15:33 TIMER: Check tournament: 1ms
21.10 15:15:33 TIMER: Clans cache...
21.10 15:15:33 TIMER: Clans cache: 0ms
21.10 15:15:33 TIMER: Check tournament...
21.10 15:15:33 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:18' OR rounddate = '2016-21-10 15:18'
21.10 15:15:33 TIMER: Check tournament: 0ms
21.10 15:15:33 TIMER: Clans cache...
21.10 15:15:33 TIMER: Clans cache: 0ms
21.10 15:15:33 TIMER: Check tournament...
21.10 15:15:33 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:19' OR rounddate = '2016-21-10 15:19'
21.10 15:15:33 TIMER: Check tournament: 0ms
21.10 15:15:33 TIMER: Clans cache...
21.10 15:15:33 TIMER: Clans cache: 0ms
21.10 15:15:33 TIMER: Check tournament...
21.10 15:15:33 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:20' OR rounddate = '2016-21-10 15:20'
21.10 15:15:33 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
21.10 15:15:33 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
21.10 15:15:33 STATS: cache [tournament], database [301 calls, 0 reads, 0 writes]
21.10 15:15:33 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
21.10 15:15:33 READDB: SELECT * FROM Tournament WHERE ID = 1
21.10 15:15:33 DB: SELECT nextval('Battle_id_seq') AS id
21.10 15:15:33 READDB: SELECT ID FROM Battle WHERE ID = 57
21.10 15:15:33 READDB: INSERT INTO Battle (ID) VALUES (57)
21.10 15:15:33 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
21.10 15:15:33 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
21.10 15:15:33 STATS: cache [battle], database [301 calls, 0 reads, 0 writes]
21.10 15:15:33 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
21.10 15:15:33 READDB: SELECT * FROM Battle WHERE ID = 57
21.10 15:15:33 DB: SELECT name FROM users WHERE id=2
21.10 15:15:33 DB: SELECT name FROM users WHERE id=76
21.10 15:15:33 TRACE: Check tournament timer exception:
21.10 15:15:33 TRACE: Invalid field access : response

21.10 15:15:33 TIMER: Check tournament: 51ms
21.10 15:20:39 WRITEDB: UPDATE Battle SET secondid = E'76', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 57
21.10 15:20:43 BLOCKREMOVE: tournament 1 removed
21.10 15:20:49 BLOCKREMOVE: battle 57 removed
21.10 15:24:18 TIMER: Starting timer...
21.10 15:24:18 DB: SELECT * FROM GameVars
21.10 15:24:18 TIMER: Timer running...
21.10 15:24:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 15:24:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 15:24:18 DB: SELECT * FROM Shops WHERE ID = 1
21.10 15:24:18 TEMP: load ./tmp/quest_daily_ids
21.10 15:24:18 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
21.10 15:24:18 TEMP: save ./tmp/quest_daily_ids
21.10 15:24:18 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
21.10 15:24:18 QUEUE: vdl.0 (thread) response server.login
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM LocalizationStrings
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 7.94 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM GameVars
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.58 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 1.01 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.45 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.54 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.99 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/quest.getDaily
21.10 15:24:18 TIME: core/quest.getDaily : 0.02 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM UserAttributeTypes
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.47 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM UserVariableTypes
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.53 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
21.10 15:24:18 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 1.2 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM ItemGroups
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.5 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM Bundles ORDER BY ID
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.75 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM BundleItems ORDER BY ID
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.58 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/shop.getList
21.10 15:24:18 TIME: core/shop.getList : 0.02 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM EffectAttributeTypes
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.54 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM Effects
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.4 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
21.10 15:24:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 1.71 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
21.10 15:24:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.86 ms
21.10 15:24:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
21.10 15:24:18 DB: SELECT * FROM Badges
21.10 15:24:18 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:18 TIME: core/server.query : 0.64 ms
21.10 15:24:25 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf', _type => core/server.query }
21.10 15:24:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'Aimer' AND Password = E'kO2YJdf'
21.10 15:24:25 QUEUE: vdl.0 (thread) response core/server.query
21.10 15:24:25 TIME: core/server.query : 2.62 ms
21.10 15:24:25 NET: vdl.0 (thread) request core/user.isOnlineID { id => 76, _type => core/user.isOnlineID }
21.10 15:24:25 QUEUE: vdl.0 (thread) response core/user.isOnlineID
21.10 15:24:25 TIME: core/user.isOnlineID : 0.07 ms
21.10 15:24:25 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 76, _type => core/cache.get }
21.10 15:24:25 READDB: SELECT * FROM Users WHERE ID = 76
21.10 15:24:25 QUEUE: vdl.0 (thread) response core/cache.get
21.10 15:24:25 TIME: core/cache.get : 3.64 ms
21.10 15:24:25 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 76, _type => core/cache.get }
21.10 15:24:25 READDB: SELECT * FROM UserQuests WHERE ID = 76
21.10 15:24:25 QUEUE: vdl.0 (thread) response core/cache.get
21.10 15:24:25 TIME: core/cache.get : 1.2 ms
21.10 15:24:25 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 76, _type => core/user.loginPost, ipAddr => 172.16.35.23 }
21.10 15:24:25 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
21.10 15:24:25 TIME: core/user.loginPost : 0.1 ms
21.10 15:24:27 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 76, _type => vdl/cache.user.getData }
21.10 15:24:27 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => 1993, email => rabpoll1@ya.ru }, errorCode => ok, _type => vdl/cache.user.getData }
21.10 15:24:27 TIME: vdl/cache.user.getData : 0.35 ms
21.10 15:24:33 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 76, _type => core/cache.update }
21.10 15:24:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 15:24:33 TIME: core/cache.update : 0.09 ms
21.10 15:24:34 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477046687,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}' WHERE ID = 76
21.10 15:25:18 TIMER: Clans cache...
21.10 15:25:18 TIMER: Clans cache: 0ms
21.10 15:25:18 TIMER: Check tournament...
21.10 15:25:18 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:25' OR rounddate = '2016-21-10 15:25'
21.10 15:25:18 TIMER: Check tournament: 0ms
21.10 15:25:18 TIMER: Clans cache...
21.10 15:25:18 TIMER: Clans cache: 0ms
21.10 15:25:18 TIMER: Check tournament...
21.10 15:25:18 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:26' OR rounddate = '2016-21-10 15:26'
21.10 15:25:18 TIMER: Check tournament: 1ms
21.10 15:25:18 TIMER: Clans cache...
21.10 15:25:18 TIMER: Clans cache: 0ms
21.10 15:25:18 TIMER: Check tournament...
21.10 15:25:18 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:27' OR rounddate = '2016-21-10 15:27'
21.10 15:25:18 TIMER: Check tournament: 1ms
21.10 15:25:18 TIMER: Clans cache...
21.10 15:25:18 TIMER: Clans cache: 0ms
21.10 15:25:18 TIMER: Check tournament...
21.10 15:25:18 DB: SELECT * FROM tournament WHERE startdate = '2016-21-10 15:28' OR rounddate = '2016-21-10 15:28'
21.10 15:25:18 TIMER: Check tournament: 1ms
21.10 15:25:18 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true, _type => core/server.query }
21.10 15:25:18 DB: SELECT id FROM battle WHERE firstid=76 OR secondid=76 AND finished <> true
21.10 15:25:18 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 57 }}, errorCode => ok, _type => core/server.query }
21.10 15:25:18 TIME: core/server.query : 1.14 ms
21.10 15:25:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 57, _type => vdl/cache.battle.infoRoom }
21.10 15:25:18 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
21.10 15:25:18 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
21.10 15:25:18 STATS: cache [battle], database [241 calls, 0 reads, 0 writes]
21.10 15:25:18 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
21.10 15:25:18 READDB: SELECT * FROM Battle WHERE ID = 57
21.10 15:25:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 76, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
21.10 15:25:18 TIME: vdl/cache.battle.infoRoom : 1.48 ms
21.10 15:25:18 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 57, _type => vdl/cache.battle.deleteRoom }
21.10 15:25:18 ROOM: deleted room 57
21.10 15:25:18 DB: DELETE FROM Battle WHERE ID = 57
21.10 15:25:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
21.10 15:25:18 TIME: vdl/cache.battle.deleteRoom : 21.05 ms
21.10 15:25:18 NET: vdl.0 (thread) request core/user.sendTo { id => 2, _type => core/user.sendTo, msg => { _type => battle.end } }
21.10 15:25:18 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
21.10 15:25:18 TIME: core/user.sendTo : 0.06 ms
21.10 15:25:18 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 76, _type => core/cache.update }
21.10 15:25:18 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
21.10 15:25:18 STATS: cache [user], segments [5 calls, 1 hits, 2 misses]
21.10 15:25:18 STATS: cache [user], database [241 calls, 1 reads, 1 writes]
21.10 15:25:18 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
21.10 15:25:18 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.35 ms]
21.10 15:25:18 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.08 ms]
21.10 15:25:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
21.10 15:25:18 TIME: core/cache.update : 0.23 ms
21.10 15:25:18 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 76, _type => core/cache.update }
21.10 15:25:18 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
21.10 15:25:18 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
21.10 15:25:18 STATS: cache [questdata], database [241 calls, 1 reads, 0 writes]
21.10 15:25:18 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
21.10 15:25:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
21.10 15:25:18 TIME: core/cache.update : 0.21 ms
21.10 15:25:18 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 76, _type => core/user.logoutPost }
21.10 15:25:18 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
21.10 15:25:18 TIME: core/user.logoutPost : 0.07 ms
21.10 15:28:19 WRITEDB: UPDATE Users SET name = E'Aimer', deleted = E'false', email = E'', networktype = E'  ', password = E'kO2YJdf', isbanned = E'false', regdate = E'2016-10-19 18:05:38.946809+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477046687,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}' WHERE ID = 76
21.10 15:28:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 76
21.10 15:28:28 BLOCKREMOVE: battle 57 removed
