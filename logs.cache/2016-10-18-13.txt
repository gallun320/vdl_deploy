18.10 13:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
18.10 13:05:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
18.10 13:05:23 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
18.10 13:05:23 TIME: core/server.query : 31.61 ms
18.10 13:05:23 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
18.10 13:05:23 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
18.10 13:05:23 TIME: core/user.isOnlineID : 0.16 ms
18.10 13:05:23 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
18.10 13:05:23 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
18.10 13:05:23 STATS: cache [user], segments [6 calls, 2 hits, 3 misses]
18.10 13:05:23 STATS: cache [user], database [1384 calls, 2 reads, 1 writes]
18.10 13:05:23 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
18.10 13:05:23 READDB: SELECT * FROM Users WHERE ID = 36
18.10 13:05:23 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 3.27 ms]
18.10 13:05:23 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.22 ms]
18.10 13:05:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
18.10 13:05:23 TIME: core/cache.get : 3.38 ms
18.10 13:05:23 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
18.10 13:05:23 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
18.10 13:05:23 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
18.10 13:05:23 STATS: cache [questdata], database [1384 calls, 0 reads, 0 writes]
18.10 13:05:23 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
18.10 13:05:23 READDB: SELECT * FROM UserQuests WHERE ID = 36
18.10 13:05:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
18.10 13:05:23 TIME: core/cache.get : 1.49 ms
18.10 13:05:23 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 13:05:23 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
18.10 13:05:23 TIME: core/user.loginPost : 0.12 ms
18.10 13:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 36 AND Date = 'today'::timestamp, _type => core/server.query }
18.10 13:05:23 DB: SELECT ID FROM TempUserLogins WHERE UserID = 36 AND Date = 'today'::timestamp
18.10 13:05:23 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 13:05:23 TIME: core/server.query : 2.86 ms
18.10 13:05:23 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (36, 'today'::timestamp)
18.10 13:05:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 292, lastLoadDate => 1019 } }}, type => user, unlock => false, id => 36, _type => core/cache.update }
18.10 13:05:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 13:05:30 TIME: core/cache.update : 0.3 ms
18.10 13:05:30 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 36
18.10 13:06:52 TIMER: Starting timer...
18.10 13:06:52 TIMER: Timer running...
18.10 13:06:52 DB: SELECT * FROM GameVars
18.10 13:06:52 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.10 13:06:52 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.10 13:06:52 DB: SELECT * FROM Shops WHERE ID = 1
18.10 13:06:52 TEMP: load ./tmp/quest_daily_ids
18.10 13:06:52 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
18.10 13:06:52 TEMP: save ./tmp/quest_daily_ids
18.10 13:06:52 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
18.10 13:06:52 QUEUE: vdl.0 (thread) response server.login
18.10 13:06:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
18.10 13:06:52 DB: SELECT * FROM LocalizationStrings
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 49.38 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM GameVars
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 1.57 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 1.99 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 4.71 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 2 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 3.52 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/quest.getDaily
18.10 13:06:53 TIME: core/quest.getDaily : 0.08 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM UserAttributeTypes
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 1.77 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM UserVariableTypes
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 1.37 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
18.10 13:06:53 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 4.02 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM ItemGroups
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 1.52 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM Bundles ORDER BY ID
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 1.47 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM BundleItems ORDER BY ID
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 4.02 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/shop.getList
18.10 13:06:53 TIME: core/shop.getList : 0.18 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM EffectAttributeTypes
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 2.47 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM Effects
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 1.91 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
18.10 13:06:53 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 2.85 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
18.10 13:06:53 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 2.2 ms
18.10 13:06:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
18.10 13:06:53 DB: SELECT * FROM Badges
18.10 13:06:53 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:06:53 TIME: core/server.query : 1.67 ms
18.10 13:06:53 TIMER: Clans cache...
18.10 13:06:53 TIMER: Clans cache: 0ms
18.10 13:06:53 TIMER: Check tournament...
18.10 13:06:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:07' AND status = 'starting'
18.10 13:06:53 TIMER: Check tournament: 2ms
18.10 13:06:53 TIMER: Clans cache...
18.10 13:06:53 TIMER: Clans cache: 0ms
18.10 13:06:53 TIMER: Check tournament...
18.10 13:06:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:08' AND status = 'starting'
18.10 13:06:53 TIMER: Check tournament: 2ms
18.10 13:06:53 TIMER: Clans cache...
18.10 13:06:53 TIMER: Clans cache: 0ms
18.10 13:06:53 TIMER: Check tournament...
18.10 13:06:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:09' AND status = 'starting'
18.10 13:06:53 TIMER: Check tournament: 2ms
18.10 13:06:53 TIMER: Clans cache...
18.10 13:06:53 TIMER: Clans cache: 0ms
18.10 13:06:53 TIMER: Check tournament...
18.10 13:06:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:10' AND status = 'starting'
18.10 13:06:53 TIMER: Check tournament: 2ms
18.10 13:11:18 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
18.10 13:11:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
18.10 13:11:18 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:11:18 TIME: core/server.query : 3.91 ms
18.10 13:11:18 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
18.10 13:11:18 QUEUE: vdl.0 (thread) response core/user.isOnlineID
18.10 13:11:18 TIME: core/user.isOnlineID : 0.11 ms
18.10 13:11:18 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
18.10 13:11:18 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
18.10 13:11:18 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
18.10 13:11:18 STATS: cache [user], database [266 calls, 0 reads, 0 writes]
18.10 13:11:18 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
18.10 13:11:18 READDB: SELECT * FROM Users WHERE ID = 36
18.10 13:11:18 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 7.01 ms]
18.10 13:11:18 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
18.10 13:11:18 QUEUE: vdl.0 (thread) response core/cache.get
18.10 13:11:18 TIME: core/cache.get : 7.28 ms
18.10 13:11:18 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
18.10 13:11:18 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
18.10 13:11:18 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
18.10 13:11:18 STATS: cache [questdata], database [266 calls, 0 reads, 0 writes]
18.10 13:11:18 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
18.10 13:11:18 READDB: SELECT * FROM UserQuests WHERE ID = 36
18.10 13:11:18 QUEUE: vdl.0 (thread) response core/cache.get
18.10 13:11:18 TIME: core/cache.get : 4.36 ms
18.10 13:11:18 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
18.10 13:11:18 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
18.10 13:11:18 TIME: core/user.loginPost : 0.27 ms
18.10 13:11:28 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
18.10 13:11:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 13:11:28 TIME: core/cache.update : 0.21 ms
18.10 13:11:29 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 36
18.10 13:11:49 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
18.10 13:11:49 DB: SELECT * FROM tournament
18.10 13:11:49 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
18.10 13:11:49 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
18.10 13:11:49 STATS: cache [tournament], database [297 calls, 0 reads, 0 writes]
18.10 13:11:49 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
18.10 13:11:49 READDB: SELECT * FROM Tournament WHERE ID = 1
18.10 13:11:49 DB: SELECT name FROM users WHERE id = 36
18.10 13:11:49 DB: SELECT name FROM users WHERE id = 37
18.10 13:11:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
18.10 13:11:49 TIME: vdl/cache.tournament.getAvailableTournament : 12.05 ms
18.10 13:11:53 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
18.10 13:11:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
18.10 13:11:53 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.44 ms
18.10 13:11:53 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
18.10 13:11:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
18.10 13:11:53 TIME: vdl/cache.tournament.setGrid : 0.33 ms
18.10 13:11:53 TIMER: Clans cache...
18.10 13:11:53 TIMER: Clans cache: 0ms
18.10 13:11:53 TIMER: Check tournament...
18.10 13:11:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:11' AND status = 'starting'
18.10 13:11:53 TIMER: Check tournament: 1ms
18.10 13:12:03 BLOCKREMOVE: tournament 1 removed
18.10 13:12:53 TIMER: Clans cache...
18.10 13:12:53 TIMER: Clans cache: 0ms
18.10 13:12:53 TIMER: Check tournament...
18.10 13:12:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:12' AND status = 'starting'
18.10 13:12:53 TIMER: Check tournament: 1ms
18.10 13:12:53 TIMER: Clans cache...
18.10 13:12:53 TIMER: Clans cache: 0ms
18.10 13:12:53 TIMER: Check tournament...
18.10 13:12:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:13' AND status = 'starting'
18.10 13:12:53 TIMER: Check tournament: 1ms
18.10 13:12:53 TIMER: Clans cache...
18.10 13:12:53 TIMER: Clans cache: 0ms
18.10 13:12:53 TIMER: Check tournament...
18.10 13:12:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:14' AND status = 'starting'
18.10 13:12:53 TIMER: Check tournament: 1ms
18.10 13:12:53 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
18.10 13:12:53 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
18.10 13:12:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
18.10 13:12:53 TIME: core/server.query : 21.85 ms
18.10 13:12:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
18.10 13:12:53 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
18.10 13:12:53 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
18.10 13:12:53 STATS: cache [battle], database [481 calls, 0 reads, 0 writes]
18.10 13:12:53 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
18.10 13:12:53 READDB: SELECT * FROM Battle WHERE ID = 0
18.10 13:12:53 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
18.10 13:12:53 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
18.10 13:12:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
18.10 13:12:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
18.10 13:12:53 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
18.10 13:12:53 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
18.10 13:12:53 STATS: cache [user], database [481 calls, 1 reads, 1 writes]
18.10 13:12:53 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
18.10 13:12:53 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 5.56 ms]
18.10 13:12:53 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.25 ms]
18.10 13:12:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
18.10 13:12:53 TIME: core/cache.update : 0.77 ms
18.10 13:12:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
18.10 13:12:53 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
18.10 13:12:53 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
18.10 13:12:53 STATS: cache [questdata], database [481 calls, 1 reads, 0 writes]
18.10 13:12:53 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
18.10 13:12:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
18.10 13:12:53 TIME: core/cache.update : 1.27 ms
18.10 13:12:53 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
18.10 13:12:53 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
18.10 13:12:53 TIME: core/user.logoutPost : 0.33 ms
18.10 13:14:54 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}' WHERE ID = 36
18.10 13:14:54 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
18.10 13:15:04 BLOCKREMOVE: user 36 removed
18.10 13:15:04 BLOCKREMOVE: questdata 36 removed
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:15' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:16' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:17' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 0ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:18' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 2ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:19' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:20' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 0ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:21' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:22' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:23' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:24' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:25' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:26' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:27' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 2ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:28' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 TIMER: Check tournament...
18.10 13:15:53 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:29' AND status = 'starting'
18.10 13:15:53 TIMER: Check tournament: 1ms
18.10 13:15:53 TIMER: Clans cache...
18.10 13:15:53 TIMER: Clans cache: 0ms
18.10 13:15:53 18.10 13:40:13 TIMER: Starting timer...
18.10 13:40:13 DB: SELECT * FROM GameVars
18.10 13:40:13 TIMER: Timer running...
18.10 13:40:13 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.10 13:40:13 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.10 13:40:13 DB: SELECT * FROM Shops WHERE ID = 1
18.10 13:40:13 TEMP: load ./tmp/quest_daily_ids
18.10 13:40:13 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
18.10 13:40:13 TEMP: save ./tmp/quest_daily_ids
18.10 13:40:13 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
18.10 13:40:13 QUEUE: vdl.0 (thread) response server.login
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM LocalizationStrings
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 32.46 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM GameVars
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 1.33 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 1.99 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 1.73 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 5.22 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 3 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/quest.getDaily
18.10 13:40:13 TIME: core/quest.getDaily : 0.11 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM UserAttributeTypes
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 2.63 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM UserVariableTypes
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 11.33 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
18.10 13:40:13 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 4.61 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM ItemGroups
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 1.89 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM Bundles ORDER BY ID
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 1.82 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM BundleItems ORDER BY ID
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 1.77 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/shop.getList
18.10 13:40:13 TIME: core/shop.getList : 0.12 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM EffectAttributeTypes
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 2.01 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM Effects
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 1.61 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
18.10 13:40:13 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 4.37 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
18.10 13:40:13 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 4.82 ms
18.10 13:40:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
18.10 13:40:13 DB: SELECT * FROM Badges
18.10 13:40:13 QUEUE: vdl.0 (thread) response core/server.query
18.10 13:40:13 TIME: core/server.query : 1.97 ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:41' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:42' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 3ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:43' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:44' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:45' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:46' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:47' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:48' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:49' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:50' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:51' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:52' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:53' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:54' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:55' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:56' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:57' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 2ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:58' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 13:59' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 14:00' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
18.10 13:40:13 TIMER: Clans cache...
18.10 13:40:13 TIMER: Clans cache: 0ms
18.10 13:40:13 TIMER: Check tournament...
18.10 13:40:13 DB: SELECT * FROM tournament WHERE startdate = '2016-18-10 14:01' AND status = 'starting'
18.10 13:40:13 TIMER: Check tournament: 1ms
