14.10 13:01:00 TIMER: Starting timer...
14.10 13:01:00 TIMER: Timer running...
14.10 13:01:00 DB: SELECT * FROM GameVars
14.10 13:01:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 13:01:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 13:01:00 DB: SELECT * FROM Shops WHERE ID = 1
14.10 13:01:00 TEMP: load ./tmp/quest_daily_ids
14.10 13:01:00 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 13:01:00 TEMP: save ./tmp/quest_daily_ids
14.10 13:01:00 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 13:01:00 QUEUE: vdl.0 (thread) response server.login
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM LocalizationStrings
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 7.1 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM GameVars
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.48 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.8 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.38 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.47 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 1.08 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 13:01:00 TIME: core/quest.getDaily : 0.02 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM UserAttributeTypes
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.51 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM UserVariableTypes
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.39 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 13:01:00 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 1.12 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM ItemGroups
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.4 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM Bundles ORDER BY ID
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.78 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.57 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 13:01:00 TIME: core/shop.getList : 0.05 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM EffectAttributeTypes
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.37 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM Effects
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.33 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 13:01:00 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.98 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 13:01:00 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.79 ms
14.10 13:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 13:01:00 DB: SELECT * FROM Badges
14.10 13:01:00 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:00 TIME: core/server.query : 0.34 ms
14.10 13:01:26 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 13:01:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 13:01:26 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:01:26 TIME: core/server.query : 2.69 ms
14.10 13:01:26 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 13:01:26 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 13:01:26 TIME: core/user.isOnlineID : 0.2 ms
14.10 13:01:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 13:01:26 READDB: SELECT * FROM Users WHERE ID = 34
14.10 13:01:26 QUEUE: vdl.0 (thread) response core/cache.get
14.10 13:01:26 TIME: core/cache.get : 4.01 ms
14.10 13:01:26 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 13:01:26 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 13:01:26 QUEUE: vdl.0 (thread) response core/cache.get
14.10 13:01:26 TIME: core/cache.get : 1.5 ms
14.10 13:01:26 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 13:01:26 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 13:01:26 TIME: core/user.loginPost : 0.16 ms
14.10 13:01:32 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 13:01:32 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 13:01:32 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 13:01:32 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 13:01:32 TIME: vdl/cache.tournament.getAvailableTournament : 3.6 ms
14.10 13:01:35 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 13:01:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 13:01:35 TIME: core/cache.update : 0.19 ms
14.10 13:01:36 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 13:01:42 BLOCKREMOVE: tournament 1 removed
14.10 13:02:00 TIMER: Clans cache...
14.10 13:02:00 TIMER: Clans cache: 0ms
14.10 13:02:00 TIMER: Clans cache...
14.10 13:02:00 TIMER: Clans cache: 0ms
14.10 13:02:00 TIMER: Clans cache...
14.10 13:02:00 TIMER: Clans cache: 0ms
14.10 13:02:00 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 13:02:00 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 13:02:00 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 13:02:00 TIME: core/server.query : 2.04 ms
14.10 13:02:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 13:02:00 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 13:02:00 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 13:02:00 STATS: cache [battle], database [240 calls, 0 reads, 0 writes]
14.10 13:02:00 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 13:02:00 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 13:02:00 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 13:02:00 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
14.10 13:02:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 13:02:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 13:02:00 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 13:02:00 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
14.10 13:02:00 STATS: cache [user], database [240 calls, 1 reads, 1 writes]
14.10 13:02:00 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 13:02:00 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.66 ms]
14.10 13:02:00 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.19 ms]
14.10 13:02:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 13:02:00 TIME: core/cache.update : 0.64 ms
14.10 13:02:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 13:02:00 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 13:02:00 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
14.10 13:02:00 STATS: cache [questdata], database [240 calls, 1 reads, 0 writes]
14.10 13:02:00 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 13:02:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 13:02:00 TIME: core/cache.update : 0.66 ms
14.10 13:02:00 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 13:02:00 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 13:02:00 TIME: core/user.logoutPost : 0.14 ms
14.10 13:02:00 TIMER: Clans cache...
14.10 13:02:00 TIMER: Clans cache: 0ms
14.10 13:02:00 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 13:02:00 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 13:05:10 BLOCKREMOVE: user 34 removed
14.10 13:05:10 BLOCKREMOVE: questdata 34 removed
14.10 13:06:00 TIMER: Clans cache...
14.10 13:06:00 TIMER: Clans cache: 0ms
14.10 13:06:00 TIMER: Clans cache...
14.10 13:06:00 TIMER: Clans cache: 0ms
14.10 13:07:48 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 13:07:48 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 13:07:48 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 13:07:48 TIME: core/server.query : 3.24 ms
14.10 13:07:48 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 13:07:48 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 13:07:48 TIME: core/user.isOnlineID : 0.13 ms
14.10 13:07:48 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 13:07:48 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 13:07:48 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
14.10 13:07:48 STATS: cache [user], database [408 calls, 1 reads, 2 writes]
14.10 13:07:48 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
14.10 13:07:48 READDB: SELECT * FROM Users WHERE ID = 34
14.10 13:07:48 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.39 ms]
14.10 13:07:48 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.28 ms]
14.10 13:07:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 13:07:48 TIME: core/cache.get : 2.37 ms
14.10 13:07:48 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 13:07:48 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 13:07:48 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
14.10 13:07:48 STATS: cache [questdata], database [408 calls, 1 reads, 1 writes]
14.10 13:07:48 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 13:07:48 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 13:07:48 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 13:07:48 TIME: core/cache.get : 1.23 ms
14.10 13:07:48 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 13:07:48 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 13:07:48 TIME: core/user.loginPost : 0.17 ms
14.10 13:07:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 13:07:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 13:07:55 TIME: core/cache.update : 0.17 ms
14.10 13:07:55 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 13:08:00 TIMER: Clans cache...
14.10 13:08:00 TIMER: Clans cache: 0ms
14.10 13:08:00 TIMER: Clans cache...
14.10 13:08:00 TIMER: Clans cache: 0ms
14.10 13:08:00 TIMER: Clans cache...
14.10 13:08:00 TIMER: Clans cache: 0ms
14.10 13:08:00 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 13:08:00 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 13:08:00 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 13:08:00 TIME: core/server.query : 4.07 ms
14.10 13:08:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 13:08:00 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
14.10 13:08:00 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
14.10 13:08:00 STATS: cache [battle], database [600 calls, 1 reads, 0 writes]
14.10 13:08:00 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 13:08:00 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 13:08:00 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 13:08:00 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
14.10 13:08:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 13:08:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 13:08:00 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 13:08:00 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
14.10 13:08:00 STATS: cache [user], database [600 calls, 2 reads, 3 writes]
14.10 13:08:00 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
14.10 13:08:00 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.05 ms]
14.10 13:08:00 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.28 ms]
14.10 13:08:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 13:08:00 TIME: core/cache.update : 0.95 ms
14.10 13:08:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 13:08:00 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 13:08:00 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
14.10 13:08:00 STATS: cache [questdata], database [600 calls, 2 reads, 1 writes]
14.10 13:08:00 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
14.10 13:08:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 13:08:00 TIME: core/cache.update : 0.48 ms
14.10 13:08:00 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 13:08:00 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 13:08:00 TIME: core/user.logoutPost : 0.11 ms
14.10 13:08:00 TIMER: Clans cache...
14.10 13:08:00 TIMER: Clans cache: 0ms
14.10 13:08:00 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 13:08:00 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 13:11:10 BLOCKREMOVE: user 34 removed
14.10 13:11:10 BLOCKREMOVE: questdata 34 removed
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:12:00 TIMER: Clans cache...
14.10 13:12:00 TIMER: Clans cache: 0ms
14.10 13:29:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 13:29:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 13:29:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid34, networkid => , isbanned => false, id => 34 }}, errorCode => ok, _type => core/server.query }
14.10 13:29:44 TIME: core/server.query : 2.44 ms
14.10 13:29:44 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 13:29:44 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
14.10 13:29:44 TIME: core/user.isOnlineID : 0.38 ms
14.10 13:29:44 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 13:29:44 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 13:29:44 STATS: cache [user], segments [11 calls, 6 hits, 4 misses]
14.10 13:29:44 STATS: cache [user], database [1724 calls, 2 reads, 4 writes]
14.10 13:29:44 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
14.10 13:29:44 READDB: SELECT * FROM Users WHERE ID = 34
14.10 13:29:44 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 2.07 ms]
14.10 13:29:44 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.29 ms]
14.10 13:29:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid34, deleted => false, email => , networktype =>   , password => uid34, isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476437991, lastLoginDate => 288, lastLoadDate => 1015 }, effects => { list => [] } }}, version => 0, id => 34 } }
14.10 13:29:44 TIME: core/cache.get : 2.75 ms
14.10 13:29:44 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 13:29:44 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
14.10 13:29:44 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
14.10 13:29:44 STATS: cache [questdata], database [1724 calls, 2 reads, 2 writes]
14.10 13:29:44 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
14.10 13:29:44 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 13:29:44 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 34 } }
14.10 13:29:44 TIME: core/cache.get : 2.06 ms
14.10 13:29:44 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 13:29:44 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 13:29:44 TIME: core/user.loginPost : 0.14 ms
14.10 13:29:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 13:29:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 13:29:50 TIME: core/cache.update : 0.14 ms
14.10 13:29:50 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 13:29:50 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 13:29:50 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 13:29:50 STATS: cache [tournament], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 13:29:50 STATS: cache [tournament], segments [2 calls, 0 hits, 1 misses]
14.10 13:29:50 STATS: cache [tournament], database [1731 calls, 1 reads, 0 writes]
14.10 13:29:50 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 13:29:50 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 13:29:50 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 13:29:50 TIME: vdl/cache.tournament.getAvailableTournament : 3.25 ms
14.10 13:30:00 TIMER: Clans cache...
14.10 13:30:00 TIMER: Clans cache: 0ms
14.10 13:30:01 BLOCKREMOVE: tournament 1 removed
14.10 13:36:01 TIMER: Starting timer...
14.10 13:36:01 TIMER: Timer running...
14.10 13:36:01 DB: SELECT * FROM GameVars
14.10 13:36:01 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 13:36:01 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 13:36:01 DB: SELECT * FROM Shops WHERE ID = 1
14.10 13:36:01 TEMP: load ./tmp/quest_daily_ids
14.10 13:36:01 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 13:36:01 TEMP: save ./tmp/quest_daily_ids
14.10 13:36:01 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 13:36:01 QUEUE: vdl.0 (thread) response server.login
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM LocalizationStrings
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 7.7 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM GameVars
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.63 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 1.18 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.56 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.87 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 1.23 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 13:36:01 TIME: core/quest.getDaily : 0.02 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM UserAttributeTypes
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.43 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM UserVariableTypes
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.4 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 13:36:01 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 1.12 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM ItemGroups
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.57 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM Bundles ORDER BY ID
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.48 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.88 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 13:36:01 TIME: core/shop.getList : 0.04 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM EffectAttributeTypes
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.41 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM Effects
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.49 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 13:36:01 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 1.07 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 13:36:01 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.83 ms
14.10 13:36:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 13:36:01 DB: SELECT * FROM Badges
14.10 13:36:01 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:36:01 TIME: core/server.query : 0.51 ms
14.10 13:36:01 TIMER: Clans cache...
14.10 13:36:01 TIMER: Clans cache: 0ms
14.10 13:37:36 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34', _type => core/server.query }
14.10 13:37:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid34' AND Password = E'uid34'
14.10 13:37:36 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:37:36 TIME: core/server.query : 2.28 ms
14.10 13:37:36 NET: vdl.0 (thread) request core/user.isOnlineID { id => 34, _type => core/user.isOnlineID }
14.10 13:37:36 QUEUE: vdl.0 (thread) response core/user.isOnlineID
14.10 13:37:36 TIME: core/user.isOnlineID : 0.11 ms
14.10 13:37:36 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 34, _type => core/cache.get }
14.10 13:37:36 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 13:37:36 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
14.10 13:37:36 STATS: cache [user], database [96 calls, 0 reads, 0 writes]
14.10 13:37:36 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 13:37:36 READDB: SELECT * FROM Users WHERE ID = 34
14.10 13:37:36 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.05 ms]
14.10 13:37:36 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
14.10 13:37:36 QUEUE: vdl.0 (thread) response core/cache.get
14.10 13:37:36 TIME: core/cache.get : 4.23 ms
14.10 13:37:36 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 34, _type => core/cache.get }
14.10 13:37:36 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 13:37:36 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
14.10 13:37:36 STATS: cache [questdata], database [96 calls, 0 reads, 0 writes]
14.10 13:37:36 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 13:37:36 READDB: SELECT * FROM UserQuests WHERE ID = 34
14.10 13:37:36 QUEUE: vdl.0 (thread) response core/cache.get
14.10 13:37:36 TIME: core/cache.get : 1.2 ms
14.10 13:37:36 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 34, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
14.10 13:37:36 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
14.10 13:37:36 TIME: core/user.loginPost : 0.1 ms
14.10 13:37:43 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
14.10 13:37:43 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
14.10 13:37:43 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 13:37:43 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
14.10 13:37:43 STATS: cache [tournament], database [102 calls, 0 reads, 0 writes]
14.10 13:37:43 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
14.10 13:37:43 READDB: SELECT * FROM Tournament WHERE ID = 1
14.10 13:37:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => null, battleActive => null, startdate => 2016-14-10 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
14.10 13:37:43 TIME: vdl/cache.tournament.getAvailableTournament : 3.06 ms
14.10 13:37:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 34, _type => core/cache.update }
14.10 13:37:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 13:37:46 TIME: core/cache.update : 0.1 ms
14.10 13:37:47 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 13:37:53 BLOCKREMOVE: tournament 1 removed
14.10 13:38:01 TIMER: Clans cache...
14.10 13:38:01 TIMER: Clans cache: 0ms
14.10 13:38:01 TIMER: Clans cache...
14.10 13:38:01 TIMER: Clans cache: 0ms
14.10 13:38:01 TIMER: Clans cache...
14.10 13:38:01 TIMER: Clans cache: 0ms
14.10 13:38:01 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true, _type => core/server.query }
14.10 13:38:01 DB: SELECT id FROM battle WHERE firstid=34 OR secondid=34 AND finished <> true
14.10 13:38:01 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
14.10 13:38:01 TIME: core/server.query : 1.77 ms
14.10 13:38:01 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
14.10 13:38:01 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
14.10 13:38:01 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
14.10 13:38:01 STATS: cache [battle], database [300 calls, 0 reads, 0 writes]
14.10 13:38:01 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
14.10 13:38:01 READDB: SELECT * FROM Battle WHERE ID = 0
14.10 13:38:01 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
14.10 13:38:01 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 111
Called from modules/VDLCache.hx line 104
Called from modules/VDLCache.hx line 74
Called from snipe/cache/CacheServer.hx line 487
14.10 13:38:01 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
14.10 13:38:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 34, _type => core/cache.update }
14.10 13:38:01 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 13:38:01 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
14.10 13:38:01 STATS: cache [user], database [300 calls, 1 reads, 1 writes]
14.10 13:38:01 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
14.10 13:38:01 STATS: cache manager [1], get [2 calls, total 0.01 sec spent, avg 2.6 ms]
14.10 13:38:01 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.24 ms]
14.10 13:38:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
14.10 13:38:01 TIME: core/cache.update : 0.78 ms
14.10 13:38:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 34, _type => core/cache.update }
14.10 13:38:01 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
14.10 13:38:01 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
14.10 13:38:01 STATS: cache [questdata], database [300 calls, 1 reads, 0 writes]
14.10 13:38:01 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
14.10 13:38:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
14.10 13:38:01 TIME: core/cache.update : 0.67 ms
14.10 13:38:01 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 34, _type => core/user.logoutPost }
14.10 13:38:01 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
14.10 13:38:01 TIME: core/user.logoutPost : 0.17 ms
14.10 13:38:01 TIMER: Clans cache...
14.10 13:38:01 TIMER: Clans cache: 0ms
14.10 13:38:01 WRITEDB: UPDATE Users SET name = E'uid34', deleted = E'false', email = E'', networktype = E'  ', password = E'uid34', isbanned = E'false', regdate = E'2016-10-14 12:39:51.725362+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}' WHERE ID = 34
14.10 13:38:01 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 34
14.10 13:41:11 BLOCKREMOVE: user 34 removed
14.10 13:41:11 BLOCKREMOVE: questdata 34 removed
14.10 13:46:31 TIMER: Starting timer...
14.10 13:46:31 TIMER: Timer running...
14.10 13:46:31 DB: SELECT * FROM GameVars
14.10 13:46:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 13:46:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 13:46:31 DB: SELECT * FROM Shops WHERE ID = 1
14.10 13:46:31 TEMP: load ./tmp/quest_daily_ids
14.10 13:46:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 13:46:31 TEMP: save ./tmp/quest_daily_ids
14.10 13:46:31 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 13:46:31 QUEUE: vdl.0 (thread) response server.login
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 13:46:31 DB: SELECT * FROM LocalizationStrings
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:46:31 TIME: core/server.query : 7.06 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 13:46:31 DB: SELECT * FROM GameVars
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:46:31 TIME: core/server.query : 0.51 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 13:46:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:46:31 TIME: core/server.query : 0.65 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 13:46:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:46:31 TIME: core/server.query : 0.48 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 13:46:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:46:31 TIME: core/server.query : 0.49 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 13:46:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:46:31 TIME: core/server.query : 0.86 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 13:46:31 TIME: core/quest.getDaily : 0.02 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 13:46:31 DB: SELECT * FROM UserAttributeTypes
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:46:31 TIME: core/server.query : 0.3 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 13:46:31 DB: SELECT * FROM UserVariableTypes
14.10 13:46:31 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:46:31 TIME: core/server.query : 0.41 ms
14.10 13:46:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 13:46:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.14.10 13:48:13 TIMER: Starting timer...
14.10 13:48:13 TIMER: Timer running...
14.10 13:48:13 DB: SELECT * FROM GameVars
14.10 13:48:13 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 13:48:13 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 13:48:13 DB: SELECT * FROM Shops WHERE ID = 1
14.10 13:48:13 TEMP: load ./tmp/quest_daily_ids
14.10 13:48:13 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 13:48:13 TEMP: save ./tmp/quest_daily_ids
14.10 13:48:13 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 13:48:13 QUEUE: vdl.0 (thread) response server.login
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 13:48:13 DB: SELECT * FROM LocalizationStrings
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:13 TIME: core/server.query : 6.4 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 13:48:13 DB: SELECT * FROM GameVars
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:13 TIME: core/server.query : 0.46 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 13:48:13 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:13 TIME: core/server.query : 0.71 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 13:48:13 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:13 TIME: core/server.query : 0.34 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 13:48:13 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:13 TIME: core/server.query : 0.71 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 13:48:13 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:13 TIME: core/server.query : 0.73 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 13:48:13 TIME: core/quest.getDaily : 0.02 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 13:48:13 DB: SELECT * FROM UserAttributeTypes
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:13 TIME: core/server.query : 0.3 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 13:48:13 DB: SELECT * FROM UserVariableTypes
14.10 13:48:13 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:13 TIME: core/server.query : 0.3 ms
14.10 13:48:13 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 13:48:13 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.Ty14.10 13:48:21 TIMER: Starting timer...
14.10 13:48:21 TIMER: Timer running...
14.10 13:48:21 DB: SELECT * FROM GameVars
14.10 13:48:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 13:48:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 13:48:21 DB: SELECT * FROM Shops WHERE ID = 1
14.10 13:48:21 TEMP: load ./tmp/quest_daily_ids
14.10 13:48:21 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
14.10 13:48:21 TEMP: save ./tmp/quest_daily_ids
14.10 13:48:22 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
14.10 13:48:22 QUEUE: vdl.0 (thread) response server.login
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM LocalizationStrings
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 8.99 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM GameVars
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.49 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.65 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.37 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.69 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.76 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/quest.getDaily
14.10 13:48:22 TIME: core/quest.getDaily : 0.02 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM UserAttributeTypes
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.36 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM UserVariableTypes
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.33 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
14.10 13:48:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 1.05 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM ItemGroups
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.37 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM Bundles ORDER BY ID
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.44 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM BundleItems ORDER BY ID
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.37 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/shop.getList
14.10 13:48:22 TIME: core/shop.getList : 0.03 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM EffectAttributeTypes
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.38 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM Effects
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.31 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
14.10 13:48:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.62 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
14.10 13:48:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.52 ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM Badges
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 0.29 ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM tournament WHERE startdate = 2016-14-10 14:10 AND winner = -1 AND status = 'starting', _type => core/server.query }
14.10 13:48:22 DB: SELECT * FROM tournament WHERE startdate = 2016-14-10 14:10 AND winner = -1 AND status = 'starting'
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
14.10 13:48:22 QUEUE: vdl.0 (thread) response core/server.query
14.10 13:48:22 TIME: core/server.query : 18.56 ms
14.10 13:48:22 TIMER: Clans cache...
14.10 13:48:22 TIMER: Clans cache: 0ms
