03.11 19:00:09 TIMER: Clans cache...
03.11 19:00:09 TIMER: Clans cache: 0ms
03.11 19:00:09 TIMER: Check tournament...
03.11 19:00:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:00' OR rounddate = '2016-03-11 19:00' AND status <> 'finished'
03.11 19:00:09 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
03.11 19:00:09 DB: SELECT * FROM battle WHERE endtime >= '1478188.80957024' AND avaliable = true AND finished <> true
03.11 19:00:09 TIMER: Check tournament: 2ms
03.11 19:01:00 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:01:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:01:00 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 19:01:00 TIME: core/server.query : 1.97 ms
03.11 19:01:00 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:01:00 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:01:00 TIME: core/user.isOnlineID : 0.08 ms
03.11 19:01:00 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:01:00 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 19:01:00 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
03.11 19:01:00 STATS: cache [user], database [592 calls, 1 reads, 1 writes]
03.11 19:01:00 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
03.11 19:01:00 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:01:00 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 1.86 ms]
03.11 19:01:00 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.11 ms]
03.11 19:01:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 19:01:00 TIME: core/cache.get : 1.65 ms
03.11 19:01:00 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:01:00 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 19:01:00 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
03.11 19:01:00 STATS: cache [questdata], database [592 calls, 1 reads, 0 writes]
03.11 19:01:00 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
03.11 19:01:00 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:01:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 19:01:00 TIME: core/cache.get : 0.94 ms
03.11 19:01:00 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:01:00 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:01:00 TIME: core/user.loginPost : 0.09 ms
03.11 19:01:09 TIMER: Clans cache...
03.11 19:01:09 TIMER: Clans cache: 0ms
03.11 19:01:09 TIMER: Check tournament...
03.11 19:01:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:01' OR rounddate = '2016-03-11 19:01' AND status <> 'finished'
03.11 19:01:09 DB: SELECT * FROM battle WHERE endtime >= '1478188.86958139' AND avaliable = true AND finished <> true
03.11 19:01:09 TIMER: Check tournament: 2ms
03.11 19:01:09 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:01:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:01:09 TIME: core/cache.update : 0.1 ms
03.11 19:01:10 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:01:13 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 19:01:13 DB: SELECT nextval('Battle_id_seq') AS id
03.11 19:01:13 READDB: SELECT ID FROM Battle WHERE ID = 3
03.11 19:01:13 READDB: INSERT INTO Battle (ID) VALUES (3)
03.11 19:01:13 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:01:13 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
03.11 19:01:13 STATS: cache [battle], database [605 calls, 0 reads, 0 writes]
03.11 19:01:13 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:01:13 READDB: SELECT * FROM Battle WHERE ID = 3
03.11 19:01:13 DB: SELECT name FROM users WHERE id=107
03.11 19:01:13 DB: SELECT name FROM users WHERE id=115
03.11 19:01:13 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 2, battleId => 3, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 19:01:13 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 1, battleId => 3, player => 2 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 19:01:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 19:01:13 TIME: vdl/cache.battle.findRandom : 31.47 ms
03.11 19:01:19 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'115', turnid = E'107', finished = E'false', endtime = E'1481788.8739042', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 3
03.11 19:01:29 BLOCKREMOVE: battle 3 removed
03.11 19:02:09 TIMER: Clans cache...
03.11 19:02:09 TIMER: Clans cache: 0ms
03.11 19:02:09 TIMER: Check tournament...
03.11 19:02:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:02' OR rounddate = '2016-03-11 19:02' AND status <> 'finished'
03.11 19:02:09 DB: SELECT * FROM battle WHERE endtime >= '1478188.92959341' AND avaliable = true AND finished <> true
03.11 19:02:09 TIMER: Check tournament: 1ms
03.11 19:02:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => null, _type => vdl/cache.battle.infoRoom }
03.11 19:02:58 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 19:02:58 STATS: cache [battle], segments [4 calls, 2 hits, 1 misses]
03.11 19:02:58 STATS: cache [battle], database [709 calls, 1 reads, 1 writes]
03.11 19:02:58 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:02:58 READDB: SELECT * FROM Battle WHERE ID = null
03.11 19:02:58 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:02:58 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:02:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:03:09 TIMER: Clans cache...
03.11 19:03:09 TIMER: Clans cache: 0ms
03.11 19:03:09 TIMER: Check tournament...
03.11 19:03:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:03' OR rounddate = '2016-03-11 19:03' AND status <> 'finished'
03.11 19:03:09 DB: SELECT * FROM battle WHERE endtime >= '1478188.98960261' AND avaliable = true AND finished <> true
03.11 19:03:09 TIMER: Check tournament: 2ms
03.11 19:03:09 TIMER: Clans cache...
03.11 19:03:09 TIMER: Clans cache: 0ms
03.11 19:03:09 TIMER: Check tournament...
03.11 19:03:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:04' OR rounddate = '2016-03-11 19:04' AND status <> 'finished'
03.11 19:03:09 DB: SELECT * FROM battle WHERE endtime >= '1478189.04961514' AND avaliable = true AND finished <> true
03.11 19:03:09 TIMER: Check tournament: 1ms
03.11 19:04:17 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 19:04:17 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 19:04:17 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 3 }}, errorCode => ok, _type => core/server.query }
03.11 19:04:17 TIME: core/server.query : 1.22 ms
03.11 19:04:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 3, _type => vdl/cache.battle.infoRoom }
03.11 19:04:17 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 1 not found]
03.11 19:04:17 STATS: cache [battle], segments [5 calls, 2 hits, 2 misses]
03.11 19:04:17 STATS: cache [battle], database [789 calls, 2 reads, 1 writes]
03.11 19:04:17 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:04:17 READDB: SELECT * FROM Battle WHERE ID = 3
03.11 19:04:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 115, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 19:04:17 TIME: vdl/cache.battle.infoRoom : 0.85 ms
03.11 19:04:17 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 3, _type => vdl/cache.battle.deleteRoom }
03.11 19:04:17 ROOM: deleted room 3
03.11 19:04:17 DB: DELETE FROM Battle WHERE ID = 3
03.11 19:04:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
03.11 19:04:17 TIME: vdl/cache.battle.deleteRoom : 18.72 ms
03.11 19:04:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 19:04:17 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:04:17 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
03.11 19:04:17 STATS: cache [user], database [789 calls, 2 reads, 2 writes]
03.11 19:04:17 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
03.11 19:04:17 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.6 ms]
03.11 19:04:17 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.14 ms]
03.11 19:04:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:04:17 TIME: core/cache.update : 0.46 ms
03.11 19:04:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 19:04:17 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:04:17 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
03.11 19:04:17 STATS: cache [questdata], database [789 calls, 2 reads, 0 writes]
03.11 19:04:17 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
03.11 19:04:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:04:17 TIME: core/cache.update : 0.31 ms
03.11 19:04:17 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 19:04:17 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:04:17 TIME: core/user.logoutPost : 0.09 ms
03.11 19:04:18 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:04:18 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 19:04:28 BLOCKREMOVE: user 107 removed
03.11 19:04:28 BLOCKREMOVE: questdata 107 removed
03.11 19:04:28 BLOCKREMOVE: battle 3 removed
03.11 19:05:09 TIMER: Clans cache...
03.11 19:05:09 TIMER: Clans cache: 0ms
03.11 19:05:09 TIMER: Check tournament...
03.11 19:05:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:05' OR rounddate = '2016-03-11 19:05' AND status <> 'finished'
03.11 19:05:09 DB: SELECT * FROM battle WHERE endtime >= '1478189.10962465' AND avaliable = true AND finished <> true
03.11 19:05:09 TIMER: Check tournament: 1ms
03.11 19:05:09 TIMER: Clans cache...
03.11 19:05:09 TIMER: Clans cache: 0ms
03.11 19:05:09 TIMER: Check tournament...
03.11 19:05:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:06' OR rounddate = '2016-03-11 19:06' AND status <> 'finished'
03.11 19:05:09 DB: SELECT * FROM battle WHERE endtime >= '1478189.16963361' AND avaliable = true AND finished <> true
03.11 19:05:09 TIMER: Check tournament: 1ms
03.11 19:05:09 TIMER: Clans cache...
03.11 19:05:09 TIMER: Clans cache: 0ms
03.11 19:05:09 TIMER: Check tournament...
03.11 19:05:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:07' OR rounddate = '2016-03-11 19:07' AND status <> 'finished'
03.11 19:05:09 DB: SELECT * FROM battle WHERE endtime >= '1478189.22964589' AND avaliable = true AND finished <> true
03.11 19:05:09 TIMER: Check tournament: 4ms
03.11 19:08:06 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true, _type => core/server.query }
03.11 19:08:06 DB: SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true
03.11 19:08:06 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 19:08:06 TIME: core/server.query : 0.84 ms
03.11 19:08:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 19:08:06 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 1 not found]
03.11 19:08:06 STATS: cache [battle], segments [7 calls, 3 hits, 3 misses]
03.11 19:08:06 STATS: cache [battle], database [1018 calls, 3 reads, 1 writes]
03.11 19:08:06 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:08:06 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 19:08:06 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:08:06 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:08:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:08:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 115, _type => core/cache.update }
03.11 19:08:06 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:08:06 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
03.11 19:08:06 STATS: cache [user], database [1018 calls, 2 reads, 3 writes]
03.11 19:08:06 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
03.11 19:08:06 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.6 ms]
03.11 19:08:06 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.18 ms]
03.11 19:08:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:08:06 TIME: core/cache.update : 0.48 ms
03.11 19:08:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 115, _type => core/cache.update }
03.11 19:08:06 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:08:06 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
03.11 19:08:06 STATS: cache [questdata], database [1018 calls, 2 reads, 1 writes]
03.11 19:08:06 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
03.11 19:08:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:08:06 TIME: core/cache.update : 0.28 ms
03.11 19:08:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 115, _type => core/user.logoutPost }
03.11 19:08:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:08:06 TIME: core/user.logoutPost : 0.09 ms
03.11 19:08:07 WRITEDB: UPDATE Users SET name = E'uid115', deleted = E'false', email = E'', networktype = E'  ', password = E'uid115', isbanned = E'false', regdate = E'2016-11-03 18:37:16.527174+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 115
03.11 19:08:07 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 115
03.11 19:08:09 TIMER: Clans cache...
03.11 19:08:09 TIMER: Clans cache: 0ms
03.11 19:08:09 TIMER: Check tournament...
03.11 19:08:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:08' OR rounddate = '2016-03-11 19:08' AND status <> 'finished'
03.11 19:08:09 DB: SELECT * FROM battle WHERE endtime >= '1478189.2896549' AND avaliable = true AND finished <> true
03.11 19:08:09 TIMER: Check tournament: 1ms
03.11 19:08:17 BLOCKREMOVE: user 115 removed
03.11 19:08:17 BLOCKREMOVE: questdata 115 removed
03.11 19:08:33 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
03.11 19:08:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
03.11 19:08:33 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid115, networkid => , isbanned => false, id => 115 }}, errorCode => ok, _type => core/server.query }
03.11 19:08:33 TIME: core/server.query : 2.46 ms
03.11 19:08:33 NET: vdl.0 (thread) request core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
03.11 19:08:33 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:08:33 TIME: core/user.isOnlineID : 0.07 ms
03.11 19:08:33 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
03.11 19:08:33 READDB: SELECT * FROM Users WHERE ID = 115
03.11 19:08:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid115, deleted => false, email => , networktype =>   , password => uid115, isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478188735, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 115 } }
03.11 19:08:33 TIME: core/cache.get : 1.33 ms
03.11 19:08:33 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
03.11 19:08:33 READDB: SELECT * FROM UserQuests WHERE ID = 115
03.11 19:08:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 115 } }
03.11 19:08:33 TIME: core/cache.get : 0.95 ms
03.11 19:08:33 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 19:08:33 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:08:33 TIME: core/user.loginPost : 0.11 ms
03.11 19:08:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 115, _type => core/cache.update }
03.11 19:08:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:08:39 TIME: core/cache.update : 0.19 ms
03.11 19:08:39 WRITEDB: UPDATE Users SET name = E'uid115', deleted = E'false', email = E'', networktype = E'  ', password = E'uid115', isbanned = E'false', regdate = E'2016-11-03 18:37:16.527174+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 115
03.11 19:08:50 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 115 }, _type => vdl/cache.battle.findRandom }
03.11 19:08:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 19:08:50 TIME: vdl/cache.battle.findRandom : 0.11 ms
03.11 19:08:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:08:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:08:59 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 19:08:59 TIME: core/server.query : 0.74 ms
03.11 19:08:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:08:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:08:59 TIME: core/user.isOnlineID : 0.09 ms
03.11 19:08:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:08:59 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:08:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 19:08:59 TIME: core/cache.get : 1.06 ms
03.11 19:08:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:08:59 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:08:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 19:08:59 TIME: core/cache.get : 0.55 ms
03.11 19:08:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:08:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:08:59 TIME: core/user.loginPost : 0.06 ms
03.11 19:09:06 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 19:09:06 DB: SELECT nextval('Battle_id_seq') AS id
03.11 19:09:06 READDB: SELECT ID FROM Battle WHERE ID = 4
03.11 19:09:06 READDB: INSERT INTO Battle (ID) VALUES (4)
03.11 19:09:06 READDB: SELECT * FROM Battle WHERE ID = 4
03.11 19:09:06 DB: SELECT name FROM users WHERE id=107
03.11 19:09:06 DB: SELECT name FROM users WHERE id=115
03.11 19:09:06 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 2, battleId => 4, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 19:09:06 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 1, battleId => 4, player => 2 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 19:09:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 19:09:06 TIME: vdl/cache.battle.findRandom : 41.74 ms
03.11 19:09:09 TIMER: Clans cache...
03.11 19:09:09 TIMER: Clans cache: 0ms
03.11 19:09:09 TIMER: Check tournament...
03.11 19:09:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:09' OR rounddate = '2016-03-11 19:09' AND status <> 'finished'
03.11 19:09:09 DB: SELECT * FROM battle WHERE endtime >= '1478189.3496658' AND avaliable = true AND finished <> true
03.11 19:09:09 TIMER: Check tournament: 1ms
03.11 19:09:09 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:09:09 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 19:09:09 STATS: cache [user], segments [16 calls, 7 hits, 8 misses]
03.11 19:09:09 STATS: cache [user], database [1080 calls, 4 reads, 5 writes]
03.11 19:09:09 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
03.11 19:09:09 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.19 ms]
03.11 19:09:09 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.18 ms]
03.11 19:09:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:09:09 TIME: core/cache.update : 0.36 ms
03.11 19:09:09 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:09:11 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'115', turnid = E'107', finished = E'false', endtime = E'1481789.3463114', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 4
03.11 19:09:21 BLOCKREMOVE: battle 4 removed
03.11 19:10:09 TIMER: Clans cache...
03.11 19:10:09 TIMER: Clans cache: 0ms
03.11 19:10:09 TIMER: Check tournament...
03.11 19:10:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:10' OR rounddate = '2016-03-11 19:10' AND status <> 'finished'
03.11 19:10:09 DB: SELECT * FROM battle WHERE endtime >= '1478189.40967506' AND avaliable = true AND finished <> true
03.11 19:10:09 TIMER: Check tournament: 1ms
03.11 19:10:09 TIMER: Clans cache...
03.11 19:10:09 TIMER: Clans cache: 0ms
03.11 19:10:09 TIMER: Check tournament...
03.11 19:10:09 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:11' OR rounddate = '2016-03-11 19:11' AND status <> 'finished'
03.11 19:10:09 DB: SELECT * FROM battle WHERE endtime >= '1478189.46968431' AND avaliable = true AND finished <> true
03.11 19:10:09 TIMER: Check tournament: 1ms
03.11 19:11:12 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => null, _type => vdl/cache.battle.infoRoom }
03.11 19:11:12 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 2 not found]
03.11 19:11:12 STATS: cache [battle], segments [11 calls, 5 hits, 5 misses]
03.11 19:11:12 STATS: cache [battle], database [1203 calls, 5 reads, 2 writes]
03.11 19:11:12 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:11:12 READDB: SELECT * FROM Battle WHERE ID = null
03.11 19:11:12 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:11:12 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:11:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:15:56 TIMER: Starting timer...
03.11 19:15:56 TIMER: Timer running...
03.11 19:15:56 DB: SELECT * FROM GameVars
03.11 19:15:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 19:15:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 19:15:56 DB: SELECT * FROM Shops WHERE ID = 1
03.11 19:15:56 TEMP: load ./tmp/quest_daily_ids
03.11 19:15:56 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
03.11 19:15:56 TEMP: save ./tmp/quest_daily_ids
03.11 19:15:56 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 19:15:56 QUEUE: vdl.0 (thread) response server.login
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM LocalizationStrings
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 14.52 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM GameVars
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.82 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.94 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.53 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 1.03 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 1.08 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/quest.getDaily
03.11 19:15:56 TIME: core/quest.getDaily : 0.05 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM UserAttributeTypes
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.49 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM UserVariableTypes
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.53 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 19:15:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 1.46 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM ItemGroups
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.46 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM Bundles ORDER BY ID
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.72 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.69 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/shop.getList
03.11 19:15:56 TIME: core/shop.getList : 0.03 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM EffectAttributeTypes
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.76 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM Effects
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 0.66 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 19:15:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 1.28 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 19:15:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 1.37 ms
03.11 19:15:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 19:15:56 DB: SELECT * FROM Badges
03.11 19:15:56 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:15:56 TIME: core/server.query : 1.1 ms
03.11 19:15:56 TIMER: Clans cache...
03.11 19:15:56 TIMER: Clans cache: 0ms
03.11 19:15:56 TIMER: Check tournament...
03.11 19:15:56 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:16' OR rounddate = '2016-03-11 19:16' AND status <> 'finished'
03.11 19:15:56 DB: SELECT * FROM battle WHERE endtime >= '1478189.81689976' AND avaliable = true AND finished <> true
03.11 19:15:56 TIMER: Check tournament: 1ms
03.11 19:15:56 TIMER: Clans cache...
03.11 19:15:56 TIMER: Clans cache: 0ms
03.11 19:15:56 TIMER: Check tournament...
03.11 19:15:56 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:17' OR rounddate = '2016-03-11 19:17' AND status <> 'finished'
03.11 19:15:56 DB: SELECT * FROM battle WHERE endtime >= '1478189.87690964' AND avaliable = true AND finished <> true
03.11 19:15:56 TIMER: Check tournament: 2ms
03.11 19:15:56 TIMER: Clans cache...
03.11 19:15:56 TIMER: Clans cache: 0ms
03.11 19:15:56 TIMER: Check tournament...
03.11 19:15:5603.11 19:23:12 TIMER: Starting timer...
03.11 19:23:12 TIMER: Timer running...
03.11 19:23:12 DB: SELECT * FROM GameVars
03.11 19:23:12 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 19:23:12 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 19:23:12 DB: SELECT * FROM Shops WHERE ID = 1
03.11 19:23:12 TEMP: load ./tmp/quest_daily_ids
03.11 19:23:12 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
03.11 19:23:12 TEMP: save ./tmp/quest_daily_ids
03.11 19:23:12 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 19:23:12 QUEUE: vdl.0 (thread) response server.login
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM LocalizationStrings
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 13.47 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM GameVars
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.94 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 1.54 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.86 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.99 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 1.88 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/quest.getDaily
03.11 19:23:12 TIME: core/quest.getDaily : 0.03 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM UserAttributeTypes
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 2.55 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM UserVariableTypes
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.8 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 19:23:12 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 1.98 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM ItemGroups
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.74 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM Bundles ORDER BY ID
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.94 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.67 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/shop.getList
03.11 19:23:12 TIME: core/shop.getList : 0.03 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM EffectAttributeTypes
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.65 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM Effects
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.6 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 19:23:12 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.96 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 19:23:12 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.76 ms
03.11 19:23:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 19:23:12 DB: SELECT * FROM Badges
03.11 19:23:12 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:23:12 TIME: core/server.query : 0.53 ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:24' OR rounddate = '2016-03-11 19:24' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.25273661' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 2ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:25' OR rounddate = '2016-03-11 19:25' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.31274739' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 1ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:26' OR rounddate = '2016-03-11 19:26' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.37275702' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 0ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:27' OR rounddate = '2016-03-11 19:27' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.43276882' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 2ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:28' OR rounddate = '2016-03-11 19:28' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.49277901' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 1ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:29' OR rounddate = '2016-03-11 19:29' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.55278953' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 0ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:30' OR rounddate = '2016-03-11 19:30' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.61279889' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 1ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:31' OR rounddate = '2016-03-11 19:31' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.67280807' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 1ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:32' OR rounddate = '2016-03-11 19:32' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.73281719' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 0ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:33' OR rounddate = '2016-03-11 19:33' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.79282867' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 1ms
03.11 19:23:12 TIMER: Clans cache...
03.11 19:23:12 TIMER: Clans cache: 0ms
03.11 19:23:12 TIMER: Check tournament...
03.11 19:23:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:34' OR rounddate = '2016-03-11 19:34' AND status <> 'finished'
03.11 19:23:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.85283859' AND avaliable = true AND finished <> true
03.11 19:23:12 TIMER: Check tournament: 1ms
03.11 19:35:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
03.11 19:35:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
03.11 19:35:01 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:35:01 TIME: core/server.query : 2.77 ms
03.11 19:35:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
03.11 19:35:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID
03.11 19:35:01 TIME: core/user.isOnlineID : 0.07 ms
03.11 19:35:01 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
03.11 19:35:01 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:35:01 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
03.11 19:35:01 STATS: cache [user], database [709 calls, 0 reads, 0 writes]
03.11 19:35:01 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
03.11 19:35:01 READDB: SELECT * FROM Users WHERE ID = 115
03.11 19:35:01 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.36 ms]
03.11 19:35:01 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
03.11 19:35:01 QUEUE: vdl.0 (thread) response core/cache.get
03.11 19:35:01 TIME: core/cache.get : 4.57 ms
03.11 19:35:01 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
03.11 19:35:01 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:35:01 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
03.11 19:35:01 STATS: cache [questdata], database [709 calls, 0 reads, 0 writes]
03.11 19:35:01 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
03.11 19:35:01 READDB: SELECT * FROM UserQuests WHERE ID = 115
03.11 19:35:01 QUEUE: vdl.0 (thread) response core/cache.get
03.11 19:35:01 TIME: core/cache.get : 1.32 ms
03.11 19:35:01 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 19:35:01 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:35:01 TIME: core/user.loginPost : 0.11 ms
03.11 19:35:07 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 115, _type => core/cache.update }
03.11 19:35:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:35:07 TIME: core/cache.update : 0.13 ms
03.11 19:35:08 WRITEDB: UPDATE Users SET name = E'uid115', deleted = E'false', email = E'', networktype = E'  ', password = E'uid115', isbanned = E'false', regdate = E'2016-11-03 18:37:16.527174+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 115
03.11 19:35:12 TIMER: Clans cache...
03.11 19:35:12 TIMER: Clans cache: 0ms
03.11 19:35:12 TIMER: Check tournament...
03.11 19:35:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:35' OR rounddate = '2016-03-11 19:35' AND status <> 'finished'
03.11 19:35:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.91284871' AND avaliable = true AND finished <> true
03.11 19:35:12 TIMER: Check tournament: 2ms
03.11 19:35:42 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 115 }, _type => vdl/cache.battle.findRandom }
03.11 19:35:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 19:35:42 TIME: vdl/cache.battle.findRandom : 0.11 ms
03.11 19:35:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:35:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:35:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 19:35:53 TIME: core/server.query : 3.11 ms
03.11 19:35:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:35:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:35:53 TIME: core/user.isOnlineID : 0.13 ms
03.11 19:35:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:35:53 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:35:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 19:35:53 TIME: core/cache.get : 2.09 ms
03.11 19:35:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:35:53 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:35:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 19:35:53 TIME: core/cache.get : 1.09 ms
03.11 19:35:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:35:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:35:53 TIME: core/user.loginPost : 0.14 ms
03.11 19:35:59 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 19:35:59 DB: SELECT nextval('Battle_id_seq') AS id
03.11 19:35:59 READDB: SELECT ID FROM Battle WHERE ID = 5
03.11 19:35:59 READDB: INSERT INTO Battle (ID) VALUES (5)
03.11 19:35:59 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:35:59 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
03.11 19:35:59 STATS: cache [battle], database [768 calls, 0 reads, 0 writes]
03.11 19:35:59 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:35:59 READDB: SELECT * FROM Battle WHERE ID = 5
03.11 19:35:59 DB: SELECT name FROM users WHERE id=107
03.11 19:35:59 DB: SELECT name FROM users WHERE id=115
03.11 19:35:59 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 2, battleId => 5, player => 1 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 19:35:59 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 1, battleId => 5, player => 2 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 19:35:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 19:35:59 TIME: vdl/cache.battle.findRandom : 35.57 ms
03.11 19:36:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:36:02 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:36:02 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
03.11 19:36:02 STATS: cache [user], database [771 calls, 2 reads, 1 writes]
03.11 19:36:02 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
03.11 19:36:02 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.08 ms]
03.11 19:36:02 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.16 ms]
03.11 19:36:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:36:02 TIME: core/cache.update : 0.51 ms
03.11 19:36:03 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:36:05 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'115', turnid = E'107', finished = E'false', endtime = E'1481790.95993155', firstid = E'107', params = E'{}', avaliable = E'false' WHERE ID = 5
03.11 19:36:12 TIMER: Clans cache...
03.11 19:36:12 TIMER: Clans cache: 0ms
03.11 19:36:12 TIMER: Check tournament...
03.11 19:36:12 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:36' OR rounddate = '2016-03-11 19:36' AND status <> 'finished'
03.11 19:36:12 DB: SELECT * FROM battle WHERE endtime >= '1478190.97285976' AND avaliable = true AND finished <> true
03.11 19:36:12 TIMER: Check tournament: 2ms
03.11 19:36:15 BLOCKREMOVE: battle 5 removed
03.11 19:36:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => null, _type => vdl/cache.battle.infoRoom }
03.11 19:36:36 READDB: SELECT * FROM Battle WHERE ID = null
03.11 19:36:36 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:36:36 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:36:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:39:51 TIMER: Starting timer...
03.11 19:39:51 TIMER: Timer running...
03.11 19:39:51 DB: SELECT * FROM GameVars
03.11 19:39:51 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 19:39:51 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 19:39:51 DB: SELECT * FROM Shops WHERE ID = 1
03.11 19:39:51 TEMP: load ./tmp/quest_daily_ids
03.11 19:39:51 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
03.11 19:39:51 TEMP: save ./tmp/quest_daily_ids
03.11 19:39:51 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 19:39:51 QUEUE: vdl.0 (thread) response server.login
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM LocalizationStrings
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 7.28 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM GameVars
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.62 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.9 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.61 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.73 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 1.01 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/quest.getDaily
03.11 19:39:51 TIME: core/quest.getDaily : 0.02 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM UserAttributeTypes
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.41 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM UserVariableTypes
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.49 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 19:39:51 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 1.04 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM ItemGroups
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.43 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM Bundles ORDER BY ID
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.48 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.39 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/shop.getList
03.11 19:39:51 TIME: core/shop.getList : 0.02 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM EffectAttributeTypes
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.32 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM Effects
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.38 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 19:39:51 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.79 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 19:39:51 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.48 ms
03.11 19:39:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 19:39:51 DB: SELECT * FROM Badges
03.11 19:39:51 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:39:51 TIME: core/server.query : 0.43 ms
03.11 19:39:51 TIMER: Clans cache...
03.11 19:39:51 TIMER: Clans cache: 0ms
03.11 19:39:51 TIMER: Check tournament...
03.11 19:39:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:40' OR rounddate = '2016-03-11 19:40' AND status <> 'finished'
03.11 19:39:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.25191101' AND avaliable = true AND finished <> true
03.11 19:39:51 TIMER: Check tournament: 2ms
03.11 19:41:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:41:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:41:09 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:41:09 TIME: core/server.query : 1.56 ms
03.11 19:41:09 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:41:09 QUEUE: vdl.0 (thread) response core/user.isOnlineID
03.11 19:41:09 TIME: core/user.isOnlineID : 0.03 ms
03.11 19:41:09 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:41:09 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:41:09 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
03.11 19:41:09 STATS: cache [user], database [78 calls, 0 reads, 0 writes]
03.11 19:41:09 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
03.11 19:41:09 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:41:09 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.25 ms]
03.11 19:41:09 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
03.11 19:41:09 QUEUE: vdl.0 (thread) response core/cache.get
03.11 19:41:09 TIME: core/cache.get : 2.33 ms
03.11 19:41:09 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:41:09 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:41:09 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
03.11 19:41:09 STATS: cache [questdata], database [78 calls, 0 reads, 0 writes]
03.11 19:41:09 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
03.11 19:41:09 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:41:09 QUEUE: vdl.0 (thread) response core/cache.get
03.11 19:41:09 TIME: core/cache.get : 0.56 ms
03.11 19:41:09 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:41:09 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:41:09 TIME: core/user.loginPost : 0.05 ms
03.11 19:41:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:41:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:41:17 TIME: core/cache.update : 0.17 ms
03.11 19:41:17 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:41:40 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 19:41:40 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 19:41:40 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 4 }, { id => 5 }}, errorCode => ok, _type => core/server.query }
03.11 19:41:40 TIME: core/server.query : 1.07 ms
03.11 19:41:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 5, _type => vdl/cache.battle.infoRoom }
03.11 19:41:40 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:41:40 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
03.11 19:41:40 STATS: cache [battle], database [109 calls, 0 reads, 0 writes]
03.11 19:41:40 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:41:40 READDB: SELECT * FROM Battle WHERE ID = 5
03.11 19:41:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 115, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 19:41:40 TIME: vdl/cache.battle.infoRoom : 1.06 ms
03.11 19:41:40 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 5, _type => vdl/cache.battle.deleteRoom }
03.11 19:41:40 ROOM: deleted room 5
03.11 19:41:40 DB: DELETE FROM Battle WHERE ID = 5
03.11 19:41:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
03.11 19:41:40 TIME: vdl/cache.battle.deleteRoom : 22.51 ms
03.11 19:41:40 NET: vdl.0 (thread) request core/user.sendTo { id => 115, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 19:41:40 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 19:41:40 TIME: core/user.sendTo : 0.07 ms
03.11 19:41:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 19:41:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:41:40 TIME: core/cache.update : 0.06 ms
03.11 19:41:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 19:41:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:41:40 TIME: core/cache.update : 0.05 ms
03.11 19:41:40 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 19:41:40 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:41:40 TIME: core/user.logoutPost : 0.04 ms
03.11 19:41:40 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:41:40 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 19:41:50 BLOCKREMOVE: user 107 removed
03.11 19:41:50 BLOCKREMOVE: questdata 107 removed
03.11 19:41:50 BLOCKREMOVE: battle 5 removed
03.11 19:41:51 TIMER: Clans cache...
03.11 19:41:51 TIMER: Clans cache: 0ms
03.11 19:41:51 TIMER: Check tournament...
03.11 19:41:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:41' OR rounddate = '2016-03-11 19:41' AND status <> 'finished'
03.11 19:41:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.31192328' AND avaliable = true AND finished <> true
03.11 19:41:51 TIMER: Check tournament: 4ms
03.11 19:41:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:41:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:41:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 19:41:55 TIME: core/server.query : 1.97 ms
03.11 19:41:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:41:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:41:55 TIME: core/user.isOnlineID : 0.12 ms
03.11 19:41:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:41:55 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:41:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 19:41:55 TIME: core/cache.get : 1.25 ms
03.11 19:41:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:41:55 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:41:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 19:41:55 TIME: core/cache.get : 0.76 ms
03.11 19:41:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:41:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:41:55 TIME: core/user.loginPost : 0.07 ms
03.11 19:42:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:42:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:42:02 TIME: core/cache.update : 0.08 ms
03.11 19:42:02 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:42:51 TIMER: Clans cache...
03.11 19:42:51 TIMER: Clans cache: 0ms
03.11 19:42:51 TIMER: Check tournament...
03.11 19:42:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:42' OR rounddate = '2016-03-11 19:42' AND status <> 'finished'
03.11 19:42:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.37193399' AND avaliable = true AND finished <> true
03.11 19:42:51 TIMER: Check tournament: 1ms
03.11 19:43:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 19:43:19 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 19:43:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 4 }}, errorCode => ok, _type => core/server.query }
03.11 19:43:19 TIME: core/server.query : 0.72 ms
03.11 19:43:19 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 4, _type => vdl/cache.battle.infoRoom }
03.11 19:43:19 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 19:43:19 STATS: cache [battle], segments [3 calls, 1 hits, 1 misses]
03.11 19:43:19 STATS: cache [battle], database [208 calls, 1 reads, 0 writes]
03.11 19:43:19 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:43:19 READDB: SELECT * FROM Battle WHERE ID = 4
03.11 19:43:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 115, firstId => 107, _type => vdl/cache.battle.infoRoom, turnId => 107 }
03.11 19:43:19 TIME: vdl/cache.battle.infoRoom : 0.67 ms
03.11 19:43:19 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 4, _type => vdl/cache.battle.deleteRoom }
03.11 19:43:19 ROOM: deleted room 4
03.11 19:43:19 DB: DELETE FROM Battle WHERE ID = 4
03.11 19:43:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
03.11 19:43:19 TIME: vdl/cache.battle.deleteRoom : 12.51 ms
03.11 19:43:19 NET: vdl.0 (thread) request core/user.sendTo { id => 115, _type => core/user.sendTo, msg => { _type => battle.end } }
03.11 19:43:19 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
03.11 19:43:19 TIME: core/user.sendTo : 0.04 ms
03.11 19:43:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 19:43:19 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:43:19 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
03.11 19:43:19 STATS: cache [user], database [208 calls, 2 reads, 3 writes]
03.11 19:43:19 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
03.11 19:43:19 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 1.14 ms]
03.11 19:43:19 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.04 ms]
03.11 19:43:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:43:19 TIME: core/cache.update : 0.17 ms
03.11 19:43:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 19:43:19 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:43:19 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
03.11 19:43:19 STATS: cache [questdata], database [208 calls, 2 reads, 1 writes]
03.11 19:43:19 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
03.11 19:43:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:43:19 TIME: core/cache.update : 0.12 ms
03.11 19:43:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 19:43:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:43:19 TIME: core/user.logoutPost : 0.06 ms
03.11 19:43:20 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:43:20 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 19:43:30 BLOCKREMOVE: user 107 removed
03.11 19:43:30 BLOCKREMOVE: questdata 107 removed
03.11 19:43:30 BLOCKREMOVE: battle 4 removed
03.11 19:43:51 TIMER: Clans cache...
03.11 19:43:51 TIMER: Clans cache: 0ms
03.11 19:43:51 TIMER: Check tournament...
03.11 19:43:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:43' OR rounddate = '2016-03-11 19:43' AND status <> 'finished'
03.11 19:43:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.4319451' AND avaliable = true AND finished <> true
03.11 19:43:51 TIMER: Check tournament: 1ms
03.11 19:44:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:44:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:44:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 19:44:30 TIME: core/server.query : 1.02 ms
03.11 19:44:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:44:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:44:30 TIME: core/user.isOnlineID : 0.09 ms
03.11 19:44:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:44:30 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:44:30 STATS: cache [user], segments [11 calls, 6 hits, 4 misses]
03.11 19:44:30 STATS: cache [user], database [279 calls, 2 reads, 4 writes]
03.11 19:44:30 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
03.11 19:44:30 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:44:30 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.26 ms]
03.11 19:44:30 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.05 ms]
03.11 19:44:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 19:44:30 TIME: core/cache.get : 2.83 ms
03.11 19:44:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:44:30 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:44:30 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
03.11 19:44:30 STATS: cache [questdata], database [279 calls, 2 reads, 2 writes]
03.11 19:44:30 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
03.11 19:44:30 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:44:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 19:44:30 TIME: core/cache.get : 1.33 ms
03.11 19:44:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:44:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:44:30 TIME: core/user.loginPost : 0.13 ms
03.11 19:44:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:44:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:44:37 TIME: core/cache.update : 0.18 ms
03.11 19:44:37 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:44:51 TIMER: Clans cache...
03.11 19:44:51 TIMER: Clans cache: 0ms
03.11 19:44:51 TIMER: Check tournament...
03.11 19:44:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:44' OR rounddate = '2016-03-11 19:44' AND status <> 'finished'
03.11 19:44:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.49196023' AND avaliable = true AND finished <> true
03.11 19:44:51 TIMER: Check tournament: 2ms
03.11 19:44:55 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 19:44:55 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 19:44:55 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 19:44:55 TIME: core/server.query : 1.27 ms
03.11 19:44:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 19:44:55 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
03.11 19:44:55 STATS: cache [battle], segments [5 calls, 2 hits, 2 misses]
03.11 19:44:55 STATS: cache [battle], database [304 calls, 2 reads, 0 writes]
03.11 19:44:55 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:44:55 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 19:44:55 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:44:55 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:44:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:44:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 19:44:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:44:55 TIME: core/cache.update : 0.22 ms
03.11 19:44:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 19:44:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:44:55 TIME: core/cache.update : 0.17 ms
03.11 19:44:55 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 19:44:55 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:44:55 TIME: core/user.logoutPost : 0.15 ms
03.11 19:44:56 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:44:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 19:45:06 BLOCKREMOVE: user 107 removed
03.11 19:45:06 BLOCKREMOVE: questdata 107 removed
03.11 19:45:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:45:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:45:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 19:45:10 TIME: core/server.query : 0.71 ms
03.11 19:45:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:45:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:45:10 TIME: core/user.isOnlineID : 0.05 ms
03.11 19:45:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:45:10 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:45:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 19:45:10 TIME: core/cache.get : 1.14 ms
03.11 19:45:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:45:10 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:45:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 19:45:10 TIME: core/cache.get : 0.82 ms
03.11 19:45:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:45:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:45:10 TIME: core/user.loginPost : 0.06 ms
03.11 19:45:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:45:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:45:17 TIME: core/cache.update : 0.14 ms
03.11 19:45:17 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:45:51 TIMER: Clans cache...
03.11 19:45:51 TIMER: Clans cache: 0ms
03.11 19:45:51 TIMER: Check tournament...
03.11 19:45:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:45' OR rounddate = '2016-03-11 19:45' AND status <> 'finished'
03.11 19:45:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.55197258' AND avaliable = true AND finished <> true
03.11 19:45:51 TIMER: Check tournament: 1ms
03.11 19:45:57 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 19:45:57 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 19:45:57 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 19:45:57 TIME: core/server.query : 1.19 ms
03.11 19:45:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 19:45:57 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 1 not found]
03.11 19:45:57 STATS: cache [battle], segments [6 calls, 2 hits, 3 misses]
03.11 19:45:57 STATS: cache [battle], database [365 calls, 3 reads, 0 writes]
03.11 19:45:57 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:45:57 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 19:45:57 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:45:57 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:45:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:45:57 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 19:45:57 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 19:45:57 STATS: cache [user], segments [19 calls, 10 hits, 8 misses]
03.11 19:45:57 STATS: cache [user], database [365 calls, 4 reads, 7 writes]
03.11 19:45:57 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
03.11 19:45:57 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.14 ms]
03.11 19:45:57 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.07 ms]
03.11 19:45:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:45:57 TIME: core/cache.update : 0.47 ms
03.11 19:45:57 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 19:45:57 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 19:45:57 STATS: cache [questdata], segments [15 calls, 6 hits, 8 misses]
03.11 19:45:57 STATS: cache [questdata], database [365 calls, 4 reads, 3 writes]
03.11 19:45:57 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
03.11 19:45:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:45:57 TIME: core/cache.update : 0.37 ms
03.11 19:45:57 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 19:45:57 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:45:57 TIME: core/user.logoutPost : 0.12 ms
03.11 19:45:57 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:45:57 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 19:46:07 BLOCKREMOVE: user 107 removed
03.11 19:46:07 BLOCKREMOVE: questdata 107 removed
03.11 19:46:51 TIMER: Clans cache...
03.11 19:46:51 TIMER: Clans cache: 0ms
03.11 19:46:51 TIMER: Check tournament...
03.11 19:46:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:46' OR rounddate = '2016-03-11 19:46' AND status <> 'finished'
03.11 19:46:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.61198263' AND avaliable = true AND finished <> true
03.11 19:46:51 TIMER: Check tournament: 1ms
03.11 19:46:51 TIMER: Clans cache...
03.11 19:46:51 TIMER: Clans cache: 0ms
03.11 19:46:51 TIMER: Check tournament...
03.11 19:46:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:47' OR rounddate = '2016-03-11 19:47' AND status <> 'finished'
03.11 19:46:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.67199104' AND avaliable = true AND finished <> true
03.11 19:46:51 TIMER: Check tournament: 1ms
03.11 19:48:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:48:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:48:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 19:48:10 TIME: core/server.query : 1 ms
03.11 19:48:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:48:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:48:10 TIME: core/user.isOnlineID : 0.08 ms
03.11 19:48:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:48:10 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 19:48:10 STATS: cache [user], segments [21 calls, 12 hits, 8 misses]
03.11 19:48:10 STATS: cache [user], database [499 calls, 4 reads, 8 writes]
03.11 19:48:10 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
03.11 19:48:10 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:48:10 STATS: cache manager [1], get [9 calls, total 0.01 sec spent, avg 1.25 ms]
03.11 19:48:10 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.09 ms]
03.11 19:48:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 19:48:10 TIME: core/cache.get : 2.41 ms
03.11 19:48:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:48:10 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
03.11 19:48:10 STATS: cache [questdata], segments [17 calls, 8 hits, 8 misses]
03.11 19:48:10 STATS: cache [questdata], database [499 calls, 4 reads, 4 writes]
03.11 19:48:10 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
03.11 19:48:10 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:48:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 19:48:10 TIME: core/cache.get : 0.66 ms
03.11 19:48:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:48:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:48:10 TIME: core/user.loginPost : 0.07 ms
03.11 19:48:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:48:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:48:17 TIME: core/cache.update : 0.08 ms
03.11 19:48:17 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:48:24 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 107 }, _type => vdl/cache.battle.findRandom }
03.11 19:48:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 19:48:24 TIME: vdl/cache.battle.findRandom : 0.06 ms
03.11 19:48:51 TIMER: Clans cache...
03.11 19:48:51 TIMER: Clans cache: 0ms
03.11 19:48:51 TIMER: Check tournament...
03.11 19:48:51 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:48' OR rounddate = '2016-03-11 19:48' AND status <> 'finished'
03.11 19:48:51 DB: SELECT * FROM battle WHERE endtime >= '1478191.73200356' AND avaliable = true AND finished <> true
03.11 19:48:51 TIMER: Check tournament: 1ms
03.11 19:49:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115', _type => core/server.query }
03.11 19:49:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid115' AND Password = E'uid115'
03.11 19:49:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid115, networkid => , isbanned => false, id => 115 }}, errorCode => ok, _type => core/server.query }
03.11 19:49:31 TIME: core/server.query : 2.52 ms
03.11 19:49:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 115, _type => core/user.isOnlineID }
03.11 19:49:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:49:31 TIME: core/user.isOnlineID : 0.1 ms
03.11 19:49:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 115, _type => core/cache.get }
03.11 19:49:31 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 19:49:31 STATS: cache [user], segments [24 calls, 13 hits, 10 misses]
03.11 19:49:31 STATS: cache [user], database [580 calls, 5 reads, 9 writes]
03.11 19:49:31 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
03.11 19:49:31 READDB: SELECT * FROM Users WHERE ID = 115
03.11 19:49:31 STATS: cache manager [1], get [11 calls, total 0.01 sec spent, avg 1.21 ms]
03.11 19:49:31 STATS: cache manager [1], update [13 calls, total 0 sec spent, avg 0.08 ms]
03.11 19:49:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid115, deleted => false, email => , networktype =>   , password => uid115, isbanned => false, regdate => 2016-11-03 18:37:16.527174+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1478188735, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 115 } }
03.11 19:49:31 TIME: core/cache.get : 1.96 ms
03.11 19:49:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 115, _type => core/cache.get }
03.11 19:49:31 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
03.11 19:49:31 STATS: cache [questdata], segments [19 calls, 8 hits, 10 misses]
03.11 19:49:31 STATS: cache [questdata], database [580 calls, 5 reads, 4 writes]
03.11 19:49:31 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
03.11 19:49:31 READDB: SELECT * FROM UserQuests WHERE ID = 115
03.11 19:49:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 115 } }
03.11 19:49:31 TIME: core/cache.get : 1.2 ms
03.11 19:49:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 115, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
03.11 19:49:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:49:31 TIME: core/user.loginPost : 0.11 ms
03.11 19:49:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 115, _type => core/cache.update }
03.11 19:49:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:49:37 TIME: core/cache.update : 0.09 ms
03.11 19:49:37 WRITEDB: UPDATE Users SET name = E'uid115', deleted = E'false', email = E'', networktype = E'  ', password = E'uid115', isbanned = E'false', regdate = E'2016-11-03 18:37:16.527174+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 115
03.11 19:49:45 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 115 }, _type => vdl/cache.battle.findRandom }
03.11 19:49:45 DB: SELECT nextval('Battle_id_seq') AS id
03.11 19:49:45 READDB: SELECT ID FROM Battle WHERE ID = 6
03.11 19:49:45 READDB: INSERT INTO Battle (ID) VALUES (6)
03.11 19:49:45 STATS: cache [battle], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 2 not found]
03.11 19:49:45 STATS: cache [battle], segments [7 calls, 2 hits, 4 misses]
03.11 19:49:45 STATS: cache [battle], database [593 calls, 4 reads, 0 writes]
03.11 19:49:45 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:49:45 READDB: SELECT * FROM Battle WHERE ID = 6
03.11 19:49:45 DB: SELECT name FROM users WHERE id=115
03.11 19:49:45 DB: SELECT name FROM users WHERE id=107
03.11 19:49:45 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid115, enemy.id => 107, enemy.name => uid107, id => 115, enemy.num => 2, battleId => 6, player => 1 }, _isNotify => true, id => 115, _type => battle.enemyEvent }
03.11 19:49:45 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid107, enemy.id => 115, enemy.name => uid115, id => 107, enemy.num => 1, battleId => 6, player => 2 }, _isNotify => true, id => 107, _type => battle.enemyEvent }
03.11 19:49:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
03.11 19:49:45 TIME: vdl/cache.battle.findRandom : 38.14 ms
03.11 19:49:50 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'60', secondid = E'107', turnid = E'115', finished = E'false', endtime = E'1481791.78525995', firstid = E'115', params = E'{}', avaliable = E'false' WHERE ID = 6
03.11 19:49:52 TIMER: Clans cache...
03.11 19:49:52 TIMER: Clans cache: 0ms
03.11 19:49:52 TIMER: Check tournament...
03.11 19:49:52 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:49' OR rounddate = '2016-03-11 19:49' AND status <> 'finished'
03.11 19:49:52 DB: SELECT * FROM battle WHERE endtime >= '1478191.79201397' AND avaliable = true AND finished <> true
03.11 19:49:52 TIMER: Check tournament: 1ms
03.11 19:49:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 6, _type => vdl/cache.battle.infoRoom }
03.11 19:49:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 19:49:54 TIME: vdl/cache.battle.infoRoom : 0.07 ms
03.11 19:50:05 BLOCKREMOVE: battle 6 removed
03.11 19:50:52 TIMER: Clans cache...
03.11 19:50:52 TIMER: Clans cache: 0ms
03.11 19:50:52 TIMER: Check tournament...
03.11 19:50:52 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:50' OR rounddate = '2016-03-11 19:50' AND status <> 'finished'
03.11 19:50:52 DB: SELECT * FROM battle WHERE endtime >= '1478191.85202294' AND avaliable = true AND finished <> true
03.11 19:50:52 TIMER: Check tournament: 1ms
03.11 19:51:04 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 19:51:04 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 19:51:04 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 6 }}, errorCode => ok, _type => core/server.query }
03.11 19:51:04 TIME: core/server.query : 0.6 ms
03.11 19:51:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 6, _type => vdl/cache.battle.infoRoom }
03.11 19:51:04 STATS: cache [battle], get [7 calls, 1 cache hits, 5 cache misses, 0 same version, 2 not found]
03.11 19:51:04 STATS: cache [battle], segments [11 calls, 5 hits, 5 misses]
03.11 19:51:04 STATS: cache [battle], database [672 calls, 5 reads, 1 writes]
03.11 19:51:04 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:51:04 READDB: SELECT * FROM Battle WHERE ID = 6
03.11 19:51:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 107, firstId => 115, _type => vdl/cache.battle.infoRoom, turnId => 115 }
03.11 19:51:04 TIME: vdl/cache.battle.infoRoom : 0.75 ms
03.11 19:51:04 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 6, _type => vdl/cache.battle.deleteRoom }
03.11 19:51:04 ROOM: deleted room 6
03.11 19:51:04 DB: DELETE FROM Battle WHERE ID = 6
03.11 19:51:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
03.11 19:51:04 TIME: vdl/cache.battle.deleteRoom : 18.17 ms
03.11 19:51:04 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 19:51:04 STATS: cache [user], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
03.11 19:51:04 STATS: cache [user], segments [27 calls, 14 hits, 12 misses]
03.11 19:51:04 STATS: cache [user], database [672 calls, 6 reads, 10 writes]
03.11 19:51:04 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
03.11 19:51:04 STATS: cache manager [1], get [12 calls, total 0.01 sec spent, avg 1.2 ms]
03.11 19:51:04 STATS: cache manager [1], update [15 calls, total 0 sec spent, avg 0.08 ms]
03.11 19:51:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:51:04 TIME: core/cache.update : 0.26 ms
03.11 19:51:04 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 19:51:04 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
03.11 19:51:04 STATS: cache [questdata], segments [21 calls, 8 hits, 12 misses]
03.11 19:51:04 STATS: cache [questdata], database [672 calls, 6 reads, 4 writes]
03.11 19:51:04 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
03.11 19:51:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:51:04 TIME: core/cache.update : 0.18 ms
03.11 19:51:04 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 19:51:04 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:51:04 TIME: core/user.logoutPost : 0.05 ms
03.11 19:51:04 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:51:04 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 19:51:14 BLOCKREMOVE: user 107 removed
03.11 19:51:14 BLOCKREMOVE: questdata 107 removed
03.11 19:51:14 BLOCKREMOVE: battle 6 removed
03.11 19:51:52 TIMER: Clans cache...
03.11 19:51:52 TIMER: Clans cache: 0ms
03.11 19:51:52 TIMER: Check tournament...
03.11 19:51:52 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:51' OR rounddate = '2016-03-11 19:51' AND status <> 'finished'
03.11 19:51:52 DB: SELECT * FROM battle WHERE endtime >= '1478191.91203425' AND avaliable = true AND finished <> true
03.11 19:51:52 TIMER: Check tournament: 1ms
03.11 19:51:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 6, _type => vdl/cache.battle.infoRoom }
03.11 19:51:52 READDB: SELECT * FROM Battle WHERE ID = 6
03.11 19:51:52 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:51:52 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:51:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:52:14 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true, _type => core/server.query }
03.11 19:52:14 DB: SELECT id FROM battle WHERE firstid=115 OR secondid=115 AND finished <> true
03.11 19:52:14 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 19:52:14 TIME: core/server.query : 0.46 ms
03.11 19:52:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 19:52:14 STATS: cache [battle], get [9 calls, 1 cache hits, 7 cache misses, 0 same version, 3 not found]
03.11 19:52:14 STATS: cache [battle], segments [14 calls, 6 hits, 7 misses]
03.11 19:52:14 STATS: cache [battle], database [743 calls, 7 reads, 1 writes]
03.11 19:52:14 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:52:14 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 19:52:14 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:52:14 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:52:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:52:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 115, _type => core/cache.update }
03.11 19:52:14 STATS: cache [user], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
03.11 19:52:14 STATS: cache [user], segments [29 calls, 16 hits, 12 misses]
03.11 19:52:14 STATS: cache [user], database [743 calls, 6 reads, 11 writes]
03.11 19:52:14 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
03.11 19:52:14 STATS: cache manager [1], get [12 calls, total 0.01 sec spent, avg 1.2 ms]
03.11 19:52:14 STATS: cache manager [1], update [17 calls, total 0 sec spent, avg 0.09 ms]
03.11 19:52:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:52:14 TIME: core/cache.update : 0.24 ms
03.11 19:52:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 115, _type => core/cache.update }
03.11 19:52:14 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
03.11 19:52:14 STATS: cache [questdata], segments [23 calls, 10 hits, 12 misses]
03.11 19:52:14 STATS: cache [questdata], database [743 calls, 6 reads, 5 writes]
03.11 19:52:14 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
03.11 19:52:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:52:14 TIME: core/cache.update : 0.19 ms
03.11 19:52:14 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 115, _type => core/user.logoutPost }
03.11 19:52:14 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:52:14 TIME: core/user.logoutPost : 0.06 ms
03.11 19:52:15 WRITEDB: UPDATE Users SET name = E'uid115', deleted = E'false', email = E'', networktype = E'  ', password = E'uid115', isbanned = E'false', regdate = E'2016-11-03 18:37:16.527174+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1478188735,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 115
03.11 19:52:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 115
03.11 19:52:34 TIMER: Starting timer...
03.11 19:52:34 TIMER: Timer running...
03.11 19:52:34 DB: SELECT * FROM GameVars
03.11 19:52:34 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 19:52:34 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 19:52:34 DB: SELECT * FROM Shops WHERE ID = 1
03.11 19:52:34 TEMP: load ./tmp/quest_daily_ids
03.11 19:52:34 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
03.11 19:52:34 TEMP: save ./tmp/quest_daily_ids
03.11 19:52:34 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
03.11 19:52:34 QUEUE: vdl.0 (thread) response server.login
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM LocalizationStrings
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 5.72 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM GameVars
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.52 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.58 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.42 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.49 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.88 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/quest.getDaily
03.11 19:52:34 TIME: core/quest.getDaily : 0.02 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM UserAttributeTypes
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.32 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM UserVariableTypes
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.31 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
03.11 19:52:34 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.98 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM ItemGroups
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.41 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM Bundles ORDER BY ID
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.75 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM BundleItems ORDER BY ID
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.43 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/shop.getList
03.11 19:52:34 TIME: core/shop.getList : 0.02 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM EffectAttributeTypes
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.33 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM Effects
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.42 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
03.11 19:52:34 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.57 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
03.11 19:52:34 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.68 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
03.11 19:52:34 DB: SELECT * FROM Badges
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 0.29 ms
03.11 19:52:34 TIMER: Clans cache...
03.11 19:52:34 TIMER: Clans cache: 0ms
03.11 19:52:34 TIMER: Check tournament...
03.11 19:52:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:53' OR rounddate = '2016-03-11 19:53' AND status <> 'finished'
03.11 19:52:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.01469999' AND avaliable = true AND finished <> true
03.11 19:52:34 TIMER: Check tournament: 2ms
03.11 19:52:34 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:52:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/server.query
03.11 19:52:34 TIME: core/server.query : 1.8 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/user.isOnlineID
03.11 19:52:34 TIME: core/user.isOnlineID : 0.05 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:52:34 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:52:34 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
03.11 19:52:34 STATS: cache [user], database [61 calls, 0 reads, 0 writes]
03.11 19:52:34 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
03.11 19:52:34 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:52:34 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.53 ms]
03.11 19:52:34 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/cache.get
03.11 19:52:34 TIME: core/cache.get : 2.65 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:52:34 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:52:34 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
03.11 19:52:34 STATS: cache [questdata], database [61 calls, 0 reads, 0 writes]
03.11 19:52:34 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
03.11 19:52:34 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/cache.get
03.11 19:52:34 TIME: core/cache.get : 1.6 ms
03.11 19:52:34 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:52:34 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:52:34 TIME: core/user.loginPost : 0.07 ms
03.11 19:53:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 19:53:44 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 19:53:44 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 19:53:44 TIME: core/server.query : 1.4 ms
03.11 19:53:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 19:53:44 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
03.11 19:53:44 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
03.11 19:53:44 STATS: cache [battle], database [70 calls, 0 reads, 0 writes]
03.11 19:53:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:53:44 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 19:53:44 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:53:44 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:53:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:53:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 19:53:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:53:44 TIME: core/cache.update : 0.13 ms
03.11 19:53:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 19:53:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:53:44 TIME: core/cache.update : 0.12 ms
03.11 19:53:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 19:53:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:53:44 TIME: core/user.logoutPost : 0.14 ms
03.11 19:53:44 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:53:44 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 19:53:54 BLOCKREMOVE: user 107 removed
03.11 19:53:54 BLOCKREMOVE: questdata 107 removed
03.11 19:54:34 TIMER: Clans cache...
03.11 19:54:34 TIMER: Clans cache: 0ms
03.11 19:54:34 TIMER: Check tournament...
03.11 19:54:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:54' OR rounddate = '2016-03-11 19:54' AND status <> 'finished'
03.11 19:54:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.07471439' AND avaliable = true AND finished <> true
03.11 19:54:34 TIMER: Check tournament: 1ms
03.11 19:54:34 TIMER: Clans cache...
03.11 19:54:34 TIMER: Clans cache: 0ms
03.11 19:54:34 TIMER: Check tournament...
03.11 19:54:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:55' OR rounddate = '2016-03-11 19:55' AND status <> 'finished'
03.11 19:54:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.13472601' AND avaliable = true AND finished <> true
03.11 19:54:34 TIMER: Check tournament: 2ms
03.11 19:54:34 TIMER: Clans cache...
03.11 19:54:34 TIMER: Clans cache: 0ms
03.11 19:54:34 TIMER: Check tournament...
03.11 19:54:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:56' OR rounddate = '2016-03-11 19:56' AND status <> 'finished'
03.11 19:54:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.1947351' AND avaliable = true AND finished <> true
03.11 19:54:34 TIMER: Check tournament: 1ms
03.11 19:54:34 TIMER: Clans cache...
03.11 19:54:34 TIMER: Clans cache: 0ms
03.11 19:54:34 TIMER: Check tournament...
03.11 19:54:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:57' OR rounddate = '2016-03-11 19:57' AND status <> 'finished'
03.11 19:54:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.25474355' AND avaliable = true AND finished <> true
03.11 19:54:34 TIMER: Check tournament: 0ms
03.11 19:54:34 TIMER: Clans cache...
03.11 19:54:34 TIMER: Clans cache: 0ms
03.11 19:54:34 TIMER: Check tournament...
03.11 19:54:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:58' OR rounddate = '2016-03-11 19:58' AND status <> 'finished'
03.11 19:54:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.31475189' AND avaliable = true AND finished <> true
03.11 19:54:34 TIMER: Check tournament: 1ms
03.11 19:58:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
03.11 19:58:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
03.11 19:58:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
03.11 19:58:58 TIME: core/server.query : 0.94 ms
03.11 19:58:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
03.11 19:58:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
03.11 19:58:58 TIME: core/user.isOnlineID : 0.08 ms
03.11 19:58:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
03.11 19:58:58 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 19:58:58 STATS: cache [user], segments [5 calls, 2 hits, 2 misses]
03.11 19:58:58 STATS: cache [user], database [384 calls, 1 reads, 1 writes]
03.11 19:58:58 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
03.11 19:58:58 READDB: SELECT * FROM Users WHERE ID = 107
03.11 19:58:58 STATS: cache manager [1], get [3 calls, total 0 sec spent, avg 1.67 ms]
03.11 19:58:58 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.04 ms]
03.11 19:58:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1478178267, lastLoginDate => 308, lastLoadDate => 1104 }, effects => { list => [] } }}, version => 0, id => 107 } }
03.11 19:58:58 TIME: core/cache.get : 1.11 ms
03.11 19:58:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
03.11 19:58:58 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
03.11 19:58:58 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
03.11 19:58:58 STATS: cache [questdata], database [384 calls, 1 reads, 1 writes]
03.11 19:58:58 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
03.11 19:58:58 READDB: SELECT * FROM UserQuests WHERE ID = 107
03.11 19:58:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
03.11 19:58:58 TIME: core/cache.get : 0.71 ms
03.11 19:58:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
03.11 19:58:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
03.11 19:58:58 TIME: core/user.loginPost : 0.07 ms
03.11 19:59:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
03.11 19:59:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:59:04 TIME: core/cache.update : 0.08 ms
03.11 19:59:05 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:59:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
03.11 19:59:22 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
03.11 19:59:22 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
03.11 19:59:22 TIME: core/server.query : 0.89 ms
03.11 19:59:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
03.11 19:59:22 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
03.11 19:59:22 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
03.11 19:59:22 STATS: cache [battle], database [409 calls, 1 reads, 0 writes]
03.11 19:59:22 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
03.11 19:59:22 READDB: SELECT * FROM Battle WHERE ID = 0
03.11 19:59:22 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
03.11 19:59:22 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 179
Called from modules/VDLCache.hx line 172
Called from modules/VDLCache.hx line 117
Called from snipe/cache/CacheServer.hx line 487
03.11 19:59:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
03.11 19:59:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
03.11 19:59:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
03.11 19:59:22 TIME: core/cache.update : 0.14 ms
03.11 19:59:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
03.11 19:59:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
03.11 19:59:22 TIME: core/cache.update : 0.12 ms
03.11 19:59:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
03.11 19:59:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
03.11 19:59:22 TIME: core/user.logoutPost : 0.1 ms
03.11 19:59:23 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1478178267,"lastLoginDate":308,"lastLoadDate":1104},"effects":{"list":[]}}' WHERE ID = 107
03.11 19:59:23 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
03.11 19:59:33 BLOCKREMOVE: user 107 removed
03.11 19:59:33 BLOCKREMOVE: questdata 107 removed
03.11 19:59:34 TIMER: Clans cache...
03.11 19:59:34 TIMER: Clans cache: 0ms
03.11 19:59:34 TIMER: Check tournament...
03.11 19:59:34 DB: SELECT * FROM tournament WHERE startdate = '2016-03-11 19:59' OR rounddate = '2016-03-11 19:59' AND status <> 'finished'
03.11 19:59:34 DB: SELECT * FROM battle WHERE endtime >= '1478192.37476277' AND avaliable = true AND finished <> true
03.11 19:59:34 TIMER: Check tournament: 1ms
