02.09 21:00:40 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
02.09 21:00:40 TIMER: Clans cache...
02.09 21:00:40 TIMER: Clans cache: 0ms
02.09 21:00:41 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
02.09 21:00:41 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
02.09 21:00:41 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.09 21:00:41 TIME: core/server.query : 0.89 ms
02.09 21:00:41 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
02.09 21:00:41 ROOM: deleted room 0
02.09 21:00:41 STATS: cache [battle], get [21 calls, 17 cache hits, 4 cache misses, 0 same version, 0 not found]
02.09 21:00:41 STATS: cache [battle], segments [41 calls, 29 hits, 11 misses]
02.09 21:00:41 STATS: cache [battle], database [5701 calls, 4 reads, 8 writes]
02.09 21:00:41 STATS: cache [battle], lock [4 calls, 4 attempts, 0 failures]
02.09 21:00:41 DB: DELETE FROM Battle WHERE ID = 0
02.09 21:00:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 21:00:41 TIME: vdl/cache.battle.deleteRoom : 0.96 ms
02.09 21:00:41 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 21:00:41 STATS: cache [user], get [6 calls, 2 cache hits, 4 cache misses, 0 same version, 0 not found]
02.09 21:00:41 STATS: cache [user], segments [28 calls, 19 hits, 8 misses]
02.09 21:00:41 STATS: cache [user], database [5701 calls, 4 reads, 10 writes]
02.09 21:00:41 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
02.09 21:00:41 STATS: cache manager [1], get [12 calls, total 0.02 sec spent, avg 1.25 ms]
02.09 21:00:41 STATS: cache manager [1], update [16 calls, total 0 sec spent, avg 0.16 ms]
02.09 21:00:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 21:00:41 TIME: core/cache.update : 0.31 ms
02.09 21:00:41 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 21:00:41 STATS: cache [questdata], get [6 calls, 2 cache hits, 4 cache misses, 0 same version, 0 not found]
02.09 21:00:41 STATS: cache [questdata], segments [23 calls, 14 hits, 8 misses]
02.09 21:00:41 STATS: cache [questdata], database [5701 calls, 4 reads, 5 writes]
02.09 21:00:41 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
02.09 21:00:41 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 21:00:41 TIME: core/cache.update : 0.23 ms
02.09 21:00:41 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 21:00:41 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 21:00:41 TIME: core/user.logoutPost : 0.09 ms
02.09 21:00:41 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 21:00:41 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 21:00:51 BLOCKREMOVE: user 2 removed
02.09 21:00:51 BLOCKREMOVE: questdata 2 removed
02.09 21:01:40 TIMER: Clans cache...
02.09 21:01:40 TIMER: Clans cache: 0ms
02.09 21:01:40 TIMER: Clans cache...
02.09 21:01:40 TIMER: Clans cache: 0ms
02.09 21:01:40 TIMER: Clans cache...
02.09 21:01:40 TIMER: Clans cache: 0ms
02.09 21:01:40 TIMER: Clans cache...
02.09 21:01:40 TIMER: Clans cache: 0ms
02.09 21:01:40 TIMER: Clans cache...
02.09 21:01:40 TIMER: Clans cache: 0ms
02.09 21:01:40 TIMER: Clans cache...
02.09 21:01:40 TIMER: Clans cache: 0ms
02.09 21:01:40 TIMER: Clans cache...
02.09 21:01:40 TIMER: Clans cache: 0ms
02.09 21:08:16 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 21:08:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 21:08:17 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
02.09 21:08:17 TIME: core/server.query : 2.93 ms
02.09 21:08:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 21:08:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 21:08:17 TIME: core/user.isOnlineID : 0.1 ms
02.09 21:08:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 21:08:17 STATS: cache [user], get [6 calls, 2 cache hits, 4 cache misses, 0 same version, 0 not found]
02.09 21:08:17 STATS: cache [user], segments [30 calls, 21 hits, 8 misses]
02.09 21:08:17 STATS: cache [user], database [6157 calls, 4 reads, 11 writes]
02.09 21:08:17 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
02.09 21:08:17 READDB: SELECT * FROM Users WHERE ID = 2
02.09 21:08:17 STATS: cache manager [1], get [13 calls, total 0.02 sec spent, avg 1.35 ms]
02.09 21:08:17 STATS: cache manager [1], update [17 calls, total 0 sec spent, avg 0.16 ms]
02.09 21:08:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472829608, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 2 } }
02.09 21:08:17 TIME: core/cache.get : 2.89 ms
02.09 21:08:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 21:08:17 STATS: cache [questdata], get [6 calls, 2 cache hits, 4 cache misses, 0 same version, 0 not found]
02.09 21:08:17 STATS: cache [questdata], segments [25 calls, 16 hits, 8 misses]
02.09 21:08:17 STATS: cache [questdata], database [6157 calls, 4 reads, 6 writes]
02.09 21:08:17 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
02.09 21:08:17 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 21:08:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
02.09 21:08:17 TIME: core/cache.get : 1.32 ms
02.09 21:08:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 21:08:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 21:08:17 TIME: core/user.loginPost : 0.1 ms
02.09 21:08:17 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 21:08:17 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 21:08:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 21:08:17 TIME: vdl/cache.battle.find : 1.02 ms
02.09 21:08:17 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
02.09 21:08:17 DB: SELECT nextval('Battle_id_seq') AS id
02.09 21:08:17 READDB: SELECT ID FROM Battle WHERE ID = 43
02.09 21:08:17 READDB: INSERT INTO Battle (ID) VALUES (43)
02.09 21:08:17 STATS: cache [battle], get [21 calls, 17 cache hits, 4 cache misses, 0 same version, 0 not found]
02.09 21:08:17 STATS: cache [battle], segments [42 calls, 29 hits, 12 misses]
02.09 21:08:17 STATS: cache [battle], database [6157 calls, 4 reads, 8 writes]
02.09 21:08:17 STATS: cache [battle], lock [5 calls, 5 attempts, 0 failures]
02.09 21:08:17 READDB: SELECT * FROM Battle WHERE ID = 43
02.09 21:08:17 STATS: cache manager [0], get [5 calls, total 0.01 sec spent, avg 1.31 ms]
02.09 21:08:17 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 21:08:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 43, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 21:08:17 TIME: vdl/cache.battle.create : 40.66 ms
02.09 21:08:22 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 43
02.09 21:08:24 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 21:08:24 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 21:08:24 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.09 21:08:24 TIME: core/server.query : 1.81 ms
02.09 21:08:24 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 21:08:24 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 21:08:24 TIME: core/user.isOnlineID : 0.08 ms
02.09 21:08:24 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 21:08:24 READDB: SELECT * FROM Users WHERE ID = 3
02.09 21:08:24 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472825979, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.09 21:08:24 TIME: core/cache.get : 1.36 ms
02.09 21:08:24 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 21:08:24 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 21:08:24 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.09 21:08:24 TIME: core/cache.get : 0.74 ms
02.09 21:08:24 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 21:08:24 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 21:08:24 TIME: core/user.loginPost : 0.07 ms
02.09 21:08:24 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 21:08:24 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 21:08:24 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 21:08:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 43, first => 2 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 21:08:24 TIME: vdl/cache.battle.find : 2.89 ms
02.09 21:08:24 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 43, selfId => 3, _type => vdl/cache.battle.join }
02.09 21:08:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 43, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 21:08:24 TIME: vdl/cache.battle.join : 0.19 ms
02.09 21:08:24 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 21:08:24 DB: SELECT name FROM users WHERE id=3
02.09 21:08:24 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 21:08:24 TIME: core/server.query : 0.78 ms
02.09 21:08:24 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 21:08:24 DB: SELECT name FROM users WHERE id=2
02.09 21:08:24 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 21:08:24 TIME: core/server.query : 2.18 ms
02.09 21:08:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 21:08:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 21:08:25 TIME: core/cache.update : 0.15 ms
02.09 21:08:25 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 21:08:27 WRITEDB: UPDATE Battle SET secondid = E'3', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 43
02.09 21:08:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 21:08:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 21:08:30 TIME: core/cache.update : 0.07 ms
02.09 21:08:30 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 21:08:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:08:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 21:08:38 TIME: vdl/cache.battle.infoRoom : 0.14 ms
02.09 21:08:40 TIMER: Clans cache...
02.09 21:08:40 TIMER: Clans cache: 0ms
02.09 21:08:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:08:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 21:08:44 TIME: vdl/cache.battle.infoRoom : 0.14 ms
02.09 21:08:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:08:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 21:08:50 TIME: vdl/cache.battle.infoRoom : 0.15 ms
02.09 21:08:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:08:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 21:08:52 TIME: vdl/cache.battle.infoRoom : 0.13 ms
02.09 21:08:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:08:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 21:08:56 TIME: vdl/cache.battle.infoRoom : 0.19 ms
02.09 21:09:03 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:09:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 21:09:03 TIME: vdl/cache.battle.infoRoom : 0.13 ms
02.09 21:09:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:09:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 21:09:04 TIME: vdl/cache.battle.infoRoom : 0.16 ms
02.09 21:09:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:09:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 21:09:04 TIME: vdl/cache.battle.infoRoom : 0.18 ms
02.09 21:09:40 TIMER: Clans cache...
02.09 21:09:40 TIMER: Clans cache: 0ms
02.09 21:09:56 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.09 21:09:56 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.09 21:09:56 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 43 }}, errorCode => ok, _type => core/server.query }
02.09 21:09:56 TIME: core/server.query : 0.62 ms
02.09 21:09:56 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 43, _type => vdl/cache.battle.deleteRoom }
02.09 21:09:56 ROOM: deleted room 43
02.09 21:09:56 STATS: cache [battle], get [30 calls, 25 cache hits, 5 cache misses, 0 same version, 0 not found]
02.09 21:09:56 STATS: cache [battle], segments [54 calls, 39 hits, 14 misses]
02.09 21:09:56 STATS: cache [battle], database [6256 calls, 5 reads, 10 writes]
02.09 21:09:56 STATS: cache [battle], lock [5 calls, 5 attempts, 0 failures]
02.09 21:09:56 DB: DELETE FROM Battle WHERE ID = 43
02.09 21:09:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 21:09:56 TIME: vdl/cache.battle.deleteRoom : 13.34 ms
02.09 21:09:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.09 21:09:56 STATS: cache [user], get [8 calls, 2 cache hits, 6 cache misses, 0 same version, 0 not found]
02.09 21:09:56 STATS: cache [user], segments [36 calls, 23 hits, 12 misses]
02.09 21:09:56 STATS: cache [user], database [6256 calls, 6 reads, 13 writes]
02.09 21:09:56 STATS: cache [user], lock [8 calls, 8 attempts, 0 failures]
02.09 21:09:56 STATS: cache manager [1], get [16 calls, total 0.02 sec spent, avg 1.28 ms]
02.09 21:09:56 STATS: cache manager [1], update [20 calls, total 0 sec spent, avg 0.15 ms]
02.09 21:09:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 21:09:56 TIME: core/cache.update : 0.31 ms
02.09 21:09:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.09 21:09:56 STATS: cache [questdata], get [8 calls, 2 cache hits, 6 cache misses, 0 same version, 0 not found]
02.09 21:09:56 STATS: cache [questdata], segments [29 calls, 16 hits, 12 misses]
02.09 21:09:56 STATS: cache [questdata], database [6256 calls, 6 reads, 6 writes]
02.09 21:09:56 STATS: cache [questdata], lock [8 calls, 8 attempts, 0 failures]
02.09 21:09:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 21:09:56 TIME: core/cache.update : 0.2 ms
02.09 21:09:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.09 21:09:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 21:09:56 TIME: core/user.logoutPost : 0.06 ms
02.09 21:09:56 BLOCKREMOVE: battle 43 removed
02.09 21:09:56 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 21:09:56 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.09 21:10:06 BLOCKREMOVE: user 3 removed
02.09 21:10:06 BLOCKREMOVE: questdata 3 removed
02.09 21:10:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 43, _type => vdl/cache.battle.infoRoom }
02.09 21:10:08 READDB: SELECT * FROM Battle WHERE ID = 43
02.09 21:10:08 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
02.09 21:10:08 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 85
Called from modules/VDLCache.hx line 78
Called from modules/VDLCache.hx line 63
Called from snipe/cache/CacheServer.hx line 487
02.09 21:10:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
02.09 21:10:40 TIMER: Clans cache...
02.09 21:10:40 TIMER: Clans cache: 0ms
02.09 21:10:40 TIMER: Clans cache...
02.09 21:10:40 TIMER: Clans cache: 0ms
02.09 21:10:40 TIMER: Clans cache...
02.09 21:10:40 TIMER: Clans cache: 0ms
02.09 21:13:38 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
02.09 21:13:38 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
02.09 21:13:38 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.09 21:13:38 TIME: core/server.query : 1.08 ms
02.09 21:13:38 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
02.09 21:13:38 ROOM: deleted room 0
02.09 21:13:38 STATS: cache [battle], get [31 calls, 25 cache hits, 6 cache misses, 0 same version, 1 not found]
02.09 21:13:38 STATS: cache [battle], segments [56 calls, 40 hits, 15 misses]
02.09 21:13:38 STATS: cache [battle], database [6478 calls, 6 reads, 10 writes]
02.09 21:13:38 STATS: cache [battle], lock [5 calls, 5 attempts, 0 failures]
02.09 21:13:38 DB: DELETE FROM Battle WHERE ID = 0
02.09 21:13:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 21:13:38 TIME: vdl/cache.battle.deleteRoom : 1.16 ms
02.09 21:13:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 21:13:38 STATS: cache [user], get [8 calls, 2 cache hits, 6 cache misses, 0 same version, 0 not found]
02.09 21:13:38 STATS: cache [user], segments [38 calls, 25 hits, 12 misses]
02.09 21:13:38 STATS: cache [user], database [6478 calls, 6 reads, 14 writes]
02.09 21:13:38 STATS: cache [user], lock [8 calls, 8 attempts, 0 failures]
02.09 21:13:38 STATS: cache manager [1], get [16 calls, total 0.02 sec spent, avg 1.28 ms]
02.09 21:13:38 STATS: cache manager [1], update [22 calls, total 0 sec spent, avg 0.16 ms]
02.09 21:13:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 21:13:38 TIME: core/cache.update : 0.67 ms
02.09 21:13:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 21:13:38 STATS: cache [questdata], get [8 calls, 2 cache hits, 6 cache misses, 0 same version, 0 not found]
02.09 21:13:38 STATS: cache [questdata], segments [31 calls, 18 hits, 12 misses]
02.09 21:13:38 STATS: cache [questdata], database [6478 calls, 6 reads, 7 writes]
02.09 21:13:38 STATS: cache [questdata], lock [8 calls, 8 attempts, 0 failures]
02.09 21:13:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 21:13:38 TIME: core/cache.update : 0.41 ms
02.09 21:13:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 21:13:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 21:13:38 TIME: core/user.logoutPost : 0.13 ms
02.09 21:13:38 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 21:13:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 21:13:40 TIMER: Clans cache...
02.09 21:13:40 TIMER: Clans cache: 0ms
02.09 21:13:48 BLOCKREMOVE: user 2 removed
02.09 21:13:48 BLOCKREMOVE: questdata 2 removed
02.09 21:42:47 TIMER: Starting timer...
02.09 21:42:47 TIMER: Timer running...
02.09 21:42:47 DB: SELECT * FROM GameVars
02.09 21:42:47 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 21:42:47 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 21:42:48 DB: SELECT * FROM Shops WHERE ID = 1
02.09 21:42:48 TEMP: load ./tmp/quest_daily_ids
02.09 21:42:48 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 21:42:48 TEMP: save ./tmp/quest_daily_ids
02.09 21:42:48 NET: ??? request core/server.login { host => 188.225.38.160, name => vdl.0, port => 3010, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3010 }
02.09 21:42:48 QUEUE: vdl.0 (thread) response server.login
02.09 21:42:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 21:42:48 DB: SELECT * FROM LocalizationStrings
02.09 21:42:49 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:49 TIME: core/server.query : 1266 ms
02.09 21:42:49 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 21:42:49 DB: SELECT * FROM GameVars
02.09 21:42:50 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:50 TIME: core/server.query : 350.27 ms
02.09 21:42:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 21:42:50 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 21:42:50 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:50 TIME: core/server.query : 385.64 ms
02.09 21:42:50 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 21:42:50 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 21:42:51 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:51 TIME: core/server.query : 329.54 ms
02.09 21:42:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 21:42:51 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 21:42:51 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:51 TIME: core/server.query : 340.35 ms
02.09 21:42:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 21:42:51 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 21:42:51 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:51 TIME: core/server.query : 358.49 ms
02.09 21:42:51 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 21:42:51 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 21:42:51 TIME: core/quest.getDaily : 0.02 ms
02.09 21:42:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 21:42:51 DB: SELECT * FROM UserAttributeTypes
02.09 21:42:52 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:52 TIME: core/server.query : 340.74 ms
02.09 21:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 21:42:52 DB: SELECT * FROM UserVariableTypes
02.09 21:42:52 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:52 TIME: core/server.query : 340.88 ms
02.09 21:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 21:42:52 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 21:42:52 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:52 TIME: core/server.query : 357.69 ms
02.09 21:42:52 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 21:42:52 DB: SELECT * FROM ItemGroups
02.09 21:42:53 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:53 TIME: core/server.query : 368.49 ms
02.09 21:42:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 21:42:53 DB: SELECT * FROM Bundles ORDER BY ID
02.09 21:42:53 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:53 TIME: core/server.query : 339.78 ms
02.09 21:42:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 21:42:53 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 21:42:53 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:53 TIME: core/server.query : 340.36 ms
02.09 21:42:53 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 21:42:53 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 21:42:53 TIME: core/shop.getList : 0.08 ms
02.09 21:42:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 21:42:53 DB: SELECT * FROM EffectAttributeTypes
02.09 21:42:54 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:54 TIME: core/server.query : 356.4 ms
02.09 21:42:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 21:42:54 DB: SELECT * FROM Effects
02.09 21:42:54 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:54 TIME: core/server.query : 349.72 ms
02.09 21:42:54 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 21:42:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 21:42:54 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:42:54 TIME: core/server.query : 367.41 ms
02.09 21:42:54 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 21:42:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 21:43:37 TIMER: Starting timer...
02.09 21:43:37 TIMER: Timer running...
02.09 21:43:37 DB: SELECT * FROM GameVars
02.09 21:43:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 21:43:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 21:43:38 DB: SELECT * FROM Shops WHERE ID = 1
02.09 21:43:38 TEMP: load ./tmp/quest_daily_ids
02.09 21:43:38 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 21:43:38 TEMP: save ./tmp/quest_daily_ids
02.09 21:43:38 NET: ??? request core/server.login { host => 188.225.38.160, name => vdl.0, port => 3010, type => game, _type => core/server.login, externalHost => 188.225.38.160, externalPort => 3010 }
02.09 21:43:38 QUEUE: vdl.0 (thread) response server.login
02.09 21:43:38 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 21:43:38 DB: SELECT * FROM LocalizationStrings
02.09 21:43:39 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:39 TIME: core/server.query : 1248.1 ms
02.09 21:43:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 21:43:39 DB: SELECT * FROM GameVars
02.09 21:43:40 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:40 TIME: core/server.query : 348.46 ms
02.09 21:43:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 21:43:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 21:43:40 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:40 TIME: core/server.query : 396.15 ms
02.09 21:43:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 21:43:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 21:43:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:41 TIME: core/server.query : 358.7 ms
02.09 21:43:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 21:43:41 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 21:43:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:41 TIME: core/server.query : 368.37 ms
02.09 21:43:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 21:43:41 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 21:43:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:41 TIME: core/server.query : 376.12 ms
02.09 21:43:41 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 21:43:41 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 21:43:41 TIME: core/quest.getDaily : 0.06 ms
02.09 21:43:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 21:43:41 DB: SELECT * FROM UserAttributeTypes
02.09 21:43:42 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:42 TIME: core/server.query : 376.18 ms
02.09 21:43:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 21:43:42 DB: SELECT * FROM UserVariableTypes
02.09 21:43:42 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:42 TIME: core/server.query : 358.64 ms
02.09 21:43:42 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 21:43:42 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 21:43:42 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:42 TIME: core/server.query : 358.31 ms
02.09 21:43:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 21:43:42 DB: SELECT * FROM ItemGroups
02.09 21:43:43 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:43 TIME: core/server.query : 358.41 ms
02.09 21:43:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 21:43:43 DB: SELECT * FROM Bundles ORDER BY ID
02.09 21:43:43 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:43 TIME: core/server.query : 342.85 ms
02.09 21:43:43 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 21:43:43 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 21:43:44 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:44 TIME: core/server.query : 892.86 ms
02.09 21:43:44 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 21:43:44 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 21:43:44 TIME: core/shop.getList : 0.03 ms
02.09 21:43:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 21:43:44 DB: SELECT * FROM EffectAttributeTypes
02.09 21:43:44 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:44 TIME: core/server.query : 366.3 ms
02.09 21:43:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 21:43:44 DB: SELECT * FROM Effects
02.09 21:43:45 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:45 TIME: core/server.query : 376.78 ms
02.09 21:43:45 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 21:43:45 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 21:43:45 QUEUE: vdl.0 (thread) response core/server.query
02.09 21:43:45 TIME: core/server.query : 413.56 ms
02.09 21:43:45 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 21:43:45 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
