25.10 19:00:00 BLOCKREMOVE: battle 81 removed
25.10 19:00:02 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:00:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 19:00:02 TIME: vdl/cache.tournament.getStatus : 0.18 ms
25.10 19:00:02 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 2, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 19:00:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 95, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:00:02 TIME: vdl/cache.tournament.setGrid : 0.15 ms
25.10 19:00:12 BLOCKREMOVE: tournament 1 removed
25.10 19:00:26 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 2, 1)
25.10 19:00:26 TIMER: Clans cache...
25.10 19:00:26 TIMER: Clans cache: 0ms
25.10 19:00:26 TIMER: Check tournament...
25.10 19:00:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:00' OR rounddate = '2016-25-10 19:00' AND status <> 'finished'
25.10 19:00:26 TIMER: Check tournament: 1ms
25.10 19:00:26 TIMER: Clans cache...
25.10 19:00:26 TIMER: Clans cache: 0ms
25.10 19:00:26 TIMER: Check tournament...
25.10 19:00:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:01' OR rounddate = '2016-25-10 19:01' AND status <> 'finished'
25.10 19:00:26 TIMER: Check tournament: 1ms
25.10 19:01:31 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:01:31 DB: SELECT * FROM tournament
25.10 19:01:31 STATS: cache [tournament], get [32 calls, 24 cache hits, 7 cache misses, 0 same version, 0 not found]
25.10 19:01:31 STATS: cache [tournament], segments [47 calls, 39 hits, 7 misses]
25.10 19:01:31 STATS: cache [tournament], database [1205 calls, 7 reads, 6 writes]
25.10 19:01:31 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:01:31 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:01:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [81], round => 2, id => 1, status => finished, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:58, startdate => 2016-25-10 18:58 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:01:31 TIME: vdl/cache.tournament.getAvailableTournament : 2.6 ms
25.10 19:01:35 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:01:35 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 19:01:35 TIME: vdl/cache.tournament.getStatus : 0.2 ms
25.10 19:01:35 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 2, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 19:01:35 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 95, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:01:35 TIME: vdl/cache.tournament.setGrid : 0.21 ms
25.10 19:01:45 BLOCKREMOVE: tournament 1 removed
25.10 19:02:26 TIMER: Clans cache...
25.10 19:02:26 TIMER: Clans cache: 0ms
25.10 19:02:26 TIMER: Check tournament...
25.10 19:02:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:02' OR rounddate = '2016-25-10 19:02' AND status <> 'finished'
25.10 19:02:26 TIMER: Check tournament: 0ms
25.10 19:02:26 TIMER: Clans cache...
25.10 19:02:26 TIMER: Clans cache: 0ms
25.10 19:02:26 TIMER: Check tournament...
25.10 19:02:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:03' OR rounddate = '2016-25-10 19:03' AND status <> 'finished'
25.10 19:02:26 TIMER: Check tournament: 0ms
25.10 19:02:26 TIMER: Clans cache...
25.10 19:02:26 TIMER: Clans cache: 0ms
25.10 19:02:26 TIMER: Check tournament...
25.10 19:02:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:04' OR rounddate = '2016-25-10 19:04' AND status <> 'finished'
25.10 19:02:26 TIMER: Check tournament: 1ms
25.10 19:05:24 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:05:24 DB: SELECT * FROM tournament
25.10 19:05:24 STATS: cache [tournament], get [34 calls, 25 cache hits, 8 cache misses, 0 same version, 0 not found]
25.10 19:05:24 STATS: cache [tournament], segments [49 calls, 40 hits, 8 misses]
25.10 19:05:24 STATS: cache [tournament], database [1438 calls, 8 reads, 6 writes]
25.10 19:05:24 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:05:24 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:05:24 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [81], round => 2, id => 1, status => finished, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 18:58, startdate => 2016-25-10 18:58 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:05:24 TIME: vdl/cache.tournament.getAvailableTournament : 2.54 ms
25.10 19:05:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 19:05:26 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 19:05:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:05:26 TIME: core/server.query : 1.17 ms
25.10 19:05:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:05:26 STATS: cache [battle], get [8 calls, 1 cache hits, 6 cache misses, 0 same version, 3 not found]
25.10 19:05:26 STATS: cache [battle], segments [16 calls, 9 hits, 6 misses]
25.10 19:05:26 STATS: cache [battle], database [1440 calls, 6 reads, 4 writes]
25.10 19:05:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:05:26 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:05:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:05:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 97
Called from snipe/cache/CacheServer.hx line 487
25.10 19:05:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:05:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 19:05:26 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
25.10 19:05:26 STATS: cache [user], segments [22 calls, 11 hits, 10 misses]
25.10 19:05:26 STATS: cache [user], database [1440 calls, 5 reads, 8 writes]
25.10 19:05:26 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
25.10 19:05:26 STATS: cache manager [1], get [10 calls, total 0.02 sec spent, avg 1.52 ms]
25.10 19:05:26 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.16 ms]
25.10 19:05:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:05:26 TIME: core/cache.update : 0.58 ms
25.10 19:05:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 19:05:26 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
25.10 19:05:26 STATS: cache [questdata], segments [17 calls, 6 hits, 10 misses]
25.10 19:05:26 STATS: cache [questdata], database [1440 calls, 5 reads, 3 writes]
25.10 19:05:26 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
25.10 19:05:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:05:26 TIME: core/cache.update : 0.74 ms
25.10 19:05:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 19:05:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:05:26 TIME: core/user.logoutPost : 0.27 ms
25.10 19:05:26 TIMER: Clans cache...
25.10 19:05:26 TIMER: Clans cache: 0ms
25.10 19:05:26 TIMER: Check tournament...
25.10 19:05:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:05' OR rounddate = '2016-25-10 19:05' AND status <> 'finished'
25.10 19:05:26 TIMER: Check tournament: 1ms
25.10 19:05:26 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:05:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
25.10 19:05:27 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:05:27 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 19:05:27 TIME: vdl/cache.tournament.getStatus : 0.16 ms
25.10 19:05:27 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 2, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 19:05:27 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => 95, round => 1, player1 => 94, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:05:27 TIME: vdl/cache.tournament.setGrid : 0.12 ms
25.10 19:05:37 BLOCKREMOVE: user 95 removed
25.10 19:05:37 BLOCKREMOVE: questdata 95 removed
25.10 19:05:38 BLOCKREMOVE: tournament 1 removed
25.10 19:06:26 TIMER: Clans cache...
25.10 19:06:26 TIMER: Clans cache: 0ms
25.10 19:06:26 TIMER: Check tournament...
25.10 19:06:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:06' OR rounddate = '2016-25-10 19:06' AND status <> 'finished'
25.10 19:06:26 TIMER: Check tournament: 0ms
25.10 19:06:26 TIMER: Clans cache...
25.10 19:06:26 TIMER: Clans cache: 0ms
25.10 19:06:26 TIMER: Check tournament...
25.10 19:06:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:07' OR rounddate = '2016-25-10 19:07' AND status <> 'finished'
25.10 19:06:26 TIMER: Check tournament: 1ms
25.10 19:06:26 TIMER: Clans cache...
25.10 19:06:26 TIMER: Clans cache: 0ms
25.10 19:06:26 TIMER: Check tournament...
25.10 19:06:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:08' OR rounddate = '2016-25-10 19:08' AND status <> 'finished'
25.10 19:06:26 TIMER: Check tournament: 0ms
25.10 19:06:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
25.10 19:06:26 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
25.10 19:06:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:06:26 TIME: core/server.query : 1.61 ms
25.10 19:06:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:06:26 STATS: cache [battle], get [9 calls, 1 cache hits, 7 cache misses, 0 same version, 4 not found]
25.10 19:06:26 STATS: cache [battle], segments [17 calls, 9 hits, 7 misses]
25.10 19:06:26 STATS: cache [battle], database [1680 calls, 7 reads, 4 writes]
25.10 19:06:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:06:26 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:06:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:06:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 97
Called from snipe/cache/CacheServer.hx line 487
25.10 19:06:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:06:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
25.10 19:06:26 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
25.10 19:06:26 STATS: cache [user], segments [24 calls, 13 hits, 10 misses]
25.10 19:06:26 STATS: cache [user], database [1680 calls, 5 reads, 9 writes]
25.10 19:06:26 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
25.10 19:06:26 STATS: cache manager [1], get [10 calls, total 0.02 sec spent, avg 1.52 ms]
25.10 19:06:26 STATS: cache manager [1], update [14 calls, total 0 sec spent, avg 0.18 ms]
25.10 19:06:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:06:26 TIME: core/cache.update : 0.28 ms
25.10 19:06:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
25.10 19:06:26 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
25.10 19:06:26 STATS: cache [questdata], segments [19 calls, 8 hits, 10 misses]
25.10 19:06:26 STATS: cache [questdata], database [1680 calls, 5 reads, 4 writes]
25.10 19:06:26 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
25.10 19:06:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:06:26 TIME: core/cache.update : 0.21 ms
25.10 19:06:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
25.10 19:06:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:06:26 TIME: core/user.logoutPost : 0.06 ms
25.10 19:06:26 TIMER: Clans cache...
25.10 19:06:26 TIMER: Clans cache: 0ms
25.10 19:06:26 TIMER: Check tournament...
25.10 19:06:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:09' OR rounddate = '2016-25-10 19:09' AND status <> 'finished'
25.10 19:06:26 TIMER: Check tournament: 1ms
25.10 19:09:27 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:09:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
25.10 19:09:37 BLOCKREMOVE: user 94 removed
25.10 19:09:37 BLOCKREMOVE: questdata 94 removed
25.10 19:10:26 TIMER: Clans cache...
25.10 19:10:26 TIMER: Clans cache: 0ms
25.10 19:10:26 TIMER: Check tournament...
25.10 19:10:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:10' OR rounddate = '2016-25-10 19:10' AND status <> 'finished'
25.10 19:10:26 TIMER: Check tournament: 0ms
25.10 19:10:26 TIMER: Clans cache...
25.10 19:10:26 TIMER: Clans cache: 0ms
25.10 19:10:26 TIMER: Check tournament...
25.10 19:10:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:11' OR rounddate = '2016-25-10 19:11' AND status <> 'finished'
25.10 19:10:26 TIMER: Check tournament: 0ms
25.10 19:10:26 TIMER: Clans cache...
25.10 19:10:26 TIMER: Clans cache: 0ms
25.10 19:10:26 TIMER: Check tournament...
25.10 19:10:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:12' OR rounddate = '2016-25-10 19:12' AND status <> 'finished'
25.10 19:10:26 TIMER: Check tournament: 1ms
25.10 19:13:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 19:13:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 19:13:23 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 19:13:23 TIME: core/server.query : 0.98 ms
25.10 19:13:23 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 19:13:23 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 19:13:23 TIME: core/user.isOnlineID : 0.05 ms
25.10 19:13:23 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 19:13:23 STATS: cache [user], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
25.10 19:13:23 STATS: cache [user], segments [26 calls, 15 hits, 10 misses]
25.10 19:13:23 STATS: cache [user], database [1917 calls, 5 reads, 10 writes]
25.10 19:13:23 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
25.10 19:13:23 READDB: SELECT * FROM Users WHERE ID = 95
25.10 19:13:23 STATS: cache manager [1], get [11 calls, total 0.02 sec spent, avg 1.49 ms]
25.10 19:13:23 STATS: cache manager [1], update [15 calls, total 0 sec spent, avg 0.17 ms]
25.10 19:13:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 95 } }
25.10 19:13:23 TIME: core/cache.get : 1.62 ms
25.10 19:13:23 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 19:13:23 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
25.10 19:13:23 STATS: cache [questdata], segments [21 calls, 10 hits, 10 misses]
25.10 19:13:23 STATS: cache [questdata], database [1917 calls, 5 reads, 5 writes]
25.10 19:13:23 STATS: cache [questdata], lock [6 calls, 6 attempts, 0 failures]
25.10 19:13:23 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 19:13:23 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
25.10 19:13:23 TIME: core/cache.get : 1.68 ms
25.10 19:13:23 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 19:13:23 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:13:23 TIME: core/user.loginPost : 0.17 ms
25.10 19:13:26 TIMER: Clans cache...
25.10 19:13:26 TIMER: Clans cache: 0ms
25.10 19:13:26 TIMER: Check tournament...
25.10 19:13:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:13' OR rounddate = '2016-25-10 19:13' AND status <> 'finished'
25.10 19:13:26 TIMER: Check tournament: 1ms
25.10 19:13:27 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:13:27 DB: SELECT * FROM tournament
25.10 19:13:27 STATS: cache [tournament], get [36 calls, 26 cache hits, 9 cache misses, 0 same version, 0 not found]
25.10 19:13:27 STATS: cache [tournament], segments [51 calls, 41 hits, 9 misses]
25.10 19:13:27 STATS: cache [tournament], database [1921 calls, 9 reads, 6 writes]
25.10 19:13:27 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:13:27 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:13:27 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 19:17, startdate => 2016-25-10 19:17 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:13:27 TIME: vdl/cache.tournament.getAvailableTournament : 1.7 ms
25.10 19:13:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 19:13:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:13:31 TIME: core/cache.update : 0.12 ms
25.10 19:13:32 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:13:38 BLOCKREMOVE: tournament 1 removed
25.10 19:13:42 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:13:42 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:13:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 19:13:42 TIME: vdl/cache.tournament.addUsers : 1.57 ms
25.10 19:13:42 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:13:42 DB: SELECT * FROM tournament
25.10 19:13:42 DB: SELECT name FROM users WHERE id = 95
25.10 19:13:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 19:17, startdate => 2016-25-10 19:17 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:13:42 TIME: vdl/cache.tournament.getAvailableTournament : 1.9 ms
25.10 19:13:48 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:17', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95],"battleActive":[]}}', rounddate = E'2016-25-10 19:17' WHERE ID = 1
25.10 19:13:51 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:13:51 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 19:13:51 TIME: vdl/cache.tournament.getStatus : 0.22 ms
25.10 19:13:51 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 19:13:51 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
25.10 19:13:51 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 3.41 ms
25.10 19:13:51 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
25.10 19:13:51 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:13:51 TIME: vdl/cache.tournament.setGrid : 0.18 ms
25.10 19:14:02 BLOCKREMOVE: tournament 1 removed
25.10 19:14:26 TIMER: Clans cache...
25.10 19:14:26 TIMER: Clans cache: 0ms
25.10 19:14:26 TIMER: Check tournament...
25.10 19:14:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:14' OR rounddate = '2016-25-10 19:14' AND status <> 'finished'
25.10 19:14:26 TIMER: Check tournament: 1ms
25.10 19:14:46 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:14:46 DB: SELECT * FROM tournament
25.10 19:14:46 STATS: cache [tournament], get [41 calls, 29 cache hits, 11 cache misses, 0 same version, 0 not found]
25.10 19:14:46 STATS: cache [tournament], segments [58 calls, 46 hits, 11 misses]
25.10 19:14:46 STATS: cache [tournament], database [2000 calls, 11 reads, 7 writes]
25.10 19:14:46 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:14:46 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:14:46 DB: SELECT name FROM users WHERE id = 95
25.10 19:14:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 19:17, startdate => 2016-25-10 19:17 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:14:46 TIME: vdl/cache.tournament.getAvailableTournament : 3.49 ms
25.10 19:14:53 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:14:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 19:14:53 TIME: vdl/cache.tournament.getStatus : 0.21 ms
25.10 19:14:53 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 19:14:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
25.10 19:14:53 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.21 ms
25.10 19:14:53 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
25.10 19:14:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:14:53 TIME: vdl/cache.tournament.setGrid : 0.18 ms
25.10 19:14:55 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:14:55 DB: SELECT * FROM tournament
25.10 19:14:55 DB: SELECT name FROM users WHERE id = 95
25.10 19:14:55 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 19:17, startdate => 2016-25-10 19:17 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:14:55 TIME: vdl/cache.tournament.getAvailableTournament : 1.43 ms
25.10 19:15:02 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:15:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 19:15:02 TIME: vdl/cache.tournament.getStatus : 0.17 ms
25.10 19:15:02 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 19:15:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
25.10 19:15:02 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.21 ms
25.10 19:15:02 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
25.10 19:15:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:15:02 TIME: vdl/cache.tournament.setGrid : 0.2 ms
25.10 19:15:04 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 19:15:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 19:15:04 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 19:15:04 TIME: core/server.query : 1.16 ms
25.10 19:15:04 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 19:15:04 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 19:15:04 TIME: core/user.isOnlineID : 0.11 ms
25.10 19:15:04 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 19:15:04 STATS: cache [user], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
25.10 19:15:04 STATS: cache [user], segments [29 calls, 16 hits, 12 misses]
25.10 19:15:04 STATS: cache [user], database [2018 calls, 6 reads, 11 writes]
25.10 19:15:04 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
25.10 19:15:04 READDB: SELECT * FROM Users WHERE ID = 94
25.10 19:15:04 STATS: cache manager [1], get [13 calls, total 0.02 sec spent, avg 1.76 ms]
25.10 19:15:04 STATS: cache manager [1], update [16 calls, total 0 sec spent, avg 0.17 ms]
25.10 19:15:04 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 19:15:04 TIME: core/cache.get : 5.4 ms
25.10 19:15:04 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 19:15:04 STATS: cache [questdata], get [6 calls, 0 cache hits, 6 cache misses, 0 same version, 0 not found]
25.10 19:15:04 STATS: cache [questdata], segments [23 calls, 10 hits, 12 misses]
25.10 19:15:04 STATS: cache [questdata], database [2018 calls, 6 reads, 5 writes]
25.10 19:15:04 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
25.10 19:15:04 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 19:15:04 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 19:15:04 TIME: core/cache.get : 1.29 ms
25.10 19:15:04 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 19:15:04 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:15:04 TIME: core/user.loginPost : 0.17 ms
25.10 19:15:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 19:15:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:15:11 TIME: core/cache.update : 0.18 ms
25.10 19:15:12 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:15:13 BLOCKREMOVE: tournament 1 removed
25.10 19:15:16 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:15:16 DB: SELECT * FROM tournament
25.10 19:15:16 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:15:16 DB: SELECT name FROM users WHERE id = 95
25.10 19:15:16 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 19:17, startdate => 2016-25-10 19:17 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:15:16 TIME: vdl/cache.tournament.getAvailableTournament : 2.25 ms
25.10 19:15:20 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:15:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 19:15:20 TIME: vdl/cache.tournament.addUsers : 0.19 ms
25.10 19:15:22 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:17', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[]}}', rounddate = E'2016-25-10 19:17' WHERE ID = 1
25.10 19:15:25 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:15:25 DB: SELECT * FROM tournament
25.10 19:15:25 DB: SELECT name FROM users WHERE id = 95
25.10 19:15:25 DB: SELECT name FROM users WHERE id = 94
25.10 19:15:25 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 19:17, startdate => 2016-25-10 19:17 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:15:25 TIME: vdl/cache.tournament.getAvailableTournament : 1.79 ms
25.10 19:15:26 TIMER: Clans cache...
25.10 19:15:26 TIMER: Clans cache: 0ms
25.10 19:15:26 TIMER: Check tournament...
25.10 19:15:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:15' OR rounddate = '2016-25-10 19:15' AND status <> 'finished'
25.10 19:15:26 TIMER: Check tournament: 0ms
25.10 19:15:35 BLOCKREMOVE: tournament 1 removed
25.10 19:16:26 TIMER: Clans cache...
25.10 19:16:26 TIMER: Clans cache: 0ms
25.10 19:16:26 TIMER: Check tournament...
25.10 19:16:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:16' OR rounddate = '2016-25-10 19:16' AND status <> 'finished'
25.10 19:16:26 TIMER: Check tournament: 1ms
25.10 19:16:43 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:16:43 DB: SELECT * FROM tournament
25.10 19:16:43 STATS: cache [tournament], get [50 calls, 36 cache hits, 13 cache misses, 0 same version, 0 not found]
25.10 19:16:43 STATS: cache [tournament], segments [70 calls, 56 hits, 13 misses]
25.10 19:16:43 STATS: cache [tournament], database [2117 calls, 13 reads, 8 writes]
25.10 19:16:43 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:16:43 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:16:43 DB: SELECT name FROM users WHERE id = 95
25.10 19:16:43 DB: SELECT name FROM users WHERE id = 94
25.10 19:16:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 19:17, startdate => 2016-25-10 19:17 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:16:43 TIME: vdl/cache.tournament.getAvailableTournament : 2.06 ms
25.10 19:16:54 BLOCKREMOVE: tournament 1 removed
25.10 19:17:26 TIMER: Clans cache...
25.10 19:17:26 TIMER: Clans cache: 0ms
25.10 19:17:26 TIMER: Check tournament...
25.10 19:17:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:17' OR rounddate = '2016-25-10 19:17' AND status <> 'finished'
25.10 19:17:26 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:17:26 DB: SELECT nextval('Battle_id_seq') AS id
25.10 19:17:26 READDB: SELECT ID FROM Battle WHERE ID = 82
25.10 19:17:26 READDB: INSERT INTO Battle (ID) VALUES (82)
25.10 19:17:26 STATS: cache [battle], get [10 calls, 1 cache hits, 8 cache misses, 0 same version, 5 not found]
25.10 19:17:26 STATS: cache [battle], segments [18 calls, 9 hits, 8 misses]
25.10 19:17:26 STATS: cache [battle], database [2160 calls, 8 reads, 4 writes]
25.10 19:17:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:17:26 READDB: SELECT * FROM Battle WHERE ID = 82
25.10 19:17:26 DB: SELECT name FROM users WHERE id=94
25.10 19:17:26 DB: SELECT name FROM users WHERE id=95
25.10 19:17:26 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-25-10 19:17, id => 94, enemy.num => 2, battleId => 82, player => 1 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
25.10 19:17:26 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 19:17, id => 95, enemy.num => 1, battleId => 82, player => 2 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
25.10 19:17:26 TIMER: Check tournament: 57ms
25.10 19:17:32 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'false', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 82
25.10 19:17:32 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:17', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[82]}}', rounddate = E'2016-25-10 19:17' WHERE ID = 1
25.10 19:17:37 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:17:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 19:17:37 TIME: vdl/cache.tournament.getStatus : 0.16 ms
25.10 19:17:37 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
25.10 19:17:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [82]
25.10 19:17:37 TIME: vdl/cache.tournament.getBattlesTournaments : 0.11 ms
25.10 19:17:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 19:17:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95,94] }
25.10 19:17:37 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.16 ms
25.10 19:17:37 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 82, _type => vdl/cache.battle.finishRoom }
25.10 19:17:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
25.10 19:17:37 TIME: vdl/cache.battle.finishRoom : 0.14 ms
25.10 19:17:37 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 82, _type => vdl/cache.battle.deleteRoom }
25.10 19:17:37 ROOM: deleted room 82
25.10 19:17:37 DB: DELETE FROM Battle WHERE ID = 82
25.10 19:17:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 19:17:38 TIME: vdl/cache.battle.deleteRoom : 19.43 ms
25.10 19:17:38 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [82] }
25.10 19:17:38 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
25.10 19:17:38 TIME: vdl/cache.tournament.setBattlesTournaments : 0.18 ms
25.10 19:17:38 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [95], _type => vdl/cache.tournament.setUsersTournament }
25.10 19:17:38 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
25.10 19:17:38 TIME: vdl/cache.tournament.setUsersTournament : 0.12 ms
25.10 19:17:38 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 95, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 19:17:38 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:17:38 TIME: vdl/cache.tournament.setGrid : 0.13 ms
25.10 19:17:38 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-25-10 19:17, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound, status => finished }
25.10 19:17:38 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => ok, _type => vdl/cache.tournament.addRound }
25.10 19:17:38 TIME: vdl/cache.tournament.addRound : 0.13 ms
25.10 19:17:38 NET: vdl.0 (thread) request vdl/cache.tournament.finish { winner => 95, tournamentId => 1, _type => vdl/cache.tournament.finish }
25.10 19:17:38 QUEUE: vdl.0 (thread) response vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
25.10 19:17:38 TIME: vdl/cache.tournament.finish : 0.15 ms
25.10 19:17:38 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'true', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 82
25.10 19:17:38 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'95', status = E'finished', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-25-10 19:17', roundinterval = E'60', params = E'{"params":{"battleFinished":[82],"usersList":[95],"battleActive":[]}}', rounddate = E'2016-25-10 19:17' WHERE ID = 1
25.10 19:17:43 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:17:43 DB: SELECT * FROM tournament
25.10 19:17:43 STATS: cache [tournament], get [59 calls, 43 cache hits, 15 cache misses, 0 same version, 0 not found]
25.10 19:17:43 STATS: cache [tournament], segments [85 calls, 69 hits, 15 misses]
25.10 19:17:43 STATS: cache [tournament], database [2177 calls, 15 reads, 10 writes]
25.10 19:17:43 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:17:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 95, battleFinished => [82], round => 2, id => 1, status => finished, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 19:17, startdate => 2016-25-10 19:17 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:17:43 TIME: vdl/cache.tournament.getAvailableTournament : 1.82 ms
25.10 19:17:48 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:17:48 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 19:17:48 TIME: vdl/cache.tournament.getStatus : 0.19 ms
25.10 19:17:48 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 2, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 19:17:48 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 },{ winner => -1, round => 2, player1 => 95, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:17:48 TIME: vdl/cache.tournament.setGrid : 0.13 ms
25.10 19:17:48 BLOCKREMOVE: battle 82 removed
25.10 19:17:58 BLOCKREMOVE: tournament 1 removed
25.10 19:18:26 TIMER: Clans cache...
25.10 19:18:26 TIMER: Clans cache: 0ms
25.10 19:18:26 TIMER: Check tournament...
25.10 19:18:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:18' OR rounddate = '2016-25-10 19:18' AND status <> 'finished'
25.10 19:18:26 TIMER: Check tournament: 1ms
25.10 19:18:26 TIMER: Clans cache...
25.10 19:18:26 TIMER: Clans cache: 0ms
25.10 19:18:26 TIMER: Check tournament...
25.10 19:18:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:19' OR rounddate = '2016-25-10 19:19' AND status <> 'finished'
25.10 19:18:26 TIMER: Check tournament: 1ms
25.10 19:18:26 TIMER: Clans cache...
25.10 19:18:26 TIMER: Clans cache: 0ms
25.10 19:18:26 TIMER: Check tournament...
25.10 19:18:26 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:20' OR rounddate = '2016-25-10 19:20' AND status <> 'finished'
25.10 19:18:26 TIMER: Check tournament: 1ms
25.10 19:20:27 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:20:27 STATS: cache [tournament], get [61 calls, 45 cache hits, 15 cache misses, 0 same version, 0 not found]
25.10 19:20:27 STATS: cache [tournament], segments [87 calls, 71 hits, 15 misses]
25.10 19:20:27 STATS: cache [tournament], database [2340 calls, 15 reads, 10 writes]
25.10 19:20:27 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:20:27 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:20:27 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 19:20:27 TIME: vdl/cache.tournament.getStatus : 0.64 ms
25.10 19:20:27 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
25.10 19:20:27 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments []
25.10 19:20:27 TIME: vdl/cache.tournament.getBattlesTournaments : 0.05 ms
25.10 19:20:27 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 19:20:27 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
25.10 19:20:27 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.06 ms
25.10 19:20:27 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 82, _type => vdl/cache.battle.finishRoom }
25.10 19:20:27 STATS: cache [battle], get [12 calls, 2 cache hits, 9 cache misses, 0 same version, 5 not found]
25.10 19:20:27 STATS: cache [battle], segments [24 calls, 14 hits, 9 misses]
25.10 19:20:27 STATS: cache [battle], database [2340 calls, 9 reads, 6 writes]
25.10 19:20:27 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:20:27 READDB: SELECT * FROM Battle WHERE ID = 82
25.10 19:20:27 TRACE: vdl/cache.battle.finishRoom : Invalid field access : set
25.10 19:20:27 TRACE: vdl/cache.battle.finishRoom : 
Called from modules/VDLCache.hx line 695
Called from modules/VDLCache.hx line 136
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
25.10 19:20:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => _requestException, _type => vdl/cache.battle.finishRoom }
25.10 19:20:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 19:20:27 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 19:20:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:20:27 TIME: core/server.query : 0.81 ms
25.10 19:20:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:20:27 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:20:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:20:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 142
Called from modules/VDLCache.hx line 97
Called from snipe/cache/CacheServer.hx line 487
25.10 19:20:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:20:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 19:20:27 STATS: cache [user], get [7 calls, 0 cache hits, 7 cache misses, 0 same version, 0 not found]
25.10 19:20:27 STATS: cache [user], segments [32 calls, 17 hits, 14 misses]
25.10 19:20:27 STATS: cache [user], database [2340 calls, 7 reads, 12 writes]
25.10 19:20:27 STATS: cache [user], lock [7 calls, 7 attempts, 0 failures]
25.10 19:20:27 STATS: cache manager [1], get [14 calls, total 0.02 sec spent, avg 1.72 ms]
25.10 19:20:27 STATS: cache manager [1], update [18 calls, total 0 sec spent, avg 0.18 ms]
25.10 19:20:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:20:27 TIME: core/cache.update : 1.03 ms
25.10 19:20:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 19:20:27 STATS: cache [questdata], get [7 calls, 0 cache hits, 7 cache misses, 0 same version, 0 not found]
25.10 19:20:27 STATS: cache [questdata], segments [25 calls, 10 hits, 14 misses]
25.10 19:20:27 STATS: cache [questdata], database [2340 calls, 7 reads, 5 writes]
25.10 19:20:27 STATS: cache [questdata], lock [7 calls, 7 attempts, 0 failures]
25.10 19:20:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:20:27 TIME: core/cache.update : 0.55 ms
25.10 19:20:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 19:20:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:20:27 TIME: core/user.logoutPost : 0.11 ms
25.10 19:20:27 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:20:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
25.10 19:21:55 TIMER: Starting timer...
25.10 19:21:55 TIMER: Timer running...
25.10 19:21:55 DB: SELECT * FROM GameVars
25.10 19:21:55 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 19:21:55 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 19:21:55 DB: SELECT * FROM Shops WHERE ID = 1
25.10 19:21:55 TEMP: load ./tmp/quest_daily_ids
25.10 19:21:55 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
25.10 19:21:55 TEMP: save ./tmp/quest_daily_ids
25.10 19:21:55 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 19:21:55 QUEUE: vdl.0 (thread) response server.login
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM LocalizationStrings
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 6.68 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM GameVars
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.54 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.75 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.48 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.54 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.99 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/quest.getDaily
25.10 19:21:55 TIME: core/quest.getDaily : 0.03 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM UserAttributeTypes
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.68 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM UserVariableTypes
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.36 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 19:21:55 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 1.13 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM ItemGroups
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.4 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM Bundles ORDER BY ID
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.65 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.43 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/shop.getList
25.10 19:21:55 TIME: core/shop.getList : 0.03 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM EffectAttributeTypes
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.41 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM Effects
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.34 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 19:21:55 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.92 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 19:21:55 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.57 ms
25.10 19:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 19:21:55 DB: SELECT * FROM Badges
25.10 19:21:55 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:21:55 TIME: core/server.query : 0.62 ms
25.10 19:22:45 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 19:22:45 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 19:22:45 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:22:45 TIME: core/server.query : 3.02 ms
25.10 19:22:45 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 19:22:45 QUEUE: vdl.0 (thread) response core/user.isOnlineID
25.10 19:22:45 TIME: core/user.isOnlineID : 0.07 ms
25.10 19:22:45 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 19:22:45 READDB: SELECT * FROM Users WHERE ID = 94
25.10 19:22:45 QUEUE: vdl.0 (thread) response core/cache.get
25.10 19:22:45 TIME: core/cache.get : 4.23 ms
25.10 19:22:45 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 19:22:45 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 19:22:45 QUEUE: vdl.0 (thread) response core/cache.get
25.10 19:22:45 TIME: core/cache.get : 1.38 ms
25.10 19:22:45 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 19:22:45 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:22:45 TIME: core/user.loginPost : 0.13 ms
25.10 19:22:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 19:22:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:22:50 TIME: core/cache.update : 0.29 ms
25.10 19:22:51 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:22:55 TIMER: Clans cache...
25.10 19:22:55 TIMER: Clans cache: 0ms
25.10 19:22:55 TIMER: Check tournament...
25.10 19:22:55 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:22' OR rounddate = '2016-25-10 19:22' AND status <> 'finished'
25.10 19:22:55 TIMER: Check tournament: 2ms
25.10 19:23:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 19:23:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 19:23:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 19:23:31 TIME: core/server.query : 2.56 ms
25.10 19:23:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 19:23:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 19:23:31 TIME: core/user.isOnlineID : 0.11 ms
25.10 19:23:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 19:23:31 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 19:23:31 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
25.10 19:23:31 STATS: cache [user], database [96 calls, 1 reads, 1 writes]
25.10 19:23:31 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
25.10 19:23:31 READDB: SELECT * FROM Users WHERE ID = 95
25.10 19:23:31 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.36 ms]
25.10 19:23:31 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.1 ms]
25.10 19:23:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 95 } }
25.10 19:23:31 TIME: core/cache.get : 2.08 ms
25.10 19:23:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 19:23:31 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 19:23:31 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
25.10 19:23:31 STATS: cache [questdata], database [96 calls, 1 reads, 0 writes]
25.10 19:23:31 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
25.10 19:23:31 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 19:23:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
25.10 19:23:31 TIME: core/cache.get : 1.65 ms
25.10 19:23:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 19:23:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:23:31 TIME: core/user.loginPost : 0.13 ms
25.10 19:23:40 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 19:23:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:23:40 TIME: core/cache.update : 0.09 ms
25.10 19:23:41 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:23:46 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:23:46 DB: SELECT * FROM tournament
25.10 19:23:46 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:23:46 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
25.10 19:23:46 STATS: cache [tournament], database [111 calls, 0 reads, 0 writes]
25.10 19:23:46 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:23:46 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:23:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 19:27, startdate => 2016-25-10 19:27 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:23:46 TIME: vdl/cache.tournament.getAvailableTournament : 3.48 ms
25.10 19:23:50 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:23:50 TRACE: vdl/cache.tournament.addUsers : Invalid field access : push
25.10 19:23:50 TRACE: vdl/cache.tournament.addUsers : 
Called from modules/VDLCache.hx line 662
Called from modules/VDLCache.hx line 176
Called from modules/VDLCache.hx line 102
Called from snipe/cache/CacheServer.hx line 487
25.10 19:23:50 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => _requestException, _type => vdl/cache.tournament.addUsers }
25.10 19:23:55 TIMER: Clans cache...
25.10 19:23:55 TIMER: Clans cache: 0ms
25.10 19:23:55 TIMER: Check tournament...
25.10 19:23:55 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:23' OR rounddate = '2016-25-10 19:23' AND status <> 'finished'
25.10 19:23:55 TIMER: Check tournament: 1ms
25.10 19:24:00 BLOCKREMOVE: tournament 1 removed
25.10 19:24:08 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:24:08 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:24:08 TRACE: vdl/cache.tournament.addUsers : Invalid field access : push
25.10 19:24:08 TRACE: vdl/cache.tournament.addUsers : 
Called from modules/VDLCache.hx line 662
Called from modules/VDLCache.hx line 176
Called from modules/VDLCache.hx line 102
Called from snipe/cache/CacheServer.hx line 487
25.10 19:24:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => _requestException, _type => vdl/cache.tournament.addUsers }
25.10 19:24:30 TIMER: Starting timer...
25.10 19:24:30 TIMER: Timer running...
25.10 19:24:30 DB: SELECT * FROM GameVars
25.10 19:24:30 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 19:24:30 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 19:24:30 DB: SELECT * FROM Shops WHERE ID = 1
25.10 19:24:30 TEMP: load ./tmp/quest_daily_ids
25.10 19:24:30 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
25.10 19:24:30 TEMP: save ./tmp/quest_daily_ids
25.10 19:24:30 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 19:24:30 QUEUE: vdl.0 (thread) response server.login
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM LocalizationStrings
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 12.2 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM GameVars
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.6 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 1.11 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.56 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 1.23 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 1.47 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/quest.getDaily
25.10 19:24:30 TIME: core/quest.getDaily : 0.04 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM UserAttributeTypes
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.77 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM UserVariableTypes
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.78 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 19:24:30 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 1.68 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM ItemGroups
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.5 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM Bundles ORDER BY ID
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.67 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.51 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/shop.getList
25.10 19:24:30 TIME: core/shop.getList : 0.04 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM EffectAttributeTypes
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.57 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM Effects
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.4 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 19:24:30 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.74 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 19:24:30 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.59 ms
25.10 19:24:30 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 19:24:30 DB: SELECT * FROM Badges
25.10 19:24:30 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:24:30 TIME: core/server.query : 0.62 ms
25.10 19:24:30 TIMER: Clans cache...
25.10 19:24:30 TIMER: Clans cache: 0ms
25.10 19:24:30 TIMER: Check tournament...
25.10 19:24:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:25' OR rounddate = '2016-25-10 19:25' AND status <> 'finished'
25.10 19:24:30 TIMER: Check tournament: 1ms
25.10 19:24:30 TIMER: Clans cache...
25.10 19:24:30 TIMER: Clans cache: 0ms
25.10 19:24:30 TIMER: Check tournament...
25.10 19:24:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:26' OR rounddate = '2016-25-10 19:26' AND status <> 'finished'
25.10 19:24:30 TIMER: Check tournament: 1ms
25.10 19:26:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 19:26:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 19:26:42 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:26:42 TIME: core/server.query : 2.85 ms
25.10 19:26:42 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 19:26:42 QUEUE: vdl.0 (thread) response core/user.isOnlineID
25.10 19:26:42 TIME: core/user.isOnlineID : 0.09 ms
25.10 19:26:42 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 19:26:42 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:26:42 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
25.10 19:26:42 STATS: cache [user], database [132 calls, 0 reads, 0 writes]
25.10 19:26:42 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
25.10 19:26:42 READDB: SELECT * FROM Users WHERE ID = 95
25.10 19:26:42 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.23 ms]
25.10 19:26:42 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
25.10 19:26:42 QUEUE: vdl.0 (thread) response core/cache.get
25.10 19:26:42 TIME: core/cache.get : 4.46 ms
25.10 19:26:42 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 19:26:42 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:26:42 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
25.10 19:26:42 STATS: cache [questdata], database [132 calls, 0 reads, 0 writes]
25.10 19:26:42 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
25.10 19:26:42 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 19:26:42 QUEUE: vdl.0 (thread) response core/cache.get
25.10 19:26:42 TIME: core/cache.get : 1.37 ms
25.10 19:26:42 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 19:26:42 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:26:42 TIME: core/user.loginPost : 0.09 ms
25.10 19:26:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 19:26:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:26:50 TIME: core/cache.update : 0.21 ms
25.10 19:26:51 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:27:16 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 19:27:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 19:27:16 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 19:27:16 TIME: core/server.query : 1.87 ms
25.10 19:27:16 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 19:27:16 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 19:27:16 TIME: core/user.isOnlineID : 0.13 ms
25.10 19:27:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 19:27:16 READDB: SELECT * FROM Users WHERE ID = 94
25.10 19:27:16 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 19:27:16 TIME: core/cache.get : 1.17 ms
25.10 19:27:16 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 19:27:16 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 19:27:16 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 19:27:16 TIME: core/cache.get : 0.77 ms
25.10 19:27:16 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 19:27:16 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:27:16 TIME: core/user.loginPost : 0.12 ms
25.10 19:27:21 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:27:21 DB: SELECT * FROM tournament
25.10 19:27:21 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:27:21 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
25.10 19:27:21 STATS: cache [tournament], database [172 calls, 0 reads, 0 writes]
25.10 19:27:21 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:27:21 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:27:21 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 19:30, startdate => 2016-25-10 19:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:27:21 TIME: vdl/cache.tournament.getAvailableTournament : 3.6 ms
25.10 19:27:25 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 19:27:25 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:27:25 TIME: core/cache.update : 0.26 ms
25.10 19:27:26 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:27:26 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:27:26 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 19:27:26 TIME: vdl/cache.tournament.addUsers : 0.22 ms
25.10 19:27:27 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:27:27 DB: SELECT * FROM tournament
25.10 19:27:27 DB: SELECT name FROM users WHERE id = 95
25.10 19:27:27 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 19:30, startdate => 2016-25-10 19:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:27:27 TIME: vdl/cache.tournament.getAvailableTournament : 1.87 ms
25.10 19:27:27 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:30', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95],"battleActive":[],"usersAll":[95]}}', rounddate = E'2016-25-10 19:30' WHERE ID = 1
25.10 19:27:30 TIMER: Clans cache...
25.10 19:27:30 TIMER: Clans cache: 0ms
25.10 19:27:30 TIMER: Check tournament...
25.10 19:27:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:27' OR rounddate = '2016-25-10 19:27' AND status <> 'finished'
25.10 19:27:30 TIMER: Check tournament: 2ms
25.10 19:27:33 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:27:33 DB: SELECT * FROM tournament
25.10 19:27:33 DB: SELECT name FROM users WHERE id = 95
25.10 19:27:33 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 19:30, startdate => 2016-25-10 19:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:27:33 TIME: vdl/cache.tournament.getAvailableTournament : 2.41 ms
25.10 19:27:37 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:27:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 19:27:37 TIME: vdl/cache.tournament.addUsers : 0.24 ms
25.10 19:27:38 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:30', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[],"usersAll":[95,94]}}', rounddate = E'2016-25-10 19:30' WHERE ID = 1
25.10 19:27:48 BLOCKREMOVE: tournament 1 removed
25.10 19:28:30 TIMER: Clans cache...
25.10 19:28:30 TIMER: Clans cache: 0ms
25.10 19:28:30 TIMER: Check tournament...
25.10 19:28:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:28' OR rounddate = '2016-25-10 19:28' AND status <> 'finished'
25.10 19:28:30 TIMER: Check tournament: 2ms
25.10 19:28:30 TIMER: Clans cache...
25.10 19:28:30 TIMER: Clans cache: 0ms
25.10 19:28:30 TIMER: Check tournament...
25.10 19:28:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:29' OR rounddate = '2016-25-10 19:29' AND status <> 'finished'
25.10 19:28:30 TIMER: Check tournament: 0ms
25.10 19:28:30 TIMER: Clans cache...
25.10 19:28:30 TIMER: Clans cache: 0ms
25.10 19:28:30 TIMER: Check tournament...
25.10 19:28:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:30' OR rounddate = '2016-25-10 19:30' AND status <> 'finished'
25.10 19:28:30 STATS: cache [tournament], get [6 calls, 4 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 19:28:30 STATS: cache [tournament], segments [8 calls, 6 hits, 1 misses]
25.10 19:28:30 STATS: cache [tournament], database [360 calls, 1 reads, 2 writes]
25.10 19:28:30 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:28:30 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:28:30 DB: SELECT nextval('Battle_id_seq') AS id
25.10 19:28:30 READDB: SELECT ID FROM Battle WHERE ID = 83
25.10 19:28:30 READDB: INSERT INTO Battle (ID) VALUES (83)
25.10 19:28:30 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:28:30 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
25.10 19:28:30 STATS: cache [battle], database [360 calls, 0 reads, 0 writes]
25.10 19:28:30 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:28:30 READDB: SELECT * FROM Battle WHERE ID = 83
25.10 19:28:30 DB: SELECT name FROM users WHERE id=94
25.10 19:28:30 DB: SELECT name FROM users WHERE id=95
25.10 19:28:30 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-25-10 19:30, id => 94, enemy.num => 2, battleId => 83, player => 1 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
25.10 19:28:30 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 19:30, id => 95, enemy.num => 1, battleId => 83, player => 2 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
25.10 19:28:30 TIMER: Check tournament: 52ms
25.10 19:30:35 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'false', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 83
25.10 19:30:35 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:30', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[83],"usersAll":[95,94]}}', rounddate = E'2016-25-10 19:30' WHERE ID = 1
25.10 19:30:45 BLOCKREMOVE: battle 83 removed
25.10 19:30:45 BLOCKREMOVE: tournament 1 removed
25.10 19:31:30 TIMER: Clans cache...
25.10 19:31:30 TIMER: Clans cache: 0ms
25.10 19:31:30 TIMER: Check tournament...
25.10 19:31:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:31' OR rounddate = '2016-25-10 19:31' AND status <> 'finished'
25.10 19:31:30 TIMER: Check tournament: 1ms
25.10 19:31:31 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:31:31 DB: SELECT * FROM tournament
25.10 19:31:31 STATS: cache [tournament], get [7 calls, 4 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 19:31:31 STATS: cache [tournament], segments [10 calls, 7 hits, 2 misses]
25.10 19:31:31 STATS: cache [tournament], database [421 calls, 2 reads, 3 writes]
25.10 19:31:31 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:31:31 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:31:31 DB: SELECT name FROM users WHERE id = 95
25.10 19:31:31 DB: SELECT name FROM users WHERE id = 94
25.10 19:31:31 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [83], rounddate => 2016-25-10 19:30, startdate => 2016-25-10 19:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:31:31 TIME: vdl/cache.tournament.getAvailableTournament : 3.29 ms
25.10 19:31:40 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:31:40 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 19:31:40 TIME: vdl/cache.tournament.getStatus : 0.15 ms
25.10 19:31:40 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => active }
25.10 19:31:40 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:31:40 TIME: vdl/cache.tournament.setGrid : 0.12 ms
25.10 19:31:50 BLOCKREMOVE: tournament 1 removed
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:31:54 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 19:31:54 TIME: vdl/cache.tournament.getStatus : 1.45 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [83]
25.10 19:31:54 TIME: vdl/cache.tournament.getBattlesTournaments : 0.12 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95,94] }
25.10 19:31:54 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.14 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 83, _type => vdl/cache.battle.finishRoom }
25.10 19:31:54 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 19:31:54 STATS: cache [battle], segments [4 calls, 2 hits, 1 misses]
25.10 19:31:54 STATS: cache [battle], database [444 calls, 1 reads, 1 writes]
25.10 19:31:54 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:31:54 READDB: SELECT * FROM Battle WHERE ID = 83
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
25.10 19:31:54 TIME: vdl/cache.battle.finishRoom : 0.96 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 83, _type => vdl/cache.battle.deleteRoom }
25.10 19:31:54 ROOM: deleted room 83
25.10 19:31:54 DB: DELETE FROM Battle WHERE ID = 83
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 19:31:54 TIME: vdl/cache.battle.deleteRoom : 16.59 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [83] }
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
25.10 19:31:54 TIME: vdl/cache.tournament.setBattlesTournaments : 0.28 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [94], _type => vdl/cache.tournament.setUsersTournament }
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
25.10 19:31:54 TIME: vdl/cache.tournament.setUsersTournament : 0.13 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 94, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 2, player1 => 94, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:31:54 TIME: vdl/cache.tournament.setGrid : 0.13 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.tournament.addRound { dateRound => 2016-25-10 19:30, tournamentId => 1, round => 2, _type => vdl/cache.tournament.addRound, status => finished }
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addRound { errorCode => ok, _type => vdl/cache.tournament.addRound }
25.10 19:31:54 TIME: vdl/cache.tournament.addRound : 0.3 ms
25.10 19:31:54 NET: vdl.0 (thread) request vdl/cache.tournament.finish { winner => 94, tournamentId => 1, _type => vdl/cache.tournament.finish }
25.10 19:31:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.finish { _type => vdl/cache.tournament.finish }
25.10 19:31:54 TIME: vdl/cache.tournament.finish : 0.15 ms
25.10 19:31:59 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'true', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 83
25.10 19:31:59 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'94', status = E'finished', type = E'once', repeatinterval = E'0', round = E'2', startdate = E'2016-25-10 19:30', roundinterval = E'60', params = E'{"params":{"battleFinished":[83],"usersList":[94],"battleActive":[],"usersAll":[95,94]}}', rounddate = E'2016-25-10 19:30' WHERE ID = 1
25.10 19:32:09 BLOCKREMOVE: battle 83 removed
25.10 19:32:09 BLOCKREMOVE: tournament 1 removed
25.10 19:32:28 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:32:28 DB: SELECT * FROM tournament
25.10 19:32:28 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:32:28 DB: SELECT name FROM users WHERE id = 95
25.10 19:32:28 DB: SELECT name FROM users WHERE id = 94
25.10 19:32:28 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => 94, battleFinished => [83], round => 2, id => 1, status => finished, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [], rounddate => 2016-25-10 19:30, startdate => 2016-25-10 19:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:32:28 TIME: vdl/cache.tournament.getAvailableTournament : 4.12 ms
25.10 19:32:30 TIMER: Clans cache...
25.10 19:32:30 TIMER: Clans cache: 0ms
25.10 19:32:30 TIMER: Check tournament...
25.10 19:32:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:32' OR rounddate = '2016-25-10 19:32' AND status <> 'finished'
25.10 19:32:30 TIMER: Check tournament: 0ms
25.10 19:32:34 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:32:34 STATS: cache [tournament], get [17 calls, 11 cache hits, 5 cache misses, 0 same version, 0 not found]
25.10 19:32:34 STATS: cache [tournament], segments [25 calls, 19 hits, 5 misses]
25.10 19:32:34 STATS: cache [tournament], database [484 calls, 5 reads, 4 writes]
25.10 19:32:34 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:32:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => finished }
25.10 19:32:34 TIME: vdl/cache.tournament.getStatus : 0.28 ms
25.10 19:32:34 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 2, _type => vdl/cache.tournament.setGrid, status => finished }
25.10 19:32:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 2, player1 => 94, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:32:34 TIME: vdl/cache.tournament.setGrid : 0.09 ms
25.10 19:32:44 BLOCKREMOVE: tournament 1 removed
25.10 19:33:30 TIMER: Clans cache...
25.10 19:33:30 TIMER: Clans cache: 0ms
25.10 19:33:30 TIMER: Check tournament...
25.10 19:33:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:33' OR rounddate = '2016-25-10 19:33' AND status <> 'finished'
25.10 19:33:30 TIMER: Check tournament: 0ms
25.10 19:33:30 TIMER: Clans cache...
25.10 19:33:30 TIMER: Clans cache: 0ms
25.10 19:33:30 TIMER: Check tournament...
25.10 19:33:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:34' OR rounddate = '2016-25-10 19:34' AND status <> 'finished'
25.10 19:33:30 TIMER: Check tournament: 0ms
25.10 19:33:30 TIMER: Clans cache...
25.10 19:33:30 TIMER: Clans cache: 0ms
25.10 19:33:30 TIMER: Check tournament...
25.10 19:33:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:35' OR rounddate = '2016-25-10 19:35' AND status <> 'finished'
25.10 19:33:30 TIMER: Check tournament: 1ms
25.10 19:33:30 TIMER: Clans cache...
25.10 19:33:30 TIMER: Clans cache: 0ms
25.10 19:33:30 TIMER: Check tournament...
25.10 19:33:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:36' OR rounddate = '2016-25-10 19:36' AND status <> 'finished'
25.10 19:33:30 TIMER: Check tournament: 1ms
25.10 19:33:30 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 19:33:30 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 19:33:30 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:33:30 TIME: core/server.query : 0.91 ms
25.10 19:33:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:33:30 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 19:33:30 STATS: cache [battle], segments [7 calls, 4 hits, 2 misses]
25.10 19:33:30 STATS: cache [battle], database [780 calls, 2 reads, 2 writes]
25.10 19:33:30 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:33:30 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:33:30 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:33:30 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
25.10 19:33:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:33:30 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 19:33:30 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 19:33:30 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
25.10 19:33:30 STATS: cache [user], database [780 calls, 2 reads, 2 writes]
25.10 19:33:30 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
25.10 19:33:30 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.76 ms]
25.10 19:33:30 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.08 ms]
25.10 19:33:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:33:30 TIME: core/cache.update : 0.22 ms
25.10 19:33:30 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 19:33:30 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 19:33:30 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
25.10 19:33:30 STATS: cache [questdata], database [780 calls, 2 reads, 0 writes]
25.10 19:33:30 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
25.10 19:33:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:33:30 TIME: core/cache.update : 0.12 ms
25.10 19:33:30 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 19:33:30 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:33:30 TIME: core/user.logoutPost : 0.04 ms
25.10 19:33:30 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
25.10 19:33:30 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
25.10 19:33:30 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:33:30 TIME: core/server.query : 0.83 ms
25.10 19:33:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:33:30 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:33:30 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:33:30 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
25.10 19:33:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:33:30 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
25.10 19:33:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:33:30 TIME: core/cache.update : 0.1 ms
25.10 19:33:30 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
25.10 19:33:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:33:30 TIME: core/cache.update : 0.08 ms
25.10 19:33:30 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
25.10 19:33:30 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:33:30 TIME: core/user.logoutPost : 0.06 ms
25.10 19:33:30 TIMER: Clans cache...
25.10 19:33:30 TIMER: Clans cache: 0ms
25.10 19:33:30 TIMER: Check tournament...
25.10 19:33:30 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:37' OR rounddate = '2016-25-10 19:37' AND status <> 'finished'
25.10 19:33:30 TIMER: Check tournament: 0ms
25.10 19:33:30 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:33:30 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:33:30 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
25.10 19:33:30 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
25.10 19:37:40 BLOCKREMOVE: user 95 removed
25.10 19:37:40 BLOCKREMOVE: user 94 removed
25.10 19:37:40 BLOCKREMOVE: questdata 95 removed
25.10 19:37:40 BLOCKREMOVE: questdata 94 removed
25.10 19:38:44 TIMER: Starting timer...
25.10 19:38:44 TIMER: Timer running...
25.10 19:38:44 DB: SELECT * FROM GameVars
25.10 19:38:44 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 19:38:44 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 19:38:44 DB: SELECT * FROM Shops WHERE ID = 1
25.10 19:38:44 TEMP: load ./tmp/quest_daily_ids
25.10 19:38:44 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
25.10 19:38:44 TEMP: save ./tmp/quest_daily_ids
25.10 19:38:44 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
25.10 19:38:44 QUEUE: vdl.0 (thread) response server.login
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM LocalizationStrings
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 6.37 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM GameVars
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.5 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.72 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.43 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.49 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.82 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/quest.getDaily
25.10 19:38:44 TIME: core/quest.getDaily : 0.03 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM UserAttributeTypes
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.53 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM UserVariableTypes
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.46 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
25.10 19:38:44 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.9 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM ItemGroups
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.33 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM Bundles ORDER BY ID
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.61 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM BundleItems ORDER BY ID
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.41 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/shop.getList
25.10 19:38:44 TIME: core/shop.getList : 0.02 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM EffectAttributeTypes
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.42 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM Effects
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.34 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
25.10 19:38:44 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.74 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
25.10 19:38:44 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.5 ms
25.10 19:38:44 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
25.10 19:38:44 DB: SELECT * FROM Badges
25.10 19:38:44 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:38:44 TIME: core/server.query : 0.35 ms
25.10 19:38:44 TIMER: Clans cache...
25.10 19:38:44 TIMER: Clans cache: 0ms
25.10 19:38:44 TIMER: Check tournament...
25.10 19:38:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:39' OR rounddate = '2016-25-10 19:39' AND status <> 'finished'
25.10 19:38:44 TIMER: Check tournament: 2ms
25.10 19:38:44 TIMER: Clans cache...
25.10 19:38:44 TIMER: Clans cache: 0ms
25.10 19:38:44 TIMER: Check tournament...
25.10 19:38:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:40' OR rounddate = '2016-25-10 19:40' AND status <> 'finished'
25.10 19:38:44 TIMER: Check tournament: 1ms
25.10 19:38:44 TIMER: Clans cache...
25.10 19:38:44 TIMER: Clans cache: 0ms
25.10 19:38:44 TIMER: Check tournament...
25.10 19:38:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:41' OR rounddate = '2016-25-10 19:41' AND status <> 'finished'
25.10 19:38:44 TIMER: Check tournament: 1ms
25.10 19:42:04 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 19:42:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 19:42:04 QUEUE: vdl.0 (thread) response core/server.query
25.10 19:42:04 TIME: core/server.query : 3.27 ms
25.10 19:42:04 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 19:42:04 QUEUE: vdl.0 (thread) response core/user.isOnlineID
25.10 19:42:04 TIME: core/user.isOnlineID : 0.1 ms
25.10 19:42:04 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 19:42:04 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:42:04 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
25.10 19:42:04 STATS: cache [user], database [201 calls, 0 reads, 0 writes]
25.10 19:42:04 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
25.10 19:42:04 READDB: SELECT * FROM Users WHERE ID = 95
25.10 19:42:04 STATS: cache manager [1], get [1 calls, total 0.01 sec spent, avg 5.07 ms]
25.10 19:42:04 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
25.10 19:42:04 QUEUE: vdl.0 (thread) response core/cache.get
25.10 19:42:04 TIME: core/cache.get : 5.31 ms
25.10 19:42:04 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 19:42:04 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:42:04 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
25.10 19:42:04 STATS: cache [questdata], database [201 calls, 0 reads, 0 writes]
25.10 19:42:04 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
25.10 19:42:04 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 19:42:04 QUEUE: vdl.0 (thread) response core/cache.get
25.10 19:42:04 TIME: core/cache.get : 1.66 ms
25.10 19:42:04 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 19:42:04 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:42:04 TIME: core/user.loginPost : 0.15 ms
25.10 19:42:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 19:42:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:42:14 TIME: core/cache.update : 0.17 ms
25.10 19:42:15 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:42:24 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:42:24 DB: SELECT * FROM tournament
25.10 19:42:24 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:42:24 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
25.10 19:42:24 STATS: cache [tournament], database [221 calls, 0 reads, 0 writes]
25.10 19:42:24 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:42:24 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:42:24 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [], rounddate => 2016-25-10 19:44, startdate => 2016-25-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:42:24 TIME: vdl/cache.tournament.getAvailableTournament : 3.42 ms
25.10 19:42:29 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:42:29 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 19:42:29 TIME: vdl/cache.tournament.addUsers : 0.23 ms
25.10 19:42:29 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:42:29 DB: SELECT * FROM tournament
25.10 19:42:29 DB: SELECT name FROM users WHERE id = 95
25.10 19:42:29 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 19:44, startdate => 2016-25-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:42:29 TIME: vdl/cache.tournament.getAvailableTournament : 2.15 ms
25.10 19:42:30 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:44', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95],"battleActive":[],"usersAll":[95]}}', rounddate = E'2016-25-10 19:44' WHERE ID = 1
25.10 19:42:40 BLOCKREMOVE: tournament 1 removed
25.10 19:42:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 19:42:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 19:42:41 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 19:42:41 TIME: core/server.query : 1.09 ms
25.10 19:42:41 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 19:42:41 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 19:42:41 TIME: core/user.isOnlineID : 0.11 ms
25.10 19:42:41 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 19:42:41 READDB: SELECT * FROM Users WHERE ID = 94
25.10 19:42:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 19:42:41 TIME: core/cache.get : 1.57 ms
25.10 19:42:41 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 19:42:41 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 19:42:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 19:42:41 TIME: core/cache.get : 0.98 ms
25.10 19:42:41 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 19:42:41 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:42:41 TIME: core/user.loginPost : 0.07 ms
25.10 19:42:44 TIMER: Clans cache...
25.10 19:42:44 TIMER: Clans cache: 0ms
25.10 19:42:44 TIMER: Check tournament...
25.10 19:42:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:42' OR rounddate = '2016-25-10 19:42' AND status <> 'finished'
25.10 19:42:44 TIMER: Check tournament: 0ms
25.10 19:42:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 19:42:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:42:49 TIME: core/cache.update : 0.19 ms
25.10 19:42:50 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:42:53 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:42:53 DB: SELECT * FROM tournament
25.10 19:42:53 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:42:53 DB: SELECT name FROM users WHERE id = 95
25.10 19:42:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [], rounddate => 2016-25-10 19:44, startdate => 2016-25-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:42:53 TIME: vdl/cache.tournament.getAvailableTournament : 6.97 ms
25.10 19:42:57 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 94, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:42:57 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 19:42:57 TIME: vdl/cache.tournament.addUsers : 0.24 ms
25.10 19:42:59 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:44', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[],"usersAll":[95,94]}}', rounddate = E'2016-25-10 19:44' WHERE ID = 1
25.10 19:43:09 BLOCKREMOVE: tournament 1 removed
25.10 19:43:44 TIMER: Clans cache...
25.10 19:43:44 TIMER: Clans cache: 0ms
25.10 19:43:44 TIMER: Check tournament...
25.10 19:43:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:43' OR rounddate = '2016-25-10 19:43' AND status <> 'finished'
25.10 19:43:44 TIMER: Check tournament: 1ms
25.10 19:43:44 TIMER: Clans cache...
25.10 19:43:44 TIMER: Clans cache: 0ms
25.10 19:43:44 TIMER: Check tournament...
25.10 19:43:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:44' OR rounddate = '2016-25-10 19:44' AND status <> 'finished'
25.10 19:43:44 STATS: cache [tournament], get [6 calls, 3 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 19:43:44 STATS: cache [tournament], segments [8 calls, 5 hits, 2 misses]
25.10 19:43:44 STATS: cache [tournament], database [360 calls, 2 reads, 2 writes]
25.10 19:43:44 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:43:44 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:43:44 DB: SELECT nextval('Battle_id_seq') AS id
25.10 19:43:44 READDB: SELECT ID FROM Battle WHERE ID = 84
25.10 19:43:44 READDB: INSERT INTO Battle (ID) VALUES (84)
25.10 19:43:44 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
25.10 19:43:44 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
25.10 19:43:44 STATS: cache [battle], database [360 calls, 0 reads, 0 writes]
25.10 19:43:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:43:44 READDB: SELECT * FROM Battle WHERE ID = 84
25.10 19:43:44 DB: SELECT name FROM users WHERE id=94
25.10 19:43:44 DB: SELECT name FROM users WHERE id=95
25.10 19:43:44 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid94, tournamentId => 1, enemy.id => 95, enemy.name => uid95, round => 1, roundDate => 2016-25-10 19:44, id => 94, enemy.num => 2, battleId => 84, player => 1 }, _isNotify => true, id => 94, _type => tournament.enemyEvent }
25.10 19:43:44 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid95, tournamentId => 1, enemy.id => 94, enemy.name => uid94, round => 1, roundDate => 2016-25-10 19:44, id => 95, enemy.num => 1, battleId => 84, player => 2 }, _isNotify => true, id => 95, _type => tournament.enemyEvent }
25.10 19:43:44 TIMER: Check tournament: 54ms
25.10 19:44:49 WRITEDB: UPDATE Battle SET secondid = E'95', turnid = E'94', finished = E'false', firstid = E'94', params = E'{}', avaliable = E'false' WHERE ID = 84
25.10 19:44:49 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-25-10 19:44', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95,94],"battleActive":[84],"usersAll":[95,94]}}', rounddate = E'2016-25-10 19:44' WHERE ID = 1
25.10 19:44:59 BLOCKREMOVE: battle 84 removed
25.10 19:44:59 BLOCKREMOVE: tournament 1 removed
25.10 19:45:44 TIMER: Clans cache...
25.10 19:45:44 TIMER: Clans cache: 0ms
25.10 19:45:44 TIMER: Check tournament...
25.10 19:45:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:45' OR rounddate = '2016-25-10 19:45' AND status <> 'finished'
25.10 19:45:44 TIMER: Check tournament: 1ms
25.10 19:45:44 TIMER: Clans cache...
25.10 19:45:44 TIMER: Clans cache: 0ms
25.10 19:45:44 TIMER: Check tournament...
25.10 19:45:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:46' OR rounddate = '2016-25-10 19:46' AND status <> 'finished'
25.10 19:45:44 TIMER: Check tournament: 0ms
25.10 19:47:26 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:47:26 DB: SELECT * FROM tournament
25.10 19:47:26 STATS: cache [tournament], get [7 calls, 3 cache hits, 3 cache misses, 0 same version, 0 not found]
25.10 19:47:26 STATS: cache [tournament], segments [10 calls, 6 hits, 3 misses]
25.10 19:47:26 STATS: cache [tournament], database [522 calls, 3 reads, 3 writes]
25.10 19:47:26 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:47:26 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:47:26 DB: SELECT name FROM users WHERE id = 95
25.10 19:47:26 DB: SELECT name FROM users WHERE id = 94
25.10 19:47:26 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [84], rounddate => 2016-25-10 19:44, startdate => 2016-25-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:47:26 TIME: vdl/cache.tournament.getAvailableTournament : 5.06 ms
25.10 19:47:32 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:47:32 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 19:47:32 TIME: vdl/cache.tournament.getStatus : 0.16 ms
25.10 19:47:32 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => active }
25.10 19:47:32 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:47:32 TIME: vdl/cache.tournament.setGrid : 0.24 ms
25.10 19:47:34 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:47:34 DB: SELECT * FROM tournament
25.10 19:47:34 DB: SELECT name FROM users WHERE id = 95
25.10 19:47:34 DB: SELECT name FROM users WHERE id = 94
25.10 19:47:34 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [84], rounddate => 2016-25-10 19:44, startdate => 2016-25-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:47:34 TIME: vdl/cache.tournament.getAvailableTournament : 2.15 ms
25.10 19:47:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
25.10 19:47:44 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
25.10 19:47:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 84 }}, errorCode => ok, _type => core/server.query }
25.10 19:47:44 TIME: core/server.query : 1.69 ms
25.10 19:47:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 84, _type => vdl/cache.battle.infoRoom }
25.10 19:47:44 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
25.10 19:47:44 STATS: cache [battle], segments [4 calls, 2 hits, 1 misses]
25.10 19:47:44 STATS: cache [battle], database [540 calls, 1 reads, 1 writes]
25.10 19:47:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:47:44 READDB: SELECT * FROM Battle WHERE ID = 84
25.10 19:47:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 95, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 94 }
25.10 19:47:44 TIME: vdl/cache.battle.infoRoom : 1.23 ms
25.10 19:47:44 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 84, _type => vdl/cache.battle.deleteRoom }
25.10 19:47:44 ROOM: deleted room 84
25.10 19:47:44 DB: DELETE FROM Battle WHERE ID = 84
25.10 19:47:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
25.10 19:47:44 TIME: vdl/cache.battle.deleteRoom : 26.23 ms
25.10 19:47:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
25.10 19:47:44 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 19:47:44 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
25.10 19:47:44 STATS: cache [user], database [540 calls, 2 reads, 2 writes]
25.10 19:47:44 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
25.10 19:47:44 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 2.21 ms]
25.10 19:47:44 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.11 ms]
25.10 19:47:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:47:44 TIME: core/cache.update : 0.42 ms
25.10 19:47:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
25.10 19:47:44 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 19:47:44 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
25.10 19:47:44 STATS: cache [questdata], database [540 calls, 2 reads, 0 writes]
25.10 19:47:44 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
25.10 19:47:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:47:44 TIME: core/cache.update : 0.38 ms
25.10 19:47:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
25.10 19:47:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:47:44 TIME: core/user.logoutPost : 0.12 ms
25.10 19:47:44 TIMER: Clans cache...
25.10 19:47:44 TIMER: Clans cache: 0ms
25.10 19:47:44 TIMER: Check tournament...
25.10 19:47:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:47' OR rounddate = '2016-25-10 19:47' AND status <> 'finished'
25.10 19:47:44 TIMER: Check tournament: 1ms
25.10 19:47:44 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:47:44 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
25.10 19:47:45 BLOCKREMOVE: tournament 1 removed
25.10 19:47:54 BLOCKREMOVE: user 94 removed
25.10 19:47:54 BLOCKREMOVE: questdata 94 removed
25.10 19:47:54 BLOCKREMOVE: battle 84 removed
25.10 19:48:03 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:48:03 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:48:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
25.10 19:48:03 TIME: vdl/cache.tournament.getStatus : 1.14 ms
25.10 19:48:03 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => active }
25.10 19:48:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 94, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:48:03 TIME: vdl/cache.tournament.setGrid : 0.09 ms
25.10 19:48:13 BLOCKREMOVE: tournament 1 removed
25.10 19:48:20 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:48:20 DB: SELECT * FROM tournament
25.10 19:48:20 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:48:20 DB: SELECT name FROM users WHERE id = 95
25.10 19:48:20 DB: SELECT name FROM users WHERE id = 94
25.10 19:48:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [84], rounddate => 2016-25-10 19:44, startdate => 2016-25-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:48:20 TIME: vdl/cache.tournament.getAvailableTournament : 4.38 ms
25.10 19:48:30 BLOCKREMOVE: tournament 1 removed
25.10 19:48:33 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
25.10 19:48:33 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
25.10 19:48:33 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
25.10 19:48:33 TIME: core/server.query : 1.54 ms
25.10 19:48:33 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
25.10 19:48:33 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 19:48:33 TIME: core/user.isOnlineID : 0.07 ms
25.10 19:48:33 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
25.10 19:48:33 READDB: SELECT * FROM Users WHERE ID = 94
25.10 19:48:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, deleted => false, email => , networktype =>   , password => uid94, isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402348, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 94 } }
25.10 19:48:33 TIME: core/cache.get : 1.19 ms
25.10 19:48:33 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
25.10 19:48:33 READDB: SELECT * FROM UserQuests WHERE ID = 94
25.10 19:48:33 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
25.10 19:48:33 TIME: core/cache.get : 0.8 ms
25.10 19:48:33 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
25.10 19:48:33 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:48:33 TIME: core/user.loginPost : 0.07 ms
25.10 19:48:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 94, _type => core/cache.update }
25.10 19:48:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:48:39 TIME: core/cache.update : 0.11 ms
25.10 19:48:39 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:48:44 TIMER: Clans cache...
25.10 19:48:44 TIMER: Clans cache: 0ms
25.10 19:48:44 TIMER: Check tournament...
25.10 19:48:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:48' OR rounddate = '2016-25-10 19:48' AND status <> 'finished'
25.10 19:48:44 TIMER: Check tournament: 2ms
25.10 19:48:48 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:48:48 DB: SELECT * FROM tournament
25.10 19:48:48 STATS: cache [tournament], get [12 calls, 5 cache hits, 6 cache misses, 0 same version, 0 not found]
25.10 19:48:48 STATS: cache [tournament], segments [15 calls, 8 hits, 6 misses]
25.10 19:48:48 STATS: cache [tournament], database [604 calls, 6 reads, 3 writes]
25.10 19:48:48 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:48:48 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:48:48 DB: SELECT name FROM users WHERE id = 95
25.10 19:48:48 DB: SELECT name FROM users WHERE id = 94
25.10 19:48:48 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => active, userList => [{ name => uid95, id => 95 },{ name => uid94, id => 94 }], battleActive => [84], rounddate => 2016-25-10 19:44, startdate => 2016-25-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:48:48 TIME: vdl/cache.tournament.getAvailableTournament : 5.15 ms
25.10 19:48:58 BLOCKREMOVE: tournament 1 removed
25.10 19:49:44 TIMER: Clans cache...
25.10 19:49:44 TIMER: Clans cache: 0ms
25.10 19:49:44 TIMER: Check tournament...
25.10 19:49:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:49' OR rounddate = '2016-25-10 19:49' AND status <> 'finished'
25.10 19:49:44 TIMER: Check tournament: 1ms
25.10 19:49:44 TIMER: Clans cache...
25.10 19:49:44 TIMER: Clans cache: 0ms
25.10 19:49:44 TIMER: Check tournament...
25.10 19:49:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:50' OR rounddate = '2016-25-10 19:50' AND status <> 'finished'
25.10 19:49:44 TIMER: Check tournament: 0ms
25.10 19:49:44 TIMER: Clans cache...
25.10 19:49:44 TIMER: Clans cache: 0ms
25.10 19:49:44 TIMER: Check tournament...
25.10 19:49:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:51' OR rounddate = '2016-25-10 19:51' AND status <> 'finished'
25.10 19:49:44 TIMER: Check tournament: 0ms
25.10 19:49:44 TIMER: Clans cache...
25.10 19:49:44 TIMER: Clans cache: 0ms
25.10 19:49:44 TIMER: Check tournament...
25.10 19:49:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:52' OR rounddate = '2016-25-10 19:52' AND status <> 'finished'
25.10 19:49:44 TIMER: Check tournament: 1ms
25.10 19:49:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 19:49:44 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 19:49:44 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:49:44 TIME: core/server.query : 1.67 ms
25.10 19:49:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:49:44 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
25.10 19:49:44 STATS: cache [battle], segments [6 calls, 3 hits, 2 misses]
25.10 19:49:44 STATS: cache [battle], database [900 calls, 2 reads, 1 writes]
25.10 19:49:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:49:44 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:49:44 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:49:44 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
25.10 19:49:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:49:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 19:49:44 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
25.10 19:49:44 STATS: cache [user], segments [12 calls, 5 hits, 6 misses]
25.10 19:49:44 STATS: cache [user], database [900 calls, 3 reads, 4 writes]
25.10 19:49:44 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
25.10 19:49:44 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1.76 ms]
25.10 19:49:44 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.16 ms]
25.10 19:49:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:49:44 TIME: core/cache.update : 0.56 ms
25.10 19:49:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 19:49:44 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
25.10 19:49:44 STATS: cache [questdata], segments [9 calls, 2 hits, 6 misses]
25.10 19:49:44 STATS: cache [questdata], database [900 calls, 3 reads, 1 writes]
25.10 19:49:44 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
25.10 19:49:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:49:44 TIME: core/cache.update : 0.36 ms
25.10 19:49:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 19:49:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:49:44 TIME: core/user.logoutPost : 0.09 ms
25.10 19:49:44 TIMER: Clans cache...
25.10 19:49:44 TIMER: Clans cache: 0ms
25.10 19:49:44 TIMER: Check tournament...
25.10 19:49:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:53' OR rounddate = '2016-25-10 19:53' AND status <> 'finished'
25.10 19:49:44 TIMER: Check tournament: 1ms
25.10 19:49:44 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:49:44 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
25.10 19:53:54 BLOCKREMOVE: user 95 removed
25.10 19:53:54 BLOCKREMOVE: questdata 95 removed
25.10 19:54:44 TIMER: Clans cache...
25.10 19:54:44 TIMER: Clans cache: 0ms
25.10 19:54:44 TIMER: Check tournament...
25.10 19:54:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:54' OR rounddate = '2016-25-10 19:54' AND status <> 'finished'
25.10 19:54:44 TIMER: Check tournament: 0ms
25.10 19:54:44 TIMER: Clans cache...
25.10 19:54:44 TIMER: Clans cache: 0ms
25.10 19:54:44 TIMER: Check tournament...
25.10 19:54:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:55' OR rounddate = '2016-25-10 19:55' AND status <> 'finished'
25.10 19:54:44 TIMER: Check tournament: 1ms
25.10 19:56:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 19:56:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 19:56:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 19:56:10 TIME: core/server.query : 1.71 ms
25.10 19:56:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 19:56:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 19:56:10 TIME: core/user.isOnlineID : 0.11 ms
25.10 19:56:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 19:56:10 STATS: cache [user], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
25.10 19:56:10 STATS: cache [user], segments [14 calls, 7 hits, 6 misses]
25.10 19:56:10 STATS: cache [user], database [1047 calls, 3 reads, 5 writes]
25.10 19:56:10 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
25.10 19:56:10 READDB: SELECT * FROM Users WHERE ID = 95
25.10 19:56:10 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.8 ms]
25.10 19:56:10 STATS: cache manager [1], update [7 calls, total 0 sec spent, avg 0.18 ms]
25.10 19:56:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 0, id => 95 } }
25.10 19:56:10 TIME: core/cache.get : 2.69 ms
25.10 19:56:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 19:56:10 STATS: cache [questdata], get [3 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
25.10 19:56:10 STATS: cache [questdata], segments [11 calls, 4 hits, 6 misses]
25.10 19:56:10 STATS: cache [questdata], database [1047 calls, 3 reads, 2 writes]
25.10 19:56:10 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
25.10 19:56:10 READDB: SELECT * FROM UserQuests WHERE ID = 95
25.10 19:56:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 95 } }
25.10 19:56:10 TIME: core/cache.get : 2.11 ms
25.10 19:56:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 19:56:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:56:10 TIME: core/user.loginPost : 0.17 ms
25.10 19:56:15 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:56:15 DB: SELECT * FROM tournament
25.10 19:56:15 STATS: cache [tournament], get [13 calls, 5 cache hits, 7 cache misses, 0 same version, 0 not found]
25.10 19:56:15 STATS: cache [tournament], segments [16 calls, 8 hits, 7 misses]
25.10 19:56:15 STATS: cache [tournament], database [1051 calls, 7 reads, 3 writes]
25.10 19:56:15 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:56:15 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:56:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [], battleActive => [84], rounddate => 2016-26-10 19:44, startdate => 2016-26-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:56:15 TIME: vdl/cache.tournament.getAvailableTournament : 2.22 ms
25.10 19:56:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 19:56:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:56:19 TIME: core/cache.update : 0.14 ms
25.10 19:56:19 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:56:19 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 95, tournament => 1, _type => vdl/cache.tournament.addUsers }
25.10 19:56:19 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
25.10 19:56:19 TIME: vdl/cache.tournament.addUsers : 0.15 ms
25.10 19:56:20 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:56:20 DB: SELECT * FROM tournament
25.10 19:56:20 DB: SELECT name FROM users WHERE id = 95
25.10 19:56:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [84], rounddate => 2016-26-10 19:44, startdate => 2016-26-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:56:20 TIME: vdl/cache.tournament.getAvailableTournament : 0.99 ms
25.10 19:56:20 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-26-10 19:44', roundinterval = E'60', params = E'{"params":{"battleFinished":[],"usersList":[95],"battleActive":[84],"usersAll":[95]}}', rounddate = E'2016-26-10 19:44' WHERE ID = 1
25.10 19:56:21 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:56:21 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 19:56:21 TIME: vdl/cache.tournament.getStatus : 0.14 ms
25.10 19:56:21 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 19:56:21 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
25.10 19:56:21 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.17 ms
25.10 19:56:21 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
25.10 19:56:21 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:56:21 TIME: vdl/cache.tournament.setGrid : 0.17 ms
25.10 19:56:31 BLOCKREMOVE: tournament 1 removed
25.10 19:56:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
25.10 19:56:44 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
25.10 19:56:44 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:56:44 TIME: core/server.query : 0.61 ms
25.10 19:56:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:56:44 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 1 not found]
25.10 19:56:44 STATS: cache [battle], segments [7 calls, 3 hits, 3 misses]
25.10 19:56:44 STATS: cache [battle], database [1080 calls, 3 reads, 1 writes]
25.10 19:56:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:56:44 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:56:44 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:56:44 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
25.10 19:56:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:56:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
25.10 19:56:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:56:44 TIME: core/cache.update : 0.09 ms
25.10 19:56:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
25.10 19:56:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:56:44 TIME: core/cache.update : 0.09 ms
25.10 19:56:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
25.10 19:56:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:56:44 TIME: core/user.logoutPost : 0.06 ms
25.10 19:56:44 TIMER: Clans cache...
25.10 19:56:44 TIMER: Clans cache: 0ms
25.10 19:56:44 TIMER: Check tournament...
25.10 19:56:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:56' OR rounddate = '2016-25-10 19:56' AND status <> 'finished'
25.10 19:56:44 TIMER: Check tournament: 0ms
25.10 19:56:44 WRITEDB: UPDATE Users SET name = E'uid94', deleted = E'false', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2016-10-25 16:32:22.177493+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402348,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 94
25.10 19:56:44 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
25.10 19:56:54 BLOCKREMOVE: user 94 removed
25.10 19:56:54 BLOCKREMOVE: questdata 94 removed
25.10 19:57:40 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 19:57:40 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 19:57:40 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:57:40 TIME: core/server.query : 1.51 ms
25.10 19:57:40 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:57:40 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:57:40 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:57:40 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
25.10 19:57:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:57:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 19:57:40 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
25.10 19:57:40 STATS: cache [user], segments [19 calls, 10 hits, 8 misses]
25.10 19:57:40 STATS: cache [user], database [1136 calls, 4 reads, 7 writes]
25.10 19:57:40 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
25.10 19:57:40 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.77 ms]
25.10 19:57:40 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.15 ms]
25.10 19:57:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:57:40 TIME: core/cache.update : 0.51 ms
25.10 19:57:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 19:57:40 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
25.10 19:57:40 STATS: cache [questdata], segments [15 calls, 6 hits, 8 misses]
25.10 19:57:40 STATS: cache [questdata], database [1136 calls, 4 reads, 3 writes]
25.10 19:57:40 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
25.10 19:57:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
25.10 19:57:40 TIME: core/cache.update : 0.57 ms
25.10 19:57:40 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 19:57:40 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:57:40 TIME: core/user.logoutPost : 0.18 ms
25.10 19:57:40 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:57:40 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
25.10 19:57:44 TIMER: Clans cache...
25.10 19:57:44 TIMER: Clans cache: 0ms
25.10 19:57:44 TIMER: Check tournament...
25.10 19:57:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:57' OR rounddate = '2016-25-10 19:57' AND status <> 'finished'
25.10 19:57:44 TIMER: Check tournament: 1ms
25.10 19:57:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95', _type => core/server.query }
25.10 19:57:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid95' AND Password = E'uid95'
25.10 19:57:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid95, networkid => , isbanned => false, id => 95 }}, errorCode => ok, _type => core/server.query }
25.10 19:57:47 TIME: core/server.query : 1.56 ms
25.10 19:57:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 95, _type => core/user.isOnlineID }
25.10 19:57:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
25.10 19:57:47 TIME: core/user.isOnlineID : 0.12 ms
25.10 19:57:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 95, _type => core/cache.get }
25.10 19:57:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid95, deleted => false, email => , networktype =>   , password => uid95, isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477402835, lastLoginDate => 299, lastLoadDate => 1026 }, effects => { list => [] } }}, version => 2, id => 95 } }
25.10 19:57:47 TIME: core/cache.get : 0.32 ms
25.10 19:57:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 95, _type => core/cache.get }
25.10 19:57:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 95 } }
25.10 19:57:47 TIME: core/cache.get : 0.19 ms
25.10 19:57:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 95, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
25.10 19:57:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
25.10 19:57:47 TIME: core/user.loginPost : 0.1 ms
25.10 19:57:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 95, _type => core/cache.update }
25.10 19:57:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
25.10 19:57:54 TIME: core/cache.update : 0.12 ms
25.10 19:57:54 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:58:15 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:58:15 DB: SELECT * FROM tournament
25.10 19:58:15 STATS: cache [tournament], get [18 calls, 9 cache hits, 8 cache misses, 0 same version, 0 not found]
25.10 19:58:15 STATS: cache [tournament], segments [23 calls, 14 hits, 8 misses]
25.10 19:58:15 STATS: cache [tournament], database [1171 calls, 8 reads, 4 writes]
25.10 19:58:15 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
25.10 19:58:15 READDB: SELECT * FROM Tournament WHERE ID = 1
25.10 19:58:15 DB: SELECT name FROM users WHERE id = 95
25.10 19:58:15 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [], round => 1, id => 1, status => starting, userList => [{ name => uid95, id => 95 }], battleActive => [84], rounddate => 2016-26-10 19:44, startdate => 2016-26-10 19:44 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
25.10 19:58:15 TIME: vdl/cache.tournament.getAvailableTournament : 1.59 ms
25.10 19:58:18 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
25.10 19:58:18 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
25.10 19:58:18 TIME: vdl/cache.tournament.getStatus : 0.11 ms
25.10 19:58:18 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
25.10 19:58:18 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [95] }
25.10 19:58:18 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.15 ms
25.10 19:58:18 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
25.10 19:58:18 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => null, player2 => 95 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
25.10 19:58:18 TIME: vdl/cache.tournament.setGrid : 0.12 ms
25.10 19:58:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true, _type => core/server.query }
25.10 19:58:27 DB: SELECT id FROM battle WHERE firstid=95 OR secondid=95 AND finished <> true
25.10 19:58:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
25.10 19:58:27 TIME: core/server.query : 1.93 ms
25.10 19:58:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
25.10 19:58:27 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 3 not found]
25.10 19:58:27 STATS: cache [battle], segments [9 calls, 3 hits, 5 misses]
25.10 19:58:27 STATS: cache [battle], database [1183 calls, 5 reads, 1 writes]
25.10 19:58:27 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
25.10 19:58:27 READDB: SELECT * FROM Battle WHERE ID = 0
25.10 19:58:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
25.10 19:58:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 150
Called from modules/VDLCache.hx line 143
Called from modules/VDLCache.hx line 98
Called from snipe/cache/CacheServer.hx line 487
25.10 19:58:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
25.10 19:58:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 95, _type => core/cache.update }
25.10 19:58:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
25.10 19:58:27 TIME: core/cache.update : 0.16 ms
25.10 19:58:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 95, _type => core/cache.update }
25.10 19:58:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
25.10 19:58:27 TIME: core/cache.update : 0.12 ms
25.10 19:58:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 95, _type => core/user.logoutPost }
25.10 19:58:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
25.10 19:58:27 TIME: core/user.logoutPost : 0.13 ms
25.10 19:58:27 WRITEDB: UPDATE Users SET name = E'uid95', deleted = E'false', email = E'', networktype = E'  ', password = E'uid95', isbanned = E'false', regdate = E'2016-10-25 16:40:34.208622+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477402835,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}' WHERE ID = 95
25.10 19:58:27 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 95
25.10 19:58:28 BLOCKREMOVE: tournament 1 removed
25.10 19:58:37 BLOCKREMOVE: user 95 removed
25.10 19:58:37 BLOCKREMOVE: questdata 95 removed
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:58' OR rounddate = '2016-25-10 19:58' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 19:59' OR rounddate = '2016-25-10 19:59' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 2, 1)
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:00' OR rounddate = '2016-25-10 20:00' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:01' OR rounddate = '2016-25-10 20:01' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:02' OR rounddate = '2016-25-10 20:02' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:03' OR rounddate = '2016-25-10 20:03' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:04' OR rounddate = '2016-25-10 20:04' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:05' OR rounddate = '2016-25-10 20:05' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:06' OR rounddate = '2016-25-10 20:06' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:07' OR rounddate = '2016-25-10 20:07' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:08' OR rounddate = '2016-25-10 20:08' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:09' OR rounddate = '2016-25-10 20:09' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:10' OR rounddate = '2016-25-10 20:10' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:11' OR rounddate = '2016-25-10 20:11' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:12' OR rounddate = '2016-25-10 20:12' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:13' OR rounddate = '2016-25-10 20:13' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:14' OR rounddate = '2016-25-10 20:14' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:15' OR rounddate = '2016-25-10 20:15' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:16' OR rounddate = '2016-25-10 20:16' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:17' OR rounddate = '2016-25-10 20:17' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:18' OR rounddate = '2016-25-10 20:18' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:19' OR rounddate = '2016-25-10 20:19' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:20' OR rounddate = '2016-25-10 20:20' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:21' OR rounddate = '2016-25-10 20:21' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:22' OR rounddate = '2016-25-10 20:22' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:23' OR rounddate = '2016-25-10 20:23' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:24' OR rounddate = '2016-25-10 20:24' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:25' OR rounddate = '2016-25-10 20:25' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:26' OR rounddate = '2016-25-10 20:26' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:27' OR rounddate = '2016-25-10 20:27' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:28' OR rounddate = '2016-25-10 20:28' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:29' OR rounddate = '2016-25-10 20:29' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:30' OR rounddate = '2016-25-10 20:30' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:31' OR rounddate = '2016-25-10 20:31' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:32' OR rounddate = '2016-25-10 20:32' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:33' OR rounddate = '2016-25-10 20:33' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:34' OR rounddate = '2016-25-10 20:34' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:35' OR rounddate = '2016-25-10 20:35' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:36' OR rounddate = '2016-25-10 20:36' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:37' OR rounddate = '2016-25-10 20:37' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 0ms
25.10 19:58:44 TIMER: Clans cache...
25.10 19:58:44 TIMER: Clans cache: 0ms
25.10 19:58:44 TIMER: Check tournament...
25.10 19:58:44 DB: SELECT * FROM tournament WHERE startdate = '2016-25-10 20:38' OR rounddate = '2016-25-10 20:38' AND status <> 'finished'
25.10 19:58:44 TIMER: Check tournament: 1ms
