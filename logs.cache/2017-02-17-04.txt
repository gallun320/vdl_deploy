17.02 04:00:01 BLOCKREMOVE: battle 6 removed
17.02 04:00:02 TIMER: Check step...
17.02 04:00:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:02 TIMER: Check step: 2ms
17.02 04:00:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:02 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:02 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:02 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:02 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.00836726', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.00836778', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:07 TIMER: Check step...
17.02 04:00:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:07 TIMER: Check step: 1ms
17.02 04:00:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:07 TIME: core/user.sendTo : 0.03 ms
17.02 04:00:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:07 TIME: core/user.sendTo : 0.03 ms
17.02 04:00:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:07 TIME: core/user.sendTo : 0.02 ms
17.02 04:00:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:07 TIME: core/user.sendTo : 0.02 ms
17.02 04:00:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.01337092', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.01337118', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:11 TIMER: Check tournaments...
17.02 04:00:11 DB: SELECT * FROM tournament
17.02 04:00:11 TIMER: Check tournaments: 0ms
17.02 04:00:12 TIMER: Check step...
17.02 04:00:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:12 STATS: cache [battle], get [516 calls, 397 cache hits, 118 cache misses, 0 same version, 71 not found]
17.02 04:00:12 STATS: cache [battle], segments [755 calls, 636 hits, 118 misses]
17.02 04:00:12 STATS: cache [battle], database [562650 calls, 118 reads, 170 writes]
17.02 04:00:12 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:00:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:12 TIME: core/user.sendTo : 0.06 ms
17.02 04:00:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:12 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:12 TIMER: Check step: 3ms
17.02 04:00:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:12 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:12 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.01837411', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.01837561', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:17 TIMER: Check step...
17.02 04:00:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:17 TIMER: Check step: 1ms
17.02 04:00:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:17 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:17 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:17 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.02337767', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.02337817', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:22 TIMER: Check step...
17.02 04:00:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:22 TIMER: Check step: 2ms
17.02 04:00:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:22 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:22 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:22 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:22 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.02838076', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.0283813', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:27 TIMER: Check step...
17.02 04:00:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:27 TIME: core/user.sendTo : 0.08 ms
17.02 04:00:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:27 TIME: core/user.sendTo : 0.07 ms
17.02 04:00:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:27 TIMER: Check step: 3ms
17.02 04:00:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:27 TIME: core/user.sendTo : 0.18 ms
17.02 04:00:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:27 TIME: core/user.sendTo : 0.09 ms
17.02 04:00:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.03338409', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.0333858', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:30 TIMER: Check round...
17.02 04:00:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:00' OR rounddate = '2017-17-02 07:00' AND status <> 'finished'
17.02 04:00:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.03039217' AND avaliable = false AND finished <> true
17.02 04:00:30 TRACE: Check round timer exception:
17.02 04:00:30 TRACE: Invalid field access : player1

17.02 04:00:30 TIMER: Check round: 12ms
17.02 04:00:31 TIMER: Clans cache...
17.02 04:00:31 TIMER: Clans cache: 0ms
17.02 04:00:31 TIMER: Check tournaments...
17.02 04:00:31 DB: SELECT * FROM tournament
17.02 04:00:31 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 2, 0)
17.02 04:00:31 TIMER: Check tournaments: 1ms
17.02 04:00:32 TIMER: Check step...
17.02 04:00:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:32 TIMER: Check step: 2ms
17.02 04:00:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:32 TIME: core/user.sendTo : 0.06 ms
17.02 04:00:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:32 TIME: core/user.sendTo : 0.06 ms
17.02 04:00:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:32 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:32 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.03840638', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.03840698', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:37 TIMER: Check step...
17.02 04:00:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:37 TIMER: Check step: 2ms
17.02 04:00:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:37 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:37 TIME: core/user.sendTo : 0.03 ms
17.02 04:00:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:37 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:37 TIME: core/user.sendTo : 0.03 ms
17.02 04:00:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.04340912', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.04340984', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:42 TIMER: Check step...
17.02 04:00:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:42 TIMER: Check step: 2ms
17.02 04:00:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:42 TIME: core/user.sendTo : 0.06 ms
17.02 04:00:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:42 TIME: core/user.sendTo : 0.06 ms
17.02 04:00:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:42 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:42 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.04841207', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.0484128', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:47 TIMER: Check step...
17.02 04:00:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:47 TIMER: Check step: 2ms
17.02 04:00:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:47 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:47 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:47 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:47 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.05341552', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.05341621', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:51 TIMER: Check tournaments...
17.02 04:00:51 DB: SELECT * FROM tournament
17.02 04:00:51 TIMER: Check tournaments: 0ms
17.02 04:00:52 TIMER: Check step...
17.02 04:00:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:52 TIMER: Check step: 3ms
17.02 04:00:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:52 TIME: core/user.sendTo : 0.08 ms
17.02 04:00:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:52 TIME: core/user.sendTo : 0.07 ms
17.02 04:00:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:52 TIME: core/user.sendTo : 0.07 ms
17.02 04:00:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:52 TIME: core/user.sendTo : 0.07 ms
17.02 04:00:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.05841931', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.05842027', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:00:57 TIMER: Check step...
17.02 04:00:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:00:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:57 TIME: core/user.sendTo : 0.06 ms
17.02 04:00:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:00:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:00:57 TIMER: Check step: 2ms
17.02 04:00:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:57 TIME: core/user.sendTo : 0.05 ms
17.02 04:00:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:57 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:00:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:00:57 TIME: core/user.sendTo : 0.04 ms
17.02 04:00:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.06342301', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:00:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.06342392', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:02 TIMER: Check step...
17.02 04:01:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:02 TIMER: Check step: 1ms
17.02 04:01:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:02 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:02 TIME: core/user.sendTo : 0.03 ms
17.02 04:01:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:02 TIME: core/user.sendTo : 0.03 ms
17.02 04:01:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:02 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.06842569', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.06842614', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:07 TIMER: Check step...
17.02 04:01:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:07 TIMER: Check step: 2ms
17.02 04:01:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:07 TIME: core/user.sendTo : 0.07 ms
17.02 04:01:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:07 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:07 TIME: core/user.sendTo : 0.2 ms
17.02 04:01:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:07 TIME: core/user.sendTo : 0.09 ms
17.02 04:01:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.07342846', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.07342905', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:11 TIMER: Check tournaments...
17.02 04:01:11 DB: SELECT * FROM tournament
17.02 04:01:11 TIMER: Check tournaments: 0ms
17.02 04:01:12 TIMER: Check step...
17.02 04:01:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:12 STATS: cache [battle], get [540 calls, 421 cache hits, 118 cache misses, 0 same version, 71 not found]
17.02 04:01:12 STATS: cache [battle], segments [803 calls, 684 hits, 118 misses]
17.02 04:01:12 STATS: cache [battle], database [562710 calls, 118 reads, 194 writes]
17.02 04:01:12 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:01:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:12 TIMER: Check step: 2ms
17.02 04:01:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:12 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:12 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:12 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:12 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.07843548', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.07843609', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:17 TIMER: Check step...
17.02 04:01:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:17 TIMER: Check step: 2ms
17.02 04:01:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.08343829', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.08343893', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:22 TIMER: Check step...
17.02 04:01:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:22 TIMER: Check step: 1ms
17.02 04:01:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:22 TIME: core/user.sendTo : 0.06 ms
17.02 04:01:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:22 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:22 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:22 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.08844071', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.08844126', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:27 TIMER: Check step...
17.02 04:01:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:27 TIMER: Check step: 2ms
17.02 04:01:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:27 TIME: core/user.sendTo : 0.06 ms
17.02 04:01:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:27 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:27 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:27 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.09344385', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:27 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.09344441', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:30 TIMER: Check round...
17.02 04:01:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:01' OR rounddate = '2017-17-02 07:01' AND status <> 'finished'
17.02 04:01:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.09044576' AND avaliable = false AND finished <> true
17.02 04:01:30 TRACE: Check round timer exception:
17.02 04:01:30 TRACE: Invalid field access : player1

17.02 04:01:30 TIMER: Check round: 1ms
17.02 04:01:31 TIMER: Clans cache...
17.02 04:01:31 TIMER: Clans cache: 0ms
17.02 04:01:31 TIMER: Check tournaments...
17.02 04:01:31 DB: SELECT * FROM tournament
17.02 04:01:31 TIMER: Check tournaments: 0ms
17.02 04:01:32 TIMER: Check step...
17.02 04:01:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:32 TIMER: Check step: 2ms
17.02 04:01:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:32 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:32 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:32 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:32 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.09844864', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:32 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.0984492', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:37 TIMER: Check step...
17.02 04:01:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:37 TIMER: Check step: 1ms
17.02 04:01:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:37 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:37 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:37 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:37 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.10345134', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:37 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.10345191', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:42 TIMER: Check step...
17.02 04:01:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:42 TIMER: Check step: 3ms
17.02 04:01:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:42 TIME: core/user.sendTo : 0.22 ms
17.02 04:01:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:42 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:42 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:42 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.10845462', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:42 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.10845566', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:47 TIMER: Check step...
17.02 04:01:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:47 TIME: core/user.sendTo : 0.07 ms
17.02 04:01:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:47 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:47 TIME: core/user.sendTo : 0.06 ms
17.02 04:01:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:47 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:47 TIMER: Check step: 7ms
17.02 04:01:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.11345831', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:47 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.1134641', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:51 TIMER: Check tournaments...
17.02 04:01:51 DB: SELECT * FROM tournament
17.02 04:01:51 TIMER: Check tournaments: 0ms
17.02 04:01:52 TIMER: Check step...
17.02 04:01:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:52 TIMER: Check step: 2ms
17.02 04:01:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:52 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:52 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:52 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:52 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.11846745', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:52 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.11846814', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:01:57 TIMER: Check step...
17.02 04:01:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:01:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:57 TIME: core/user.sendTo : 0.06 ms
17.02 04:01:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:57 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:01:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:01:57 TIMER: Check step: 3ms
17.02 04:01:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:57 TIME: core/user.sendTo : 0.04 ms
17.02 04:01:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:01:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:01:57 TIME: core/user.sendTo : 0.05 ms
17.02 04:01:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.12347042', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:01:57 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.12347152', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:02 TIMER: Check step...
17.02 04:02:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:02 TIMER: Check step: 3ms
17.02 04:02:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:02 TIME: core/user.sendTo : 0.11 ms
17.02 04:02:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:02 TIME: core/user.sendTo : 0.08 ms
17.02 04:02:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:02 TIME: core/user.sendTo : 0.08 ms
17.02 04:02:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:02 TIME: core/user.sendTo : 0.07 ms
17.02 04:02:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.12847463', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:02 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.12847558', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:07 TIMER: Check step...
17.02 04:02:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:07 TIMER: Check step: 1ms
17.02 04:02:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:07 TIME: core/user.sendTo : 0.06 ms
17.02 04:02:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:07 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:07 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:07 TIME: core/user.sendTo : 0.03 ms
17.02 04:02:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.13347789', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:07 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.13347839', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:11 TIMER: Check tournaments...
17.02 04:02:11 DB: SELECT * FROM tournament
17.02 04:02:11 TIMER: Check tournaments: 0ms
17.02 04:02:12 TIMER: Check step...
17.02 04:02:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:12 STATS: cache [battle], get [564 calls, 445 cache hits, 118 cache misses, 0 same version, 71 not found]
17.02 04:02:12 STATS: cache [battle], segments [851 calls, 732 hits, 118 misses]
17.02 04:02:12 STATS: cache [battle], database [562770 calls, 118 reads, 218 writes]
17.02 04:02:12 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:02:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:12 TIMER: Check step: 2ms
17.02 04:02:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:12 TIME: core/user.sendTo : 0.06 ms
17.02 04:02:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:12 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:12 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:12 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.1384817', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:12 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.13848228', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:17 TIMER: Check step...
17.02 04:02:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:17 TIMER: Check step: 2ms
17.02 04:02:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:17 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:17 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.14348725', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:17 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.14348788', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:22 TIMER: Check step...
17.02 04:02:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:22 TIMER: Check step: 2ms
17.02 04:02:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:22 TIME: core/user.sendTo : 0.06 ms
17.02 04:02:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:22 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:22 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:22 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.14848993', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:22 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.14849051', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:27 TIMER: Check step...
17.02 04:02:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:27 TIMER: Check step: 1ms
17.02 04:02:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:27 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:27 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:27 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:27 TIME: core/user.sendTo : 0.03 ms
17.02 04:02:28 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.15349266', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:28 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.15349318', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:30 TIMER: Check round...
17.02 04:02:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:02' OR rounddate = '2017-17-02 07:02' AND status <> 'finished'
17.02 04:02:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.15049775' AND avaliable = false AND finished <> true
17.02 04:02:30 TRACE: Check round timer exception:
17.02 04:02:30 TRACE: Invalid field access : player1

17.02 04:02:30 TIMER: Check round: 1ms
17.02 04:02:31 TIMER: Clans cache...
17.02 04:02:31 TIMER: Clans cache: 0ms
17.02 04:02:31 TIMER: Check tournaments...
17.02 04:02:31 DB: SELECT * FROM tournament
17.02 04:02:31 TIMER: Check tournaments: 0ms
17.02 04:02:32 TIMER: Check step...
17.02 04:02:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:32 TIMER: Check step: 1ms
17.02 04:02:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:32 TIME: core/user.sendTo : 0.08 ms
17.02 04:02:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:32 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:32 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:32 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:33 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.15850043', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:33 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.15850101', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:37 TIMER: Check step...
17.02 04:02:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:37 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:37 TIMER: Check step: 2ms
17.02 04:02:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:37 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:37 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:37 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:37 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:37 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:37 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:38 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.16350345', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:38 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.16350414', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:42 TIMER: Check step...
17.02 04:02:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:42 TIMER: Check step: 2ms
17.02 04:02:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:42 TIME: core/user.sendTo : 0.06 ms
17.02 04:02:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:42 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:42 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:42 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:43 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.16850633', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:43 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.1685069', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:47 TIMER: Check step...
17.02 04:02:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:47 TIME: core/user.sendTo : 0.08 ms
17.02 04:02:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:47 TIME: core/user.sendTo : 0.07 ms
17.02 04:02:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:47 TIME: core/user.sendTo : 0.07 ms
17.02 04:02:47 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:47 TIMER: Check step: 4ms
17.02 04:02:47 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:47 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:47 TIME: core/user.sendTo : 0.07 ms
17.02 04:02:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.17351028', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.1735112', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:48 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=90 OR secondid=90 AND finished <> true, _type => core/server.query }
17.02 04:02:48 DB: SELECT id FROM battle WHERE firstid=90 OR secondid=90 AND finished <> true
17.02 04:02:48 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:02:48 TIME: core/server.query : 1.06 ms
17.02 04:02:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:02:48 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:02:48 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:02:48 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:02:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:02:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 90, _type => core/cache.update }
17.02 04:02:48 STATS: cache [user], get [166 calls, 64 cache hits, 102 cache misses, 0 same version, 0 not found]
17.02 04:02:48 STATS: cache [user], segments [626 calls, 401 hits, 204 misses]
17.02 04:02:48 STATS: cache [user], database [562806 calls, 102 reads, 154 writes]
17.02 04:02:48 STATS: cache [user], lock [138 calls, 138 attempts, 19 failures]
17.02 04:02:48 STATS: cache manager [1], get [210 calls, total 0.12 sec spent, avg 0.56 ms]
17.02 04:02:48 STATS: cache manager [1], update [315 calls, total 0.03 sec spent, avg 0.1 ms]
17.02 04:02:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 6, _type => core/cache.update }
17.02 04:02:48 TIME: core/cache.update : 0.26 ms
17.02 04:02:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 90, _type => core/cache.update }
17.02 04:02:48 STATS: cache [questdata], get [91 calls, 8 cache hits, 83 cache misses, 0 same version, 1 not found]
17.02 04:02:48 STATS: cache [questdata], segments [378 calls, 190 hits, 187 misses]
17.02 04:02:48 STATS: cache [questdata], database [562806 calls, 83 reads, 84 writes]
17.02 04:02:48 STATS: cache [questdata], lock [91 calls, 91 attempts, 0 failures]
17.02 04:02:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
17.02 04:02:48 TIME: core/cache.update : 0.17 ms
17.02 04:02:48 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 90, _type => core/user.logoutPost }
17.02 04:02:48 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:02:48 TIME: core/user.logoutPost : 0.06 ms
17.02 04:02:48 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=91 OR secondid=91 AND finished <> true, _type => core/server.query }
17.02 04:02:48 DB: SELECT id FROM battle WHERE firstid=91 OR secondid=91 AND finished <> true
17.02 04:02:48 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:02:48 TIME: core/server.query : 0.5 ms
17.02 04:02:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:02:48 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:02:48 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:02:48 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:02:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:02:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 91, _type => core/cache.update }
17.02 04:02:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:02:48 TIME: core/cache.update : 0.08 ms
17.02 04:02:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 91, _type => core/cache.update }
17.02 04:02:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:02:48 TIME: core/cache.update : 0.07 ms
17.02 04:02:48 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 91, _type => core/user.logoutPost }
17.02 04:02:48 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:02:48 TIME: core/user.logoutPost : 0.05 ms
17.02 04:02:49 WRITEDB: UPDATE Users SET name = E'uid90', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid90', isbanned = E'false', regdate = E'2017-02-17 03:48:05.98115-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321286,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 90
17.02 04:02:49 WRITEDB: UPDATE Users SET name = E'uid91', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid91', isbanned = E'false', regdate = E'2017-02-17 03:48:07.057509-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321287,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 91
17.02 04:02:49 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 90
17.02 04:02:49 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 91
17.02 04:02:51 TIMER: Check tournaments...
17.02 04:02:51 DB: SELECT * FROM tournament
17.02 04:02:51 TIMER: Check tournaments: 0ms
17.02 04:02:52 TIMER: Check step...
17.02 04:02:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:52 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:52 TIMER: Check step: 2ms
17.02 04:02:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:52 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:52 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:52 TIME: core/user.sendTo : 0.05 ms
17.02 04:02:52 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:52 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:52 TIME: core/user.sendTo : 0.04 ms
17.02 04:02:53 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.17851532', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:53 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.1785159', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:57 TIMER: Check step...
17.02 04:02:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:02:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:02:57 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:02:57 TIMER: Check step: 2ms
17.02 04:02:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:57 TIME: core/user.sendTo : 0.06 ms
17.02 04:02:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:57 TIME: core/user.sendTo : 0.07 ms
17.02 04:02:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:57 TIME: core/user.sendTo : 0.07 ms
17.02 04:02:57 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:02:57 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:02:57 TIME: core/user.sendTo : 0.06 ms
17.02 04:02:58 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.18351825', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:02:58 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.18351882', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:02:59 BLOCKREMOVE: user 90 removed
17.02 04:02:59 BLOCKREMOVE: user 91 removed
17.02 04:02:59 BLOCKREMOVE: questdata 90 removed
17.02 04:02:59 BLOCKREMOVE: questdata 91 removed
17.02 04:03:02 TIMER: Check step...
17.02 04:03:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:02 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:02 TIME: core/user.sendTo : 0.04 ms
17.02 04:03:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:02 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:02 TIMER: Check step: 3ms
17.02 04:03:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:02 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:02 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:02 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:02 TIME: core/user.sendTo : 0.04 ms
17.02 04:03:03 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.18852322', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:03 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.18852439', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:03:07 TIMER: Check step...
17.02 04:03:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:07 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:07 TIMER: Check step: 1ms
17.02 04:03:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:07 TIME: core/user.sendTo : 0.06 ms
17.02 04:03:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:07 TIME: core/user.sendTo : 0.04 ms
17.02 04:03:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:07 TIME: core/user.sendTo : 0.03 ms
17.02 04:03:07 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:07 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:07 TIME: core/user.sendTo : 0.04 ms
17.02 04:03:08 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.19352645', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:08 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.19352701', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:03:11 TIMER: Check tournaments...
17.02 04:03:11 DB: SELECT * FROM tournament
17.02 04:03:11 TIMER: Check tournaments: 0ms
17.02 04:03:12 TIMER: Check step...
17.02 04:03:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:12 STATS: cache [battle], get [590 calls, 469 cache hits, 120 cache misses, 0 same version, 73 not found]
17.02 04:03:12 STATS: cache [battle], segments [901 calls, 780 hits, 120 misses]
17.02 04:03:12 STATS: cache [battle], database [562830 calls, 120 reads, 242 writes]
17.02 04:03:12 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:03:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:12 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:12 TIMER: Check step: 2ms
17.02 04:03:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:12 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:12 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:12 TIME: core/user.sendTo : 0.04 ms
17.02 04:03:12 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:12 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:12 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:13 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.19852949', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:13 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.1985301', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:03:17 TIMER: Check step...
17.02 04:03:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:17 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:17 TIMER: Check step: 2ms
17.02 04:03:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:17 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:17 TIME: core/user.sendTo : 0.07 ms
17.02 04:03:17 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:17 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:17 TIME: core/user.sendTo : 0.06 ms
17.02 04:03:18 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.2035327', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:18 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.20353326', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:03:22 TIMER: Check step...
17.02 04:03:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:22 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:22 TIMER: Check step: 2ms
17.02 04:03:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:22 TIME: core/user.sendTo : 0.06 ms
17.02 04:03:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:22 TIME: core/user.sendTo : 0.04 ms
17.02 04:03:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:22 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:22 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:22 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:23 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.20853517', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:23 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.20853574', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:03:27 TIMER: Check step...
17.02 04:03:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:27 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:27 TIMER: Check step: 1ms
17.02 04:03:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:27 TIME: core/user.sendTo : 0.03 ms
17.02 04:03:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:27 TIME: core/user.sendTo : 0.02 ms
17.02 04:03:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:27 TIME: core/user.sendTo : 0.02 ms
17.02 04:03:27 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:27 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:27 TIME: core/user.sendTo : 0.02 ms
17.02 04:03:28 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.21353747', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:28 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.21353776', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:03:30 TIMER: Check round...
17.02 04:03:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:03' OR rounddate = '2017-17-02 07:03' AND status <> 'finished'
17.02 04:03:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.21053892' AND avaliable = false AND finished <> true
17.02 04:03:30 TRACE: Check round timer exception:
17.02 04:03:30 TRACE: Invalid field access : player1

17.02 04:03:30 TIMER: Check round: 1ms
17.02 04:03:31 TIMER: Clans cache...
17.02 04:03:31 TIMER: Clans cache: 0ms
17.02 04:03:31 TIMER: Check tournaments...
17.02 04:03:31 DB: SELECT * FROM tournament
17.02 04:03:31 TIMER: Check tournaments: 0ms
17.02 04:03:32 TIMER: Check step...
17.02 04:03:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:32 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:03:32 TIMER: Check step: 2ms
17.02 04:03:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:32 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:32 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:32 TIME: core/user.sendTo : 0.04 ms
17.02 04:03:32 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:32 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:32 TIME: core/user.sendTo : 0.04 ms
17.02 04:03:33 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.21854159', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:33 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.21854217', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:03:33 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
17.02 04:03:33 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
17.02 04:03:33 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 15 }, { id => 14 }}, errorCode => ok, _type => core/server.query }
17.02 04:03:33 TIME: core/server.query : 0.68 ms
17.02 04:03:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 14, _type => vdl/cache.battle.infoRoom }
17.02 04:03:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 60, firstId => 92, _type => vdl/cache.battle.infoRoom, turnId => 92 }
17.02 04:03:33 TIME: vdl/cache.battle.infoRoom : 0.09 ms
17.02 04:03:33 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 14, _type => vdl/cache.battle.deleteRoom }
17.02 04:03:33 ROOM: deleted room 14
17.02 04:03:33 DB: DELETE FROM Battle WHERE ID = 14
17.02 04:03:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 04:03:33 TIME: vdl/cache.battle.deleteRoom : 0.7 ms
17.02 04:03:33 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 14, _type => vdl/cache.battle.finishRoom }
17.02 04:03:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 04:03:33 TIME: vdl/cache.battle.finishRoom : 0.11 ms
17.02 04:03:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 60, _type => core/cache.update }
17.02 04:03:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
17.02 04:03:33 TIME: core/cache.update : 0.08 ms
17.02 04:03:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
17.02 04:03:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:03:33 TIME: core/cache.update : 0.07 ms
17.02 04:03:33 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
17.02 04:03:33 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:03:33 TIME: core/user.logoutPost : 0.06 ms
17.02 04:03:34 WRITEDB: UPDATE Users SET name = E'uid60', money = E'0', deleted = E'false', year = E'', email = E'mail', networktype = E'  ', password = E'uid60', isbanned = E'false', regdate = E'2017-02-10 11:28:07.153333-05', city = E'', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487247134,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 60
17.02 04:03:34 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 60
17.02 04:03:37 TIMER: Check step...
17.02 04:03:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:37 TRACE: Check step timer exception:
17.02 04:03:37 TRACE: Invalid field access : response

17.02 04:03:37 TIMER: Check step: 1ms
17.02 04:03:38 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.22354462', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:38 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'true', endtime = E'1489121.88686331', firstid = E'92', steptime = E'1487322.21854217', params = E'{}', avaliable = E'false' WHERE ID = 14
17.02 04:03:42 TIMER: Check step...
17.02 04:03:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:42 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }
17.02 04:03:42 TRACE: Check step timer exception:
17.02 04:03:42 TRACE: Invalid field access : response

17.02 04:03:42 TIMER: Check step: 1ms
17.02 04:03:42 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 92, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:03:42 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:42 TIME: core/user.sendTo : 0.08 ms
17.02 04:03:43 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'92', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.22855109', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:44 BLOCKREMOVE: user 60 removed
17.02 04:03:44 BLOCKREMOVE: questdata 60 removed
17.02 04:03:47 TIMER: Check step...
17.02 04:03:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:47 TRACE: Check step timer exception:
17.02 04:03:47 TRACE: Invalid field access : response

17.02 04:03:47 TIMER: Check step: 1ms
17.02 04:03:48 BLOCKREMOVE: battle 14 removed
17.02 04:03:48 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.23355301', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:48 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=92 OR secondid=92 AND finished <> true, _type => core/server.query }
17.02 04:03:48 DB: SELECT id FROM battle WHERE firstid=92 OR secondid=92 AND finished <> true
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 15 }}, errorCode => ok, _type => core/server.query }
17.02 04:03:48 TIME: core/server.query : 0.88 ms
17.02 04:03:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 15, _type => vdl/cache.battle.infoRoom }
17.02 04:03:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 60, firstId => 92, _type => vdl/cache.battle.infoRoom, turnId => 60 }
17.02 04:03:48 TIME: vdl/cache.battle.infoRoom : 0.11 ms
17.02 04:03:48 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 15, _type => vdl/cache.battle.deleteRoom }
17.02 04:03:48 ROOM: deleted room 15
17.02 04:03:48 DB: DELETE FROM Battle WHERE ID = 15
17.02 04:03:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 04:03:48 TIME: vdl/cache.battle.deleteRoom : 0.66 ms
17.02 04:03:48 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 15, _type => vdl/cache.battle.finishRoom }
17.02 04:03:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 04:03:48 TIME: vdl/cache.battle.finishRoom : 0.09 ms
17.02 04:03:48 NET: vdl.0 (thread) request core/user.sendTo { id => 60, _type => core/user.sendTo, msg => { _type => battle.leave } }
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:03:48 TIME: core/user.sendTo : 0.05 ms
17.02 04:03:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 92, _type => core/cache.update }
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:03:48 TIME: core/cache.update : 0.08 ms
17.02 04:03:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 92, _type => core/cache.update }
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:03:48 TIME: core/cache.update : 0.07 ms
17.02 04:03:48 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 92, _type => core/user.logoutPost }
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:03:48 TIME: core/user.logoutPost : 0.05 ms
17.02 04:03:48 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=93 OR secondid=93 AND finished <> true, _type => core/server.query }
17.02 04:03:48 DB: SELECT id FROM battle WHERE firstid=93 OR secondid=93 AND finished <> true
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:03:48 TIME: core/server.query : 0.5 ms
17.02 04:03:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:03:48 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:03:48 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:03:48 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:03:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:03:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 93, _type => core/cache.update }
17.02 04:03:48 STATS: cache [user], get [166 calls, 64 cache hits, 102 cache misses, 0 same version, 0 not found]
17.02 04:03:48 STATS: cache [user], segments [634 calls, 409 hits, 204 misses]
17.02 04:03:48 STATS: cache [user], database [562866 calls, 102 reads, 157 writes]
17.02 04:03:48 STATS: cache [user], lock [138 calls, 138 attempts, 19 failures]
17.02 04:03:48 STATS: cache manager [1], get [210 calls, total 0.12 sec spent, avg 0.56 ms]
17.02 04:03:48 STATS: cache manager [1], update [323 calls, total 0.03 sec spent, avg 0.1 ms]
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
17.02 04:03:48 TIME: core/cache.update : 0.24 ms
17.02 04:03:48 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 93, _type => core/cache.update }
17.02 04:03:48 STATS: cache [questdata], get [91 calls, 8 cache hits, 83 cache misses, 0 same version, 1 not found]
17.02 04:03:48 STATS: cache [questdata], segments [386 calls, 198 hits, 187 misses]
17.02 04:03:48 STATS: cache [questdata], database [562866 calls, 83 reads, 87 writes]
17.02 04:03:48 STATS: cache [questdata], lock [91 calls, 91 attempts, 0 failures]
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:03:48 TIME: core/cache.update : 0.17 ms
17.02 04:03:48 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 93, _type => core/user.logoutPost }
17.02 04:03:48 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:03:48 TIME: core/user.logoutPost : 0.05 ms
17.02 04:03:49 WRITEDB: UPDATE Users SET name = E'uid93', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid93', isbanned = E'false', regdate = E'2017-02-17 03:50:25.683083-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321426,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 93
17.02 04:03:49 WRITEDB: UPDATE Users SET name = E'uid92', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid92', isbanned = E'false', regdate = E'2017-02-17 03:48:49.450121-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321330,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 92
17.02 04:03:49 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 93
17.02 04:03:49 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 92
17.02 04:03:51 TIMER: Check tournaments...
17.02 04:03:51 DB: SELECT * FROM tournament
17.02 04:03:51 TIMER: Check tournaments: 0ms
17.02 04:03:52 TIMER: Check step...
17.02 04:03:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:52 TIMER: Check step: 0ms
17.02 04:03:53 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'true', endtime = E'1489121.97321812', firstid = E'92', steptime = E'1487322.23355301', params = E'{}', avaliable = E'false' WHERE ID = 15
17.02 04:03:57 TIMER: Check step...
17.02 04:03:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:03:57 TIMER: Check step: 0ms
17.02 04:03:59 BLOCKREMOVE: user 93 removed
17.02 04:03:59 BLOCKREMOVE: user 92 removed
17.02 04:03:59 BLOCKREMOVE: questdata 93 removed
17.02 04:03:59 BLOCKREMOVE: questdata 92 removed
17.02 04:04:02 TIMER: Check step...
17.02 04:04:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:02 TIMER: Check step: 0ms
17.02 04:04:03 BLOCKREMOVE: battle 15 removed
17.02 04:04:07 TIMER: Check step...
17.02 04:04:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:07 TIMER: Check step: 1ms
17.02 04:04:11 TIMER: Check tournaments...
17.02 04:04:11 DB: SELECT * FROM tournament
17.02 04:04:11 TIMER: Check tournaments: 0ms
17.02 04:04:12 TIMER: Check step...
17.02 04:04:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:12 TIMER: Check step: 0ms
17.02 04:04:17 TIMER: Check step...
17.02 04:04:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:17 TIMER: Check step: 0ms
17.02 04:04:22 TIMER: Check step...
17.02 04:04:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:22 TIMER: Check step: 0ms
17.02 04:04:27 TIMER: Check step...
17.02 04:04:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:27 TIMER: Check step: 0ms
17.02 04:04:30 TIMER: Check round...
17.02 04:04:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:04' OR rounddate = '2017-17-02 07:04' AND status <> 'finished'
17.02 04:04:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.27056839' AND avaliable = false AND finished <> true
17.02 04:04:30 TIMER: Check round: 1ms
17.02 04:04:31 TIMER: Clans cache...
17.02 04:04:31 TIMER: Clans cache: 0ms
17.02 04:04:31 TIMER: Check tournaments...
17.02 04:04:31 DB: SELECT * FROM tournament
17.02 04:04:31 TIMER: Check tournaments: 0ms
17.02 04:04:32 TIMER: Check step...
17.02 04:04:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:32 TIMER: Check step: 0ms
17.02 04:04:37 TIMER: Check step...
17.02 04:04:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:37 TIMER: Check step: 0ms
17.02 04:04:42 TIMER: Check step...
17.02 04:04:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:42 TIMER: Check step: 0ms
17.02 04:04:47 TIMER: Check step...
17.02 04:04:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:47 TIMER: Check step: 0ms
17.02 04:04:51 TIMER: Check tournaments...
17.02 04:04:51 DB: SELECT * FROM tournament
17.02 04:04:51 TIMER: Check tournaments: 0ms
17.02 04:04:52 TIMER: Check step...
17.02 04:04:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:52 TIMER: Check step: 0ms
17.02 04:04:57 TIMER: Check step...
17.02 04:04:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:04:57 TIMER: Check step: 0ms
17.02 04:05:02 TIMER: Check step...
17.02 04:05:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:02 TIMER: Check step: 0ms
17.02 04:05:07 TIMER: Check step...
17.02 04:05:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:07 TIMER: Check step: 0ms
17.02 04:05:11 TIMER: Check tournaments...
17.02 04:05:11 DB: SELECT * FROM tournament
17.02 04:05:11 TIMER: Check tournaments: 0ms
17.02 04:05:12 TIMER: Check step...
17.02 04:05:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:12 TIMER: Check step: 0ms
17.02 04:05:17 TIMER: Check step...
17.02 04:05:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:17 TIMER: Check step: 0ms
17.02 04:05:22 TIMER: Check step...
17.02 04:05:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:22 TIMER: Check step: 1ms
17.02 04:05:27 TIMER: Check step...
17.02 04:05:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:27 TIMER: Check step: 0ms
17.02 04:05:30 TIMER: Check round...
17.02 04:05:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:05' OR rounddate = '2017-17-02 07:05' AND status <> 'finished'
17.02 04:05:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.3305893' AND avaliable = false AND finished <> true
17.02 04:05:30 TIMER: Check round: 1ms
17.02 04:05:31 TIMER: Clans cache...
17.02 04:05:31 TIMER: Clans cache: 0ms
17.02 04:05:31 TIMER: Check tournaments...
17.02 04:05:31 DB: SELECT * FROM tournament
17.02 04:05:31 TIMER: Check tournaments: 0ms
17.02 04:05:32 TIMER: Check step...
17.02 04:05:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:32 TIMER: Check step: 0ms
17.02 04:05:37 TIMER: Check step...
17.02 04:05:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:37 TIMER: Check step: 0ms
17.02 04:05:42 TIMER: Check step...
17.02 04:05:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:42 TIMER: Check step: 0ms
17.02 04:05:47 TIMER: Check step...
17.02 04:05:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:47 TIMER: Check step: 0ms
17.02 04:05:51 TIMER: Check tournaments...
17.02 04:05:51 DB: SELECT * FROM tournament
17.02 04:05:51 TIMER: Check tournaments: 0ms
17.02 04:05:52 TIMER: Check step...
17.02 04:05:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:52 TIMER: Check step: 0ms
17.02 04:05:57 TIMER: Check step...
17.02 04:05:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:05:57 TIMER: Check step: 0ms
17.02 04:06:02 TIMER: Check step...
17.02 04:06:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:02 TIMER: Check step: 0ms
17.02 04:06:07 TIMER: Check step...
17.02 04:06:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:07 TIMER: Check step: 0ms
17.02 04:06:11 TIMER: Check tournaments...
17.02 04:06:11 DB: SELECT * FROM tournament
17.02 04:06:11 TIMER: Check tournaments: 0ms
17.02 04:06:12 TIMER: Check step...
17.02 04:06:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:12 TIMER: Check step: 1ms
17.02 04:06:17 TIMER: Check step...
17.02 04:06:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:17 TIMER: Check step: 1ms
17.02 04:06:22 TIMER: Check step...
17.02 04:06:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:22 TIMER: Check step: 0ms
17.02 04:06:27 TIMER: Check step...
17.02 04:06:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:27 TIMER: Check step: 0ms
17.02 04:06:30 TIMER: Check round...
17.02 04:06:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:06' OR rounddate = '2017-17-02 07:06' AND status <> 'finished'
17.02 04:06:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.39060976' AND avaliable = false AND finished <> true
17.02 04:06:30 TIMER: Check round: 1ms
17.02 04:06:31 TIMER: Clans cache...
17.02 04:06:31 TIMER: Clans cache: 0ms
17.02 04:06:31 TIMER: Check tournaments...
17.02 04:06:31 DB: SELECT * FROM tournament
17.02 04:06:31 TIMER: Check tournaments: 0ms
17.02 04:06:32 TIMER: Check step...
17.02 04:06:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:32 TIMER: Check step: 0ms
17.02 04:06:37 TIMER: Check step...
17.02 04:06:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:37 TIMER: Check step: 0ms
17.02 04:06:42 TIMER: Check step...
17.02 04:06:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:42 TIMER: Check step: 0ms
17.02 04:06:47 TIMER: Check step...
17.02 04:06:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:47 TIMER: Check step: 0ms
17.02 04:06:51 TIMER: Check tournaments...
17.02 04:06:51 DB: SELECT * FROM tournament
17.02 04:06:51 TIMER: Check tournaments: 0ms
17.02 04:06:52 TIMER: Check step...
17.02 04:06:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:52 TIMER: Check step: 0ms
17.02 04:06:57 TIMER: Check step...
17.02 04:06:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:06:57 TIMER: Check step: 0ms
17.02 04:07:02 TIMER: Check step...
17.02 04:07:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:02 TIMER: Check step: 0ms
17.02 04:07:07 TIMER: Check step...
17.02 04:07:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:07 TIMER: Check step: 0ms
17.02 04:07:11 TIMER: Check tournaments...
17.02 04:07:11 DB: SELECT * FROM tournament
17.02 04:07:11 TIMER: Check tournaments: 0ms
17.02 04:07:12 TIMER: Check step...
17.02 04:07:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:12 TIMER: Check step: 0ms
17.02 04:07:17 TIMER: Check step...
17.02 04:07:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:17 TIMER: Check step: 0ms
17.02 04:07:22 TIMER: Check step...
17.02 04:07:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:22 TIMER: Check step: 0ms
17.02 04:07:27 TIMER: Check step...
17.02 04:07:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:27 TIMER: Check step: 0ms
17.02 04:07:30 TIMER: Check round...
17.02 04:07:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:07' OR rounddate = '2017-17-02 07:07' AND status <> 'finished'
17.02 04:07:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.45063799' AND avaliable = false AND finished <> true
17.02 04:07:30 TIMER: Check round: 1ms
17.02 04:07:31 TIMER: Clans cache...
17.02 04:07:31 TIMER: Clans cache: 0ms
17.02 04:07:31 TIMER: Check tournaments...
17.02 04:07:31 DB: SELECT * FROM tournament
17.02 04:07:31 TIMER: Check tournaments: 0ms
17.02 04:07:32 TIMER: Check step...
17.02 04:07:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:32 TIMER: Check step: 0ms
17.02 04:07:37 TIMER: Check step...
17.02 04:07:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:37 TIMER: Check step: 1ms
17.02 04:07:42 TIMER: Check step...
17.02 04:07:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:42 TIMER: Check step: 0ms
17.02 04:07:47 TIMER: Check step...
17.02 04:07:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:47 TIMER: Check step: 0ms
17.02 04:07:51 TIMER: Check tournaments...
17.02 04:07:51 DB: SELECT * FROM tournament
17.02 04:07:51 TIMER: Check tournaments: 0ms
17.02 04:07:52 TIMER: Check step...
17.02 04:07:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:52 TIMER: Check step: 0ms
17.02 04:07:57 TIMER: Check step...
17.02 04:07:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:07:57 TIMER: Check step: 0ms
17.02 04:08:02 TIMER: Check step...
17.02 04:08:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:02 TIMER: Check step: 0ms
17.02 04:08:07 TIMER: Check step...
17.02 04:08:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:07 TIMER: Check step: 0ms
17.02 04:08:11 TIMER: Check tournaments...
17.02 04:08:11 DB: SELECT * FROM tournament
17.02 04:08:11 TIMER: Check tournaments: 0ms
17.02 04:08:12 TIMER: Check step...
17.02 04:08:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:12 TIMER: Check step: 0ms
17.02 04:08:17 TIMER: Check step...
17.02 04:08:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:17 TIMER: Check step: 0ms
17.02 04:08:22 TIMER: Check step...
17.02 04:08:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:22 TIMER: Check step: 0ms
17.02 04:08:27 TIMER: Check step...
17.02 04:08:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:27 TIMER: Check step: 0ms
17.02 04:08:30 TIMER: Check round...
17.02 04:08:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:08' OR rounddate = '2017-17-02 07:08' AND status <> 'finished'
17.02 04:08:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.5106587' AND avaliable = false AND finished <> true
17.02 04:08:30 TIMER: Check round: 1ms
17.02 04:08:31 TIMER: Clans cache...
17.02 04:08:31 TIMER: Clans cache: 0ms
17.02 04:08:31 TIMER: Check tournaments...
17.02 04:08:31 DB: SELECT * FROM tournament
17.02 04:08:31 TIMER: Check tournaments: 0ms
17.02 04:08:32 TIMER: Check step...
17.02 04:08:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:32 TIMER: Check step: 0ms
17.02 04:08:37 TIMER: Check step...
17.02 04:08:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:37 TIMER: Check step: 0ms
17.02 04:08:42 TIMER: Check step...
17.02 04:08:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:42 TIMER: Check step: 0ms
17.02 04:08:47 TIMER: Check step...
17.02 04:08:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:47 TIMER: Check step: 0ms
17.02 04:08:51 TIMER: Check tournaments...
17.02 04:08:51 DB: SELECT * FROM tournament
17.02 04:08:51 TIMER: Check tournaments: 0ms
17.02 04:08:52 TIMER: Check step...
17.02 04:08:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:52 TIMER: Check step: 1ms
17.02 04:08:57 TIMER: Check step...
17.02 04:08:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:08:57 TIMER: Check step: 0ms
17.02 04:09:02 TIMER: Check step...
17.02 04:09:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:02 TIMER: Check step: 0ms
17.02 04:09:07 TIMER: Check step...
17.02 04:09:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:07 TIMER: Check step: 0ms
17.02 04:09:11 TIMER: Check tournaments...
17.02 04:09:11 DB: SELECT * FROM tournament
17.02 04:09:11 TIMER: Check tournaments: 0ms
17.02 04:09:12 TIMER: Check step...
17.02 04:09:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:12 TIMER: Check step: 0ms
17.02 04:09:17 TIMER: Check step...
17.02 04:09:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:17 TIMER: Check step: 0ms
17.02 04:09:22 TIMER: Check step...
17.02 04:09:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:22 TIMER: Check step: 0ms
17.02 04:09:27 TIMER: Check step...
17.02 04:09:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:27 TIMER: Check step: 1ms
17.02 04:09:30 TIMER: Check round...
17.02 04:09:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:09' OR rounddate = '2017-17-02 07:09' AND status <> 'finished'
17.02 04:09:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.57068116' AND avaliable = false AND finished <> true
17.02 04:09:30 TIMER: Check round: 1ms
17.02 04:09:31 TIMER: Clans cache...
17.02 04:09:31 TIMER: Clans cache: 0ms
17.02 04:09:31 TIMER: Check tournaments...
17.02 04:09:31 DB: SELECT * FROM tournament
17.02 04:09:31 TIMER: Check tournaments: 0ms
17.02 04:09:32 TIMER: Check step...
17.02 04:09:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:32 TIMER: Check step: 0ms
17.02 04:09:37 TIMER: Check step...
17.02 04:09:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:37 TIMER: Check step: 0ms
17.02 04:09:42 TIMER: Check step...
17.02 04:09:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:42 TIMER: Check step: 0ms
17.02 04:09:47 TIMER: Check step...
17.02 04:09:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:47 TIMER: Check step: 0ms
17.02 04:09:51 TIMER: Check tournaments...
17.02 04:09:51 DB: SELECT * FROM tournament
17.02 04:09:51 TIMER: Check tournaments: 0ms
17.02 04:09:52 TIMER: Check step...
17.02 04:09:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:52 TIMER: Check step: 0ms
17.02 04:09:57 TIMER: Check step...
17.02 04:09:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:09:57 TIMER: Check step: 0ms
17.02 04:10:02 TIMER: Check step...
17.02 04:10:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:02 TIMER: Check step: 0ms
17.02 04:10:07 TIMER: Check step...
17.02 04:10:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:07 TIMER: Check step: 0ms
17.02 04:10:11 TIMER: Check tournaments...
17.02 04:10:11 DB: SELECT * FROM tournament
17.02 04:10:11 TIMER: Check tournaments: 0ms
17.02 04:10:12 TIMER: Check step...
17.02 04:10:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:12 TIMER: Check step: 2ms
17.02 04:10:17 TIMER: Check step...
17.02 04:10:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:17 TIMER: Check step: 0ms
17.02 04:10:22 TIMER: Check step...
17.02 04:10:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:22 TIMER: Check step: 0ms
17.02 04:10:27 TIMER: Check step...
17.02 04:10:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:27 TIMER: Check step: 0ms
17.02 04:10:30 TIMER: Check round...
17.02 04:10:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:10' OR rounddate = '2017-17-02 07:10' AND status <> 'finished'
17.02 04:10:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.63071468' AND avaliable = false AND finished <> true
17.02 04:10:30 TIMER: Check round: 1ms
17.02 04:10:31 TIMER: Clans cache...
17.02 04:10:31 TIMER: Clans cache: 0ms
17.02 04:10:31 TIMER: Check tournaments...
17.02 04:10:31 DB: SELECT * FROM tournament
17.02 04:10:31 TIMER: Check tournaments: 0ms
17.02 04:10:32 TIMER: Check step...
17.02 04:10:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:32 TIMER: Check step: 0ms
17.02 04:10:37 TIMER: Check step...
17.02 04:10:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:37 TIMER: Check step: 0ms
17.02 04:10:42 TIMER: Check step...
17.02 04:10:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:42 TIMER: Check step: 0ms
17.02 04:10:47 TIMER: Check step...
17.02 04:10:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:47 TIMER: Check step: 1ms
17.02 04:10:51 TIMER: Check tournaments...
17.02 04:10:51 DB: SELECT * FROM tournament
17.02 04:10:51 TIMER: Check tournaments: 0ms
17.02 04:10:52 TIMER: Check step...
17.02 04:10:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:52 TIMER: Check step: 0ms
17.02 04:10:57 TIMER: Check step...
17.02 04:10:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:10:57 TIMER: Check step: 0ms
17.02 04:11:02 TIMER: Check step...
17.02 04:11:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:02 TIMER: Check step: 0ms
17.02 04:11:07 TIMER: Check step...
17.02 04:11:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:07 TIMER: Check step: 0ms
17.02 04:11:11 TIMER: Check tournaments...
17.02 04:11:11 DB: SELECT * FROM tournament
17.02 04:11:11 TIMER: Check tournaments: 0ms
17.02 04:11:12 TIMER: Check step...
17.02 04:11:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:12 TIMER: Check step: 0ms
17.02 04:11:17 TIMER: Check step...
17.02 04:11:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:17 TIMER: Check step: 0ms
17.02 04:11:22 TIMER: Check step...
17.02 04:11:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:22 TIMER: Check step: 0ms
17.02 04:11:27 TIMER: Check step...
17.02 04:11:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:27 TIMER: Check step: 0ms
17.02 04:11:30 TIMER: Check round...
17.02 04:11:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:11' OR rounddate = '2017-17-02 07:11' AND status <> 'finished'
17.02 04:11:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.6907387' AND avaliable = false AND finished <> true
17.02 04:11:30 TIMER: Check round: 1ms
17.02 04:11:31 TIMER: Clans cache...
17.02 04:11:31 TIMER: Clans cache: 0ms
17.02 04:11:31 TIMER: Check tournaments...
17.02 04:11:31 DB: SELECT * FROM tournament
17.02 04:11:31 TIMER: Check tournaments: 0ms
17.02 04:11:32 TIMER: Check step...
17.02 04:11:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:32 TIMER: Check step: 0ms
17.02 04:11:37 TIMER: Check step...
17.02 04:11:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:37 TIMER: Check step: 0ms
17.02 04:11:42 TIMER: Check step...
17.02 04:11:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:42 TIMER: Check step: 0ms
17.02 04:11:47 TIMER: Check step...
17.02 04:11:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:47 TIMER: Check step: 0ms
17.02 04:11:51 TIMER: Check tournaments...
17.02 04:11:51 DB: SELECT * FROM tournament
17.02 04:11:51 TIMER: Check tournaments: 0ms
17.02 04:11:52 TIMER: Check step...
17.02 04:11:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:52 TIMER: Check step: 0ms
17.02 04:11:57 TIMER: Check step...
17.02 04:11:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:11:57 TIMER: Check step: 0ms
17.02 04:12:02 TIMER: Check step...
17.02 04:12:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:02 TIMER: Check step: 0ms
17.02 04:12:07 TIMER: Check step...
17.02 04:12:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:07 TIMER: Check step: 0ms
17.02 04:12:11 TIMER: Check tournaments...
17.02 04:12:11 DB: SELECT * FROM tournament
17.02 04:12:11 TIMER: Check tournaments: 0ms
17.02 04:12:12 TIMER: Check step...
17.02 04:12:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:12 TIMER: Check step: 0ms
17.02 04:12:17 TIMER: Check step...
17.02 04:12:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:17 TIMER: Check step: 0ms
17.02 04:12:22 TIMER: Check step...
17.02 04:12:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:22 TIMER: Check step: 0ms
17.02 04:12:27 TIMER: Check step...
17.02 04:12:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:27 TIMER: Check step: 0ms
17.02 04:12:30 TIMER: Check round...
17.02 04:12:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:12' OR rounddate = '2017-17-02 07:12' AND status <> 'finished'
17.02 04:12:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.75075977' AND avaliable = false AND finished <> true
17.02 04:12:30 TIMER: Check round: 1ms
17.02 04:12:31 TIMER: Clans cache...
17.02 04:12:31 TIMER: Clans cache: 0ms
17.02 04:12:31 TIMER: Check tournaments...
17.02 04:12:31 DB: SELECT * FROM tournament
17.02 04:12:31 TIMER: Check tournaments: 0ms
17.02 04:12:32 TIMER: Check step...
17.02 04:12:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:32 TIMER: Check step: 1ms
17.02 04:12:37 TIMER: Check step...
17.02 04:12:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:37 TIMER: Check step: 1ms
17.02 04:12:42 TIMER: Check step...
17.02 04:12:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:42 TIMER: Check step: 0ms
17.02 04:12:47 TIMER: Check step...
17.02 04:12:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:47 TIMER: Check step: 0ms
17.02 04:12:51 TIMER: Check tournaments...
17.02 04:12:51 DB: SELECT * FROM tournament
17.02 04:12:51 TIMER: Check tournaments: 0ms
17.02 04:12:52 TIMER: Check step...
17.02 04:12:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:52 TIMER: Check step: 0ms
17.02 04:12:57 TIMER: Check step...
17.02 04:12:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:12:57 TIMER: Check step: 0ms
17.02 04:13:02 TIMER: Check step...
17.02 04:13:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:02 TIMER: Check step: 0ms
17.02 04:13:07 TIMER: Check step...
17.02 04:13:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:07 TIMER: Check step: 1ms
17.02 04:13:11 TIMER: Check tournaments...
17.02 04:13:11 DB: SELECT * FROM tournament
17.02 04:13:11 TIMER: Check tournaments: 0ms
17.02 04:13:12 TIMER: Check step...
17.02 04:13:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:12 TIMER: Check step: 0ms
17.02 04:13:17 TIMER: Check step...
17.02 04:13:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:17 TIMER: Check step: 1ms
17.02 04:13:22 TIMER: Check step...
17.02 04:13:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:22 TIMER: Check step: 0ms
17.02 04:13:27 TIMER: Check step...
17.02 04:13:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:27 TIMER: Check step: 1ms
17.02 04:13:30 TIMER: Check round...
17.02 04:13:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:13' OR rounddate = '2017-17-02 07:13' AND status <> 'finished'
17.02 04:13:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.81078329' AND avaliable = false AND finished <> true
17.02 04:13:30 TIMER: Check round: 1ms
17.02 04:13:31 TIMER: Clans cache...
17.02 04:13:31 TIMER: Clans cache: 0ms
17.02 04:13:31 TIMER: Check tournaments...
17.02 04:13:31 DB: SELECT * FROM tournament
17.02 04:13:31 TIMER: Check tournaments: 0ms
17.02 04:13:32 TIMER: Check step...
17.02 04:13:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:32 TIMER: Check step: 1ms
17.02 04:13:37 TIMER: Check step...
17.02 04:13:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:37 TIMER: Check step: 0ms
17.02 04:13:42 TIMER: Check step...
17.02 04:13:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:42 TIMER: Check step: 0ms
17.02 04:13:47 TIMER: Check step...
17.02 04:13:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:47 TIMER: Check step: 0ms
17.02 04:13:51 TIMER: Check tournaments...
17.02 04:13:51 DB: SELECT * FROM tournament
17.02 04:13:51 TIMER: Check tournaments: 0ms
17.02 04:13:52 TIMER: Check step...
17.02 04:13:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:52 TIMER: Check step: 1ms
17.02 04:13:57 TIMER: Check step...
17.02 04:13:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:13:57 TIMER: Check step: 0ms
17.02 04:14:02 TIMER: Check step...
17.02 04:14:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:02 TIMER: Check step: 0ms
17.02 04:14:07 TIMER: Check step...
17.02 04:14:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:07 TIMER: Check step: 1ms
17.02 04:14:11 TIMER: Check tournaments...
17.02 04:14:11 DB: SELECT * FROM tournament
17.02 04:14:11 TIMER: Check tournaments: 0ms
17.02 04:14:12 TIMER: Check step...
17.02 04:14:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:12 TIMER: Check step: 0ms
17.02 04:14:17 TIMER: Check step...
17.02 04:14:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:17 TIMER: Check step: 0ms
17.02 04:14:22 TIMER: Check step...
17.02 04:14:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:22 TIMER: Check step: 0ms
17.02 04:14:27 TIMER: Check step...
17.02 04:14:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:27 TIMER: Check step: 1ms
17.02 04:14:30 TIMER: Check round...
17.02 04:14:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:14' OR rounddate = '2017-17-02 07:14' AND status <> 'finished'
17.02 04:14:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.87080556' AND avaliable = false AND finished <> true
17.02 04:14:30 TIMER: Check round: 1ms
17.02 04:14:31 TIMER: Clans cache...
17.02 04:14:31 TIMER: Clans cache: 0ms
17.02 04:14:31 TIMER: Check tournaments...
17.02 04:14:31 DB: SELECT * FROM tournament
17.02 04:14:31 TIMER: Check tournaments: 0ms
17.02 04:14:32 TIMER: Check step...
17.02 04:14:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:32 TIMER: Check step: 0ms
17.02 04:14:37 TIMER: Check step...
17.02 04:14:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:37 TIMER: Check step: 0ms
17.02 04:14:42 TIMER: Check step...
17.02 04:14:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:42 TIMER: Check step: 0ms
17.02 04:14:47 TIMER: Check step...
17.02 04:14:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:47 TIMER: Check step: 1ms
17.02 04:14:51 TIMER: Check tournaments...
17.02 04:14:51 DB: SELECT * FROM tournament
17.02 04:14:51 TIMER: Check tournaments: 0ms
17.02 04:14:52 TIMER: Check step...
17.02 04:14:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:52 TIMER: Check step: 1ms
17.02 04:14:57 TIMER: Check step...
17.02 04:14:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:14:57 TIMER: Check step: 0ms
17.02 04:15:02 TIMER: Check step...
17.02 04:15:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:02 TIMER: Check step: 19ms
17.02 04:15:07 TIMER: Check step...
17.02 04:15:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:07 TIMER: Check step: 0ms
17.02 04:15:11 TIMER: Check tournaments...
17.02 04:15:11 DB: SELECT * FROM tournament
17.02 04:15:11 TIMER: Check tournaments: 0ms
17.02 04:15:12 TIMER: Check step...
17.02 04:15:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:12 TIMER: Check step: 1ms
17.02 04:15:17 TIMER: Check step...
17.02 04:15:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:17 TIMER: Check step: 0ms
17.02 04:15:22 TIMER: Check step...
17.02 04:15:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:22 TIMER: Check step: 0ms
17.02 04:15:27 TIMER: Check step...
17.02 04:15:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:27 TIMER: Check step: 0ms
17.02 04:15:30 TIMER: Check round...
17.02 04:15:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:15' OR rounddate = '2017-17-02 07:15' AND status <> 'finished'
17.02 04:15:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.93084486' AND avaliable = false AND finished <> true
17.02 04:15:30 TIMER: Check round: 1ms
17.02 04:15:31 TIMER: Clans cache...
17.02 04:15:31 TIMER: Clans cache: 0ms
17.02 04:15:31 TIMER: Check tournaments...
17.02 04:15:31 DB: SELECT * FROM tournament
17.02 04:15:31 TIMER: Check tournaments: 1ms
17.02 04:15:32 TIMER: Check step...
17.02 04:15:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:32 TIMER: Check step: 1ms
17.02 04:15:37 TIMER: Check step...
17.02 04:15:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:37 TIMER: Check step: 1ms
17.02 04:15:42 TIMER: Check step...
17.02 04:15:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:42 TIMER: Check step: 0ms
17.02 04:15:47 TIMER: Check step...
17.02 04:15:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:47 TIMER: Check step: 0ms
17.02 04:15:51 TIMER: Check tournaments...
17.02 04:15:51 DB: SELECT * FROM tournament
17.02 04:15:51 TIMER: Check tournaments: 0ms
17.02 04:15:52 TIMER: Check step...
17.02 04:15:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:52 TIMER: Check step: 0ms
17.02 04:15:57 TIMER: Check step...
17.02 04:15:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:15:57 TIMER: Check step: 1ms
17.02 04:16:02 TIMER: Check step...
17.02 04:16:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:02 TIMER: Check step: 0ms
17.02 04:16:07 TIMER: Check step...
17.02 04:16:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:07 TIMER: Check step: 0ms
17.02 04:16:11 TIMER: Check tournaments...
17.02 04:16:11 DB: SELECT * FROM tournament
17.02 04:16:11 TIMER: Check tournaments: 0ms
17.02 04:16:12 TIMER: Check step...
17.02 04:16:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:12 TIMER: Check step: 0ms
17.02 04:16:17 TIMER: Check step...
17.02 04:16:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:17 TIMER: Check step: 0ms
17.02 04:16:22 TIMER: Check step...
17.02 04:16:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:22 TIMER: Check step: 0ms
17.02 04:16:27 TIMER: Check step...
17.02 04:16:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:27 TIMER: Check step: 0ms
17.02 04:16:30 TIMER: Check round...
17.02 04:16:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:16' OR rounddate = '2017-17-02 07:16' AND status <> 'finished'
17.02 04:16:30 DB: SELECT * FROM battle WHERE endtime >= '1487322.99087007' AND avaliable = false AND finished <> true
17.02 04:16:30 TIMER: Check round: 1ms
17.02 04:16:31 TIMER: Clans cache...
17.02 04:16:31 TIMER: Clans cache: 0ms
17.02 04:16:31 TIMER: Check tournaments...
17.02 04:16:31 DB: SELECT * FROM tournament
17.02 04:16:31 TIMER: Check tournaments: 0ms
17.02 04:16:32 TIMER: Check step...
17.02 04:16:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:32 TIMER: Check step: 1ms
17.02 04:16:37 TIMER: Check step...
17.02 04:16:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:37 TIMER: Check step: 1ms
17.02 04:16:42 TIMER: Check step...
17.02 04:16:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:42 TIMER: Check step: 0ms
17.02 04:16:47 TIMER: Check step...
17.02 04:16:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:47 TIMER: Check step: 1ms
17.02 04:16:51 TIMER: Check tournaments...
17.02 04:16:51 DB: SELECT * FROM tournament
17.02 04:16:51 TIMER: Check tournaments: 0ms
17.02 04:16:52 TIMER: Check step...
17.02 04:16:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:52 TIMER: Check step: 0ms
17.02 04:16:57 TIMER: Check step...
17.02 04:16:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:16:57 TIMER: Check step: 0ms
17.02 04:17:02 TIMER: Check step...
17.02 04:17:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:02 TIMER: Check step: 0ms
17.02 04:17:07 TIMER: Check step...
17.02 04:17:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:07 TIMER: Check step: 0ms
17.02 04:17:11 TIMER: Check tournaments...
17.02 04:17:11 DB: SELECT * FROM tournament
17.02 04:17:11 TIMER: Check tournaments: 0ms
17.02 04:17:12 TIMER: Check step...
17.02 04:17:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:12 TIMER: Check step: 0ms
17.02 04:17:17 TIMER: Check step...
17.02 04:17:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:17 TIMER: Check step: 1ms
17.02 04:17:22 TIMER: Check step...
17.02 04:17:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:22 TIMER: Check step: 1ms
17.02 04:17:27 TIMER: Check step...
17.02 04:17:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:27 TIMER: Check step: 0ms
17.02 04:17:30 TIMER: Check round...
17.02 04:17:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:17' OR rounddate = '2017-17-02 07:17' AND status <> 'finished'
17.02 04:17:30 DB: SELECT * FROM battle WHERE endtime >= '1487323.0508911' AND avaliable = false AND finished <> true
17.02 04:17:30 TIMER: Check round: 1ms
17.02 04:17:31 TIMER: Clans cache...
17.02 04:17:31 TIMER: Clans cache: 0ms
17.02 04:17:31 TIMER: Check tournaments...
17.02 04:17:31 DB: SELECT * FROM tournament
17.02 04:17:31 TIMER: Check tournaments: 0ms
17.02 04:17:32 TIMER: Check step...
17.02 04:17:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:32 TIMER: Check step: 0ms
17.02 04:17:37 TIMER: Check step...
17.02 04:17:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:37 TIMER: Check step: 0ms
17.02 04:17:42 TIMER: Check step...
17.02 04:17:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:42 TIMER: Check step: 0ms
17.02 04:17:47 TIMER: Check step...
17.02 04:17:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:47 TIMER: Check step: 0ms
17.02 04:17:51 TIMER: Check tournaments...
17.02 04:17:51 DB: SELECT * FROM tournament
17.02 04:17:51 TIMER: Check tournaments: 0ms
17.02 04:17:52 TIMER: Check step...
17.02 04:17:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:52 TIMER: Check step: 0ms
17.02 04:17:57 TIMER: Check step...
17.02 04:17:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:17:57 TIMER: Check step: 0ms
17.02 04:18:02 TIMER: Check step...
17.02 04:18:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:02 TIMER: Check step: 0ms
17.02 04:18:07 TIMER: Check step...
17.02 04:18:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:07 TIMER: Check step: 1ms
17.02 04:18:11 TIMER: Check tournaments...
17.02 04:18:11 DB: SELECT * FROM tournament
17.02 04:18:11 TIMER: Check tournaments: 0ms
17.02 04:18:12 TIMER: Check step...
17.02 04:18:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:12 TIMER: Check step: 0ms
17.02 04:18:17 TIMER: Check step...
17.02 04:18:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:17 TIMER: Check step: 0ms
17.02 04:18:22 TIMER: Check step...
17.02 04:18:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:22 TIMER: Check step: 0ms
17.02 04:18:27 TIMER: Check step...
17.02 04:18:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:27 TIMER: Check step: 0ms
17.02 04:18:30 TIMER: Check round...
17.02 04:18:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:18' OR rounddate = '2017-17-02 07:18' AND status <> 'finished'
17.02 04:18:30 DB: SELECT * FROM battle WHERE endtime >= '1487323.11092883' AND avaliable = false AND finished <> true
17.02 04:18:30 TIMER: Check round: 1ms
17.02 04:18:31 TIMER: Clans cache...
17.02 04:18:31 TIMER: Clans cache: 0ms
17.02 04:18:31 TIMER: Check tournaments...
17.02 04:18:31 DB: SELECT * FROM tournament
17.02 04:18:31 TIMER: Check tournaments: 0ms
17.02 04:18:32 TIMER: Check step...
17.02 04:18:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:32 TIMER: Check step: 0ms
17.02 04:18:37 TIMER: Check step...
17.02 04:18:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:37 TIMER: Check step: 0ms
17.02 04:18:42 TIMER: Check step...
17.02 04:18:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:42 TIMER: Check step: 0ms
17.02 04:18:47 TIMER: Check step...
17.02 04:18:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:47 TIMER: Check step: 0ms
17.02 04:18:51 TIMER: Check tournaments...
17.02 04:18:51 DB: SELECT * FROM tournament
17.02 04:18:51 TIMER: Check tournaments: 0ms
17.02 04:18:52 TIMER: Check step...
17.02 04:18:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:52 TIMER: Check step: 0ms
17.02 04:18:57 TIMER: Check step...
17.02 04:18:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:18:57 TIMER: Check step: 0ms
17.02 04:19:02 TIMER: Check step...
17.02 04:19:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:02 TIMER: Check step: 0ms
17.02 04:19:07 TIMER: Check step...
17.02 04:19:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:07 TIMER: Check step: 1ms
17.02 04:19:11 TIMER: Check tournaments...
17.02 04:19:11 DB: SELECT * FROM tournament
17.02 04:19:11 TIMER: Check tournaments: 0ms
17.02 04:19:12 TIMER: Check step...
17.02 04:19:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:12 TIMER: Check step: 0ms
17.02 04:19:17 TIMER: Check step...
17.02 04:19:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:17 TIMER: Check step: 0ms
17.02 04:19:22 TIMER: Check step...
17.02 04:19:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:22 TIMER: Check step: 0ms
17.02 04:19:27 TIMER: Check step...
17.02 04:19:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:27 TIMER: Check step: 1ms
17.02 04:19:30 TIMER: Check round...
17.02 04:19:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:19' OR rounddate = '2017-17-02 07:19' AND status <> 'finished'
17.02 04:19:30 DB: SELECT * FROM battle WHERE endtime >= '1487323.17094967' AND avaliable = false AND finished <> true
17.02 04:19:30 TIMER: Check round: 1ms
17.02 04:19:31 TIMER: Clans cache...
17.02 04:19:31 TIMER: Clans cache: 0ms
17.02 04:19:31 TIMER: Check tournaments...
17.02 04:19:31 DB: SELECT * FROM tournament
17.02 04:19:31 TIMER: Check tournaments: 0ms
17.02 04:19:32 TIMER: Check step...
17.02 04:19:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:32 TIMER: Check step: 0ms
17.02 04:19:37 TIMER: Check step...
17.02 04:19:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:37 TIMER: Check step: 0ms
17.02 04:19:42 TIMER: Check step...
17.02 04:19:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:42 TIMER: Check step: 0ms
17.02 04:19:47 TIMER: Check step...
17.02 04:19:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:47 TIMER: Check step: 0ms
17.02 04:19:51 TIMER: Check tournaments...
17.02 04:19:51 DB: SELECT * FROM tournament
17.02 04:19:51 TIMER: Check tournaments: 0ms
17.02 04:19:52 TIMER: Check step...
17.02 04:19:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:52 TIMER: Check step: 0ms
17.02 04:19:57 TIMER: Check step...
17.02 04:19:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:19:57 TIMER: Check step: 0ms
17.02 04:20:02 TIMER: Check step...
17.02 04:20:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:02 TIMER: Check step: 0ms
17.02 04:20:07 TIMER: Check step...
17.02 04:20:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:07 TIMER: Check step: 0ms
17.02 04:20:11 TIMER: Check tournaments...
17.02 04:20:11 DB: SELECT * FROM tournament
17.02 04:20:11 TIMER: Check tournaments: 0ms
17.02 04:20:12 TIMER: Check step...
17.02 04:20:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:12 TIMER: Check step: 0ms
17.02 04:20:17 TIMER: Check step...
17.02 04:20:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:17 TIMER: Check step: 0ms
17.02 04:20:22 TIMER: Check step...
17.02 04:20:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:22 TIMER: Check step: 0ms
17.02 04:20:27 TIMER: Check step...
17.02 04:20:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:27 TIMER: Check step: 0ms
17.02 04:20:30 TIMER: Check round...
17.02 04:20:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:20' OR rounddate = '2017-17-02 07:20' AND status <> 'finished'
17.02 04:20:30 DB: SELECT * FROM battle WHERE endtime >= '1487323.2309754' AND avaliable = false AND finished <> true
17.02 04:20:30 TIMER: Check round: 1ms
17.02 04:20:31 TIMER: Clans cache...
17.02 04:20:31 TIMER: Clans cache: 0ms
17.02 04:20:31 TIMER: Check tournaments...
17.02 04:20:31 DB: SELECT * FROM tournament
17.02 04:20:31 TIMER: Check tournaments: 0ms
17.02 04:20:32 TIMER: Check step...
17.02 04:20:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:32 TIMER: Check step: 0ms
17.02 04:20:37 TIMER: Check step...
17.02 04:20:37 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:37 TIMER: Check step: 0ms
17.02 04:20:42 TIMER: Check step...
17.02 04:20:42 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:42 TIMER: Check step: 0ms
17.02 04:20:47 TIMER: Check step...
17.02 04:20:47 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:47 TIMER: Check step: 0ms
17.02 04:20:51 TIMER: Check tournaments...
17.02 04:20:51 DB: SELECT * FROM tournament
17.02 04:20:51 TIMER: Check tournaments: 0ms
17.02 04:20:52 TIMER: Check step...
17.02 04:20:52 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:52 TIMER: Check step: 0ms
17.02 04:20:57 TIMER: Check step...
17.02 04:20:57 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:20:57 TIMER: Check step: 0ms
17.02 04:21:02 TIMER: Check step...
17.02 04:21:02 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:02 TIMER: Check step: 0ms
17.02 04:21:07 TIMER: Check step...
17.02 04:21:07 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:07 TIMER: Check step: 0ms
17.02 04:21:11 TIMER: Check tournaments...
17.02 04:21:11 DB: SELECT * FROM tournament
17.02 04:21:11 TIMER: Check tournaments: 0ms
17.02 04:21:12 TIMER: Check step...
17.02 04:21:12 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:12 TIMER: Check step: 0ms
17.02 04:21:17 TIMER: Check step...
17.02 04:21:17 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:17 TIMER: Check step: 0ms
17.02 04:21:22 TIMER: Check step...
17.02 04:21:22 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:22 TIMER: Check step: 0ms
17.02 04:21:27 TIMER: Check step...
17.02 04:21:27 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:27 TIMER: Check step: 0ms
17.02 04:21:30 TIMER: Check round...
17.02 04:21:30 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:21' OR rounddate = '2017-17-02 07:21' AND status <> 'finished'
17.02 04:21:30 DB: SELECT * FROM battle WHERE endtime >= '1487323.29099698' AND avaliable = false AND finished <> true
17.02 04:21:30 TIMER: Check round: 1ms
17.02 04:21:31 TIMER: Clans cache...
17.02 04:21:31 TIMER: Clans cache: 0ms
17.02 04:21:31 TIMER: Check tournaments...
17.02 04:21:31 DB: SELECT * FROM tournament
17.02 04:21:31 TIMER: Check tournaments: 0ms
17.02 04:21:32 TIMER: Check step...
17.02 04:21:32 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:32 TIMER: Check step: 0ms
17.02 04:21:38 TIMER: Check step...
17.02 04:21:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:38 TIMER: Check step: 1ms
17.02 04:21:43 TIMER: Check step...
17.02 04:21:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:43 TIMER: Check step: 0ms
17.02 04:21:48 TIMER: Check step...
17.02 04:21:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:48 TIMER: Check step: 0ms
17.02 04:21:52 TIMER: Check tournaments...
17.02 04:21:52 DB: SELECT * FROM tournament
17.02 04:21:52 TIMER: Check tournaments: 0ms
17.02 04:21:53 TIMER: Check step...
17.02 04:21:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:53 TIMER: Check step: 0ms
17.02 04:21:58 TIMER: Check step...
17.02 04:21:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:21:58 TIMER: Check step: 0ms
17.02 04:22:03 TIMER: Check step...
17.02 04:22:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:03 TIMER: Check step: 0ms
17.02 04:22:08 TIMER: Check step...
17.02 04:22:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:08 TIMER: Check step: 0ms
17.02 04:22:12 TIMER: Check tournaments...
17.02 04:22:12 DB: SELECT * FROM tournament
17.02 04:22:12 TIMER: Check tournaments: 0ms
17.02 04:22:13 TIMER: Check step...
17.02 04:22:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:13 TIMER: Check step: 1ms
17.02 04:22:18 TIMER: Check step...
17.02 04:22:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:18 TIMER: Check step: 1ms
17.02 04:22:23 TIMER: Check step...
17.02 04:22:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:23 TIMER: Check step: 0ms
17.02 04:22:28 TIMER: Check step...
17.02 04:22:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:28 TIMER: Check step: 1ms
17.02 04:22:31 TIMER: Check round...
17.02 04:22:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:22' OR rounddate = '2017-17-02 07:22' AND status <> 'finished'
17.02 04:22:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.35102031' AND avaliable = false AND finished <> true
17.02 04:22:31 TIMER: Check round: 1ms
17.02 04:22:32 TIMER: Clans cache...
17.02 04:22:32 TIMER: Clans cache: 0ms
17.02 04:22:32 TIMER: Check tournaments...
17.02 04:22:32 DB: SELECT * FROM tournament
17.02 04:22:32 TIMER: Check tournaments: 0ms
17.02 04:22:33 TIMER: Check step...
17.02 04:22:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:33 TIMER: Check step: 1ms
17.02 04:22:38 TIMER: Check step...
17.02 04:22:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:38 TIMER: Check step: 0ms
17.02 04:22:43 TIMER: Check step...
17.02 04:22:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:43 TIMER: Check step: 0ms
17.02 04:22:48 TIMER: Check step...
17.02 04:22:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:48 TIMER: Check step: 0ms
17.02 04:22:52 TIMER: Check tournaments...
17.02 04:22:52 DB: SELECT * FROM tournament
17.02 04:22:52 TIMER: Check tournaments: 0ms
17.02 04:22:53 TIMER: Check step...
17.02 04:22:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:53 TIMER: Check step: 0ms
17.02 04:22:58 TIMER: Check step...
17.02 04:22:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:22:58 TIMER: Check step: 0ms
17.02 04:23:03 TIMER: Check step...
17.02 04:23:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:03 TIMER: Check step: 0ms
17.02 04:23:08 TIMER: Check step...
17.02 04:23:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:08 TIMER: Check step: 1ms
17.02 04:23:12 TIMER: Check tournaments...
17.02 04:23:12 DB: SELECT * FROM tournament
17.02 04:23:12 TIMER: Check tournaments: 0ms
17.02 04:23:13 TIMER: Check step...
17.02 04:23:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:13 TIMER: Check step: 0ms
17.02 04:23:18 TIMER: Check step...
17.02 04:23:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:18 TIMER: Check step: 0ms
17.02 04:23:23 TIMER: Check step...
17.02 04:23:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:23 TIMER: Check step: 0ms
17.02 04:23:28 TIMER: Check step...
17.02 04:23:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:28 TIMER: Check step: 0ms
17.02 04:23:31 TIMER: Check round...
17.02 04:23:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:23' OR rounddate = '2017-17-02 07:23' AND status <> 'finished'
17.02 04:23:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.41104111' AND avaliable = false AND finished <> true
17.02 04:23:31 TIMER: Check round: 1ms
17.02 04:23:32 TIMER: Clans cache...
17.02 04:23:32 TIMER: Clans cache: 0ms
17.02 04:23:32 TIMER: Check tournaments...
17.02 04:23:32 DB: SELECT * FROM tournament
17.02 04:23:32 TIMER: Check tournaments: 0ms
17.02 04:23:33 TIMER: Check step...
17.02 04:23:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:33 TIMER: Check step: 0ms
17.02 04:23:38 TIMER: Check step...
17.02 04:23:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:38 TIMER: Check step: 0ms
17.02 04:23:43 TIMER: Check step...
17.02 04:23:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:43 TIMER: Check step: 0ms
17.02 04:23:48 TIMER: Check step...
17.02 04:23:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:48 TIMER: Check step: 0ms
17.02 04:23:52 TIMER: Check tournaments...
17.02 04:23:52 DB: SELECT * FROM tournament
17.02 04:23:52 TIMER: Check tournaments: 0ms
17.02 04:23:53 TIMER: Check step...
17.02 04:23:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:53 TIMER: Check step: 0ms
17.02 04:23:58 TIMER: Check step...
17.02 04:23:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:23:58 TIMER: Check step: 0ms
17.02 04:24:03 TIMER: Check step...
17.02 04:24:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:03 TIMER: Check step: 0ms
17.02 04:24:08 TIMER: Check step...
17.02 04:24:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:08 TIMER: Check step: 1ms
17.02 04:24:12 TIMER: Check tournaments...
17.02 04:24:12 DB: SELECT * FROM tournament
17.02 04:24:12 TIMER: Check tournaments: 0ms
17.02 04:24:13 TIMER: Check step...
17.02 04:24:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:13 TIMER: Check step: 1ms
17.02 04:24:18 TIMER: Check step...
17.02 04:24:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:18 TIMER: Check step: 1ms
17.02 04:24:23 TIMER: Check step...
17.02 04:24:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:23 TIMER: Check step: 0ms
17.02 04:24:28 TIMER: Check step...
17.02 04:24:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:28 TIMER: Check step: 0ms
17.02 04:24:31 TIMER: Check round...
17.02 04:24:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:24' OR rounddate = '2017-17-02 07:24' AND status <> 'finished'
17.02 04:24:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.47106379' AND avaliable = false AND finished <> true
17.02 04:24:31 TIMER: Check round: 1ms
17.02 04:24:32 TIMER: Clans cache...
17.02 04:24:32 TIMER: Clans cache: 0ms
17.02 04:24:32 TIMER: Check tournaments...
17.02 04:24:32 DB: SELECT * FROM tournament
17.02 04:24:32 TIMER: Check tournaments: 0ms
17.02 04:24:33 TIMER: Check step...
17.02 04:24:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:33 TIMER: Check step: 0ms
17.02 04:24:38 TIMER: Check step...
17.02 04:24:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:38 TIMER: Check step: 0ms
17.02 04:24:43 TIMER: Check step...
17.02 04:24:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:43 TIMER: Check step: 0ms
17.02 04:24:48 TIMER: Check step...
17.02 04:24:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:48 TIMER: Check step: 0ms
17.02 04:24:52 TIMER: Check tournaments...
17.02 04:24:52 DB: SELECT * FROM tournament
17.02 04:24:52 TIMER: Check tournaments: 0ms
17.02 04:24:53 TIMER: Check step...
17.02 04:24:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:53 TIMER: Check step: 0ms
17.02 04:24:58 TIMER: Check step...
17.02 04:24:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:24:58 TIMER: Check step: 0ms
17.02 04:25:03 TIMER: Check step...
17.02 04:25:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:03 TIMER: Check step: 12ms
17.02 04:25:08 TIMER: Check step...
17.02 04:25:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:08 TIMER: Check step: 1ms
17.02 04:25:12 TIMER: Check tournaments...
17.02 04:25:12 DB: SELECT * FROM tournament
17.02 04:25:12 TIMER: Check tournaments: 0ms
17.02 04:25:13 TIMER: Check step...
17.02 04:25:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:13 TIMER: Check step: 0ms
17.02 04:25:18 TIMER: Check step...
17.02 04:25:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:18 TIMER: Check step: 0ms
17.02 04:25:23 TIMER: Check step...
17.02 04:25:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:23 TIMER: Check step: 0ms
17.02 04:25:28 TIMER: Check step...
17.02 04:25:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:28 TIMER: Check step: 1ms
17.02 04:25:31 TIMER: Check round...
17.02 04:25:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:25' OR rounddate = '2017-17-02 07:25' AND status <> 'finished'
17.02 04:25:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.53111043' AND avaliable = false AND finished <> true
17.02 04:25:31 TIMER: Check round: 1ms
17.02 04:25:32 TIMER: Clans cache...
17.02 04:25:32 TIMER: Clans cache: 0ms
17.02 04:25:32 TIMER: Check tournaments...
17.02 04:25:32 DB: SELECT * FROM tournament
17.02 04:25:32 TIMER: Check tournaments: 0ms
17.02 04:25:33 TIMER: Check step...
17.02 04:25:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:33 TIMER: Check step: 0ms
17.02 04:25:38 TIMER: Check step...
17.02 04:25:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:38 TIMER: Check step: 0ms
17.02 04:25:43 TIMER: Check step...
17.02 04:25:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:43 TIMER: Check step: 0ms
17.02 04:25:48 TIMER: Check step...
17.02 04:25:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:48 TIMER: Check step: 0ms
17.02 04:25:52 TIMER: Check tournaments...
17.02 04:25:52 DB: SELECT * FROM tournament
17.02 04:25:52 TIMER: Check tournaments: 0ms
17.02 04:25:53 TIMER: Check step...
17.02 04:25:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:53 TIMER: Check step: 0ms
17.02 04:25:58 TIMER: Check step...
17.02 04:25:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:25:58 TIMER: Check step: 0ms
17.02 04:26:03 TIMER: Check step...
17.02 04:26:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:03 TIMER: Check step: 0ms
17.02 04:26:08 TIMER: Check step...
17.02 04:26:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:08 TIMER: Check step: 0ms
17.02 04:26:12 TIMER: Check tournaments...
17.02 04:26:12 DB: SELECT * FROM tournament
17.02 04:26:12 TIMER: Check tournaments: 0ms
17.02 04:26:13 TIMER: Check step...
17.02 04:26:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:13 TIMER: Check step: 0ms
17.02 04:26:18 TIMER: Check step...
17.02 04:26:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:18 TIMER: Check step: 1ms
17.02 04:26:23 TIMER: Check step...
17.02 04:26:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:23 TIMER: Check step: 0ms
17.02 04:26:28 TIMER: Check step...
17.02 04:26:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:28 TIMER: Check step: 1ms
17.02 04:26:31 TIMER: Check round...
17.02 04:26:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:26' OR rounddate = '2017-17-02 07:26' AND status <> 'finished'
17.02 04:26:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.59113265' AND avaliable = false AND finished <> true
17.02 04:26:31 TIMER: Check round: 1ms
17.02 04:26:32 TIMER: Clans cache...
17.02 04:26:32 TIMER: Clans cache: 0ms
17.02 04:26:32 TIMER: Check tournaments...
17.02 04:26:32 DB: SELECT * FROM tournament
17.02 04:26:32 TIMER: Check tournaments: 0ms
17.02 04:26:33 TIMER: Check step...
17.02 04:26:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:33 TIMER: Check step: 0ms
17.02 04:26:38 TIMER: Check step...
17.02 04:26:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:38 TIMER: Check step: 0ms
17.02 04:26:43 TIMER: Check step...
17.02 04:26:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:43 TIMER: Check step: 0ms
17.02 04:26:48 TIMER: Check step...
17.02 04:26:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:48 TIMER: Check step: 0ms
17.02 04:26:52 TIMER: Check tournaments...
17.02 04:26:52 DB: SELECT * FROM tournament
17.02 04:26:52 TIMER: Check tournaments: 0ms
17.02 04:26:53 TIMER: Check step...
17.02 04:26:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:53 TIMER: Check step: 0ms
17.02 04:26:58 TIMER: Check step...
17.02 04:26:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:26:58 TIMER: Check step: 0ms
17.02 04:27:03 TIMER: Check step...
17.02 04:27:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:03 TIMER: Check step: 0ms
17.02 04:27:08 TIMER: Check step...
17.02 04:27:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:08 TIMER: Check step: 0ms
17.02 04:27:12 TIMER: Check tournaments...
17.02 04:27:12 DB: SELECT * FROM tournament
17.02 04:27:12 TIMER: Check tournaments: 0ms
17.02 04:27:13 TIMER: Check step...
17.02 04:27:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:13 TIMER: Check step: 0ms
17.02 04:27:18 TIMER: Check step...
17.02 04:27:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:18 TIMER: Check step: 0ms
17.02 04:27:23 TIMER: Check step...
17.02 04:27:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:23 TIMER: Check step: 0ms
17.02 04:27:28 TIMER: Check step...
17.02 04:27:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:28 TIMER: Check step: 0ms
17.02 04:27:31 TIMER: Check round...
17.02 04:27:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:27' OR rounddate = '2017-17-02 07:27' AND status <> 'finished'
17.02 04:27:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.65115324' AND avaliable = false AND finished <> true
17.02 04:27:31 TIMER: Check round: 1ms
17.02 04:27:32 TIMER: Clans cache...
17.02 04:27:32 TIMER: Clans cache: 0ms
17.02 04:27:32 TIMER: Check tournaments...
17.02 04:27:32 DB: SELECT * FROM tournament
17.02 04:27:32 TIMER: Check tournaments: 0ms
17.02 04:27:33 TIMER: Check step...
17.02 04:27:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:33 TIMER: Check step: 0ms
17.02 04:27:38 TIMER: Check step...
17.02 04:27:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:38 TIMER: Check step: 0ms
17.02 04:27:43 TIMER: Check step...
17.02 04:27:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:43 TIMER: Check step: 0ms
17.02 04:27:48 TIMER: Check step...
17.02 04:27:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:48 TIMER: Check step: 0ms
17.02 04:27:52 TIMER: Check tournaments...
17.02 04:27:52 DB: SELECT * FROM tournament
17.02 04:27:52 TIMER: Check tournaments: 0ms
17.02 04:27:53 TIMER: Check step...
17.02 04:27:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:53 TIMER: Check step: 1ms
17.02 04:27:58 TIMER: Check step...
17.02 04:27:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:27:58 TIMER: Check step: 0ms
17.02 04:28:03 TIMER: Check step...
17.02 04:28:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:03 TIMER: Check step: 0ms
17.02 04:28:08 TIMER: Check step...
17.02 04:28:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:08 TIMER: Check step: 0ms
17.02 04:28:12 TIMER: Check tournaments...
17.02 04:28:12 DB: SELECT * FROM tournament
17.02 04:28:12 TIMER: Check tournaments: 0ms
17.02 04:28:13 TIMER: Check step...
17.02 04:28:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:13 TIMER: Check step: 0ms
17.02 04:28:18 TIMER: Check step...
17.02 04:28:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:18 TIMER: Check step: 0ms
17.02 04:28:23 TIMER: Check step...
17.02 04:28:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:23 TIMER: Check step: 0ms
17.02 04:28:28 TIMER: Check step...
17.02 04:28:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:28 TIMER: Check step: 0ms
17.02 04:28:31 TIMER: Check round...
17.02 04:28:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:28' OR rounddate = '2017-17-02 07:28' AND status <> 'finished'
17.02 04:28:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.71117273' AND avaliable = false AND finished <> true
17.02 04:28:31 TIMER: Check round: 1ms
17.02 04:28:32 TIMER: Clans cache...
17.02 04:28:32 TIMER: Clans cache: 0ms
17.02 04:28:32 TIMER: Check tournaments...
17.02 04:28:32 DB: SELECT * FROM tournament
17.02 04:28:32 TIMER: Check tournaments: 0ms
17.02 04:28:33 TIMER: Check step...
17.02 04:28:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:33 TIMER: Check step: 1ms
17.02 04:28:38 TIMER: Check step...
17.02 04:28:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:38 TIMER: Check step: 0ms
17.02 04:28:43 TIMER: Check step...
17.02 04:28:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:43 TIMER: Check step: 1ms
17.02 04:28:48 TIMER: Check step...
17.02 04:28:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:48 TIMER: Check step: 0ms
17.02 04:28:52 TIMER: Check tournaments...
17.02 04:28:52 DB: SELECT * FROM tournament
17.02 04:28:52 TIMER: Check tournaments: 0ms
17.02 04:28:53 TIMER: Check step...
17.02 04:28:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:53 TIMER: Check step: 1ms
17.02 04:28:58 TIMER: Check step...
17.02 04:28:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:28:58 TIMER: Check step: 0ms
17.02 04:29:03 TIMER: Check step...
17.02 04:29:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:03 TIMER: Check step: 0ms
17.02 04:29:08 TIMER: Check step...
17.02 04:29:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:08 TIMER: Check step: 0ms
17.02 04:29:12 TIMER: Check tournaments...
17.02 04:29:12 DB: SELECT * FROM tournament
17.02 04:29:12 TIMER: Check tournaments: 0ms
17.02 04:29:13 TIMER: Check step...
17.02 04:29:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:13 TIMER: Check step: 0ms
17.02 04:29:18 TIMER: Check step...
17.02 04:29:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:18 TIMER: Check step: 0ms
17.02 04:29:23 TIMER: Check step...
17.02 04:29:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:23 TIMER: Check step: 0ms
17.02 04:29:28 TIMER: Check step...
17.02 04:29:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:28 TIMER: Check step: 0ms
17.02 04:29:31 TIMER: Check round...
17.02 04:29:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:29' OR rounddate = '2017-17-02 07:29' AND status <> 'finished'
17.02 04:29:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.77119731' AND avaliable = false AND finished <> true
17.02 04:29:31 TIMER: Check round: 0ms
17.02 04:29:32 TIMER: Clans cache...
17.02 04:29:32 TIMER: Clans cache: 0ms
17.02 04:29:32 TIMER: Check tournaments...
17.02 04:29:32 DB: SELECT * FROM tournament
17.02 04:29:32 TIMER: Check tournaments: 0ms
17.02 04:29:33 TIMER: Check step...
17.02 04:29:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:33 TIMER: Check step: 0ms
17.02 04:29:38 TIMER: Check step...
17.02 04:29:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:38 TIMER: Check step: 0ms
17.02 04:29:43 TIMER: Check step...
17.02 04:29:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:43 TIMER: Check step: 0ms
17.02 04:29:48 TIMER: Check step...
17.02 04:29:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:48 TIMER: Check step: 0ms
17.02 04:29:52 TIMER: Check tournaments...
17.02 04:29:52 DB: SELECT * FROM tournament
17.02 04:29:52 TIMER: Check tournaments: 0ms
17.02 04:29:53 TIMER: Check step...
17.02 04:29:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:53 TIMER: Check step: 0ms
17.02 04:29:58 TIMER: Check step...
17.02 04:29:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:29:58 TIMER: Check step: 0ms
17.02 04:30:03 TIMER: Check step...
17.02 04:30:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:03 TIMER: Check step: 0ms
17.02 04:30:08 TIMER: Check step...
17.02 04:30:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:08 TIMER: Check step: 0ms
17.02 04:30:12 TIMER: Check tournaments...
17.02 04:30:12 DB: SELECT * FROM tournament
17.02 04:30:12 TIMER: Check tournaments: 0ms
17.02 04:30:13 TIMER: Check step...
17.02 04:30:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:13 TIMER: Check step: 0ms
17.02 04:30:18 TIMER: Check step...
17.02 04:30:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:18 TIMER: Check step: 0ms
17.02 04:30:23 TIMER: Check step...
17.02 04:30:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:23 TIMER: Check step: 0ms
17.02 04:30:28 TIMER: Check step...
17.02 04:30:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:28 TIMER: Check step: 0ms
17.02 04:30:31 TIMER: Check round...
17.02 04:30:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:30' OR rounddate = '2017-17-02 07:30' AND status <> 'finished'
17.02 04:30:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.83121934' AND avaliable = false AND finished <> true
17.02 04:30:31 TIMER: Check round: 0ms
17.02 04:30:32 TIMER: Clans cache...
17.02 04:30:32 TIMER: Clans cache: 0ms
17.02 04:30:32 TIMER: Check tournaments...
17.02 04:30:32 DB: SELECT * FROM tournament
17.02 04:30:32 TIMER: Check tournaments: 0ms
17.02 04:30:33 TIMER: Check step...
17.02 04:30:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:33 TIMER: Check step: 0ms
17.02 04:30:38 TIMER: Check step...
17.02 04:30:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:38 TIMER: Check step: 0ms
17.02 04:30:43 TIMER: Check step...
17.02 04:30:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:43 TIMER: Check step: 0ms
17.02 04:30:48 TIMER: Check step...
17.02 04:30:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:48 TIMER: Check step: 0ms
17.02 04:30:52 TIMER: Check tournaments...
17.02 04:30:52 DB: SELECT * FROM tournament
17.02 04:30:52 TIMER: Check tournaments: 0ms
17.02 04:30:53 TIMER: Check step...
17.02 04:30:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:53 TIMER: Check step: 0ms
17.02 04:30:58 TIMER: Check step...
17.02 04:30:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:30:58 TIMER: Check step: 1ms
17.02 04:31:03 TIMER: Check step...
17.02 04:31:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:03 TIMER: Check step: 0ms
17.02 04:31:08 TIMER: Check step...
17.02 04:31:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:08 TIMER: Check step: 0ms
17.02 04:31:12 TIMER: Check tournaments...
17.02 04:31:12 DB: SELECT * FROM tournament
17.02 04:31:12 TIMER: Check tournaments: 0ms
17.02 04:31:13 TIMER: Check step...
17.02 04:31:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:13 TIMER: Check step: 0ms
17.02 04:31:18 TIMER: Check step...
17.02 04:31:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:18 TIMER: Check step: 1ms
17.02 04:31:23 TIMER: Check step...
17.02 04:31:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:23 TIMER: Check step: 1ms
17.02 04:31:28 TIMER: Check step...
17.02 04:31:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:28 TIMER: Check step: 0ms
17.02 04:31:31 TIMER: Check round...
17.02 04:31:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:31' OR rounddate = '2017-17-02 07:31' AND status <> 'finished'
17.02 04:31:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.89123958' AND avaliable = false AND finished <> true
17.02 04:31:31 TIMER: Check round: 1ms
17.02 04:31:32 TIMER: Clans cache...
17.02 04:31:32 TIMER: Clans cache: 0ms
17.02 04:31:32 TIMER: Check tournaments...
17.02 04:31:32 DB: SELECT * FROM tournament
17.02 04:31:32 TIMER: Check tournaments: 0ms
17.02 04:31:33 TIMER: Check step...
17.02 04:31:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:33 TIMER: Check step: 0ms
17.02 04:31:38 TIMER: Check step...
17.02 04:31:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:38 TIMER: Check step: 0ms
17.02 04:31:43 TIMER: Check step...
17.02 04:31:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:43 TIMER: Check step: 0ms
17.02 04:31:48 TIMER: Check step...
17.02 04:31:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:48 TIMER: Check step: 0ms
17.02 04:31:52 TIMER: Check tournaments...
17.02 04:31:52 DB: SELECT * FROM tournament
17.02 04:31:52 TIMER: Check tournaments: 0ms
17.02 04:31:53 TIMER: Check step...
17.02 04:31:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:53 TIMER: Check step: 0ms
17.02 04:31:58 TIMER: Check step...
17.02 04:31:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:31:58 TIMER: Check step: 1ms
17.02 04:32:03 TIMER: Check step...
17.02 04:32:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:03 TIMER: Check step: 0ms
17.02 04:32:08 TIMER: Check step...
17.02 04:32:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:08 TIMER: Check step: 0ms
17.02 04:32:12 TIMER: Check tournaments...
17.02 04:32:12 DB: SELECT * FROM tournament
17.02 04:32:12 TIMER: Check tournaments: 0ms
17.02 04:32:13 TIMER: Check step...
17.02 04:32:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:13 TIMER: Check step: 0ms
17.02 04:32:18 TIMER: Check step...
17.02 04:32:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:18 TIMER: Check step: 0ms
17.02 04:32:23 TIMER: Check step...
17.02 04:32:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:23 TIMER: Check step: 183ms
17.02 04:32:28 TIMER: Check step...
17.02 04:32:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:28 TIMER: Check step: 0ms
17.02 04:32:31 TIMER: Check round...
17.02 04:32:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:32' OR rounddate = '2017-17-02 07:32' AND status <> 'finished'
17.02 04:32:31 DB: SELECT * FROM battle WHERE endtime >= '1487323.95144476' AND avaliable = false AND finished <> true
17.02 04:32:31 TIMER: Check round: 1ms
17.02 04:32:32 TIMER: Clans cache...
17.02 04:32:32 TIMER: Clans cache: 0ms
17.02 04:32:32 TIMER: Check tournaments...
17.02 04:32:32 DB: SELECT * FROM tournament
17.02 04:32:32 TIMER: Check tournaments: 0ms
17.02 04:32:33 TIMER: Check step...
17.02 04:32:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:33 TIMER: Check step: 0ms
17.02 04:32:38 TIMER: Check step...
17.02 04:32:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:38 TIMER: Check step: 1ms
17.02 04:32:43 TIMER: Check step...
17.02 04:32:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:43 TIMER: Check step: 1ms
17.02 04:32:48 TIMER: Check step...
17.02 04:32:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:48 TIMER: Check step: 0ms
17.02 04:32:52 TIMER: Check tournaments...
17.02 04:32:52 DB: SELECT * FROM tournament
17.02 04:32:52 TIMER: Check tournaments: 0ms
17.02 04:32:53 TIMER: Check step...
17.02 04:32:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:53 TIMER: Check step: 0ms
17.02 04:32:58 TIMER: Check step...
17.02 04:32:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:32:58 TIMER: Check step: 0ms
17.02 04:33:03 TIMER: Check step...
17.02 04:33:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:03 TIMER: Check step: 0ms
17.02 04:33:08 TIMER: Check step...
17.02 04:33:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:08 TIMER: Check step: 0ms
17.02 04:33:12 TIMER: Check tournaments...
17.02 04:33:12 DB: SELECT * FROM tournament
17.02 04:33:12 TIMER: Check tournaments: 0ms
17.02 04:33:13 TIMER: Check step...
17.02 04:33:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:13 TIMER: Check step: 0ms
17.02 04:33:18 TIMER: Check step...
17.02 04:33:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:18 TIMER: Check step: 0ms
17.02 04:33:23 TIMER: Check step...
17.02 04:33:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:23 TIMER: Check step: 0ms
17.02 04:33:28 TIMER: Check step...
17.02 04:33:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:28 TIMER: Check step: 0ms
17.02 04:33:31 TIMER: Check round...
17.02 04:33:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:33' OR rounddate = '2017-17-02 07:33' AND status <> 'finished'
17.02 04:33:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.01146752' AND avaliable = false AND finished <> true
17.02 04:33:31 TIMER: Check round: 1ms
17.02 04:33:32 TIMER: Clans cache...
17.02 04:33:32 TIMER: Clans cache: 0ms
17.02 04:33:32 TIMER: Check tournaments...
17.02 04:33:32 DB: SELECT * FROM tournament
17.02 04:33:32 TIMER: Check tournaments: 0ms
17.02 04:33:33 TIMER: Check step...
17.02 04:33:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:33 TIMER: Check step: 1ms
17.02 04:33:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
17.02 04:33:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
17.02 04:33:37 TIME: core/server.query : 0.77 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:33:37 TIME: core/user.isOnlineID : 0.06 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
17.02 04:33:37 STATS: cache [user], get [166 calls, 64 cache hits, 102 cache misses, 0 same version, 0 not found]
17.02 04:33:37 STATS: cache [user], segments [636 calls, 411 hits, 204 misses]
17.02 04:33:37 STATS: cache [user], database [564655 calls, 102 reads, 159 writes]
17.02 04:33:37 STATS: cache [user], lock [139 calls, 139 attempts, 19 failures]
17.02 04:33:37 READDB: SELECT * FROM Users WHERE ID = 60
17.02 04:33:37 STATS: cache manager [1], get [211 calls, total 0.12 sec spent, avg 0.56 ms]
17.02 04:33:37 STATS: cache manager [1], update [324 calls, total 0.03 sec spent, avg 0.1 ms]
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487247134, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 60 } }
17.02 04:33:37 TIME: core/cache.get : 1.3 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
17.02 04:33:37 STATS: cache [questdata], get [91 calls, 8 cache hits, 83 cache misses, 0 same version, 1 not found]
17.02 04:33:37 STATS: cache [questdata], segments [388 calls, 200 hits, 187 misses]
17.02 04:33:37 STATS: cache [questdata], database [564655 calls, 83 reads, 89 writes]
17.02 04:33:37 STATS: cache [questdata], lock [92 calls, 92 attempts, 0 failures]
17.02 04:33:37 READDB: SELECT * FROM UserQuests WHERE ID = 60
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
17.02 04:33:37 TIME: core/cache.get : 0.67 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:33:37 TIME: core/user.loginPost : 0.07 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
17.02 04:33:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
17.02 04:33:37 TIME: core/server.query : 0.89 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => true, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:33:37 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true, _type => core/server.query }
17.02 04:33:37 DB: SELECT id FROM battle WHERE firstid=60 OR secondid=60 AND finished <> true
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:33:37 TIME: core/server.query : 0.92 ms
17.02 04:33:37 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:33:37 STATS: cache [battle], get [608 calls, 486 cache hits, 121 cache misses, 0 same version, 74 not found]
17.02 04:33:37 STATS: cache [battle], segments [936 calls, 814 hits, 121 misses]
17.02 04:33:37 STATS: cache [battle], database [564655 calls, 121 reads, 257 writes]
17.02 04:33:37 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:33:37 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:33:37 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:33:37 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:33:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:33:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 60, _type => core/cache.update }
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:33:37 TIME: core/cache.update : 0.08 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 60, _type => core/cache.update }
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:33:37 TIME: core/cache.update : 0.06 ms
17.02 04:33:37 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 60, _type => core/user.logoutPost }
17.02 04:33:37 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:33:37 TIME: core/user.logoutPost : 0.05 ms
17.02 04:33:38 TIMER: Check step...
17.02 04:33:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:38 TIMER: Check step: 0ms
17.02 04:33:42 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
17.02 04:33:42 DB: SELECT * FROM users
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ city => , password => uid4, name => uid4, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:11.793848-05, language =>   , id => 4, money => 0, deleted => false }, { city => , password => uid3, name => uid3, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:11.459825-05, language =>   , id => 3, money => 0, deleted => false }, { city => , password => uid2, name => uid2, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:11.101608-05, language =>   , id => 2, money => 0, deleted => false }, { city => , password => uid7, name => uid7, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:12.76259-05, language =>   , id => 7, money => 0, deleted => false }, { city => , password => uid6, name => uid6, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:12.437217-05, language =>   , id => 6, money => 0, deleted => false }, { city => , password => uid5, name => uid5, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:12.109987-05, language =>   , id => 5, money => 0, deleted => false }, { city => , password => uid10, name => uid10, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:13.735592-05, language =>   , id => 10, money => 0, deleted => false }, { city => , password => uid9, name => uid9, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:13.403347-05, language =>   , id => 9, money => 0, deleted => false }, { city => , password => uid8, name => uid8, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:13.083873-05, language =>   , id => 8, money => 0, deleted => false }, { city => , password => uid13, name => uid13, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:14.67559-05, language =>   , id => 13, money => 0, deleted => false }, { city => , password => uid12, name => uid12, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:14.363001-05, language =>   , id => 12, money => 0, deleted => false }, { city => , password => uid11, name => uid11, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:14.044099-05, language =>   , id => 11, money => 0, deleted => false }, { city => , password => uid16, name => uid16, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:15.662368-05, language =>   , id => 16, money => 0, deleted => false }, { city => , password => uid15, name => uid15, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:15.321183-05, language =>   , id => 15, money => 0, deleted => false }, { city => , password => uid14, name => uid14, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:14.99402-05, language =>   , id => 14, money => 0, deleted => false }, { city => , password => uid19, name => uid19, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:16.674693-05, language =>   , id => 19, money => 0, deleted => false }, { city => , password => uid18, name => uid18, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:16.349725-05, language =>   , id => 18, money => 0, deleted => false }, { city => , password => uid17, name => uid17, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:15.991021-05, language =>   , id => 17, money => 0, deleted => false }, { city => , password => uid22, name => uid22, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:17.665831-05, language =>   , id => 22, money => 0, deleted => false }, { city => , password => uid21, name => uid21, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:17.340501-05, language =>   , id => 21, money => 0, deleted => false }, { city => , password => uid20, name => uid20, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:17.021287-05, language =>   , id => 20, money => 0, deleted => false }, { city => , password => uid25, name => uid25, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:18.626759-05, language =>   , id => 25, money => 0, deleted => false }, { city => , password => uid24, name => uid24, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:18.307254-05, language =>   , id => 24, money => 0, deleted => false }, { city => , password => uid23, name => uid23, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:17.985274-05, language =>   , id => 23, money => 0, deleted => false }, { city => , password => uid27, name => uid27, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:19.29685-05, language =>   , id => 27, money => 0, deleted => false }, { city => , password => uid26, name => uid26, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:18.961177-05, language =>   , id => 26, money => 0, deleted => false }, { city => , password => uid28, name => uid28, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:19.645034-05, language =>   , id => 28, money => 0, deleted => false }, { city => , password => uid31, name => uid31, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:20.635252-05, language =>   , id => 31, money => 0, deleted => false }, { city => , password => uid30, name => uid30, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:20.298735-05, language =>   , id => 30, money => 0, deleted => false }, { city => , password => uid29, name => uid29, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:19.965299-05, language =>   , id => 29, money => 0, deleted => false }, { city => , password => uid34, name => uid34, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:21.637004-05, language =>   , id => 34, money => 0, deleted => false }, { city => , password => uid33, name => uid33, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:21.297997-05, language =>   , id => 33, money => 0, deleted => false }, { city => , password => uid32, name => uid32, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:20.959349-05, language =>   , id => 32, money => 0, deleted => false }, { city => , password => uid37, name => uid37, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:22.611041-05, language =>   , id => 37, money => 0, deleted => false }, { city => , password => uid35, name => uid35, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:21.972715-05, language =>   , id => 35, money => 0, deleted => false }, { city => , password => uid39, name => uid39, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:23.275852-05, language =>   , id => 39, money => 0, deleted => false }, { city => , password => uid43, name => uid43, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:24.614842-05, language =>   , id => 43, money => 0, deleted => false }, { city => , password => uid46, name => uid46, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:25.550909-05, language =>   , id => 46, money => 0, deleted => false }, { city => , password => uid50, name => uid50, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:26.893219-05, language =>   , id => 50, money => 0, deleted => false }, { city => , password => uid47, name => uid47, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:25.919935-05, language =>   , id => 47, money => 0, deleted => false }, { city => , password => uid51, name => uid51, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:27.276733-05, language =>   , id => 51, money => 0, deleted => false }, { city => , password => uid36, name => uid36, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:22.27566-05, language =>   , id => 36, money => 0, deleted => false }, { city => , password => uid40, name => uid40, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:23.629781-05, language =>   , id => 40, money => 0, deleted => false }, { city => , password => uid38, name => uid38, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:22.932048-05, language =>   , id => 38, money => 0, deleted => false }, { city => , password => uid41, name => uid41, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:23.960839-05, language =>   , id => 41, money => 0, deleted => false }, { city => , password => uid42, name => uid42, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:24.311632-05, language =>   , id => 42, money => 0, deleted => false }, { city => , password => uid45, name => uid45, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:25.231915-05, language =>   , id => 45, money => 0, deleted => false }, { city => , password => uid44, name => uid44, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:24.922462-05, language =>   , id => 44, money => 0, deleted => false }, { city => , password => uid49, name => uid49, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:26.563638-05, language =>   , id => 49, money => 0, deleted => false }, { city => , password => uid48, name => uid48, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:26.25379-05, language =>   , id => 48, money => 0, deleted => false }, { city => , password => uid52, name => uid52, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:27.647348-05, language =>   , id => 52, money => 0, deleted => false }, { city => , password => uid55, name => uid55, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:28.623469-05, language =>   , id => 55, money => 0, deleted => false }, { city => , password => uid54, name => uid54, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:28.304227-05, language =>   , id => 54, money => 0, deleted => false }, { city => , password => uid53, name => uid53, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:27:27.97266-05, language =>   , id => 53, money => 0, deleted => false }, { city => , password => uid56, name => uid56, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:05.794976-05, language =>   , id => 56, money => 0, deleted => false }, { city => , password => uid59, name => uid59, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:06.815017-05, language =>   , id => 59, money => 0, deleted => false }, { city => , password => uid58, name => uid58, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:06.478534-05, language =>   , id => 58, money => 0, deleted => false }, { city => , password => uid57, name => uid57, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:06.128981-05, language =>   , id => 57, money => 0, deleted => false }, { city => , password => uid61, name => uid61, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 14:16:55.785184-05, language =>   , id => 61, money => 0, deleted => false }, { city => , password => uid62, name => uid62, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 14:22:19.123091-05, language =>   , id => 62, money => 0, deleted => false }, { city => , password => qweqwe, name => Aimer, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486759954,"lastLoginDate":41,"money":100,"lastLoadDate":211},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-10 15:52:33.973174-05, language => en, id => 65, money => 0, deleted => false }, { city => , password => uid63, name => uid63, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486755420,"lastLoginDate":41,"lastLoadDate":211},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-10 14:36:33.648136-05, language => en, id => 63, money => 0, deleted => false }, { city => , password => uid66, name => uid66, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486818078,"lastLoginDate":42,"lastLoadDate":212},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-11 08:01:18.431347-05, language => en, id => 66, money => 0, deleted => false }, { city => , password => uid71, name => uid71, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486916893,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 11:28:13.257436-05, language => en, id => 71, money => 0, deleted => false }, { city => , password => uid75, name => uid75, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486929011,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:50:11.504677-05, language => en, id => 75, money => 0, deleted => false }, { city => , password => uid67, name => uid67, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486819206,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-11 08:20:06.728754-05, language => en, id => 67, money => 0, deleted => false }, { city => , password => uid64, name => uid64, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486755621,"lastLoginDate":41,"lastLoadDate":211},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-10 14:40:21.41515-05, language => en, id => 64, money => 0, deleted => false }, { city => , password => uid72, name => uid72, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487320163,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:48:12.760178-05, language => en, id => 72, money => 0, deleted => false }, { city => , password => uid68, name => uid68, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486905439,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 08:17:19.33505-05, language => en, id => 68, money => 0, deleted => false }, { city => , password => uid69, name => uid69, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487320302,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 08:40:31.139347-05, language => en, id => 69, money => 0, deleted => false }, { city => , password => uid73, name => uid73, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486928941,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:49:00.579486-05, language => en, id => 73, money => 0, deleted => false }, { city => , password => uid70, name => uid70, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486913928,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 10:38:44.702712-05, language => en, id => 70, money => 0, deleted => false }, { city => , password => uid74, name => uid74, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486929002,"lastLoginDate":43,"lastLoadDate":213},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:50:02.441222-05, language => en, id => 74, money => 0, deleted => false }, { city => , password => uid77, name => uid77, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486972789,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 02:59:48.722404-05, language => en, id => 77, money => 0, deleted => false }, { city => , password => uid81, name => uid81, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975164,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:24.252721-05, language => en, id => 81, money => 0, deleted => false }, { city => , password => uid82, name => uid82, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975165,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:25.566784-05, language => en, id => 82, money => 0, deleted => false }, { city => , password => uid78, name => uid78, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975159,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:19.505058-05, language => en, id => 78, money => 0, deleted => false }, { city => , password => uid79, name => uid79, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975161,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:21.867915-05, language => en, id => 79, money => 0, deleted => false }, { city => , password => uid85, name => uid85, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486995431,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 09:17:08.343899-05, language => en, id => 85, money => 0, deleted => false }, { city => , password => uid80, name => uid80, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486975163,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:39:23.2322-05, language => en, id => 80, money => 0, deleted => false }, { city => , password => uid83, name => uid83, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486976083,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 03:54:42.680187-05, language => en, id => 83, money => 0, deleted => false }, { city => , password => uid84, name => uid84, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1486976653,"lastLoginDate":44,"lastLoadDate":214},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-13 04:04:12.501372-05, language => en, id => 84, money => 0, deleted => false }, { city => , password => uid90, name => uid90, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321286,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 03:48:05.98115-05, language => en, id => 90, money => 0, deleted => false }, { city => , password => uid87, name => uid87, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487073150,"lastLoginDate":45,"lastLoadDate":215},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-14 06:52:29.899108-05, language => en, id => 87, money => 0, deleted => false }, { city => , password => uid86, name => uid86, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487064718,"lastLoginDate":45,"lastLoadDate":215},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-14 04:31:56.112808-05, language => en, id => 86, money => 0, deleted => false }, { city => , password => uid91, name => uid91, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321287,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 03:48:07.057509-05, language => en, id => 91, money => 0, deleted => false }, { city => , password => , name => --- DEFAULT ATTRIBUTES ---, year => , networkid => , params => {"inventory":{"list":[]},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-10 05:32:53.904032-05, language =>   , id => 1, money => 0, deleted => false }, { city => , password => uid60, name => uid60, year => , networkid => , params => {"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487247134,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => mail, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, language => en, id => 60, money => 0, deleted => false }, { city => , password => uid93, name => uid93, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321426,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 03:50:25.683083-05, language => en, id => 93, money => 0, deleted => false }, { city => , password => uid92, name => uid92, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487321330,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-17 03:48:49.450121-05, language => en, id => 92, money => 0, deleted => false }, { city => , password => 77779999, name => vvp75, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"params":{"friendPrepare":[76,76]},"attrs":{"_lastTime.24hr":1487098937,"lastLoginDate":45,"lastLoadDate":215},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-14 14:02:17.317416-05, language => en, id => 88, money => 0, deleted => false }, { city => , password => 77779999, name => ga.forest, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487071866,"lastLoginDate":45,"lastLoadDate":215},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-12 14:50:59.369023-05, language => en, id => 76, money => 0, deleted => false }, { city => , password => uid89, name => uid89, year => , networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487268382,"lastLoginDate":47,"lastLoadDate":217},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2017-02-15 03:47:42.00038-05, language => en, id => 89, money => 0, deleted => false }}, errorCode => ok, _type => core/server.query }
17.02 04:33:42 TIME: core/server.query : 5.12 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid94', _type => core/server.query }
17.02 04:33:42 DB: SELECT ID FROM Users WHERE Name = E'uid94'
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:33:42 TIME: core/server.query : 1.28 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
17.02 04:33:42 DB: SELECT nextval('Users_id_seq') AS id
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:33:42 TIME: core/server.query : 1.98 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/user.register { password => uid94, name => uid94, fullParams => { password => uid94, name => uid94, networkid => , networktype => , messageType => user.register, id => 94 }, networkid => , connectionID => 95727848, networktype => , email => , id => 94, _type => core/user.register }
17.02 04:33:42 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (94,E'uid94',E'',E'',E'uid94',E'', now())
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/user.register { errorCode => ok, _type => core/user.register }
17.02 04:33:42 TIME: core/user.register : 1.1 ms
17.02 04:33:42 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (94, 0)
17.02 04:33:42 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:33:42 DB: UPDATE Users SET params=E'{"attrs":{},"inventory":{"list":[]}, "info": {"city":"", "year": "", "email": ""}}' WHERE id=94
17.02 04:33:42 READDB: SELECT ID FROM UserQuests WHERE ID = 94
17.02 04:33:42 READDB: INSERT INTO UserQuests (ID) VALUES (94)
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid94, name => uid94, _isNotify => true, fullParams => { password => uid94, name => uid94, networkid => , networktype => , messageType => user.register, id => 94 }, networkid => , connectionID => 95727848, networktype => , email => , id => 94, _type => core/user.registerResponse }
17.02 04:33:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:33:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:33:42 TIME: core/server.query : 0.61 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:33:42 TIME: core/user.isOnlineID : 0.09 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language =>   , networkid => , params => { inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 94 } }
17.02 04:33:42 TIME: core/cache.get : 0.59 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:33:42 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 94 } }
17.02 04:33:42 TIME: core/cache.get : 0.56 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:33:42 TIME: core/user.loginPost : 0.12 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 94 AND Date = 'today'::timestamp, _type => core/server.query }
17.02 04:33:42 DB: SELECT ID FROM TempUserLogins WHERE UserID = 94 AND Date = 'today'::timestamp
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:33:42 TIME: core/server.query : 1.13 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 } }}, type => user, unlock => true, id => 94, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (94, 'today'::timestamp), _type => core/server.pending }} }
17.02 04:33:42 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (94, 'today'::timestamp)
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:33:42 TIME: core/cache.update : 1.24 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:33:42 TIME: core/cache.update : 0.19 ms
17.02 04:33:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:33:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:33:42 TIME: core/user.logoutPost : 0.46 ms
17.02 04:33:43 WRITEDB: UPDATE Users SET name = E'uid60', money = E'0', deleted = E'false', year = E'', email = E'mail', networktype = E'  ', password = E'uid60', isbanned = E'false', regdate = E'2017-02-10 11:28:07.153333-05', city = E'', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487247134,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 60
17.02 04:33:43 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 60
17.02 04:33:43 TIMER: Check step...
17.02 04:33:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:43 TIMER: Check step: 0ms
17.02 04:33:48 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:33:48 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:33:48 TIMER: Check step...
17.02 04:33:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:48 TIMER: Check step: 0ms
17.02 04:33:52 TIMER: Check tournaments...
17.02 04:33:52 DB: SELECT * FROM tournament
17.02 04:33:52 TIMER: Check tournaments: 0ms
17.02 04:33:53 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 94 }, _type => vdl/cache.battle.findRandom }
17.02 04:33:53 DB: SELECT nextval('Battle_id_seq') AS id
17.02 04:33:53 READDB: SELECT ID FROM Battle WHERE ID = 16
17.02 04:33:53 READDB: INSERT INTO Battle (ID) VALUES (16)
17.02 04:33:53 READDB: SELECT * FROM Battle WHERE ID = 16
17.02 04:33:53 DB: SELECT name FROM users WHERE id=94
17.02 04:33:53 DB: SELECT name FROM users WHERE id=60
17.02 04:33:53 TRACE: vdl/cache.battle.findRandom : Invalid field access : response
17.02 04:33:53 TRACE: vdl/cache.battle.findRandom : 
Called from modules/VDLCache.hx line 860
Called from modules/VDLCache.hx line 316
Called from modules/VDLCache.hx line 181
Called from snipe/cache/CacheServer.hx line 487
17.02 04:33:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => _requestException, _type => vdl/cache.battle.findRandom }
17.02 04:33:53 BLOCKREMOVE: user 60 removed
17.02 04:33:53 BLOCKREMOVE: questdata 60 removed
17.02 04:33:53 TIMER: Check step...
17.02 04:33:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:53 TIMER: Check step: 0ms
17.02 04:33:57 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60', _type => core/server.query }
17.02 04:33:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid60' AND Password = E'uid60'
17.02 04:33:57 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid60, networkid => , isbanned => false, id => 60 }}, errorCode => ok, _type => core/server.query }
17.02 04:33:57 TIME: core/server.query : 1.14 ms
17.02 04:33:57 NET: vdl.0 (thread) request core/user.isOnlineID { id => 60, _type => core/user.isOnlineID }
17.02 04:33:57 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:33:57 TIME: core/user.isOnlineID : 0.13 ms
17.02 04:33:57 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 60, _type => core/cache.get }
17.02 04:33:57 READDB: SELECT * FROM Users WHERE ID = 60
17.02 04:33:57 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid60, money => 0, deleted => false, year => , email => mail, networktype =>   , password => uid60, isbanned => false, regdate => 2017-02-10 11:28:07.153333-05, city => , language => en, networkid => , params => { info => { city => , year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487247134, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 60 } }
17.02 04:33:57 TIME: core/cache.get : 1.67 ms
17.02 04:33:57 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 60, _type => core/cache.get }
17.02 04:33:57 READDB: SELECT * FROM UserQuests WHERE ID = 60
17.02 04:33:57 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 60 } }
17.02 04:33:57 TIME: core/cache.get : 1.1 ms
17.02 04:33:57 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 60, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:33:57 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:33:57 TIME: core/user.loginPost : 1.1 ms
17.02 04:33:58 BLOCKREMOVE: user 94 removed
17.02 04:33:58 BLOCKREMOVE: questdata 94 removed
17.02 04:33:58 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.03917541', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:33:58 TIMER: Check step...
17.02 04:33:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:33:58 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:33:58 TRACE: Check step timer exception:
17.02 04:33:58 TRACE: Invalid field access : response

17.02 04:33:58 TIMER: Check step: 1ms
17.02 04:33:58 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:33:58 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:33:58 TIME: core/user.sendTo : 0.12 ms
17.02 04:34:03 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.04448198', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:34:03 TIMER: Check step...
17.02 04:34:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:03 TRACE: Check step timer exception:
17.02 04:34:03 TRACE: Invalid field access : response

17.02 04:34:03 TIMER: Check step: 1ms
17.02 04:34:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 60, _type => core/cache.update }
17.02 04:34:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:34:04 TIME: core/cache.update : 0.22 ms
17.02 04:34:05 WRITEDB: UPDATE Users SET name = E'uid60', money = E'0', deleted = E'false', year = E'', email = E'mail', networktype = E'  ', password = E'uid60', isbanned = E'false', regdate = E'2017-02-10 11:28:07.153333-05', city = E'', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487247134,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 60
17.02 04:34:06 NET: vdl.0 (thread) request vdl/cache.battle.closeFind { userId => 60, _type => vdl/cache.battle.closeFind }
17.02 04:34:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
17.02 04:34:06 TIME: vdl/cache.battle.closeFind : 0.43 ms
17.02 04:34:08 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.04948418', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:34:08 TIMER: Check step...
17.02 04:34:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:08 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:34:08 TRACE: Check step timer exception:
17.02 04:34:08 TRACE: Invalid field access : response

17.02 04:34:08 TIMER: Check step: 1ms
17.02 04:34:08 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:34:08 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:34:08 TIME: core/user.sendTo : 0.21 ms
17.02 04:34:09 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 60 }, _type => vdl/cache.battle.findRandom }
17.02 04:34:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 04:34:09 TIME: vdl/cache.battle.findRandom : 0.15 ms
17.02 04:34:12 TIMER: Check tournaments...
17.02 04:34:12 DB: SELECT * FROM tournament
17.02 04:34:12 TIMER: Check tournaments: 0ms
17.02 04:34:13 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.05448825', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:34:13 TIMER: Check step...
17.02 04:34:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:13 TRACE: Check step timer exception:
17.02 04:34:13 TRACE: Invalid field access : response

17.02 04:34:13 TIMER: Check step: 0ms
17.02 04:34:15 NET: vdl.0 (thread) request vdl/cache.battle.closeFind { userId => 94, _type => vdl/cache.battle.closeFind }
17.02 04:34:15 QUEUE: vdl.0 (thread) response vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
17.02 04:34:15 TIME: vdl/cache.battle.closeFind : 0.25 ms
17.02 04:34:18 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.05949021', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:34:18 TIMER: Check step...
17.02 04:34:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:18 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:34:18 TRACE: Check step timer exception:
17.02 04:34:18 TRACE: Invalid field access : response

17.02 04:34:18 TIMER: Check step: 2ms
17.02 04:34:18 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:34:18 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:34:18 TIME: core/user.sendTo : 0.19 ms
17.02 04:34:19 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 94 }, _type => vdl/cache.battle.findRandom }
17.02 04:34:19 DB: SELECT nextval('Battle_id_seq') AS id
17.02 04:34:19 READDB: SELECT ID FROM Battle WHERE ID = 17
17.02 04:34:19 READDB: INSERT INTO Battle (ID) VALUES (17)
17.02 04:34:19 READDB: SELECT * FROM Battle WHERE ID = 17
17.02 04:34:19 DB: SELECT name FROM users WHERE id=94
17.02 04:34:19 DB: SELECT name FROM users WHERE id=60
17.02 04:34:19 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid60, enemy.id => 94, enemy.name => uid94, id => 60, enemy.num => 1, battleId => 17, player => 2 }, _isNotify => true, id => 60, _type => battle.enemyEvent }
17.02 04:34:19 QUEUE: vdl.0 (thread) response tournament.leaveEvent { type => winGame, typeBattle => battle, _isNotify => true, id => 60, _type => tournament.leaveEvent, battleId => 17 }
17.02 04:34:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 04:34:19 TIME: vdl/cache.battle.findRandom : 3.87 ms
17.02 04:34:19 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 04:34:19 CACHE: cache block locked: user.1
17.02 04:34:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 04:34:19 TIME: core/cache.get : 0.72 ms
17.02 04:34:23 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.06449295', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:34:23 TIMER: Check step...
17.02 04:34:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:23 TRACE: Check step timer exception:
17.02 04:34:23 TRACE: Invalid field access : response

17.02 04:34:23 TIMER: Check step: 1ms
17.02 04:34:24 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 60 }, _type => vdl/cache.battle.findRandom }
17.02 04:34:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 04:34:24 TIME: vdl/cache.battle.findRandom : 0.27 ms
17.02 04:34:25 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.05957604', firstid = E'94', steptime = E'1487324.06557666', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:34:28 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.06949532', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:34:28 TIMER: Check step...
17.02 04:34:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:28 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:34:28 TRACE: Check step timer exception:
17.02 04:34:28 TRACE: Invalid field access : response

17.02 04:34:28 TIMER: Check step: 1ms
17.02 04:34:28 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:34:28 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:34:28 TIME: core/user.sendTo : 0.06 ms
17.02 04:34:30 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.05957604', firstid = E'94', steptime = E'1487324.07449725', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:34:31 TIMER: Check round...
17.02 04:34:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:34' OR rounddate = '2017-17-02 07:34' AND status <> 'finished'
17.02 04:34:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.07149851' AND avaliable = false AND finished <> true
17.02 04:34:31 TRACE: Check round timer exception:
17.02 04:34:31 TRACE: Invalid field access : player1

17.02 04:34:31 TIMER: Check round: 1ms
17.02 04:34:32 TIMER: Clans cache...
17.02 04:34:32 TIMER: Clans cache: 0ms
17.02 04:34:32 TIMER: Check tournaments...
17.02 04:34:32 DB: SELECT * FROM tournament
17.02 04:34:32 TIMER: Check tournaments: 0ms
17.02 04:34:33 TIMER: Check step...
17.02 04:34:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:33 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:34:33 TRACE: Check step timer exception:
17.02 04:34:33 TRACE: Invalid field access : response

17.02 04:34:33 TIMER: Check step: 0ms
17.02 04:34:33 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:34:33 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:34:33 TIME: core/user.sendTo : 0.05 ms
17.02 04:34:34 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.07950098', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:34:35 NET: vdl.0 (thread) request vdl/cache.battle.closeFind { userId => 94, _type => vdl/cache.battle.closeFind }
17.02 04:34:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
17.02 04:34:35 TIME: vdl/cache.battle.closeFind : 0.16 ms
17.02 04:34:38 TIMER: Check step...
17.02 04:34:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:38 STATS: cache [battle], get [621 calls, 496 cache hits, 124 cache misses, 0 same version, 75 not found]
17.02 04:34:38 STATS: cache [battle], segments [963 calls, 838 hits, 124 misses]
17.02 04:34:38 STATS: cache [battle], database [564716 calls, 124 reads, 267 writes]
17.02 04:34:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:34:38 TRACE: Check step timer exception:
17.02 04:34:38 TRACE: Invalid field access : response

17.02 04:34:38 TIMER: Check step: 1ms
17.02 04:34:39 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 94 }, _type => vdl/cache.battle.findRandom }
17.02 04:34:39 DB: SELECT nextval('Battle_id_seq') AS id
17.02 04:34:39 READDB: SELECT ID FROM Battle WHERE ID = 18
17.02 04:34:39 READDB: INSERT INTO Battle (ID) VALUES (18)
17.02 04:34:39 READDB: SELECT * FROM Battle WHERE ID = 18
17.02 04:34:39 DB: SELECT name FROM users WHERE id=94
17.02 04:34:39 DB: SELECT name FROM users WHERE id=60
17.02 04:34:39 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid60, enemy.id => 94, enemy.name => uid94, id => 60, enemy.num => 1, battleId => 18, player => 2 }, _isNotify => true, id => 60, _type => battle.enemyEvent }
17.02 04:34:39 QUEUE: vdl.0 (thread) response tournament.leaveEvent { type => winGame, typeBattle => battle, _isNotify => true, id => 60, _type => tournament.leaveEvent, battleId => 18 }
17.02 04:34:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 04:34:39 TIME: vdl/cache.battle.findRandom : 10.91 ms
17.02 04:34:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 04:34:39 STATS: cache [user], get [171 calls, 66 cache hits, 105 cache misses, 0 same version, 0 not found]
17.02 04:34:39 STATS: cache [user], segments [653 calls, 422 hits, 210 misses]
17.02 04:34:39 STATS: cache [user], database [564716 calls, 105 reads, 162 writes]
17.02 04:34:39 STATS: cache [user], lock [144 calls, 144 attempts, 20 failures]
17.02 04:34:39 CACHE: cache block locked: user.1
17.02 04:34:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 04:34:39 TIME: core/cache.get : 0.18 ms
17.02 04:34:39 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.05957604', firstid = E'94', steptime = E'1487324.08450286', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:34:43 TIMER: Check step...
17.02 04:34:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:43 TRACE: Check step timer exception:
17.02 04:34:43 TRACE: Invalid field access : response

17.02 04:34:43 TIMER: Check step: 1ms
17.02 04:34:44 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.07937645', firstid = E'94', steptime = E'1487324.08537844', params = E'{}', avaliable = E'false' WHERE ID = 18
17.02 04:34:44 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.03317463', firstid = E'94', steptime = E'1487324.08950454', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:34:48 TIMER: Check step...
17.02 04:34:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:48 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:34:48 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:34:48 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:34:48 TIME: core/user.sendTo : 0.03 ms
17.02 04:34:48 TRACE: Check step timer exception:
17.02 04:34:48 TRACE: Invalid field access : response

17.02 04:34:48 TIMER: Check step: 7ms
17.02 04:34:49 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 60 }, _type => vdl/cache.battle.findRandom }
17.02 04:34:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 04:34:49 TIME: vdl/cache.battle.findRandom : 0.06 ms
17.02 04:34:49 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.05957604', firstid = E'94', steptime = E'1487324.09451173', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:34:52 TIMER: Check tournaments...
17.02 04:34:52 DB: SELECT * FROM tournament
17.02 04:34:52 TIMER: Check tournaments: 0ms
17.02 04:34:53 TIMER: Check step...
17.02 04:34:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:53 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:34:53 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:34:53 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:34:53 TIME: core/user.sendTo : 0.09 ms
17.02 04:34:53 TRACE: Check step timer exception:
17.02 04:34:53 TRACE: Invalid field access : response

17.02 04:34:53 TIMER: Check step: 2ms
17.02 04:34:54 BLOCKREMOVE: battle 16 removed
17.02 04:34:54 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.07937645', firstid = E'94', steptime = E'1487324.09951513', params = E'{}', avaliable = E'false' WHERE ID = 18
17.02 04:34:58 TIMER: Check step...
17.02 04:34:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:34:58 READDB: SELECT * FROM Battle WHERE ID = 16
17.02 04:34:58 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:34:58 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:34:58 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:34:58 TIME: core/user.sendTo : 0.03 ms
17.02 04:34:58 TRACE: Check step timer exception:
17.02 04:34:58 TRACE: Invalid field access : response

17.02 04:34:58 TIMER: Check step: 1ms
17.02 04:34:59 BLOCKREMOVE: battle 17 removed
17.02 04:35:03 TIMER: Check step...
17.02 04:35:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:03 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:35:03 TRACE: Check step timer exception:
17.02 04:35:03 TRACE: Invalid field access : response

17.02 04:35:03 TIMER: Check step: 1ms
17.02 04:35:03 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:35:03 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:35:03 TIME: core/user.sendTo : 0.04 ms
17.02 04:35:04 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.10951991', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:35:08 TIMER: Check step...
17.02 04:35:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:08 READDB: SELECT * FROM Battle WHERE ID = 17
17.02 04:35:08 TRACE: Check step timer exception:
17.02 04:35:08 TRACE: Invalid field access : response

17.02 04:35:08 TIMER: Check step: 2ms
17.02 04:35:12 TIMER: Check tournaments...
17.02 04:35:12 DB: SELECT * FROM tournament
17.02 04:35:12 TIMER: Check tournaments: 0ms
17.02 04:35:13 TIMER: Check step...
17.02 04:35:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:13 TRACE: Check step timer exception:
17.02 04:35:13 TRACE: Invalid field access : response

17.02 04:35:13 TIMER: Check step: 1ms
17.02 04:35:14 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:35:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:35:14 TIME: core/server.query : 1.77 ms
17.02 04:35:14 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:35:14 TIME: core/user.isOnlineID : 0.14 ms
17.02 04:35:14 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:35:14 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:35:14 STATS: cache manager [1], get [218 calls, total 0.12 sec spent, avg 0.56 ms]
17.02 04:35:14 STATS: cache manager [1], update [330 calls, total 0.03 sec spent, avg 0.1 ms]
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:35:14 TIME: core/cache.get : 1.74 ms
17.02 04:35:14 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:35:14 STATS: cache [questdata], get [94 calls, 8 cache hits, 86 cache misses, 0 same version, 1 not found]
17.02 04:35:14 STATS: cache [questdata], segments [398 calls, 204 hits, 193 misses]
17.02 04:35:14 STATS: cache [questdata], database [564751 calls, 86 reads, 91 writes]
17.02 04:35:14 STATS: cache [questdata], lock [95 calls, 95 attempts, 0 failures]
17.02 04:35:14 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:35:14 TIME: core/cache.get : 0.65 ms
17.02 04:35:14 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:35:14 TIME: core/user.loginPost : 0.06 ms
17.02 04:35:14 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:35:14 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 17 }, { id => 18 }, { id => 16 }}, errorCode => ok, _type => core/server.query }
17.02 04:35:14 TIME: core/server.query : 0.5 ms
17.02 04:35:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 16, _type => vdl/cache.battle.infoRoom }
17.02 04:35:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 60, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 60 }
17.02 04:35:14 TIME: vdl/cache.battle.infoRoom : 0.08 ms
17.02 04:35:14 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 16, _type => vdl/cache.battle.deleteRoom }
17.02 04:35:14 ROOM: deleted room 16
17.02 04:35:14 DB: DELETE FROM Battle WHERE ID = 16
17.02 04:35:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 04:35:14 TIME: vdl/cache.battle.deleteRoom : 1.1 ms
17.02 04:35:14 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 16, _type => vdl/cache.battle.finishRoom }
17.02 04:35:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 04:35:14 TIME: vdl/cache.battle.finishRoom : 0.08 ms
17.02 04:35:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:35:14 TIME: core/cache.update : 0.07 ms
17.02 04:35:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:35:14 TIME: core/cache.update : 0.09 ms
17.02 04:35:14 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:35:14 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:35:14 TIME: core/user.logoutPost : 0.05 ms
17.02 04:35:14 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.11956496', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:35:14 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'true', endtime = E'1489120', firstid = E'94', steptime = E'1487324.10951991', params = E'{}', avaliable = E'false' WHERE ID = 16
17.02 04:35:18 TIMER: Check step...
17.02 04:35:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:18 TRACE: Check step timer exception:
17.02 04:35:18 TRACE: Invalid field access : response

17.02 04:35:18 TIMER: Check step: 1ms
17.02 04:35:19 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:35:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:35:19 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.07937645', firstid = E'94', steptime = E'1487324.12456716', params = E'{}', avaliable = E'false' WHERE ID = 18
17.02 04:35:23 TIMER: Check step...
17.02 04:35:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:23 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:35:23 TRACE: Check step timer exception:
17.02 04:35:23 TRACE: Invalid field access : response

17.02 04:35:23 TIMER: Check step: 1ms
17.02 04:35:23 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:35:23 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:35:23 TIME: core/user.sendTo : 0.06 ms
17.02 04:35:24 BLOCKREMOVE: battle 16 removed
17.02 04:35:24 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.12956914', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:35:26 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 30, player => 94 }, _type => vdl/cache.battle.findRandom }
17.02 04:35:26 DB: SELECT nextval('Battle_id_seq') AS id
17.02 04:35:26 READDB: SELECT ID FROM Battle WHERE ID = 19
17.02 04:35:26 READDB: INSERT INTO Battle (ID) VALUES (19)
17.02 04:35:26 READDB: SELECT * FROM Battle WHERE ID = 19
17.02 04:35:26 DB: SELECT name FROM users WHERE id=94
17.02 04:35:26 DB: SELECT name FROM users WHERE id=60
17.02 04:35:26 QUEUE: vdl.0 (thread) response battle.enemyEvent { data => { name => uid60, enemy.id => 94, enemy.name => uid94, id => 60, enemy.num => 1, battleId => 19, player => 2 }, _isNotify => true, id => 60, _type => battle.enemyEvent }
17.02 04:35:26 QUEUE: vdl.0 (thread) response tournament.leaveEvent { type => winGame, typeBattle => battle, _isNotify => true, id => 60, _type => tournament.leaveEvent, battleId => 19 }
17.02 04:35:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
17.02 04:35:26 TIME: vdl/cache.battle.findRandom : 2.03 ms
17.02 04:35:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 1, _type => core/cache.get }
17.02 04:35:26 CACHE: cache block locked: user.1
17.02 04:35:26 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => lockTimeout, _type => core/cache.get }
17.02 04:35:26 TIME: core/cache.get : 0.03 ms
17.02 04:35:28 TIMER: Check step...
17.02 04:35:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:28 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:35:28 TRACE: Check step timer exception:
17.02 04:35:28 TRACE: Invalid field access : response

17.02 04:35:28 TIMER: Check step: 1ms
17.02 04:35:28 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:35:28 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:35:28 TIME: core/user.sendTo : 0.06 ms
17.02 04:35:29 BLOCKREMOVE: user 94 removed
17.02 04:35:29 BLOCKREMOVE: questdata 94 removed
17.02 04:35:29 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.07937645', firstid = E'94', steptime = E'1487324.13457146', params = E'{}', avaliable = E'false' WHERE ID = 18
17.02 04:35:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:35:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:35:31 TIME: core/server.query : 0.82 ms
17.02 04:35:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:35:31 TIME: core/user.isOnlineID : 0.26 ms
17.02 04:35:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:35:31 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:35:31 TIME: core/cache.get : 0.94 ms
17.02 04:35:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:35:31 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:35:31 TIME: core/cache.get : 0.41 ms
17.02 04:35:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:35:31 TIME: core/user.loginPost : 0.32 ms
17.02 04:35:31 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:35:31 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 17 }, { id => 18 }}, errorCode => ok, _type => core/server.query }
17.02 04:35:31 TIME: core/server.query : 0.78 ms
17.02 04:35:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 18, _type => vdl/cache.battle.infoRoom }
17.02 04:35:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 60, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 60 }
17.02 04:35:31 TIME: vdl/cache.battle.infoRoom : 0.07 ms
17.02 04:35:31 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 18, _type => vdl/cache.battle.deleteRoom }
17.02 04:35:31 ROOM: deleted room 18
17.02 04:35:31 DB: DELETE FROM Battle WHERE ID = 18
17.02 04:35:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 04:35:31 TIME: vdl/cache.battle.deleteRoom : 0.4 ms
17.02 04:35:31 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 18, _type => vdl/cache.battle.finishRoom }
17.02 04:35:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 04:35:31 TIME: vdl/cache.battle.finishRoom : 0.1 ms
17.02 04:35:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:35:31 TIME: core/cache.update : 0.58 ms
17.02 04:35:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:35:31 TIME: core/cache.update : 0.08 ms
17.02 04:35:31 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:35:31 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:35:31 TIME: core/user.logoutPost : 0.08 ms
17.02 04:35:31 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.12616505', firstid = E'94', steptime = E'1487324.13216579', params = E'{}', avaliable = E'false' WHERE ID = 19
17.02 04:35:31 TIMER: Check round...
17.02 04:35:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:35' OR rounddate = '2017-17-02 07:35' AND status <> 'finished'
17.02 04:35:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.13157567' AND avaliable = false AND finished <> true
17.02 04:35:31 TRACE: Check round timer exception:
17.02 04:35:31 TRACE: Invalid field access : player1

17.02 04:35:31 TIMER: Check round: 2ms
17.02 04:35:32 TIMER: Clans cache...
17.02 04:35:32 TIMER: Clans cache: 0ms
17.02 04:35:32 TIMER: Check tournaments...
17.02 04:35:32 DB: SELECT * FROM tournament
17.02 04:35:32 TIMER: Check tournaments: 0ms
17.02 04:35:33 TIMER: Check step...
17.02 04:35:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:33 TRACE: Check step timer exception:
17.02 04:35:33 TRACE: Invalid field access : response

17.02 04:35:33 TIMER: Check step: 1ms
17.02 04:35:34 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'true', endtime = E'1489124.07937645', firstid = E'94', steptime = E'1487324.13457146', params = E'{}', avaliable = E'false' WHERE ID = 18
17.02 04:35:34 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.13957885', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:35:36 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:35:36 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:35:38 TIMER: Check step...
17.02 04:35:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:38 STATS: cache [battle], get [641 calls, 512 cache hits, 128 cache misses, 0 same version, 75 not found]
17.02 04:35:38 STATS: cache [battle], segments [1005 calls, 876 hits, 128 misses]
17.02 04:35:38 STATS: cache [battle], database [564776 calls, 128 reads, 281 writes]
17.02 04:35:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:35:38 TRACE: Check step timer exception:
17.02 04:35:38 TRACE: Invalid field access : response

17.02 04:35:38 TIMER: Check step: 2ms
17.02 04:35:39 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489124.12616505', firstid = E'94', steptime = E'1487324.14458225', params = E'{}', avaliable = E'false' WHERE ID = 19
17.02 04:35:43 TIMER: Check step...
17.02 04:35:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:43 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:35:43 TRACE: Check step timer exception:
17.02 04:35:43 TRACE: Invalid field access : response

17.02 04:35:43 TIMER: Check step: 1ms
17.02 04:35:43 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:35:43 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:35:43 TIME: core/user.sendTo : 0.06 ms
17.02 04:35:44 BLOCKREMOVE: battle 18 removed
17.02 04:35:44 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.14958425', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:35:46 BLOCKREMOVE: user 94 removed
17.02 04:35:46 BLOCKREMOVE: questdata 94 removed
17.02 04:35:48 TIMER: Check step...
17.02 04:35:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:48 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:35:48 TRACE: Check step timer exception:
17.02 04:35:48 TRACE: Invalid field access : response

17.02 04:35:48 TIMER: Check step: 1ms
17.02 04:35:48 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:35:48 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:35:48 TIME: core/user.sendTo : 0.05 ms
17.02 04:35:49 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489124.12616505', firstid = E'94', steptime = E'1487324.15458675', params = E'{}', avaliable = E'false' WHERE ID = 19
17.02 04:35:52 TIMER: Check tournaments...
17.02 04:35:52 DB: SELECT * FROM tournament
17.02 04:35:52 TIMER: Check tournaments: 0ms
17.02 04:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:35:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:35:52 TIME: core/server.query : 2.06 ms
17.02 04:35:52 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:35:52 TIME: core/user.isOnlineID : 0.08 ms
17.02 04:35:52 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:35:52 STATS: cache [user], get [173 calls, 66 cache hits, 107 cache misses, 0 same version, 0 not found]
17.02 04:35:52 STATS: cache [user], segments [663 calls, 428 hits, 214 misses]
17.02 04:35:52 STATS: cache [user], database [564790 calls, 107 reads, 164 writes]
17.02 04:35:52 STATS: cache [user], lock [148 calls, 148 attempts, 22 failures]
17.02 04:35:52 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:35:52 TIME: core/cache.get : 1.07 ms
17.02 04:35:52 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:35:52 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:35:52 TIME: core/cache.get : 0.5 ms
17.02 04:35:52 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:35:52 TIME: core/user.loginPost : 0.1 ms
17.02 04:35:52 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:35:52 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 17 }, { id => 19 }}, errorCode => ok, _type => core/server.query }
17.02 04:35:52 TIME: core/server.query : 0.65 ms
17.02 04:35:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 19, _type => vdl/cache.battle.infoRoom }
17.02 04:35:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 60, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 60 }
17.02 04:35:52 TIME: vdl/cache.battle.infoRoom : 0.11 ms
17.02 04:35:52 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 19, _type => vdl/cache.battle.deleteRoom }
17.02 04:35:52 ROOM: deleted room 19
17.02 04:35:52 DB: DELETE FROM Battle WHERE ID = 19
17.02 04:35:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 04:35:52 TIME: vdl/cache.battle.deleteRoom : 0.85 ms
17.02 04:35:52 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 19, _type => vdl/cache.battle.finishRoom }
17.02 04:35:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 04:35:52 TIME: vdl/cache.battle.finishRoom : 0.08 ms
17.02 04:35:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:35:52 TIME: core/cache.update : 0.17 ms
17.02 04:35:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:35:52 TIME: core/cache.update : 0.12 ms
17.02 04:35:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:35:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:35:52 TIME: core/user.logoutPost : 0.1 ms
17.02 04:35:53 TIMER: Check step...
17.02 04:35:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:53 TRACE: Check step timer exception:
17.02 04:35:53 TRACE: Invalid field access : response

17.02 04:35:53 TIMER: Check step: 1ms
17.02 04:35:54 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'true', endtime = E'1489124.12616505', firstid = E'94', steptime = E'1487324.15458675', params = E'{}', avaliable = E'false' WHERE ID = 19
17.02 04:35:54 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.15958953', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:35:58 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:35:58 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:35:58 TIMER: Check step...
17.02 04:35:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:35:58 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:35:58 TRACE: Check step timer exception:
17.02 04:35:58 TRACE: Invalid field access : response

17.02 04:35:58 TIMER: Check step: 1ms
17.02 04:35:58 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:35:58 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:35:58 TIME: core/user.sendTo : 0.06 ms
17.02 04:35:59 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.16459179', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:36:03 TIMER: Check step...
17.02 04:36:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:03 TRACE: Check step timer exception:
17.02 04:36:03 TRACE: Invalid field access : response

17.02 04:36:03 TIMER: Check step: 3ms
17.02 04:36:04 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'94', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.16959614', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:36:08 BLOCKREMOVE: user 94 removed
17.02 04:36:08 BLOCKREMOVE: questdata 94 removed
17.02 04:36:08 TIMER: Check step...
17.02 04:36:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:08 QUEUE: vdl.0 (thread) response battle.skipEvent { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }
17.02 04:36:08 TRACE: Check step timer exception:
17.02 04:36:08 TRACE: Invalid field access : response

17.02 04:36:08 TIMER: Check step: 1ms
17.02 04:36:08 NET: vdl.0 (thread) request core/user.sendTo { id => { type => skip, _isNotify => true, id => 60, _type => battle.skipEvent }, _type => core/user.sendTo, msg => { name => skip, _type => battle.task } }
17.02 04:36:08 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.02 04:36:08 TIME: core/user.sendTo : 0.08 ms
17.02 04:36:09 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'false', endtime = E'1489120', firstid = E'94', steptime = E'1487324.17459823', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:36:11 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:36:11 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:36:11 TIME: core/server.query : 0.84 ms
17.02 04:36:11 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:36:11 TIME: core/user.isOnlineID : 0.04 ms
17.02 04:36:11 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:36:11 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:36:11 TIME: core/cache.get : 0.74 ms
17.02 04:36:11 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:36:11 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:36:11 TIME: core/cache.get : 0.4 ms
17.02 04:36:11 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:36:11 TIME: core/user.loginPost : 0.04 ms
17.02 04:36:11 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:36:11 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 17 }}, errorCode => ok, _type => core/server.query }
17.02 04:36:11 TIME: core/server.query : 0.35 ms
17.02 04:36:11 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 17, _type => vdl/cache.battle.infoRoom }
17.02 04:36:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 60, firstId => 94, _type => vdl/cache.battle.infoRoom, turnId => 60 }
17.02 04:36:11 TIME: vdl/cache.battle.infoRoom : 0.08 ms
17.02 04:36:11 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 17, _type => vdl/cache.battle.deleteRoom }
17.02 04:36:11 ROOM: deleted room 17
17.02 04:36:11 DB: DELETE FROM Battle WHERE ID = 17
17.02 04:36:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.02 04:36:11 TIME: vdl/cache.battle.deleteRoom : 0.57 ms
17.02 04:36:11 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 17, _type => vdl/cache.battle.finishRoom }
17.02 04:36:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.02 04:36:11 TIME: vdl/cache.battle.finishRoom : 0.07 ms
17.02 04:36:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:36:11 TIME: core/cache.update : 0.11 ms
17.02 04:36:11 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:36:11 TIME: core/cache.update : 0.08 ms
17.02 04:36:11 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:36:11 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:36:11 TIME: core/user.logoutPost : 0.07 ms
17.02 04:36:12 TIMER: Check tournaments...
17.02 04:36:12 DB: SELECT * FROM tournament
17.02 04:36:12 TIMER: Check tournaments: 0ms
17.02 04:36:13 TIMER: Check step...
17.02 04:36:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:13 TIMER: Check step: 0ms
17.02 04:36:14 WRITEDB: UPDATE Battle SET tournamentid = E'-1', roundtime = E'30', secondid = E'60', turnid = E'60', finished = E'true', endtime = E'1489120', firstid = E'94', steptime = E'1487324.17459823', params = E'{}', avaliable = E'false' WHERE ID = 17
17.02 04:36:17 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:36:17 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:36:18 TIMER: Check step...
17.02 04:36:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:18 TIMER: Check step: 0ms
17.02 04:36:23 TIMER: Check step...
17.02 04:36:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:23 TIMER: Check step: 0ms
17.02 04:36:24 BLOCKREMOVE: battle 17 removed
17.02 04:36:27 BLOCKREMOVE: user 94 removed
17.02 04:36:27 BLOCKREMOVE: questdata 94 removed
17.02 04:36:28 TIMER: Check step...
17.02 04:36:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:28 TIMER: Check step: 0ms
17.02 04:36:31 TIMER: Check round...
17.02 04:36:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:36' OR rounddate = '2017-17-02 07:36' AND status <> 'finished'
17.02 04:36:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.19164899' AND avaliable = false AND finished <> true
17.02 04:36:31 TIMER: Check round: 1ms
17.02 04:36:32 TIMER: Clans cache...
17.02 04:36:32 TIMER: Clans cache: 0ms
17.02 04:36:32 TIMER: Check tournaments...
17.02 04:36:32 DB: SELECT * FROM tournament
17.02 04:36:32 TIMER: Check tournaments: 0ms
17.02 04:36:33 TIMER: Check step...
17.02 04:36:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:33 TIMER: Check step: 0ms
17.02 04:36:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:36:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:36:38 TIME: core/server.query : 0.89 ms
17.02 04:36:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:36:38 TIME: core/user.isOnlineID : 0.06 ms
17.02 04:36:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:36:38 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:36:38 STATS: cache manager [1], get [226 calls, total 0.13 sec spent, avg 0.56 ms]
17.02 04:36:38 STATS: cache manager [1], update [338 calls, total 0.03 sec spent, avg 0.1 ms]
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:36:38 TIME: core/cache.get : 1.1 ms
17.02 04:36:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:36:38 STATS: cache [questdata], get [98 calls, 8 cache hits, 90 cache misses, 0 same version, 1 not found]
17.02 04:36:38 STATS: cache [questdata], segments [414 calls, 212 hits, 201 misses]
17.02 04:36:38 STATS: cache [questdata], database [564835 calls, 90 reads, 95 writes]
17.02 04:36:38 STATS: cache [questdata], lock [99 calls, 99 attempts, 0 failures]
17.02 04:36:38 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:36:38 TIME: core/cache.get : 0.68 ms
17.02 04:36:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:36:38 TIME: core/user.loginPost : 0.07 ms
17.02 04:36:38 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:36:38 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:36:38 TIME: core/server.query : 0.51 ms
17.02 04:36:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:36:38 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:36:38 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:36:38 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:36:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:36:38 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:36:38 TIME: core/cache.update : 0.1 ms
17.02 04:36:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:36:38 TIME: core/cache.update : 0.08 ms
17.02 04:36:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:36:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:36:38 TIME: core/user.logoutPost : 0.06 ms
17.02 04:36:38 TIMER: Check step...
17.02 04:36:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:38 TIMER: Check step: 0ms
17.02 04:36:43 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:36:43 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:36:43 TIMER: Check step...
17.02 04:36:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:43 TIMER: Check step: 0ms
17.02 04:36:48 TIMER: Check step...
17.02 04:36:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:48 TIMER: Check step: 0ms
17.02 04:36:52 TIMER: Check tournaments...
17.02 04:36:52 DB: SELECT * FROM tournament
17.02 04:36:52 TIMER: Check tournaments: 0ms
17.02 04:36:53 BLOCKREMOVE: user 94 removed
17.02 04:36:53 BLOCKREMOVE: questdata 94 removed
17.02 04:36:53 TIMER: Check step...
17.02 04:36:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:53 TIMER: Check step: 0ms
17.02 04:36:58 TIMER: Check step...
17.02 04:36:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:36:58 TIMER: Check step: 0ms
17.02 04:36:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:36:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:36:58 TIME: core/server.query : 0.84 ms
17.02 04:36:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:36:58 TIME: core/user.isOnlineID : 0.03 ms
17.02 04:36:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:36:58 STATS: cache [user], get [176 calls, 66 cache hits, 110 cache misses, 0 same version, 0 not found]
17.02 04:36:58 STATS: cache [user], segments [675 calls, 434 hits, 220 misses]
17.02 04:36:58 STATS: cache [user], database [564856 calls, 110 reads, 167 writes]
17.02 04:36:58 STATS: cache [user], lock [151 calls, 151 attempts, 22 failures]
17.02 04:36:58 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:36:58 TIME: core/cache.get : 0.7 ms
17.02 04:36:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:36:58 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:36:58 TIME: core/cache.get : 0.26 ms
17.02 04:36:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:36:58 TIME: core/user.loginPost : 0.03 ms
17.02 04:36:58 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:36:58 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:36:58 TIME: core/server.query : 0.28 ms
17.02 04:36:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:36:58 STATS: cache [battle], get [653 calls, 523 cache hits, 129 cache misses, 0 same version, 76 not found]
17.02 04:36:58 STATS: cache [battle], segments [1028 calls, 898 hits, 129 misses]
17.02 04:36:58 STATS: cache [battle], database [564856 calls, 129 reads, 290 writes]
17.02 04:36:58 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:36:58 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:36:58 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:36:58 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:36:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:36:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:36:58 TIME: core/cache.update : 0.04 ms
17.02 04:36:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:36:58 TIME: core/cache.update : 0.03 ms
17.02 04:36:58 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:36:58 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:36:58 TIME: core/user.logoutPost : 0.02 ms
17.02 04:37:03 TIMER: Check step...
17.02 04:37:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:03 TIMER: Check step: 0ms
17.02 04:37:04 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:37:04 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:37:08 TIMER: Check step...
17.02 04:37:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:08 TIMER: Check step: 0ms
17.02 04:37:12 TIMER: Check tournaments...
17.02 04:37:12 DB: SELECT * FROM tournament
17.02 04:37:12 TIMER: Check tournaments: 0ms
17.02 04:37:13 TIMER: Check step...
17.02 04:37:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:13 TIMER: Check step: 0ms
17.02 04:37:14 BLOCKREMOVE: user 94 removed
17.02 04:37:14 BLOCKREMOVE: questdata 94 removed
17.02 04:37:18 TIMER: Check step...
17.02 04:37:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:18 TIMER: Check step: 0ms
17.02 04:37:23 TIMER: Check step...
17.02 04:37:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:23 TIMER: Check step: 0ms
17.02 04:37:28 TIMER: Check step...
17.02 04:37:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:28 TIMER: Check step: 0ms
17.02 04:37:31 TIMER: Check round...
17.02 04:37:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:37' OR rounddate = '2017-17-02 07:37' AND status <> 'finished'
17.02 04:37:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.25167171' AND avaliable = false AND finished <> true
17.02 04:37:31 TIMER: Check round: 1ms
17.02 04:37:32 TIMER: Clans cache...
17.02 04:37:32 TIMER: Clans cache: 0ms
17.02 04:37:32 TIMER: Check tournaments...
17.02 04:37:32 DB: SELECT * FROM tournament
17.02 04:37:32 TIMER: Check tournaments: 0ms
17.02 04:37:33 TIMER: Check step...
17.02 04:37:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:33 TIMER: Check step: 0ms
17.02 04:37:38 TIMER: Check step...
17.02 04:37:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:38 TIMER: Check step: 0ms
17.02 04:37:43 TIMER: Check step...
17.02 04:37:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:43 TIMER: Check step: 0ms
17.02 04:37:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:37:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:37:43 TIME: core/server.query : 0.85 ms
17.02 04:37:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:37:43 TIME: core/user.isOnlineID : 0.07 ms
17.02 04:37:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:37:43 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:37:43 STATS: cache manager [1], get [230 calls, total 0.13 sec spent, avg 0.56 ms]
17.02 04:37:43 STATS: cache manager [1], update [342 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:37:43 TIME: core/cache.get : 1 ms
17.02 04:37:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:37:43 STATS: cache [questdata], get [100 calls, 8 cache hits, 92 cache misses, 0 same version, 1 not found]
17.02 04:37:43 STATS: cache [questdata], segments [422 calls, 216 hits, 205 misses]
17.02 04:37:43 STATS: cache [questdata], database [564901 calls, 92 reads, 97 writes]
17.02 04:37:43 STATS: cache [questdata], lock [101 calls, 101 attempts, 0 failures]
17.02 04:37:43 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:37:43 TIME: core/cache.get : 0.63 ms
17.02 04:37:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:37:43 TIME: core/user.loginPost : 0.05 ms
17.02 04:37:43 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:37:43 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:37:43 TIME: core/server.query : 0.51 ms
17.02 04:37:43 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:37:43 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:37:43 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:37:43 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:37:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:37:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:37:43 TIME: core/cache.update : 0.1 ms
17.02 04:37:43 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:37:43 TIME: core/cache.update : 0.07 ms
17.02 04:37:43 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:37:43 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:37:43 TIME: core/user.logoutPost : 0.05 ms
17.02 04:37:48 TIMER: Check step...
17.02 04:37:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:48 TIMER: Check step: 0ms
17.02 04:37:49 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:37:49 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:37:52 TIMER: Check tournaments...
17.02 04:37:52 DB: SELECT * FROM tournament
17.02 04:37:52 TIMER: Check tournaments: 0ms
17.02 04:37:53 TIMER: Check step...
17.02 04:37:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:53 TIMER: Check step: 0ms
17.02 04:37:58 TIMER: Check step...
17.02 04:37:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:37:58 TIMER: Check step: 0ms
17.02 04:37:59 BLOCKREMOVE: user 94 removed
17.02 04:37:59 BLOCKREMOVE: questdata 94 removed
17.02 04:37:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:37:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:37:59 TIME: core/server.query : 0.77 ms
17.02 04:37:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:37:59 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:37:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:37:59 STATS: cache [user], get [178 calls, 66 cache hits, 112 cache misses, 0 same version, 0 not found]
17.02 04:37:59 STATS: cache [user], segments [683 calls, 438 hits, 224 misses]
17.02 04:37:59 STATS: cache [user], database [564917 calls, 112 reads, 169 writes]
17.02 04:37:59 STATS: cache [user], lock [153 calls, 153 attempts, 22 failures]
17.02 04:37:59 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:37:59 TIME: core/cache.get : 0.59 ms
17.02 04:37:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:37:59 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:37:59 TIME: core/cache.get : 0.37 ms
17.02 04:37:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:37:59 TIME: core/user.loginPost : 0.06 ms
17.02 04:37:59 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:37:59 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:37:59 TIME: core/server.query : 0.49 ms
17.02 04:37:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:37:59 STATS: cache [battle], get [655 calls, 523 cache hits, 131 cache misses, 0 same version, 78 not found]
17.02 04:37:59 STATS: cache [battle], segments [1030 calls, 898 hits, 131 misses]
17.02 04:37:59 STATS: cache [battle], database [564917 calls, 131 reads, 290 writes]
17.02 04:37:59 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:37:59 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:37:59 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:37:59 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:37:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:37:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:37:59 TIME: core/cache.update : 0.08 ms
17.02 04:37:59 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:37:59 TIME: core/cache.update : 0.07 ms
17.02 04:37:59 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:37:59 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:37:59 TIME: core/user.logoutPost : 0.05 ms
17.02 04:38:03 TIMER: Check step...
17.02 04:38:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:03 TIMER: Check step: 0ms
17.02 04:38:05 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:38:05 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:38:08 TIMER: Check step...
17.02 04:38:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:08 TIMER: Check step: 0ms
17.02 04:38:12 TIMER: Check tournaments...
17.02 04:38:12 DB: SELECT * FROM tournament
17.02 04:38:12 TIMER: Check tournaments: 0ms
17.02 04:38:13 TIMER: Check step...
17.02 04:38:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:13 TIMER: Check step: 0ms
17.02 04:38:15 BLOCKREMOVE: user 94 removed
17.02 04:38:15 BLOCKREMOVE: questdata 94 removed
17.02 04:38:18 TIMER: Check step...
17.02 04:38:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:18 TIMER: Check step: 0ms
17.02 04:38:23 TIMER: Check step...
17.02 04:38:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:23 TIMER: Check step: 0ms
17.02 04:38:28 TIMER: Check step...
17.02 04:38:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:28 TIMER: Check step: 1ms
17.02 04:38:31 TIMER: Check round...
17.02 04:38:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:38' OR rounddate = '2017-17-02 07:38' AND status <> 'finished'
17.02 04:38:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.31169648' AND avaliable = false AND finished <> true
17.02 04:38:31 TIMER: Check round: 1ms
17.02 04:38:32 TIMER: Clans cache...
17.02 04:38:32 TIMER: Clans cache: 0ms
17.02 04:38:32 TIMER: Check tournaments...
17.02 04:38:32 DB: SELECT * FROM tournament
17.02 04:38:32 TIMER: Check tournaments: 0ms
17.02 04:38:33 TIMER: Check step...
17.02 04:38:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:33 TIMER: Check step: 0ms
17.02 04:38:38 TIMER: Check step...
17.02 04:38:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:38 TIMER: Check step: 0ms
17.02 04:38:43 TIMER: Check step...
17.02 04:38:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:43 TIMER: Check step: 0ms
17.02 04:38:48 TIMER: Check step...
17.02 04:38:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:48 TIMER: Check step: 0ms
17.02 04:38:52 TIMER: Check tournaments...
17.02 04:38:52 DB: SELECT * FROM tournament
17.02 04:38:52 TIMER: Check tournaments: 0ms
17.02 04:38:53 TIMER: Check step...
17.02 04:38:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:53 TIMER: Check step: 0ms
17.02 04:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:38:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:38:53 TIME: core/server.query : 0.78 ms
17.02 04:38:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:38:53 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:38:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:38:53 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:38:53 STATS: cache manager [1], get [234 calls, total 0.13 sec spent, avg 0.56 ms]
17.02 04:38:53 STATS: cache manager [1], update [346 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:38:53 TIME: core/cache.get : 0.77 ms
17.02 04:38:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:38:53 STATS: cache [questdata], get [102 calls, 8 cache hits, 94 cache misses, 0 same version, 1 not found]
17.02 04:38:53 STATS: cache [questdata], segments [430 calls, 220 hits, 209 misses]
17.02 04:38:53 STATS: cache [questdata], database [564971 calls, 94 reads, 99 writes]
17.02 04:38:53 STATS: cache [questdata], lock [103 calls, 103 attempts, 0 failures]
17.02 04:38:53 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:38:53 TIME: core/cache.get : 0.44 ms
17.02 04:38:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:38:53 TIME: core/user.loginPost : 0.04 ms
17.02 04:38:53 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:38:53 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:38:53 TIME: core/server.query : 0.41 ms
17.02 04:38:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:38:53 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:38:53 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:38:53 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:38:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:38:53 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:38:53 TIME: core/cache.update : 0.07 ms
17.02 04:38:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:38:53 TIME: core/cache.update : 0.06 ms
17.02 04:38:53 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:38:53 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:38:53 TIME: core/user.logoutPost : 0.04 ms
17.02 04:38:58 TIMER: Check step...
17.02 04:38:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:38:58 TIMER: Check step: 0ms
17.02 04:38:59 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:38:59 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:39:03 TIMER: Check step...
17.02 04:39:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:03 TIMER: Check step: 0ms
17.02 04:39:08 TIMER: Check step...
17.02 04:39:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:08 TIMER: Check step: 0ms
17.02 04:39:08 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:39:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:39:08 TIME: core/server.query : 1.04 ms
17.02 04:39:08 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:39:08 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:39:08 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:39:08 STATS: cache [user], get [180 calls, 66 cache hits, 114 cache misses, 0 same version, 0 not found]
17.02 04:39:08 STATS: cache [user], segments [691 calls, 442 hits, 228 misses]
17.02 04:39:08 STATS: cache [user], database [564986 calls, 114 reads, 171 writes]
17.02 04:39:08 STATS: cache [user], lock [155 calls, 155 attempts, 22 failures]
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 1, id => 94 } }
17.02 04:39:08 TIME: core/cache.get : 0.31 ms
17.02 04:39:08 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 94 } }
17.02 04:39:08 TIME: core/cache.get : 0.11 ms
17.02 04:39:08 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:39:08 TIME: core/user.loginPost : 0.07 ms
17.02 04:39:08 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:39:08 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:39:08 TIME: core/server.query : 1.79 ms
17.02 04:39:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:39:08 STATS: cache [battle], get [657 calls, 523 cache hits, 133 cache misses, 0 same version, 80 not found]
17.02 04:39:08 STATS: cache [battle], segments [1032 calls, 898 hits, 133 misses]
17.02 04:39:08 STATS: cache [battle], database [564986 calls, 133 reads, 290 writes]
17.02 04:39:08 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:39:08 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:39:08 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:39:08 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:39:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:39:08 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:39:08 TIME: core/cache.update : 0.5 ms
17.02 04:39:08 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:39:08 TIME: core/cache.update : 0.7 ms
17.02 04:39:08 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:39:08 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:39:08 TIME: core/user.logoutPost : 0.11 ms
17.02 04:39:09 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:39:09 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:39:12 TIMER: Check tournaments...
17.02 04:39:12 DB: SELECT * FROM tournament
17.02 04:39:12 TIMER: Check tournaments: 0ms
17.02 04:39:13 TIMER: Check step...
17.02 04:39:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:13 TIMER: Check step: 0ms
17.02 04:39:18 TIMER: Check step...
17.02 04:39:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:18 TIMER: Check step: 0ms
17.02 04:39:19 BLOCKREMOVE: user 94 removed
17.02 04:39:19 BLOCKREMOVE: questdata 94 removed
17.02 04:39:23 TIMER: Check step...
17.02 04:39:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:23 TIMER: Check step: 0ms
17.02 04:39:28 TIMER: Check step...
17.02 04:39:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:28 TIMER: Check step: 0ms
17.02 04:39:31 TIMER: Check round...
17.02 04:39:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:39' OR rounddate = '2017-17-02 07:39' AND status <> 'finished'
17.02 04:39:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.37172186' AND avaliable = false AND finished <> true
17.02 04:39:31 TIMER: Check round: 1ms
17.02 04:39:32 TIMER: Clans cache...
17.02 04:39:32 TIMER: Clans cache: 0ms
17.02 04:39:32 TIMER: Check tournaments...
17.02 04:39:32 DB: SELECT * FROM tournament
17.02 04:39:32 TIMER: Check tournaments: 0ms
17.02 04:39:33 TIMER: Check step...
17.02 04:39:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:33 TIMER: Check step: 0ms
17.02 04:39:38 TIMER: Check step...
17.02 04:39:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:38 TIMER: Check step: 0ms
17.02 04:39:43 TIMER: Check step...
17.02 04:39:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:43 TIMER: Check step: 0ms
17.02 04:39:48 TIMER: Check step...
17.02 04:39:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:48 TIMER: Check step: 0ms
17.02 04:39:52 TIMER: Check tournaments...
17.02 04:39:52 DB: SELECT * FROM tournament
17.02 04:39:52 TIMER: Check tournaments: 0ms
17.02 04:39:53 TIMER: Check step...
17.02 04:39:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:53 TIMER: Check step: 0ms
17.02 04:39:58 TIMER: Check step...
17.02 04:39:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:39:58 TIMER: Check step: 0ms
17.02 04:39:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:39:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:39:59 TIME: core/server.query : 0.67 ms
17.02 04:39:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:39:59 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:39:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:39:59 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:39:59 STATS: cache manager [1], get [238 calls, total 0.13 sec spent, avg 0.55 ms]
17.02 04:39:59 STATS: cache manager [1], update [350 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:39:59 TIME: core/cache.get : 0.88 ms
17.02 04:39:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:39:59 STATS: cache [questdata], get [104 calls, 9 cache hits, 95 cache misses, 0 same version, 1 not found]
17.02 04:39:59 STATS: cache [questdata], segments [438 calls, 226 hits, 211 misses]
17.02 04:39:59 STATS: cache [questdata], database [565037 calls, 95 reads, 101 writes]
17.02 04:39:59 STATS: cache [questdata], lock [105 calls, 105 attempts, 0 failures]
17.02 04:39:59 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:39:59 TIME: core/cache.get : 0.73 ms
17.02 04:39:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:39:59 TIME: core/user.loginPost : 0.07 ms
17.02 04:39:59 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:39:59 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:39:59 TIME: core/server.query : 0.62 ms
17.02 04:39:59 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:39:59 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:39:59 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:39:59 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:39:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:39:59 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:39:59 TIME: core/cache.update : 0.15 ms
17.02 04:39:59 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:39:59 TIME: core/cache.update : 0.08 ms
17.02 04:39:59 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:39:59 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:39:59 TIME: core/user.logoutPost : 0.05 ms
17.02 04:40:03 TIMER: Check step...
17.02 04:40:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:03 TIMER: Check step: 0ms
17.02 04:40:05 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:40:05 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:40:08 TIMER: Check step...
17.02 04:40:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:08 TIMER: Check step: 0ms
17.02 04:40:12 TIMER: Check tournaments...
17.02 04:40:12 DB: SELECT * FROM tournament
17.02 04:40:12 TIMER: Check tournaments: 0ms
17.02 04:40:13 TIMER: Check step...
17.02 04:40:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:13 TIMER: Check step: 1ms
17.02 04:40:15 BLOCKREMOVE: user 94 removed
17.02 04:40:15 BLOCKREMOVE: questdata 94 removed
17.02 04:40:17 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:40:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:40:17 TIME: core/server.query : 0.69 ms
17.02 04:40:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:40:17 TIME: core/user.isOnlineID : 0.04 ms
17.02 04:40:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:40:17 STATS: cache [user], get [182 calls, 67 cache hits, 115 cache misses, 0 same version, 0 not found]
17.02 04:40:17 STATS: cache [user], segments [699 calls, 448 hits, 230 misses]
17.02 04:40:17 STATS: cache [user], database [565054 calls, 115 reads, 173 writes]
17.02 04:40:17 STATS: cache [user], lock [157 calls, 157 attempts, 22 failures]
17.02 04:40:17 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:40:17 TIME: core/cache.get : 0.84 ms
17.02 04:40:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:40:17 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:40:17 TIME: core/cache.get : 0.38 ms
17.02 04:40:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:40:17 TIME: core/user.loginPost : 0.04 ms
17.02 04:40:17 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:40:17 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:40:17 TIME: core/server.query : 0.54 ms
17.02 04:40:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:40:17 STATS: cache [battle], get [659 calls, 523 cache hits, 135 cache misses, 0 same version, 82 not found]
17.02 04:40:17 STATS: cache [battle], segments [1034 calls, 898 hits, 135 misses]
17.02 04:40:17 STATS: cache [battle], database [565054 calls, 135 reads, 290 writes]
17.02 04:40:17 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:40:17 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:40:17 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:40:17 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:40:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:40:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:40:17 TIME: core/cache.update : 0.18 ms
17.02 04:40:17 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:40:17 TIME: core/cache.update : 0.16 ms
17.02 04:40:17 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:40:17 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:40:17 TIME: core/user.logoutPost : 0.1 ms
17.02 04:40:18 TIMER: Check step...
17.02 04:40:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:18 TIMER: Check step: 0ms
17.02 04:40:22 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:40:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:40:23 TIMER: Check step...
17.02 04:40:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:23 TIMER: Check step: 0ms
17.02 04:40:28 TIMER: Check step...
17.02 04:40:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:28 TIMER: Check step: 0ms
17.02 04:40:31 TIMER: Check round...
17.02 04:40:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:40' OR rounddate = '2017-17-02 07:40' AND status <> 'finished'
17.02 04:40:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.43174637' AND avaliable = false AND finished <> true
17.02 04:40:31 TIMER: Check round: 1ms
17.02 04:40:32 BLOCKREMOVE: user 94 removed
17.02 04:40:32 BLOCKREMOVE: questdata 94 removed
17.02 04:40:32 TIMER: Clans cache...
17.02 04:40:32 TIMER: Clans cache: 0ms
17.02 04:40:32 TIMER: Check tournaments...
17.02 04:40:32 DB: SELECT * FROM tournament
17.02 04:40:32 TIMER: Check tournaments: 0ms
17.02 04:40:33 TIMER: Check step...
17.02 04:40:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:33 TIMER: Check step: 0ms
17.02 04:40:38 TIMER: Check step...
17.02 04:40:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:38 TIMER: Check step: 0ms
17.02 04:40:43 TIMER: Check step...
17.02 04:40:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:43 TIMER: Check step: 0ms
17.02 04:40:48 TIMER: Check step...
17.02 04:40:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:48 TIMER: Check step: 0ms
17.02 04:40:52 TIMER: Check tournaments...
17.02 04:40:52 DB: SELECT * FROM tournament
17.02 04:40:52 TIMER: Check tournaments: 0ms
17.02 04:40:53 TIMER: Check step...
17.02 04:40:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:53 TIMER: Check step: 0ms
17.02 04:40:58 TIMER: Check step...
17.02 04:40:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:40:58 TIMER: Check step: 0ms
17.02 04:41:03 TIMER: Check step...
17.02 04:41:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:03 TIMER: Check step: 0ms
17.02 04:41:08 TIMER: Check step...
17.02 04:41:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:08 TIMER: Check step: 0ms
17.02 04:41:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:41:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:41:10 TIME: core/server.query : 0.82 ms
17.02 04:41:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:41:10 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:41:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:41:10 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:41:10 STATS: cache manager [1], get [242 calls, total 0.13 sec spent, avg 0.56 ms]
17.02 04:41:10 STATS: cache manager [1], update [354 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:41:10 TIME: core/cache.get : 1 ms
17.02 04:41:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:41:10 STATS: cache [questdata], get [106 calls, 9 cache hits, 97 cache misses, 0 same version, 1 not found]
17.02 04:41:10 STATS: cache [questdata], segments [446 calls, 230 hits, 215 misses]
17.02 04:41:10 STATS: cache [questdata], database [565107 calls, 97 reads, 103 writes]
17.02 04:41:10 STATS: cache [questdata], lock [107 calls, 107 attempts, 0 failures]
17.02 04:41:10 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:41:10 TIME: core/cache.get : 0.61 ms
17.02 04:41:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:41:10 TIME: core/user.loginPost : 0.06 ms
17.02 04:41:10 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:41:10 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:41:10 TIME: core/server.query : 0.51 ms
17.02 04:41:10 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:41:10 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:41:10 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:41:10 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:41:10 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:41:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:41:10 TIME: core/cache.update : 0.09 ms
17.02 04:41:10 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:41:10 TIME: core/cache.update : 0.07 ms
17.02 04:41:10 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:41:10 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:41:10 TIME: core/user.logoutPost : 0.1 ms
17.02 04:41:12 TIMER: Check tournaments...
17.02 04:41:12 DB: SELECT * FROM tournament
17.02 04:41:12 TIMER: Check tournaments: 0ms
17.02 04:41:13 TIMER: Check step...
17.02 04:41:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:13 TIMER: Check step: 0ms
17.02 04:41:15 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:41:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:41:18 TIMER: Check step...
17.02 04:41:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:18 TIMER: Check step: 1ms
17.02 04:41:23 TIMER: Check step...
17.02 04:41:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:23 TIMER: Check step: 1ms
17.02 04:41:25 BLOCKREMOVE: user 94 removed
17.02 04:41:25 BLOCKREMOVE: questdata 94 removed
17.02 04:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:41:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:41:26 TIME: core/server.query : 0.79 ms
17.02 04:41:26 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:41:26 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:41:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:41:26 STATS: cache [user], get [184 calls, 67 cache hits, 117 cache misses, 0 same version, 0 not found]
17.02 04:41:26 STATS: cache [user], segments [707 calls, 452 hits, 234 misses]
17.02 04:41:26 STATS: cache [user], database [565123 calls, 117 reads, 175 writes]
17.02 04:41:26 STATS: cache [user], lock [159 calls, 159 attempts, 22 failures]
17.02 04:41:26 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:41:26 TIME: core/cache.get : 1 ms
17.02 04:41:26 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:41:26 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:41:26 TIME: core/cache.get : 0.49 ms
17.02 04:41:26 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:41:26 TIME: core/user.loginPost : 0.04 ms
17.02 04:41:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:41:26 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:41:26 TIME: core/server.query : 5.46 ms
17.02 04:41:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:41:26 STATS: cache [battle], get [661 calls, 523 cache hits, 137 cache misses, 0 same version, 84 not found]
17.02 04:41:26 STATS: cache [battle], segments [1036 calls, 898 hits, 137 misses]
17.02 04:41:26 STATS: cache [battle], database [565123 calls, 137 reads, 290 writes]
17.02 04:41:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:41:26 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:41:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:41:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:41:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:41:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:41:26 TIME: core/cache.update : 0.2 ms
17.02 04:41:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:41:26 TIME: core/cache.update : 0.16 ms
17.02 04:41:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:41:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:41:26 TIME: core/user.logoutPost : 0.09 ms
17.02 04:41:28 TIMER: Check step...
17.02 04:41:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:28 TIMER: Check step: 0ms
17.02 04:41:31 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:41:31 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:41:31 TIMER: Check round...
17.02 04:41:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:41' OR rounddate = '2017-17-02 07:41' AND status <> 'finished'
17.02 04:41:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.49177129' AND avaliable = false AND finished <> true
17.02 04:41:31 TIMER: Check round: 1ms
17.02 04:41:32 TIMER: Clans cache...
17.02 04:41:32 TIMER: Clans cache: 0ms
17.02 04:41:32 TIMER: Check tournaments...
17.02 04:41:32 DB: SELECT * FROM tournament
17.02 04:41:32 TIMER: Check tournaments: 0ms
17.02 04:41:33 TIMER: Check step...
17.02 04:41:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:33 TIMER: Check step: 0ms
17.02 04:41:38 TIMER: Check step...
17.02 04:41:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:38 TIMER: Check step: 1ms
17.02 04:41:41 BLOCKREMOVE: user 94 removed
17.02 04:41:41 BLOCKREMOVE: questdata 94 removed
17.02 04:41:43 TIMER: Check step...
17.02 04:41:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:43 TIMER: Check step: 0ms
17.02 04:41:48 TIMER: Check step...
17.02 04:41:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:48 TIMER: Check step: 0ms
17.02 04:41:52 TIMER: Check tournaments...
17.02 04:41:52 DB: SELECT * FROM tournament
17.02 04:41:52 TIMER: Check tournaments: 0ms
17.02 04:41:53 TIMER: Check step...
17.02 04:41:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:53 TIMER: Check step: 0ms
17.02 04:41:58 TIMER: Check step...
17.02 04:41:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:41:58 TIMER: Check step: 0ms
17.02 04:42:03 TIMER: Check step...
17.02 04:42:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:03 TIMER: Check step: 0ms
17.02 04:42:08 TIMER: Check step...
17.02 04:42:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:08 TIMER: Check step: 0ms
17.02 04:42:12 TIMER: Check tournaments...
17.02 04:42:12 DB: SELECT * FROM tournament
17.02 04:42:12 TIMER: Check tournaments: 0ms
17.02 04:42:13 TIMER: Check step...
17.02 04:42:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:13 TIMER: Check step: 0ms
17.02 04:42:18 TIMER: Check step...
17.02 04:42:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:18 TIMER: Check step: 0ms
17.02 04:42:20 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:42:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:42:20 TIME: core/server.query : 0.51 ms
17.02 04:42:20 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:42:20 TIME: core/user.isOnlineID : 0.06 ms
17.02 04:42:20 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:42:20 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:42:20 STATS: cache manager [1], get [246 calls, total 0.14 sec spent, avg 0.56 ms]
17.02 04:42:20 STATS: cache manager [1], update [358 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:42:20 TIME: core/cache.get : 0.99 ms
17.02 04:42:20 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:42:20 STATS: cache [questdata], get [108 calls, 9 cache hits, 99 cache misses, 0 same version, 1 not found]
17.02 04:42:20 STATS: cache [questdata], segments [454 calls, 234 hits, 219 misses]
17.02 04:42:20 STATS: cache [questdata], database [565177 calls, 99 reads, 105 writes]
17.02 04:42:20 STATS: cache [questdata], lock [109 calls, 109 attempts, 0 failures]
17.02 04:42:20 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:42:20 TIME: core/cache.get : 0.62 ms
17.02 04:42:20 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:42:20 TIME: core/user.loginPost : 0.12 ms
17.02 04:42:20 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:42:20 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:42:20 TIME: core/server.query : 0.6 ms
17.02 04:42:20 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:42:20 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:42:20 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:42:20 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:42:20 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:42:20 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:42:20 TIME: core/cache.update : 0.13 ms
17.02 04:42:20 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:42:20 TIME: core/cache.update : 0.08 ms
17.02 04:42:20 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:42:20 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:42:20 TIME: core/user.logoutPost : 0.06 ms
17.02 04:42:23 TIMER: Check step...
17.02 04:42:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:23 TIMER: Check step: 0ms
17.02 04:42:25 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:42:25 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:42:28 TIMER: Check step...
17.02 04:42:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:28 TIMER: Check step: 0ms
17.02 04:42:31 TIMER: Check round...
17.02 04:42:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:42' OR rounddate = '2017-17-02 07:42' AND status <> 'finished'
17.02 04:42:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.55179142' AND avaliable = false AND finished <> true
17.02 04:42:31 TIMER: Check round: 1ms
17.02 04:42:32 TIMER: Clans cache...
17.02 04:42:32 TIMER: Clans cache: 0ms
17.02 04:42:32 TIMER: Check tournaments...
17.02 04:42:32 DB: SELECT * FROM tournament
17.02 04:42:32 TIMER: Check tournaments: 0ms
17.02 04:42:33 TIMER: Check step...
17.02 04:42:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:33 TIMER: Check step: 1ms
17.02 04:42:35 BLOCKREMOVE: user 94 removed
17.02 04:42:35 BLOCKREMOVE: questdata 94 removed
17.02 04:42:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:42:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:42:37 TIME: core/server.query : 1.12 ms
17.02 04:42:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:42:37 TIME: core/user.isOnlineID : 0.09 ms
17.02 04:42:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:42:37 STATS: cache [user], get [186 calls, 67 cache hits, 119 cache misses, 0 same version, 0 not found]
17.02 04:42:37 STATS: cache [user], segments [715 calls, 456 hits, 238 misses]
17.02 04:42:37 STATS: cache [user], database [565194 calls, 119 reads, 177 writes]
17.02 04:42:37 STATS: cache [user], lock [161 calls, 161 attempts, 22 failures]
17.02 04:42:37 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:42:37 TIME: core/cache.get : 1.5 ms
17.02 04:42:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:42:37 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:42:37 TIME: core/cache.get : 0.75 ms
17.02 04:42:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:42:37 TIME: core/user.loginPost : 1.38 ms
17.02 04:42:37 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:42:37 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:42:37 TIME: core/server.query : 0.4 ms
17.02 04:42:37 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:42:37 STATS: cache [battle], get [663 calls, 523 cache hits, 139 cache misses, 0 same version, 86 not found]
17.02 04:42:37 STATS: cache [battle], segments [1038 calls, 898 hits, 139 misses]
17.02 04:42:37 STATS: cache [battle], database [565194 calls, 139 reads, 290 writes]
17.02 04:42:37 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:42:37 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:42:37 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:42:37 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:42:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:42:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:42:37 TIME: core/cache.update : 0.81 ms
17.02 04:42:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:42:37 TIME: core/cache.update : 0.09 ms
17.02 04:42:37 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:42:37 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:42:37 TIME: core/user.logoutPost : 0.04 ms
17.02 04:42:38 TIMER: Check step...
17.02 04:42:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:38 TIMER: Check step: 0ms
17.02 04:42:42 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:42:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:42:43 TIMER: Check step...
17.02 04:42:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:43 TIMER: Check step: 0ms
17.02 04:42:48 TIMER: Check step...
17.02 04:42:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:48 TIMER: Check step: 0ms
17.02 04:42:52 BLOCKREMOVE: user 94 removed
17.02 04:42:52 BLOCKREMOVE: questdata 94 removed
17.02 04:42:52 TIMER: Check tournaments...
17.02 04:42:52 DB: SELECT * FROM tournament
17.02 04:42:52 TIMER: Check tournaments: 0ms
17.02 04:42:53 TIMER: Check step...
17.02 04:42:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:53 TIMER: Check step: 0ms
17.02 04:42:58 TIMER: Check step...
17.02 04:42:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:42:58 TIMER: Check step: 0ms
17.02 04:43:03 TIMER: Check step...
17.02 04:43:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:03 TIMER: Check step: 0ms
17.02 04:43:08 TIMER: Check step...
17.02 04:43:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:08 TIMER: Check step: 0ms
17.02 04:43:12 TIMER: Check tournaments...
17.02 04:43:12 DB: SELECT * FROM tournament
17.02 04:43:12 TIMER: Check tournaments: 0ms
17.02 04:43:13 TIMER: Check step...
17.02 04:43:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:13 TIMER: Check step: 0ms
17.02 04:43:18 TIMER: Check step...
17.02 04:43:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:18 TIMER: Check step: 0ms
17.02 04:43:23 TIMER: Check step...
17.02 04:43:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:23 TIMER: Check step: 0ms
17.02 04:43:28 TIMER: Check step...
17.02 04:43:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:28 TIMER: Check step: 0ms
17.02 04:43:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:43:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:43:31 TIME: core/server.query : 0.81 ms
17.02 04:43:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:43:31 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:43:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:43:31 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:43:31 STATS: cache manager [1], get [250 calls, total 0.14 sec spent, avg 0.56 ms]
17.02 04:43:31 STATS: cache manager [1], update [362 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:43:31 TIME: core/cache.get : 1.05 ms
17.02 04:43:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:43:31 STATS: cache [questdata], get [110 calls, 9 cache hits, 101 cache misses, 0 same version, 1 not found]
17.02 04:43:31 STATS: cache [questdata], segments [462 calls, 238 hits, 223 misses]
17.02 04:43:31 STATS: cache [questdata], database [565248 calls, 101 reads, 107 writes]
17.02 04:43:31 STATS: cache [questdata], lock [111 calls, 111 attempts, 0 failures]
17.02 04:43:31 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:43:31 TIME: core/cache.get : 0.61 ms
17.02 04:43:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:43:31 TIME: core/user.loginPost : 0.06 ms
17.02 04:43:31 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:43:31 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:43:31 TIME: core/server.query : 0.51 ms
17.02 04:43:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:43:31 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:43:31 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:43:31 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:43:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:43:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:43:31 TIME: core/cache.update : 0.08 ms
17.02 04:43:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:43:31 TIME: core/cache.update : 0.07 ms
17.02 04:43:31 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:43:31 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:43:31 TIME: core/user.logoutPost : 0.05 ms
17.02 04:43:31 TIMER: Check round...
17.02 04:43:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:43' OR rounddate = '2017-17-02 07:43' AND status <> 'finished'
17.02 04:43:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.61181579' AND avaliable = false AND finished <> true
17.02 04:43:31 TIMER: Check round: 1ms
17.02 04:43:32 TIMER: Clans cache...
17.02 04:43:32 TIMER: Clans cache: 0ms
17.02 04:43:32 TIMER: Check tournaments...
17.02 04:43:32 DB: SELECT * FROM tournament
17.02 04:43:32 TIMER: Check tournaments: 0ms
17.02 04:43:33 TIMER: Check step...
17.02 04:43:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:33 TIMER: Check step: 0ms
17.02 04:43:36 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:43:36 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:43:38 TIMER: Check step...
17.02 04:43:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:38 TIMER: Check step: 0ms
17.02 04:43:43 TIMER: Check step...
17.02 04:43:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:43 TIMER: Check step: 0ms
17.02 04:43:46 BLOCKREMOVE: user 94 removed
17.02 04:43:46 BLOCKREMOVE: questdata 94 removed
17.02 04:43:48 TIMER: Check step...
17.02 04:43:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:48 TIMER: Check step: 0ms
17.02 04:43:51 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:43:51 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:43:51 TIME: core/server.query : 0.8 ms
17.02 04:43:51 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:43:51 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:43:51 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:43:51 STATS: cache [user], get [188 calls, 67 cache hits, 121 cache misses, 0 same version, 0 not found]
17.02 04:43:51 STATS: cache [user], segments [723 calls, 460 hits, 242 misses]
17.02 04:43:51 STATS: cache [user], database [565269 calls, 121 reads, 179 writes]
17.02 04:43:51 STATS: cache [user], lock [163 calls, 163 attempts, 22 failures]
17.02 04:43:51 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:43:51 TIME: core/cache.get : 1.04 ms
17.02 04:43:51 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:43:51 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:43:51 TIME: core/cache.get : 0.51 ms
17.02 04:43:51 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:43:51 TIME: core/user.loginPost : 0.06 ms
17.02 04:43:51 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:43:51 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:43:51 TIME: core/server.query : 0.54 ms
17.02 04:43:51 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:43:51 STATS: cache [battle], get [665 calls, 523 cache hits, 141 cache misses, 0 same version, 88 not found]
17.02 04:43:51 STATS: cache [battle], segments [1040 calls, 898 hits, 141 misses]
17.02 04:43:51 STATS: cache [battle], database [565269 calls, 141 reads, 290 writes]
17.02 04:43:51 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:43:51 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:43:51 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:43:51 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:43:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:43:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:43:51 TIME: core/cache.update : 0.11 ms
17.02 04:43:51 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:43:51 TIME: core/cache.update : 0.07 ms
17.02 04:43:51 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:43:51 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:43:51 TIME: core/user.logoutPost : 0.05 ms
17.02 04:43:52 TIMER: Check tournaments...
17.02 04:43:52 DB: SELECT * FROM tournament
17.02 04:43:52 TIMER: Check tournaments: 0ms
17.02 04:43:53 TIMER: Check step...
17.02 04:43:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:53 TIMER: Check step: 1ms
17.02 04:43:57 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:43:57 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:43:58 TIMER: Check step...
17.02 04:43:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:43:58 TIMER: Check step: 1ms
17.02 04:44:03 TIMER: Check step...
17.02 04:44:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:03 TIMER: Check step: 0ms
17.02 04:44:07 BLOCKREMOVE: user 94 removed
17.02 04:44:07 BLOCKREMOVE: questdata 94 removed
17.02 04:44:08 TIMER: Check step...
17.02 04:44:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:08 TIMER: Check step: 0ms
17.02 04:44:12 TIMER: Check tournaments...
17.02 04:44:12 DB: SELECT * FROM tournament
17.02 04:44:12 TIMER: Check tournaments: 0ms
17.02 04:44:13 TIMER: Check step...
17.02 04:44:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:13 TIMER: Check step: 0ms
17.02 04:44:18 TIMER: Check step...
17.02 04:44:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:18 TIMER: Check step: 0ms
17.02 04:44:23 TIMER: Check step...
17.02 04:44:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:23 TIMER: Check step: 0ms
17.02 04:44:28 TIMER: Check step...
17.02 04:44:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:28 TIMER: Check step: 0ms
17.02 04:44:31 TIMER: Check round...
17.02 04:44:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:44' OR rounddate = '2017-17-02 07:44' AND status <> 'finished'
17.02 04:44:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.67184091' AND avaliable = false AND finished <> true
17.02 04:44:31 TIMER: Check round: 1ms
17.02 04:44:32 TIMER: Clans cache...
17.02 04:44:32 TIMER: Clans cache: 0ms
17.02 04:44:32 TIMER: Check tournaments...
17.02 04:44:32 DB: SELECT * FROM tournament
17.02 04:44:32 TIMER: Check tournaments: 0ms
17.02 04:44:33 TIMER: Check step...
17.02 04:44:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:33 TIMER: Check step: 0ms
17.02 04:44:38 TIMER: Check step...
17.02 04:44:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:38 TIMER: Check step: 0ms
17.02 04:44:43 TIMER: Check step...
17.02 04:44:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:43 TIMER: Check step: 0ms
17.02 04:44:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:44:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:44:47 TIME: core/server.query : 0.66 ms
17.02 04:44:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:44:47 TIME: core/user.isOnlineID : 0.03 ms
17.02 04:44:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:44:47 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:44:47 STATS: cache manager [1], get [254 calls, total 0.14 sec spent, avg 0.56 ms]
17.02 04:44:47 STATS: cache manager [1], update [366 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:44:47 TIME: core/cache.get : 0.99 ms
17.02 04:44:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:44:47 STATS: cache [questdata], get [112 calls, 9 cache hits, 103 cache misses, 0 same version, 1 not found]
17.02 04:44:47 STATS: cache [questdata], segments [470 calls, 242 hits, 227 misses]
17.02 04:44:47 STATS: cache [questdata], database [565324 calls, 103 reads, 109 writes]
17.02 04:44:47 STATS: cache [questdata], lock [113 calls, 113 attempts, 0 failures]
17.02 04:44:47 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:44:47 TIME: core/cache.get : 0.46 ms
17.02 04:44:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:44:47 TIME: core/user.loginPost : 0.04 ms
17.02 04:44:47 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:44:47 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:44:47 TIME: core/server.query : 0.46 ms
17.02 04:44:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:44:47 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:44:47 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:44:47 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:44:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:44:47 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:44:47 TIME: core/cache.update : 0.1 ms
17.02 04:44:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:44:47 TIME: core/cache.update : 0.07 ms
17.02 04:44:47 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:44:47 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:44:47 TIME: core/user.logoutPost : 0.06 ms
17.02 04:44:48 TIMER: Check step...
17.02 04:44:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:48 TIMER: Check step: 0ms
17.02 04:44:52 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:44:52 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:44:52 TIMER: Check tournaments...
17.02 04:44:52 DB: SELECT * FROM tournament
17.02 04:44:52 TIMER: Check tournaments: 0ms
17.02 04:44:53 TIMER: Check step...
17.02 04:44:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:53 TIMER: Check step: 0ms
17.02 04:44:58 TIMER: Check step...
17.02 04:44:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:44:58 TIMER: Check step: 0ms
17.02 04:45:02 BLOCKREMOVE: user 94 removed
17.02 04:45:02 BLOCKREMOVE: questdata 94 removed
17.02 04:45:03 TIMER: Check step...
17.02 04:45:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:03 TIMER: Check step: 0ms
17.02 04:45:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:45:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:45:06 TIME: core/server.query : 0.67 ms
17.02 04:45:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:45:06 TIME: core/user.isOnlineID : 0.04 ms
17.02 04:45:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:45:06 STATS: cache [user], get [190 calls, 67 cache hits, 123 cache misses, 0 same version, 0 not found]
17.02 04:45:06 STATS: cache [user], segments [731 calls, 464 hits, 246 misses]
17.02 04:45:06 STATS: cache [user], database [565344 calls, 123 reads, 181 writes]
17.02 04:45:06 STATS: cache [user], lock [165 calls, 165 attempts, 22 failures]
17.02 04:45:06 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:45:06 TIME: core/cache.get : 0.77 ms
17.02 04:45:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:45:06 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:45:06 TIME: core/cache.get : 0.36 ms
17.02 04:45:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:45:06 TIME: core/user.loginPost : 0.04 ms
17.02 04:45:06 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:45:06 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:45:06 TIME: core/server.query : 0.36 ms
17.02 04:45:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:45:06 STATS: cache [battle], get [667 calls, 523 cache hits, 143 cache misses, 0 same version, 90 not found]
17.02 04:45:06 STATS: cache [battle], segments [1042 calls, 898 hits, 143 misses]
17.02 04:45:06 STATS: cache [battle], database [565344 calls, 143 reads, 290 writes]
17.02 04:45:06 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:45:06 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:45:06 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:45:06 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:45:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:45:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:45:06 TIME: core/cache.update : 0.06 ms
17.02 04:45:06 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:45:06 TIME: core/cache.update : 0.05 ms
17.02 04:45:06 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:45:06 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:45:06 TIME: core/user.logoutPost : 0.05 ms
17.02 04:45:08 TIMER: Check step...
17.02 04:45:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:08 TIMER: Check step: 0ms
17.02 04:45:12 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:45:12 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:45:12 TIMER: Check tournaments...
17.02 04:45:12 DB: SELECT * FROM tournament
17.02 04:45:12 TIMER: Check tournaments: 0ms
17.02 04:45:13 TIMER: Check step...
17.02 04:45:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:13 TIMER: Check step: 0ms
17.02 04:45:18 TIMER: Check step...
17.02 04:45:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:18 TIMER: Check step: 0ms
17.02 04:45:22 BLOCKREMOVE: user 94 removed
17.02 04:45:22 BLOCKREMOVE: questdata 94 removed
17.02 04:45:23 TIMER: Check step...
17.02 04:45:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:23 TIMER: Check step: 0ms
17.02 04:45:28 TIMER: Check step...
17.02 04:45:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:28 TIMER: Check step: 0ms
17.02 04:45:31 TIMER: Check round...
17.02 04:45:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:45' OR rounddate = '2017-17-02 07:45' AND status <> 'finished'
17.02 04:45:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.73186249' AND avaliable = false AND finished <> true
17.02 04:45:31 TIMER: Check round: 1ms
17.02 04:45:32 TIMER: Clans cache...
17.02 04:45:32 TIMER: Clans cache: 0ms
17.02 04:45:32 TIMER: Check tournaments...
17.02 04:45:32 DB: SELECT * FROM tournament
17.02 04:45:32 TIMER: Check tournaments: 0ms
17.02 04:45:33 TIMER: Check step...
17.02 04:45:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:33 TIMER: Check step: 1ms
17.02 04:45:38 TIMER: Check step...
17.02 04:45:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:38 TIMER: Check step: 0ms
17.02 04:45:43 TIMER: Check step...
17.02 04:45:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:43 TIMER: Check step: 0ms
17.02 04:45:48 TIMER: Check step...
17.02 04:45:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:48 TIMER: Check step: 0ms
17.02 04:45:52 TIMER: Check tournaments...
17.02 04:45:52 DB: SELECT * FROM tournament
17.02 04:45:52 TIMER: Check tournaments: 0ms
17.02 04:45:53 TIMER: Check step...
17.02 04:45:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:53 TIMER: Check step: 0ms
17.02 04:45:56 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:45:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:45:56 TIME: core/server.query : 0.82 ms
17.02 04:45:56 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:45:56 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:45:56 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:45:56 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:45:56 STATS: cache manager [1], get [258 calls, total 0.15 sec spent, avg 0.56 ms]
17.02 04:45:56 STATS: cache manager [1], update [370 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:45:56 TIME: core/cache.get : 1.4 ms
17.02 04:45:56 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:45:56 STATS: cache [questdata], get [114 calls, 9 cache hits, 105 cache misses, 0 same version, 1 not found]
17.02 04:45:56 STATS: cache [questdata], segments [478 calls, 246 hits, 231 misses]
17.02 04:45:56 STATS: cache [questdata], database [565393 calls, 105 reads, 111 writes]
17.02 04:45:56 STATS: cache [questdata], lock [115 calls, 115 attempts, 0 failures]
17.02 04:45:56 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:45:56 TIME: core/cache.get : 0.61 ms
17.02 04:45:56 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:45:56 TIME: core/user.loginPost : 0.06 ms
17.02 04:45:56 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:45:56 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:45:56 TIME: core/server.query : 0.51 ms
17.02 04:45:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:45:56 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:45:56 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:45:56 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:45:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:45:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:45:56 TIME: core/cache.update : 0.08 ms
17.02 04:45:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:45:56 TIME: core/cache.update : 0.07 ms
17.02 04:45:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:45:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:45:56 TIME: core/user.logoutPost : 0.08 ms
17.02 04:45:58 TIMER: Check step...
17.02 04:45:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:45:58 TIMER: Check step: 0ms
17.02 04:46:01 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:46:01 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:46:03 TIMER: Check step...
17.02 04:46:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:03 TIMER: Check step: 0ms
17.02 04:46:08 TIMER: Check step...
17.02 04:46:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:08 TIMER: Check step: 1ms
17.02 04:46:11 BLOCKREMOVE: user 94 removed
17.02 04:46:11 BLOCKREMOVE: questdata 94 removed
17.02 04:46:12 TIMER: Check tournaments...
17.02 04:46:12 DB: SELECT * FROM tournament
17.02 04:46:12 TIMER: Check tournaments: 0ms
17.02 04:46:13 TIMER: Check step...
17.02 04:46:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:13 TIMER: Check step: 0ms
17.02 04:46:16 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:46:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:46:16 TIME: core/server.query : 0.81 ms
17.02 04:46:16 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:46:16 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:46:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:46:16 STATS: cache [user], get [192 calls, 67 cache hits, 125 cache misses, 0 same version, 0 not found]
17.02 04:46:16 STATS: cache [user], segments [739 calls, 468 hits, 250 misses]
17.02 04:46:16 STATS: cache [user], database [565414 calls, 125 reads, 183 writes]
17.02 04:46:16 STATS: cache [user], lock [167 calls, 167 attempts, 22 failures]
17.02 04:46:16 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:46:16 TIME: core/cache.get : 1.03 ms
17.02 04:46:16 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:46:16 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:46:16 TIME: core/cache.get : 0.5 ms
17.02 04:46:16 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:46:16 TIME: core/user.loginPost : 0.06 ms
17.02 04:46:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:46:16 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:46:16 TIME: core/server.query : 0.46 ms
17.02 04:46:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:46:16 STATS: cache [battle], get [669 calls, 523 cache hits, 145 cache misses, 0 same version, 92 not found]
17.02 04:46:16 STATS: cache [battle], segments [1044 calls, 898 hits, 145 misses]
17.02 04:46:16 STATS: cache [battle], database [565414 calls, 145 reads, 290 writes]
17.02 04:46:16 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:46:16 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:46:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:46:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:46:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:46:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:46:16 TIME: core/cache.update : 0.09 ms
17.02 04:46:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:46:16 TIME: core/cache.update : 0.07 ms
17.02 04:46:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:46:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:46:16 TIME: core/user.logoutPost : 0.06 ms
17.02 04:46:18 TIMER: Check step...
17.02 04:46:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:18 TIMER: Check step: 0ms
17.02 04:46:22 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:46:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:46:23 TIMER: Check step...
17.02 04:46:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:23 TIMER: Check step: 0ms
17.02 04:46:28 TIMER: Check step...
17.02 04:46:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:28 TIMER: Check step: 0ms
17.02 04:46:31 TIMER: Check round...
17.02 04:46:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:46' OR rounddate = '2017-17-02 07:46' AND status <> 'finished'
17.02 04:46:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.79188742' AND avaliable = false AND finished <> true
17.02 04:46:31 TIMER: Check round: 1ms
17.02 04:46:32 BLOCKREMOVE: user 94 removed
17.02 04:46:32 BLOCKREMOVE: questdata 94 removed
17.02 04:46:32 TIMER: Clans cache...
17.02 04:46:32 TIMER: Clans cache: 0ms
17.02 04:46:32 TIMER: Check tournaments...
17.02 04:46:32 DB: SELECT * FROM tournament
17.02 04:46:32 TIMER: Check tournaments: 0ms
17.02 04:46:33 TIMER: Check step...
17.02 04:46:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:33 TIMER: Check step: 0ms
17.02 04:46:38 TIMER: Check step...
17.02 04:46:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:38 TIMER: Check step: 0ms
17.02 04:46:43 TIMER: Check step...
17.02 04:46:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:43 TIMER: Check step: 0ms
17.02 04:46:48 TIMER: Check step...
17.02 04:46:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:48 TIMER: Check step: 0ms
17.02 04:46:52 TIMER: Check tournaments...
17.02 04:46:52 DB: SELECT * FROM tournament
17.02 04:46:52 TIMER: Check tournaments: 0ms
17.02 04:46:53 TIMER: Check step...
17.02 04:46:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:53 TIMER: Check step: 0ms
17.02 04:46:58 TIMER: Check step...
17.02 04:46:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:46:58 TIMER: Check step: 0ms
17.02 04:47:03 TIMER: Check step...
17.02 04:47:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:03 TIMER: Check step: 0ms
17.02 04:47:05 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:47:05 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:47:05 TIME: core/server.query : 0.76 ms
17.02 04:47:05 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:47:05 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:47:05 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:47:05 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:47:05 STATS: cache manager [1], get [262 calls, total 0.15 sec spent, avg 0.56 ms]
17.02 04:47:05 STATS: cache manager [1], update [374 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:47:05 TIME: core/cache.get : 0.98 ms
17.02 04:47:05 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:47:05 STATS: cache [questdata], get [116 calls, 9 cache hits, 107 cache misses, 0 same version, 1 not found]
17.02 04:47:05 STATS: cache [questdata], segments [486 calls, 250 hits, 235 misses]
17.02 04:47:05 STATS: cache [questdata], database [565463 calls, 107 reads, 113 writes]
17.02 04:47:05 STATS: cache [questdata], lock [117 calls, 117 attempts, 0 failures]
17.02 04:47:05 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:47:05 TIME: core/cache.get : 0.62 ms
17.02 04:47:05 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:47:05 TIME: core/user.loginPost : 0.05 ms
17.02 04:47:05 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:47:05 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:47:05 TIME: core/server.query : 0.46 ms
17.02 04:47:05 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:47:05 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:47:05 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:47:05 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:47:05 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:47:05 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:47:05 TIME: core/cache.update : 0.08 ms
17.02 04:47:05 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:47:05 TIME: core/cache.update : 0.07 ms
17.02 04:47:05 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:47:05 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:47:05 TIME: core/user.logoutPost : 0.07 ms
17.02 04:47:08 TIMER: Check step...
17.02 04:47:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:08 TIMER: Check step: 1ms
17.02 04:47:11 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:47:11 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:47:12 TIMER: Check tournaments...
17.02 04:47:12 DB: SELECT * FROM tournament
17.02 04:47:12 TIMER: Check tournaments: 0ms
17.02 04:47:13 TIMER: Check step...
17.02 04:47:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:13 TIMER: Check step: 0ms
17.02 04:47:18 TIMER: Check step...
17.02 04:47:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:18 TIMER: Check step: 0ms
17.02 04:47:21 BLOCKREMOVE: user 94 removed
17.02 04:47:21 BLOCKREMOVE: questdata 94 removed
17.02 04:47:23 TIMER: Check step...
17.02 04:47:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:23 TIMER: Check step: 0ms
17.02 04:47:26 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:47:26 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:47:26 TIME: core/server.query : 0.85 ms
17.02 04:47:26 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:47:26 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:47:26 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:47:26 STATS: cache [user], get [194 calls, 67 cache hits, 127 cache misses, 0 same version, 0 not found]
17.02 04:47:26 STATS: cache [user], segments [747 calls, 472 hits, 254 misses]
17.02 04:47:26 STATS: cache [user], database [565483 calls, 127 reads, 185 writes]
17.02 04:47:26 STATS: cache [user], lock [169 calls, 169 attempts, 22 failures]
17.02 04:47:26 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:47:26 TIME: core/cache.get : 1.1 ms
17.02 04:47:26 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:47:26 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:47:26 TIME: core/cache.get : 0.54 ms
17.02 04:47:26 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:47:26 TIME: core/user.loginPost : 0.05 ms
17.02 04:47:26 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:47:26 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:47:26 TIME: core/server.query : 0.6 ms
17.02 04:47:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:47:26 STATS: cache [battle], get [671 calls, 523 cache hits, 147 cache misses, 0 same version, 94 not found]
17.02 04:47:26 STATS: cache [battle], segments [1046 calls, 898 hits, 147 misses]
17.02 04:47:26 STATS: cache [battle], database [565483 calls, 147 reads, 290 writes]
17.02 04:47:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:47:26 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:47:26 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:47:26 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:47:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:47:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:47:26 TIME: core/cache.update : 0.09 ms
17.02 04:47:26 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:47:26 TIME: core/cache.update : 0.07 ms
17.02 04:47:26 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:47:26 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:47:26 TIME: core/user.logoutPost : 0.07 ms
17.02 04:47:28 TIMER: Check step...
17.02 04:47:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:28 TIMER: Check step: 1ms
17.02 04:47:31 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:47:31 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:47:31 TIMER: Check round...
17.02 04:47:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:47' OR rounddate = '2017-17-02 07:47' AND status <> 'finished'
17.02 04:47:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.85191786' AND avaliable = false AND finished <> true
17.02 04:47:31 TIMER: Check round: 1ms
17.02 04:47:32 TIMER: Clans cache...
17.02 04:47:33 TIMER: Clans cache: 0ms
17.02 04:47:33 TIMER: Check tournaments...
17.02 04:47:33 DB: SELECT * FROM tournament
17.02 04:47:33 TIMER: Check tournaments: 0ms
17.02 04:47:33 TIMER: Check step...
17.02 04:47:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:33 TIMER: Check step: 0ms
17.02 04:47:38 TIMER: Check step...
17.02 04:47:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:38 TIMER: Check step: 0ms
17.02 04:47:41 BLOCKREMOVE: user 94 removed
17.02 04:47:41 BLOCKREMOVE: questdata 94 removed
17.02 04:47:43 TIMER: Check step...
17.02 04:47:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:43 TIMER: Check step: 1ms
17.02 04:47:48 TIMER: Check step...
17.02 04:47:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:48 TIMER: Check step: 1ms
17.02 04:47:52 TIMER: Check tournaments...
17.02 04:47:52 DB: SELECT * FROM tournament
17.02 04:47:52 TIMER: Check tournaments: 0ms
17.02 04:47:53 TIMER: Check step...
17.02 04:47:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:53 TIMER: Check step: 0ms
17.02 04:47:58 TIMER: Check step...
17.02 04:47:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:47:58 TIMER: Check step: 0ms
17.02 04:48:03 TIMER: Check step...
17.02 04:48:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:03 TIMER: Check step: 1ms
17.02 04:48:08 TIMER: Check step...
17.02 04:48:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:08 TIMER: Check step: 0ms
17.02 04:48:12 TIMER: Check tournaments...
17.02 04:48:12 DB: SELECT * FROM tournament
17.02 04:48:12 TIMER: Check tournaments: 0ms
17.02 04:48:13 TIMER: Check step...
17.02 04:48:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:13 TIMER: Check step: 0ms
17.02 04:48:14 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:48:14 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:48:14 TIME: core/server.query : 1.19 ms
17.02 04:48:14 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:48:14 TIME: core/user.isOnlineID : 0.08 ms
17.02 04:48:14 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:48:14 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:48:14 STATS: cache manager [1], get [266 calls, total 0.15 sec spent, avg 0.57 ms]
17.02 04:48:14 STATS: cache manager [1], update [378 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:48:14 TIME: core/cache.get : 1.04 ms
17.02 04:48:14 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:48:14 STATS: cache [questdata], get [118 calls, 9 cache hits, 109 cache misses, 0 same version, 1 not found]
17.02 04:48:14 STATS: cache [questdata], segments [494 calls, 254 hits, 239 misses]
17.02 04:48:14 STATS: cache [questdata], database [565531 calls, 109 reads, 115 writes]
17.02 04:48:14 STATS: cache [questdata], lock [119 calls, 119 attempts, 0 failures]
17.02 04:48:14 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:48:14 TIME: core/cache.get : 0.64 ms
17.02 04:48:14 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:48:14 TIME: core/user.loginPost : 0.06 ms
17.02 04:48:14 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:48:14 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:48:14 TIME: core/server.query : 0.49 ms
17.02 04:48:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:48:14 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:48:14 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:48:14 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:48:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:48:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:48:14 TIME: core/cache.update : 0.09 ms
17.02 04:48:14 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:48:14 TIME: core/cache.update : 0.07 ms
17.02 04:48:14 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:48:14 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:48:14 TIME: core/user.logoutPost : 0.1 ms
17.02 04:48:18 TIMER: Check step...
17.02 04:48:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:18 TIMER: Check step: 0ms
17.02 04:48:19 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:48:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:48:23 TIMER: Check step...
17.02 04:48:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:23 TIMER: Check step: 0ms
17.02 04:48:28 TIMER: Check step...
17.02 04:48:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:28 TIMER: Check step: 0ms
17.02 04:48:29 BLOCKREMOVE: user 94 removed
17.02 04:48:29 BLOCKREMOVE: questdata 94 removed
17.02 04:48:31 TIMER: Check round...
17.02 04:48:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:48' OR rounddate = '2017-17-02 07:48' AND status <> 'finished'
17.02 04:48:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.91194463' AND avaliable = false AND finished <> true
17.02 04:48:31 TIMER: Check round: 1ms
17.02 04:48:32 TIMER: Clans cache...
17.02 04:48:32 TIMER: Clans cache: 0ms
17.02 04:48:32 TIMER: Check tournaments...
17.02 04:48:32 DB: SELECT * FROM tournament
17.02 04:48:32 TIMER: Check tournaments: 0ms
17.02 04:48:33 TIMER: Check step...
17.02 04:48:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:33 TIMER: Check step: 0ms
17.02 04:48:37 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:48:37 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:48:37 TIME: core/server.query : 0.83 ms
17.02 04:48:37 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:48:37 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:48:37 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:48:37 STATS: cache [user], get [196 calls, 67 cache hits, 129 cache misses, 0 same version, 0 not found]
17.02 04:48:37 STATS: cache [user], segments [755 calls, 476 hits, 258 misses]
17.02 04:48:37 STATS: cache [user], database [565554 calls, 129 reads, 187 writes]
17.02 04:48:37 STATS: cache [user], lock [171 calls, 171 attempts, 22 failures]
17.02 04:48:37 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:48:37 TIME: core/cache.get : 1.15 ms
17.02 04:48:37 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:48:37 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:48:37 TIME: core/cache.get : 0.52 ms
17.02 04:48:37 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:48:37 TIME: core/user.loginPost : 0.06 ms
17.02 04:48:37 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:48:37 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:48:37 TIME: core/server.query : 0.46 ms
17.02 04:48:37 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:48:37 STATS: cache [battle], get [673 calls, 523 cache hits, 149 cache misses, 0 same version, 96 not found]
17.02 04:48:37 STATS: cache [battle], segments [1048 calls, 898 hits, 149 misses]
17.02 04:48:37 STATS: cache [battle], database [565554 calls, 149 reads, 290 writes]
17.02 04:48:37 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:48:37 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:48:37 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:48:37 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:48:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:48:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:48:37 TIME: core/cache.update : 0.09 ms
17.02 04:48:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:48:37 TIME: core/cache.update : 0.08 ms
17.02 04:48:37 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:48:37 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:48:37 TIME: core/user.logoutPost : 0.05 ms
17.02 04:48:38 TIMER: Check step...
17.02 04:48:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:38 TIMER: Check step: 0ms
17.02 04:48:42 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:48:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:48:43 TIMER: Check step...
17.02 04:48:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:43 TIMER: Check step: 0ms
17.02 04:48:48 TIMER: Check step...
17.02 04:48:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:48 TIMER: Check step: 0ms
17.02 04:48:52 BLOCKREMOVE: user 94 removed
17.02 04:48:52 BLOCKREMOVE: questdata 94 removed
17.02 04:48:52 TIMER: Check tournaments...
17.02 04:48:52 DB: SELECT * FROM tournament
17.02 04:48:52 TIMER: Check tournaments: 0ms
17.02 04:48:53 TIMER: Check step...
17.02 04:48:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:53 TIMER: Check step: 0ms
17.02 04:48:58 TIMER: Check step...
17.02 04:48:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:48:58 TIMER: Check step: 0ms
17.02 04:49:03 TIMER: Check step...
17.02 04:49:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:03 TIMER: Check step: 0ms
17.02 04:49:08 TIMER: Check step...
17.02 04:49:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:08 TIMER: Check step: 0ms
17.02 04:49:12 TIMER: Check tournaments...
17.02 04:49:12 DB: SELECT * FROM tournament
17.02 04:49:12 TIMER: Check tournaments: 0ms
17.02 04:49:13 TIMER: Check step...
17.02 04:49:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:13 TIMER: Check step: 0ms
17.02 04:49:18 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:49:18 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:49:18 TIME: core/server.query : 0.86 ms
17.02 04:49:18 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:49:18 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:49:18 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:49:18 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:49:18 STATS: cache manager [1], get [270 calls, total 0.15 sec spent, avg 0.57 ms]
17.02 04:49:18 STATS: cache manager [1], update [382 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:49:18 TIME: core/cache.get : 1.04 ms
17.02 04:49:18 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:49:18 STATS: cache [questdata], get [120 calls, 9 cache hits, 111 cache misses, 0 same version, 1 not found]
17.02 04:49:18 STATS: cache [questdata], segments [502 calls, 258 hits, 243 misses]
17.02 04:49:18 STATS: cache [questdata], database [565595 calls, 111 reads, 117 writes]
17.02 04:49:18 STATS: cache [questdata], lock [121 calls, 121 attempts, 0 failures]
17.02 04:49:18 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:49:18 TIME: core/cache.get : 0.6 ms
17.02 04:49:18 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:49:18 TIME: core/user.loginPost : 0.06 ms
17.02 04:49:18 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:49:18 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:49:18 TIME: core/server.query : 0.53 ms
17.02 04:49:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:49:18 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:49:18 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:49:18 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:49:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:49:18 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:49:18 TIME: core/cache.update : 0.08 ms
17.02 04:49:18 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:49:18 TIME: core/cache.update : 0.09 ms
17.02 04:49:18 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:49:18 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:49:18 TIME: core/user.logoutPost : 0.07 ms
17.02 04:49:18 TIMER: Check step...
17.02 04:49:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:18 TIMER: Check step: 0ms
17.02 04:49:23 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:49:23 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:49:23 TIMER: Check step...
17.02 04:49:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:23 TIMER: Check step: 0ms
17.02 04:49:28 TIMER: Check step...
17.02 04:49:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:28 TIMER: Check step: 0ms
17.02 04:49:31 TIMER: Check round...
17.02 04:49:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:49' OR rounddate = '2017-17-02 07:49' AND status <> 'finished'
17.02 04:49:31 DB: SELECT * FROM battle WHERE endtime >= '1487324.97197065' AND avaliable = false AND finished <> true
17.02 04:49:31 TIMER: Check round: 1ms
17.02 04:49:32 TIMER: Clans cache...
17.02 04:49:32 TIMER: Clans cache: 0ms
17.02 04:49:32 TIMER: Check tournaments...
17.02 04:49:32 DB: SELECT * FROM tournament
17.02 04:49:32 TIMER: Check tournaments: 0ms
17.02 04:49:33 BLOCKREMOVE: user 94 removed
17.02 04:49:33 BLOCKREMOVE: questdata 94 removed
17.02 04:49:33 TIMER: Check step...
17.02 04:49:33 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:33 TIMER: Check step: 0ms
17.02 04:49:36 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:49:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:49:36 TIME: core/server.query : 0.7 ms
17.02 04:49:36 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:49:36 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:49:36 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:49:36 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:49:36 TIME: core/cache.get : 0.73 ms
17.02 04:49:36 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:49:36 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:49:36 TIME: core/cache.get : 0.56 ms
17.02 04:49:36 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:49:36 TIME: core/user.loginPost : 0.04 ms
17.02 04:49:36 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:49:36 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:49:36 TIME: core/server.query : 0.39 ms
17.02 04:49:36 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:49:36 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:49:36 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:49:36 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:49:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:49:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:49:36 TIME: core/cache.update : 0.07 ms
17.02 04:49:36 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:49:36 TIME: core/cache.update : 0.05 ms
17.02 04:49:36 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:49:36 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:49:36 TIME: core/user.logoutPost : 0.04 ms
17.02 04:49:38 TIMER: Check step...
17.02 04:49:38 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:38 TIMER: Check step: 1ms
17.02 04:49:41 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:49:41 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:49:43 TIMER: Check step...
17.02 04:49:43 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:43 TIMER: Check step: 0ms
17.02 04:49:48 TIMER: Check step...
17.02 04:49:48 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:48 TIMER: Check step: 1ms
17.02 04:49:51 BLOCKREMOVE: user 94 removed
17.02 04:49:51 BLOCKREMOVE: questdata 94 removed
17.02 04:49:52 TIMER: Check tournaments...
17.02 04:49:52 DB: SELECT * FROM tournament
17.02 04:49:52 TIMER: Check tournaments: 0ms
17.02 04:49:53 TIMER: Check step...
17.02 04:49:53 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:53 TIMER: Check step: 0ms
17.02 04:49:58 TIMER: Check step...
17.02 04:49:58 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:49:58 TIMER: Check step: 0ms
17.02 04:50:03 TIMER: Check step...
17.02 04:50:03 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:03 TIMER: Check step: 0ms
17.02 04:50:08 TIMER: Check step...
17.02 04:50:08 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:08 TIMER: Check step: 1ms
17.02 04:50:12 TIMER: Check tournaments...
17.02 04:50:12 DB: SELECT * FROM tournament
17.02 04:50:12 TIMER: Check tournaments: 0ms
17.02 04:50:13 TIMER: Check step...
17.02 04:50:13 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:13 TIMER: Check step: 0ms
17.02 04:50:18 TIMER: Check step...
17.02 04:50:18 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:18 TIMER: Check step: 0ms
17.02 04:50:23 TIMER: Check step...
17.02 04:50:23 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:23 TIMER: Check step: 0ms
17.02 04:50:27 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:50:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:50:27 TIME: core/server.query : 0.99 ms
17.02 04:50:27 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:50:27 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:50:27 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:50:27 STATS: cache [user], get [199 calls, 67 cache hits, 132 cache misses, 0 same version, 0 not found]
17.02 04:50:27 STATS: cache [user], segments [767 calls, 482 hits, 264 misses]
17.02 04:50:27 STATS: cache [user], database [565664 calls, 132 reads, 190 writes]
17.02 04:50:27 STATS: cache [user], lock [174 calls, 174 attempts, 22 failures]
17.02 04:50:27 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:50:27 STATS: cache manager [1], get [274 calls, total 0.16 sec spent, avg 0.57 ms]
17.02 04:50:27 STATS: cache manager [1], update [386 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:50:27 TIME: core/cache.get : 2.29 ms
17.02 04:50:27 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:50:27 STATS: cache [questdata], get [122 calls, 9 cache hits, 113 cache misses, 0 same version, 1 not found]
17.02 04:50:27 STATS: cache [questdata], segments [510 calls, 262 hits, 247 misses]
17.02 04:50:27 STATS: cache [questdata], database [565664 calls, 113 reads, 119 writes]
17.02 04:50:27 STATS: cache [questdata], lock [123 calls, 123 attempts, 0 failures]
17.02 04:50:27 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:50:27 TIME: core/cache.get : 0.74 ms
17.02 04:50:27 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:50:27 TIME: core/user.loginPost : 0.07 ms
17.02 04:50:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:50:27 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:50:27 TIME: core/server.query : 0.92 ms
17.02 04:50:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:50:27 STATS: cache [battle], get [676 calls, 523 cache hits, 152 cache misses, 0 same version, 99 not found]
17.02 04:50:27 STATS: cache [battle], segments [1051 calls, 898 hits, 152 misses]
17.02 04:50:27 STATS: cache [battle], database [565664 calls, 152 reads, 290 writes]
17.02 04:50:27 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:50:27 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:50:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:50:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:50:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:50:27 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:50:27 TIME: core/cache.update : 0.09 ms
17.02 04:50:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:50:27 TIME: core/cache.update : 0.08 ms
17.02 04:50:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:50:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:50:27 TIME: core/user.logoutPost : 0.08 ms
17.02 04:50:28 TIMER: Check step...
17.02 04:50:28 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:28 TIMER: Check step: 0ms
17.02 04:50:31 TIMER: Check round...
17.02 04:50:31 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:50' OR rounddate = '2017-17-02 07:50' AND status <> 'finished'
17.02 04:50:31 DB: SELECT * FROM battle WHERE endtime >= '1487325.03199709' AND avaliable = false AND finished <> true
17.02 04:50:31 TIMER: Check round: 1ms
17.02 04:50:32 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:50:32 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:50:32 TIMER: Clans cache...
17.02 04:50:32 TIMER: Clans cache: 0ms
17.02 04:50:32 TIMER: Check tournaments...
17.02 04:50:32 DB: SELECT * FROM tournament
17.02 04:50:32 TIMER: Check tournaments: 0ms
17.02 04:50:33 TIMER: Check step...
17.02 04:50:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:34 TIMER: Check step: 0ms
17.02 04:50:39 TIMER: Check step...
17.02 04:50:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:39 TIMER: Check step: 0ms
17.02 04:50:42 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:50:42 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:50:42 TIME: core/server.query : 1.06 ms
17.02 04:50:42 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:50:42 TIME: core/user.isOnlineID : 0.08 ms
17.02 04:50:42 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 1, id => 94 } }
17.02 04:50:42 TIME: core/cache.get : 0.2 ms
17.02 04:50:42 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 94 } }
17.02 04:50:42 TIME: core/cache.get : 4.68 ms
17.02 04:50:42 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:50:42 TIME: core/user.loginPost : 0.76 ms
17.02 04:50:42 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:50:42 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:50:42 TIME: core/server.query : 0.59 ms
17.02 04:50:42 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:50:42 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:50:42 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:50:42 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:50:42 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:50:42 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:50:42 TIME: core/cache.update : 0.19 ms
17.02 04:50:42 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:50:42 TIME: core/cache.update : 0.17 ms
17.02 04:50:42 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:50:42 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:50:42 TIME: core/user.logoutPost : 0.1 ms
17.02 04:50:42 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:50:42 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:50:44 TIMER: Check step...
17.02 04:50:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:44 TIMER: Check step: 0ms
17.02 04:50:49 TIMER: Check step...
17.02 04:50:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:49 TIMER: Check step: 0ms
17.02 04:50:52 BLOCKREMOVE: user 94 removed
17.02 04:50:52 BLOCKREMOVE: questdata 94 removed
17.02 04:50:53 TIMER: Check tournaments...
17.02 04:50:53 DB: SELECT * FROM tournament
17.02 04:50:53 TIMER: Check tournaments: 0ms
17.02 04:50:54 TIMER: Check step...
17.02 04:50:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:54 TIMER: Check step: 0ms
17.02 04:50:59 TIMER: Check step...
17.02 04:50:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:50:59 TIMER: Check step: 0ms
17.02 04:51:04 TIMER: Check step...
17.02 04:51:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:04 TIMER: Check step: 0ms
17.02 04:51:09 TIMER: Check step...
17.02 04:51:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:09 TIMER: Check step: 0ms
17.02 04:51:13 TIMER: Check tournaments...
17.02 04:51:13 DB: SELECT * FROM tournament
17.02 04:51:13 TIMER: Check tournaments: 0ms
17.02 04:51:14 TIMER: Check step...
17.02 04:51:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:14 TIMER: Check step: 0ms
17.02 04:51:19 TIMER: Check step...
17.02 04:51:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:19 TIMER: Check step: 0ms
17.02 04:51:24 TIMER: Check step...
17.02 04:51:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:24 TIMER: Check step: 0ms
17.02 04:51:27 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:51:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:51:27 TIME: core/server.query : 0.69 ms
17.02 04:51:27 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:51:27 TIME: core/user.isOnlineID : 0.04 ms
17.02 04:51:27 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:51:27 STATS: cache [user], get [201 calls, 68 cache hits, 133 cache misses, 0 same version, 0 not found]
17.02 04:51:27 STATS: cache [user], segments [775 calls, 488 hits, 266 misses]
17.02 04:51:27 STATS: cache [user], database [565724 calls, 133 reads, 192 writes]
17.02 04:51:27 STATS: cache [user], lock [176 calls, 176 attempts, 22 failures]
17.02 04:51:27 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:51:27 STATS: cache manager [1], get [278 calls, total 0.16 sec spent, avg 0.57 ms]
17.02 04:51:27 STATS: cache manager [1], update [390 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:51:27 TIME: core/cache.get : 0.77 ms
17.02 04:51:27 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:51:27 STATS: cache [questdata], get [124 calls, 10 cache hits, 114 cache misses, 0 same version, 1 not found]
17.02 04:51:27 STATS: cache [questdata], segments [518 calls, 268 hits, 249 misses]
17.02 04:51:27 STATS: cache [questdata], database [565724 calls, 114 reads, 121 writes]
17.02 04:51:27 STATS: cache [questdata], lock [125 calls, 125 attempts, 0 failures]
17.02 04:51:27 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:51:27 TIME: core/cache.get : 0.3 ms
17.02 04:51:27 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:51:27 TIME: core/user.loginPost : 0.03 ms
17.02 04:51:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:51:27 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:51:27 TIME: core/server.query : 0.28 ms
17.02 04:51:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:51:27 STATS: cache [battle], get [678 calls, 523 cache hits, 154 cache misses, 0 same version, 101 not found]
17.02 04:51:27 STATS: cache [battle], segments [1053 calls, 898 hits, 154 misses]
17.02 04:51:27 STATS: cache [battle], database [565724 calls, 154 reads, 290 writes]
17.02 04:51:27 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:51:27 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:51:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:51:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:51:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:51:27 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:51:27 TIME: core/cache.update : 0.04 ms
17.02 04:51:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:51:27 TIME: core/cache.update : 0.03 ms
17.02 04:51:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:51:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:51:27 TIME: core/user.logoutPost : 0.03 ms
17.02 04:51:29 TIMER: Check step...
17.02 04:51:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:29 TIMER: Check step: 0ms
17.02 04:51:32 TIMER: Check round...
17.02 04:51:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:51' OR rounddate = '2017-17-02 07:51' AND status <> 'finished'
17.02 04:51:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.09202903' AND avaliable = false AND finished <> true
17.02 04:51:32 TIMER: Check round: 1ms
17.02 04:51:32 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:51:32 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:51:33 TIMER: Clans cache...
17.02 04:51:33 TIMER: Clans cache: 0ms
17.02 04:51:33 TIMER: Check tournaments...
17.02 04:51:33 DB: SELECT * FROM tournament
17.02 04:51:33 TIMER: Check tournaments: 0ms
17.02 04:51:34 TIMER: Check step...
17.02 04:51:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:34 TIMER: Check step: 0ms
17.02 04:51:39 TIMER: Check step...
17.02 04:51:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:39 TIMER: Check step: 0ms
17.02 04:51:42 BLOCKREMOVE: user 94 removed
17.02 04:51:42 BLOCKREMOVE: questdata 94 removed
17.02 04:51:44 TIMER: Check step...
17.02 04:51:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:44 TIMER: Check step: 0ms
17.02 04:51:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:51:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:51:47 TIME: core/server.query : 0.72 ms
17.02 04:51:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:51:47 TIME: core/user.isOnlineID : 0.04 ms
17.02 04:51:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:51:47 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:51:47 TIME: core/cache.get : 0.77 ms
17.02 04:51:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:51:47 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:51:47 TIME: core/cache.get : 0.39 ms
17.02 04:51:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:51:47 TIME: core/user.loginPost : 0.05 ms
17.02 04:51:47 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:51:47 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:51:47 TIME: core/server.query : 0.39 ms
17.02 04:51:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:51:47 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:51:47 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:51:47 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:51:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:51:47 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:51:47 TIME: core/cache.update : 0.09 ms
17.02 04:51:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:51:47 TIME: core/cache.update : 0.08 ms
17.02 04:51:47 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:51:47 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:51:47 TIME: core/user.logoutPost : 0.05 ms
17.02 04:51:49 TIMER: Check step...
17.02 04:51:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:49 TIMER: Check step: 0ms
17.02 04:51:52 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:51:52 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:51:53 TIMER: Check tournaments...
17.02 04:51:53 DB: SELECT * FROM tournament
17.02 04:51:53 TIMER: Check tournaments: 0ms
17.02 04:51:54 TIMER: Check step...
17.02 04:51:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:54 TIMER: Check step: 0ms
17.02 04:51:59 TIMER: Check step...
17.02 04:51:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:51:59 TIMER: Check step: 0ms
17.02 04:52:02 BLOCKREMOVE: user 94 removed
17.02 04:52:02 BLOCKREMOVE: questdata 94 removed
17.02 04:52:04 TIMER: Check step...
17.02 04:52:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:04 TIMER: Check step: 0ms
17.02 04:52:09 TIMER: Check step...
17.02 04:52:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:09 TIMER: Check step: 0ms
17.02 04:52:13 TIMER: Check tournaments...
17.02 04:52:13 DB: SELECT * FROM tournament
17.02 04:52:13 TIMER: Check tournaments: 0ms
17.02 04:52:14 TIMER: Check step...
17.02 04:52:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:14 TIMER: Check step: 1ms
17.02 04:52:19 TIMER: Check step...
17.02 04:52:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:19 TIMER: Check step: 0ms
17.02 04:52:24 TIMER: Check step...
17.02 04:52:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:24 TIMER: Check step: 0ms
17.02 04:52:29 TIMER: Check step...
17.02 04:52:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:29 TIMER: Check step: 0ms
17.02 04:52:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:52:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:52:30 TIME: core/server.query : 0.5 ms
17.02 04:52:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:52:30 TIME: core/user.isOnlineID : 0.07 ms
17.02 04:52:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:52:30 STATS: cache [user], get [203 calls, 68 cache hits, 135 cache misses, 0 same version, 0 not found]
17.02 04:52:30 STATS: cache [user], segments [783 calls, 492 hits, 270 misses]
17.02 04:52:30 STATS: cache [user], database [565787 calls, 135 reads, 194 writes]
17.02 04:52:30 STATS: cache [user], lock [178 calls, 178 attempts, 22 failures]
17.02 04:52:30 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:52:30 STATS: cache manager [1], get [282 calls, total 0.16 sec spent, avg 0.56 ms]
17.02 04:52:30 STATS: cache manager [1], update [394 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:52:30 TIME: core/cache.get : 0.58 ms
17.02 04:52:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:52:30 STATS: cache [questdata], get [126 calls, 10 cache hits, 116 cache misses, 0 same version, 1 not found]
17.02 04:52:30 STATS: cache [questdata], segments [526 calls, 272 hits, 253 misses]
17.02 04:52:30 STATS: cache [questdata], database [565787 calls, 116 reads, 123 writes]
17.02 04:52:30 STATS: cache [questdata], lock [127 calls, 127 attempts, 0 failures]
17.02 04:52:30 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:52:30 TIME: core/cache.get : 0.31 ms
17.02 04:52:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:52:30 TIME: core/user.loginPost : 0.03 ms
17.02 04:52:30 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:52:30 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:52:30 TIME: core/server.query : 0.69 ms
17.02 04:52:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:52:30 STATS: cache [battle], get [680 calls, 523 cache hits, 156 cache misses, 0 same version, 103 not found]
17.02 04:52:30 STATS: cache [battle], segments [1055 calls, 898 hits, 156 misses]
17.02 04:52:30 STATS: cache [battle], database [565787 calls, 156 reads, 290 writes]
17.02 04:52:30 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:52:30 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:52:30 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:52:30 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:52:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:52:30 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:52:30 TIME: core/cache.update : 0.11 ms
17.02 04:52:30 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:52:30 TIME: core/cache.update : 0.09 ms
17.02 04:52:30 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:52:30 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:52:30 TIME: core/user.logoutPost : 0.06 ms
17.02 04:52:32 TIMER: Check round...
17.02 04:52:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:52' OR rounddate = '2017-17-02 07:52' AND status <> 'finished'
17.02 04:52:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.15205173' AND avaliable = false AND finished <> true
17.02 04:52:32 TIMER: Check round: 1ms
17.02 04:52:33 TIMER: Clans cache...
17.02 04:52:33 TIMER: Clans cache: 0ms
17.02 04:52:33 TIMER: Check tournaments...
17.02 04:52:33 DB: SELECT * FROM tournament
17.02 04:52:33 TIMER: Check tournaments: 0ms
17.02 04:52:34 TIMER: Check step...
17.02 04:52:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:34 TIMER: Check step: 0ms
17.02 04:52:35 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:52:35 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:52:39 TIMER: Check step...
17.02 04:52:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:39 TIMER: Check step: 0ms
17.02 04:52:44 TIMER: Check step...
17.02 04:52:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:44 TIMER: Check step: 0ms
17.02 04:52:45 BLOCKREMOVE: user 94 removed
17.02 04:52:45 BLOCKREMOVE: questdata 94 removed
17.02 04:52:49 TIMER: Check step...
17.02 04:52:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:49 TIMER: Check step: 0ms
17.02 04:52:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:52:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:52:50 TIME: core/server.query : 0.8 ms
17.02 04:52:50 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:52:50 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:52:50 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:52:50 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:52:50 TIME: core/cache.get : 0.94 ms
17.02 04:52:50 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:52:50 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:52:50 TIME: core/cache.get : 0.48 ms
17.02 04:52:50 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:52:50 TIME: core/user.loginPost : 0.05 ms
17.02 04:52:50 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:52:50 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:52:50 TIME: core/server.query : 0.47 ms
17.02 04:52:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:52:50 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:52:50 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:52:50 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:52:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:52:50 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:52:50 TIME: core/cache.update : 0.09 ms
17.02 04:52:50 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:52:50 TIME: core/cache.update : 0.07 ms
17.02 04:52:50 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:52:50 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:52:50 TIME: core/user.logoutPost : 0.06 ms
17.02 04:52:53 TIMER: Check tournaments...
17.02 04:52:53 DB: SELECT * FROM tournament
17.02 04:52:53 TIMER: Check tournaments: 0ms
17.02 04:52:54 TIMER: Check step...
17.02 04:52:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:54 TIMER: Check step: 0ms
17.02 04:52:55 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:52:55 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:52:59 TIMER: Check step...
17.02 04:52:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:52:59 TIMER: Check step: 0ms
17.02 04:53:04 TIMER: Check step...
17.02 04:53:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:04 TIMER: Check step: 0ms
17.02 04:53:05 BLOCKREMOVE: user 94 removed
17.02 04:53:05 BLOCKREMOVE: questdata 94 removed
17.02 04:53:09 TIMER: Check step...
17.02 04:53:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:09 TIMER: Check step: 0ms
17.02 04:53:13 TIMER: Check tournaments...
17.02 04:53:13 DB: SELECT * FROM tournament
17.02 04:53:13 TIMER: Check tournaments: 0ms
17.02 04:53:14 TIMER: Check step...
17.02 04:53:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:14 TIMER: Check step: 1ms
17.02 04:53:19 TIMER: Check step...
17.02 04:53:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:19 TIMER: Check step: 0ms
17.02 04:53:24 TIMER: Check step...
17.02 04:53:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:24 TIMER: Check step: 0ms
17.02 04:53:29 TIMER: Check step...
17.02 04:53:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:29 TIMER: Check step: 1ms
17.02 04:53:32 TIMER: Check round...
17.02 04:53:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:53' OR rounddate = '2017-17-02 07:53' AND status <> 'finished'
17.02 04:53:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.21211308' AND avaliable = false AND finished <> true
17.02 04:53:32 TIMER: Check round: 0ms
17.02 04:53:33 TIMER: Clans cache...
17.02 04:53:33 TIMER: Clans cache: 0ms
17.02 04:53:33 TIMER: Check tournaments...
17.02 04:53:33 DB: SELECT * FROM tournament
17.02 04:53:33 TIMER: Check tournaments: 0ms
17.02 04:53:34 TIMER: Check step...
17.02 04:53:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:34 TIMER: Check step: 0ms
17.02 04:53:34 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:53:34 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:53:34 TIME: core/server.query : 0.71 ms
17.02 04:53:34 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:53:34 TIME: core/user.isOnlineID : 0.03 ms
17.02 04:53:34 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:53:34 STATS: cache [user], get [205 calls, 68 cache hits, 137 cache misses, 0 same version, 0 not found]
17.02 04:53:34 STATS: cache [user], segments [791 calls, 496 hits, 274 misses]
17.02 04:53:34 STATS: cache [user], database [565851 calls, 137 reads, 196 writes]
17.02 04:53:34 STATS: cache [user], lock [180 calls, 180 attempts, 22 failures]
17.02 04:53:34 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:53:34 STATS: cache manager [1], get [286 calls, total 0.16 sec spent, avg 0.56 ms]
17.02 04:53:34 STATS: cache manager [1], update [398 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:53:34 TIME: core/cache.get : 0.65 ms
17.02 04:53:34 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:53:34 STATS: cache [questdata], get [128 calls, 10 cache hits, 118 cache misses, 0 same version, 1 not found]
17.02 04:53:34 STATS: cache [questdata], segments [534 calls, 276 hits, 257 misses]
17.02 04:53:34 STATS: cache [questdata], database [565851 calls, 118 reads, 125 writes]
17.02 04:53:34 STATS: cache [questdata], lock [129 calls, 129 attempts, 0 failures]
17.02 04:53:34 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:53:34 TIME: core/cache.get : 0.31 ms
17.02 04:53:34 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:53:34 TIME: core/user.loginPost : 0.03 ms
17.02 04:53:34 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:53:34 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:53:34 TIME: core/server.query : 0.3 ms
17.02 04:53:34 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:53:34 STATS: cache [battle], get [682 calls, 523 cache hits, 158 cache misses, 0 same version, 105 not found]
17.02 04:53:34 STATS: cache [battle], segments [1057 calls, 898 hits, 158 misses]
17.02 04:53:34 STATS: cache [battle], database [565851 calls, 158 reads, 290 writes]
17.02 04:53:34 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:53:34 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:53:34 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:53:34 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:53:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:53:34 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:53:34 TIME: core/cache.update : 0.05 ms
17.02 04:53:34 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:53:34 TIME: core/cache.update : 0.04 ms
17.02 04:53:34 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:53:34 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:53:34 TIME: core/user.logoutPost : 0.03 ms
17.02 04:53:39 TIMER: Check step...
17.02 04:53:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:39 TIMER: Check step: 0ms
17.02 04:53:39 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:53:39 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:53:44 TIMER: Check step...
17.02 04:53:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:44 TIMER: Check step: 0ms
17.02 04:53:49 TIMER: Check step...
17.02 04:53:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:49 TIMER: Check step: 1ms
17.02 04:53:49 BLOCKREMOVE: user 94 removed
17.02 04:53:49 BLOCKREMOVE: questdata 94 removed
17.02 04:53:53 TIMER: Check tournaments...
17.02 04:53:53 DB: SELECT * FROM tournament
17.02 04:53:53 TIMER: Check tournaments: 0ms
17.02 04:53:54 TIMER: Check step...
17.02 04:53:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:54 TIMER: Check step: 0ms
17.02 04:53:57 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:53:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:53:57 TIME: core/server.query : 0.89 ms
17.02 04:53:57 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:53:57 TIME: core/user.isOnlineID : 0.07 ms
17.02 04:53:57 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:53:57 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:53:57 TIME: core/cache.get : 1.02 ms
17.02 04:53:57 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:53:57 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:53:57 TIME: core/cache.get : 0.56 ms
17.02 04:53:57 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:53:57 TIME: core/user.loginPost : 0.06 ms
17.02 04:53:57 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:53:57 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:53:57 TIME: core/server.query : 0.52 ms
17.02 04:53:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:53:57 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:53:57 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:53:57 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:53:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:53:57 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:53:57 TIME: core/cache.update : 0.27 ms
17.02 04:53:57 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:53:57 TIME: core/cache.update : 0.17 ms
17.02 04:53:57 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:53:57 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:53:57 TIME: core/user.logoutPost : 0.13 ms
17.02 04:53:59 TIMER: Check step...
17.02 04:53:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:53:59 TIMER: Check step: 0ms
17.02 04:54:02 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:54:02 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:54:04 TIMER: Check step...
17.02 04:54:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:04 TIMER: Check step: 0ms
17.02 04:54:09 TIMER: Check step...
17.02 04:54:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:09 TIMER: Check step: 0ms
17.02 04:54:12 BLOCKREMOVE: user 94 removed
17.02 04:54:12 BLOCKREMOVE: questdata 94 removed
17.02 04:54:13 TIMER: Check tournaments...
17.02 04:54:13 DB: SELECT * FROM tournament
17.02 04:54:13 TIMER: Check tournaments: 0ms
17.02 04:54:14 TIMER: Check step...
17.02 04:54:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:14 TIMER: Check step: 0ms
17.02 04:54:19 TIMER: Check step...
17.02 04:54:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:19 TIMER: Check step: 0ms
17.02 04:54:24 TIMER: Check step...
17.02 04:54:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:24 TIMER: Check step: 0ms
17.02 04:54:29 TIMER: Check step...
17.02 04:54:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:29 TIMER: Check step: 0ms
17.02 04:54:32 TIMER: Check round...
17.02 04:54:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:54' OR rounddate = '2017-17-02 07:54' AND status <> 'finished'
17.02 04:54:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.27213834' AND avaliable = false AND finished <> true
17.02 04:54:32 TIMER: Check round: 1ms
17.02 04:54:33 TIMER: Clans cache...
17.02 04:54:33 TIMER: Clans cache: 0ms
17.02 04:54:33 TIMER: Check tournaments...
17.02 04:54:33 DB: SELECT * FROM tournament
17.02 04:54:33 TIMER: Check tournaments: 0ms
17.02 04:54:34 TIMER: Check step...
17.02 04:54:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:34 TIMER: Check step: 0ms
17.02 04:54:39 TIMER: Check step...
17.02 04:54:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:39 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:54:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:54:39 TIME: core/server.query : 0.76 ms
17.02 04:54:39 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:54:39 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:54:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:54:39 STATS: cache [user], get [207 calls, 68 cache hits, 139 cache misses, 0 same version, 0 not found]
17.02 04:54:39 STATS: cache [user], segments [799 calls, 500 hits, 278 misses]
17.02 04:54:39 STATS: cache [user], database [565916 calls, 139 reads, 198 writes]
17.02 04:54:39 STATS: cache [user], lock [182 calls, 182 attempts, 22 failures]
17.02 04:54:39 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:54:39 TIMER: Check step: 3ms
17.02 04:54:39 STATS: cache manager [1], get [290 calls, total 0.16 sec spent, avg 0.56 ms]
17.02 04:54:39 STATS: cache manager [1], update [402 calls, total 0.03 sec spent, avg 0.09 ms]
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:54:39 TIME: core/cache.get : 1.25 ms
17.02 04:54:39 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:54:39 STATS: cache [questdata], get [130 calls, 10 cache hits, 120 cache misses, 0 same version, 1 not found]
17.02 04:54:39 STATS: cache [questdata], segments [542 calls, 280 hits, 261 misses]
17.02 04:54:39 STATS: cache [questdata], database [565916 calls, 120 reads, 127 writes]
17.02 04:54:39 STATS: cache [questdata], lock [131 calls, 131 attempts, 0 failures]
17.02 04:54:39 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:54:39 TIME: core/cache.get : 0.73 ms
17.02 04:54:39 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:54:39 TIME: core/user.loginPost : 0.06 ms
17.02 04:54:39 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:54:39 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:54:39 TIME: core/server.query : 0.49 ms
17.02 04:54:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:54:39 STATS: cache [battle], get [684 calls, 523 cache hits, 160 cache misses, 0 same version, 107 not found]
17.02 04:54:39 STATS: cache [battle], segments [1059 calls, 898 hits, 160 misses]
17.02 04:54:39 STATS: cache [battle], database [565916 calls, 160 reads, 290 writes]
17.02 04:54:39 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:54:39 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:54:39 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:54:39 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:54:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:54:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:54:39 TIME: core/cache.update : 0.05 ms
17.02 04:54:39 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:54:39 TIME: core/cache.update : 0.03 ms
17.02 04:54:39 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:54:39 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:54:39 TIME: core/user.logoutPost : 0.04 ms
17.02 04:54:44 TIMER: Check step...
17.02 04:54:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:44 TIMER: Check step: 0ms
17.02 04:54:44 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:54:44 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:54:49 TIMER: Check step...
17.02 04:54:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:49 TIMER: Check step: 0ms
17.02 04:54:53 TIMER: Check tournaments...
17.02 04:54:53 DB: SELECT * FROM tournament
17.02 04:54:53 TIMER: Check tournaments: 0ms
17.02 04:54:54 TIMER: Check step...
17.02 04:54:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:54 TIMER: Check step: 0ms
17.02 04:54:54 BLOCKREMOVE: user 94 removed
17.02 04:54:54 BLOCKREMOVE: questdata 94 removed
17.02 04:54:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:54:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:54:58 TIME: core/server.query : 0.89 ms
17.02 04:54:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:54:58 TIME: core/user.isOnlineID : 0.06 ms
17.02 04:54:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:54:58 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:54:58 TIME: core/cache.get : 0.7 ms
17.02 04:54:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:54:58 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:54:58 TIME: core/cache.get : 0.27 ms
17.02 04:54:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:54:58 TIME: core/user.loginPost : 0.03 ms
17.02 04:54:58 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:54:58 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:54:58 TIME: core/server.query : 0.27 ms
17.02 04:54:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:54:58 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:54:58 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:54:58 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:54:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:54:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:54:58 TIME: core/cache.update : 0.04 ms
17.02 04:54:58 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:54:58 TIME: core/cache.update : 0.04 ms
17.02 04:54:58 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:54:58 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:54:58 TIME: core/user.logoutPost : 0.03 ms
17.02 04:54:59 TIMER: Check step...
17.02 04:54:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:54:59 TIMER: Check step: 1ms
17.02 04:55:03 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:55:03 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:55:04 TIMER: Check step...
17.02 04:55:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:04 TIMER: Check step: 1ms
17.02 04:55:09 TIMER: Check step...
17.02 04:55:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:09 TIMER: Check step: 1ms
17.02 04:55:13 TIMER: Check tournaments...
17.02 04:55:13 DB: SELECT * FROM tournament
17.02 04:55:13 TIMER: Check tournaments: 0ms
17.02 04:55:13 BLOCKREMOVE: user 94 removed
17.02 04:55:13 BLOCKREMOVE: questdata 94 removed
17.02 04:55:14 TIMER: Check step...
17.02 04:55:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:14 TIMER: Check step: 0ms
17.02 04:55:19 TIMER: Check step...
17.02 04:55:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:19 TIMER: Check step: 0ms
17.02 04:55:24 TIMER: Check step...
17.02 04:55:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:24 TIMER: Check step: 0ms
17.02 04:55:29 TIMER: Check step...
17.02 04:55:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:29 TIMER: Check step: 1ms
17.02 04:55:32 TIMER: Check round...
17.02 04:55:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:55' OR rounddate = '2017-17-02 07:55' AND status <> 'finished'
17.02 04:55:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.33216653' AND avaliable = false AND finished <> true
17.02 04:55:32 TIMER: Check round: 1ms
17.02 04:55:33 TIMER: Clans cache...
17.02 04:55:33 TIMER: Clans cache: 0ms
17.02 04:55:33 TIMER: Check tournaments...
17.02 04:55:33 DB: SELECT * FROM tournament
17.02 04:55:33 TIMER: Check tournaments: 0ms
17.02 04:55:34 TIMER: Check step...
17.02 04:55:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:34 TIMER: Check step: 0ms
17.02 04:55:39 TIMER: Check step...
17.02 04:55:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:39 TIMER: Check step: 0ms
17.02 04:55:44 TIMER: Check step...
17.02 04:55:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:44 TIMER: Check step: 0ms
17.02 04:55:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:55:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:55:47 TIME: core/server.query : 0.75 ms
17.02 04:55:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:55:47 TIME: core/user.isOnlineID : 0.06 ms
17.02 04:55:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:55:47 STATS: cache [user], get [209 calls, 68 cache hits, 141 cache misses, 0 same version, 0 not found]
17.02 04:55:47 STATS: cache [user], segments [807 calls, 504 hits, 282 misses]
17.02 04:55:47 STATS: cache [user], database [565984 calls, 141 reads, 200 writes]
17.02 04:55:47 STATS: cache [user], lock [184 calls, 184 attempts, 22 failures]
17.02 04:55:47 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:55:47 STATS: cache manager [1], get [294 calls, total 0.17 sec spent, avg 0.56 ms]
17.02 04:55:47 STATS: cache manager [1], update [406 calls, total 0.03 sec spent, avg 0.08 ms]
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:55:47 TIME: core/cache.get : 0.97 ms
17.02 04:55:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:55:47 STATS: cache [questdata], get [132 calls, 10 cache hits, 122 cache misses, 0 same version, 1 not found]
17.02 04:55:47 STATS: cache [questdata], segments [550 calls, 284 hits, 265 misses]
17.02 04:55:47 STATS: cache [questdata], database [565984 calls, 122 reads, 129 writes]
17.02 04:55:47 STATS: cache [questdata], lock [133 calls, 133 attempts, 0 failures]
17.02 04:55:47 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:55:47 TIME: core/cache.get : 0.5 ms
17.02 04:55:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:55:47 TIME: core/user.loginPost : 0.05 ms
17.02 04:55:47 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:55:47 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:55:47 TIME: core/server.query : 0.32 ms
17.02 04:55:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:55:47 STATS: cache [battle], get [686 calls, 523 cache hits, 162 cache misses, 0 same version, 109 not found]
17.02 04:55:47 STATS: cache [battle], segments [1061 calls, 898 hits, 162 misses]
17.02 04:55:47 STATS: cache [battle], database [565984 calls, 162 reads, 290 writes]
17.02 04:55:47 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:55:47 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:55:47 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:55:47 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:55:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:55:47 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:55:47 TIME: core/cache.update : 0.05 ms
17.02 04:55:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:55:47 TIME: core/cache.update : 0.03 ms
17.02 04:55:47 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:55:47 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:55:47 TIME: core/user.logoutPost : 0.03 ms
17.02 04:55:49 TIMER: Check step...
17.02 04:55:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:49 TIMER: Check step: 0ms
17.02 04:55:52 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:55:52 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:55:53 TIMER: Check tournaments...
17.02 04:55:53 DB: SELECT * FROM tournament
17.02 04:55:53 TIMER: Check tournaments: 0ms
17.02 04:55:54 TIMER: Check step...
17.02 04:55:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:54 TIMER: Check step: 0ms
17.02 04:55:59 TIMER: Check step...
17.02 04:55:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:55:59 TIMER: Check step: 1ms
17.02 04:56:02 BLOCKREMOVE: user 94 removed
17.02 04:56:02 BLOCKREMOVE: questdata 94 removed
17.02 04:56:04 TIMER: Check step...
17.02 04:56:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:04 TIMER: Check step: 0ms
17.02 04:56:07 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:56:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:56:07 TIME: core/server.query : 0.83 ms
17.02 04:56:07 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:56:07 TIME: core/user.isOnlineID : 0.04 ms
17.02 04:56:07 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:56:07 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:56:07 TIME: core/cache.get : 0.88 ms
17.02 04:56:07 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:56:07 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:56:07 TIME: core/cache.get : 0.38 ms
17.02 04:56:07 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:56:07 TIME: core/user.loginPost : 0.05 ms
17.02 04:56:07 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:56:07 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:56:07 TIME: core/server.query : 0.57 ms
17.02 04:56:07 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:56:07 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:56:07 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:56:07 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:56:07 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:56:07 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:56:07 TIME: core/cache.update : 0.06 ms
17.02 04:56:07 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:56:07 TIME: core/cache.update : 0.05 ms
17.02 04:56:07 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:56:07 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:56:07 TIME: core/user.logoutPost : 0.04 ms
17.02 04:56:09 TIMER: Check step...
17.02 04:56:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:09 TIMER: Check step: 0ms
17.02 04:56:12 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:56:12 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:56:13 TIMER: Check tournaments...
17.02 04:56:13 DB: SELECT * FROM tournament
17.02 04:56:13 TIMER: Check tournaments: 0ms
17.02 04:56:14 TIMER: Check step...
17.02 04:56:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:14 TIMER: Check step: 0ms
17.02 04:56:19 TIMER: Check step...
17.02 04:56:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:19 TIMER: Check step: 0ms
17.02 04:56:22 BLOCKREMOVE: user 94 removed
17.02 04:56:22 BLOCKREMOVE: questdata 94 removed
17.02 04:56:24 TIMER: Check step...
17.02 04:56:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:24 TIMER: Check step: 0ms
17.02 04:56:29 TIMER: Check step...
17.02 04:56:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:29 TIMER: Check step: 0ms
17.02 04:56:32 TIMER: Check round...
17.02 04:56:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:56' OR rounddate = '2017-17-02 07:56' AND status <> 'finished'
17.02 04:56:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.39219072' AND avaliable = false AND finished <> true
17.02 04:56:32 TIMER: Check round: 1ms
17.02 04:56:33 TIMER: Clans cache...
17.02 04:56:33 TIMER: Clans cache: 0ms
17.02 04:56:33 TIMER: Check tournaments...
17.02 04:56:33 DB: SELECT * FROM tournament
17.02 04:56:33 TIMER: Check tournaments: 0ms
17.02 04:56:34 TIMER: Check step...
17.02 04:56:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:34 TIMER: Check step: 0ms
17.02 04:56:39 TIMER: Check step...
17.02 04:56:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:39 TIMER: Check step: 0ms
17.02 04:56:44 TIMER: Check step...
17.02 04:56:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:44 TIMER: Check step: 1ms
17.02 04:56:49 TIMER: Check step...
17.02 04:56:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:49 TIMER: Check step: 0ms
17.02 04:56:53 TIMER: Check tournaments...
17.02 04:56:53 DB: SELECT * FROM tournament
17.02 04:56:53 TIMER: Check tournaments: 0ms
17.02 04:56:54 TIMER: Check step...
17.02 04:56:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:54 TIMER: Check step: 0ms
17.02 04:56:56 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:56:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:56:56 TIME: core/server.query : 0.49 ms
17.02 04:56:56 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:56:56 TIME: core/user.isOnlineID : 0.02 ms
17.02 04:56:56 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:56:56 STATS: cache [user], get [211 calls, 68 cache hits, 143 cache misses, 0 same version, 0 not found]
17.02 04:56:56 STATS: cache [user], segments [815 calls, 508 hits, 286 misses]
17.02 04:56:56 STATS: cache [user], database [566053 calls, 143 reads, 202 writes]
17.02 04:56:56 STATS: cache [user], lock [186 calls, 186 attempts, 22 failures]
17.02 04:56:56 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:56:56 STATS: cache manager [1], get [298 calls, total 0.17 sec spent, avg 0.56 ms]
17.02 04:56:56 STATS: cache manager [1], update [410 calls, total 0.03 sec spent, avg 0.08 ms]
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:56:56 TIME: core/cache.get : 0.61 ms
17.02 04:56:56 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:56:56 STATS: cache [questdata], get [134 calls, 10 cache hits, 124 cache misses, 0 same version, 1 not found]
17.02 04:56:56 STATS: cache [questdata], segments [558 calls, 288 hits, 269 misses]
17.02 04:56:56 STATS: cache [questdata], database [566053 calls, 124 reads, 131 writes]
17.02 04:56:56 STATS: cache [questdata], lock [135 calls, 135 attempts, 0 failures]
17.02 04:56:56 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:56:56 TIME: core/cache.get : 0.3 ms
17.02 04:56:56 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:56:56 TIME: core/user.loginPost : 0.03 ms
17.02 04:56:56 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:56:56 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:56:56 TIME: core/server.query : 0.33 ms
17.02 04:56:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:56:56 STATS: cache [battle], get [688 calls, 523 cache hits, 164 cache misses, 0 same version, 111 not found]
17.02 04:56:56 STATS: cache [battle], segments [1063 calls, 898 hits, 164 misses]
17.02 04:56:56 STATS: cache [battle], database [566053 calls, 164 reads, 290 writes]
17.02 04:56:56 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:56:56 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:56:56 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:56:56 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:56:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:56:56 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:56:56 TIME: core/cache.update : 0.06 ms
17.02 04:56:56 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:56:56 TIME: core/cache.update : 0.05 ms
17.02 04:56:56 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:56:56 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:56:56 TIME: core/user.logoutPost : 0.03 ms
17.02 04:56:59 TIMER: Check step...
17.02 04:56:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:56:59 TIMER: Check step: 0ms
17.02 04:57:01 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:57:01 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:57:04 TIMER: Check step...
17.02 04:57:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:04 TIMER: Check step: 0ms
17.02 04:57:09 TIMER: Check step...
17.02 04:57:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:09 TIMER: Check step: 0ms
17.02 04:57:11 BLOCKREMOVE: user 94 removed
17.02 04:57:11 BLOCKREMOVE: questdata 94 removed
17.02 04:57:13 TIMER: Check tournaments...
17.02 04:57:13 DB: SELECT * FROM tournament
17.02 04:57:13 TIMER: Check tournaments: 0ms
17.02 04:57:14 TIMER: Check step...
17.02 04:57:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:14 TIMER: Check step: 0ms
17.02 04:57:16 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:57:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:57:16 TIME: core/server.query : 0.78 ms
17.02 04:57:16 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:57:16 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:57:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:57:16 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:57:16 TIME: core/cache.get : 0.92 ms
17.02 04:57:16 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:57:16 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:57:16 TIME: core/cache.get : 0.52 ms
17.02 04:57:16 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:57:16 TIME: core/user.loginPost : 0.06 ms
17.02 04:57:16 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:57:16 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:57:16 TIME: core/server.query : 0.49 ms
17.02 04:57:16 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:57:16 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:57:16 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:57:16 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:57:16 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:57:16 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:57:16 TIME: core/cache.update : 0.08 ms
17.02 04:57:16 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:57:16 TIME: core/cache.update : 0.07 ms
17.02 04:57:16 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:57:16 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:57:16 TIME: core/user.logoutPost : 0.05 ms
17.02 04:57:19 TIMER: Check step...
17.02 04:57:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:19 TIMER: Check step: 0ms
17.02 04:57:21 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:57:21 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:57:24 TIMER: Check step...
17.02 04:57:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:24 TIMER: Check step: 0ms
17.02 04:57:29 TIMER: Check step...
17.02 04:57:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:29 TIMER: Check step: 0ms
17.02 04:57:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:57:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:57:31 TIME: core/server.query : 0.86 ms
17.02 04:57:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:57:31 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:57:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 1, id => 94 } }
17.02 04:57:31 TIME: core/cache.get : 0.2 ms
17.02 04:57:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 94 } }
17.02 04:57:31 TIME: core/cache.get : 0.09 ms
17.02 04:57:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:57:31 TIME: core/user.loginPost : 0.06 ms
17.02 04:57:31 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:57:31 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:57:31 TIME: core/server.query : 0.38 ms
17.02 04:57:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:57:31 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:57:31 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:57:31 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:57:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:57:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:57:31 TIME: core/cache.update : 0.07 ms
17.02 04:57:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.02 04:57:31 TIME: core/cache.update : 0.03 ms
17.02 04:57:31 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:57:31 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:57:31 TIME: core/user.logoutPost : 0.03 ms
17.02 04:57:31 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:57:31 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:57:32 TIMER: Check round...
17.02 04:57:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:57' OR rounddate = '2017-17-02 07:57' AND status <> 'finished'
17.02 04:57:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.45222037' AND avaliable = false AND finished <> true
17.02 04:57:32 TIMER: Check round: 1ms
17.02 04:57:33 TIMER: Clans cache...
17.02 04:57:33 TIMER: Clans cache: 0ms
17.02 04:57:33 TIMER: Check tournaments...
17.02 04:57:33 DB: SELECT * FROM tournament
17.02 04:57:33 TIMER: Check tournaments: 0ms
17.02 04:57:34 TIMER: Check step...
17.02 04:57:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:34 TIMER: Check step: 0ms
17.02 04:57:39 TIMER: Check step...
17.02 04:57:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:39 TIMER: Check step: 0ms
17.02 04:57:41 BLOCKREMOVE: user 94 removed
17.02 04:57:41 BLOCKREMOVE: questdata 94 removed
17.02 04:57:44 TIMER: Check step...
17.02 04:57:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:44 TIMER: Check step: 0ms
17.02 04:57:49 TIMER: Check step...
17.02 04:57:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:49 TIMER: Check step: 1ms
17.02 04:57:49 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:57:49 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:57:49 TIME: core/server.query : 0.62 ms
17.02 04:57:49 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:57:49 TIME: core/user.isOnlineID : 0.04 ms
17.02 04:57:49 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:57:49 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:57:49 TIME: core/cache.get : 0.57 ms
17.02 04:57:49 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:57:49 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:57:49 TIME: core/cache.get : 0.31 ms
17.02 04:57:49 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:57:49 TIME: core/user.loginPost : 0.03 ms
17.02 04:57:49 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:57:49 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:57:49 TIME: core/server.query : 0.44 ms
17.02 04:57:49 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:57:49 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:57:49 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:57:49 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:57:49 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:57:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:57:49 TIME: core/cache.update : 0.09 ms
17.02 04:57:49 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:57:49 TIME: core/cache.update : 0.09 ms
17.02 04:57:49 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:57:49 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:57:49 TIME: core/user.logoutPost : 0.06 ms
17.02 04:57:53 TIMER: Check tournaments...
17.02 04:57:53 DB: SELECT * FROM tournament
17.02 04:57:53 TIMER: Check tournaments: 0ms
17.02 04:57:54 TIMER: Check step...
17.02 04:57:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:54 TIMER: Check step: 0ms
17.02 04:57:55 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:57:55 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:57:59 TIMER: Check step...
17.02 04:57:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:57:59 TIMER: Check step: 0ms
17.02 04:58:04 TIMER: Check step...
17.02 04:58:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:04 TIMER: Check step: 0ms
17.02 04:58:05 BLOCKREMOVE: user 94 removed
17.02 04:58:05 BLOCKREMOVE: questdata 94 removed
17.02 04:58:09 TIMER: Check step...
17.02 04:58:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:09 TIMER: Check step: 0ms
17.02 04:58:09 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:58:09 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:58:09 TIME: core/server.query : 0.84 ms
17.02 04:58:09 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:58:09 TIME: core/user.isOnlineID : 0.06 ms
17.02 04:58:09 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:58:09 STATS: cache [user], get [215 calls, 69 cache hits, 146 cache misses, 0 same version, 0 not found]
17.02 04:58:09 STATS: cache [user], segments [831 calls, 518 hits, 292 misses]
17.02 04:58:09 STATS: cache [user], database [566126 calls, 146 reads, 206 writes]
17.02 04:58:09 STATS: cache [user], lock [190 calls, 190 attempts, 22 failures]
17.02 04:58:09 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:58:09 STATS: cache manager [1], get [306 calls, total 0.17 sec spent, avg 0.56 ms]
17.02 04:58:09 STATS: cache manager [1], update [418 calls, total 0.03 sec spent, avg 0.08 ms]
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:58:09 TIME: core/cache.get : 1.14 ms
17.02 04:58:09 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:58:09 STATS: cache [questdata], get [138 calls, 11 cache hits, 127 cache misses, 0 same version, 1 not found]
17.02 04:58:09 STATS: cache [questdata], segments [574 calls, 298 hits, 275 misses]
17.02 04:58:09 STATS: cache [questdata], database [566126 calls, 127 reads, 135 writes]
17.02 04:58:09 STATS: cache [questdata], lock [139 calls, 139 attempts, 0 failures]
17.02 04:58:09 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:58:09 TIME: core/cache.get : 0.65 ms
17.02 04:58:09 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:58:09 TIME: core/user.loginPost : 0.06 ms
17.02 04:58:09 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:58:09 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:58:09 TIME: core/server.query : 0.57 ms
17.02 04:58:09 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:58:09 STATS: cache [battle], get [692 calls, 523 cache hits, 168 cache misses, 0 same version, 115 not found]
17.02 04:58:09 STATS: cache [battle], segments [1067 calls, 898 hits, 168 misses]
17.02 04:58:09 STATS: cache [battle], database [566126 calls, 168 reads, 290 writes]
17.02 04:58:09 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:58:09 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:58:09 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:58:09 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:58:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:58:09 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:58:09 TIME: core/cache.update : 0.09 ms
17.02 04:58:09 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:58:09 TIME: core/cache.update : 0.07 ms
17.02 04:58:09 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:58:09 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:58:09 TIME: core/user.logoutPost : 0.06 ms
17.02 04:58:13 TIMER: Check tournaments...
17.02 04:58:13 DB: SELECT * FROM tournament
17.02 04:58:13 TIMER: Check tournaments: 0ms
17.02 04:58:14 TIMER: Check step...
17.02 04:58:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:14 TIMER: Check step: 0ms
17.02 04:58:15 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:58:15 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:58:19 TIMER: Check step...
17.02 04:58:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:19 TIMER: Check step: 0ms
17.02 04:58:24 TIMER: Check step...
17.02 04:58:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:24 TIMER: Check step: 0ms
17.02 04:58:25 BLOCKREMOVE: user 94 removed
17.02 04:58:25 BLOCKREMOVE: questdata 94 removed
17.02 04:58:27 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:58:27 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:58:27 TIME: core/server.query : 1.1 ms
17.02 04:58:27 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:58:27 TIME: core/user.isOnlineID : 0.06 ms
17.02 04:58:27 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:58:27 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:58:27 TIME: core/cache.get : 0.99 ms
17.02 04:58:27 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:58:27 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:58:27 TIME: core/cache.get : 0.57 ms
17.02 04:58:27 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:58:27 TIME: core/user.loginPost : 0.06 ms
17.02 04:58:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:58:27 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:58:27 TIME: core/server.query : 0.48 ms
17.02 04:58:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:58:27 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:58:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:58:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:58:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:58:27 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:58:27 TIME: core/cache.update : 0.09 ms
17.02 04:58:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:58:27 TIME: core/cache.update : 0.07 ms
17.02 04:58:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:58:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:58:27 TIME: core/user.logoutPost : 0.05 ms
17.02 04:58:29 TIMER: Check step...
17.02 04:58:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:29 TIMER: Check step: 0ms
17.02 04:58:32 TIMER: Check round...
17.02 04:58:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:58' OR rounddate = '2017-17-02 07:58' AND status <> 'finished'
17.02 04:58:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.51224416' AND avaliable = false AND finished <> true
17.02 04:58:32 TIMER: Check round: 1ms
17.02 04:58:33 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:58:33 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:58:33 TIMER: Clans cache...
17.02 04:58:33 TIMER: Clans cache: 0ms
17.02 04:58:33 TIMER: Check tournaments...
17.02 04:58:33 DB: SELECT * FROM tournament
17.02 04:58:33 TIMER: Check tournaments: 0ms
17.02 04:58:34 TIMER: Check step...
17.02 04:58:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:34 TIMER: Check step: 0ms
17.02 04:58:39 TIMER: Check step...
17.02 04:58:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:39 TIMER: Check step: 0ms
17.02 04:58:43 BLOCKREMOVE: user 94 removed
17.02 04:58:43 BLOCKREMOVE: questdata 94 removed
17.02 04:58:44 TIMER: Check step...
17.02 04:58:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:44 TIMER: Check step: 0ms
17.02 04:58:49 TIMER: Check step...
17.02 04:58:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:49 TIMER: Check step: 0ms
17.02 04:58:53 TIMER: Check tournaments...
17.02 04:58:53 DB: SELECT * FROM tournament
17.02 04:58:53 TIMER: Check tournaments: 0ms
17.02 04:58:54 TIMER: Check step...
17.02 04:58:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:54 TIMER: Check step: 0ms
17.02 04:58:59 TIMER: Check step...
17.02 04:58:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:58:59 TIMER: Check step: 1ms
17.02 04:59:04 TIMER: Check step...
17.02 04:59:04 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:04 TIMER: Check step: 0ms
17.02 04:59:09 TIMER: Check step...
17.02 04:59:09 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:09 TIMER: Check step: 1ms
17.02 04:59:13 TIMER: Check tournaments...
17.02 04:59:13 DB: SELECT * FROM tournament
17.02 04:59:13 TIMER: Check tournaments: 0ms
17.02 04:59:14 TIMER: Check step...
17.02 04:59:14 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:14 TIMER: Check step: 0ms
17.02 04:59:19 TIMER: Check step...
17.02 04:59:19 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:19 TIMER: Check step: 0ms
17.02 04:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:59:19 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:59:19 TIME: core/server.query : 0.83 ms
17.02 04:59:19 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:59:19 TIME: core/user.isOnlineID : 0.05 ms
17.02 04:59:19 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:59:19 STATS: cache [user], get [217 calls, 69 cache hits, 148 cache misses, 0 same version, 0 not found]
17.02 04:59:19 STATS: cache [user], segments [839 calls, 522 hits, 296 misses]
17.02 04:59:19 STATS: cache [user], database [566196 calls, 148 reads, 208 writes]
17.02 04:59:19 STATS: cache [user], lock [192 calls, 192 attempts, 22 failures]
17.02 04:59:19 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:59:19 STATS: cache manager [1], get [310 calls, total 0.17 sec spent, avg 0.56 ms]
17.02 04:59:19 STATS: cache manager [1], update [422 calls, total 0.03 sec spent, avg 0.08 ms]
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:59:19 TIME: core/cache.get : 1.11 ms
17.02 04:59:19 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:59:19 STATS: cache [questdata], get [140 calls, 11 cache hits, 129 cache misses, 0 same version, 1 not found]
17.02 04:59:19 STATS: cache [questdata], segments [582 calls, 302 hits, 279 misses]
17.02 04:59:19 STATS: cache [questdata], database [566196 calls, 129 reads, 137 writes]
17.02 04:59:19 STATS: cache [questdata], lock [141 calls, 141 attempts, 0 failures]
17.02 04:59:19 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:59:19 TIME: core/cache.get : 0.62 ms
17.02 04:59:19 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:59:19 TIME: core/user.loginPost : 0.06 ms
17.02 04:59:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:59:19 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:59:19 TIME: core/server.query : 0.6 ms
17.02 04:59:19 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:59:19 STATS: cache [battle], get [694 calls, 523 cache hits, 170 cache misses, 0 same version, 117 not found]
17.02 04:59:19 STATS: cache [battle], segments [1069 calls, 898 hits, 170 misses]
17.02 04:59:19 STATS: cache [battle], database [566196 calls, 170 reads, 290 writes]
17.02 04:59:19 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.02 04:59:19 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:59:19 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:59:19 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:59:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:59:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:59:19 TIME: core/cache.update : 0.1 ms
17.02 04:59:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:59:19 TIME: core/cache.update : 0.09 ms
17.02 04:59:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:59:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:59:19 TIME: core/user.logoutPost : 0.07 ms
17.02 04:59:24 TIMER: Check step...
17.02 04:59:24 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:24 TIMER: Check step: 0ms
17.02 04:59:25 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:59:25 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:59:29 TIMER: Check step...
17.02 04:59:29 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:29 TIMER: Check step: 0ms
17.02 04:59:32 TIMER: Check round...
17.02 04:59:32 DB: SELECT * FROM tournament WHERE startdate = '2017-17-02 07:59' OR rounddate = '2017-17-02 07:59' AND status <> 'finished'
17.02 04:59:32 DB: SELECT * FROM battle WHERE endtime >= '1487325.57226974' AND avaliable = false AND finished <> true
17.02 04:59:32 TIMER: Check round: 1ms
17.02 04:59:33 TIMER: Clans cache...
17.02 04:59:33 TIMER: Clans cache: 0ms
17.02 04:59:33 TIMER: Check tournaments...
17.02 04:59:33 DB: SELECT * FROM tournament
17.02 04:59:33 TIMER: Check tournaments: 0ms
17.02 04:59:34 TIMER: Check step...
17.02 04:59:34 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:34 TIMER: Check step: 0ms
17.02 04:59:35 BLOCKREMOVE: user 94 removed
17.02 04:59:35 BLOCKREMOVE: questdata 94 removed
17.02 04:59:39 TIMER: Check step...
17.02 04:59:39 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:39 TIMER: Check step: 1ms
17.02 04:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:59:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:59:39 TIME: core/server.query : 1.18 ms
17.02 04:59:39 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:59:39 TIME: core/user.isOnlineID : 0.09 ms
17.02 04:59:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:59:39 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:59:39 TIME: core/cache.get : 1.47 ms
17.02 04:59:39 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:59:39 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:59:39 TIME: core/cache.get : 1 ms
17.02 04:59:39 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:59:39 TIME: core/user.loginPost : 0.06 ms
17.02 04:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:59:39 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:59:39 TIME: core/server.query : 0.45 ms
17.02 04:59:39 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:59:39 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:59:39 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:59:39 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:59:39 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:59:39 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:59:39 TIME: core/cache.update : 0.09 ms
17.02 04:59:39 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:59:39 TIME: core/cache.update : 0.06 ms
17.02 04:59:39 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:59:39 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:59:39 TIME: core/user.logoutPost : 0.04 ms
17.02 04:59:44 TIMER: Check step...
17.02 04:59:44 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:44 TIMER: Check step: 0ms
17.02 04:59:45 WRITEDB: UPDATE Users SET name = E'uid94', money = E'0', deleted = E'false', year = E'', email = E'', networktype = E'  ', password = E'uid94', isbanned = E'false', regdate = E'2017-02-17 04:33:42.918653-05', city = E'', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1487324022,"lastLoginDate":48,"lastLoadDate":218},"effects":{"list":[]}}' WHERE ID = 94
17.02 04:59:45 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 94
17.02 04:59:49 TIMER: Check step...
17.02 04:59:49 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:49 TIMER: Check step: 0ms
17.02 04:59:53 TIMER: Check tournaments...
17.02 04:59:53 DB: SELECT * FROM tournament
17.02 04:59:53 TIMER: Check tournaments: 1ms
17.02 04:59:54 TIMER: Check step...
17.02 04:59:54 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:54 TIMER: Check step: 0ms
17.02 04:59:55 BLOCKREMOVE: user 94 removed
17.02 04:59:55 BLOCKREMOVE: questdata 94 removed
17.02 04:59:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94', _type => core/server.query }
17.02 04:59:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid94' AND Password = E'uid94'
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid94, networkid => , isbanned => false, id => 94 }}, errorCode => ok, _type => core/server.query }
17.02 04:59:55 TIME: core/server.query : 0.97 ms
17.02 04:59:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 94, _type => core/user.isOnlineID }
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.02 04:59:55 TIME: core/user.isOnlineID : 0.06 ms
17.02 04:59:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 94, _type => core/cache.get }
17.02 04:59:55 READDB: SELECT * FROM Users WHERE ID = 94
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid94, money => 0, deleted => false, year => , email => , networktype =>   , password => uid94, isbanned => false, regdate => 2017-02-17 04:33:42.918653-05, city => , language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1487324022, lastLoginDate => 48, lastLoadDate => 218 }, effects => { list => [] } }}, version => 0, id => 94 } }
17.02 04:59:55 TIME: core/cache.get : 0.96 ms
17.02 04:59:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 94, _type => core/cache.get }
17.02 04:59:55 READDB: SELECT * FROM UserQuests WHERE ID = 94
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 94 } }
17.02 04:59:55 TIME: core/cache.get : 0.64 ms
17.02 04:59:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 94, _type => core/user.loginPost, ipAddr => 91.225.76.192 }
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.02 04:59:55 TIME: core/user.loginPost : 0.06 ms
17.02 04:59:55 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true, _type => core/server.query }
17.02 04:59:55 DB: SELECT id FROM battle WHERE firstid=94 OR secondid=94 AND finished <> true
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.02 04:59:55 TIME: core/server.query : 0.48 ms
17.02 04:59:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.02 04:59:55 READDB: SELECT * FROM Battle WHERE ID = 0
17.02 04:59:55 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.02 04:59:55 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 259
Called from modules/VDLCache.hx line 252
Called from modules/VDLCache.hx line 187
Called from snipe/cache/CacheServer.hx line 487
17.02 04:59:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.02 04:59:55 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => true, id => 94, _type => core/cache.update }
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:59:55 TIME: core/cache.update : 0.12 ms
17.02 04:59:55 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 94, _type => core/cache.update }
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.02 04:59:55 TIME: core/cache.update : 0.07 ms
17.02 04:59:55 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 94, _type => core/user.logoutPost }
17.02 04:59:55 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.02 04:59:55 TIME: core/user.logoutPost : 0.05 ms
17.02 04:59:59 TIMER: Check step...
17.02 04:59:59 DB: SELECT * FROM battle WHERE avaliable = false AND finished <> true AND steptime <> -1
17.02 04:59:59 TIMER: Check step: 0ms
